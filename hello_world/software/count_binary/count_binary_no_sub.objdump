
count_binary.elf:     file format elf32-littlenios2
count_binary.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800238

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00011308 memsz 0x00011308 flags r-x
    LOAD off    0x00012328 vaddr 0x00811328 paddr 0x00812f14 align 2**12
         filesz 0x00001bec memsz 0x00001bec flags rw-
    LOAD off    0x00014b00 vaddr 0x00814b00 paddr 0x00814b00 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010a38  00800238  00800238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006b8  00810c70  00810c70  00011c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bec  00811328  00812f14  00012328  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00814b00  00814b00  00014b00  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00814c58  00814c58  00013f14  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  00013f14  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001128  00000000  00000000  00013f40  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0004eac9  00000000  00000000  00015068  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00010342  00000000  00000000  00063b31  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001bca3  00000000  00000000  00073e73  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002554  00000000  00000000  0008fb18  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000453a  00000000  00000000  0009206c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00020423  00000000  00000000  000965a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000b69cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00002290  00000000  00000000  000b6a00  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000bc212  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000bc215  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000bc218  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000bc219  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000bc21a  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000bc21e  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000bc222  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000bc226  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000bc22f  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000bc238  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  000bc241  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003e  00000000  00000000  000bc253  2**0
                  CONTENTS, READONLY
 29 .jdi          00005099  00000000  00000000  000bc291  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003b0ff  00000000  00000000  000c132a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800238 l    d  .text	00000000 .text
00810c70 l    d  .rodata	00000000 .rodata
00811328 l    d  .rwdata	00000000 .rwdata
00814b00 l    d  .bss	00000000 .bss
00814c58 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../count_binary_bsp//obj/HAL/src/crt0.o
00800280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 count_binary.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00803818 l     F .text	000000c0 __sbprintf
00810e30 l     O .rodata	00000010 blanks.5176
00810e20 l     O .rodata	00000010 zeroes.5177
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00803a34 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00805654 l     F .text	00000008 __fp_lock
00805668 l     F .text	00000168 __sinit.part.0
008057d0 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00811328 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810ee4 l     O .rodata	0000000c p05.3991
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
008089c8 l     F .text	000000f4 __sprint_r.part.0
00809e04 l     F .text	000000c0 __sbprintf
00811018 l     O .rodata	00000010 blanks.5153
00811008 l     O .rodata	00000010 zeroes.5154
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
0080a9e8 l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080e29c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080e3b4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080e418 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0080e530 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0080e61c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080e784 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080e870 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080ea50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00812f04 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_times.c
0080ee68 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080ef1c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080f05c l     F .text	00000034 alt_dev_reg
00811e68 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080f354 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080f560 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080fba4 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080fe24 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0081029c l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
008103ec l     F .text	0000003c alt_get_errno
00810428 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00814b2c g     O .bss	00000004 alt_instruction_exception_handler
00808190 g     F .text	00000070 _mprec_log10
0080826c g     F .text	00000060 __any_on
0080a47c g     F .text	00000058 _isatty_r
00810ef0 g     O .rodata	00000028 __mprec_tinytens
0080e98c g     F .text	0000007c alt_main
0080159c g     F .text	000000cc _puts_r
00814b58 g     O .bss	00000100 alt_irq
0080a56c g     F .text	00000064 _lseek_r
00812f14 g       *ABS*	00000000 __flash_rwdata_start
0080cd40 g     F .text	00000080 .hidden __eqdf2
00814c58 g       *ABS*	00000000 __alt_heap_start
00812ed0 g     O .rwdata	00000004 c_term1
0080ac9c g     F .text	00000060 _kill_r
00801564 g     F .text	00000038 printf
0080a8a0 g     F .text	0000006c _wcrtomb_r
0080aa48 g     F .text	00000084 _signal_r
00808964 g     F .text	0000005c __sseek
00805960 g     F .text	00000010 __sinit
0080a740 g     F .text	00000148 __swbuf_r
0080a4d4 g     F .text	00000074 _setlocale_r
008057d8 g     F .text	00000078 __sfmoreglue
0080ea2c g     F .text	00000024 __malloc_unlock
00806f78 g     F .text	0000012c memmove
0080594c g     F .text	00000014 _cleanup
00807194 g     F .text	000000a4 _Balloc
0080cdc0 g     F .text	000000f0 .hidden __gtdf2
00810664 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0080eea4 g     F .text	00000078 times
008063cc g     F .text	00000008 __localeconv_l
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080a41c g     F .text	00000060 _fstat_r
00814b0c g     O .bss	00000004 errno
008088dc g     F .text	00000008 __seofread
00814b18 g     O .bss	00000004 alt_argv
0081aec8 g       *ABS*	00000000 _gp
00800f38 g     F .text	00000484 .hidden __subsf3
0080e510 g     F .text	00000020 getpid
00811ce8 g     O .rwdata	00000180 alt_fd_list
00810688 g     F .text	00000090 alt_find_dev
00806e78 g     F .text	00000100 memcpy
0080565c g     F .text	0000000c _cleanup_r
0080e150 g     F .text	000000bc .hidden __floatsidf
00810370 g     F .text	0000007c alt_io_redirect
0080ceb0 g     F .text	000000f0 .hidden __ltdf2
00810c70 g       *ABS*	00000000 __DTOR_END__
00801668 g     F .text	00000010 puts
00810968 g     F .text	00000098 alt_exception_cause_generated_bad_addr
008080ec g     F .text	000000a4 __ratio
00809de8 g     F .text	0000001c __vfiprintf_internal
0080f75c g     F .text	00000220 altera_avalon_jtag_uart_read
00801534 g     F .text	00000030 _printf_r
0080b9d4 g     F .text	00000064 .hidden __udivsi3
0080e56c g     F .text	000000b0 isatty
0080aacc g     F .text	000000c4 _raise_r
00809f80 g     F .text	00000064 __assert_func
00810f40 g     O .rodata	000000c8 __mprec_tens
008108d8 g     F .text	00000090 alt_icache_flush
00814b08 g     O .bss	00000004 __malloc_top_pad
0080acfc g     F .text	00000004 _getpid_r
008063d4 g     F .text	0000000c _localeconv_r
00807604 g     F .text	00000054 __i2b
00805dc0 g     F .text	000004cc __sfvwrite_r
0080ab90 g     F .text	000000b8 __sigtramp_r
00808830 g     F .text	00000058 _sbrk_r
0080a620 g     F .text	00000064 _read_r
00812efc g     O .rwdata	00000004 alt_max_fd
0080a0bc g     F .text	000000f8 _fclose_r
0080562c g     F .text	00000028 fflush
00814b04 g     O .bss	00000004 __malloc_max_sbrked_mem
008013bc g     F .text	000000fc .hidden __extendsfdf2
0080ba94 g     F .text	00000978 .hidden __adddf3
00807e84 g     F .text	00000104 __b2d
0080b31c g     F .text	000005c4 .hidden __umoddi3
0080e8ac g     F .text	000000e0 lseek
00812edc g     O .rwdata	00000004 _global_impure_ptr
008082cc g     F .text	00000564 _realloc_r
00814c58 g       *ABS*	00000000 __bss_end
008101b4 g     F .text	000000e8 alt_iic_isr_register
0080ed60 g     F .text	00000108 alt_tick
0080ad00 g     F .text	0000061c .hidden __udivdi3
0080a380 g     F .text	00000024 _fputwc_r
00810f18 g     O .rodata	00000028 __mprec_bigtens
008073b8 g     F .text	00000138 __s2b
0080a9d0 g     F .text	00000018 abort
0080e20c g     F .text	00000090 .hidden __floatunsidf
00807ba4 g     F .text	00000058 __mcmp
00805980 g     F .text	00000014 __fp_lock_all
00810168 g     F .text	0000004c alt_ic_irq_enabled
0080ecbc g     F .text	000000a4 alt_alarm_stop
00814b28 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000c8 alt_irq_handler
00811cc0 g     O .rwdata	00000028 alt_dev_null
0080fdd8 g     F .text	0000004c alt_dcache_flush_all
008074f0 g     F .text	00000064 __hi0bits
0080e0d0 g     F .text	00000080 .hidden __fixdfsi
00812f14 g       *ABS*	00000000 __ram_rwdata_end
00812ef4 g     O .rwdata	00000008 alt_dev_list
0080ef58 g     F .text	00000104 write
00811328 g       *ABS*	00000000 __ram_rodata_end
0080e454 g     F .text	000000bc fstat
0080e658 g     F .text	0000012c kill
0080ceb0 g     F .text	000000f0 .hidden __ledf2
00800358 g     F .text	00000160 theFunction
00807904 g     F .text	00000118 __pow5mult
00808ad4 g     F .text	00001314 ___vfiprintf_internal_r
0080ba38 g     F .text	0000005c .hidden __umodsi3
00814c58 g       *ABS*	00000000 end
0080f294 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
00810c70 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080fc20 g     F .text	00000084 alt_avalon_timer_sc_init
008014b8 g     F .text	00000054 .hidden __clzsi2
0080f97c g     F .text	00000228 altera_avalon_jtag_uart_write
00805970 g     F .text	00000004 __sfp_lock_acquire
00806da4 g     F .text	000000d4 memchr
00801710 g     F .text	000020ec ___vfprintf_internal_r
00805ac4 g     F .text	000002fc _free_r
0081117c g     O .rodata	00000180 _ctype_b
0080a548 g     F .text	0000000c __locale_mb_cur_max
00810b50 g     F .text	00000120 __call_exitprocs
00812ee4 g     O .rwdata	00000004 __malloc_sbrk_base
00800238 g     F .text	0000004c _start
00814b20 g     O .bss	00000004 _alt_tick_rate
00807a1c g     F .text	00000188 __lshift
00814b24 g     O .bss	00000004 _alt_nticks
0080ac58 g     F .text	00000018 signal
0080ea8c g     F .text	00000108 read
0080f0cc g     F .text	00000064 alt_sys_init
00810ac0 g     F .text	00000090 __register_exitproc
00807658 g     F .text	000002ac __multiply
0080f600 g     F .text	00000068 altera_avalon_jtag_uart_close
0080150c g     F .text	00000028 .hidden __mulsi3
00811328 g       *ABS*	00000000 __ram_rwdata_start
00810c70 g       *ABS*	00000000 __ram_rodata_start
00814b30 g     O .bss	00000028 __malloc_current_mallinfo
00807f88 g     F .text	00000164 __d2b
00812ecc g     O .rwdata	00000004 c_term2
0080f130 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00810820 g     F .text	000000b8 alt_get_fd
00809f28 g     F .text	00000058 _close_r
00800284 g     F .text	0000004c generateVector
00810a48 g     F .text	00000078 memcmp
0080f1f0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00814c58 g       *ABS*	00000000 __alt_stack_base
0080f240 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
008038d8 g     F .text	0000015c __swsetup_r
0080c40c g     F .text	00000934 .hidden __divdf3
00805850 g     F .text	000000fc __sfp
00808200 g     F .text	0000006c __copybits
0081174c g     O .rwdata	00000408 __malloc_av_
0080597c g     F .text	00000004 __sinit_lock_release
0080cfa0 g     F .text	000007a8 .hidden __muldf3
00808888 g     F .text	00000054 __sread
00810718 g     F .text	00000108 alt_find_file
0080fe60 g     F .text	000000a8 alt_dev_llist_insert
0080ea08 g     F .text	00000024 __malloc_lock
0080ec04 g     F .text	000000b8 sbrk
008055cc g     F .text	00000060 _fflush_r
00809ff8 g     F .text	000000c4 _calloc_r
00814b00 g       *ABS*	00000000 __bss_start
008070a4 g     F .text	000000f0 memset
008004b8 g     F .text	00000228 main
00814b1c g     O .bss	00000004 alt_envp
00814b00 g     O .bss	00000004 __malloc_max_total_mem
0080f190 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080a888 g     F .text	00000018 __swbuf
008089c0 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080a1b4 g     F .text	00000010 fclose
00803c54 g     F .text	00001750 _dtoa_r
008065c4 g     F .text	000007e0 _malloc_r
0080a9a0 g     F .text	00000030 __ascii_wctomb
00812f00 g     O .rwdata	00000004 alt_errno
0080a1c4 g     F .text	00000020 _fiprintf_r
0080ac70 g     F .text	0000001c _init_signal
0080628c g     F .text	00000098 _fwalk
0080a5d0 g     F .text	0000000c _mbtowc_r
0080b8e0 g     F .text	00000080 .hidden __divsi3
008059a8 g     F .text	0000011c _malloc_trim_r
00810c70 g       *ABS*	00000000 __CTOR_END__
00800b3c g     F .text	000003fc .hidden __mulsf3
0080a684 g     F .text	000000b8 strcmp
00810c70 g       *ABS*	00000000 __flash_rodata_start
00810c70 g       *ABS*	00000000 __DTOR_LIST__
0080cd40 g     F .text	00000080 .hidden __nedf2
0080f090 g     F .text	0000003c alt_irq_init
0080eb94 g     F .text	00000070 alt_release_fd
00810cdc g     O .rodata	00000100 .hidden __clz_tab
00814b10 g     O .bss	00000004 _PathLocale
00810a00 g     F .text	00000014 atexit
008002d0 g     F .text	00000088 sumVector
00809ec4 g     F .text	00000064 _write_r
00812ed4 g     O .rwdata	00000004 coeff2
0080a554 g     F .text	00000018 setlocale
00812ee0 g     O .rwdata	00000004 _impure_ptr
00814b14 g     O .bss	00000004 alt_argc
008053a4 g     F .text	00000228 __sflush_r
0080ff6c g     F .text	00000064 _do_dtors
00812ec8 g     O .rwdata	00000004 c_term3
00800020 g       .exceptions	00000000 alt_irq_entry
0080a5dc g     F .text	00000044 __ascii_mbtowc
00807e28 g     F .text	0000005c __ulp
00805994 g     F .text	00000014 __fp_unlock_all
00812eec g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
008063e0 g     F .text	0000000c localeconv
008063ec g     F .text	00000098 __swhatbuf_r
00810004 g     F .text	00000050 alt_ic_isr_register
00812f14 g       *ABS*	00000000 _edata
00814c58 g       *ABS*	00000000 _end
0080a21c g     F .text	00000164 __fputwc
00800238 g       *ABS*	00000000 __ram_exceptions_end
0080f668 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
008100dc g     F .text	0000008c alt_ic_irq_disable
008088e4 g     F .text	00000080 __swrite
00812ee8 g     O .rwdata	00000004 __malloc_trim_threshold
00810a14 g     F .text	00000034 exit
0080a1e4 g     F .text	00000038 fiprintf
0080a73c g     F .text	00000004 _vfiprintf_r
00806324 g     F .text	000000a8 _fwalk_reent
00807bfc g     F .text	0000022c __mdiff
0080b960 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00805974 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00811078 g     O .rodata	00000101 _ctype_
0080e07c g     F .text	00000054 .hidden __unorddf2
0080e3e0 g     F .text	00000038 _exit
0080fca4 g     F .text	00000134 alt_alarm_start
00806484 g     F .text	00000140 __smakebuf_r
00801678 g     F .text	00000098 strlen
0080aa34 g     F .text	00000014 _init_signal_r
00810504 g     F .text	00000160 open
0080cdc0 g     F .text	000000f0 .hidden __gedf2
00809fe4 g     F .text	00000014 __assert
00808abc g     F .text	00000018 __sprint_r
0080ffd0 g     F .text	00000034 alt_icache_flush_all
00812f10 g     O .rwdata	00000004 alt_priority_mask
00810054 g     F .text	00000088 alt_ic_irq_enable
008037fc g     F .text	0000001c __vfprintf_internal
0080a994 g     F .text	0000000c _wctomb_r
0080d748 g     F .text	00000934 .hidden __subdf3
00807554 g     F .text	000000b0 __lo0bits
00812f08 g     O .rwdata	00000008 alt_alarm_list
0080ff08 g     F .text	00000064 _do_ctors
0080ac8c g     F .text	00000010 __sigtramp
0080a90c g     F .text	00000088 wcrtomb
00812ed8 g     O .rwdata	00000004 coeff1
0080e2d8 g     F .text	000000dc close
008006e0 g     F .text	0000045c .hidden __addsf3
00811b54 g     O .rwdata	0000016c __global_locale
0080e7ec g     F .text	00000084 alt_load
0080a3a4 g     F .text	00000078 fputwc
0080ac48 g     F .text	00000010 raise
00805978 g     F .text	00000004 __sinit_lock_acquire
0080725c g     F .text	0000015c __multadd
00807238 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08408e14 	ori	at,at,568
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001c40 	call	8001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0ffff17 	ldw	r3,-4(fp)
  800130:	e0bffe17 	ldw	r2,-8(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001126 	beq	r2,zero,800180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	e0bffd17 	ldw	r2,-12(fp)
  800140:	100690fa 	slli	r3,r2,3
  800144:	00802074 	movhi	r2,129
  800148:	1885883a 	add	r2,r3,r2
  80014c:	10d2d617 	ldw	r3,19288(r2)
  800150:	e0bffd17 	ldw	r2,-12(fp)
  800154:	100890fa 	slli	r4,r2,3
  800158:	00802074 	movhi	r2,129
  80015c:	2085883a 	add	r2,r4,r2
  800160:	1092d717 	ldw	r2,19292(r2)
  800164:	1009883a 	mov	r4,r2
  800168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  80016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  800170:	0005313a 	rdctl	r2,ipending
  800174:	e0bffb15 	stw	r2,-20(fp)
  return active;
  800178:	e0bffb17 	ldw	r2,-20(fp)
  80017c:	00000706 	br	80019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
  800180:	e0bffe17 	ldw	r2,-8(fp)
  800184:	1085883a 	add	r2,r2,r2
  800188:	e0bffe15 	stw	r2,-8(fp)
      i++;
  80018c:	e0bffd17 	ldw	r2,-12(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  800198:	003fe406 	br	80012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  80019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  8001a0:	e0bfff17 	ldw	r2,-4(fp)
  8001a4:	103fde1e 	bne	r2,zero,800120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a8:	0001883a 	nop
}
  8001ac:	0001883a 	nop
  8001b0:	e037883a 	mov	sp,fp
  8001b4:	dfc00117 	ldw	ra,4(sp)
  8001b8:	df000017 	ldw	fp,0(sp)
  8001bc:	dec00204 	addi	sp,sp,8
  8001c0:	f800283a 	ret

008001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001c4:	defffb04 	addi	sp,sp,-20
  8001c8:	dfc00415 	stw	ra,16(sp)
  8001cc:	df000315 	stw	fp,12(sp)
  8001d0:	df000304 	addi	fp,sp,12
  8001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001d8:	000531fa 	rdctl	r2,exception
  8001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001e0:	e0bfff17 	ldw	r2,-4(fp)
  8001e4:	1004d0ba 	srli	r2,r2,2
  8001e8:	108007cc 	andi	r2,r2,31
  8001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001f0:	0005333a 	rdctl	r2,badaddr
  8001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001f8:	d0a71917 	ldw	r2,-25500(gp)
  8001fc:	10000726 	beq	r2,zero,80021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800200:	d0a71917 	ldw	r2,-25500(gp)
  800204:	e0ffff17 	ldw	r3,-4(fp)
  800208:	e1bffe17 	ldw	r6,-8(fp)
  80020c:	e17ffd17 	ldw	r5,-12(fp)
  800210:	1809883a 	mov	r4,r3
  800214:	103ee83a 	callr	r2
  800218:	00000206 	br	800224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  80021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800220:	0005883a 	mov	r2,zero
}
  800224:	e037883a 	mov	sp,fp
  800228:	dfc00117 	ldw	ra,4(sp)
  80022c:	df000017 	ldw	fp,0(sp)
  800230:	dec00204 	addi	sp,sp,8
  800234:	f800283a 	ret

Disassembly of section .text:

00800238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  80023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800244:	00bffd16 	blt	zero,r2,80023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800248:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  80024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800250:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800254:	d6abb214 	ori	gp,gp,44744
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800258:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  80025c:	1092c014 	ori	r2,r2,19200

    movhi r3, %hi(__bss_end)
  800260:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800264:	18d31614 	ori	r3,r3,19544

    beq r2, r3, 1f
  800268:	10c00326 	beq	r2,r3,800278 <_start+0x40>

0:
    stw zero, (r2)
  80026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800274:	10fffd36 	bltu	r2,r3,80026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800278:	080e7ec0 	call	80e7ec <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  80027c:	080e98c0 	call	80e98c <alt_main>

00800280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800280:	003fff06 	br	800280 <alt_after_alt_main>

00800284 <generateVector>:

#else

// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
  800284:	defffd04 	addi	sp,sp,-12
  800288:	dc400115 	stw	r17,4(sp)
  80028c:	dc000015 	stw	r16,0(sp)
  800290:	dfc00215 	stw	ra,8(sp)
  int i;
  x[0] = 0;
  800294:	20000015 	stw	zero,0(r4)
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  800298:	24000104 	addi	r16,r4,4
  80029c:	2447f904 	addi	r17,r4,8164
  x[0] = 0;
  8002a0:	0005883a 	mov	r2,zero
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  8002a4:	1009883a 	mov	r4,r2
  8002a8:	014f8034 	movhi	r5,15872
  8002ac:	08006e00 	call	8006e0 <__addsf3>
  8002b0:	80800015 	stw	r2,0(r16)
  8002b4:	84000104 	addi	r16,r16,4
  8002b8:	847ffa1e 	bne	r16,r17,8002a4 <generateVector+0x20>
}
  8002bc:	dfc00217 	ldw	ra,8(sp)
  8002c0:	dc400117 	ldw	r17,4(sp)
  8002c4:	dc000017 	ldw	r16,0(sp)
  8002c8:	dec00304 	addi	sp,sp,12
  8002cc:	f800283a 	ret

008002d0 <sumVector>:

#endif

float sumVector(float x[0], int M)
{
  8002d0:	defffb04 	addi	sp,sp,-20
  8002d4:	dfc00415 	stw	ra,16(sp)
  8002d8:	dcc00315 	stw	r19,12(sp)
  8002dc:	dc800215 	stw	r18,8(sp)
  8002e0:	dc400115 	stw	r17,4(sp)
  8002e4:	dc000015 	stw	r16,0(sp)
  float sum = 0;
  int i = 0;
  for (; i < M; i++) 
  8002e8:	0140190e 	bge	zero,r5,800350 <sumVector+0x80>
  8002ec:	280a90ba 	slli	r5,r5,2
  8002f0:	2021883a 	mov	r16,r4
  float sum = 0;
  8002f4:	0023883a 	mov	r17,zero
  8002f8:	2167883a 	add	r19,r4,r5
  {
    sum += (x[i] + x[i] * x[i]);
  8002fc:	84800017 	ldw	r18,0(r16)
  800300:	014fe034 	movhi	r5,16256
  800304:	84000104 	addi	r16,r16,4
  800308:	9009883a 	mov	r4,r18
  80030c:	08006e00 	call	8006e0 <__addsf3>
  800310:	900b883a 	mov	r5,r18
  800314:	1009883a 	mov	r4,r2
  800318:	0800b3c0 	call	800b3c <__mulsf3>
  80031c:	8809883a 	mov	r4,r17
  800320:	100b883a 	mov	r5,r2
  800324:	08006e00 	call	8006e0 <__addsf3>
  800328:	1023883a 	mov	r17,r2
  for (; i < M; i++) 
  80032c:	9c3ff31e 	bne	r19,r16,8002fc <sumVector+0x2c>
  }

  return sum;
}
  800330:	8805883a 	mov	r2,r17
  800334:	dfc00417 	ldw	ra,16(sp)
  800338:	dcc00317 	ldw	r19,12(sp)
  80033c:	dc800217 	ldw	r18,8(sp)
  800340:	dc400117 	ldw	r17,4(sp)
  800344:	dc000017 	ldw	r16,0(sp)
  800348:	dec00504 	addi	sp,sp,20
  80034c:	f800283a 	ret
  float sum = 0;
  800350:	0023883a 	mov	r17,zero
  return sum;
  800354:	003ff606 	br	800330 <sumVector+0x60>

00800358 <theFunction>:
// constant coefficient division
const float coeff1 = 0.5, coeff2 = 1 / 128.0f;
// taylor series terms 
const float c_term1 = 1/2.0, c_term2 = 1 / 24.0f, c_term3 = 1/40320.0;

float theFunction(float x[0], int M) {
  800358:	defff704 	addi	sp,sp,-36
  80035c:	dfc00815 	stw	ra,32(sp)
  800360:	ddc00715 	stw	r23,28(sp)
  800364:	dd800615 	stw	r22,24(sp)
  800368:	dd400515 	stw	r21,20(sp)
  80036c:	dd000415 	stw	r20,16(sp)
  800370:	dcc00315 	stw	r19,12(sp)
  800374:	dc800215 	stw	r18,8(sp)
  800378:	dc400115 	stw	r17,4(sp)
  80037c:	dc000015 	stw	r16,0(sp)
  float sum = 0;
  int i = 0;
  for (; i < M; i++) 
  800380:	01403c0e 	bge	zero,r5,800474 <theFunction+0x11c>
  800384:	280a90ba 	slli	r5,r5,2
  {
    const float diff = x[i] + -128.0f;

    // const __uint32_t float_int = *(int*)&diff;
    // const __uint32_t new_exp = ((*(int*)&diff >> 23) & 0xff) - 7;
    const __uint32_t new_float = DividePow2(diff, 7);
  800388:	05202034 	movhi	r20,32896
  80038c:	054f4af4 	movhi	r21,15659
  800390:	2021883a 	mov	r16,r4
  800394:	2167883a 	add	r19,r4,r5
  float sum = 0;
  800398:	0023883a 	mov	r17,zero
    const __uint32_t new_float = DividePow2(diff, 7);
  80039c:	a53fffc4 	addi	r20,r20,-1
  8003a0:	ad6aaac4 	addi	r21,r21,-21845
  8003a4:	00002a06 	br	800450 <theFunction+0xf8>
  8003a8:	19403fcc 	andi	r5,r3,255
  8003ac:	297ffe44 	addi	r5,r5,-7
  8003b0:	280a95fa 	slli	r5,r5,23
  8003b4:	290ab03a 	or	r5,r5,r4
  //     printf("original n: %x %f\n", float_int, diff );
  //     printf("custom div: %x %f exp: %u %u \n", new_float, cos_term, new_exp, (float_int >> 23) & 0xff);
  //     printf("real div:   %x %f exp: %u \n", *(int*)&actual_cos, actual_cos,  ((*(int*)&actual_cos) >> 23) & 0xff);
  // }
    // const float cos_term = diff * coeff2;
    const float cos_2 = cos_term * cos_term;
  8003b8:	2809883a 	mov	r4,r5
  8003bc:	0800b3c0 	call	800b3c <__mulsf3>
    const float cos_4 = cos_2 * cos_2;
  8003c0:	100b883a 	mov	r5,r2
  8003c4:	1009883a 	mov	r4,r2
    const float cos_2 = cos_term * cos_term;
  8003c8:	102d883a 	mov	r22,r2
    const float cos_4 = cos_2 * cos_2;
  8003cc:	0800b3c0 	call	800b3c <__mulsf3>
  8003d0:	a80b883a 	mov	r5,r21
  8003d4:	1009883a 	mov	r4,r2
  8003d8:	0800b3c0 	call	800b3c <__mulsf3>
  8003dc:	1009883a 	mov	r4,r2
  8003e0:	014fe034 	movhi	r5,16256
  8003e4:	08006e00 	call	8006e0 <__addsf3>
    // const float cos_6 = cos_4 * cos_2;

     __uint32_t term1_int =  DividePow2(cos_2, 1);
  8003e8:	b00bd5fa 	srai	r5,r22,23
  8003ec:	b02f883a 	mov	r23,r22
  8003f0:	1009883a 	mov	r4,r2
  8003f4:	29403fcc 	andi	r5,r5,255
  8003f8:	297fffc4 	addi	r5,r5,-1
  8003fc:	280a95fa 	slli	r5,r5,23
  800400:	a5ac703a 	and	r22,r20,r22
  800404:	b8002826 	beq	r23,zero,8004a8 <theFunction+0x150>
  800408:	2d8ab03a 	or	r5,r5,r22
  80040c:	29600034 	orhi	r5,r5,32768
  800410:	08006e00 	call	8006e0 <__addsf3>
  800414:	1009883a 	mov	r4,r2
  800418:	900b883a 	mov	r5,r18
  80041c:	0800b3c0 	call	800b3c <__mulsf3>
  800420:	1009883a 	mov	r4,r2
     term1_int |= 0x80000000;
    const float term1 =  *(float*)&term1_int;

    const float cosine = 1 + term1  + cos_4 * c_term2;
    
    sum += (coeff1 * x[i] + (x[i] * x[i]) * cosine);
  800424:	014fc034 	movhi	r5,16128
  800428:	08006e00 	call	8006e0 <__addsf3>
  80042c:	900b883a 	mov	r5,r18
  800430:	1009883a 	mov	r4,r2
  800434:	0800b3c0 	call	800b3c <__mulsf3>
  800438:	8809883a 	mov	r4,r17
  80043c:	100b883a 	mov	r5,r2
  800440:	08006e00 	call	8006e0 <__addsf3>
  800444:	84000104 	addi	r16,r16,4
  800448:	1023883a 	mov	r17,r2
  for (; i < M; i++) 
  80044c:	9c000a26 	beq	r19,r16,800478 <theFunction+0x120>
    const float diff = x[i] + -128.0f;
  800450:	84800017 	ldw	r18,0(r16)
  800454:	0150c034 	movhi	r5,17152
  800458:	9009883a 	mov	r4,r18
  80045c:	0800f380 	call	800f38 <__subsf3>
    const __uint32_t new_float = DividePow2(diff, 7);
  800460:	1007d5fa 	srai	r3,r2,23
  800464:	a088703a 	and	r4,r20,r2
  800468:	103fcf1e 	bne	r2,zero,8003a8 <theFunction+0x50>
    const float diff = x[i] + -128.0f;
  80046c:	9009883a 	mov	r4,r18
  800470:	003fec06 	br	800424 <theFunction+0xcc>
  float sum = 0;
  800474:	0023883a 	mov	r17,zero
  }

  return sum;
}
  800478:	8805883a 	mov	r2,r17
  80047c:	dfc00817 	ldw	ra,32(sp)
  800480:	ddc00717 	ldw	r23,28(sp)
  800484:	dd800617 	ldw	r22,24(sp)
  800488:	dd400517 	ldw	r21,20(sp)
  80048c:	dd000417 	ldw	r20,16(sp)
  800490:	dcc00317 	ldw	r19,12(sp)
  800494:	dc800217 	ldw	r18,8(sp)
  800498:	dc400117 	ldw	r17,4(sp)
  80049c:	dc000017 	ldw	r16,0(sp)
  8004a0:	dec00904 	addi	sp,sp,36
  8004a4:	f800283a 	ret
  8004a8:	900b883a 	mov	r5,r18
  8004ac:	0800b3c0 	call	800b3c <__mulsf3>
  8004b0:	1009883a 	mov	r4,r2
  8004b4:	003fdb06 	br	800424 <theFunction+0xcc>

008004b8 <main>:

int main(int argc, char* argv[])
{
  const int numIterations = NUM_CASES;
  printf("Task 3!\n");
  8004b8:	01002074 	movhi	r4,129
{
  8004bc:	def7f904 	addi	sp,sp,-8220
  printf("Task 3!\n");
  8004c0:	21031c04 	addi	r4,r4,3184
{
  8004c4:	dfc80615 	stw	ra,8216(sp)
  8004c8:	dc87ff15 	stw	r18,8188(sp)
  8004cc:	dc07fd15 	stw	r16,8180(sp)
  8004d0:	df080515 	stw	fp,8212(sp)
  8004d4:	ddc80415 	stw	r23,8208(sp)
  8004d8:	dd880315 	stw	r22,8204(sp)
  8004dc:	dd480215 	stw	r21,8200(sp)
  8004e0:	dd080115 	stw	r20,8196(sp)
  8004e4:	dcc80015 	stw	r19,8192(sp)
  8004e8:	dc47fe15 	stw	r17,8184(sp)
  printf("Task 3!\n");
  8004ec:	08016680 	call	801668 <puts>
  printf("Ticks per second: %ld\n", alt_ticks_per_second());
  8004f0:	d1671617 	ldw	r5,-25512(gp)
  8004f4:	01002074 	movhi	r4,129
  8004f8:	21031e04 	addi	r4,r4,3192
  8004fc:	08015640 	call	801564 <printf>
  printf("Running %d tests\n", numIterations);
  800500:	01002074 	movhi	r4,129
  800504:	01400284 	movi	r5,10
  800508:	21032404 	addi	r4,r4,3216
  80050c:	08015640 	call	801564 <printf>
  x[0] = 0;
  800510:	dc000504 	addi	r16,sp,20
  800514:	d8000415 	stw	zero,16(sp)
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  800518:	dc87fd04 	addi	r18,sp,8180
  x[0] = 0;
  80051c:	0005883a 	mov	r2,zero
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  800520:	1009883a 	mov	r4,r2
  800524:	014f8034 	movhi	r5,15872
  800528:	08006e00 	call	8006e0 <__addsf3>
  80052c:	80800015 	stw	r2,0(r16)
  800530:	84000104 	addi	r16,r16,4
  800534:	943ffa1e 	bne	r18,r16,800520 <main+0x68>

  volatile clock_t exec_t1, exec_t2;

  // const int numIterations = 1 << TEST_REPEAT;

  exec_t1 = times(NULL);
  800538:	0009883a 	mov	r4,zero
  80053c:	080eea40 	call	80eea4 <times>
    const __uint32_t new_float = DividePow2(diff, 7);
  800540:	05202034 	movhi	r20,32896
  800544:	054f4af4 	movhi	r21,15659
  exec_t1 = times(NULL);
  800548:	d8800115 	stw	r2,4(sp)
  80054c:	05800284 	movi	r22,10
    const __uint32_t new_float = DividePow2(diff, 7);
  800550:	a53fffc4 	addi	r20,r20,-1
  800554:	ad6aaac4 	addi	r21,r21,-21845
  exec_t1 = times(NULL);
  800558:	dc000404 	addi	r16,sp,16
  float sum = 0;
  80055c:	0027883a 	mov	r19,zero
  800560:	00002a06 	br	80060c <main+0x154>
    const __uint32_t new_float = DividePow2(diff, 7);
  800564:	19403fcc 	andi	r5,r3,255
  800568:	297ffe44 	addi	r5,r5,-7
  80056c:	280a95fa 	slli	r5,r5,23
  800570:	290ab03a 	or	r5,r5,r4
    const float cos_2 = cos_term * cos_term;
  800574:	2809883a 	mov	r4,r5
  800578:	0800b3c0 	call	800b3c <__mulsf3>
    const float cos_4 = cos_2 * cos_2;
  80057c:	100b883a 	mov	r5,r2
  800580:	1009883a 	mov	r4,r2
    const float cos_2 = cos_term * cos_term;
  800584:	102f883a 	mov	r23,r2
    const float cos_4 = cos_2 * cos_2;
  800588:	0800b3c0 	call	800b3c <__mulsf3>
  80058c:	a80b883a 	mov	r5,r21
  800590:	1009883a 	mov	r4,r2
  800594:	0800b3c0 	call	800b3c <__mulsf3>
  800598:	1009883a 	mov	r4,r2
  80059c:	014fe034 	movhi	r5,16256
  8005a0:	08006e00 	call	8006e0 <__addsf3>
     __uint32_t term1_int =  DividePow2(cos_2, 1);
  8005a4:	b80bd5fa 	srai	r5,r23,23
  8005a8:	b839883a 	mov	fp,r23
  8005ac:	1009883a 	mov	r4,r2
  8005b0:	29403fcc 	andi	r5,r5,255
  8005b4:	297fffc4 	addi	r5,r5,-1
  8005b8:	280a95fa 	slli	r5,r5,23
  8005bc:	a5ee703a 	and	r23,r20,r23
  8005c0:	e0004226 	beq	fp,zero,8006cc <main+0x214>
  8005c4:	2dcab03a 	or	r5,r5,r23
  8005c8:	29600034 	orhi	r5,r5,32768
  8005cc:	08006e00 	call	8006e0 <__addsf3>
  8005d0:	1009883a 	mov	r4,r2
  8005d4:	880b883a 	mov	r5,r17
  8005d8:	0800b3c0 	call	800b3c <__mulsf3>
  8005dc:	1009883a 	mov	r4,r2
    sum += (coeff1 * x[i] + (x[i] * x[i]) * cosine);
  8005e0:	014fc034 	movhi	r5,16128
  8005e4:	08006e00 	call	8006e0 <__addsf3>
  8005e8:	880b883a 	mov	r5,r17
  8005ec:	1009883a 	mov	r4,r2
  8005f0:	0800b3c0 	call	800b3c <__mulsf3>
  8005f4:	9809883a 	mov	r4,r19
  8005f8:	100b883a 	mov	r5,r2
  8005fc:	08006e00 	call	8006e0 <__addsf3>
  800600:	84000104 	addi	r16,r16,4
  800604:	1027883a 	mov	r19,r2
  for (; i < M; i++) 
  800608:	84800926 	beq	r16,r18,800630 <main+0x178>
    const float diff = x[i] + -128.0f;
  80060c:	84400017 	ldw	r17,0(r16)
  800610:	0150c034 	movhi	r5,17152
  800614:	8809883a 	mov	r4,r17
  800618:	0800f380 	call	800f38 <__subsf3>
    const __uint32_t new_float = DividePow2(diff, 7);
  80061c:	1007d5fa 	srai	r3,r2,23
  800620:	a088703a 	and	r4,r20,r2
  800624:	103fcf1e 	bne	r2,zero,800564 <main+0xac>
    const float diff = x[i] + -128.0f;
  800628:	8809883a 	mov	r4,r17
  80062c:	003fec06 	br	8005e0 <main+0x128>
  int y1 = 0;
  // The code that you want to time goes here
  // for (int i = 0; i < (1 << TEST_REPEAT); i++) y = sumVector(x, N);
  for (int i = 0; i < numIterations; i++) {
    // if ((y = sumVector(x, N)) > 0) y1++;
    y = theFunction(x, N);
  800630:	d8800015 	stw	r2,0(sp)
  for (int i = 0; i < numIterations; i++) {
  800634:	b5bfffc4 	addi	r22,r22,-1
  800638:	b03fc71e 	bne	r22,zero,800558 <main+0xa0>
  }

  // till here
  exec_t2 = times(NULL);
  80063c:	0009883a 	mov	r4,zero
  800640:	080eea40 	call	80eea4 <times>
  800644:	d8800215 	stw	r2,8(sp)

  volatile int elapsedTicks = (int)(exec_t2 - exec_t1);
  800648:	d8800217 	ldw	r2,8(sp)
  80064c:	d8c00117 	ldw	r3,4(sp)
  printf("ElpasedTicks: %d\n", elapsedTicks);
  800650:	01002074 	movhi	r4,129
  800654:	21032904 	addi	r4,r4,3236
  volatile int elapsedTicks = (int)(exec_t2 - exec_t1);
  800658:	10c5c83a 	sub	r2,r2,r3
  80065c:	d8800315 	stw	r2,12(sp)
  printf("ElpasedTicks: %d\n", elapsedTicks);
  800660:	d9400317 	ldw	r5,12(sp)
  800664:	08015640 	call	801564 <printf>
  printf("RESULT: %f, %x\n", y, *(int*)(&y));
  800668:	d9000017 	ldw	r4,0(sp)
  80066c:	08013bc0 	call	8013bc <__extendsfdf2>
  800670:	d9c00017 	ldw	r7,0(sp)
  800674:	01002074 	movhi	r4,129
  800678:	180d883a 	mov	r6,r3
  80067c:	100b883a 	mov	r5,r2
  800680:	21032e04 	addi	r4,r4,3256
  800684:	08015640 	call	801564 <printf>
  printf("Num Iterations: %d\n", y1);
  800688:	01002074 	movhi	r4,129
  80068c:	000b883a 	mov	r5,zero
  800690:	21033204 	addi	r4,r4,3272
  800694:	08015640 	call	801564 <printf>
  // printf("Total ticks %d for %d iters\n", elapsedTicks , numIterations);
  // printf("Time Taken: %f\n",(float) elapsedTicks/numIterations);


  return 0;
}
  800698:	0005883a 	mov	r2,zero
  80069c:	dfc80617 	ldw	ra,8216(sp)
  8006a0:	df080517 	ldw	fp,8212(sp)
  8006a4:	ddc80417 	ldw	r23,8208(sp)
  8006a8:	dd880317 	ldw	r22,8204(sp)
  8006ac:	dd480217 	ldw	r21,8200(sp)
  8006b0:	dd080117 	ldw	r20,8196(sp)
  8006b4:	dcc80017 	ldw	r19,8192(sp)
  8006b8:	dc87ff17 	ldw	r18,8188(sp)
  8006bc:	dc47fe17 	ldw	r17,8184(sp)
  8006c0:	dc07fd17 	ldw	r16,8180(sp)
  8006c4:	dec80704 	addi	sp,sp,8220
  8006c8:	f800283a 	ret
  8006cc:	8809883a 	mov	r4,r17
  8006d0:	100b883a 	mov	r5,r2
  8006d4:	0800b3c0 	call	800b3c <__mulsf3>
  8006d8:	1009883a 	mov	r4,r2
  8006dc:	003fc006 	br	8005e0 <main+0x128>

008006e0 <__addsf3>:
  8006e0:	280cd5fa 	srli	r6,r5,23
  8006e4:	2006d5fa 	srli	r3,r4,23
  8006e8:	2010d7fa 	srli	r8,r4,31
  8006ec:	01c02034 	movhi	r7,128
  8006f0:	2818d7fa 	srli	r12,r5,31
  8006f4:	defffc04 	addi	sp,sp,-16
  8006f8:	39ffffc4 	addi	r7,r7,-1
  8006fc:	3914703a 	and	r10,r7,r4
  800700:	32403fcc 	andi	r9,r6,255
  800704:	dc800215 	stw	r18,8(sp)
  800708:	dc400115 	stw	r17,4(sp)
  80070c:	395a703a 	and	r13,r7,r5
  800710:	1c403fcc 	andi	r17,r3,255
  800714:	dfc00315 	stw	ra,12(sp)
  800718:	dc000015 	stw	r16,0(sp)
  80071c:	501c90fa 	slli	r14,r10,3
  800720:	681690fa 	slli	r11,r13,3
  800724:	500d883a 	mov	r6,r10
  800728:	4025883a 	mov	r18,r8
  80072c:	8a45c83a 	sub	r2,r17,r9
  800730:	43004b26 	beq	r8,r12,800860 <__addsf3+0x180>
  800734:	0080390e 	bge	zero,r2,80081c <__addsf3+0x13c>
  800738:	48006326 	beq	r9,zero,8008c8 <__addsf3+0x1e8>
  80073c:	88c03fe0 	cmpeqi	r3,r17,255
  800740:	1800401e 	bne	r3,zero,800844 <__addsf3+0x164>
  800744:	5ac10034 	orhi	r11,r11,1024
  800748:	10c00708 	cmpgei	r3,r2,28
  80074c:	1800ab1e 	bne	r3,zero,8009fc <__addsf3+0x31c>
  800750:	01000804 	movi	r4,32
  800754:	2089c83a 	sub	r4,r4,r2
  800758:	5908983a 	sll	r4,r11,r4
  80075c:	5884d83a 	srl	r2,r11,r2
  800760:	2008c03a 	cmpne	r4,r4,zero
  800764:	1104b03a 	or	r2,r2,r4
  800768:	7085c83a 	sub	r2,r14,r2
  80076c:	10c1002c 	andhi	r3,r2,1024
  800770:	18008526 	beq	r3,zero,800988 <__addsf3+0x2a8>
  800774:	04010034 	movhi	r16,1024
  800778:	843fffc4 	addi	r16,r16,-1
  80077c:	1420703a 	and	r16,r2,r16
  800780:	8009883a 	mov	r4,r16
  800784:	08014b80 	call	8014b8 <__clzsi2>
  800788:	10fffec4 	addi	r3,r2,-5
  80078c:	80c4983a 	sll	r2,r16,r3
  800790:	1c409516 	blt	r3,r17,8009e8 <__addsf3+0x308>
  800794:	1c47c83a 	sub	r3,r3,r17
  800798:	1c000044 	addi	r16,r3,1
  80079c:	01000804 	movi	r4,32
  8007a0:	2409c83a 	sub	r4,r4,r16
  8007a4:	1108983a 	sll	r4,r2,r4
  8007a8:	1404d83a 	srl	r2,r2,r16
  8007ac:	0023883a 	mov	r17,zero
  8007b0:	2008c03a 	cmpne	r4,r4,zero
  8007b4:	1104b03a 	or	r2,r2,r4
  8007b8:	10c001cc 	andi	r3,r2,7
  8007bc:	18000426 	beq	r3,zero,8007d0 <__addsf3+0xf0>
  8007c0:	10c003cc 	andi	r3,r2,15
  8007c4:	18c00120 	cmpeqi	r3,r3,4
  8007c8:	1800011e 	bne	r3,zero,8007d0 <__addsf3+0xf0>
  8007cc:	10800104 	addi	r2,r2,4
  8007d0:	10c1002c 	andhi	r3,r2,1024
  8007d4:	18006e26 	beq	r3,zero,800990 <__addsf3+0x2b0>
  8007d8:	88c00044 	addi	r3,r17,1
  8007dc:	19003fe0 	cmpeqi	r4,r3,255
  8007e0:	20006d1e 	bne	r4,zero,800998 <__addsf3+0x2b8>
  8007e4:	100491ba 	slli	r2,r2,6
  8007e8:	100cd27a 	srli	r6,r2,9
  8007ec:	18803fcc 	andi	r2,r3,255
  8007f0:	100495fa 	slli	r2,r2,23
  8007f4:	94803fcc 	andi	r18,r18,255
  8007f8:	902497fa 	slli	r18,r18,31
  8007fc:	1184b03a 	or	r2,r2,r6
  800800:	1484b03a 	or	r2,r2,r18
  800804:	dfc00317 	ldw	ra,12(sp)
  800808:	dc800217 	ldw	r18,8(sp)
  80080c:	dc400117 	ldw	r17,4(sp)
  800810:	dc000017 	ldw	r16,0(sp)
  800814:	dec00404 	addi	sp,sp,16
  800818:	f800283a 	ret
  80081c:	10003026 	beq	r2,zero,8008e0 <__addsf3+0x200>
  800820:	4c49c83a 	sub	r4,r9,r17
  800824:	88007f1e 	bne	r17,zero,800a24 <__addsf3+0x344>
  800828:	70003f26 	beq	r14,zero,800928 <__addsf3+0x248>
  80082c:	213fffc4 	addi	r4,r4,-1
  800830:	2000b326 	beq	r4,zero,800b00 <__addsf3+0x420>
  800834:	48803fe0 	cmpeqi	r2,r9,255
  800838:	10007d26 	beq	r2,zero,800a30 <__addsf3+0x350>
  80083c:	6025883a 	mov	r18,r12
  800840:	6815883a 	mov	r10,r13
  800844:	50005426 	beq	r10,zero,800998 <__addsf3+0x2b8>
  800848:	00802034 	movhi	r2,128
  80084c:	51801034 	orhi	r6,r10,64
  800850:	10bfffc4 	addi	r2,r2,-1
  800854:	308c703a 	and	r6,r6,r2
  800858:	00ffffc4 	movi	r3,-1
  80085c:	003fe306 	br	8007ec <__addsf3+0x10c>
  800860:	0080500e 	bge	zero,r2,8009a4 <__addsf3+0x2c4>
  800864:	48002a26 	beq	r9,zero,800910 <__addsf3+0x230>
  800868:	88c03fe0 	cmpeqi	r3,r17,255
  80086c:	183ff51e 	bne	r3,zero,800844 <__addsf3+0x164>
  800870:	5ac10034 	orhi	r11,r11,1024
  800874:	10c00708 	cmpgei	r3,r2,28
  800878:	1800741e 	bne	r3,zero,800a4c <__addsf3+0x36c>
  80087c:	00c00804 	movi	r3,32
  800880:	1887c83a 	sub	r3,r3,r2
  800884:	58c6983a 	sll	r3,r11,r3
  800888:	5884d83a 	srl	r2,r11,r2
  80088c:	1806c03a 	cmpne	r3,r3,zero
  800890:	10c4b03a 	or	r2,r2,r3
  800894:	1385883a 	add	r2,r2,r14
  800898:	10c1002c 	andhi	r3,r2,1024
  80089c:	18003a26 	beq	r3,zero,800988 <__addsf3+0x2a8>
  8008a0:	8c400044 	addi	r17,r17,1
  8008a4:	88c03fe0 	cmpeqi	r3,r17,255
  8008a8:	18003b1e 	bne	r3,zero,800998 <__addsf3+0x2b8>
  8008ac:	1008d07a 	srli	r4,r2,1
  8008b0:	00df8034 	movhi	r3,32256
  8008b4:	18ffffc4 	addi	r3,r3,-1
  8008b8:	1080004c 	andi	r2,r2,1
  8008bc:	20c8703a 	and	r4,r4,r3
  8008c0:	2084b03a 	or	r2,r4,r2
  8008c4:	003fbc06 	br	8007b8 <__addsf3+0xd8>
  8008c8:	58001a26 	beq	r11,zero,800934 <__addsf3+0x254>
  8008cc:	10bfffc4 	addi	r2,r2,-1
  8008d0:	10007c26 	beq	r2,zero,800ac4 <__addsf3+0x3e4>
  8008d4:	88c03fe0 	cmpeqi	r3,r17,255
  8008d8:	183f9b26 	beq	r3,zero,800748 <__addsf3+0x68>
  8008dc:	003fd906 	br	800844 <__addsf3+0x164>
  8008e0:	88800044 	addi	r2,r17,1
  8008e4:	10803f8c 	andi	r2,r2,254
  8008e8:	1000461e 	bne	r2,zero,800a04 <__addsf3+0x324>
  8008ec:	88006e1e 	bne	r17,zero,800aa8 <__addsf3+0x3c8>
  8008f0:	70007f26 	beq	r14,zero,800af0 <__addsf3+0x410>
  8008f4:	583fbd26 	beq	r11,zero,8007ec <__addsf3+0x10c>
  8008f8:	72c5c83a 	sub	r2,r14,r11
  8008fc:	1101002c 	andhi	r4,r2,1024
  800900:	20008326 	beq	r4,zero,800b10 <__addsf3+0x430>
  800904:	5b85c83a 	sub	r2,r11,r14
  800908:	6025883a 	mov	r18,r12
  80090c:	003faa06 	br	8007b8 <__addsf3+0xd8>
  800910:	58000826 	beq	r11,zero,800934 <__addsf3+0x254>
  800914:	10bfffc4 	addi	r2,r2,-1
  800918:	10006826 	beq	r2,zero,800abc <__addsf3+0x3dc>
  80091c:	88c03fe0 	cmpeqi	r3,r17,255
  800920:	183fd426 	beq	r3,zero,800874 <__addsf3+0x194>
  800924:	003fc706 	br	800844 <__addsf3+0x164>
  800928:	6025883a 	mov	r18,r12
  80092c:	6815883a 	mov	r10,r13
  800930:	4823883a 	mov	r17,r9
  800934:	88803fe0 	cmpeqi	r2,r17,255
  800938:	103fc21e 	bne	r2,zero,800844 <__addsf3+0x164>
  80093c:	00802034 	movhi	r2,128
  800940:	10bfffc4 	addi	r2,r2,-1
  800944:	508c703a 	and	r6,r10,r2
  800948:	8807883a 	mov	r3,r17
  80094c:	003fa706 	br	8007ec <__addsf3+0x10c>
  800950:	881f883a 	mov	r15,r17
  800954:	8c400044 	addi	r17,r17,1
  800958:	88803f8c 	andi	r2,r17,254
  80095c:	10004a1e 	bne	r2,zero,800a88 <__addsf3+0x3a8>
  800960:	78005a1e 	bne	r15,zero,800acc <__addsf3+0x3ec>
  800964:	70006e26 	beq	r14,zero,800b20 <__addsf3+0x440>
  800968:	583fa026 	beq	r11,zero,8007ec <__addsf3+0x10c>
  80096c:	72c5883a 	add	r2,r14,r11
  800970:	10c1002c 	andhi	r3,r2,1024
  800974:	18006f26 	beq	r3,zero,800b34 <__addsf3+0x454>
  800978:	00ff0034 	movhi	r3,64512
  80097c:	18ffffc4 	addi	r3,r3,-1
  800980:	10c4703a 	and	r2,r2,r3
  800984:	04400044 	movi	r17,1
  800988:	10c001cc 	andi	r3,r2,7
  80098c:	183f8c1e 	bne	r3,zero,8007c0 <__addsf3+0xe0>
  800990:	1014d0fa 	srli	r10,r2,3
  800994:	003fe706 	br	800934 <__addsf3+0x254>
  800998:	00ffffc4 	movi	r3,-1
  80099c:	000d883a 	mov	r6,zero
  8009a0:	003f9206 	br	8007ec <__addsf3+0x10c>
  8009a4:	103fea26 	beq	r2,zero,800950 <__addsf3+0x270>
  8009a8:	4c49c83a 	sub	r4,r9,r17
  8009ac:	88003026 	beq	r17,zero,800a70 <__addsf3+0x390>
  8009b0:	48803fe0 	cmpeqi	r2,r9,255
  8009b4:	103fa21e 	bne	r2,zero,800840 <__addsf3+0x160>
  8009b8:	73810034 	orhi	r14,r14,1024
  8009bc:	20800708 	cmpgei	r2,r4,28
  8009c0:	1000491e 	bne	r2,zero,800ae8 <__addsf3+0x408>
  8009c4:	00800804 	movi	r2,32
  8009c8:	1105c83a 	sub	r2,r2,r4
  8009cc:	7084983a 	sll	r2,r14,r2
  8009d0:	7108d83a 	srl	r4,r14,r4
  8009d4:	1004c03a 	cmpne	r2,r2,zero
  8009d8:	2088b03a 	or	r4,r4,r2
  8009dc:	22c5883a 	add	r2,r4,r11
  8009e0:	4823883a 	mov	r17,r9
  8009e4:	003fac06 	br	800898 <__addsf3+0x1b8>
  8009e8:	013f0034 	movhi	r4,64512
  8009ec:	213fffc4 	addi	r4,r4,-1
  8009f0:	88e3c83a 	sub	r17,r17,r3
  8009f4:	1104703a 	and	r2,r2,r4
  8009f8:	003f6f06 	br	8007b8 <__addsf3+0xd8>
  8009fc:	00800044 	movi	r2,1
  800a00:	003f5906 	br	800768 <__addsf3+0x88>
  800a04:	72e1c83a 	sub	r16,r14,r11
  800a08:	8081002c 	andhi	r2,r16,1024
  800a0c:	1000231e 	bne	r2,zero,800a9c <__addsf3+0x3bc>
  800a10:	803f5b1e 	bne	r16,zero,800780 <__addsf3+0xa0>
  800a14:	0025883a 	mov	r18,zero
  800a18:	0007883a 	mov	r3,zero
  800a1c:	000d883a 	mov	r6,zero
  800a20:	003f7206 	br	8007ec <__addsf3+0x10c>
  800a24:	48803fe0 	cmpeqi	r2,r9,255
  800a28:	103f841e 	bne	r2,zero,80083c <__addsf3+0x15c>
  800a2c:	73810034 	orhi	r14,r14,1024
  800a30:	20800708 	cmpgei	r2,r4,28
  800a34:	10000726 	beq	r2,zero,800a54 <__addsf3+0x374>
  800a38:	01000044 	movi	r4,1
  800a3c:	5905c83a 	sub	r2,r11,r4
  800a40:	6025883a 	mov	r18,r12
  800a44:	4823883a 	mov	r17,r9
  800a48:	003f4806 	br	80076c <__addsf3+0x8c>
  800a4c:	00800044 	movi	r2,1
  800a50:	003f9006 	br	800894 <__addsf3+0x1b4>
  800a54:	00800804 	movi	r2,32
  800a58:	1105c83a 	sub	r2,r2,r4
  800a5c:	7084983a 	sll	r2,r14,r2
  800a60:	7108d83a 	srl	r4,r14,r4
  800a64:	1004c03a 	cmpne	r2,r2,zero
  800a68:	2088b03a 	or	r4,r4,r2
  800a6c:	003ff306 	br	800a3c <__addsf3+0x35c>
  800a70:	703fae26 	beq	r14,zero,80092c <__addsf3+0x24c>
  800a74:	213fffc4 	addi	r4,r4,-1
  800a78:	20002b26 	beq	r4,zero,800b28 <__addsf3+0x448>
  800a7c:	48803fe0 	cmpeqi	r2,r9,255
  800a80:	103fce26 	beq	r2,zero,8009bc <__addsf3+0x2dc>
  800a84:	003f6e06 	br	800840 <__addsf3+0x160>
  800a88:	88803fe0 	cmpeqi	r2,r17,255
  800a8c:	103fc21e 	bne	r2,zero,800998 <__addsf3+0x2b8>
  800a90:	72c5883a 	add	r2,r14,r11
  800a94:	1004d07a 	srli	r2,r2,1
  800a98:	003fbb06 	br	800988 <__addsf3+0x2a8>
  800a9c:	5ba1c83a 	sub	r16,r11,r14
  800aa0:	6025883a 	mov	r18,r12
  800aa4:	003f3606 	br	800780 <__addsf3+0xa0>
  800aa8:	7000091e 	bne	r14,zero,800ad0 <__addsf3+0x3f0>
  800aac:	583f631e 	bne	r11,zero,80083c <__addsf3+0x15c>
  800ab0:	0025883a 	mov	r18,zero
  800ab4:	380d883a 	mov	r6,r7
  800ab8:	003f6706 	br	800858 <__addsf3+0x178>
  800abc:	72c5883a 	add	r2,r14,r11
  800ac0:	003f7506 	br	800898 <__addsf3+0x1b8>
  800ac4:	72c5c83a 	sub	r2,r14,r11
  800ac8:	003f2806 	br	80076c <__addsf3+0x8c>
  800acc:	703f5c26 	beq	r14,zero,800840 <__addsf3+0x160>
  800ad0:	583f5c26 	beq	r11,zero,800844 <__addsf3+0x164>
  800ad4:	20c0102c 	andhi	r3,r4,64
  800ad8:	183f5a26 	beq	r3,zero,800844 <__addsf3+0x164>
  800adc:	2940102c 	andhi	r5,r5,64
  800ae0:	283f581e 	bne	r5,zero,800844 <__addsf3+0x164>
  800ae4:	003f5506 	br	80083c <__addsf3+0x15c>
  800ae8:	01000044 	movi	r4,1
  800aec:	003fbb06 	br	8009dc <__addsf3+0x2fc>
  800af0:	58000826 	beq	r11,zero,800b14 <__addsf3+0x434>
  800af4:	6025883a 	mov	r18,r12
  800af8:	680d883a 	mov	r6,r13
  800afc:	003f3b06 	br	8007ec <__addsf3+0x10c>
  800b00:	5b85c83a 	sub	r2,r11,r14
  800b04:	6025883a 	mov	r18,r12
  800b08:	4823883a 	mov	r17,r9
  800b0c:	003f1706 	br	80076c <__addsf3+0x8c>
  800b10:	103f9d1e 	bne	r2,zero,800988 <__addsf3+0x2a8>
  800b14:	0025883a 	mov	r18,zero
  800b18:	000d883a 	mov	r6,zero
  800b1c:	003f3306 	br	8007ec <__addsf3+0x10c>
  800b20:	680d883a 	mov	r6,r13
  800b24:	003f3106 	br	8007ec <__addsf3+0x10c>
  800b28:	72c5883a 	add	r2,r14,r11
  800b2c:	4823883a 	mov	r17,r9
  800b30:	003f5906 	br	800898 <__addsf3+0x1b8>
  800b34:	0023883a 	mov	r17,zero
  800b38:	003f9306 	br	800988 <__addsf3+0x2a8>

00800b3c <__mulsf3>:
  800b3c:	defff504 	addi	sp,sp,-44
  800b40:	dc400215 	stw	r17,8(sp)
  800b44:	2022d5fa 	srli	r17,r4,23
  800b48:	dc000115 	stw	r16,4(sp)
  800b4c:	04002034 	movhi	r16,128
  800b50:	dd800715 	stw	r22,28(sp)
  800b54:	843fffc4 	addi	r16,r16,-1
  800b58:	dfc00a15 	stw	ra,40(sp)
  800b5c:	df000915 	stw	fp,36(sp)
  800b60:	ddc00815 	stw	r23,32(sp)
  800b64:	dd400615 	stw	r21,24(sp)
  800b68:	dd000515 	stw	r20,20(sp)
  800b6c:	dcc00415 	stw	r19,16(sp)
  800b70:	dc800315 	stw	r18,12(sp)
  800b74:	8c403fcc 	andi	r17,r17,255
  800b78:	202cd7fa 	srli	r22,r4,31
  800b7c:	8120703a 	and	r16,r16,r4
  800b80:	88005026 	beq	r17,zero,800cc4 <__mulsf3+0x188>
  800b84:	88803fe0 	cmpeqi	r2,r17,255
  800b88:	1000531e 	bne	r2,zero,800cd8 <__mulsf3+0x19c>
  800b8c:	802090fa 	slli	r16,r16,3
  800b90:	8c7fe044 	addi	r17,r17,-127
  800b94:	0025883a 	mov	r18,zero
  800b98:	84010034 	orhi	r16,r16,1024
  800b9c:	0029883a 	mov	r20,zero
  800ba0:	2804d5fa 	srli	r2,r5,23
  800ba4:	01002034 	movhi	r4,128
  800ba8:	213fffc4 	addi	r4,r4,-1
  800bac:	10803fcc 	andi	r2,r2,255
  800bb0:	282ed7fa 	srli	r23,r5,31
  800bb4:	2166703a 	and	r19,r4,r5
  800bb8:	10004c26 	beq	r2,zero,800cec <__mulsf3+0x1b0>
  800bbc:	10c03fe0 	cmpeqi	r3,r2,255
  800bc0:	18001e1e 	bne	r3,zero,800c3c <__mulsf3+0x100>
  800bc4:	980890fa 	slli	r4,r19,3
  800bc8:	10bfe044 	addi	r2,r2,-127
  800bcc:	88a3883a 	add	r17,r17,r2
  800bd0:	24c10034 	orhi	r19,r4,1024
  800bd4:	0007883a 	mov	r3,zero
  800bd8:	90800428 	cmpgeui	r2,r18,16
  800bdc:	b5eaf03a 	xor	r21,r22,r23
  800be0:	8f000044 	addi	fp,r17,1
  800be4:	1000481e 	bne	r2,zero,800d08 <__mulsf3+0x1cc>
  800be8:	902490ba 	slli	r18,r18,2
  800bec:	00802034 	movhi	r2,128
  800bf0:	9085883a 	add	r2,r18,r2
  800bf4:	1082ff17 	ldw	r2,3068(r2)
  800bf8:	1000683a 	jmp	r2
  800bfc:	00800d08 	cmpgei	r2,zero,52
  800c00:	00800c54 	movui	r2,49
  800c04:	00800c54 	movui	r2,49
  800c08:	00800c50 	cmplti	r2,zero,49
  800c0c:	00800c5c 	xori	r2,zero,49
  800c10:	00800c5c 	xori	r2,zero,49
  800c14:	00800e68 	cmpgeui	r2,zero,57
  800c18:	00800c50 	cmplti	r2,zero,49
  800c1c:	00800c5c 	xori	r2,zero,49
  800c20:	00800e68 	cmpgeui	r2,zero,57
  800c24:	00800c5c 	xori	r2,zero,49
  800c28:	00800c50 	cmplti	r2,zero,49
  800c2c:	00800df8 	rdprs	r2,zero,55
  800c30:	00800df8 	rdprs	r2,zero,55
  800c34:	00800df8 	rdprs	r2,zero,55
  800c38:	00800ecc 	andi	r2,zero,59
  800c3c:	8c403fc4 	addi	r17,r17,255
  800c40:	98006f1e 	bne	r19,zero,800e00 <__mulsf3+0x2c4>
  800c44:	94800094 	ori	r18,r18,2
  800c48:	00c00084 	movi	r3,2
  800c4c:	003fe206 	br	800bd8 <__mulsf3+0x9c>
  800c50:	b82b883a 	mov	r21,r23
  800c54:	9821883a 	mov	r16,r19
  800c58:	1829883a 	mov	r20,r3
  800c5c:	a08000a0 	cmpeqi	r2,r20,2
  800c60:	1000261e 	bne	r2,zero,800cfc <__mulsf3+0x1c0>
  800c64:	a08000e0 	cmpeqi	r2,r20,3
  800c68:	1000ae1e 	bne	r2,zero,800f24 <__mulsf3+0x3e8>
  800c6c:	a0800060 	cmpeqi	r2,r20,1
  800c70:	10004e26 	beq	r2,zero,800dac <__mulsf3+0x270>
  800c74:	0007883a 	mov	r3,zero
  800c78:	0009883a 	mov	r4,zero
  800c7c:	1c003fcc 	andi	r16,r3,255
  800c80:	a8803fcc 	andi	r2,r21,255
  800c84:	802095fa 	slli	r16,r16,23
  800c88:	100497fa 	slli	r2,r2,31
  800c8c:	8120b03a 	or	r16,r16,r4
  800c90:	8084b03a 	or	r2,r16,r2
  800c94:	dfc00a17 	ldw	ra,40(sp)
  800c98:	df000917 	ldw	fp,36(sp)
  800c9c:	ddc00817 	ldw	r23,32(sp)
  800ca0:	dd800717 	ldw	r22,28(sp)
  800ca4:	dd400617 	ldw	r21,24(sp)
  800ca8:	dd000517 	ldw	r20,20(sp)
  800cac:	dcc00417 	ldw	r19,16(sp)
  800cb0:	dc800317 	ldw	r18,12(sp)
  800cb4:	dc400217 	ldw	r17,8(sp)
  800cb8:	dc000117 	ldw	r16,4(sp)
  800cbc:	dec00b04 	addi	sp,sp,44
  800cc0:	f800283a 	ret
  800cc4:	80005d1e 	bne	r16,zero,800e3c <__mulsf3+0x300>
  800cc8:	04800104 	movi	r18,4
  800ccc:	0023883a 	mov	r17,zero
  800cd0:	05000044 	movi	r20,1
  800cd4:	003fb206 	br	800ba0 <__mulsf3+0x64>
  800cd8:	8000541e 	bne	r16,zero,800e2c <__mulsf3+0x2f0>
  800cdc:	04800204 	movi	r18,8
  800ce0:	04403fc4 	movi	r17,255
  800ce4:	05000084 	movi	r20,2
  800ce8:	003fad06 	br	800ba0 <__mulsf3+0x64>
  800cec:	9800471e 	bne	r19,zero,800e0c <__mulsf3+0x2d0>
  800cf0:	94800054 	ori	r18,r18,1
  800cf4:	00c00044 	movi	r3,1
  800cf8:	003fb706 	br	800bd8 <__mulsf3+0x9c>
  800cfc:	00ffffc4 	movi	r3,-1
  800d00:	0009883a 	mov	r4,zero
  800d04:	003fdd06 	br	800c7c <__mulsf3+0x140>
  800d08:	8028d43a 	srli	r20,r16,16
  800d0c:	9cbfffcc 	andi	r18,r19,65535
  800d10:	843fffcc 	andi	r16,r16,65535
  800d14:	900b883a 	mov	r5,r18
  800d18:	8009883a 	mov	r4,r16
  800d1c:	080150c0 	call	80150c <__mulsi3>
  800d20:	9826d43a 	srli	r19,r19,16
  800d24:	900b883a 	mov	r5,r18
  800d28:	a009883a 	mov	r4,r20
  800d2c:	1025883a 	mov	r18,r2
  800d30:	080150c0 	call	80150c <__mulsi3>
  800d34:	980b883a 	mov	r5,r19
  800d38:	a009883a 	mov	r4,r20
  800d3c:	1029883a 	mov	r20,r2
  800d40:	080150c0 	call	80150c <__mulsi3>
  800d44:	9809883a 	mov	r4,r19
  800d48:	800b883a 	mov	r5,r16
  800d4c:	1027883a 	mov	r19,r2
  800d50:	080150c0 	call	80150c <__mulsi3>
  800d54:	9006d43a 	srli	r3,r18,16
  800d58:	1505883a 	add	r2,r2,r20
  800d5c:	1887883a 	add	r3,r3,r2
  800d60:	1d00022e 	bgeu	r3,r20,800d6c <__mulsf3+0x230>
  800d64:	00800074 	movhi	r2,1
  800d68:	98a7883a 	add	r19,r19,r2
  800d6c:	1808943a 	slli	r4,r3,16
  800d70:	1820d43a 	srli	r16,r3,16
  800d74:	94bfffcc 	andi	r18,r18,65535
  800d78:	2489883a 	add	r4,r4,r18
  800d7c:	200a91ba 	slli	r5,r4,6
  800d80:	84e1883a 	add	r16,r16,r19
  800d84:	802091ba 	slli	r16,r16,6
  800d88:	2008d6ba 	srli	r4,r4,26
  800d8c:	2804c03a 	cmpne	r2,r5,zero
  800d90:	80c2002c 	andhi	r3,r16,2048
  800d94:	1108b03a 	or	r4,r2,r4
  800d98:	8120b03a 	or	r16,r16,r4
  800d9c:	18005b26 	beq	r3,zero,800f0c <__mulsf3+0x3d0>
  800da0:	8004d07a 	srli	r2,r16,1
  800da4:	8400004c 	andi	r16,r16,1
  800da8:	1420b03a 	or	r16,r2,r16
  800dac:	e0c01fc4 	addi	r3,fp,127
  800db0:	00c0320e 	bge	zero,r3,800e7c <__mulsf3+0x340>
  800db4:	808001cc 	andi	r2,r16,7
  800db8:	10000426 	beq	r2,zero,800dcc <__mulsf3+0x290>
  800dbc:	808003cc 	andi	r2,r16,15
  800dc0:	10800120 	cmpeqi	r2,r2,4
  800dc4:	1000011e 	bne	r2,zero,800dcc <__mulsf3+0x290>
  800dc8:	84000104 	addi	r16,r16,4
  800dcc:	8082002c 	andhi	r2,r16,2048
  800dd0:	10000426 	beq	r2,zero,800de4 <__mulsf3+0x2a8>
  800dd4:	00be0034 	movhi	r2,63488
  800dd8:	10bfffc4 	addi	r2,r2,-1
  800ddc:	80a0703a 	and	r16,r16,r2
  800de0:	e0c02004 	addi	r3,fp,128
  800de4:	18803fc8 	cmpgei	r2,r3,255
  800de8:	103fc41e 	bne	r2,zero,800cfc <__mulsf3+0x1c0>
  800dec:	802091ba 	slli	r16,r16,6
  800df0:	8008d27a 	srli	r4,r16,9
  800df4:	003fa106 	br	800c7c <__mulsf3+0x140>
  800df8:	b02b883a 	mov	r21,r22
  800dfc:	003f9706 	br	800c5c <__mulsf3+0x120>
  800e00:	948000d4 	ori	r18,r18,3
  800e04:	00c000c4 	movi	r3,3
  800e08:	003f7306 	br	800bd8 <__mulsf3+0x9c>
  800e0c:	9809883a 	mov	r4,r19
  800e10:	08014b80 	call	8014b8 <__clzsi2>
  800e14:	10fffec4 	addi	r3,r2,-5
  800e18:	88a3c83a 	sub	r17,r17,r2
  800e1c:	98e6983a 	sll	r19,r19,r3
  800e20:	8c7fe284 	addi	r17,r17,-118
  800e24:	0007883a 	mov	r3,zero
  800e28:	003f6b06 	br	800bd8 <__mulsf3+0x9c>
  800e2c:	04800304 	movi	r18,12
  800e30:	04403fc4 	movi	r17,255
  800e34:	050000c4 	movi	r20,3
  800e38:	003f5906 	br	800ba0 <__mulsf3+0x64>
  800e3c:	8009883a 	mov	r4,r16
  800e40:	d9400015 	stw	r5,0(sp)
  800e44:	08014b80 	call	8014b8 <__clzsi2>
  800e48:	10fffec4 	addi	r3,r2,-5
  800e4c:	047fe284 	movi	r17,-118
  800e50:	80e0983a 	sll	r16,r16,r3
  800e54:	d9400017 	ldw	r5,0(sp)
  800e58:	88a3c83a 	sub	r17,r17,r2
  800e5c:	0025883a 	mov	r18,zero
  800e60:	0029883a 	mov	r20,zero
  800e64:	003f4e06 	br	800ba0 <__mulsf3+0x64>
  800e68:	01002034 	movhi	r4,128
  800e6c:	002b883a 	mov	r21,zero
  800e70:	213fffc4 	addi	r4,r4,-1
  800e74:	00ffffc4 	movi	r3,-1
  800e78:	003f8006 	br	800c7c <__mulsf3+0x140>
  800e7c:	00800044 	movi	r2,1
  800e80:	10c7c83a 	sub	r3,r2,r3
  800e84:	18800708 	cmpgei	r2,r3,28
  800e88:	103f7a1e 	bne	r2,zero,800c74 <__mulsf3+0x138>
  800e8c:	e1002784 	addi	r4,fp,158
  800e90:	8108983a 	sll	r4,r16,r4
  800e94:	80e0d83a 	srl	r16,r16,r3
  800e98:	2008c03a 	cmpne	r4,r4,zero
  800e9c:	8120b03a 	or	r16,r16,r4
  800ea0:	808001cc 	andi	r2,r16,7
  800ea4:	10000426 	beq	r2,zero,800eb8 <__mulsf3+0x37c>
  800ea8:	808003cc 	andi	r2,r16,15
  800eac:	10800120 	cmpeqi	r2,r2,4
  800eb0:	1000011e 	bne	r2,zero,800eb8 <__mulsf3+0x37c>
  800eb4:	84000104 	addi	r16,r16,4
  800eb8:	8081002c 	andhi	r2,r16,1024
  800ebc:	10001526 	beq	r2,zero,800f14 <__mulsf3+0x3d8>
  800ec0:	00c00044 	movi	r3,1
  800ec4:	0009883a 	mov	r4,zero
  800ec8:	003f6c06 	br	800c7c <__mulsf3+0x140>
  800ecc:	8080102c 	andhi	r2,r16,64
  800ed0:	10000826 	beq	r2,zero,800ef4 <__mulsf3+0x3b8>
  800ed4:	9880102c 	andhi	r2,r19,64
  800ed8:	1000061e 	bne	r2,zero,800ef4 <__mulsf3+0x3b8>
  800edc:	00802034 	movhi	r2,128
  800ee0:	99001034 	orhi	r4,r19,64
  800ee4:	10bfffc4 	addi	r2,r2,-1
  800ee8:	2088703a 	and	r4,r4,r2
  800eec:	b82b883a 	mov	r21,r23
  800ef0:	003fe006 	br	800e74 <__mulsf3+0x338>
  800ef4:	00802034 	movhi	r2,128
  800ef8:	81001034 	orhi	r4,r16,64
  800efc:	10bfffc4 	addi	r2,r2,-1
  800f00:	2088703a 	and	r4,r4,r2
  800f04:	b02b883a 	mov	r21,r22
  800f08:	003fda06 	br	800e74 <__mulsf3+0x338>
  800f0c:	8839883a 	mov	fp,r17
  800f10:	003fa606 	br	800dac <__mulsf3+0x270>
  800f14:	802091ba 	slli	r16,r16,6
  800f18:	0007883a 	mov	r3,zero
  800f1c:	8008d27a 	srli	r4,r16,9
  800f20:	003f5606 	br	800c7c <__mulsf3+0x140>
  800f24:	00802034 	movhi	r2,128
  800f28:	81001034 	orhi	r4,r16,64
  800f2c:	10bfffc4 	addi	r2,r2,-1
  800f30:	2088703a 	and	r4,r4,r2
  800f34:	003fcf06 	br	800e74 <__mulsf3+0x338>

00800f38 <__subsf3>:
  800f38:	2818d5fa 	srli	r12,r5,23
  800f3c:	2006d5fa 	srli	r3,r4,23
  800f40:	200ed7fa 	srli	r7,r4,31
  800f44:	01802034 	movhi	r6,128
  800f48:	defffc04 	addi	sp,sp,-16
  800f4c:	31bfffc4 	addi	r6,r6,-1
  800f50:	63003fcc 	andi	r12,r12,255
  800f54:	3108703a 	and	r4,r6,r4
  800f58:	3150703a 	and	r8,r6,r5
  800f5c:	1a403fcc 	andi	r9,r3,255
  800f60:	dc800215 	stw	r18,8(sp)
  800f64:	dc400115 	stw	r17,4(sp)
  800f68:	dfc00315 	stw	ra,12(sp)
  800f6c:	dc000015 	stw	r16,0(sp)
  800f70:	63403fd8 	cmpnei	r13,r12,255
  800f74:	3823883a 	mov	r17,r7
  800f78:	201490fa 	slli	r10,r4,3
  800f7c:	280ad7fa 	srli	r5,r5,31
  800f80:	401690fa 	slli	r11,r8,3
  800f84:	201d883a 	mov	r14,r4
  800f88:	4825883a 	mov	r18,r9
  800f8c:	39c03fcc 	andi	r7,r7,255
  800f90:	4b0dc83a 	sub	r6,r9,r12
  800f94:	68004f26 	beq	r13,zero,8010d4 <__subsf3+0x19c>
  800f98:	2b40005c 	xori	r13,r5,1
  800f9c:	3b405826 	beq	r7,r13,801100 <__subsf3+0x1c8>
  800fa0:	01803b0e 	bge	zero,r6,801090 <__subsf3+0x158>
  800fa4:	60004f1e 	bne	r12,zero,8010e4 <__subsf3+0x1ac>
  800fa8:	58009226 	beq	r11,zero,8011f4 <__subsf3+0x2bc>
  800fac:	31bfffc4 	addi	r6,r6,-1
  800fb0:	3000e326 	beq	r6,zero,801340 <__subsf3+0x408>
  800fb4:	4a403fe0 	cmpeqi	r9,r9,255
  800fb8:	48003f1e 	bne	r9,zero,8010b8 <__subsf3+0x180>
  800fbc:	30800708 	cmpgei	r2,r6,28
  800fc0:	10004d1e 	bne	r2,zero,8010f8 <__subsf3+0x1c0>
  800fc4:	00c00804 	movi	r3,32
  800fc8:	1987c83a 	sub	r3,r3,r6
  800fcc:	58c6983a 	sll	r3,r11,r3
  800fd0:	5984d83a 	srl	r2,r11,r6
  800fd4:	180cc03a 	cmpne	r6,r3,zero
  800fd8:	1184b03a 	or	r2,r2,r6
  800fdc:	5085c83a 	sub	r2,r10,r2
  800fe0:	10c1002c 	andhi	r3,r2,1024
  800fe4:	18008026 	beq	r3,zero,8011e8 <__subsf3+0x2b0>
  800fe8:	04010034 	movhi	r16,1024
  800fec:	843fffc4 	addi	r16,r16,-1
  800ff0:	1420703a 	and	r16,r2,r16
  800ff4:	8009883a 	mov	r4,r16
  800ff8:	08014b80 	call	8014b8 <__clzsi2>
  800ffc:	10fffec4 	addi	r3,r2,-5
  801000:	80c4983a 	sll	r2,r16,r3
  801004:	1c809616 	blt	r3,r18,801260 <__subsf3+0x328>
  801008:	1c87c83a 	sub	r3,r3,r18
  80100c:	1c000044 	addi	r16,r3,1
  801010:	01000804 	movi	r4,32
  801014:	2409c83a 	sub	r4,r4,r16
  801018:	1108983a 	sll	r4,r2,r4
  80101c:	1404d83a 	srl	r2,r2,r16
  801020:	0025883a 	mov	r18,zero
  801024:	2008c03a 	cmpne	r4,r4,zero
  801028:	1104b03a 	or	r2,r2,r4
  80102c:	10c001cc 	andi	r3,r2,7
  801030:	18000426 	beq	r3,zero,801044 <__subsf3+0x10c>
  801034:	10c003cc 	andi	r3,r2,15
  801038:	18c00120 	cmpeqi	r3,r3,4
  80103c:	1800011e 	bne	r3,zero,801044 <__subsf3+0x10c>
  801040:	10800104 	addi	r2,r2,4
  801044:	10c1002c 	andhi	r3,r2,1024
  801048:	18006926 	beq	r3,zero,8011f0 <__subsf3+0x2b8>
  80104c:	90c00044 	addi	r3,r18,1
  801050:	19003fe0 	cmpeqi	r4,r3,255
  801054:	20006e1e 	bne	r4,zero,801210 <__subsf3+0x2d8>
  801058:	100491ba 	slli	r2,r2,6
  80105c:	1008d27a 	srli	r4,r2,9
  801060:	18803fcc 	andi	r2,r3,255
  801064:	100495fa 	slli	r2,r2,23
  801068:	8c403fcc 	andi	r17,r17,255
  80106c:	882297fa 	slli	r17,r17,31
  801070:	1104b03a 	or	r2,r2,r4
  801074:	1444b03a 	or	r2,r2,r17
  801078:	dfc00317 	ldw	ra,12(sp)
  80107c:	dc800217 	ldw	r18,8(sp)
  801080:	dc400117 	ldw	r17,4(sp)
  801084:	dc000017 	ldw	r16,0(sp)
  801088:	dec00404 	addi	sp,sp,16
  80108c:	f800283a 	ret
  801090:	30003526 	beq	r6,zero,801168 <__subsf3+0x230>
  801094:	6247c83a 	sub	r3,r12,r9
  801098:	6823883a 	mov	r17,r13
  80109c:	48007d1e 	bne	r9,zero,801294 <__subsf3+0x35c>
  8010a0:	50009926 	beq	r10,zero,801308 <__subsf3+0x3d0>
  8010a4:	18ffffc4 	addi	r3,r3,-1
  8010a8:	1800b226 	beq	r3,zero,801374 <__subsf3+0x43c>
  8010ac:	60803fe0 	cmpeqi	r2,r12,255
  8010b0:	10007b26 	beq	r2,zero,8012a0 <__subsf3+0x368>
  8010b4:	401d883a 	mov	r14,r8
  8010b8:	70005526 	beq	r14,zero,801210 <__subsf3+0x2d8>
  8010bc:	00802034 	movhi	r2,128
  8010c0:	71001034 	orhi	r4,r14,64
  8010c4:	10bfffc4 	addi	r2,r2,-1
  8010c8:	2088703a 	and	r4,r4,r2
  8010cc:	00ffffc4 	movi	r3,-1
  8010d0:	003fe306 	br	801060 <__subsf3+0x128>
  8010d4:	583fb026 	beq	r11,zero,800f98 <__subsf3+0x60>
  8010d8:	2b403fcc 	andi	r13,r5,255
  8010dc:	39404f26 	beq	r7,r5,80121c <__subsf3+0x2e4>
  8010e0:	01bfeb0e 	bge	zero,r6,801090 <__subsf3+0x158>
  8010e4:	4a403fe0 	cmpeqi	r9,r9,255
  8010e8:	483ff31e 	bne	r9,zero,8010b8 <__subsf3+0x180>
  8010ec:	30800708 	cmpgei	r2,r6,28
  8010f0:	5ac10034 	orhi	r11,r11,1024
  8010f4:	103fb326 	beq	r2,zero,800fc4 <__subsf3+0x8c>
  8010f8:	00800044 	movi	r2,1
  8010fc:	003fb706 	br	800fdc <__subsf3+0xa4>
  801100:	0180460e 	bge	zero,r6,80121c <__subsf3+0x2e4>
  801104:	60002526 	beq	r12,zero,80119c <__subsf3+0x264>
  801108:	4a403fe0 	cmpeqi	r9,r9,255
  80110c:	483fea1e 	bne	r9,zero,8010b8 <__subsf3+0x180>
  801110:	5ac10034 	orhi	r11,r11,1024
  801114:	30800708 	cmpgei	r2,r6,28
  801118:	1000671e 	bne	r2,zero,8012b8 <__subsf3+0x380>
  80111c:	00c00804 	movi	r3,32
  801120:	1987c83a 	sub	r3,r3,r6
  801124:	58c6983a 	sll	r3,r11,r3
  801128:	5984d83a 	srl	r2,r11,r6
  80112c:	180cc03a 	cmpne	r6,r3,zero
  801130:	1184b03a 	or	r2,r2,r6
  801134:	1285883a 	add	r2,r2,r10
  801138:	10c1002c 	andhi	r3,r2,1024
  80113c:	18002a26 	beq	r3,zero,8011e8 <__subsf3+0x2b0>
  801140:	94800044 	addi	r18,r18,1
  801144:	90c03fe0 	cmpeqi	r3,r18,255
  801148:	1800311e 	bne	r3,zero,801210 <__subsf3+0x2d8>
  80114c:	1008d07a 	srli	r4,r2,1
  801150:	00df8034 	movhi	r3,32256
  801154:	18ffffc4 	addi	r3,r3,-1
  801158:	1080004c 	andi	r2,r2,1
  80115c:	20c8703a 	and	r4,r4,r3
  801160:	2084b03a 	or	r2,r4,r2
  801164:	003fb106 	br	80102c <__subsf3+0xf4>
  801168:	48800044 	addi	r2,r9,1
  80116c:	10803f8c 	andi	r2,r2,254
  801170:	1000401e 	bne	r2,zero,801274 <__subsf3+0x33c>
  801174:	48006a1e 	bne	r9,zero,801320 <__subsf3+0x3e8>
  801178:	50008126 	beq	r10,zero,801380 <__subsf3+0x448>
  80117c:	583fb826 	beq	r11,zero,801060 <__subsf3+0x128>
  801180:	52c5c83a 	sub	r2,r10,r11
  801184:	1101002c 	andhi	r4,r2,1024
  801188:	20008126 	beq	r4,zero,801390 <__subsf3+0x458>
  80118c:	5a85c83a 	sub	r2,r11,r10
  801190:	6823883a 	mov	r17,r13
  801194:	0025883a 	mov	r18,zero
  801198:	003fa406 	br	80102c <__subsf3+0xf4>
  80119c:	58001526 	beq	r11,zero,8011f4 <__subsf3+0x2bc>
  8011a0:	31bfffc4 	addi	r6,r6,-1
  8011a4:	30006426 	beq	r6,zero,801338 <__subsf3+0x400>
  8011a8:	4a403fe0 	cmpeqi	r9,r9,255
  8011ac:	483fd926 	beq	r9,zero,801114 <__subsf3+0x1dc>
  8011b0:	003fc106 	br	8010b8 <__subsf3+0x180>
  8011b4:	4c800044 	addi	r18,r9,1
  8011b8:	90803f8c 	andi	r2,r18,254
  8011bc:	10004d1e 	bne	r2,zero,8012f4 <__subsf3+0x3bc>
  8011c0:	4800611e 	bne	r9,zero,801348 <__subsf3+0x410>
  8011c4:	50007626 	beq	r10,zero,8013a0 <__subsf3+0x468>
  8011c8:	583fa526 	beq	r11,zero,801060 <__subsf3+0x128>
  8011cc:	52c5883a 	add	r2,r10,r11
  8011d0:	10c1002c 	andhi	r3,r2,1024
  8011d4:	18007426 	beq	r3,zero,8013a8 <__subsf3+0x470>
  8011d8:	00ff0034 	movhi	r3,64512
  8011dc:	18ffffc4 	addi	r3,r3,-1
  8011e0:	10c4703a 	and	r2,r2,r3
  8011e4:	04800044 	movi	r18,1
  8011e8:	10c001cc 	andi	r3,r2,7
  8011ec:	183f911e 	bne	r3,zero,801034 <__subsf3+0xfc>
  8011f0:	101cd0fa 	srli	r14,r2,3
  8011f4:	90803fe0 	cmpeqi	r2,r18,255
  8011f8:	103faf1e 	bne	r2,zero,8010b8 <__subsf3+0x180>
  8011fc:	00802034 	movhi	r2,128
  801200:	10bfffc4 	addi	r2,r2,-1
  801204:	7088703a 	and	r4,r14,r2
  801208:	9007883a 	mov	r3,r18
  80120c:	003f9406 	br	801060 <__subsf3+0x128>
  801210:	00ffffc4 	movi	r3,-1
  801214:	0009883a 	mov	r4,zero
  801218:	003f9106 	br	801060 <__subsf3+0x128>
  80121c:	303fe526 	beq	r6,zero,8011b4 <__subsf3+0x27c>
  801220:	6247c83a 	sub	r3,r12,r9
  801224:	48002d26 	beq	r9,zero,8012dc <__subsf3+0x3a4>
  801228:	60803fe0 	cmpeqi	r2,r12,255
  80122c:	103fa11e 	bne	r2,zero,8010b4 <__subsf3+0x17c>
  801230:	52810034 	orhi	r10,r10,1024
  801234:	18800708 	cmpgei	r2,r3,28
  801238:	10004c1e 	bne	r2,zero,80136c <__subsf3+0x434>
  80123c:	00800804 	movi	r2,32
  801240:	10c5c83a 	sub	r2,r2,r3
  801244:	5084983a 	sll	r2,r10,r2
  801248:	50c6d83a 	srl	r3,r10,r3
  80124c:	1004c03a 	cmpne	r2,r2,zero
  801250:	1888b03a 	or	r4,r3,r2
  801254:	22c5883a 	add	r2,r4,r11
  801258:	6025883a 	mov	r18,r12
  80125c:	003fb606 	br	801138 <__subsf3+0x200>
  801260:	013f0034 	movhi	r4,64512
  801264:	213fffc4 	addi	r4,r4,-1
  801268:	90e5c83a 	sub	r18,r18,r3
  80126c:	1104703a 	and	r2,r2,r4
  801270:	003f6e06 	br	80102c <__subsf3+0xf4>
  801274:	52e1c83a 	sub	r16,r10,r11
  801278:	8081002c 	andhi	r2,r16,1024
  80127c:	1000251e 	bne	r2,zero,801314 <__subsf3+0x3dc>
  801280:	803f5c1e 	bne	r16,zero,800ff4 <__subsf3+0xbc>
  801284:	0023883a 	mov	r17,zero
  801288:	0007883a 	mov	r3,zero
  80128c:	0009883a 	mov	r4,zero
  801290:	003f7306 	br	801060 <__subsf3+0x128>
  801294:	60803fe0 	cmpeqi	r2,r12,255
  801298:	103f861e 	bne	r2,zero,8010b4 <__subsf3+0x17c>
  80129c:	52810034 	orhi	r10,r10,1024
  8012a0:	18800708 	cmpgei	r2,r3,28
  8012a4:	10000626 	beq	r2,zero,8012c0 <__subsf3+0x388>
  8012a8:	01000044 	movi	r4,1
  8012ac:	5905c83a 	sub	r2,r11,r4
  8012b0:	6025883a 	mov	r18,r12
  8012b4:	003f4a06 	br	800fe0 <__subsf3+0xa8>
  8012b8:	00800044 	movi	r2,1
  8012bc:	003f9d06 	br	801134 <__subsf3+0x1fc>
  8012c0:	00800804 	movi	r2,32
  8012c4:	10c5c83a 	sub	r2,r2,r3
  8012c8:	5084983a 	sll	r2,r10,r2
  8012cc:	50c6d83a 	srl	r3,r10,r3
  8012d0:	1004c03a 	cmpne	r2,r2,zero
  8012d4:	1888b03a 	or	r4,r3,r2
  8012d8:	003ff406 	br	8012ac <__subsf3+0x374>
  8012dc:	50000a26 	beq	r10,zero,801308 <__subsf3+0x3d0>
  8012e0:	18ffffc4 	addi	r3,r3,-1
  8012e4:	18003226 	beq	r3,zero,8013b0 <__subsf3+0x478>
  8012e8:	60803fe0 	cmpeqi	r2,r12,255
  8012ec:	103fd126 	beq	r2,zero,801234 <__subsf3+0x2fc>
  8012f0:	003f7006 	br	8010b4 <__subsf3+0x17c>
  8012f4:	90803fe0 	cmpeqi	r2,r18,255
  8012f8:	103fc51e 	bne	r2,zero,801210 <__subsf3+0x2d8>
  8012fc:	52c5883a 	add	r2,r10,r11
  801300:	1004d07a 	srli	r2,r2,1
  801304:	003fb806 	br	8011e8 <__subsf3+0x2b0>
  801308:	401d883a 	mov	r14,r8
  80130c:	6025883a 	mov	r18,r12
  801310:	003fb806 	br	8011f4 <__subsf3+0x2bc>
  801314:	5aa1c83a 	sub	r16,r11,r10
  801318:	6823883a 	mov	r17,r13
  80131c:	003f3506 	br	800ff4 <__subsf3+0xbc>
  801320:	50000a1e 	bne	r10,zero,80134c <__subsf3+0x414>
  801324:	58000e1e 	bne	r11,zero,801360 <__subsf3+0x428>
  801328:	01002034 	movhi	r4,128
  80132c:	0023883a 	mov	r17,zero
  801330:	213fffc4 	addi	r4,r4,-1
  801334:	003f6506 	br	8010cc <__subsf3+0x194>
  801338:	52c5883a 	add	r2,r10,r11
  80133c:	003f7e06 	br	801138 <__subsf3+0x200>
  801340:	52c5c83a 	sub	r2,r10,r11
  801344:	003f2606 	br	800fe0 <__subsf3+0xa8>
  801348:	503f5a26 	beq	r10,zero,8010b4 <__subsf3+0x17c>
  80134c:	583f5a26 	beq	r11,zero,8010b8 <__subsf3+0x180>
  801350:	2080102c 	andhi	r2,r4,64
  801354:	103f5826 	beq	r2,zero,8010b8 <__subsf3+0x180>
  801358:	4080102c 	andhi	r2,r8,64
  80135c:	103f561e 	bne	r2,zero,8010b8 <__subsf3+0x180>
  801360:	6823883a 	mov	r17,r13
  801364:	401d883a 	mov	r14,r8
  801368:	003f5306 	br	8010b8 <__subsf3+0x180>
  80136c:	01000044 	movi	r4,1
  801370:	003fb806 	br	801254 <__subsf3+0x31c>
  801374:	5a85c83a 	sub	r2,r11,r10
  801378:	6025883a 	mov	r18,r12
  80137c:	003f1806 	br	800fe0 <__subsf3+0xa8>
  801380:	58000426 	beq	r11,zero,801394 <__subsf3+0x45c>
  801384:	6823883a 	mov	r17,r13
  801388:	4009883a 	mov	r4,r8
  80138c:	003f3406 	br	801060 <__subsf3+0x128>
  801390:	1000051e 	bne	r2,zero,8013a8 <__subsf3+0x470>
  801394:	0023883a 	mov	r17,zero
  801398:	0009883a 	mov	r4,zero
  80139c:	003f3006 	br	801060 <__subsf3+0x128>
  8013a0:	4009883a 	mov	r4,r8
  8013a4:	003f2e06 	br	801060 <__subsf3+0x128>
  8013a8:	0025883a 	mov	r18,zero
  8013ac:	003f8e06 	br	8011e8 <__subsf3+0x2b0>
  8013b0:	52c5883a 	add	r2,r10,r11
  8013b4:	6025883a 	mov	r18,r12
  8013b8:	003f5f06 	br	801138 <__subsf3+0x200>

008013bc <__extendsfdf2>:
  8013bc:	200ad5fa 	srli	r5,r4,23
  8013c0:	defffd04 	addi	sp,sp,-12
  8013c4:	dc000015 	stw	r16,0(sp)
  8013c8:	29403fcc 	andi	r5,r5,255
  8013cc:	04002034 	movhi	r16,128
  8013d0:	28800044 	addi	r2,r5,1
  8013d4:	dc400115 	stw	r17,4(sp)
  8013d8:	843fffc4 	addi	r16,r16,-1
  8013dc:	dfc00215 	stw	ra,8(sp)
  8013e0:	10803f8c 	andi	r2,r2,254
  8013e4:	2022d7fa 	srli	r17,r4,31
  8013e8:	8120703a 	and	r16,r16,r4
  8013ec:	10000d26 	beq	r2,zero,801424 <__extendsfdf2+0x68>
  8013f0:	8008d0fa 	srli	r4,r16,3
  8013f4:	8020977a 	slli	r16,r16,29
  8013f8:	28c0e004 	addi	r3,r5,896
  8013fc:	180a953a 	slli	r5,r3,20
  801400:	880697fa 	slli	r3,r17,31
  801404:	8005883a 	mov	r2,r16
  801408:	290ab03a 	or	r5,r5,r4
  80140c:	28c6b03a 	or	r3,r5,r3
  801410:	dfc00217 	ldw	ra,8(sp)
  801414:	dc400117 	ldw	r17,4(sp)
  801418:	dc000017 	ldw	r16,0(sp)
  80141c:	dec00304 	addi	sp,sp,12
  801420:	f800283a 	ret
  801424:	2800111e 	bne	r5,zero,80146c <__extendsfdf2+0xb0>
  801428:	80001926 	beq	r16,zero,801490 <__extendsfdf2+0xd4>
  80142c:	8009883a 	mov	r4,r16
  801430:	08014b80 	call	8014b8 <__clzsi2>
  801434:	10c002c8 	cmpgei	r3,r2,11
  801438:	18001b1e 	bne	r3,zero,8014a8 <__extendsfdf2+0xec>
  80143c:	010002c4 	movi	r4,11
  801440:	2089c83a 	sub	r4,r4,r2
  801444:	10c00544 	addi	r3,r2,21
  801448:	810ad83a 	srl	r5,r16,r4
  80144c:	80e0983a 	sll	r16,r16,r3
  801450:	00c0e244 	movi	r3,905
  801454:	01000434 	movhi	r4,16
  801458:	213fffc4 	addi	r4,r4,-1
  80145c:	1885c83a 	sub	r2,r3,r2
  801460:	2908703a 	and	r4,r5,r4
  801464:	10c1ffcc 	andi	r3,r2,2047
  801468:	003fe406 	br	8013fc <__extendsfdf2+0x40>
  80146c:	80000b26 	beq	r16,zero,80149c <__extendsfdf2+0xe0>
  801470:	800ad0fa 	srli	r5,r16,3
  801474:	00800434 	movhi	r2,16
  801478:	10bfffc4 	addi	r2,r2,-1
  80147c:	29000234 	orhi	r4,r5,8
  801480:	8020977a 	slli	r16,r16,29
  801484:	2088703a 	and	r4,r4,r2
  801488:	00c1ffc4 	movi	r3,2047
  80148c:	003fdb06 	br	8013fc <__extendsfdf2+0x40>
  801490:	0007883a 	mov	r3,zero
  801494:	0009883a 	mov	r4,zero
  801498:	003fd806 	br	8013fc <__extendsfdf2+0x40>
  80149c:	00c1ffc4 	movi	r3,2047
  8014a0:	0009883a 	mov	r4,zero
  8014a4:	003fd506 	br	8013fc <__extendsfdf2+0x40>
  8014a8:	113ffd44 	addi	r4,r2,-11
  8014ac:	810a983a 	sll	r5,r16,r4
  8014b0:	0021883a 	mov	r16,zero
  8014b4:	003fe606 	br	801450 <__extendsfdf2+0x94>

008014b8 <__clzsi2>:
  8014b8:	00bfffd4 	movui	r2,65535
  8014bc:	11000436 	bltu	r2,r4,8014d0 <__clzsi2+0x18>
  8014c0:	20804030 	cmpltui	r2,r4,256
  8014c4:	10000e26 	beq	r2,zero,801500 <__clzsi2+0x48>
  8014c8:	01400804 	movi	r5,32
  8014cc:	00000406 	br	8014e0 <__clzsi2+0x28>
  8014d0:	00804034 	movhi	r2,256
  8014d4:	20800736 	bltu	r4,r2,8014f4 <__clzsi2+0x3c>
  8014d8:	2008d63a 	srli	r4,r4,24
  8014dc:	01400204 	movi	r5,8
  8014e0:	00c02074 	movhi	r3,129
  8014e4:	20c7883a 	add	r3,r4,r3
  8014e8:	18833703 	ldbu	r2,3292(r3)
  8014ec:	2885c83a 	sub	r2,r5,r2
  8014f0:	f800283a 	ret
  8014f4:	2008d43a 	srli	r4,r4,16
  8014f8:	01400404 	movi	r5,16
  8014fc:	003ff806 	br	8014e0 <__clzsi2+0x28>
  801500:	2008d23a 	srli	r4,r4,8
  801504:	01400604 	movi	r5,24
  801508:	003ff506 	br	8014e0 <__clzsi2+0x28>

0080150c <__mulsi3>:
  80150c:	0005883a 	mov	r2,zero
  801510:	20000726 	beq	r4,zero,801530 <__mulsi3+0x24>
  801514:	20c0004c 	andi	r3,r4,1
  801518:	2008d07a 	srli	r4,r4,1
  80151c:	18000126 	beq	r3,zero,801524 <__mulsi3+0x18>
  801520:	1145883a 	add	r2,r2,r5
  801524:	294b883a 	add	r5,r5,r5
  801528:	203ffa1e 	bne	r4,zero,801514 <__mulsi3+0x8>
  80152c:	f800283a 	ret
  801530:	f800283a 	ret

00801534 <_printf_r>:
  801534:	defffd04 	addi	sp,sp,-12
  801538:	2805883a 	mov	r2,r5
  80153c:	dfc00015 	stw	ra,0(sp)
  801540:	d9800115 	stw	r6,4(sp)
  801544:	d9c00215 	stw	r7,8(sp)
  801548:	21400217 	ldw	r5,8(r4)
  80154c:	d9c00104 	addi	r7,sp,4
  801550:	100d883a 	mov	r6,r2
  801554:	08017100 	call	801710 <___vfprintf_internal_r>
  801558:	dfc00017 	ldw	ra,0(sp)
  80155c:	dec00304 	addi	sp,sp,12
  801560:	f800283a 	ret

00801564 <printf>:
  801564:	defffc04 	addi	sp,sp,-16
  801568:	dfc00015 	stw	ra,0(sp)
  80156c:	d9400115 	stw	r5,4(sp)
  801570:	d9800215 	stw	r6,8(sp)
  801574:	d9c00315 	stw	r7,12(sp)
  801578:	00802074 	movhi	r2,129
  80157c:	108bb817 	ldw	r2,12000(r2)
  801580:	200b883a 	mov	r5,r4
  801584:	d9800104 	addi	r6,sp,4
  801588:	11000217 	ldw	r4,8(r2)
  80158c:	08037fc0 	call	8037fc <__vfprintf_internal>
  801590:	dfc00017 	ldw	ra,0(sp)
  801594:	dec00404 	addi	sp,sp,16
  801598:	f800283a 	ret

0080159c <_puts_r>:
  80159c:	defff504 	addi	sp,sp,-44
  8015a0:	dc000815 	stw	r16,32(sp)
  8015a4:	2021883a 	mov	r16,r4
  8015a8:	2809883a 	mov	r4,r5
  8015ac:	dc400915 	stw	r17,36(sp)
  8015b0:	dfc00a15 	stw	ra,40(sp)
  8015b4:	2823883a 	mov	r17,r5
  8015b8:	08016780 	call	801678 <strlen>
  8015bc:	11000044 	addi	r4,r2,1
  8015c0:	d8800515 	stw	r2,20(sp)
  8015c4:	00800044 	movi	r2,1
  8015c8:	00c02074 	movhi	r3,129
  8015cc:	d8800715 	stw	r2,28(sp)
  8015d0:	d8800404 	addi	r2,sp,16
  8015d4:	18c32d04 	addi	r3,r3,3252
  8015d8:	d8800115 	stw	r2,4(sp)
  8015dc:	00800084 	movi	r2,2
  8015e0:	dc400415 	stw	r17,16(sp)
  8015e4:	d8c00615 	stw	r3,24(sp)
  8015e8:	d9000315 	stw	r4,12(sp)
  8015ec:	d8800215 	stw	r2,8(sp)
  8015f0:	81400217 	ldw	r5,8(r16)
  8015f4:	80000226 	beq	r16,zero,801600 <_puts_r+0x64>
  8015f8:	80800e17 	ldw	r2,56(r16)
  8015fc:	10001326 	beq	r2,zero,80164c <_puts_r+0xb0>
  801600:	2880030b 	ldhu	r2,12(r5)
  801604:	10c8000c 	andi	r3,r2,8192
  801608:	1800061e 	bne	r3,zero,801624 <_puts_r+0x88>
  80160c:	28c01917 	ldw	r3,100(r5)
  801610:	0137ffc4 	movi	r4,-8193
  801614:	10880014 	ori	r2,r2,8192
  801618:	1906703a 	and	r3,r3,r4
  80161c:	2880030d 	sth	r2,12(r5)
  801620:	28c01915 	stw	r3,100(r5)
  801624:	d9800104 	addi	r6,sp,4
  801628:	8009883a 	mov	r4,r16
  80162c:	0805dc00 	call	805dc0 <__sfvwrite_r>
  801630:	10000b1e 	bne	r2,zero,801660 <_puts_r+0xc4>
  801634:	00800284 	movi	r2,10
  801638:	dfc00a17 	ldw	ra,40(sp)
  80163c:	dc400917 	ldw	r17,36(sp)
  801640:	dc000817 	ldw	r16,32(sp)
  801644:	dec00b04 	addi	sp,sp,44
  801648:	f800283a 	ret
  80164c:	8009883a 	mov	r4,r16
  801650:	d9400015 	stw	r5,0(sp)
  801654:	08059600 	call	805960 <__sinit>
  801658:	d9400017 	ldw	r5,0(sp)
  80165c:	003fe806 	br	801600 <_puts_r+0x64>
  801660:	00bfffc4 	movi	r2,-1
  801664:	003ff406 	br	801638 <_puts_r+0x9c>

00801668 <puts>:
  801668:	00802074 	movhi	r2,129
  80166c:	200b883a 	mov	r5,r4
  801670:	110bb817 	ldw	r4,12000(r2)
  801674:	080159c1 	jmpi	80159c <_puts_r>

00801678 <strlen>:
  801678:	208000cc 	andi	r2,r4,3
  80167c:	10000926 	beq	r2,zero,8016a4 <strlen+0x2c>
  801680:	2005883a 	mov	r2,r4
  801684:	00000306 	br	801694 <strlen+0x1c>
  801688:	10800044 	addi	r2,r2,1
  80168c:	10c000cc 	andi	r3,r2,3
  801690:	18000526 	beq	r3,zero,8016a8 <strlen+0x30>
  801694:	10c00007 	ldb	r3,0(r2)
  801698:	183ffb1e 	bne	r3,zero,801688 <strlen+0x10>
  80169c:	1105c83a 	sub	r2,r2,r4
  8016a0:	f800283a 	ret
  8016a4:	2005883a 	mov	r2,r4
  8016a8:	11400017 	ldw	r5,0(r2)
  8016ac:	01ffbff4 	movhi	r7,65279
  8016b0:	39ffbfc4 	addi	r7,r7,-257
  8016b4:	29c7883a 	add	r3,r5,r7
  8016b8:	01a02074 	movhi	r6,32897
  8016bc:	014a303a 	nor	r5,zero,r5
  8016c0:	1946703a 	and	r3,r3,r5
  8016c4:	31a02004 	addi	r6,r6,-32640
  8016c8:	1986703a 	and	r3,r3,r6
  8016cc:	1800071e 	bne	r3,zero,8016ec <strlen+0x74>
  8016d0:	11400117 	ldw	r5,4(r2)
  8016d4:	10800104 	addi	r2,r2,4
  8016d8:	29c7883a 	add	r3,r5,r7
  8016dc:	014a303a 	nor	r5,zero,r5
  8016e0:	1946703a 	and	r3,r3,r5
  8016e4:	1986703a 	and	r3,r3,r6
  8016e8:	183ff926 	beq	r3,zero,8016d0 <strlen+0x58>
  8016ec:	10c00007 	ldb	r3,0(r2)
  8016f0:	183fea26 	beq	r3,zero,80169c <strlen+0x24>
  8016f4:	10c00047 	ldb	r3,1(r2)
  8016f8:	10800044 	addi	r2,r2,1
  8016fc:	183fe726 	beq	r3,zero,80169c <strlen+0x24>
  801700:	10c00047 	ldb	r3,1(r2)
  801704:	10800044 	addi	r2,r2,1
  801708:	183ffa1e 	bne	r3,zero,8016f4 <strlen+0x7c>
  80170c:	003fe306 	br	80169c <strlen+0x24>

00801710 <___vfprintf_internal_r>:
  801710:	deffbf04 	addi	sp,sp,-260
  801714:	dfc04015 	stw	ra,256(sp)
  801718:	dd803d15 	stw	r22,244(sp)
  80171c:	dcc03a15 	stw	r19,232(sp)
  801720:	dc803915 	stw	r18,228(sp)
  801724:	2027883a 	mov	r19,r4
  801728:	2825883a 	mov	r18,r5
  80172c:	302d883a 	mov	r22,r6
  801730:	d9c00615 	stw	r7,24(sp)
  801734:	df003f15 	stw	fp,252(sp)
  801738:	ddc03e15 	stw	r23,248(sp)
  80173c:	dd403c15 	stw	r21,240(sp)
  801740:	dd003b15 	stw	r20,236(sp)
  801744:	dc403815 	stw	r17,224(sp)
  801748:	dc003715 	stw	r16,220(sp)
  80174c:	08063d40 	call	8063d4 <_localeconv_r>
  801750:	10800017 	ldw	r2,0(r2)
  801754:	1009883a 	mov	r4,r2
  801758:	d8800d15 	stw	r2,52(sp)
  80175c:	08016780 	call	801678 <strlen>
  801760:	d8800b15 	stw	r2,44(sp)
  801764:	98000226 	beq	r19,zero,801770 <___vfprintf_internal_r+0x60>
  801768:	98800e17 	ldw	r2,56(r19)
  80176c:	1001d726 	beq	r2,zero,801ecc <___vfprintf_internal_r+0x7bc>
  801770:	9080030b 	ldhu	r2,12(r18)
  801774:	10c8000c 	andi	r3,r2,8192
  801778:	1800061e 	bne	r3,zero,801794 <___vfprintf_internal_r+0x84>
  80177c:	90c01917 	ldw	r3,100(r18)
  801780:	0137ffc4 	movi	r4,-8193
  801784:	10880014 	ori	r2,r2,8192
  801788:	1906703a 	and	r3,r3,r4
  80178c:	9080030d 	sth	r2,12(r18)
  801790:	90c01915 	stw	r3,100(r18)
  801794:	10c0020c 	andi	r3,r2,8
  801798:	1800fc26 	beq	r3,zero,801b8c <___vfprintf_internal_r+0x47c>
  80179c:	90c00417 	ldw	r3,16(r18)
  8017a0:	1800fa26 	beq	r3,zero,801b8c <___vfprintf_internal_r+0x47c>
  8017a4:	1080068c 	andi	r2,r2,26
  8017a8:	10800298 	cmpnei	r2,r2,10
  8017ac:	1000ff26 	beq	r2,zero,801bac <___vfprintf_internal_r+0x49c>
  8017b0:	d8802704 	addi	r2,sp,156
  8017b4:	b02f883a 	mov	r23,r22
  8017b8:	d8801a15 	stw	r2,104(sp)
  8017bc:	d8001c15 	stw	zero,112(sp)
  8017c0:	d8001b15 	stw	zero,108(sp)
  8017c4:	d8000815 	stw	zero,32(sp)
  8017c8:	d8000915 	stw	zero,36(sp)
  8017cc:	d8000a15 	stw	zero,40(sp)
  8017d0:	d8000c15 	stw	zero,48(sp)
  8017d4:	d8001015 	stw	zero,64(sp)
  8017d8:	d8000515 	stw	zero,20(sp)
  8017dc:	102d883a 	mov	r22,r2
  8017e0:	b8800007 	ldb	r2,0(r23)
  8017e4:	1000d726 	beq	r2,zero,801b44 <___vfprintf_internal_r+0x434>
  8017e8:	b821883a 	mov	r16,r23
  8017ec:	00000306 	br	8017fc <___vfprintf_internal_r+0xec>
  8017f0:	80800047 	ldb	r2,1(r16)
  8017f4:	84000044 	addi	r16,r16,1
  8017f8:	10011926 	beq	r2,zero,801c60 <___vfprintf_internal_r+0x550>
  8017fc:	10800958 	cmpnei	r2,r2,37
  801800:	103ffb1e 	bne	r2,zero,8017f0 <___vfprintf_internal_r+0xe0>
  801804:	85e3c83a 	sub	r17,r16,r23
  801808:	85c1171e 	bne	r16,r23,801c68 <___vfprintf_internal_r+0x558>
  80180c:	80800003 	ldbu	r2,0(r16)
  801810:	10803fcc 	andi	r2,r2,255
  801814:	1080201c 	xori	r2,r2,128
  801818:	10bfe004 	addi	r2,r2,-128
  80181c:	1000c926 	beq	r2,zero,801b44 <___vfprintf_internal_r+0x434>
  801820:	82c00047 	ldb	r11,1(r16)
  801824:	85c00044 	addi	r23,r16,1
  801828:	d8001345 	stb	zero,77(sp)
  80182c:	0009883a 	mov	r4,zero
  801830:	000b883a 	mov	r5,zero
  801834:	023fffc4 	movi	r8,-1
  801838:	0021883a 	mov	r16,zero
  80183c:	0019883a 	mov	r12,zero
  801840:	bdc00044 	addi	r23,r23,1
  801844:	5839883a 	mov	fp,r11
  801848:	e0bff804 	addi	r2,fp,-32
  80184c:	10c01668 	cmpgeui	r3,r2,89
  801850:	18006c1e 	bne	r3,zero,801a04 <___vfprintf_internal_r+0x2f4>
  801854:	100490ba 	slli	r2,r2,2
  801858:	00c02034 	movhi	r3,128
  80185c:	10c7883a 	add	r3,r2,r3
  801860:	18861a17 	ldw	r2,6248(r3)
  801864:	1000683a 	jmp	r2
  801868:	00802254 	movui	r2,137
  80186c:	00801a04 	movi	r2,104
  801870:	00801a04 	movi	r2,104
  801874:	00802248 	cmpgei	r2,zero,137
  801878:	00801a04 	movi	r2,104
  80187c:	00801a04 	movi	r2,104
  801880:	00801a04 	movi	r2,104
  801884:	00801a04 	movi	r2,104
  801888:	00801a04 	movi	r2,104
  80188c:	00801a04 	movi	r2,104
  801890:	00802220 	cmpeqi	r2,zero,136
  801894:	00802210 	cmplti	r2,zero,136
  801898:	00801a04 	movi	r2,104
  80189c:	008021f8 	rdprs	r2,zero,135
  8018a0:	008021ac 	andhi	r2,zero,134
  8018a4:	00801a04 	movi	r2,104
  8018a8:	008021a0 	cmpeqi	r2,zero,134
  8018ac:	008019cc 	andi	r2,zero,103
  8018b0:	008019cc 	andi	r2,zero,103
  8018b4:	008019cc 	andi	r2,zero,103
  8018b8:	008019cc 	andi	r2,zero,103
  8018bc:	008019cc 	andi	r2,zero,103
  8018c0:	008019cc 	andi	r2,zero,103
  8018c4:	008019cc 	andi	r2,zero,103
  8018c8:	008019cc 	andi	r2,zero,103
  8018cc:	008019cc 	andi	r2,zero,103
  8018d0:	00801a04 	movi	r2,104
  8018d4:	00801a04 	movi	r2,104
  8018d8:	00801a04 	movi	r2,104
  8018dc:	00801a04 	movi	r2,104
  8018e0:	00801a04 	movi	r2,104
  8018e4:	00801a04 	movi	r2,104
  8018e8:	00801a04 	movi	r2,104
  8018ec:	00801a04 	movi	r2,104
  8018f0:	00801a04 	movi	r2,104
  8018f4:	00801a04 	movi	r2,104
  8018f8:	00802094 	movui	r2,130
  8018fc:	00801cc4 	movi	r2,115
  801900:	00801a04 	movi	r2,104
  801904:	00801cc4 	movi	r2,115
  801908:	00801a04 	movi	r2,104
  80190c:	00801a04 	movi	r2,104
  801910:	00801a04 	movi	r2,104
  801914:	00801a04 	movi	r2,104
  801918:	00802280 	call	80228 <__alt_mem_sdram-0x77fdd8>
  80191c:	00801a04 	movi	r2,104
  801920:	00801a04 	movi	r2,104
  801924:	00801bf8 	rdprs	r2,zero,111
  801928:	00801a04 	movi	r2,104
  80192c:	00801a04 	movi	r2,104
  801930:	00801a04 	movi	r2,104
  801934:	00801a04 	movi	r2,104
  801938:	00801a04 	movi	r2,104
  80193c:	00801bd0 	cmplti	r2,zero,111
  801940:	00801a04 	movi	r2,104
  801944:	00801a04 	movi	r2,104
  801948:	008022b4 	movhi	r2,138
  80194c:	00801a04 	movi	r2,104
  801950:	00801a04 	movi	r2,104
  801954:	00801a04 	movi	r2,104
  801958:	00801a04 	movi	r2,104
  80195c:	00801a04 	movi	r2,104
  801960:	00801a04 	movi	r2,104
  801964:	00801a04 	movi	r2,104
  801968:	00801a04 	movi	r2,104
  80196c:	00801a04 	movi	r2,104
  801970:	00801a04 	movi	r2,104
  801974:	0080228c 	andi	r2,zero,138
  801978:	00801ed8 	cmpnei	r2,zero,123
  80197c:	00801cc4 	movi	r2,115
  801980:	00801cc4 	movi	r2,115
  801984:	00801cc4 	movi	r2,115
  801988:	00801f4c 	andi	r2,zero,125
  80198c:	00801ed8 	cmpnei	r2,zero,123
  801990:	00801a04 	movi	r2,104
  801994:	00801a04 	movi	r2,104
  801998:	00802080 	call	80208 <__alt_mem_sdram-0x77fdf8>
  80199c:	00801a04 	movi	r2,104
  8019a0:	00802044 	movi	r2,129
  8019a4:	00801bfc 	xorhi	r2,zero,111
  8019a8:	00802004 	movi	r2,128
  8019ac:	00801ff8 	rdprs	r2,zero,127
  8019b0:	00801a04 	movi	r2,104
  8019b4:	00801fa0 	cmpeqi	r2,zero,126
  8019b8:	00801a04 	movi	r2,104
  8019bc:	00801bd4 	movui	r2,111
  8019c0:	00801a04 	movi	r2,104
  8019c4:	00801a04 	movi	r2,104
  8019c8:	00801f58 	cmpnei	r2,zero,125
  8019cc:	0021883a 	mov	r16,zero
  8019d0:	e0fff404 	addi	r3,fp,-48
  8019d4:	800490ba 	slli	r2,r16,2
  8019d8:	bf000007 	ldb	fp,0(r23)
  8019dc:	bdc00044 	addi	r23,r23,1
  8019e0:	1421883a 	add	r16,r2,r16
  8019e4:	8421883a 	add	r16,r16,r16
  8019e8:	1c21883a 	add	r16,r3,r16
  8019ec:	e0fff404 	addi	r3,fp,-48
  8019f0:	188002b0 	cmpltui	r2,r3,10
  8019f4:	103ff71e 	bne	r2,zero,8019d4 <___vfprintf_internal_r+0x2c4>
  8019f8:	e0bff804 	addi	r2,fp,-32
  8019fc:	10c01668 	cmpgeui	r3,r2,89
  801a00:	183f9426 	beq	r3,zero,801854 <___vfprintf_internal_r+0x144>
  801a04:	21003fcc 	andi	r4,r4,255
  801a08:	20068f1e 	bne	r4,zero,803448 <___vfprintf_internal_r+0x1d38>
  801a0c:	e0004d26 	beq	fp,zero,801b44 <___vfprintf_internal_r+0x434>
  801a10:	df001d05 	stb	fp,116(sp)
  801a14:	d8001345 	stb	zero,77(sp)
  801a18:	05000044 	movi	r20,1
  801a1c:	05400044 	movi	r21,1
  801a20:	dc401d04 	addi	r17,sp,116
  801a24:	db000415 	stw	r12,16(sp)
  801a28:	0011883a 	mov	r8,zero
  801a2c:	d8000715 	stw	zero,28(sp)
  801a30:	d8800417 	ldw	r2,16(sp)
  801a34:	1380008c 	andi	r14,r2,2
  801a38:	70000126 	beq	r14,zero,801a40 <___vfprintf_internal_r+0x330>
  801a3c:	a5000084 	addi	r20,r20,2
  801a40:	d8800417 	ldw	r2,16(sp)
  801a44:	d8c01c17 	ldw	r3,112(sp)
  801a48:	1340210c 	andi	r13,r2,132
  801a4c:	6800021e 	bne	r13,zero,801a58 <___vfprintf_internal_r+0x348>
  801a50:	850fc83a 	sub	r7,r16,r20
  801a54:	01c36016 	blt	zero,r7,8027d8 <___vfprintf_internal_r+0x10c8>
  801a58:	d8801347 	ldb	r2,77(sp)
  801a5c:	10000c26 	beq	r2,zero,801a90 <___vfprintf_internal_r+0x380>
  801a60:	d8801b17 	ldw	r2,108(sp)
  801a64:	d9001344 	addi	r4,sp,77
  801a68:	18c00044 	addi	r3,r3,1
  801a6c:	10800044 	addi	r2,r2,1
  801a70:	b1000015 	stw	r4,0(r22)
  801a74:	01000044 	movi	r4,1
  801a78:	d8801b15 	stw	r2,108(sp)
  801a7c:	b1000115 	stw	r4,4(r22)
  801a80:	d8c01c15 	stw	r3,112(sp)
  801a84:	10800208 	cmpgei	r2,r2,8
  801a88:	1003a01e 	bne	r2,zero,80290c <___vfprintf_internal_r+0x11fc>
  801a8c:	b5800204 	addi	r22,r22,8
  801a90:	70000c26 	beq	r14,zero,801ac4 <___vfprintf_internal_r+0x3b4>
  801a94:	d8801b17 	ldw	r2,108(sp)
  801a98:	d9001384 	addi	r4,sp,78
  801a9c:	18c00084 	addi	r3,r3,2
  801aa0:	10800044 	addi	r2,r2,1
  801aa4:	b1000015 	stw	r4,0(r22)
  801aa8:	01000084 	movi	r4,2
  801aac:	d8801b15 	stw	r2,108(sp)
  801ab0:	b1000115 	stw	r4,4(r22)
  801ab4:	d8c01c15 	stw	r3,112(sp)
  801ab8:	10800208 	cmpgei	r2,r2,8
  801abc:	1003871e 	bne	r2,zero,8028dc <___vfprintf_internal_r+0x11cc>
  801ac0:	b5800204 	addi	r22,r22,8
  801ac4:	6b402018 	cmpnei	r13,r13,128
  801ac8:	68025226 	beq	r13,zero,802414 <___vfprintf_internal_r+0xd04>
  801acc:	4551c83a 	sub	r8,r8,r21
  801ad0:	02028a16 	blt	zero,r8,8024fc <___vfprintf_internal_r+0xdec>
  801ad4:	d8800417 	ldw	r2,16(sp)
  801ad8:	1080400c 	andi	r2,r2,256
  801adc:	1002071e 	bne	r2,zero,8022fc <___vfprintf_internal_r+0xbec>
  801ae0:	d8801b17 	ldw	r2,108(sp)
  801ae4:	1d47883a 	add	r3,r3,r21
  801ae8:	b4400015 	stw	r17,0(r22)
  801aec:	10800044 	addi	r2,r2,1
  801af0:	b5400115 	stw	r21,4(r22)
  801af4:	d8801b15 	stw	r2,108(sp)
  801af8:	d8c01c15 	stw	r3,112(sp)
  801afc:	10800208 	cmpgei	r2,r2,8
  801b00:	1002ee1e 	bne	r2,zero,8026bc <___vfprintf_internal_r+0xfac>
  801b04:	b5800204 	addi	r22,r22,8
  801b08:	d8800417 	ldw	r2,16(sp)
  801b0c:	1440010c 	andi	r17,r2,4
  801b10:	88000226 	beq	r17,zero,801b1c <___vfprintf_internal_r+0x40c>
  801b14:	8523c83a 	sub	r17,r16,r20
  801b18:	0440bd16 	blt	zero,r17,801e10 <___vfprintf_internal_r+0x700>
  801b1c:	8500010e 	bge	r16,r20,801b24 <___vfprintf_internal_r+0x414>
  801b20:	a021883a 	mov	r16,r20
  801b24:	d8800517 	ldw	r2,20(sp)
  801b28:	1405883a 	add	r2,r2,r16
  801b2c:	d8800515 	stw	r2,20(sp)
  801b30:	1802b91e 	bne	r3,zero,802618 <___vfprintf_internal_r+0xf08>
  801b34:	b8800007 	ldb	r2,0(r23)
  801b38:	d8001b15 	stw	zero,108(sp)
  801b3c:	dd802704 	addi	r22,sp,156
  801b40:	103f291e 	bne	r2,zero,8017e8 <___vfprintf_internal_r+0xd8>
  801b44:	d8801c17 	ldw	r2,112(sp)
  801b48:	10063a1e 	bne	r2,zero,803434 <___vfprintf_internal_r+0x1d24>
  801b4c:	9080030b 	ldhu	r2,12(r18)
  801b50:	1080100c 	andi	r2,r2,64
  801b54:	1006c91e 	bne	r2,zero,80367c <___vfprintf_internal_r+0x1f6c>
  801b58:	d8800517 	ldw	r2,20(sp)
  801b5c:	dfc04017 	ldw	ra,256(sp)
  801b60:	df003f17 	ldw	fp,252(sp)
  801b64:	ddc03e17 	ldw	r23,248(sp)
  801b68:	dd803d17 	ldw	r22,244(sp)
  801b6c:	dd403c17 	ldw	r21,240(sp)
  801b70:	dd003b17 	ldw	r20,236(sp)
  801b74:	dcc03a17 	ldw	r19,232(sp)
  801b78:	dc803917 	ldw	r18,228(sp)
  801b7c:	dc403817 	ldw	r17,224(sp)
  801b80:	dc003717 	ldw	r16,220(sp)
  801b84:	dec04104 	addi	sp,sp,260
  801b88:	f800283a 	ret
  801b8c:	900b883a 	mov	r5,r18
  801b90:	9809883a 	mov	r4,r19
  801b94:	08038d80 	call	8038d8 <__swsetup_r>
  801b98:	1006b81e 	bne	r2,zero,80367c <___vfprintf_internal_r+0x1f6c>
  801b9c:	9080030b 	ldhu	r2,12(r18)
  801ba0:	1080068c 	andi	r2,r2,26
  801ba4:	10800298 	cmpnei	r2,r2,10
  801ba8:	103f011e 	bne	r2,zero,8017b0 <___vfprintf_internal_r+0xa0>
  801bac:	9080038f 	ldh	r2,14(r18)
  801bb0:	103eff16 	blt	r2,zero,8017b0 <___vfprintf_internal_r+0xa0>
  801bb4:	d9c00617 	ldw	r7,24(sp)
  801bb8:	b00d883a 	mov	r6,r22
  801bbc:	900b883a 	mov	r5,r18
  801bc0:	9809883a 	mov	r4,r19
  801bc4:	08038180 	call	803818 <__sbprintf>
  801bc8:	d8800515 	stw	r2,20(sp)
  801bcc:	003fe206 	br	801b58 <___vfprintf_internal_r+0x448>
  801bd0:	63000414 	ori	r12,r12,16
  801bd4:	6080080c 	andi	r2,r12,32
  801bd8:	10008126 	beq	r2,zero,801de0 <___vfprintf_internal_r+0x6d0>
  801bdc:	d8c00617 	ldw	r3,24(sp)
  801be0:	00800044 	movi	r2,1
  801be4:	1d000017 	ldw	r20,0(r3)
  801be8:	1d400117 	ldw	r21,4(r3)
  801bec:	18c00204 	addi	r3,r3,8
  801bf0:	d8c00615 	stw	r3,24(sp)
  801bf4:	00000906 	br	801c1c <___vfprintf_internal_r+0x50c>
  801bf8:	63000414 	ori	r12,r12,16
  801bfc:	6080080c 	andi	r2,r12,32
  801c00:	10006b26 	beq	r2,zero,801db0 <___vfprintf_internal_r+0x6a0>
  801c04:	d8c00617 	ldw	r3,24(sp)
  801c08:	0005883a 	mov	r2,zero
  801c0c:	1d000017 	ldw	r20,0(r3)
  801c10:	1d400117 	ldw	r21,4(r3)
  801c14:	18c00204 	addi	r3,r3,8
  801c18:	d8c00615 	stw	r3,24(sp)
  801c1c:	d8001345 	stb	zero,77(sp)
  801c20:	40ffffe0 	cmpeqi	r3,r8,-1
  801c24:	001b883a 	mov	r13,zero
  801c28:	1801351e 	bne	r3,zero,802100 <___vfprintf_internal_r+0x9f0>
  801c2c:	047fdfc4 	movi	r17,-129
  801c30:	6448703a 	and	r4,r12,r17
  801c34:	a546b03a 	or	r3,r20,r21
  801c38:	d9000415 	stw	r4,16(sp)
  801c3c:	1802e41e 	bne	r3,zero,8027d0 <___vfprintf_internal_r+0x10c0>
  801c40:	40025f1e 	bne	r8,zero,8025c0 <___vfprintf_internal_r+0xeb0>
  801c44:	1003a61e 	bne	r2,zero,802ae0 <___vfprintf_internal_r+0x13d0>
  801c48:	6540004c 	andi	r21,r12,1
  801c4c:	a803d426 	beq	r21,zero,802ba0 <___vfprintf_internal_r+0x1490>
  801c50:	00800c04 	movi	r2,48
  801c54:	d88026c5 	stb	r2,155(sp)
  801c58:	dc4026c4 	addi	r17,sp,155
  801c5c:	00014606 	br	802178 <___vfprintf_internal_r+0xa68>
  801c60:	85e3c83a 	sub	r17,r16,r23
  801c64:	85ffb726 	beq	r16,r23,801b44 <___vfprintf_internal_r+0x434>
  801c68:	d8c01c17 	ldw	r3,112(sp)
  801c6c:	d8801b17 	ldw	r2,108(sp)
  801c70:	b5c00015 	stw	r23,0(r22)
  801c74:	1c47883a 	add	r3,r3,r17
  801c78:	10800044 	addi	r2,r2,1
  801c7c:	d8801b15 	stw	r2,108(sp)
  801c80:	b4400115 	stw	r17,4(r22)
  801c84:	d8c01c15 	stw	r3,112(sp)
  801c88:	10800208 	cmpgei	r2,r2,8
  801c8c:	1000061e 	bne	r2,zero,801ca8 <___vfprintf_internal_r+0x598>
  801c90:	b5800204 	addi	r22,r22,8
  801c94:	d8c00517 	ldw	r3,20(sp)
  801c98:	80800003 	ldbu	r2,0(r16)
  801c9c:	1c47883a 	add	r3,r3,r17
  801ca0:	d8c00515 	stw	r3,20(sp)
  801ca4:	003eda06 	br	801810 <___vfprintf_internal_r+0x100>
  801ca8:	d9801a04 	addi	r6,sp,104
  801cac:	900b883a 	mov	r5,r18
  801cb0:	9809883a 	mov	r4,r19
  801cb4:	0808abc0 	call	808abc <__sprint_r>
  801cb8:	103fa41e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  801cbc:	dd802704 	addi	r22,sp,156
  801cc0:	003ff406 	br	801c94 <___vfprintf_internal_r+0x584>
  801cc4:	21003fcc 	andi	r4,r4,255
  801cc8:	20066a1e 	bne	r4,zero,803674 <___vfprintf_internal_r+0x1f64>
  801ccc:	d8c00617 	ldw	r3,24(sp)
  801cd0:	6080020c 	andi	r2,r12,8
  801cd4:	19000204 	addi	r4,r3,8
  801cd8:	d9000e15 	stw	r4,56(sp)
  801cdc:	1003d01e 	bne	r2,zero,802c20 <___vfprintf_internal_r+0x1510>
  801ce0:	d8800617 	ldw	r2,24(sp)
  801ce4:	10c00017 	ldw	r3,0(r2)
  801ce8:	10800117 	ldw	r2,4(r2)
  801cec:	d8c00915 	stw	r3,36(sp)
  801cf0:	d8800a15 	stw	r2,40(sp)
  801cf4:	dd400a17 	ldw	r21,40(sp)
  801cf8:	dd000917 	ldw	r20,36(sp)
  801cfc:	00a00034 	movhi	r2,32768
  801d00:	10bfffc4 	addi	r2,r2,-1
  801d04:	a8a2703a 	and	r17,r21,r2
  801d08:	01dffc34 	movhi	r7,32752
  801d0c:	01bfffc4 	movi	r6,-1
  801d10:	39ffffc4 	addi	r7,r7,-1
  801d14:	a009883a 	mov	r4,r20
  801d18:	880b883a 	mov	r5,r17
  801d1c:	da000615 	stw	r8,24(sp)
  801d20:	db000415 	stw	r12,16(sp)
  801d24:	080e07c0 	call	80e07c <__unorddf2>
  801d28:	db000417 	ldw	r12,16(sp)
  801d2c:	da000617 	ldw	r8,24(sp)
  801d30:	1004701e 	bne	r2,zero,802ef4 <___vfprintf_internal_r+0x17e4>
  801d34:	01dffc34 	movhi	r7,32752
  801d38:	01bfffc4 	movi	r6,-1
  801d3c:	39ffffc4 	addi	r7,r7,-1
  801d40:	a009883a 	mov	r4,r20
  801d44:	880b883a 	mov	r5,r17
  801d48:	080ceb00 	call	80ceb0 <__ledf2>
  801d4c:	db000417 	ldw	r12,16(sp)
  801d50:	da000617 	ldw	r8,24(sp)
  801d54:	0084670e 	bge	zero,r2,802ef4 <___vfprintf_internal_r+0x17e4>
  801d58:	000d883a 	mov	r6,zero
  801d5c:	000f883a 	mov	r7,zero
  801d60:	a009883a 	mov	r4,r20
  801d64:	a80b883a 	mov	r5,r21
  801d68:	080ceb00 	call	80ceb0 <__ledf2>
  801d6c:	db000417 	ldw	r12,16(sp)
  801d70:	10059d16 	blt	r2,zero,8033e8 <___vfprintf_internal_r+0x1cd8>
  801d74:	db401343 	ldbu	r13,77(sp)
  801d78:	e0801210 	cmplti	r2,fp,72
  801d7c:	1005741e 	bne	r2,zero,803350 <___vfprintf_internal_r+0x1c40>
  801d80:	04402074 	movhi	r17,129
  801d84:	8c437804 	addi	r17,r17,3552
  801d88:	00bfdfc4 	movi	r2,-129
  801d8c:	6084703a 	and	r2,r12,r2
  801d90:	d8800415 	stw	r2,16(sp)
  801d94:	d8800e17 	ldw	r2,56(sp)
  801d98:	050000c4 	movi	r20,3
  801d9c:	054000c4 	movi	r21,3
  801da0:	d8800615 	stw	r2,24(sp)
  801da4:	0011883a 	mov	r8,zero
  801da8:	d8000715 	stw	zero,28(sp)
  801dac:	0000f606 	br	802188 <___vfprintf_internal_r+0xa78>
  801db0:	d9000617 	ldw	r4,24(sp)
  801db4:	6080040c 	andi	r2,r12,16
  801db8:	20c00104 	addi	r3,r4,4
  801dbc:	1003891e 	bne	r2,zero,802be4 <___vfprintf_internal_r+0x14d4>
  801dc0:	6080100c 	andi	r2,r12,64
  801dc4:	10056b26 	beq	r2,zero,803374 <___vfprintf_internal_r+0x1c64>
  801dc8:	d8800617 	ldw	r2,24(sp)
  801dcc:	002b883a 	mov	r21,zero
  801dd0:	d8c00615 	stw	r3,24(sp)
  801dd4:	1500000b 	ldhu	r20,0(r2)
  801dd8:	0005883a 	mov	r2,zero
  801ddc:	003f8f06 	br	801c1c <___vfprintf_internal_r+0x50c>
  801de0:	d9000617 	ldw	r4,24(sp)
  801de4:	6080040c 	andi	r2,r12,16
  801de8:	20c00104 	addi	r3,r4,4
  801dec:	1003821e 	bne	r2,zero,802bf8 <___vfprintf_internal_r+0x14e8>
  801df0:	6080100c 	andi	r2,r12,64
  801df4:	10056526 	beq	r2,zero,80338c <___vfprintf_internal_r+0x1c7c>
  801df8:	d8800617 	ldw	r2,24(sp)
  801dfc:	002b883a 	mov	r21,zero
  801e00:	d8c00615 	stw	r3,24(sp)
  801e04:	1500000b 	ldhu	r20,0(r2)
  801e08:	00800044 	movi	r2,1
  801e0c:	003f8306 	br	801c1c <___vfprintf_internal_r+0x50c>
  801e10:	03002074 	movhi	r12,129
  801e14:	89000450 	cmplti	r4,r17,17
  801e18:	d8801b17 	ldw	r2,108(sp)
  801e1c:	63038c04 	addi	r12,r12,3632
  801e20:	20001b1e 	bne	r4,zero,801e90 <___vfprintf_internal_r+0x780>
  801e24:	05400404 	movi	r21,16
  801e28:	6039883a 	mov	fp,r12
  801e2c:	00000406 	br	801e40 <___vfprintf_internal_r+0x730>
  801e30:	8c7ffc04 	addi	r17,r17,-16
  801e34:	89000448 	cmpgei	r4,r17,17
  801e38:	b5800204 	addi	r22,r22,8
  801e3c:	20001326 	beq	r4,zero,801e8c <___vfprintf_internal_r+0x77c>
  801e40:	10800044 	addi	r2,r2,1
  801e44:	18c00404 	addi	r3,r3,16
  801e48:	b7000015 	stw	fp,0(r22)
  801e4c:	b5400115 	stw	r21,4(r22)
  801e50:	d8c01c15 	stw	r3,112(sp)
  801e54:	d8801b15 	stw	r2,108(sp)
  801e58:	11000208 	cmpgei	r4,r2,8
  801e5c:	203ff426 	beq	r4,zero,801e30 <___vfprintf_internal_r+0x720>
  801e60:	d9801a04 	addi	r6,sp,104
  801e64:	900b883a 	mov	r5,r18
  801e68:	9809883a 	mov	r4,r19
  801e6c:	0808abc0 	call	808abc <__sprint_r>
  801e70:	103f361e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  801e74:	8c7ffc04 	addi	r17,r17,-16
  801e78:	89000448 	cmpgei	r4,r17,17
  801e7c:	d8c01c17 	ldw	r3,112(sp)
  801e80:	d8801b17 	ldw	r2,108(sp)
  801e84:	dd802704 	addi	r22,sp,156
  801e88:	203fed1e 	bne	r4,zero,801e40 <___vfprintf_internal_r+0x730>
  801e8c:	e019883a 	mov	r12,fp
  801e90:	10800044 	addi	r2,r2,1
  801e94:	1c47883a 	add	r3,r3,r17
  801e98:	d8801b15 	stw	r2,108(sp)
  801e9c:	b3000015 	stw	r12,0(r22)
  801ea0:	b4400115 	stw	r17,4(r22)
  801ea4:	d8c01c15 	stw	r3,112(sp)
  801ea8:	10800210 	cmplti	r2,r2,8
  801eac:	103f1b1e 	bne	r2,zero,801b1c <___vfprintf_internal_r+0x40c>
  801eb0:	d9801a04 	addi	r6,sp,104
  801eb4:	900b883a 	mov	r5,r18
  801eb8:	9809883a 	mov	r4,r19
  801ebc:	0808abc0 	call	808abc <__sprint_r>
  801ec0:	103f221e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  801ec4:	d8c01c17 	ldw	r3,112(sp)
  801ec8:	003f1406 	br	801b1c <___vfprintf_internal_r+0x40c>
  801ecc:	9809883a 	mov	r4,r19
  801ed0:	08059600 	call	805960 <__sinit>
  801ed4:	003e2606 	br	801770 <___vfprintf_internal_r+0x60>
  801ed8:	21003fcc 	andi	r4,r4,255
  801edc:	2005db1e 	bne	r4,zero,80364c <___vfprintf_internal_r+0x1f3c>
  801ee0:	6080080c 	andi	r2,r12,32
  801ee4:	10007026 	beq	r2,zero,8020a8 <___vfprintf_internal_r+0x998>
  801ee8:	d8c00617 	ldw	r3,24(sp)
  801eec:	18800117 	ldw	r2,4(r3)
  801ef0:	1d000017 	ldw	r20,0(r3)
  801ef4:	18c00204 	addi	r3,r3,8
  801ef8:	d8c00615 	stw	r3,24(sp)
  801efc:	102b883a 	mov	r21,r2
  801f00:	10007516 	blt	r2,zero,8020d8 <___vfprintf_internal_r+0x9c8>
  801f04:	40bfffd8 	cmpnei	r2,r8,-1
  801f08:	10034a26 	beq	r2,zero,802c34 <___vfprintf_internal_r+0x1524>
  801f0c:	047fdfc4 	movi	r17,-129
  801f10:	6446703a 	and	r3,r12,r17
  801f14:	a544b03a 	or	r2,r20,r21
  801f18:	d8c00415 	stw	r3,16(sp)
  801f1c:	db401343 	ldbu	r13,77(sp)
  801f20:	1002ee26 	beq	r2,zero,802adc <___vfprintf_internal_r+0x13cc>
  801f24:	db000417 	ldw	r12,16(sp)
  801f28:	a803441e 	bne	r21,zero,802c3c <___vfprintf_internal_r+0x152c>
  801f2c:	a08002a8 	cmpgeui	r2,r20,10
  801f30:	1003421e 	bne	r2,zero,802c3c <___vfprintf_internal_r+0x152c>
  801f34:	a5000c04 	addi	r20,r20,48
  801f38:	dd0026c5 	stb	r20,155(sp)
  801f3c:	db000415 	stw	r12,16(sp)
  801f40:	05400044 	movi	r21,1
  801f44:	dc4026c4 	addi	r17,sp,155
  801f48:	00008b06 	br	802178 <___vfprintf_internal_r+0xa68>
  801f4c:	bac00007 	ldb	r11,0(r23)
  801f50:	63001014 	ori	r12,r12,64
  801f54:	003e3a06 	br	801840 <___vfprintf_internal_r+0x130>
  801f58:	21003fcc 	andi	r4,r4,255
  801f5c:	2005c11e 	bne	r4,zero,803664 <___vfprintf_internal_r+0x1f54>
  801f60:	00802074 	movhi	r2,129
  801f64:	10838004 	addi	r2,r2,3584
  801f68:	d8800c15 	stw	r2,48(sp)
  801f6c:	6080080c 	andi	r2,r12,32
  801f70:	1000d726 	beq	r2,zero,8022d0 <___vfprintf_internal_r+0xbc0>
  801f74:	d8800617 	ldw	r2,24(sp)
  801f78:	15000017 	ldw	r20,0(r2)
  801f7c:	15400117 	ldw	r21,4(r2)
  801f80:	10800204 	addi	r2,r2,8
  801f84:	d8800615 	stw	r2,24(sp)
  801f88:	6080004c 	andi	r2,r12,1
  801f8c:	10000226 	beq	r2,zero,801f98 <___vfprintf_internal_r+0x888>
  801f90:	a544b03a 	or	r2,r20,r21
  801f94:	1003091e 	bne	r2,zero,802bbc <___vfprintf_internal_r+0x14ac>
  801f98:	00800084 	movi	r2,2
  801f9c:	003f1f06 	br	801c1c <___vfprintf_internal_r+0x50c>
  801fa0:	d8800617 	ldw	r2,24(sp)
  801fa4:	d8001345 	stb	zero,77(sp)
  801fa8:	14400017 	ldw	r17,0(r2)
  801fac:	10c00104 	addi	r3,r2,4
  801fb0:	88037726 	beq	r17,zero,802d90 <___vfprintf_internal_r+0x1680>
  801fb4:	40bfffe0 	cmpeqi	r2,r8,-1
  801fb8:	1004661e 	bne	r2,zero,803154 <___vfprintf_internal_r+0x1a44>
  801fbc:	400d883a 	mov	r6,r8
  801fc0:	000b883a 	mov	r5,zero
  801fc4:	8809883a 	mov	r4,r17
  801fc8:	d8c00715 	stw	r3,28(sp)
  801fcc:	db000615 	stw	r12,24(sp)
  801fd0:	da000415 	stw	r8,16(sp)
  801fd4:	0806da40 	call	806da4 <memchr>
  801fd8:	da000417 	ldw	r8,16(sp)
  801fdc:	db000617 	ldw	r12,24(sp)
  801fe0:	d8c00717 	ldw	r3,28(sp)
  801fe4:	10058926 	beq	r2,zero,80360c <___vfprintf_internal_r+0x1efc>
  801fe8:	146bc83a 	sub	r21,r2,r17
  801fec:	a829883a 	mov	r20,r21
  801ff0:	d8c00615 	stw	r3,24(sp)
  801ff4:	003e8b06 	br	801a24 <___vfprintf_internal_r+0x314>
  801ff8:	bac00007 	ldb	r11,0(r23)
  801ffc:	63000814 	ori	r12,r12,32
  802000:	003e0f06 	br	801840 <___vfprintf_internal_r+0x130>
  802004:	d8c00617 	ldw	r3,24(sp)
  802008:	00800c04 	movi	r2,48
  80200c:	d8801385 	stb	r2,78(sp)
  802010:	00801e04 	movi	r2,120
  802014:	01002074 	movhi	r4,129
  802018:	d88013c5 	stb	r2,79(sp)
  80201c:	18800104 	addi	r2,r3,4
  802020:	d8800615 	stw	r2,24(sp)
  802024:	20838004 	addi	r2,r4,3584
  802028:	d8800c15 	stw	r2,48(sp)
  80202c:	1d000017 	ldw	r20,0(r3)
  802030:	002b883a 	mov	r21,zero
  802034:	63000094 	ori	r12,r12,2
  802038:	00800084 	movi	r2,2
  80203c:	07001e04 	movi	fp,120
  802040:	003ef606 	br	801c1c <___vfprintf_internal_r+0x50c>
  802044:	21003fcc 	andi	r4,r4,255
  802048:	2005881e 	bne	r4,zero,80366c <___vfprintf_internal_r+0x1f5c>
  80204c:	d9000617 	ldw	r4,24(sp)
  802050:	6080080c 	andi	r2,r12,32
  802054:	20c00017 	ldw	r3,0(r4)
  802058:	21000104 	addi	r4,r4,4
  80205c:	d9000615 	stw	r4,24(sp)
  802060:	1002d11e 	bne	r2,zero,802ba8 <___vfprintf_internal_r+0x1498>
  802064:	6080040c 	andi	r2,r12,16
  802068:	10036f1e 	bne	r2,zero,802e28 <___vfprintf_internal_r+0x1718>
  80206c:	6300100c 	andi	r12,r12,64
  802070:	60036d26 	beq	r12,zero,802e28 <___vfprintf_internal_r+0x1718>
  802074:	d8800517 	ldw	r2,20(sp)
  802078:	1880000d 	sth	r2,0(r3)
  80207c:	003dd806 	br	8017e0 <___vfprintf_internal_r+0xd0>
  802080:	bac00007 	ldb	r11,0(r23)
  802084:	58801b18 	cmpnei	r2,r11,108
  802088:	10033026 	beq	r2,zero,802d4c <___vfprintf_internal_r+0x163c>
  80208c:	63000414 	ori	r12,r12,16
  802090:	003deb06 	br	801840 <___vfprintf_internal_r+0x130>
  802094:	21003fcc 	andi	r4,r4,255
  802098:	2005701e 	bne	r4,zero,80365c <___vfprintf_internal_r+0x1f4c>
  80209c:	63000414 	ori	r12,r12,16
  8020a0:	6080080c 	andi	r2,r12,32
  8020a4:	103f901e 	bne	r2,zero,801ee8 <___vfprintf_internal_r+0x7d8>
  8020a8:	d9000617 	ldw	r4,24(sp)
  8020ac:	6080040c 	andi	r2,r12,16
  8020b0:	20c00104 	addi	r3,r4,4
  8020b4:	1002d51e 	bne	r2,zero,802c0c <___vfprintf_internal_r+0x14fc>
  8020b8:	6080100c 	andi	r2,r12,64
  8020bc:	1004a726 	beq	r2,zero,80335c <___vfprintf_internal_r+0x1c4c>
  8020c0:	d8800617 	ldw	r2,24(sp)
  8020c4:	d8c00615 	stw	r3,24(sp)
  8020c8:	1500000f 	ldh	r20,0(r2)
  8020cc:	a02bd7fa 	srai	r21,r20,31
  8020d0:	a805883a 	mov	r2,r21
  8020d4:	103f8b0e 	bge	r2,zero,801f04 <___vfprintf_internal_r+0x7f4>
  8020d8:	a004c03a 	cmpne	r2,r20,zero
  8020dc:	056bc83a 	sub	r21,zero,r21
  8020e0:	a8abc83a 	sub	r21,r21,r2
  8020e4:	00800b44 	movi	r2,45
  8020e8:	d8801345 	stb	r2,77(sp)
  8020ec:	40ffffe0 	cmpeqi	r3,r8,-1
  8020f0:	0529c83a 	sub	r20,zero,r20
  8020f4:	03400b44 	movi	r13,45
  8020f8:	00800044 	movi	r2,1
  8020fc:	183ecb26 	beq	r3,zero,801c2c <___vfprintf_internal_r+0x51c>
  802100:	10c00060 	cmpeqi	r3,r2,1
  802104:	183f881e 	bne	r3,zero,801f28 <___vfprintf_internal_r+0x818>
  802108:	108000a0 	cmpeqi	r2,r2,2
  80210c:	1001311e 	bne	r2,zero,8025d4 <___vfprintf_internal_r+0xec4>
  802110:	dc402704 	addi	r17,sp,156
  802114:	a004d0fa 	srli	r2,r20,3
  802118:	a806977a 	slli	r3,r21,29
  80211c:	a82ad0fa 	srli	r21,r21,3
  802120:	a50001cc 	andi	r20,r20,7
  802124:	a1000c04 	addi	r4,r20,48
  802128:	18a8b03a 	or	r20,r3,r2
  80212c:	893fffc5 	stb	r4,-1(r17)
  802130:	a544b03a 	or	r2,r20,r21
  802134:	880b883a 	mov	r5,r17
  802138:	8c7fffc4 	addi	r17,r17,-1
  80213c:	103ff51e 	bne	r2,zero,802114 <___vfprintf_internal_r+0xa04>
  802140:	6080004c 	andi	r2,r12,1
  802144:	10013026 	beq	r2,zero,802608 <___vfprintf_internal_r+0xef8>
  802148:	21003fcc 	andi	r4,r4,255
  80214c:	2100201c 	xori	r4,r4,128
  802150:	213fe004 	addi	r4,r4,-128
  802154:	20800c18 	cmpnei	r2,r4,48
  802158:	10012b26 	beq	r2,zero,802608 <___vfprintf_internal_r+0xef8>
  80215c:	00800c04 	movi	r2,48
  802160:	297fff84 	addi	r5,r5,-2
  802164:	88bfffc5 	stb	r2,-1(r17)
  802168:	d8802704 	addi	r2,sp,156
  80216c:	116bc83a 	sub	r21,r2,r5
  802170:	db000415 	stw	r12,16(sp)
  802174:	2823883a 	mov	r17,r5
  802178:	4029883a 	mov	r20,r8
  80217c:	4540010e 	bge	r8,r21,802184 <___vfprintf_internal_r+0xa74>
  802180:	a829883a 	mov	r20,r21
  802184:	d8000715 	stw	zero,28(sp)
  802188:	6b403fcc 	andi	r13,r13,255
  80218c:	6b40201c 	xori	r13,r13,128
  802190:	6b7fe004 	addi	r13,r13,-128
  802194:	683e2626 	beq	r13,zero,801a30 <___vfprintf_internal_r+0x320>
  802198:	a5000044 	addi	r20,r20,1
  80219c:	003e2406 	br	801a30 <___vfprintf_internal_r+0x320>
  8021a0:	bac00007 	ldb	r11,0(r23)
  8021a4:	63002014 	ori	r12,r12,128
  8021a8:	003da506 	br	801840 <___vfprintf_internal_r+0x130>
  8021ac:	bf000007 	ldb	fp,0(r23)
  8021b0:	b8800044 	addi	r2,r23,1
  8021b4:	e0c00aa0 	cmpeqi	r3,fp,42
  8021b8:	1805841e 	bne	r3,zero,8037cc <___vfprintf_internal_r+0x20bc>
  8021bc:	e0fff404 	addi	r3,fp,-48
  8021c0:	198002b0 	cmpltui	r6,r3,10
  8021c4:	102f883a 	mov	r23,r2
  8021c8:	0011883a 	mov	r8,zero
  8021cc:	303d9e26 	beq	r6,zero,801848 <___vfprintf_internal_r+0x138>
  8021d0:	400490ba 	slli	r2,r8,2
  8021d4:	bf000007 	ldb	fp,0(r23)
  8021d8:	bdc00044 	addi	r23,r23,1
  8021dc:	1211883a 	add	r8,r2,r8
  8021e0:	4211883a 	add	r8,r8,r8
  8021e4:	40d1883a 	add	r8,r8,r3
  8021e8:	e0fff404 	addi	r3,fp,-48
  8021ec:	188002b0 	cmpltui	r2,r3,10
  8021f0:	103ff71e 	bne	r2,zero,8021d0 <___vfprintf_internal_r+0xac0>
  8021f4:	003d9406 	br	801848 <___vfprintf_internal_r+0x138>
  8021f8:	bf000003 	ldbu	fp,0(r23)
  8021fc:	e2c03fcc 	andi	r11,fp,255
  802200:	5ac0201c 	xori	r11,r11,128
  802204:	63000114 	ori	r12,r12,4
  802208:	5affe004 	addi	r11,r11,-128
  80220c:	003d8c06 	br	801840 <___vfprintf_internal_r+0x130>
  802210:	bac00007 	ldb	r11,0(r23)
  802214:	01000044 	movi	r4,1
  802218:	01400ac4 	movi	r5,43
  80221c:	003d8806 	br	801840 <___vfprintf_internal_r+0x130>
  802220:	d8800617 	ldw	r2,24(sp)
  802224:	bf000003 	ldbu	fp,0(r23)
  802228:	14000017 	ldw	r16,0(r2)
  80222c:	10800104 	addi	r2,r2,4
  802230:	8002aa16 	blt	r16,zero,802cdc <___vfprintf_internal_r+0x15cc>
  802234:	d8800615 	stw	r2,24(sp)
  802238:	e2c03fcc 	andi	r11,fp,255
  80223c:	5ac0201c 	xori	r11,r11,128
  802240:	5affe004 	addi	r11,r11,-128
  802244:	003d7e06 	br	801840 <___vfprintf_internal_r+0x130>
  802248:	bac00007 	ldb	r11,0(r23)
  80224c:	63000054 	ori	r12,r12,1
  802250:	003d7b06 	br	801840 <___vfprintf_internal_r+0x130>
  802254:	28803fcc 	andi	r2,r5,255
  802258:	1080201c 	xori	r2,r2,128
  80225c:	10bfe004 	addi	r2,r2,-128
  802260:	bf000003 	ldbu	fp,0(r23)
  802264:	103ff41e 	bne	r2,zero,802238 <___vfprintf_internal_r+0xb28>
  802268:	e2c03fcc 	andi	r11,fp,255
  80226c:	5ac0201c 	xori	r11,r11,128
  802270:	01000044 	movi	r4,1
  802274:	01400804 	movi	r5,32
  802278:	5affe004 	addi	r11,r11,-128
  80227c:	003d7006 	br	801840 <___vfprintf_internal_r+0x130>
  802280:	bac00007 	ldb	r11,0(r23)
  802284:	63000214 	ori	r12,r12,8
  802288:	003d6d06 	br	801840 <___vfprintf_internal_r+0x130>
  80228c:	d8c00617 	ldw	r3,24(sp)
  802290:	d8001345 	stb	zero,77(sp)
  802294:	05000044 	movi	r20,1
  802298:	18800017 	ldw	r2,0(r3)
  80229c:	18c00104 	addi	r3,r3,4
  8022a0:	d8c00615 	stw	r3,24(sp)
  8022a4:	d8801d05 	stb	r2,116(sp)
  8022a8:	05400044 	movi	r21,1
  8022ac:	dc401d04 	addi	r17,sp,116
  8022b0:	003ddc06 	br	801a24 <___vfprintf_internal_r+0x314>
  8022b4:	21003fcc 	andi	r4,r4,255
  8022b8:	2004e61e 	bne	r4,zero,803654 <___vfprintf_internal_r+0x1f44>
  8022bc:	00802074 	movhi	r2,129
  8022c0:	10837b04 	addi	r2,r2,3564
  8022c4:	d8800c15 	stw	r2,48(sp)
  8022c8:	6080080c 	andi	r2,r12,32
  8022cc:	103f291e 	bne	r2,zero,801f74 <___vfprintf_internal_r+0x864>
  8022d0:	d9000617 	ldw	r4,24(sp)
  8022d4:	6080040c 	andi	r2,r12,16
  8022d8:	20c00104 	addi	r3,r4,4
  8022dc:	10023d1e 	bne	r2,zero,802bd4 <___vfprintf_internal_r+0x14c4>
  8022e0:	6080100c 	andi	r2,r12,64
  8022e4:	10042f26 	beq	r2,zero,8033a4 <___vfprintf_internal_r+0x1c94>
  8022e8:	d8800617 	ldw	r2,24(sp)
  8022ec:	002b883a 	mov	r21,zero
  8022f0:	d8c00615 	stw	r3,24(sp)
  8022f4:	1500000b 	ldhu	r20,0(r2)
  8022f8:	003f2306 	br	801f88 <___vfprintf_internal_r+0x878>
  8022fc:	e2c01990 	cmplti	r11,fp,102
  802300:	5800f61e 	bne	r11,zero,8026dc <___vfprintf_internal_r+0xfcc>
  802304:	d9000917 	ldw	r4,36(sp)
  802308:	d9400a17 	ldw	r5,40(sp)
  80230c:	000d883a 	mov	r6,zero
  802310:	000f883a 	mov	r7,zero
  802314:	d8c00e15 	stw	r3,56(sp)
  802318:	080cd400 	call	80cd40 <__eqdf2>
  80231c:	d8c00e17 	ldw	r3,56(sp)
  802320:	1001881e 	bne	r2,zero,802944 <___vfprintf_internal_r+0x1234>
  802324:	d8801b17 	ldw	r2,108(sp)
  802328:	01002074 	movhi	r4,129
  80232c:	21038704 	addi	r4,r4,3612
  802330:	10800044 	addi	r2,r2,1
  802334:	18c00044 	addi	r3,r3,1
  802338:	b1000015 	stw	r4,0(r22)
  80233c:	01000044 	movi	r4,1
  802340:	d8801b15 	stw	r2,108(sp)
  802344:	b1000115 	stw	r4,4(r22)
  802348:	d8c01c15 	stw	r3,112(sp)
  80234c:	10800208 	cmpgei	r2,r2,8
  802350:	10036e1e 	bne	r2,zero,80310c <___vfprintf_internal_r+0x19fc>
  802354:	b5800204 	addi	r22,r22,8
  802358:	d8801417 	ldw	r2,80(sp)
  80235c:	d9000817 	ldw	r4,32(sp)
  802360:	11020b0e 	bge	r2,r4,802b90 <___vfprintf_internal_r+0x1480>
  802364:	d8800d17 	ldw	r2,52(sp)
  802368:	d9000b17 	ldw	r4,44(sp)
  80236c:	b0800015 	stw	r2,0(r22)
  802370:	d8801b17 	ldw	r2,108(sp)
  802374:	1907883a 	add	r3,r3,r4
  802378:	b1000115 	stw	r4,4(r22)
  80237c:	10800044 	addi	r2,r2,1
  802380:	d8801b15 	stw	r2,108(sp)
  802384:	d8c01c15 	stw	r3,112(sp)
  802388:	10800208 	cmpgei	r2,r2,8
  80238c:	1002761e 	bne	r2,zero,802d68 <___vfprintf_internal_r+0x1658>
  802390:	b5800204 	addi	r22,r22,8
  802394:	d8800817 	ldw	r2,32(sp)
  802398:	157fffc4 	addi	r21,r2,-1
  80239c:	057dda0e 	bge	zero,r21,801b08 <___vfprintf_internal_r+0x3f8>
  8023a0:	01c02074 	movhi	r7,129
  8023a4:	a9000450 	cmplti	r4,r21,17
  8023a8:	d8801b17 	ldw	r2,108(sp)
  8023ac:	39c38804 	addi	r7,r7,3616
  8023b0:	2003521e 	bne	r4,zero,8030fc <___vfprintf_internal_r+0x19ec>
  8023b4:	07000404 	movi	fp,16
  8023b8:	3823883a 	mov	r17,r7
  8023bc:	00000406 	br	8023d0 <___vfprintf_internal_r+0xcc0>
  8023c0:	b5800204 	addi	r22,r22,8
  8023c4:	ad7ffc04 	addi	r21,r21,-16
  8023c8:	a9000448 	cmpgei	r4,r21,17
  8023cc:	20034a26 	beq	r4,zero,8030f8 <___vfprintf_internal_r+0x19e8>
  8023d0:	10800044 	addi	r2,r2,1
  8023d4:	18c00404 	addi	r3,r3,16
  8023d8:	b4400015 	stw	r17,0(r22)
  8023dc:	b7000115 	stw	fp,4(r22)
  8023e0:	d8c01c15 	stw	r3,112(sp)
  8023e4:	d8801b15 	stw	r2,108(sp)
  8023e8:	11000208 	cmpgei	r4,r2,8
  8023ec:	203ff426 	beq	r4,zero,8023c0 <___vfprintf_internal_r+0xcb0>
  8023f0:	d9801a04 	addi	r6,sp,104
  8023f4:	900b883a 	mov	r5,r18
  8023f8:	9809883a 	mov	r4,r19
  8023fc:	0808abc0 	call	808abc <__sprint_r>
  802400:	103dd21e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802404:	d8c01c17 	ldw	r3,112(sp)
  802408:	d8801b17 	ldw	r2,108(sp)
  80240c:	dd802704 	addi	r22,sp,156
  802410:	003fec06 	br	8023c4 <___vfprintf_internal_r+0xcb4>
  802414:	8519c83a 	sub	r12,r16,r20
  802418:	033dac0e 	bge	zero,r12,801acc <___vfprintf_internal_r+0x3bc>
  80241c:	01c02074 	movhi	r7,129
  802420:	61000450 	cmplti	r4,r12,17
  802424:	d8801b17 	ldw	r2,108(sp)
  802428:	39c38804 	addi	r7,r7,3616
  80242c:	2000281e 	bne	r4,zero,8024d0 <___vfprintf_internal_r+0xdc0>
  802430:	dc400e15 	stw	r17,56(sp)
  802434:	dc000f15 	stw	r16,60(sp)
  802438:	b009883a 	mov	r4,r22
  80243c:	03400404 	movi	r13,16
  802440:	a02d883a 	mov	r22,r20
  802444:	6021883a 	mov	r16,r12
  802448:	4029883a 	mov	r20,r8
  80244c:	3823883a 	mov	r17,r7
  802450:	00000406 	br	802464 <___vfprintf_internal_r+0xd54>
  802454:	843ffc04 	addi	r16,r16,-16
  802458:	81400448 	cmpgei	r5,r16,17
  80245c:	21000204 	addi	r4,r4,8
  802460:	28001426 	beq	r5,zero,8024b4 <___vfprintf_internal_r+0xda4>
  802464:	10800044 	addi	r2,r2,1
  802468:	18c00404 	addi	r3,r3,16
  80246c:	24400015 	stw	r17,0(r4)
  802470:	23400115 	stw	r13,4(r4)
  802474:	d8c01c15 	stw	r3,112(sp)
  802478:	d8801b15 	stw	r2,108(sp)
  80247c:	11400208 	cmpgei	r5,r2,8
  802480:	283ff426 	beq	r5,zero,802454 <___vfprintf_internal_r+0xd44>
  802484:	d9801a04 	addi	r6,sp,104
  802488:	900b883a 	mov	r5,r18
  80248c:	9809883a 	mov	r4,r19
  802490:	0808abc0 	call	808abc <__sprint_r>
  802494:	103dad1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802498:	843ffc04 	addi	r16,r16,-16
  80249c:	81400448 	cmpgei	r5,r16,17
  8024a0:	d8c01c17 	ldw	r3,112(sp)
  8024a4:	d8801b17 	ldw	r2,108(sp)
  8024a8:	d9002704 	addi	r4,sp,156
  8024ac:	03400404 	movi	r13,16
  8024b0:	283fec1e 	bne	r5,zero,802464 <___vfprintf_internal_r+0xd54>
  8024b4:	8019883a 	mov	r12,r16
  8024b8:	880f883a 	mov	r7,r17
  8024bc:	dc000f17 	ldw	r16,60(sp)
  8024c0:	dc400e17 	ldw	r17,56(sp)
  8024c4:	a011883a 	mov	r8,r20
  8024c8:	b029883a 	mov	r20,r22
  8024cc:	202d883a 	mov	r22,r4
  8024d0:	10800044 	addi	r2,r2,1
  8024d4:	1b07883a 	add	r3,r3,r12
  8024d8:	d8801b15 	stw	r2,108(sp)
  8024dc:	b1c00015 	stw	r7,0(r22)
  8024e0:	b3000115 	stw	r12,4(r22)
  8024e4:	d8c01c15 	stw	r3,112(sp)
  8024e8:	10800208 	cmpgei	r2,r2,8
  8024ec:	10030f1e 	bne	r2,zero,80312c <___vfprintf_internal_r+0x1a1c>
  8024f0:	4551c83a 	sub	r8,r8,r21
  8024f4:	b5800204 	addi	r22,r22,8
  8024f8:	023d760e 	bge	zero,r8,801ad4 <___vfprintf_internal_r+0x3c4>
  8024fc:	01c02074 	movhi	r7,129
  802500:	41000450 	cmplti	r4,r8,17
  802504:	d8801b17 	ldw	r2,108(sp)
  802508:	39c38804 	addi	r7,r7,3616
  80250c:	2000221e 	bne	r4,zero,802598 <___vfprintf_internal_r+0xe88>
  802510:	dc400e15 	stw	r17,56(sp)
  802514:	dc000f15 	stw	r16,60(sp)
  802518:	03000404 	movi	r12,16
  80251c:	4021883a 	mov	r16,r8
  802520:	3823883a 	mov	r17,r7
  802524:	00000406 	br	802538 <___vfprintf_internal_r+0xe28>
  802528:	843ffc04 	addi	r16,r16,-16
  80252c:	81000448 	cmpgei	r4,r16,17
  802530:	b5800204 	addi	r22,r22,8
  802534:	20001426 	beq	r4,zero,802588 <___vfprintf_internal_r+0xe78>
  802538:	10800044 	addi	r2,r2,1
  80253c:	18c00404 	addi	r3,r3,16
  802540:	b4400015 	stw	r17,0(r22)
  802544:	b3000115 	stw	r12,4(r22)
  802548:	d8c01c15 	stw	r3,112(sp)
  80254c:	d8801b15 	stw	r2,108(sp)
  802550:	11000208 	cmpgei	r4,r2,8
  802554:	203ff426 	beq	r4,zero,802528 <___vfprintf_internal_r+0xe18>
  802558:	d9801a04 	addi	r6,sp,104
  80255c:	900b883a 	mov	r5,r18
  802560:	9809883a 	mov	r4,r19
  802564:	0808abc0 	call	808abc <__sprint_r>
  802568:	103d781e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  80256c:	843ffc04 	addi	r16,r16,-16
  802570:	81000448 	cmpgei	r4,r16,17
  802574:	d8c01c17 	ldw	r3,112(sp)
  802578:	d8801b17 	ldw	r2,108(sp)
  80257c:	dd802704 	addi	r22,sp,156
  802580:	03000404 	movi	r12,16
  802584:	203fec1e 	bne	r4,zero,802538 <___vfprintf_internal_r+0xe28>
  802588:	8011883a 	mov	r8,r16
  80258c:	880f883a 	mov	r7,r17
  802590:	dc000f17 	ldw	r16,60(sp)
  802594:	dc400e17 	ldw	r17,56(sp)
  802598:	10800044 	addi	r2,r2,1
  80259c:	1a07883a 	add	r3,r3,r8
  8025a0:	d8801b15 	stw	r2,108(sp)
  8025a4:	b1c00015 	stw	r7,0(r22)
  8025a8:	b2000115 	stw	r8,4(r22)
  8025ac:	d8c01c15 	stw	r3,112(sp)
  8025b0:	10800208 	cmpgei	r2,r2,8
  8025b4:	10016e1e 	bne	r2,zero,802b70 <___vfprintf_internal_r+0x1460>
  8025b8:	b5800204 	addi	r22,r22,8
  8025bc:	003d4506 	br	801ad4 <___vfprintf_internal_r+0x3c4>
  8025c0:	10c00060 	cmpeqi	r3,r2,1
  8025c4:	1803c81e 	bne	r3,zero,8034e8 <___vfprintf_internal_r+0x1dd8>
  8025c8:	108000a0 	cmpeqi	r2,r2,2
  8025cc:	db000417 	ldw	r12,16(sp)
  8025d0:	103ecf26 	beq	r2,zero,802110 <___vfprintf_internal_r+0xa00>
  8025d4:	d9000c17 	ldw	r4,48(sp)
  8025d8:	dc402704 	addi	r17,sp,156
  8025dc:	a08003cc 	andi	r2,r20,15
  8025e0:	a806973a 	slli	r3,r21,28
  8025e4:	a028d13a 	srli	r20,r20,4
  8025e8:	2085883a 	add	r2,r4,r2
  8025ec:	10800003 	ldbu	r2,0(r2)
  8025f0:	a82ad13a 	srli	r21,r21,4
  8025f4:	1d28b03a 	or	r20,r3,r20
  8025f8:	88bfffc5 	stb	r2,-1(r17)
  8025fc:	a544b03a 	or	r2,r20,r21
  802600:	8c7fffc4 	addi	r17,r17,-1
  802604:	103ff51e 	bne	r2,zero,8025dc <___vfprintf_internal_r+0xecc>
  802608:	d8802704 	addi	r2,sp,156
  80260c:	146bc83a 	sub	r21,r2,r17
  802610:	db000415 	stw	r12,16(sp)
  802614:	003ed806 	br	802178 <___vfprintf_internal_r+0xa68>
  802618:	d9801a04 	addi	r6,sp,104
  80261c:	900b883a 	mov	r5,r18
  802620:	9809883a 	mov	r4,r19
  802624:	0808abc0 	call	808abc <__sprint_r>
  802628:	103d4226 	beq	r2,zero,801b34 <___vfprintf_internal_r+0x424>
  80262c:	003d4706 	br	801b4c <___vfprintf_internal_r+0x43c>
  802630:	d9801a04 	addi	r6,sp,104
  802634:	900b883a 	mov	r5,r18
  802638:	9809883a 	mov	r4,r19
  80263c:	0808abc0 	call	808abc <__sprint_r>
  802640:	103d421e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802644:	d9401417 	ldw	r5,80(sp)
  802648:	d8c01c17 	ldw	r3,112(sp)
  80264c:	dd802704 	addi	r22,sp,156
  802650:	2802c81e 	bne	r5,zero,803174 <___vfprintf_internal_r+0x1a64>
  802654:	d8800417 	ldw	r2,16(sp)
  802658:	d9000817 	ldw	r4,32(sp)
  80265c:	1080004c 	andi	r2,r2,1
  802660:	1104b03a 	or	r2,r2,r4
  802664:	103d2826 	beq	r2,zero,801b08 <___vfprintf_internal_r+0x3f8>
  802668:	d8800d17 	ldw	r2,52(sp)
  80266c:	d9000b17 	ldw	r4,44(sp)
  802670:	b0800015 	stw	r2,0(r22)
  802674:	d8801b17 	ldw	r2,108(sp)
  802678:	20c7883a 	add	r3,r4,r3
  80267c:	b1000115 	stw	r4,4(r22)
  802680:	10800044 	addi	r2,r2,1
  802684:	d8c01c15 	stw	r3,112(sp)
  802688:	d8801b15 	stw	r2,108(sp)
  80268c:	11000208 	cmpgei	r4,r2,8
  802690:	2003821e 	bne	r4,zero,80349c <___vfprintf_internal_r+0x1d8c>
  802694:	b5800204 	addi	r22,r22,8
  802698:	d9000817 	ldw	r4,32(sp)
  80269c:	10800044 	addi	r2,r2,1
  8026a0:	d8801b15 	stw	r2,108(sp)
  8026a4:	20c7883a 	add	r3,r4,r3
  8026a8:	b4400015 	stw	r17,0(r22)
  8026ac:	b1000115 	stw	r4,4(r22)
  8026b0:	d8c01c15 	stw	r3,112(sp)
  8026b4:	10800208 	cmpgei	r2,r2,8
  8026b8:	103d1226 	beq	r2,zero,801b04 <___vfprintf_internal_r+0x3f4>
  8026bc:	d9801a04 	addi	r6,sp,104
  8026c0:	900b883a 	mov	r5,r18
  8026c4:	9809883a 	mov	r4,r19
  8026c8:	0808abc0 	call	808abc <__sprint_r>
  8026cc:	103d1f1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  8026d0:	d8c01c17 	ldw	r3,112(sp)
  8026d4:	dd802704 	addi	r22,sp,156
  8026d8:	003d0b06 	br	801b08 <___vfprintf_internal_r+0x3f8>
  8026dc:	d8800817 	ldw	r2,32(sp)
  8026e0:	da001b17 	ldw	r8,108(sp)
  8026e4:	18c00044 	addi	r3,r3,1
  8026e8:	10800088 	cmpgei	r2,r2,2
  8026ec:	45400044 	addi	r21,r8,1
  8026f0:	b7000204 	addi	fp,r22,8
  8026f4:	1000ec26 	beq	r2,zero,802aa8 <___vfprintf_internal_r+0x1398>
  8026f8:	00800044 	movi	r2,1
  8026fc:	b0800115 	stw	r2,4(r22)
  802700:	b4400015 	stw	r17,0(r22)
  802704:	d8c01c15 	stw	r3,112(sp)
  802708:	dd401b15 	stw	r21,108(sp)
  80270c:	a8800210 	cmplti	r2,r21,8
  802710:	1001d126 	beq	r2,zero,802e58 <___vfprintf_internal_r+0x1748>
  802714:	d8800b17 	ldw	r2,44(sp)
  802718:	d9000d17 	ldw	r4,52(sp)
  80271c:	ad400044 	addi	r21,r21,1
  802720:	1887883a 	add	r3,r3,r2
  802724:	e0800115 	stw	r2,4(fp)
  802728:	e1000015 	stw	r4,0(fp)
  80272c:	d8c01c15 	stw	r3,112(sp)
  802730:	dd401b15 	stw	r21,108(sp)
  802734:	a8800208 	cmpgei	r2,r21,8
  802738:	1001be1e 	bne	r2,zero,802e34 <___vfprintf_internal_r+0x1724>
  80273c:	e7000204 	addi	fp,fp,8
  802740:	d9000917 	ldw	r4,36(sp)
  802744:	d9400a17 	ldw	r5,40(sp)
  802748:	aa000044 	addi	r8,r21,1
  80274c:	000d883a 	mov	r6,zero
  802750:	000f883a 	mov	r7,zero
  802754:	d8c00e15 	stw	r3,56(sp)
  802758:	da000715 	stw	r8,28(sp)
  80275c:	080cd400 	call	80cd40 <__eqdf2>
  802760:	d8c00817 	ldw	r3,32(sp)
  802764:	da000717 	ldw	r8,28(sp)
  802768:	e5800204 	addi	r22,fp,8
  80276c:	1affffc4 	addi	r11,r3,-1
  802770:	d8c00e17 	ldw	r3,56(sp)
  802774:	1000de26 	beq	r2,zero,802af0 <___vfprintf_internal_r+0x13e0>
  802778:	8a400044 	addi	r9,r17,1
  80277c:	1ac7883a 	add	r3,r3,r11
  802780:	da001b15 	stw	r8,108(sp)
  802784:	e2400015 	stw	r9,0(fp)
  802788:	e2c00115 	stw	r11,4(fp)
  80278c:	d8c01c15 	stw	r3,112(sp)
  802790:	42000208 	cmpgei	r8,r8,8
  802794:	4001621e 	bne	r8,zero,802d20 <___vfprintf_internal_r+0x1610>
  802798:	e0800404 	addi	r2,fp,16
  80279c:	aa000084 	addi	r8,r21,2
  8027a0:	b039883a 	mov	fp,r22
  8027a4:	102d883a 	mov	r22,r2
  8027a8:	d9001017 	ldw	r4,64(sp)
  8027ac:	d8801644 	addi	r2,sp,89
  8027b0:	da001b15 	stw	r8,108(sp)
  8027b4:	20c7883a 	add	r3,r4,r3
  8027b8:	e0800015 	stw	r2,0(fp)
  8027bc:	e1000115 	stw	r4,4(fp)
  8027c0:	d8c01c15 	stw	r3,112(sp)
  8027c4:	42000210 	cmplti	r8,r8,8
  8027c8:	403ccf1e 	bne	r8,zero,801b08 <___vfprintf_internal_r+0x3f8>
  8027cc:	003fbb06 	br	8026bc <___vfprintf_internal_r+0xfac>
  8027d0:	db000417 	ldw	r12,16(sp)
  8027d4:	003e4a06 	br	802100 <___vfprintf_internal_r+0x9f0>
  8027d8:	03002074 	movhi	r12,129
  8027dc:	39000450 	cmplti	r4,r7,17
  8027e0:	d8801b17 	ldw	r2,108(sp)
  8027e4:	63038c04 	addi	r12,r12,3632
  8027e8:	2000321e 	bne	r4,zero,8028b4 <___vfprintf_internal_r+0x11a4>
  8027ec:	dc401115 	stw	r17,68(sp)
  8027f0:	b009883a 	mov	r4,r22
  8027f4:	9023883a 	mov	r17,r18
  8027f8:	a82d883a 	mov	r22,r21
  8027fc:	ddc01215 	stw	r23,72(sp)
  802800:	03c00404 	movi	r15,16
  802804:	a02f883a 	mov	r23,r20
  802808:	db800e15 	stw	r14,56(sp)
  80280c:	8029883a 	mov	r20,r16
  802810:	db400f15 	stw	r13,60(sp)
  802814:	402b883a 	mov	r21,r8
  802818:	3821883a 	mov	r16,r7
  80281c:	6025883a 	mov	r18,r12
  802820:	00000406 	br	802834 <___vfprintf_internal_r+0x1124>
  802824:	843ffc04 	addi	r16,r16,-16
  802828:	81800448 	cmpgei	r6,r16,17
  80282c:	21000204 	addi	r4,r4,8
  802830:	30001426 	beq	r6,zero,802884 <___vfprintf_internal_r+0x1174>
  802834:	10800044 	addi	r2,r2,1
  802838:	18c00404 	addi	r3,r3,16
  80283c:	24800015 	stw	r18,0(r4)
  802840:	23c00115 	stw	r15,4(r4)
  802844:	d8c01c15 	stw	r3,112(sp)
  802848:	d8801b15 	stw	r2,108(sp)
  80284c:	11800208 	cmpgei	r6,r2,8
  802850:	303ff426 	beq	r6,zero,802824 <___vfprintf_internal_r+0x1114>
  802854:	d9801a04 	addi	r6,sp,104
  802858:	880b883a 	mov	r5,r17
  80285c:	9809883a 	mov	r4,r19
  802860:	0808abc0 	call	808abc <__sprint_r>
  802864:	1001a11e 	bne	r2,zero,802eec <___vfprintf_internal_r+0x17dc>
  802868:	843ffc04 	addi	r16,r16,-16
  80286c:	81800448 	cmpgei	r6,r16,17
  802870:	d8c01c17 	ldw	r3,112(sp)
  802874:	d8801b17 	ldw	r2,108(sp)
  802878:	d9002704 	addi	r4,sp,156
  80287c:	03c00404 	movi	r15,16
  802880:	303fec1e 	bne	r6,zero,802834 <___vfprintf_internal_r+0x1124>
  802884:	800f883a 	mov	r7,r16
  802888:	9019883a 	mov	r12,r18
  80288c:	a021883a 	mov	r16,r20
  802890:	8825883a 	mov	r18,r17
  802894:	b829883a 	mov	r20,r23
  802898:	db800e17 	ldw	r14,56(sp)
  80289c:	db400f17 	ldw	r13,60(sp)
  8028a0:	ddc01217 	ldw	r23,72(sp)
  8028a4:	dc401117 	ldw	r17,68(sp)
  8028a8:	a811883a 	mov	r8,r21
  8028ac:	b02b883a 	mov	r21,r22
  8028b0:	202d883a 	mov	r22,r4
  8028b4:	10800044 	addi	r2,r2,1
  8028b8:	19c7883a 	add	r3,r3,r7
  8028bc:	d8801b15 	stw	r2,108(sp)
  8028c0:	b3000015 	stw	r12,0(r22)
  8028c4:	b1c00115 	stw	r7,4(r22)
  8028c8:	d8c01c15 	stw	r3,112(sp)
  8028cc:	10800208 	cmpgei	r2,r2,8
  8028d0:	1001781e 	bne	r2,zero,802eb4 <___vfprintf_internal_r+0x17a4>
  8028d4:	b5800204 	addi	r22,r22,8
  8028d8:	003c5f06 	br	801a58 <___vfprintf_internal_r+0x348>
  8028dc:	d9801a04 	addi	r6,sp,104
  8028e0:	900b883a 	mov	r5,r18
  8028e4:	9809883a 	mov	r4,r19
  8028e8:	da000f15 	stw	r8,60(sp)
  8028ec:	db400e15 	stw	r13,56(sp)
  8028f0:	0808abc0 	call	808abc <__sprint_r>
  8028f4:	103c951e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  8028f8:	d8c01c17 	ldw	r3,112(sp)
  8028fc:	da000f17 	ldw	r8,60(sp)
  802900:	db400e17 	ldw	r13,56(sp)
  802904:	dd802704 	addi	r22,sp,156
  802908:	003c6e06 	br	801ac4 <___vfprintf_internal_r+0x3b4>
  80290c:	d9801a04 	addi	r6,sp,104
  802910:	900b883a 	mov	r5,r18
  802914:	9809883a 	mov	r4,r19
  802918:	da001115 	stw	r8,68(sp)
  80291c:	db400f15 	stw	r13,60(sp)
  802920:	db800e15 	stw	r14,56(sp)
  802924:	0808abc0 	call	808abc <__sprint_r>
  802928:	103c881e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  80292c:	d8c01c17 	ldw	r3,112(sp)
  802930:	da001117 	ldw	r8,68(sp)
  802934:	db400f17 	ldw	r13,60(sp)
  802938:	db800e17 	ldw	r14,56(sp)
  80293c:	dd802704 	addi	r22,sp,156
  802940:	003c5306 	br	801a90 <___vfprintf_internal_r+0x380>
  802944:	d9401417 	ldw	r5,80(sp)
  802948:	01414c0e 	bge	zero,r5,802e7c <___vfprintf_internal_r+0x176c>
  80294c:	d8800717 	ldw	r2,28(sp)
  802950:	d9000817 	ldw	r4,32(sp)
  802954:	102b883a 	mov	r21,r2
  802958:	2080e316 	blt	r4,r2,802ce8 <___vfprintf_internal_r+0x15d8>
  80295c:	05400a0e 	bge	zero,r21,802988 <___vfprintf_internal_r+0x1278>
  802960:	d8801b17 	ldw	r2,108(sp)
  802964:	1d47883a 	add	r3,r3,r21
  802968:	b4400015 	stw	r17,0(r22)
  80296c:	10800044 	addi	r2,r2,1
  802970:	d8801b15 	stw	r2,108(sp)
  802974:	b5400115 	stw	r21,4(r22)
  802978:	d8c01c15 	stw	r3,112(sp)
  80297c:	10800208 	cmpgei	r2,r2,8
  802980:	10030c1e 	bne	r2,zero,8035b4 <___vfprintf_internal_r+0x1ea4>
  802984:	b5800204 	addi	r22,r22,8
  802988:	a800ff16 	blt	r21,zero,802d88 <___vfprintf_internal_r+0x1678>
  80298c:	d8800717 	ldw	r2,28(sp)
  802990:	156bc83a 	sub	r21,r2,r21
  802994:	05410616 	blt	zero,r21,802db0 <___vfprintf_internal_r+0x16a0>
  802998:	dd401417 	ldw	r21,80(sp)
  80299c:	d8800817 	ldw	r2,32(sp)
  8029a0:	a880d40e 	bge	r21,r2,802cf4 <___vfprintf_internal_r+0x15e4>
  8029a4:	d8800d17 	ldw	r2,52(sp)
  8029a8:	d9000b17 	ldw	r4,44(sp)
  8029ac:	b0800015 	stw	r2,0(r22)
  8029b0:	d8801b17 	ldw	r2,108(sp)
  8029b4:	1907883a 	add	r3,r3,r4
  8029b8:	b1000115 	stw	r4,4(r22)
  8029bc:	10800044 	addi	r2,r2,1
  8029c0:	d8801b15 	stw	r2,108(sp)
  8029c4:	d8c01c15 	stw	r3,112(sp)
  8029c8:	10800208 	cmpgei	r2,r2,8
  8029cc:	10028e1e 	bne	r2,zero,803408 <___vfprintf_internal_r+0x1cf8>
  8029d0:	b5800204 	addi	r22,r22,8
  8029d4:	d9000817 	ldw	r4,32(sp)
  8029d8:	d9400717 	ldw	r5,28(sp)
  8029dc:	2545c83a 	sub	r2,r4,r21
  8029e0:	2149c83a 	sub	r4,r4,r5
  8029e4:	102b883a 	mov	r21,r2
  8029e8:	2080010e 	bge	r4,r2,8029f0 <___vfprintf_internal_r+0x12e0>
  8029ec:	202b883a 	mov	r21,r4
  8029f0:	05400c0e 	bge	zero,r21,802a24 <___vfprintf_internal_r+0x1314>
  8029f4:	d9000717 	ldw	r4,28(sp)
  8029f8:	1d47883a 	add	r3,r3,r21
  8029fc:	b5400115 	stw	r21,4(r22)
  802a00:	8913883a 	add	r9,r17,r4
  802a04:	d9001b17 	ldw	r4,108(sp)
  802a08:	b2400015 	stw	r9,0(r22)
  802a0c:	d8c01c15 	stw	r3,112(sp)
  802a10:	21000044 	addi	r4,r4,1
  802a14:	d9001b15 	stw	r4,108(sp)
  802a18:	21000208 	cmpgei	r4,r4,8
  802a1c:	2002f01e 	bne	r4,zero,8035e0 <___vfprintf_internal_r+0x1ed0>
  802a20:	b5800204 	addi	r22,r22,8
  802a24:	a800010e 	bge	r21,zero,802a2c <___vfprintf_internal_r+0x131c>
  802a28:	002b883a 	mov	r21,zero
  802a2c:	156bc83a 	sub	r21,r2,r21
  802a30:	057c350e 	bge	zero,r21,801b08 <___vfprintf_internal_r+0x3f8>
  802a34:	01c02074 	movhi	r7,129
  802a38:	a9000450 	cmplti	r4,r21,17
  802a3c:	d8801b17 	ldw	r2,108(sp)
  802a40:	39c38804 	addi	r7,r7,3616
  802a44:	2001ad1e 	bne	r4,zero,8030fc <___vfprintf_internal_r+0x19ec>
  802a48:	07000404 	movi	fp,16
  802a4c:	3823883a 	mov	r17,r7
  802a50:	00000406 	br	802a64 <___vfprintf_internal_r+0x1354>
  802a54:	b5800204 	addi	r22,r22,8
  802a58:	ad7ffc04 	addi	r21,r21,-16
  802a5c:	a9000448 	cmpgei	r4,r21,17
  802a60:	2001a526 	beq	r4,zero,8030f8 <___vfprintf_internal_r+0x19e8>
  802a64:	10800044 	addi	r2,r2,1
  802a68:	18c00404 	addi	r3,r3,16
  802a6c:	b4400015 	stw	r17,0(r22)
  802a70:	b7000115 	stw	fp,4(r22)
  802a74:	d8c01c15 	stw	r3,112(sp)
  802a78:	d8801b15 	stw	r2,108(sp)
  802a7c:	11000208 	cmpgei	r4,r2,8
  802a80:	203ff426 	beq	r4,zero,802a54 <___vfprintf_internal_r+0x1344>
  802a84:	d9801a04 	addi	r6,sp,104
  802a88:	900b883a 	mov	r5,r18
  802a8c:	9809883a 	mov	r4,r19
  802a90:	0808abc0 	call	808abc <__sprint_r>
  802a94:	103c2d1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802a98:	d8c01c17 	ldw	r3,112(sp)
  802a9c:	d8801b17 	ldw	r2,108(sp)
  802aa0:	dd802704 	addi	r22,sp,156
  802aa4:	003fec06 	br	802a58 <___vfprintf_internal_r+0x1348>
  802aa8:	d8800417 	ldw	r2,16(sp)
  802aac:	1080004c 	andi	r2,r2,1
  802ab0:	103f111e 	bne	r2,zero,8026f8 <___vfprintf_internal_r+0xfe8>
  802ab4:	00800044 	movi	r2,1
  802ab8:	dd401b15 	stw	r21,108(sp)
  802abc:	b4400015 	stw	r17,0(r22)
  802ac0:	b0800115 	stw	r2,4(r22)
  802ac4:	d8c01c15 	stw	r3,112(sp)
  802ac8:	ad400208 	cmpgei	r21,r21,8
  802acc:	a800941e 	bne	r21,zero,802d20 <___vfprintf_internal_r+0x1610>
  802ad0:	42000084 	addi	r8,r8,2
  802ad4:	b5800404 	addi	r22,r22,16
  802ad8:	003f3306 	br	8027a8 <___vfprintf_internal_r+0x1098>
  802adc:	4002821e 	bne	r8,zero,8034e8 <___vfprintf_internal_r+0x1dd8>
  802ae0:	0011883a 	mov	r8,zero
  802ae4:	002b883a 	mov	r21,zero
  802ae8:	dc402704 	addi	r17,sp,156
  802aec:	003da206 	br	802178 <___vfprintf_internal_r+0xa68>
  802af0:	02ff2d0e 	bge	zero,r11,8027a8 <___vfprintf_internal_r+0x1098>
  802af4:	58800450 	cmplti	r2,r11,17
  802af8:	01c02074 	movhi	r7,129
  802afc:	1003261e 	bne	r2,zero,803798 <___vfprintf_internal_r+0x2088>
  802b00:	39c38804 	addi	r7,r7,3616
  802b04:	dc000715 	stw	r16,28(sp)
  802b08:	05800404 	movi	r22,16
  802b0c:	5823883a 	mov	r17,r11
  802b10:	402b883a 	mov	r21,r8
  802b14:	3821883a 	mov	r16,r7
  802b18:	00000506 	br	802b30 <___vfprintf_internal_r+0x1420>
  802b1c:	e7000204 	addi	fp,fp,8
  802b20:	8c7ffc04 	addi	r17,r17,-16
  802b24:	88800448 	cmpgei	r2,r17,17
  802b28:	1001be26 	beq	r2,zero,803224 <___vfprintf_internal_r+0x1b14>
  802b2c:	ad400044 	addi	r21,r21,1
  802b30:	18c00404 	addi	r3,r3,16
  802b34:	e4000015 	stw	r16,0(fp)
  802b38:	e5800115 	stw	r22,4(fp)
  802b3c:	d8c01c15 	stw	r3,112(sp)
  802b40:	dd401b15 	stw	r21,108(sp)
  802b44:	a8800208 	cmpgei	r2,r21,8
  802b48:	103ff426 	beq	r2,zero,802b1c <___vfprintf_internal_r+0x140c>
  802b4c:	d9801a04 	addi	r6,sp,104
  802b50:	900b883a 	mov	r5,r18
  802b54:	9809883a 	mov	r4,r19
  802b58:	0808abc0 	call	808abc <__sprint_r>
  802b5c:	103bfb1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802b60:	dd401b17 	ldw	r21,108(sp)
  802b64:	d8c01c17 	ldw	r3,112(sp)
  802b68:	df002704 	addi	fp,sp,156
  802b6c:	003fec06 	br	802b20 <___vfprintf_internal_r+0x1410>
  802b70:	d9801a04 	addi	r6,sp,104
  802b74:	900b883a 	mov	r5,r18
  802b78:	9809883a 	mov	r4,r19
  802b7c:	0808abc0 	call	808abc <__sprint_r>
  802b80:	103bf21e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802b84:	d8c01c17 	ldw	r3,112(sp)
  802b88:	dd802704 	addi	r22,sp,156
  802b8c:	003bd106 	br	801ad4 <___vfprintf_internal_r+0x3c4>
  802b90:	d8800417 	ldw	r2,16(sp)
  802b94:	1080004c 	andi	r2,r2,1
  802b98:	103bdb26 	beq	r2,zero,801b08 <___vfprintf_internal_r+0x3f8>
  802b9c:	003df106 	br	802364 <___vfprintf_internal_r+0xc54>
  802ba0:	dc402704 	addi	r17,sp,156
  802ba4:	003d7406 	br	802178 <___vfprintf_internal_r+0xa68>
  802ba8:	d9000517 	ldw	r4,20(sp)
  802bac:	2005d7fa 	srai	r2,r4,31
  802bb0:	19000015 	stw	r4,0(r3)
  802bb4:	18800115 	stw	r2,4(r3)
  802bb8:	003b0906 	br	8017e0 <___vfprintf_internal_r+0xd0>
  802bbc:	00800c04 	movi	r2,48
  802bc0:	d8801385 	stb	r2,78(sp)
  802bc4:	df0013c5 	stb	fp,79(sp)
  802bc8:	63000094 	ori	r12,r12,2
  802bcc:	00800084 	movi	r2,2
  802bd0:	003c1206 	br	801c1c <___vfprintf_internal_r+0x50c>
  802bd4:	25000017 	ldw	r20,0(r4)
  802bd8:	002b883a 	mov	r21,zero
  802bdc:	d8c00615 	stw	r3,24(sp)
  802be0:	003ce906 	br	801f88 <___vfprintf_internal_r+0x878>
  802be4:	25000017 	ldw	r20,0(r4)
  802be8:	002b883a 	mov	r21,zero
  802bec:	d8c00615 	stw	r3,24(sp)
  802bf0:	0005883a 	mov	r2,zero
  802bf4:	003c0906 	br	801c1c <___vfprintf_internal_r+0x50c>
  802bf8:	25000017 	ldw	r20,0(r4)
  802bfc:	002b883a 	mov	r21,zero
  802c00:	d8c00615 	stw	r3,24(sp)
  802c04:	00800044 	movi	r2,1
  802c08:	003c0406 	br	801c1c <___vfprintf_internal_r+0x50c>
  802c0c:	25000017 	ldw	r20,0(r4)
  802c10:	d8c00615 	stw	r3,24(sp)
  802c14:	a02bd7fa 	srai	r21,r20,31
  802c18:	a805883a 	mov	r2,r21
  802c1c:	003cb806 	br	801f00 <___vfprintf_internal_r+0x7f0>
  802c20:	18800017 	ldw	r2,0(r3)
  802c24:	d8800915 	stw	r2,36(sp)
  802c28:	18800117 	ldw	r2,4(r3)
  802c2c:	d8800a15 	stw	r2,40(sp)
  802c30:	003c3006 	br	801cf4 <___vfprintf_internal_r+0x5e4>
  802c34:	db401343 	ldbu	r13,77(sp)
  802c38:	a83cbc26 	beq	r21,zero,801f2c <___vfprintf_internal_r+0x81c>
  802c3c:	dc402704 	addi	r17,sp,156
  802c40:	a805883a 	mov	r2,r21
  802c44:	dc000715 	stw	r16,28(sp)
  802c48:	902b883a 	mov	r21,r18
  802c4c:	8821883a 	mov	r16,r17
  802c50:	db000415 	stw	r12,16(sp)
  802c54:	a023883a 	mov	r17,r20
  802c58:	da000e15 	stw	r8,56(sp)
  802c5c:	9829883a 	mov	r20,r19
  802c60:	1025883a 	mov	r18,r2
  802c64:	6827883a 	mov	r19,r13
  802c68:	8809883a 	mov	r4,r17
  802c6c:	900b883a 	mov	r5,r18
  802c70:	01800284 	movi	r6,10
  802c74:	000f883a 	mov	r7,zero
  802c78:	080b31c0 	call	80b31c <__umoddi3>
  802c7c:	10800c04 	addi	r2,r2,48
  802c80:	8809883a 	mov	r4,r17
  802c84:	900b883a 	mov	r5,r18
  802c88:	01800284 	movi	r6,10
  802c8c:	000f883a 	mov	r7,zero
  802c90:	80bfffc5 	stb	r2,-1(r16)
  802c94:	080ad000 	call	80ad00 <__udivdi3>
  802c98:	900d883a 	mov	r6,r18
  802c9c:	880f883a 	mov	r7,r17
  802ca0:	843fffc4 	addi	r16,r16,-1
  802ca4:	1023883a 	mov	r17,r2
  802ca8:	1825883a 	mov	r18,r3
  802cac:	303fee1e 	bne	r6,zero,802c68 <___vfprintf_internal_r+0x1558>
  802cb0:	39c002a8 	cmpgeui	r7,r7,10
  802cb4:	383fec1e 	bne	r7,zero,802c68 <___vfprintf_internal_r+0x1558>
  802cb8:	8023883a 	mov	r17,r16
  802cbc:	d8802704 	addi	r2,sp,156
  802cc0:	981b883a 	mov	r13,r19
  802cc4:	a825883a 	mov	r18,r21
  802cc8:	dc000717 	ldw	r16,28(sp)
  802ccc:	da000e17 	ldw	r8,56(sp)
  802cd0:	a027883a 	mov	r19,r20
  802cd4:	146bc83a 	sub	r21,r2,r17
  802cd8:	003d2706 	br	802178 <___vfprintf_internal_r+0xa68>
  802cdc:	0421c83a 	sub	r16,zero,r16
  802ce0:	d8800615 	stw	r2,24(sp)
  802ce4:	003d4506 	br	8021fc <___vfprintf_internal_r+0xaec>
  802ce8:	202b883a 	mov	r21,r4
  802cec:	057f1c16 	blt	zero,r21,802960 <___vfprintf_internal_r+0x1250>
  802cf0:	003f2506 	br	802988 <___vfprintf_internal_r+0x1278>
  802cf4:	d8800417 	ldw	r2,16(sp)
  802cf8:	1080004c 	andi	r2,r2,1
  802cfc:	103f291e 	bne	r2,zero,8029a4 <___vfprintf_internal_r+0x1294>
  802d00:	d9000817 	ldw	r4,32(sp)
  802d04:	d9400717 	ldw	r5,28(sp)
  802d08:	2545c83a 	sub	r2,r4,r21
  802d0c:	2179c83a 	sub	fp,r4,r5
  802d10:	102b883a 	mov	r21,r2
  802d14:	e0bf430e 	bge	fp,r2,802a24 <___vfprintf_internal_r+0x1314>
  802d18:	e02b883a 	mov	r21,fp
  802d1c:	003f4106 	br	802a24 <___vfprintf_internal_r+0x1314>
  802d20:	d9801a04 	addi	r6,sp,104
  802d24:	900b883a 	mov	r5,r18
  802d28:	9809883a 	mov	r4,r19
  802d2c:	0808abc0 	call	808abc <__sprint_r>
  802d30:	103b861e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802d34:	da001b17 	ldw	r8,108(sp)
  802d38:	d8c01c17 	ldw	r3,112(sp)
  802d3c:	dd802904 	addi	r22,sp,164
  802d40:	42000044 	addi	r8,r8,1
  802d44:	df002704 	addi	fp,sp,156
  802d48:	003e9706 	br	8027a8 <___vfprintf_internal_r+0x1098>
  802d4c:	bf000043 	ldbu	fp,1(r23)
  802d50:	63000814 	ori	r12,r12,32
  802d54:	bdc00044 	addi	r23,r23,1
  802d58:	e2c03fcc 	andi	r11,fp,255
  802d5c:	5ac0201c 	xori	r11,r11,128
  802d60:	5affe004 	addi	r11,r11,-128
  802d64:	003ab606 	br	801840 <___vfprintf_internal_r+0x130>
  802d68:	d9801a04 	addi	r6,sp,104
  802d6c:	900b883a 	mov	r5,r18
  802d70:	9809883a 	mov	r4,r19
  802d74:	0808abc0 	call	808abc <__sprint_r>
  802d78:	103b741e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802d7c:	d8c01c17 	ldw	r3,112(sp)
  802d80:	dd802704 	addi	r22,sp,156
  802d84:	003d8306 	br	802394 <___vfprintf_internal_r+0xc84>
  802d88:	002b883a 	mov	r21,zero
  802d8c:	003eff06 	br	80298c <___vfprintf_internal_r+0x127c>
  802d90:	408001f0 	cmpltui	r2,r8,7
  802d94:	402b883a 	mov	r21,r8
  802d98:	1001a426 	beq	r2,zero,80342c <___vfprintf_internal_r+0x1d1c>
  802d9c:	04402074 	movhi	r17,129
  802da0:	a829883a 	mov	r20,r21
  802da4:	d8c00615 	stw	r3,24(sp)
  802da8:	8c438504 	addi	r17,r17,3604
  802dac:	003b1d06 	br	801a24 <___vfprintf_internal_r+0x314>
  802db0:	01c02074 	movhi	r7,129
  802db4:	a9000450 	cmplti	r4,r21,17
  802db8:	d8801b17 	ldw	r2,108(sp)
  802dbc:	39c38804 	addi	r7,r7,3616
  802dc0:	20017f1e 	bne	r4,zero,8033c0 <___vfprintf_internal_r+0x1cb0>
  802dc4:	dc000e15 	stw	r16,56(sp)
  802dc8:	07000404 	movi	fp,16
  802dcc:	3821883a 	mov	r16,r7
  802dd0:	00000406 	br	802de4 <___vfprintf_internal_r+0x16d4>
  802dd4:	b5800204 	addi	r22,r22,8
  802dd8:	ad7ffc04 	addi	r21,r21,-16
  802ddc:	a9000448 	cmpgei	r4,r21,17
  802de0:	20017526 	beq	r4,zero,8033b8 <___vfprintf_internal_r+0x1ca8>
  802de4:	10800044 	addi	r2,r2,1
  802de8:	18c00404 	addi	r3,r3,16
  802dec:	b4000015 	stw	r16,0(r22)
  802df0:	b7000115 	stw	fp,4(r22)
  802df4:	d8c01c15 	stw	r3,112(sp)
  802df8:	d8801b15 	stw	r2,108(sp)
  802dfc:	11000208 	cmpgei	r4,r2,8
  802e00:	203ff426 	beq	r4,zero,802dd4 <___vfprintf_internal_r+0x16c4>
  802e04:	d9801a04 	addi	r6,sp,104
  802e08:	900b883a 	mov	r5,r18
  802e0c:	9809883a 	mov	r4,r19
  802e10:	0808abc0 	call	808abc <__sprint_r>
  802e14:	103b4d1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802e18:	d8c01c17 	ldw	r3,112(sp)
  802e1c:	d8801b17 	ldw	r2,108(sp)
  802e20:	dd802704 	addi	r22,sp,156
  802e24:	003fec06 	br	802dd8 <___vfprintf_internal_r+0x16c8>
  802e28:	d8800517 	ldw	r2,20(sp)
  802e2c:	18800015 	stw	r2,0(r3)
  802e30:	003a6b06 	br	8017e0 <___vfprintf_internal_r+0xd0>
  802e34:	d9801a04 	addi	r6,sp,104
  802e38:	900b883a 	mov	r5,r18
  802e3c:	9809883a 	mov	r4,r19
  802e40:	0808abc0 	call	808abc <__sprint_r>
  802e44:	103b411e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802e48:	d8c01c17 	ldw	r3,112(sp)
  802e4c:	dd401b17 	ldw	r21,108(sp)
  802e50:	df002704 	addi	fp,sp,156
  802e54:	003e3a06 	br	802740 <___vfprintf_internal_r+0x1030>
  802e58:	d9801a04 	addi	r6,sp,104
  802e5c:	900b883a 	mov	r5,r18
  802e60:	9809883a 	mov	r4,r19
  802e64:	0808abc0 	call	808abc <__sprint_r>
  802e68:	103b381e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802e6c:	d8c01c17 	ldw	r3,112(sp)
  802e70:	dd401b17 	ldw	r21,108(sp)
  802e74:	df002704 	addi	fp,sp,156
  802e78:	003e2606 	br	802714 <___vfprintf_internal_r+0x1004>
  802e7c:	d8801b17 	ldw	r2,108(sp)
  802e80:	01002074 	movhi	r4,129
  802e84:	21038704 	addi	r4,r4,3612
  802e88:	10800044 	addi	r2,r2,1
  802e8c:	18c00044 	addi	r3,r3,1
  802e90:	b1000015 	stw	r4,0(r22)
  802e94:	01000044 	movi	r4,1
  802e98:	d8801b15 	stw	r2,108(sp)
  802e9c:	b1000115 	stw	r4,4(r22)
  802ea0:	d8c01c15 	stw	r3,112(sp)
  802ea4:	10800208 	cmpgei	r2,r2,8
  802ea8:	103de11e 	bne	r2,zero,802630 <___vfprintf_internal_r+0xf20>
  802eac:	b5800204 	addi	r22,r22,8
  802eb0:	003de706 	br	802650 <___vfprintf_internal_r+0xf40>
  802eb4:	d9801a04 	addi	r6,sp,104
  802eb8:	900b883a 	mov	r5,r18
  802ebc:	9809883a 	mov	r4,r19
  802ec0:	da001115 	stw	r8,68(sp)
  802ec4:	db400f15 	stw	r13,60(sp)
  802ec8:	db800e15 	stw	r14,56(sp)
  802ecc:	0808abc0 	call	808abc <__sprint_r>
  802ed0:	103b1e1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  802ed4:	d8c01c17 	ldw	r3,112(sp)
  802ed8:	da001117 	ldw	r8,68(sp)
  802edc:	db400f17 	ldw	r13,60(sp)
  802ee0:	db800e17 	ldw	r14,56(sp)
  802ee4:	dd802704 	addi	r22,sp,156
  802ee8:	003adb06 	br	801a58 <___vfprintf_internal_r+0x348>
  802eec:	8825883a 	mov	r18,r17
  802ef0:	003b1606 	br	801b4c <___vfprintf_internal_r+0x43c>
  802ef4:	d9000917 	ldw	r4,36(sp)
  802ef8:	d9400a17 	ldw	r5,40(sp)
  802efc:	da000615 	stw	r8,24(sp)
  802f00:	200d883a 	mov	r6,r4
  802f04:	280f883a 	mov	r7,r5
  802f08:	db000415 	stw	r12,16(sp)
  802f0c:	080e07c0 	call	80e07c <__unorddf2>
  802f10:	db000417 	ldw	r12,16(sp)
  802f14:	da000617 	ldw	r8,24(sp)
  802f18:	1002091e 	bne	r2,zero,803740 <___vfprintf_internal_r+0x2030>
  802f1c:	057ff7c4 	movi	r21,-33
  802f20:	40bfffe0 	cmpeqi	r2,r8,-1
  802f24:	e56a703a 	and	r21,fp,r21
  802f28:	1001ab1e 	bne	r2,zero,8035d8 <___vfprintf_internal_r+0x1ec8>
  802f2c:	a88011d8 	cmpnei	r2,r21,71
  802f30:	10015726 	beq	r2,zero,803490 <___vfprintf_internal_r+0x1d80>
  802f34:	60804014 	ori	r2,r12,256
  802f38:	d8800415 	stw	r2,16(sp)
  802f3c:	d8800a17 	ldw	r2,40(sp)
  802f40:	10012d16 	blt	r2,zero,8033f8 <___vfprintf_internal_r+0x1ce8>
  802f44:	dd000a17 	ldw	r20,40(sp)
  802f48:	d8000605 	stb	zero,24(sp)
  802f4c:	e08019a0 	cmpeqi	r2,fp,102
  802f50:	d8800f15 	stw	r2,60(sp)
  802f54:	1000c31e 	bne	r2,zero,803264 <___vfprintf_internal_r+0x1b54>
  802f58:	e08011a0 	cmpeqi	r2,fp,70
  802f5c:	1000c11e 	bne	r2,zero,803264 <___vfprintf_internal_r+0x1b54>
  802f60:	a8801158 	cmpnei	r2,r21,69
  802f64:	10016226 	beq	r2,zero,8034f0 <___vfprintf_internal_r+0x1de0>
  802f68:	d8801804 	addi	r2,sp,96
  802f6c:	d8800315 	stw	r2,12(sp)
  802f70:	d9400917 	ldw	r5,36(sp)
  802f74:	d8801504 	addi	r2,sp,84
  802f78:	d8800215 	stw	r2,8(sp)
  802f7c:	d8801404 	addi	r2,sp,80
  802f80:	da000015 	stw	r8,0(sp)
  802f84:	9809883a 	mov	r4,r19
  802f88:	d8800115 	stw	r2,4(sp)
  802f8c:	01c00084 	movi	r7,2
  802f90:	a00d883a 	mov	r6,r20
  802f94:	db000815 	stw	r12,32(sp)
  802f98:	da000715 	stw	r8,28(sp)
  802f9c:	0803c540 	call	803c54 <_dtoa_r>
  802fa0:	da000717 	ldw	r8,28(sp)
  802fa4:	e10019d8 	cmpnei	r4,fp,103
  802fa8:	db000817 	ldw	r12,32(sp)
  802fac:	1023883a 	mov	r17,r2
  802fb0:	4007883a 	mov	r3,r8
  802fb4:	2001621e 	bne	r4,zero,803540 <___vfprintf_internal_r+0x1e30>
  802fb8:	6080004c 	andi	r2,r12,1
  802fbc:	1001621e 	bne	r2,zero,803548 <___vfprintf_internal_r+0x1e38>
  802fc0:	d8801417 	ldw	r2,80(sp)
  802fc4:	ad4011e0 	cmpeqi	r21,r21,71
  802fc8:	d8800715 	stw	r2,28(sp)
  802fcc:	d8801817 	ldw	r2,96(sp)
  802fd0:	1445c83a 	sub	r2,r2,r17
  802fd4:	d8800815 	stw	r2,32(sp)
  802fd8:	a8000526 	beq	r21,zero,802ff0 <___vfprintf_internal_r+0x18e0>
  802fdc:	d8c00717 	ldw	r3,28(sp)
  802fe0:	18bfff50 	cmplti	r2,r3,-3
  802fe4:	1000011e 	bne	r2,zero,802fec <___vfprintf_internal_r+0x18dc>
  802fe8:	40c1670e 	bge	r8,r3,803588 <___vfprintf_internal_r+0x1e78>
  802fec:	e73fff84 	addi	fp,fp,-2
  802ff0:	d8800717 	ldw	r2,28(sp)
  802ff4:	df001645 	stb	fp,89(sp)
  802ff8:	157fffc4 	addi	r21,r2,-1
  802ffc:	dd401415 	stw	r21,80(sp)
  803000:	a801c316 	blt	r21,zero,803710 <___vfprintf_internal_r+0x2000>
  803004:	00800ac4 	movi	r2,43
  803008:	d8801685 	stb	r2,90(sp)
  80300c:	a8800290 	cmplti	r2,r21,10
  803010:	1001b81e 	bne	r2,zero,8036f4 <___vfprintf_internal_r+0x1fe4>
  803014:	d98019c4 	addi	r6,sp,103
  803018:	9029883a 	mov	r20,r18
  80301c:	dc400715 	stw	r17,28(sp)
  803020:	8025883a 	mov	r18,r16
  803024:	db000f15 	stw	r12,60(sp)
  803028:	3021883a 	mov	r16,r6
  80302c:	a809883a 	mov	r4,r21
  803030:	01400284 	movi	r5,10
  803034:	080b9600 	call	80b960 <__modsi3>
  803038:	10800c04 	addi	r2,r2,48
  80303c:	a809883a 	mov	r4,r21
  803040:	80bfffc5 	stb	r2,-1(r16)
  803044:	01400284 	movi	r5,10
  803048:	080b8e00 	call	80b8e0 <__divsi3>
  80304c:	a9001908 	cmpgei	r4,r21,100
  803050:	8023883a 	mov	r17,r16
  803054:	102b883a 	mov	r21,r2
  803058:	843fffc4 	addi	r16,r16,-1
  80305c:	203ff31e 	bne	r4,zero,80302c <___vfprintf_internal_r+0x191c>
  803060:	800d883a 	mov	r6,r16
  803064:	11000c04 	addi	r4,r2,48
  803068:	9021883a 	mov	r16,r18
  80306c:	a025883a 	mov	r18,r20
  803070:	8829883a 	mov	r20,r17
  803074:	a0bfff84 	addi	r2,r20,-2
  803078:	313fffc5 	stb	r4,-1(r6)
  80307c:	d8c019c4 	addi	r3,sp,103
  803080:	db000f17 	ldw	r12,60(sp)
  803084:	dc400717 	ldw	r17,28(sp)
  803088:	10c1cd2e 	bgeu	r2,r3,8037c0 <___vfprintf_internal_r+0x20b0>
  80308c:	d8c016c4 	addi	r3,sp,91
  803090:	00000106 	br	803098 <___vfprintf_internal_r+0x1988>
  803094:	11000003 	ldbu	r4,0(r2)
  803098:	19000005 	stb	r4,0(r3)
  80309c:	10800044 	addi	r2,r2,1
  8030a0:	d90019c4 	addi	r4,sp,103
  8030a4:	18c00044 	addi	r3,r3,1
  8030a8:	113ffa1e 	bne	r2,r4,803094 <___vfprintf_internal_r+0x1984>
  8030ac:	d8801a44 	addi	r2,sp,105
  8030b0:	d8c016c4 	addi	r3,sp,91
  8030b4:	1505c83a 	sub	r2,r2,r20
  8030b8:	1885883a 	add	r2,r3,r2
  8030bc:	d8c01644 	addi	r3,sp,89
  8030c0:	10c5c83a 	sub	r2,r2,r3
  8030c4:	d8801015 	stw	r2,64(sp)
  8030c8:	d8c00817 	ldw	r3,32(sp)
  8030cc:	d9001017 	ldw	r4,64(sp)
  8030d0:	18800088 	cmpgei	r2,r3,2
  8030d4:	20eb883a 	add	r21,r4,r3
  8030d8:	10019226 	beq	r2,zero,803724 <___vfprintf_internal_r+0x2014>
  8030dc:	d8800b17 	ldw	r2,44(sp)
  8030e0:	a8ab883a 	add	r21,r21,r2
  8030e4:	a829883a 	mov	r20,r21
  8030e8:	a800010e 	bge	r21,zero,8030f0 <___vfprintf_internal_r+0x19e0>
  8030ec:	0029883a 	mov	r20,zero
  8030f0:	d8000715 	stw	zero,28(sp)
  8030f4:	00008e06 	br	803330 <___vfprintf_internal_r+0x1c20>
  8030f8:	880f883a 	mov	r7,r17
  8030fc:	10800044 	addi	r2,r2,1
  803100:	1d47883a 	add	r3,r3,r21
  803104:	b1c00015 	stw	r7,0(r22)
  803108:	003a7906 	br	801af0 <___vfprintf_internal_r+0x3e0>
  80310c:	d9801a04 	addi	r6,sp,104
  803110:	900b883a 	mov	r5,r18
  803114:	9809883a 	mov	r4,r19
  803118:	0808abc0 	call	808abc <__sprint_r>
  80311c:	103a8b1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  803120:	d8c01c17 	ldw	r3,112(sp)
  803124:	dd802704 	addi	r22,sp,156
  803128:	003c8b06 	br	802358 <___vfprintf_internal_r+0xc48>
  80312c:	d9801a04 	addi	r6,sp,104
  803130:	900b883a 	mov	r5,r18
  803134:	9809883a 	mov	r4,r19
  803138:	da000e15 	stw	r8,56(sp)
  80313c:	0808abc0 	call	808abc <__sprint_r>
  803140:	103a821e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  803144:	d8c01c17 	ldw	r3,112(sp)
  803148:	da000e17 	ldw	r8,56(sp)
  80314c:	dd802704 	addi	r22,sp,156
  803150:	003a5e06 	br	801acc <___vfprintf_internal_r+0x3bc>
  803154:	8809883a 	mov	r4,r17
  803158:	db000415 	stw	r12,16(sp)
  80315c:	d8c00615 	stw	r3,24(sp)
  803160:	08016780 	call	801678 <strlen>
  803164:	db000417 	ldw	r12,16(sp)
  803168:	102b883a 	mov	r21,r2
  80316c:	1029883a 	mov	r20,r2
  803170:	003a2c06 	br	801a24 <___vfprintf_internal_r+0x314>
  803174:	d8800d17 	ldw	r2,52(sp)
  803178:	d9000b17 	ldw	r4,44(sp)
  80317c:	b0800015 	stw	r2,0(r22)
  803180:	d8801b17 	ldw	r2,108(sp)
  803184:	20c7883a 	add	r3,r4,r3
  803188:	b1000115 	stw	r4,4(r22)
  80318c:	10800044 	addi	r2,r2,1
  803190:	d8c01c15 	stw	r3,112(sp)
  803194:	d8801b15 	stw	r2,108(sp)
  803198:	11000208 	cmpgei	r4,r2,8
  80319c:	2000bf1e 	bne	r4,zero,80349c <___vfprintf_internal_r+0x1d8c>
  8031a0:	b5800204 	addi	r22,r22,8
  8031a4:	283d3c0e 	bge	r5,zero,802698 <___vfprintf_internal_r+0xf88>
  8031a8:	01c02074 	movhi	r7,129
  8031ac:	293ffc08 	cmpgei	r4,r5,-16
  8031b0:	39c38804 	addi	r7,r7,3616
  8031b4:	0179c83a 	sub	fp,zero,r5
  8031b8:	2001361e 	bne	r4,zero,803694 <___vfprintf_internal_r+0x1f84>
  8031bc:	dc000715 	stw	r16,28(sp)
  8031c0:	05400404 	movi	r21,16
  8031c4:	9021883a 	mov	r16,r18
  8031c8:	3825883a 	mov	r18,r7
  8031cc:	00000406 	br	8031e0 <___vfprintf_internal_r+0x1ad0>
  8031d0:	b5800204 	addi	r22,r22,8
  8031d4:	e73ffc04 	addi	fp,fp,-16
  8031d8:	e1800448 	cmpgei	r6,fp,17
  8031dc:	30012a26 	beq	r6,zero,803688 <___vfprintf_internal_r+0x1f78>
  8031e0:	10800044 	addi	r2,r2,1
  8031e4:	18c00404 	addi	r3,r3,16
  8031e8:	b4800015 	stw	r18,0(r22)
  8031ec:	b5400115 	stw	r21,4(r22)
  8031f0:	d8c01c15 	stw	r3,112(sp)
  8031f4:	d8801b15 	stw	r2,108(sp)
  8031f8:	11800208 	cmpgei	r6,r2,8
  8031fc:	303ff426 	beq	r6,zero,8031d0 <___vfprintf_internal_r+0x1ac0>
  803200:	d9801a04 	addi	r6,sp,104
  803204:	800b883a 	mov	r5,r16
  803208:	9809883a 	mov	r4,r19
  80320c:	0808abc0 	call	808abc <__sprint_r>
  803210:	10015f1e 	bne	r2,zero,803790 <___vfprintf_internal_r+0x2080>
  803214:	d8c01c17 	ldw	r3,112(sp)
  803218:	d8801b17 	ldw	r2,108(sp)
  80321c:	dd802704 	addi	r22,sp,156
  803220:	003fec06 	br	8031d4 <___vfprintf_internal_r+0x1ac4>
  803224:	800f883a 	mov	r7,r16
  803228:	dc000717 	ldw	r16,28(sp)
  80322c:	8817883a 	mov	r11,r17
  803230:	aa000044 	addi	r8,r21,1
  803234:	e0800204 	addi	r2,fp,8
  803238:	1ac7883a 	add	r3,r3,r11
  80323c:	e1c00015 	stw	r7,0(fp)
  803240:	e2c00115 	stw	r11,4(fp)
  803244:	d8c01c15 	stw	r3,112(sp)
  803248:	da001b15 	stw	r8,108(sp)
  80324c:	41000208 	cmpgei	r4,r8,8
  803250:	203eb31e 	bne	r4,zero,802d20 <___vfprintf_internal_r+0x1610>
  803254:	42000044 	addi	r8,r8,1
  803258:	15800204 	addi	r22,r2,8
  80325c:	1039883a 	mov	fp,r2
  803260:	003d5106 	br	8027a8 <___vfprintf_internal_r+0x1098>
  803264:	d8801804 	addi	r2,sp,96
  803268:	d8800315 	stw	r2,12(sp)
  80326c:	d9400917 	ldw	r5,36(sp)
  803270:	d8801504 	addi	r2,sp,84
  803274:	d8800215 	stw	r2,8(sp)
  803278:	d8801404 	addi	r2,sp,80
  80327c:	da000015 	stw	r8,0(sp)
  803280:	d8800115 	stw	r2,4(sp)
  803284:	01c000c4 	movi	r7,3
  803288:	a00d883a 	mov	r6,r20
  80328c:	9809883a 	mov	r4,r19
  803290:	db000815 	stw	r12,32(sp)
  803294:	da000715 	stw	r8,28(sp)
  803298:	0803c540 	call	803c54 <_dtoa_r>
  80329c:	da000717 	ldw	r8,28(sp)
  8032a0:	1023883a 	mov	r17,r2
  8032a4:	db000817 	ldw	r12,32(sp)
  8032a8:	1207883a 	add	r3,r2,r8
  8032ac:	88800007 	ldb	r2,0(r17)
  8032b0:	10800c20 	cmpeqi	r2,r2,48
  8032b4:	1000661e 	bne	r2,zero,803450 <___vfprintf_internal_r+0x1d40>
  8032b8:	d8801417 	ldw	r2,80(sp)
  8032bc:	1893883a 	add	r9,r3,r2
  8032c0:	d9000917 	ldw	r4,36(sp)
  8032c4:	000d883a 	mov	r6,zero
  8032c8:	000f883a 	mov	r7,zero
  8032cc:	a00b883a 	mov	r5,r20
  8032d0:	da401115 	stw	r9,68(sp)
  8032d4:	da000815 	stw	r8,32(sp)
  8032d8:	db000715 	stw	r12,28(sp)
  8032dc:	080cd400 	call	80cd40 <__eqdf2>
  8032e0:	db000717 	ldw	r12,28(sp)
  8032e4:	da000817 	ldw	r8,32(sp)
  8032e8:	da401117 	ldw	r9,68(sp)
  8032ec:	1000981e 	bne	r2,zero,803550 <___vfprintf_internal_r+0x1e40>
  8032f0:	4805883a 	mov	r2,r9
  8032f4:	d8c01417 	ldw	r3,80(sp)
  8032f8:	1445c83a 	sub	r2,r2,r17
  8032fc:	ad4011d8 	cmpnei	r21,r21,71
  803300:	d8c00715 	stw	r3,28(sp)
  803304:	d8800815 	stw	r2,32(sp)
  803308:	a83f3426 	beq	r21,zero,802fdc <___vfprintf_internal_r+0x18cc>
  80330c:	d8800f17 	ldw	r2,60(sp)
  803310:	103f3726 	beq	r2,zero,802ff0 <___vfprintf_internal_r+0x18e0>
  803314:	d8c00717 	ldw	r3,28(sp)
  803318:	6080004c 	andi	r2,r12,1
  80331c:	1204b03a 	or	r2,r2,r8
  803320:	00c1130e 	bge	zero,r3,803770 <___vfprintf_internal_r+0x2060>
  803324:	10010e1e 	bne	r2,zero,803760 <___vfprintf_internal_r+0x2050>
  803328:	dd400717 	ldw	r21,28(sp)
  80332c:	a829883a 	mov	r20,r21
  803330:	d8800607 	ldb	r2,24(sp)
  803334:	10008f26 	beq	r2,zero,803574 <___vfprintf_internal_r+0x1e64>
  803338:	00800b44 	movi	r2,45
  80333c:	d8801345 	stb	r2,77(sp)
  803340:	d8800e17 	ldw	r2,56(sp)
  803344:	0011883a 	mov	r8,zero
  803348:	d8800615 	stw	r2,24(sp)
  80334c:	003b9206 	br	802198 <___vfprintf_internal_r+0xa88>
  803350:	04402074 	movhi	r17,129
  803354:	8c437704 	addi	r17,r17,3548
  803358:	003a8b06 	br	801d88 <___vfprintf_internal_r+0x678>
  80335c:	d8800617 	ldw	r2,24(sp)
  803360:	d8c00615 	stw	r3,24(sp)
  803364:	15000017 	ldw	r20,0(r2)
  803368:	a02bd7fa 	srai	r21,r20,31
  80336c:	a805883a 	mov	r2,r21
  803370:	003ae306 	br	801f00 <___vfprintf_internal_r+0x7f0>
  803374:	d8800617 	ldw	r2,24(sp)
  803378:	002b883a 	mov	r21,zero
  80337c:	d8c00615 	stw	r3,24(sp)
  803380:	15000017 	ldw	r20,0(r2)
  803384:	0005883a 	mov	r2,zero
  803388:	003a2406 	br	801c1c <___vfprintf_internal_r+0x50c>
  80338c:	d8800617 	ldw	r2,24(sp)
  803390:	002b883a 	mov	r21,zero
  803394:	d8c00615 	stw	r3,24(sp)
  803398:	15000017 	ldw	r20,0(r2)
  80339c:	00800044 	movi	r2,1
  8033a0:	003a1e06 	br	801c1c <___vfprintf_internal_r+0x50c>
  8033a4:	d8800617 	ldw	r2,24(sp)
  8033a8:	002b883a 	mov	r21,zero
  8033ac:	d8c00615 	stw	r3,24(sp)
  8033b0:	15000017 	ldw	r20,0(r2)
  8033b4:	003af406 	br	801f88 <___vfprintf_internal_r+0x878>
  8033b8:	800f883a 	mov	r7,r16
  8033bc:	dc000e17 	ldw	r16,56(sp)
  8033c0:	10800044 	addi	r2,r2,1
  8033c4:	1d47883a 	add	r3,r3,r21
  8033c8:	d8801b15 	stw	r2,108(sp)
  8033cc:	b1c00015 	stw	r7,0(r22)
  8033d0:	b5400115 	stw	r21,4(r22)
  8033d4:	d8c01c15 	stw	r3,112(sp)
  8033d8:	10800208 	cmpgei	r2,r2,8
  8033dc:	10003a1e 	bne	r2,zero,8034c8 <___vfprintf_internal_r+0x1db8>
  8033e0:	b5800204 	addi	r22,r22,8
  8033e4:	003d6c06 	br	802998 <___vfprintf_internal_r+0x1288>
  8033e8:	00800b44 	movi	r2,45
  8033ec:	d8801345 	stb	r2,77(sp)
  8033f0:	03400b44 	movi	r13,45
  8033f4:	003a6006 	br	801d78 <___vfprintf_internal_r+0x668>
  8033f8:	1520003c 	xorhi	r20,r2,32768
  8033fc:	00800b44 	movi	r2,45
  803400:	d8800605 	stb	r2,24(sp)
  803404:	003ed106 	br	802f4c <___vfprintf_internal_r+0x183c>
  803408:	d9801a04 	addi	r6,sp,104
  80340c:	900b883a 	mov	r5,r18
  803410:	9809883a 	mov	r4,r19
  803414:	0808abc0 	call	808abc <__sprint_r>
  803418:	1039cc1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  80341c:	dd401417 	ldw	r21,80(sp)
  803420:	d8c01c17 	ldw	r3,112(sp)
  803424:	dd802704 	addi	r22,sp,156
  803428:	003d6a06 	br	8029d4 <___vfprintf_internal_r+0x12c4>
  80342c:	05400184 	movi	r21,6
  803430:	003e5a06 	br	802d9c <___vfprintf_internal_r+0x168c>
  803434:	d9801a04 	addi	r6,sp,104
  803438:	900b883a 	mov	r5,r18
  80343c:	9809883a 	mov	r4,r19
  803440:	0808abc0 	call	808abc <__sprint_r>
  803444:	0039c106 	br	801b4c <___vfprintf_internal_r+0x43c>
  803448:	d9401345 	stb	r5,77(sp)
  80344c:	00396f06 	br	801a0c <___vfprintf_internal_r+0x2fc>
  803450:	d9000917 	ldw	r4,36(sp)
  803454:	000d883a 	mov	r6,zero
  803458:	000f883a 	mov	r7,zero
  80345c:	a00b883a 	mov	r5,r20
  803460:	d8c01115 	stw	r3,68(sp)
  803464:	da000815 	stw	r8,32(sp)
  803468:	db000715 	stw	r12,28(sp)
  80346c:	080cd400 	call	80cd40 <__eqdf2>
  803470:	db000717 	ldw	r12,28(sp)
  803474:	da000817 	ldw	r8,32(sp)
  803478:	d8c01117 	ldw	r3,68(sp)
  80347c:	103f8e26 	beq	r2,zero,8032b8 <___vfprintf_internal_r+0x1ba8>
  803480:	00800044 	movi	r2,1
  803484:	1205c83a 	sub	r2,r2,r8
  803488:	d8801415 	stw	r2,80(sp)
  80348c:	003f8b06 	br	8032bc <___vfprintf_internal_r+0x1bac>
  803490:	403ea81e 	bne	r8,zero,802f34 <___vfprintf_internal_r+0x1824>
  803494:	02000044 	movi	r8,1
  803498:	003ea606 	br	802f34 <___vfprintf_internal_r+0x1824>
  80349c:	d9801a04 	addi	r6,sp,104
  8034a0:	900b883a 	mov	r5,r18
  8034a4:	9809883a 	mov	r4,r19
  8034a8:	0808abc0 	call	808abc <__sprint_r>
  8034ac:	1039a71e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  8034b0:	d9401417 	ldw	r5,80(sp)
  8034b4:	d8c01c17 	ldw	r3,112(sp)
  8034b8:	d8801b17 	ldw	r2,108(sp)
  8034bc:	dd802704 	addi	r22,sp,156
  8034c0:	283c750e 	bge	r5,zero,802698 <___vfprintf_internal_r+0xf88>
  8034c4:	003f3806 	br	8031a8 <___vfprintf_internal_r+0x1a98>
  8034c8:	d9801a04 	addi	r6,sp,104
  8034cc:	900b883a 	mov	r5,r18
  8034d0:	9809883a 	mov	r4,r19
  8034d4:	0808abc0 	call	808abc <__sprint_r>
  8034d8:	10399c1e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  8034dc:	d8c01c17 	ldw	r3,112(sp)
  8034e0:	dd802704 	addi	r22,sp,156
  8034e4:	003d2c06 	br	802998 <___vfprintf_internal_r+0x1288>
  8034e8:	db000417 	ldw	r12,16(sp)
  8034ec:	003a9106 	br	801f34 <___vfprintf_internal_r+0x824>
  8034f0:	d8801804 	addi	r2,sp,96
  8034f4:	d8800315 	stw	r2,12(sp)
  8034f8:	d9400917 	ldw	r5,36(sp)
  8034fc:	d8801504 	addi	r2,sp,84
  803500:	40c00044 	addi	r3,r8,1
  803504:	d8800215 	stw	r2,8(sp)
  803508:	d8801404 	addi	r2,sp,80
  80350c:	d8c00015 	stw	r3,0(sp)
  803510:	d8800115 	stw	r2,4(sp)
  803514:	01c00084 	movi	r7,2
  803518:	a00d883a 	mov	r6,r20
  80351c:	9809883a 	mov	r4,r19
  803520:	db001115 	stw	r12,68(sp)
  803524:	da000815 	stw	r8,32(sp)
  803528:	d8c00715 	stw	r3,28(sp)
  80352c:	0803c540 	call	803c54 <_dtoa_r>
  803530:	d8c00717 	ldw	r3,28(sp)
  803534:	da000817 	ldw	r8,32(sp)
  803538:	db001117 	ldw	r12,68(sp)
  80353c:	1023883a 	mov	r17,r2
  803540:	e08011d8 	cmpnei	r2,fp,71
  803544:	103e9c26 	beq	r2,zero,802fb8 <___vfprintf_internal_r+0x18a8>
  803548:	88d3883a 	add	r9,r17,r3
  80354c:	003f5c06 	br	8032c0 <___vfprintf_internal_r+0x1bb0>
  803550:	d8801817 	ldw	r2,96(sp)
  803554:	127f672e 	bgeu	r2,r9,8032f4 <___vfprintf_internal_r+0x1be4>
  803558:	01000c04 	movi	r4,48
  80355c:	10c00044 	addi	r3,r2,1
  803560:	d8c01815 	stw	r3,96(sp)
  803564:	11000005 	stb	r4,0(r2)
  803568:	d8801817 	ldw	r2,96(sp)
  80356c:	127ffb36 	bltu	r2,r9,80355c <___vfprintf_internal_r+0x1e4c>
  803570:	003f6006 	br	8032f4 <___vfprintf_internal_r+0x1be4>
  803574:	d8800e17 	ldw	r2,56(sp)
  803578:	db401343 	ldbu	r13,77(sp)
  80357c:	0011883a 	mov	r8,zero
  803580:	d8800615 	stw	r2,24(sp)
  803584:	003b0006 	br	802188 <___vfprintf_internal_r+0xa78>
  803588:	d8800717 	ldw	r2,28(sp)
  80358c:	d8c00817 	ldw	r3,32(sp)
  803590:	10c02216 	blt	r2,r3,80361c <___vfprintf_internal_r+0x1f0c>
  803594:	6300004c 	andi	r12,r12,1
  803598:	60004f1e 	bne	r12,zero,8036d8 <___vfprintf_internal_r+0x1fc8>
  80359c:	1029883a 	mov	r20,r2
  8035a0:	1000010e 	bge	r2,zero,8035a8 <___vfprintf_internal_r+0x1e98>
  8035a4:	0029883a 	mov	r20,zero
  8035a8:	dd400717 	ldw	r21,28(sp)
  8035ac:	070019c4 	movi	fp,103
  8035b0:	003f5f06 	br	803330 <___vfprintf_internal_r+0x1c20>
  8035b4:	d9801a04 	addi	r6,sp,104
  8035b8:	900b883a 	mov	r5,r18
  8035bc:	9809883a 	mov	r4,r19
  8035c0:	0808abc0 	call	808abc <__sprint_r>
  8035c4:	1039611e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  8035c8:	d8c01c17 	ldw	r3,112(sp)
  8035cc:	dd802704 	addi	r22,sp,156
  8035d0:	a83cee0e 	bge	r21,zero,80298c <___vfprintf_internal_r+0x127c>
  8035d4:	003dec06 	br	802d88 <___vfprintf_internal_r+0x1678>
  8035d8:	02000184 	movi	r8,6
  8035dc:	003e5506 	br	802f34 <___vfprintf_internal_r+0x1824>
  8035e0:	d9801a04 	addi	r6,sp,104
  8035e4:	900b883a 	mov	r5,r18
  8035e8:	9809883a 	mov	r4,r19
  8035ec:	0808abc0 	call	808abc <__sprint_r>
  8035f0:	1039561e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  8035f4:	d8801417 	ldw	r2,80(sp)
  8035f8:	d9000817 	ldw	r4,32(sp)
  8035fc:	d8c01c17 	ldw	r3,112(sp)
  803600:	dd802704 	addi	r22,sp,156
  803604:	2085c83a 	sub	r2,r4,r2
  803608:	003d0606 	br	802a24 <___vfprintf_internal_r+0x1314>
  80360c:	4029883a 	mov	r20,r8
  803610:	d8c00615 	stw	r3,24(sp)
  803614:	402b883a 	mov	r21,r8
  803618:	00390206 	br	801a24 <___vfprintf_internal_r+0x314>
  80361c:	d8800817 	ldw	r2,32(sp)
  803620:	d8c00b17 	ldw	r3,44(sp)
  803624:	10eb883a 	add	r21,r2,r3
  803628:	d8800717 	ldw	r2,28(sp)
  80362c:	00800316 	blt	zero,r2,80363c <___vfprintf_internal_r+0x1f2c>
  803630:	d8800717 	ldw	r2,28(sp)
  803634:	a8abc83a 	sub	r21,r21,r2
  803638:	ad400044 	addi	r21,r21,1
  80363c:	a829883a 	mov	r20,r21
  803640:	a8002a16 	blt	r21,zero,8036ec <___vfprintf_internal_r+0x1fdc>
  803644:	070019c4 	movi	fp,103
  803648:	003f3906 	br	803330 <___vfprintf_internal_r+0x1c20>
  80364c:	d9401345 	stb	r5,77(sp)
  803650:	003a2306 	br	801ee0 <___vfprintf_internal_r+0x7d0>
  803654:	d9401345 	stb	r5,77(sp)
  803658:	003b1806 	br	8022bc <___vfprintf_internal_r+0xbac>
  80365c:	d9401345 	stb	r5,77(sp)
  803660:	003a8e06 	br	80209c <___vfprintf_internal_r+0x98c>
  803664:	d9401345 	stb	r5,77(sp)
  803668:	003a3d06 	br	801f60 <___vfprintf_internal_r+0x850>
  80366c:	d9401345 	stb	r5,77(sp)
  803670:	003a7606 	br	80204c <___vfprintf_internal_r+0x93c>
  803674:	d9401345 	stb	r5,77(sp)
  803678:	00399406 	br	801ccc <___vfprintf_internal_r+0x5bc>
  80367c:	00bfffc4 	movi	r2,-1
  803680:	d8800515 	stw	r2,20(sp)
  803684:	00393406 	br	801b58 <___vfprintf_internal_r+0x448>
  803688:	900f883a 	mov	r7,r18
  80368c:	8025883a 	mov	r18,r16
  803690:	dc000717 	ldw	r16,28(sp)
  803694:	10800044 	addi	r2,r2,1
  803698:	1f07883a 	add	r3,r3,fp
  80369c:	b1c00015 	stw	r7,0(r22)
  8036a0:	b7000115 	stw	fp,4(r22)
  8036a4:	d8c01c15 	stw	r3,112(sp)
  8036a8:	d8801b15 	stw	r2,108(sp)
  8036ac:	11000208 	cmpgei	r4,r2,8
  8036b0:	203bf826 	beq	r4,zero,802694 <___vfprintf_internal_r+0xf84>
  8036b4:	d9801a04 	addi	r6,sp,104
  8036b8:	900b883a 	mov	r5,r18
  8036bc:	9809883a 	mov	r4,r19
  8036c0:	0808abc0 	call	808abc <__sprint_r>
  8036c4:	1039211e 	bne	r2,zero,801b4c <___vfprintf_internal_r+0x43c>
  8036c8:	d8c01c17 	ldw	r3,112(sp)
  8036cc:	d8801b17 	ldw	r2,108(sp)
  8036d0:	dd802704 	addi	r22,sp,156
  8036d4:	003bf006 	br	802698 <___vfprintf_internal_r+0xf88>
  8036d8:	d8800717 	ldw	r2,28(sp)
  8036dc:	d8c00b17 	ldw	r3,44(sp)
  8036e0:	10eb883a 	add	r21,r2,r3
  8036e4:	a829883a 	mov	r20,r21
  8036e8:	a83fd60e 	bge	r21,zero,803644 <___vfprintf_internal_r+0x1f34>
  8036ec:	0029883a 	mov	r20,zero
  8036f0:	003fd406 	br	803644 <___vfprintf_internal_r+0x1f34>
  8036f4:	00800c04 	movi	r2,48
  8036f8:	ad400c04 	addi	r21,r21,48
  8036fc:	d88016c5 	stb	r2,91(sp)
  803700:	00800104 	movi	r2,4
  803704:	dd401705 	stb	r21,92(sp)
  803708:	d8801015 	stw	r2,64(sp)
  80370c:	003e6e06 	br	8030c8 <___vfprintf_internal_r+0x19b8>
  803710:	05400044 	movi	r21,1
  803714:	a8abc83a 	sub	r21,r21,r2
  803718:	00800b44 	movi	r2,45
  80371c:	d8801685 	stb	r2,90(sp)
  803720:	003e3a06 	br	80300c <___vfprintf_internal_r+0x18fc>
  803724:	6080004c 	andi	r2,r12,1
  803728:	d8800715 	stw	r2,28(sp)
  80372c:	103e6b1e 	bne	r2,zero,8030dc <___vfprintf_internal_r+0x19cc>
  803730:	a829883a 	mov	r20,r21
  803734:	a83efe0e 	bge	r21,zero,803330 <___vfprintf_internal_r+0x1c20>
  803738:	0029883a 	mov	r20,zero
  80373c:	003efc06 	br	803330 <___vfprintf_internal_r+0x1c20>
  803740:	d8800a17 	ldw	r2,40(sp)
  803744:	10001a16 	blt	r2,zero,8037b0 <___vfprintf_internal_r+0x20a0>
  803748:	db401343 	ldbu	r13,77(sp)
  80374c:	e0801210 	cmplti	r2,fp,72
  803750:	1000141e 	bne	r2,zero,8037a4 <___vfprintf_internal_r+0x2094>
  803754:	04402074 	movhi	r17,129
  803758:	8c437a04 	addi	r17,r17,3560
  80375c:	00398a06 	br	801d88 <___vfprintf_internal_r+0x678>
  803760:	d8800b17 	ldw	r2,44(sp)
  803764:	18ab883a 	add	r21,r3,r2
  803768:	aa2b883a 	add	r21,r21,r8
  80376c:	003ff006 	br	803730 <___vfprintf_internal_r+0x2020>
  803770:	1000031e 	bne	r2,zero,803780 <___vfprintf_internal_r+0x2070>
  803774:	05000044 	movi	r20,1
  803778:	05400044 	movi	r21,1
  80377c:	003eec06 	br	803330 <___vfprintf_internal_r+0x1c20>
  803780:	d8800b17 	ldw	r2,44(sp)
  803784:	15400044 	addi	r21,r2,1
  803788:	aa2b883a 	add	r21,r21,r8
  80378c:	003fe806 	br	803730 <___vfprintf_internal_r+0x2020>
  803790:	8025883a 	mov	r18,r16
  803794:	0038ed06 	br	801b4c <___vfprintf_internal_r+0x43c>
  803798:	b005883a 	mov	r2,r22
  80379c:	39c38804 	addi	r7,r7,3616
  8037a0:	003ea506 	br	803238 <___vfprintf_internal_r+0x1b28>
  8037a4:	04402074 	movhi	r17,129
  8037a8:	8c437904 	addi	r17,r17,3556
  8037ac:	00397606 	br	801d88 <___vfprintf_internal_r+0x678>
  8037b0:	00800b44 	movi	r2,45
  8037b4:	d8801345 	stb	r2,77(sp)
  8037b8:	03400b44 	movi	r13,45
  8037bc:	003fe306 	br	80374c <___vfprintf_internal_r+0x203c>
  8037c0:	00800084 	movi	r2,2
  8037c4:	d8801015 	stw	r2,64(sp)
  8037c8:	003e3f06 	br	8030c8 <___vfprintf_internal_r+0x19b8>
  8037cc:	d8c00617 	ldw	r3,24(sp)
  8037d0:	1a000017 	ldw	r8,0(r3)
  8037d4:	18c00104 	addi	r3,r3,4
  8037d8:	4000010e 	bge	r8,zero,8037e0 <___vfprintf_internal_r+0x20d0>
  8037dc:	023fffc4 	movi	r8,-1
  8037e0:	bf000043 	ldbu	fp,1(r23)
  8037e4:	d8c00615 	stw	r3,24(sp)
  8037e8:	102f883a 	mov	r23,r2
  8037ec:	e2c03fcc 	andi	r11,fp,255
  8037f0:	5ac0201c 	xori	r11,r11,128
  8037f4:	5affe004 	addi	r11,r11,-128
  8037f8:	00381106 	br	801840 <___vfprintf_internal_r+0x130>

008037fc <__vfprintf_internal>:
  8037fc:	00c02074 	movhi	r3,129
  803800:	2005883a 	mov	r2,r4
  803804:	190bb817 	ldw	r4,12000(r3)
  803808:	300f883a 	mov	r7,r6
  80380c:	280d883a 	mov	r6,r5
  803810:	100b883a 	mov	r5,r2
  803814:	08017101 	jmpi	801710 <___vfprintf_internal_r>

00803818 <__sbprintf>:
  803818:	2880030b 	ldhu	r2,12(r5)
  80381c:	2b001917 	ldw	r12,100(r5)
  803820:	2ac0038b 	ldhu	r11,14(r5)
  803824:	2a800717 	ldw	r10,28(r5)
  803828:	2a400917 	ldw	r9,36(r5)
  80382c:	defee204 	addi	sp,sp,-1144
  803830:	da001a04 	addi	r8,sp,104
  803834:	00c10004 	movi	r3,1024
  803838:	dc011a15 	stw	r16,1128(sp)
  80383c:	10bfff4c 	andi	r2,r2,65533
  803840:	2821883a 	mov	r16,r5
  803844:	d80b883a 	mov	r5,sp
  803848:	dc811c15 	stw	r18,1136(sp)
  80384c:	dc411b15 	stw	r17,1132(sp)
  803850:	dfc11d15 	stw	ra,1140(sp)
  803854:	2025883a 	mov	r18,r4
  803858:	d880030d 	sth	r2,12(sp)
  80385c:	db001915 	stw	r12,100(sp)
  803860:	dac0038d 	sth	r11,14(sp)
  803864:	da800715 	stw	r10,28(sp)
  803868:	da400915 	stw	r9,36(sp)
  80386c:	da000015 	stw	r8,0(sp)
  803870:	da000415 	stw	r8,16(sp)
  803874:	d8c00215 	stw	r3,8(sp)
  803878:	d8c00515 	stw	r3,20(sp)
  80387c:	d8000615 	stw	zero,24(sp)
  803880:	08017100 	call	801710 <___vfprintf_internal_r>
  803884:	1023883a 	mov	r17,r2
  803888:	10000d0e 	bge	r2,zero,8038c0 <__sbprintf+0xa8>
  80388c:	d880030b 	ldhu	r2,12(sp)
  803890:	1080100c 	andi	r2,r2,64
  803894:	10000326 	beq	r2,zero,8038a4 <__sbprintf+0x8c>
  803898:	8080030b 	ldhu	r2,12(r16)
  80389c:	10801014 	ori	r2,r2,64
  8038a0:	8080030d 	sth	r2,12(r16)
  8038a4:	8805883a 	mov	r2,r17
  8038a8:	dfc11d17 	ldw	ra,1140(sp)
  8038ac:	dc811c17 	ldw	r18,1136(sp)
  8038b0:	dc411b17 	ldw	r17,1132(sp)
  8038b4:	dc011a17 	ldw	r16,1128(sp)
  8038b8:	dec11e04 	addi	sp,sp,1144
  8038bc:	f800283a 	ret
  8038c0:	d80b883a 	mov	r5,sp
  8038c4:	9009883a 	mov	r4,r18
  8038c8:	08055cc0 	call	8055cc <_fflush_r>
  8038cc:	103fef26 	beq	r2,zero,80388c <__sbprintf+0x74>
  8038d0:	047fffc4 	movi	r17,-1
  8038d4:	003fed06 	br	80388c <__sbprintf+0x74>

008038d8 <__swsetup_r>:
  8038d8:	00802074 	movhi	r2,129
  8038dc:	108bb817 	ldw	r2,12000(r2)
  8038e0:	defffd04 	addi	sp,sp,-12
  8038e4:	dc400115 	stw	r17,4(sp)
  8038e8:	dc000015 	stw	r16,0(sp)
  8038ec:	dfc00215 	stw	ra,8(sp)
  8038f0:	2023883a 	mov	r17,r4
  8038f4:	2821883a 	mov	r16,r5
  8038f8:	10000226 	beq	r2,zero,803904 <__swsetup_r+0x2c>
  8038fc:	10c00e17 	ldw	r3,56(r2)
  803900:	18003326 	beq	r3,zero,8039d0 <__swsetup_r+0xf8>
  803904:	8180030b 	ldhu	r6,12(r16)
  803908:	30c0020c 	andi	r3,r6,8
  80390c:	3005883a 	mov	r2,r6
  803910:	18000f26 	beq	r3,zero,803950 <__swsetup_r+0x78>
  803914:	80c00417 	ldw	r3,16(r16)
  803918:	18001626 	beq	r3,zero,803974 <__swsetup_r+0x9c>
  80391c:	1100004c 	andi	r4,r2,1
  803920:	20001f1e 	bne	r4,zero,8039a0 <__swsetup_r+0xc8>
  803924:	1100008c 	andi	r4,r2,2
  803928:	20002c1e 	bne	r4,zero,8039dc <__swsetup_r+0x104>
  80392c:	81000517 	ldw	r4,20(r16)
  803930:	81000215 	stw	r4,8(r16)
  803934:	18001f26 	beq	r3,zero,8039b4 <__swsetup_r+0xdc>
  803938:	0005883a 	mov	r2,zero
  80393c:	dfc00217 	ldw	ra,8(sp)
  803940:	dc400117 	ldw	r17,4(sp)
  803944:	dc000017 	ldw	r16,0(sp)
  803948:	dec00304 	addi	sp,sp,12
  80394c:	f800283a 	ret
  803950:	3080040c 	andi	r2,r6,16
  803954:	10003126 	beq	r2,zero,803a1c <__swsetup_r+0x144>
  803958:	3080010c 	andi	r2,r6,4
  80395c:	1000211e 	bne	r2,zero,8039e4 <__swsetup_r+0x10c>
  803960:	80c00417 	ldw	r3,16(r16)
  803964:	30800214 	ori	r2,r6,8
  803968:	8080030d 	sth	r2,12(r16)
  80396c:	100d883a 	mov	r6,r2
  803970:	183fea1e 	bne	r3,zero,80391c <__swsetup_r+0x44>
  803974:	1100a00c 	andi	r4,r2,640
  803978:	21008020 	cmpeqi	r4,r4,512
  80397c:	203fe71e 	bne	r4,zero,80391c <__swsetup_r+0x44>
  803980:	8809883a 	mov	r4,r17
  803984:	800b883a 	mov	r5,r16
  803988:	08064840 	call	806484 <__smakebuf_r>
  80398c:	8180030b 	ldhu	r6,12(r16)
  803990:	80c00417 	ldw	r3,16(r16)
  803994:	3005883a 	mov	r2,r6
  803998:	1100004c 	andi	r4,r2,1
  80399c:	203fe126 	beq	r4,zero,803924 <__swsetup_r+0x4c>
  8039a0:	81000517 	ldw	r4,20(r16)
  8039a4:	80000215 	stw	zero,8(r16)
  8039a8:	0109c83a 	sub	r4,zero,r4
  8039ac:	81000615 	stw	r4,24(r16)
  8039b0:	183fe11e 	bne	r3,zero,803938 <__swsetup_r+0x60>
  8039b4:	10c0200c 	andi	r3,r2,128
  8039b8:	0005883a 	mov	r2,zero
  8039bc:	183fdf26 	beq	r3,zero,80393c <__swsetup_r+0x64>
  8039c0:	31801014 	ori	r6,r6,64
  8039c4:	8180030d 	sth	r6,12(r16)
  8039c8:	00bfffc4 	movi	r2,-1
  8039cc:	003fdb06 	br	80393c <__swsetup_r+0x64>
  8039d0:	1009883a 	mov	r4,r2
  8039d4:	08059600 	call	805960 <__sinit>
  8039d8:	003fca06 	br	803904 <__swsetup_r+0x2c>
  8039dc:	0009883a 	mov	r4,zero
  8039e0:	003fd306 	br	803930 <__swsetup_r+0x58>
  8039e4:	81400c17 	ldw	r5,48(r16)
  8039e8:	28000626 	beq	r5,zero,803a04 <__swsetup_r+0x12c>
  8039ec:	80801004 	addi	r2,r16,64
  8039f0:	28800326 	beq	r5,r2,803a00 <__swsetup_r+0x128>
  8039f4:	8809883a 	mov	r4,r17
  8039f8:	0805ac40 	call	805ac4 <_free_r>
  8039fc:	8180030b 	ldhu	r6,12(r16)
  803a00:	80000c15 	stw	zero,48(r16)
  803a04:	80c00417 	ldw	r3,16(r16)
  803a08:	00bff6c4 	movi	r2,-37
  803a0c:	118c703a 	and	r6,r2,r6
  803a10:	80000115 	stw	zero,4(r16)
  803a14:	80c00015 	stw	r3,0(r16)
  803a18:	003fd206 	br	803964 <__swsetup_r+0x8c>
  803a1c:	00800244 	movi	r2,9
  803a20:	88800015 	stw	r2,0(r17)
  803a24:	31801014 	ori	r6,r6,64
  803a28:	8180030d 	sth	r6,12(r16)
  803a2c:	00bfffc4 	movi	r2,-1
  803a30:	003fc206 	br	80393c <__swsetup_r+0x64>

00803a34 <quorem>:
  803a34:	defff204 	addi	sp,sp,-56
  803a38:	dc400515 	stw	r17,20(sp)
  803a3c:	20800417 	ldw	r2,16(r4)
  803a40:	2c400417 	ldw	r17,16(r5)
  803a44:	dfc00d15 	stw	ra,52(sp)
  803a48:	df000c15 	stw	fp,48(sp)
  803a4c:	ddc00b15 	stw	r23,44(sp)
  803a50:	dd800a15 	stw	r22,40(sp)
  803a54:	dd400915 	stw	r21,36(sp)
  803a58:	dd000815 	stw	r20,32(sp)
  803a5c:	dcc00715 	stw	r19,28(sp)
  803a60:	dc800615 	stw	r18,24(sp)
  803a64:	dc000415 	stw	r16,16(sp)
  803a68:	d9000115 	stw	r4,4(sp)
  803a6c:	d9400215 	stw	r5,8(sp)
  803a70:	14407616 	blt	r2,r17,803c4c <quorem+0x218>
  803a74:	8c7fffc4 	addi	r17,r17,-1
  803a78:	882a90ba 	slli	r21,r17,2
  803a7c:	2f000504 	addi	fp,r5,20
  803a80:	25800504 	addi	r22,r4,20
  803a84:	e565883a 	add	r18,fp,r21
  803a88:	b545883a 	add	r2,r22,r21
  803a8c:	95c00017 	ldw	r23,0(r18)
  803a90:	15000017 	ldw	r20,0(r2)
  803a94:	dd800015 	stw	r22,0(sp)
  803a98:	bdc00044 	addi	r23,r23,1
  803a9c:	b80b883a 	mov	r5,r23
  803aa0:	a009883a 	mov	r4,r20
  803aa4:	d8800315 	stw	r2,12(sp)
  803aa8:	080b9d40 	call	80b9d4 <__udivsi3>
  803aac:	1021883a 	mov	r16,r2
  803ab0:	a5c02f36 	bltu	r20,r23,803b70 <quorem+0x13c>
  803ab4:	e029883a 	mov	r20,fp
  803ab8:	002b883a 	mov	r21,zero
  803abc:	002f883a 	mov	r23,zero
  803ac0:	a4c00017 	ldw	r19,0(r20)
  803ac4:	800b883a 	mov	r5,r16
  803ac8:	b5800104 	addi	r22,r22,4
  803acc:	993fffcc 	andi	r4,r19,65535
  803ad0:	080150c0 	call	80150c <__mulsi3>
  803ad4:	9808d43a 	srli	r4,r19,16
  803ad8:	800b883a 	mov	r5,r16
  803adc:	156b883a 	add	r21,r2,r21
  803ae0:	080150c0 	call	80150c <__mulsi3>
  803ae4:	b0ffff17 	ldw	r3,-4(r22)
  803ae8:	a80ad43a 	srli	r5,r21,16
  803aec:	a93fffcc 	andi	r4,r21,65535
  803af0:	19bfffcc 	andi	r6,r3,65535
  803af4:	b909c83a 	sub	r4,r23,r4
  803af8:	2189883a 	add	r4,r4,r6
  803afc:	1806d43a 	srli	r3,r3,16
  803b00:	1145883a 	add	r2,r2,r5
  803b04:	200bd43a 	srai	r5,r4,16
  803b08:	11bfffcc 	andi	r6,r2,65535
  803b0c:	1987c83a 	sub	r3,r3,r6
  803b10:	1947883a 	add	r3,r3,r5
  803b14:	180a943a 	slli	r5,r3,16
  803b18:	213fffcc 	andi	r4,r4,65535
  803b1c:	a5000104 	addi	r20,r20,4
  803b20:	2908b03a 	or	r4,r5,r4
  803b24:	b13fff15 	stw	r4,-4(r22)
  803b28:	102ad43a 	srli	r21,r2,16
  803b2c:	182fd43a 	srai	r23,r3,16
  803b30:	953fe32e 	bgeu	r18,r20,803ac0 <quorem+0x8c>
  803b34:	d8c00317 	ldw	r3,12(sp)
  803b38:	18800017 	ldw	r2,0(r3)
  803b3c:	10000c1e 	bne	r2,zero,803b70 <quorem+0x13c>
  803b40:	d8800017 	ldw	r2,0(sp)
  803b44:	1d7fff04 	addi	r21,r3,-4
  803b48:	15400436 	bltu	r2,r21,803b5c <quorem+0x128>
  803b4c:	00000606 	br	803b68 <quorem+0x134>
  803b50:	d8800017 	ldw	r2,0(sp)
  803b54:	8c7fffc4 	addi	r17,r17,-1
  803b58:	1540032e 	bgeu	r2,r21,803b68 <quorem+0x134>
  803b5c:	a8800017 	ldw	r2,0(r21)
  803b60:	ad7fff04 	addi	r21,r21,-4
  803b64:	103ffa26 	beq	r2,zero,803b50 <quorem+0x11c>
  803b68:	d8800117 	ldw	r2,4(sp)
  803b6c:	14400415 	stw	r17,16(r2)
  803b70:	d9400217 	ldw	r5,8(sp)
  803b74:	d9000117 	ldw	r4,4(sp)
  803b78:	0807ba40 	call	807ba4 <__mcmp>
  803b7c:	10002616 	blt	r2,zero,803c18 <quorem+0x1e4>
  803b80:	d9800017 	ldw	r6,0(sp)
  803b84:	84000044 	addi	r16,r16,1
  803b88:	0007883a 	mov	r3,zero
  803b8c:	e1000017 	ldw	r4,0(fp)
  803b90:	31400017 	ldw	r5,0(r6)
  803b94:	31800104 	addi	r6,r6,4
  803b98:	20bfffcc 	andi	r2,r4,65535
  803b9c:	1887c83a 	sub	r3,r3,r2
  803ba0:	28bfffcc 	andi	r2,r5,65535
  803ba4:	1885883a 	add	r2,r3,r2
  803ba8:	2008d43a 	srli	r4,r4,16
  803bac:	2806d43a 	srli	r3,r5,16
  803bb0:	100fd43a 	srai	r7,r2,16
  803bb4:	117fffcc 	andi	r5,r2,65535
  803bb8:	1907c83a 	sub	r3,r3,r4
  803bbc:	19c7883a 	add	r3,r3,r7
  803bc0:	1804943a 	slli	r2,r3,16
  803bc4:	e7000104 	addi	fp,fp,4
  803bc8:	1807d43a 	srai	r3,r3,16
  803bcc:	1144b03a 	or	r2,r2,r5
  803bd0:	30bfff15 	stw	r2,-4(r6)
  803bd4:	973fed2e 	bgeu	r18,fp,803b8c <quorem+0x158>
  803bd8:	880490ba 	slli	r2,r17,2
  803bdc:	d9000017 	ldw	r4,0(sp)
  803be0:	2085883a 	add	r2,r4,r2
  803be4:	10c00017 	ldw	r3,0(r2)
  803be8:	18000b1e 	bne	r3,zero,803c18 <quorem+0x1e4>
  803bec:	10bfff04 	addi	r2,r2,-4
  803bf0:	20800436 	bltu	r4,r2,803c04 <quorem+0x1d0>
  803bf4:	00000606 	br	803c10 <quorem+0x1dc>
  803bf8:	d8c00017 	ldw	r3,0(sp)
  803bfc:	8c7fffc4 	addi	r17,r17,-1
  803c00:	1880032e 	bgeu	r3,r2,803c10 <quorem+0x1dc>
  803c04:	10c00017 	ldw	r3,0(r2)
  803c08:	10bfff04 	addi	r2,r2,-4
  803c0c:	183ffa26 	beq	r3,zero,803bf8 <quorem+0x1c4>
  803c10:	d8800117 	ldw	r2,4(sp)
  803c14:	14400415 	stw	r17,16(r2)
  803c18:	8005883a 	mov	r2,r16
  803c1c:	dfc00d17 	ldw	ra,52(sp)
  803c20:	df000c17 	ldw	fp,48(sp)
  803c24:	ddc00b17 	ldw	r23,44(sp)
  803c28:	dd800a17 	ldw	r22,40(sp)
  803c2c:	dd400917 	ldw	r21,36(sp)
  803c30:	dd000817 	ldw	r20,32(sp)
  803c34:	dcc00717 	ldw	r19,28(sp)
  803c38:	dc800617 	ldw	r18,24(sp)
  803c3c:	dc400517 	ldw	r17,20(sp)
  803c40:	dc000417 	ldw	r16,16(sp)
  803c44:	dec00e04 	addi	sp,sp,56
  803c48:	f800283a 	ret
  803c4c:	0005883a 	mov	r2,zero
  803c50:	003ff206 	br	803c1c <quorem+0x1e8>

00803c54 <_dtoa_r>:
  803c54:	20801017 	ldw	r2,64(r4)
  803c58:	deffe204 	addi	sp,sp,-120
  803c5c:	ddc01b15 	stw	r23,108(sp)
  803c60:	dd001815 	stw	r20,96(sp)
  803c64:	dc801615 	stw	r18,88(sp)
  803c68:	dc401515 	stw	r17,84(sp)
  803c6c:	dc001415 	stw	r16,80(sp)
  803c70:	dfc01d15 	stw	ra,116(sp)
  803c74:	df001c15 	stw	fp,112(sp)
  803c78:	dd801a15 	stw	r22,104(sp)
  803c7c:	dd401915 	stw	r21,100(sp)
  803c80:	dcc01715 	stw	r19,92(sp)
  803c84:	d9c00115 	stw	r7,4(sp)
  803c88:	dc002017 	ldw	r16,128(sp)
  803c8c:	202f883a 	mov	r23,r4
  803c90:	3025883a 	mov	r18,r6
  803c94:	2829883a 	mov	r20,r5
  803c98:	3023883a 	mov	r17,r6
  803c9c:	10000826 	beq	r2,zero,803cc0 <_dtoa_r+0x6c>
  803ca0:	21801117 	ldw	r6,68(r4)
  803ca4:	00c00044 	movi	r3,1
  803ca8:	100b883a 	mov	r5,r2
  803cac:	1986983a 	sll	r3,r3,r6
  803cb0:	11800115 	stw	r6,4(r2)
  803cb4:	10c00215 	stw	r3,8(r2)
  803cb8:	08072380 	call	807238 <_Bfree>
  803cbc:	b8001015 	stw	zero,64(r23)
  803cc0:	90018616 	blt	r18,zero,8042dc <_dtoa_r+0x688>
  803cc4:	80000015 	stw	zero,0(r16)
  803cc8:	909ffc2c 	andhi	r2,r18,32752
  803ccc:	00dffc34 	movhi	r3,32752
  803cd0:	10c18b26 	beq	r2,r3,804300 <_dtoa_r+0x6ac>
  803cd4:	000d883a 	mov	r6,zero
  803cd8:	000f883a 	mov	r7,zero
  803cdc:	a009883a 	mov	r4,r20
  803ce0:	880b883a 	mov	r5,r17
  803ce4:	080cd400 	call	80cd40 <__eqdf2>
  803ce8:	1000181e 	bne	r2,zero,803d4c <_dtoa_r+0xf8>
  803cec:	d8c01f17 	ldw	r3,124(sp)
  803cf0:	00800044 	movi	r2,1
  803cf4:	18800015 	stw	r2,0(r3)
  803cf8:	d8802117 	ldw	r2,132(sp)
  803cfc:	10030b26 	beq	r2,zero,80492c <_dtoa_r+0xcd8>
  803d00:	d8c02117 	ldw	r3,132(sp)
  803d04:	00802074 	movhi	r2,129
  803d08:	10838744 	addi	r2,r2,3613
  803d0c:	07002074 	movhi	fp,129
  803d10:	18800015 	stw	r2,0(r3)
  803d14:	e7038704 	addi	fp,fp,3612
  803d18:	e005883a 	mov	r2,fp
  803d1c:	dfc01d17 	ldw	ra,116(sp)
  803d20:	df001c17 	ldw	fp,112(sp)
  803d24:	ddc01b17 	ldw	r23,108(sp)
  803d28:	dd801a17 	ldw	r22,104(sp)
  803d2c:	dd401917 	ldw	r21,100(sp)
  803d30:	dd001817 	ldw	r20,96(sp)
  803d34:	dcc01717 	ldw	r19,92(sp)
  803d38:	dc801617 	ldw	r18,88(sp)
  803d3c:	dc401517 	ldw	r17,84(sp)
  803d40:	dc001417 	ldw	r16,80(sp)
  803d44:	dec01e04 	addi	sp,sp,120
  803d48:	f800283a 	ret
  803d4c:	d8801204 	addi	r2,sp,72
  803d50:	9020d53a 	srli	r16,r18,20
  803d54:	d8800015 	stw	r2,0(sp)
  803d58:	d9c01304 	addi	r7,sp,76
  803d5c:	a00b883a 	mov	r5,r20
  803d60:	880d883a 	mov	r6,r17
  803d64:	b809883a 	mov	r4,r23
  803d68:	0807f880 	call	807f88 <__d2b>
  803d6c:	102d883a 	mov	r22,r2
  803d70:	8001741e 	bne	r16,zero,804344 <_dtoa_r+0x6f0>
  803d74:	df001217 	ldw	fp,72(sp)
  803d78:	dc001317 	ldw	r16,76(sp)
  803d7c:	e421883a 	add	r16,fp,r16
  803d80:	80810c84 	addi	r2,r16,1074
  803d84:	10c00850 	cmplti	r3,r2,33
  803d88:	1802f81e 	bne	r3,zero,80496c <_dtoa_r+0xd18>
  803d8c:	01001004 	movi	r4,64
  803d90:	2085c83a 	sub	r2,r4,r2
  803d94:	81010484 	addi	r4,r16,1042
  803d98:	90a4983a 	sll	r18,r18,r2
  803d9c:	a108d83a 	srl	r4,r20,r4
  803da0:	9108b03a 	or	r4,r18,r4
  803da4:	080e20c0 	call	80e20c <__floatunsidf>
  803da8:	1009883a 	mov	r4,r2
  803dac:	017f8434 	movhi	r5,65040
  803db0:	00800044 	movi	r2,1
  803db4:	194b883a 	add	r5,r3,r5
  803db8:	843fffc4 	addi	r16,r16,-1
  803dbc:	d8800915 	stw	r2,36(sp)
  803dc0:	000d883a 	mov	r6,zero
  803dc4:	01cffe34 	movhi	r7,16376
  803dc8:	080d7480 	call	80d748 <__subdf3>
  803dcc:	0198dbf4 	movhi	r6,25455
  803dd0:	01cff4f4 	movhi	r7,16339
  803dd4:	3190d844 	addi	r6,r6,17249
  803dd8:	39e1e9c4 	addi	r7,r7,-30809
  803ddc:	1009883a 	mov	r4,r2
  803de0:	180b883a 	mov	r5,r3
  803de4:	080cfa00 	call	80cfa0 <__muldf3>
  803de8:	01a2d874 	movhi	r6,35681
  803dec:	01cff1f4 	movhi	r7,16327
  803df0:	31b22cc4 	addi	r6,r6,-14157
  803df4:	39e28a04 	addi	r7,r7,-30168
  803df8:	180b883a 	mov	r5,r3
  803dfc:	1009883a 	mov	r4,r2
  803e00:	080ba940 	call	80ba94 <__adddf3>
  803e04:	8009883a 	mov	r4,r16
  803e08:	1027883a 	mov	r19,r2
  803e0c:	1825883a 	mov	r18,r3
  803e10:	080e1500 	call	80e150 <__floatsidf>
  803e14:	019427f4 	movhi	r6,20639
  803e18:	01cff4f4 	movhi	r7,16339
  803e1c:	319e7ec4 	addi	r6,r6,31227
  803e20:	39d104c4 	addi	r7,r7,17427
  803e24:	1009883a 	mov	r4,r2
  803e28:	180b883a 	mov	r5,r3
  803e2c:	080cfa00 	call	80cfa0 <__muldf3>
  803e30:	100d883a 	mov	r6,r2
  803e34:	180f883a 	mov	r7,r3
  803e38:	9809883a 	mov	r4,r19
  803e3c:	900b883a 	mov	r5,r18
  803e40:	080ba940 	call	80ba94 <__adddf3>
  803e44:	1009883a 	mov	r4,r2
  803e48:	180b883a 	mov	r5,r3
  803e4c:	1025883a 	mov	r18,r2
  803e50:	182b883a 	mov	r21,r3
  803e54:	080e0d00 	call	80e0d0 <__fixdfsi>
  803e58:	000d883a 	mov	r6,zero
  803e5c:	000f883a 	mov	r7,zero
  803e60:	9009883a 	mov	r4,r18
  803e64:	a80b883a 	mov	r5,r21
  803e68:	1027883a 	mov	r19,r2
  803e6c:	080ceb00 	call	80ceb0 <__ledf2>
  803e70:	1002a416 	blt	r2,zero,804904 <_dtoa_r+0xcb0>
  803e74:	e439c83a 	sub	fp,fp,r16
  803e78:	e0ffffc4 	addi	r3,fp,-1
  803e7c:	988005e8 	cmpgeui	r2,r19,23
  803e80:	d8c00215 	stw	r3,8(sp)
  803e84:	1002961e 	bne	r2,zero,8048e0 <_dtoa_r+0xc8c>
  803e88:	980690fa 	slli	r3,r19,3
  803e8c:	00802074 	movhi	r2,129
  803e90:	1083d004 	addi	r2,r2,3904
  803e94:	10c5883a 	add	r2,r2,r3
  803e98:	11800017 	ldw	r6,0(r2)
  803e9c:	11c00117 	ldw	r7,4(r2)
  803ea0:	a009883a 	mov	r4,r20
  803ea4:	880b883a 	mov	r5,r17
  803ea8:	080ceb00 	call	80ceb0 <__ledf2>
  803eac:	1002670e 	bge	r2,zero,80484c <_dtoa_r+0xbf8>
  803eb0:	d8000815 	stw	zero,32(sp)
  803eb4:	e0bfffc4 	addi	r2,fp,-1
  803eb8:	9cffffc4 	addi	r19,r19,-1
  803ebc:	10028c16 	blt	r2,zero,8048f0 <_dtoa_r+0xc9c>
  803ec0:	d8000515 	stw	zero,20(sp)
  803ec4:	9802650e 	bge	r19,zero,80485c <_dtoa_r+0xc08>
  803ec8:	d8800517 	ldw	r2,20(sp)
  803ecc:	d8c00117 	ldw	r3,4(sp)
  803ed0:	dcc00315 	stw	r19,12(sp)
  803ed4:	14c5c83a 	sub	r2,r2,r19
  803ed8:	d8800515 	stw	r2,20(sp)
  803edc:	04c5c83a 	sub	r2,zero,r19
  803ee0:	d8800715 	stw	r2,28(sp)
  803ee4:	188002a8 	cmpgeui	r2,r3,10
  803ee8:	0027883a 	mov	r19,zero
  803eec:	1002631e 	bne	r2,zero,80487c <_dtoa_r+0xc28>
  803ef0:	18800190 	cmplti	r2,r3,6
  803ef4:	1002a11e 	bne	r2,zero,80497c <_dtoa_r+0xd28>
  803ef8:	18bfff04 	addi	r2,r3,-4
  803efc:	d8800115 	stw	r2,4(sp)
  803f00:	0021883a 	mov	r16,zero
  803f04:	d8c00117 	ldw	r3,4(sp)
  803f08:	18800120 	cmpeqi	r2,r3,4
  803f0c:	1003721e 	bne	r2,zero,804cd8 <_dtoa_r+0x1084>
  803f10:	18800160 	cmpeqi	r2,r3,5
  803f14:	10032f1e 	bne	r2,zero,804bd4 <_dtoa_r+0xf80>
  803f18:	188000a0 	cmpeqi	r2,r3,2
  803f1c:	10026326 	beq	r2,zero,8048ac <_dtoa_r+0xc58>
  803f20:	d8000615 	stw	zero,24(sp)
  803f24:	d8801e17 	ldw	r2,120(sp)
  803f28:	00833c0e 	bge	zero,r2,804c1c <_dtoa_r+0xfc8>
  803f2c:	d8800b15 	stw	r2,44(sp)
  803f30:	d8800415 	stw	r2,16(sp)
  803f34:	100d883a 	mov	r6,r2
  803f38:	b8001115 	stw	zero,68(r23)
  803f3c:	30800610 	cmplti	r2,r6,24
  803f40:	1005161e 	bne	r2,zero,80539c <_dtoa_r+0x1748>
  803f44:	00c00044 	movi	r3,1
  803f48:	00800104 	movi	r2,4
  803f4c:	1085883a 	add	r2,r2,r2
  803f50:	11000504 	addi	r4,r2,20
  803f54:	180b883a 	mov	r5,r3
  803f58:	18c00044 	addi	r3,r3,1
  803f5c:	313ffb2e 	bgeu	r6,r4,803f4c <_dtoa_r+0x2f8>
  803f60:	b9401115 	stw	r5,68(r23)
  803f64:	b809883a 	mov	r4,r23
  803f68:	08071940 	call	807194 <_Balloc>
  803f6c:	1039883a 	mov	fp,r2
  803f70:	1004f526 	beq	r2,zero,805348 <_dtoa_r+0x16f4>
  803f74:	b8801015 	stw	r2,64(r23)
  803f78:	d8800417 	ldw	r2,16(sp)
  803f7c:	108003e8 	cmpgeui	r2,r2,15
  803f80:	10010b1e 	bne	r2,zero,8043b0 <_dtoa_r+0x75c>
  803f84:	80010a26 	beq	r16,zero,8043b0 <_dtoa_r+0x75c>
  803f88:	d9000317 	ldw	r4,12(sp)
  803f8c:	0103a30e 	bge	zero,r4,804e1c <_dtoa_r+0x11c8>
  803f90:	208003cc 	andi	r2,r4,15
  803f94:	100690fa 	slli	r3,r2,3
  803f98:	202bd13a 	srai	r21,r4,4
  803f9c:	00802074 	movhi	r2,129
  803fa0:	1083d004 	addi	r2,r2,3904
  803fa4:	10c5883a 	add	r2,r2,r3
  803fa8:	a8c0040c 	andi	r3,r21,16
  803fac:	12800017 	ldw	r10,0(r2)
  803fb0:	12400117 	ldw	r9,4(r2)
  803fb4:	18034226 	beq	r3,zero,804cc0 <_dtoa_r+0x106c>
  803fb8:	00802074 	movhi	r2,129
  803fbc:	1083c604 	addi	r2,r2,3864
  803fc0:	11800817 	ldw	r6,32(r2)
  803fc4:	11c00917 	ldw	r7,36(r2)
  803fc8:	a009883a 	mov	r4,r20
  803fcc:	880b883a 	mov	r5,r17
  803fd0:	da400e15 	stw	r9,56(sp)
  803fd4:	da800d15 	stw	r10,52(sp)
  803fd8:	080c40c0 	call	80c40c <__divdf3>
  803fdc:	da800d17 	ldw	r10,52(sp)
  803fe0:	da400e17 	ldw	r9,56(sp)
  803fe4:	ad4003cc 	andi	r21,r21,15
  803fe8:	d8800a15 	stw	r2,40(sp)
  803fec:	d8c00c15 	stw	r3,48(sp)
  803ff0:	040000c4 	movi	r16,3
  803ff4:	a8001126 	beq	r21,zero,80403c <_dtoa_r+0x3e8>
  803ff8:	04802074 	movhi	r18,129
  803ffc:	9483c604 	addi	r18,r18,3864
  804000:	5009883a 	mov	r4,r10
  804004:	480b883a 	mov	r5,r9
  804008:	a980004c 	andi	r6,r21,1
  80400c:	30000626 	beq	r6,zero,804028 <_dtoa_r+0x3d4>
  804010:	91800017 	ldw	r6,0(r18)
  804014:	91c00117 	ldw	r7,4(r18)
  804018:	84000044 	addi	r16,r16,1
  80401c:	080cfa00 	call	80cfa0 <__muldf3>
  804020:	1009883a 	mov	r4,r2
  804024:	180b883a 	mov	r5,r3
  804028:	a82bd07a 	srai	r21,r21,1
  80402c:	94800204 	addi	r18,r18,8
  804030:	a83ff51e 	bne	r21,zero,804008 <_dtoa_r+0x3b4>
  804034:	2015883a 	mov	r10,r4
  804038:	2813883a 	mov	r9,r5
  80403c:	d9000a17 	ldw	r4,40(sp)
  804040:	d9400c17 	ldw	r5,48(sp)
  804044:	500d883a 	mov	r6,r10
  804048:	480f883a 	mov	r7,r9
  80404c:	080c40c0 	call	80c40c <__divdf3>
  804050:	1025883a 	mov	r18,r2
  804054:	d8c00a15 	stw	r3,40(sp)
  804058:	d8800817 	ldw	r2,32(sp)
  80405c:	10000726 	beq	r2,zero,80407c <_dtoa_r+0x428>
  804060:	dd400a17 	ldw	r21,40(sp)
  804064:	000d883a 	mov	r6,zero
  804068:	01cffc34 	movhi	r7,16368
  80406c:	9009883a 	mov	r4,r18
  804070:	a80b883a 	mov	r5,r21
  804074:	080ceb00 	call	80ceb0 <__ledf2>
  804078:	10045516 	blt	r2,zero,8051d0 <_dtoa_r+0x157c>
  80407c:	8009883a 	mov	r4,r16
  804080:	080e1500 	call	80e150 <__floatsidf>
  804084:	d9c00a17 	ldw	r7,40(sp)
  804088:	900d883a 	mov	r6,r18
  80408c:	1009883a 	mov	r4,r2
  804090:	180b883a 	mov	r5,r3
  804094:	080cfa00 	call	80cfa0 <__muldf3>
  804098:	000d883a 	mov	r6,zero
  80409c:	01d00734 	movhi	r7,16412
  8040a0:	1009883a 	mov	r4,r2
  8040a4:	180b883a 	mov	r5,r3
  8040a8:	080ba940 	call	80ba94 <__adddf3>
  8040ac:	d8800c15 	stw	r2,48(sp)
  8040b0:	00bf3034 	movhi	r2,64704
  8040b4:	1885883a 	add	r2,r3,r2
  8040b8:	d8800d15 	stw	r2,52(sp)
  8040bc:	d8800417 	ldw	r2,16(sp)
  8040c0:	10033926 	beq	r2,zero,804da8 <_dtoa_r+0x1154>
  8040c4:	d8800317 	ldw	r2,12(sp)
  8040c8:	d8801115 	stw	r2,68(sp)
  8040cc:	d8800417 	ldw	r2,16(sp)
  8040d0:	d8800e15 	stw	r2,56(sp)
  8040d4:	dc000a17 	ldw	r16,40(sp)
  8040d8:	9009883a 	mov	r4,r18
  8040dc:	800b883a 	mov	r5,r16
  8040e0:	080e0d00 	call	80e0d0 <__fixdfsi>
  8040e4:	d8c00e17 	ldw	r3,56(sp)
  8040e8:	d8801015 	stw	r2,64(sp)
  8040ec:	18ffffc4 	addi	r3,r3,-1
  8040f0:	180890fa 	slli	r4,r3,3
  8040f4:	00c02074 	movhi	r3,129
  8040f8:	18c3d004 	addi	r3,r3,3904
  8040fc:	1907883a 	add	r3,r3,r4
  804100:	1b000017 	ldw	r12,0(r3)
  804104:	1b400117 	ldw	r13,4(r3)
  804108:	1009883a 	mov	r4,r2
  80410c:	db000f15 	stw	r12,60(sp)
  804110:	db400a15 	stw	r13,40(sp)
  804114:	080e1500 	call	80e150 <__floatsidf>
  804118:	9009883a 	mov	r4,r18
  80411c:	800b883a 	mov	r5,r16
  804120:	100d883a 	mov	r6,r2
  804124:	180f883a 	mov	r7,r3
  804128:	080d7480 	call	80d748 <__subdf3>
  80412c:	dac01017 	ldw	r11,64(sp)
  804130:	102b883a 	mov	r21,r2
  804134:	d8800617 	ldw	r2,24(sp)
  804138:	db400a17 	ldw	r13,40(sp)
  80413c:	db000f17 	ldw	r12,60(sp)
  804140:	e4000044 	addi	r16,fp,1
  804144:	1825883a 	mov	r18,r3
  804148:	5ac00c04 	addi	r11,r11,48
  80414c:	1003c626 	beq	r2,zero,805068 <_dtoa_r+0x1414>
  804150:	600d883a 	mov	r6,r12
  804154:	680f883a 	mov	r7,r13
  804158:	0009883a 	mov	r4,zero
  80415c:	014ff834 	movhi	r5,16352
  804160:	dac00f15 	stw	r11,60(sp)
  804164:	080c40c0 	call	80c40c <__divdf3>
  804168:	d9800c17 	ldw	r6,48(sp)
  80416c:	d9c00d17 	ldw	r7,52(sp)
  804170:	1009883a 	mov	r4,r2
  804174:	180b883a 	mov	r5,r3
  804178:	080d7480 	call	80d748 <__subdf3>
  80417c:	dac00f17 	ldw	r11,60(sp)
  804180:	a80d883a 	mov	r6,r21
  804184:	900f883a 	mov	r7,r18
  804188:	e2c00005 	stb	r11,0(fp)
  80418c:	1009883a 	mov	r4,r2
  804190:	180b883a 	mov	r5,r3
  804194:	d8800a15 	stw	r2,40(sp)
  804198:	d8c00c15 	stw	r3,48(sp)
  80419c:	080cdc00 	call	80cdc0 <__gedf2>
  8041a0:	00844116 	blt	zero,r2,8052a8 <_dtoa_r+0x1654>
  8041a4:	0005883a 	mov	r2,zero
  8041a8:	dcc00f15 	stw	r19,60(sp)
  8041ac:	dd800d15 	stw	r22,52(sp)
  8041b0:	dcc00c17 	ldw	r19,48(sp)
  8041b4:	dd800e17 	ldw	r22,56(sp)
  8041b8:	dc400c15 	stw	r17,48(sp)
  8041bc:	ddc00e15 	stw	r23,56(sp)
  8041c0:	dc400a17 	ldw	r17,40(sp)
  8041c4:	dd000a15 	stw	r20,40(sp)
  8041c8:	1029883a 	mov	r20,r2
  8041cc:	00002606 	br	804268 <_dtoa_r+0x614>
  8041d0:	a5000044 	addi	r20,r20,1
  8041d4:	a5843d0e 	bge	r20,r22,8052cc <_dtoa_r+0x1678>
  8041d8:	8809883a 	mov	r4,r17
  8041dc:	980b883a 	mov	r5,r19
  8041e0:	000d883a 	mov	r6,zero
  8041e4:	01d00934 	movhi	r7,16420
  8041e8:	080cfa00 	call	80cfa0 <__muldf3>
  8041ec:	000d883a 	mov	r6,zero
  8041f0:	01d00934 	movhi	r7,16420
  8041f4:	a809883a 	mov	r4,r21
  8041f8:	900b883a 	mov	r5,r18
  8041fc:	1023883a 	mov	r17,r2
  804200:	1827883a 	mov	r19,r3
  804204:	080cfa00 	call	80cfa0 <__muldf3>
  804208:	180b883a 	mov	r5,r3
  80420c:	1009883a 	mov	r4,r2
  804210:	1825883a 	mov	r18,r3
  804214:	102b883a 	mov	r21,r2
  804218:	080e0d00 	call	80e0d0 <__fixdfsi>
  80421c:	1009883a 	mov	r4,r2
  804220:	102f883a 	mov	r23,r2
  804224:	080e1500 	call	80e150 <__floatsidf>
  804228:	a809883a 	mov	r4,r21
  80422c:	900b883a 	mov	r5,r18
  804230:	100d883a 	mov	r6,r2
  804234:	180f883a 	mov	r7,r3
  804238:	080d7480 	call	80d748 <__subdf3>
  80423c:	84000044 	addi	r16,r16,1
  804240:	ba000c04 	addi	r8,r23,48
  804244:	823fffc5 	stb	r8,-1(r16)
  804248:	880d883a 	mov	r6,r17
  80424c:	980f883a 	mov	r7,r19
  804250:	1009883a 	mov	r4,r2
  804254:	180b883a 	mov	r5,r3
  804258:	102b883a 	mov	r21,r2
  80425c:	1825883a 	mov	r18,r3
  804260:	080ceb00 	call	80ceb0 <__ledf2>
  804264:	10040e16 	blt	r2,zero,8052a0 <_dtoa_r+0x164c>
  804268:	a80d883a 	mov	r6,r21
  80426c:	900f883a 	mov	r7,r18
  804270:	0009883a 	mov	r4,zero
  804274:	014ffc34 	movhi	r5,16368
  804278:	080d7480 	call	80d748 <__subdf3>
  80427c:	880d883a 	mov	r6,r17
  804280:	980f883a 	mov	r7,r19
  804284:	1009883a 	mov	r4,r2
  804288:	180b883a 	mov	r5,r3
  80428c:	080ceb00 	call	80ceb0 <__ledf2>
  804290:	103fcf0e 	bge	r2,zero,8041d0 <_dtoa_r+0x57c>
  804294:	dd800d17 	ldw	r22,52(sp)
  804298:	ddc00e17 	ldw	r23,56(sp)
  80429c:	d8801117 	ldw	r2,68(sp)
  8042a0:	10800044 	addi	r2,r2,1
  8042a4:	d8800315 	stw	r2,12(sp)
  8042a8:	00000106 	br	8042b0 <_dtoa_r+0x65c>
  8042ac:	e403ee26 	beq	fp,r16,805268 <_dtoa_r+0x1614>
  8042b0:	80ffffc3 	ldbu	r3,-1(r16)
  8042b4:	8025883a 	mov	r18,r16
  8042b8:	843fffc4 	addi	r16,r16,-1
  8042bc:	18803fcc 	andi	r2,r3,255
  8042c0:	1080201c 	xori	r2,r2,128
  8042c4:	10bfe004 	addi	r2,r2,-128
  8042c8:	10800e60 	cmpeqi	r2,r2,57
  8042cc:	103ff71e 	bne	r2,zero,8042ac <_dtoa_r+0x658>
  8042d0:	18c00044 	addi	r3,r3,1
  8042d4:	80c00005 	stb	r3,0(r16)
  8042d8:	00015106 	br	804820 <_dtoa_r+0xbcc>
  8042dc:	04600034 	movhi	r17,32768
  8042e0:	8c7fffc4 	addi	r17,r17,-1
  8042e4:	9462703a 	and	r17,r18,r17
  8042e8:	00800044 	movi	r2,1
  8042ec:	8825883a 	mov	r18,r17
  8042f0:	80800015 	stw	r2,0(r16)
  8042f4:	00dffc34 	movhi	r3,32752
  8042f8:	909ffc2c 	andhi	r2,r18,32752
  8042fc:	10fe751e 	bne	r2,r3,803cd4 <_dtoa_r+0x80>
  804300:	d8c01f17 	ldw	r3,124(sp)
  804304:	00800434 	movhi	r2,16
  804308:	10bfffc4 	addi	r2,r2,-1
  80430c:	90a4703a 	and	r18,r18,r2
  804310:	0089c3c4 	movi	r2,9999
  804314:	18800015 	stw	r2,0(r3)
  804318:	9528b03a 	or	r20,r18,r20
  80431c:	a000121e 	bne	r20,zero,804368 <_dtoa_r+0x714>
  804320:	d8802117 	ldw	r2,132(sp)
  804324:	07002074 	movhi	fp,129
  804328:	10041526 	beq	r2,zero,805380 <_dtoa_r+0x172c>
  80432c:	00802074 	movhi	r2,129
  804330:	e7039104 	addi	fp,fp,3652
  804334:	10839304 	addi	r2,r2,3660
  804338:	d8c02117 	ldw	r3,132(sp)
  80433c:	18800015 	stw	r2,0(r3)
  804340:	003e7506 	br	803d18 <_dtoa_r+0xc4>
  804344:	01400434 	movhi	r5,16
  804348:	297fffc4 	addi	r5,r5,-1
  80434c:	894a703a 	and	r5,r17,r5
  804350:	df001217 	ldw	fp,72(sp)
  804354:	a009883a 	mov	r4,r20
  804358:	294ffc34 	orhi	r5,r5,16368
  80435c:	843f0044 	addi	r16,r16,-1023
  804360:	d8000915 	stw	zero,36(sp)
  804364:	003e9606 	br	803dc0 <_dtoa_r+0x16c>
  804368:	d8802117 	ldw	r2,132(sp)
  80436c:	07002074 	movhi	fp,129
  804370:	1002141e 	bne	r2,zero,804bc4 <_dtoa_r+0xf70>
  804374:	e7039004 	addi	fp,fp,3648
  804378:	003e6706 	br	803d18 <_dtoa_r+0xc4>
  80437c:	b8001115 	stw	zero,68(r23)
  804380:	000b883a 	mov	r5,zero
  804384:	b809883a 	mov	r4,r23
  804388:	08071940 	call	807194 <_Balloc>
  80438c:	1039883a 	mov	fp,r2
  804390:	1003ed26 	beq	r2,zero,805348 <_dtoa_r+0x16f4>
  804394:	b8801015 	stw	r2,64(r23)
  804398:	00bfffc4 	movi	r2,-1
  80439c:	d8800415 	stw	r2,16(sp)
  8043a0:	d8800b15 	stw	r2,44(sp)
  8043a4:	00800044 	movi	r2,1
  8043a8:	d8001e15 	stw	zero,120(sp)
  8043ac:	d8800615 	stw	r2,24(sp)
  8043b0:	d8801317 	ldw	r2,76(sp)
  8043b4:	10007216 	blt	r2,zero,804580 <_dtoa_r+0x92c>
  8043b8:	d9000317 	ldw	r4,12(sp)
  8043bc:	20c003c8 	cmpgei	r3,r4,15
  8043c0:	18006f1e 	bne	r3,zero,804580 <_dtoa_r+0x92c>
  8043c4:	200690fa 	slli	r3,r4,3
  8043c8:	00802074 	movhi	r2,129
  8043cc:	1083d004 	addi	r2,r2,3904
  8043d0:	10c5883a 	add	r2,r2,r3
  8043d4:	10c00017 	ldw	r3,0(r2)
  8043d8:	14800117 	ldw	r18,4(r2)
  8043dc:	d8801e17 	ldw	r2,120(sp)
  8043e0:	d8c00115 	stw	r3,4(sp)
  8043e4:	1000150e 	bge	r2,zero,80443c <_dtoa_r+0x7e8>
  8043e8:	d8800417 	ldw	r2,16(sp)
  8043ec:	00801316 	blt	zero,r2,80443c <_dtoa_r+0x7e8>
  8043f0:	d8800417 	ldw	r2,16(sp)
  8043f4:	1002801e 	bne	r2,zero,804df8 <_dtoa_r+0x11a4>
  8043f8:	d9000117 	ldw	r4,4(sp)
  8043fc:	000d883a 	mov	r6,zero
  804400:	01d00534 	movhi	r7,16404
  804404:	900b883a 	mov	r5,r18
  804408:	080cfa00 	call	80cfa0 <__muldf3>
  80440c:	100d883a 	mov	r6,r2
  804410:	180f883a 	mov	r7,r3
  804414:	a009883a 	mov	r4,r20
  804418:	880b883a 	mov	r5,r17
  80441c:	080ceb00 	call	80ceb0 <__ledf2>
  804420:	002b883a 	mov	r21,zero
  804424:	0021883a 	mov	r16,zero
  804428:	00820f16 	blt	zero,r2,804c68 <_dtoa_r+0x1014>
  80442c:	d8801e17 	ldw	r2,120(sp)
  804430:	e025883a 	mov	r18,fp
  804434:	00a2303a 	nor	r17,zero,r2
  804438:	00021006 	br	804c7c <_dtoa_r+0x1028>
  80443c:	dd400117 	ldw	r21,4(sp)
  804440:	900f883a 	mov	r7,r18
  804444:	a009883a 	mov	r4,r20
  804448:	a80d883a 	mov	r6,r21
  80444c:	880b883a 	mov	r5,r17
  804450:	080c40c0 	call	80c40c <__divdf3>
  804454:	180b883a 	mov	r5,r3
  804458:	1009883a 	mov	r4,r2
  80445c:	080e0d00 	call	80e0d0 <__fixdfsi>
  804460:	1009883a 	mov	r4,r2
  804464:	1027883a 	mov	r19,r2
  804468:	080e1500 	call	80e150 <__floatsidf>
  80446c:	a80d883a 	mov	r6,r21
  804470:	900f883a 	mov	r7,r18
  804474:	1009883a 	mov	r4,r2
  804478:	180b883a 	mov	r5,r3
  80447c:	080cfa00 	call	80cfa0 <__muldf3>
  804480:	100d883a 	mov	r6,r2
  804484:	a009883a 	mov	r4,r20
  804488:	880b883a 	mov	r5,r17
  80448c:	180f883a 	mov	r7,r3
  804490:	080d7480 	call	80d748 <__subdf3>
  804494:	d9800417 	ldw	r6,16(sp)
  804498:	1009883a 	mov	r4,r2
  80449c:	98800c04 	addi	r2,r19,48
  8044a0:	e0800005 	stb	r2,0(fp)
  8044a4:	30800060 	cmpeqi	r2,r6,1
  8044a8:	180b883a 	mov	r5,r3
  8044ac:	e4000044 	addi	r16,fp,1
  8044b0:	1002a91e 	bne	r2,zero,804f58 <_dtoa_r+0x1304>
  8044b4:	04400044 	movi	r17,1
  8044b8:	3027883a 	mov	r19,r6
  8044bc:	dd800215 	stw	r22,8(sp)
  8044c0:	ddc00415 	stw	r23,16(sp)
  8044c4:	00001c06 	br	804538 <_dtoa_r+0x8e4>
  8044c8:	a80d883a 	mov	r6,r21
  8044cc:	900f883a 	mov	r7,r18
  8044d0:	b809883a 	mov	r4,r23
  8044d4:	a00b883a 	mov	r5,r20
  8044d8:	080c40c0 	call	80c40c <__divdf3>
  8044dc:	180b883a 	mov	r5,r3
  8044e0:	1009883a 	mov	r4,r2
  8044e4:	080e0d00 	call	80e0d0 <__fixdfsi>
  8044e8:	1009883a 	mov	r4,r2
  8044ec:	102d883a 	mov	r22,r2
  8044f0:	080e1500 	call	80e150 <__floatsidf>
  8044f4:	a80d883a 	mov	r6,r21
  8044f8:	900f883a 	mov	r7,r18
  8044fc:	1009883a 	mov	r4,r2
  804500:	180b883a 	mov	r5,r3
  804504:	080cfa00 	call	80cfa0 <__muldf3>
  804508:	b809883a 	mov	r4,r23
  80450c:	a00b883a 	mov	r5,r20
  804510:	100d883a 	mov	r6,r2
  804514:	180f883a 	mov	r7,r3
  804518:	080d7480 	call	80d748 <__subdf3>
  80451c:	b1000c04 	addi	r4,r22,48
  804520:	81000005 	stb	r4,0(r16)
  804524:	8c400044 	addi	r17,r17,1
  804528:	84000044 	addi	r16,r16,1
  80452c:	1009883a 	mov	r4,r2
  804530:	180b883a 	mov	r5,r3
  804534:	9c428526 	beq	r19,r17,804f4c <_dtoa_r+0x12f8>
  804538:	000d883a 	mov	r6,zero
  80453c:	01d00934 	movhi	r7,16420
  804540:	080cfa00 	call	80cfa0 <__muldf3>
  804544:	000d883a 	mov	r6,zero
  804548:	000f883a 	mov	r7,zero
  80454c:	1009883a 	mov	r4,r2
  804550:	180b883a 	mov	r5,r3
  804554:	102f883a 	mov	r23,r2
  804558:	1829883a 	mov	r20,r3
  80455c:	080cd400 	call	80cd40 <__eqdf2>
  804560:	103fd91e 	bne	r2,zero,8044c8 <_dtoa_r+0x874>
  804564:	d8800317 	ldw	r2,12(sp)
  804568:	dd800217 	ldw	r22,8(sp)
  80456c:	ddc00417 	ldw	r23,16(sp)
  804570:	10800044 	addi	r2,r2,1
  804574:	d8800315 	stw	r2,12(sp)
  804578:	8025883a 	mov	r18,r16
  80457c:	0000a806 	br	804820 <_dtoa_r+0xbcc>
  804580:	d8c00617 	ldw	r3,24(sp)
  804584:	1800ec26 	beq	r3,zero,804938 <_dtoa_r+0xce4>
  804588:	d8c00117 	ldw	r3,4(sp)
  80458c:	18c00088 	cmpgei	r3,r3,2
  804590:	1801e926 	beq	r3,zero,804d38 <_dtoa_r+0x10e4>
  804594:	d8800417 	ldw	r2,16(sp)
  804598:	157fffc4 	addi	r21,r2,-1
  80459c:	d8800717 	ldw	r2,28(sp)
  8045a0:	1541c50e 	bge	r2,r21,804cb8 <_dtoa_r+0x1064>
  8045a4:	d8800717 	ldw	r2,28(sp)
  8045a8:	dd400715 	stw	r21,28(sp)
  8045ac:	a885c83a 	sub	r2,r21,r2
  8045b0:	98a7883a 	add	r19,r19,r2
  8045b4:	002b883a 	mov	r21,zero
  8045b8:	d8800417 	ldw	r2,16(sp)
  8045bc:	10029516 	blt	r2,zero,805014 <_dtoa_r+0x13c0>
  8045c0:	d8c00517 	ldw	r3,20(sp)
  8045c4:	d9000217 	ldw	r4,8(sp)
  8045c8:	1825883a 	mov	r18,r3
  8045cc:	2089883a 	add	r4,r4,r2
  8045d0:	10c5883a 	add	r2,r2,r3
  8045d4:	d9000215 	stw	r4,8(sp)
  8045d8:	d8800515 	stw	r2,20(sp)
  8045dc:	01400044 	movi	r5,1
  8045e0:	b809883a 	mov	r4,r23
  8045e4:	08076040 	call	807604 <__i2b>
  8045e8:	1021883a 	mov	r16,r2
  8045ec:	04800b0e 	bge	zero,r18,80461c <_dtoa_r+0x9c8>
  8045f0:	d8c00217 	ldw	r3,8(sp)
  8045f4:	00c0090e 	bge	zero,r3,80461c <_dtoa_r+0x9c8>
  8045f8:	9005883a 	mov	r2,r18
  8045fc:	1c81a616 	blt	r3,r18,804c98 <_dtoa_r+0x1044>
  804600:	d8c00517 	ldw	r3,20(sp)
  804604:	90a5c83a 	sub	r18,r18,r2
  804608:	1887c83a 	sub	r3,r3,r2
  80460c:	d8c00515 	stw	r3,20(sp)
  804610:	d8c00217 	ldw	r3,8(sp)
  804614:	1885c83a 	sub	r2,r3,r2
  804618:	d8800215 	stw	r2,8(sp)
  80461c:	d8800717 	ldw	r2,28(sp)
  804620:	10001526 	beq	r2,zero,804678 <_dtoa_r+0xa24>
  804624:	d8800617 	ldw	r2,24(sp)
  804628:	1001f626 	beq	r2,zero,804e04 <_dtoa_r+0x11b0>
  80462c:	05400f0e 	bge	zero,r21,80466c <_dtoa_r+0xa18>
  804630:	800b883a 	mov	r5,r16
  804634:	a80d883a 	mov	r6,r21
  804638:	b809883a 	mov	r4,r23
  80463c:	08079040 	call	807904 <__pow5mult>
  804640:	b00d883a 	mov	r6,r22
  804644:	100b883a 	mov	r5,r2
  804648:	b809883a 	mov	r4,r23
  80464c:	1021883a 	mov	r16,r2
  804650:	08076580 	call	807658 <__multiply>
  804654:	b00b883a 	mov	r5,r22
  804658:	b809883a 	mov	r4,r23
  80465c:	d8800915 	stw	r2,36(sp)
  804660:	08072380 	call	807238 <_Bfree>
  804664:	d8800917 	ldw	r2,36(sp)
  804668:	102d883a 	mov	r22,r2
  80466c:	d8800717 	ldw	r2,28(sp)
  804670:	154dc83a 	sub	r6,r2,r21
  804674:	1542621e 	bne	r2,r21,805000 <_dtoa_r+0x13ac>
  804678:	01400044 	movi	r5,1
  80467c:	b809883a 	mov	r4,r23
  804680:	08076040 	call	807604 <__i2b>
  804684:	102b883a 	mov	r21,r2
  804688:	04c0be16 	blt	zero,r19,804984 <_dtoa_r+0xd30>
  80468c:	d8800117 	ldw	r2,4(sp)
  804690:	10800088 	cmpgei	r2,r2,2
  804694:	10015226 	beq	r2,zero,804be0 <_dtoa_r+0xf8c>
  804698:	0023883a 	mov	r17,zero
  80469c:	00800044 	movi	r2,1
  8046a0:	9800c11e 	bne	r19,zero,8049a8 <_dtoa_r+0xd54>
  8046a4:	d9400217 	ldw	r5,8(sp)
  8046a8:	1145883a 	add	r2,r2,r5
  8046ac:	108007cc 	andi	r2,r2,31
  8046b0:	1000a526 	beq	r2,zero,804948 <_dtoa_r+0xcf4>
  8046b4:	00c00804 	movi	r3,32
  8046b8:	1887c83a 	sub	r3,r3,r2
  8046bc:	19000150 	cmplti	r4,r3,5
  8046c0:	2003311e 	bne	r4,zero,805388 <_dtoa_r+0x1734>
  8046c4:	00c00704 	movi	r3,28
  8046c8:	1885c83a 	sub	r2,r3,r2
  8046cc:	d8c00517 	ldw	r3,20(sp)
  8046d0:	90a5883a 	add	r18,r18,r2
  8046d4:	1887883a 	add	r3,r3,r2
  8046d8:	2885883a 	add	r2,r5,r2
  8046dc:	d8c00515 	stw	r3,20(sp)
  8046e0:	d8800215 	stw	r2,8(sp)
  8046e4:	d8800517 	ldw	r2,20(sp)
  8046e8:	0080050e 	bge	zero,r2,804700 <_dtoa_r+0xaac>
  8046ec:	b00b883a 	mov	r5,r22
  8046f0:	100d883a 	mov	r6,r2
  8046f4:	b809883a 	mov	r4,r23
  8046f8:	0807a1c0 	call	807a1c <__lshift>
  8046fc:	102d883a 	mov	r22,r2
  804700:	d8800217 	ldw	r2,8(sp)
  804704:	0080050e 	bge	zero,r2,80471c <_dtoa_r+0xac8>
  804708:	a80b883a 	mov	r5,r21
  80470c:	100d883a 	mov	r6,r2
  804710:	b809883a 	mov	r4,r23
  804714:	0807a1c0 	call	807a1c <__lshift>
  804718:	102b883a 	mov	r21,r2
  80471c:	d8800817 	ldw	r2,32(sp)
  804720:	1001161e 	bne	r2,zero,804b7c <_dtoa_r+0xf28>
  804724:	d8800417 	ldw	r2,16(sp)
  804728:	0081040e 	bge	zero,r2,804b3c <_dtoa_r+0xee8>
  80472c:	d8800617 	ldw	r2,24(sp)
  804730:	1000b01e 	bne	r2,zero,8049f4 <_dtoa_r+0xda0>
  804734:	d8800317 	ldw	r2,12(sp)
  804738:	10800044 	addi	r2,r2,1
  80473c:	d8800315 	stw	r2,12(sp)
  804740:	dc800417 	ldw	r18,16(sp)
  804744:	04400044 	movi	r17,1
  804748:	00000706 	br	804768 <_dtoa_r+0xb14>
  80474c:	b00b883a 	mov	r5,r22
  804750:	000f883a 	mov	r7,zero
  804754:	01800284 	movi	r6,10
  804758:	b809883a 	mov	r4,r23
  80475c:	080725c0 	call	80725c <__multadd>
  804760:	102d883a 	mov	r22,r2
  804764:	8c400044 	addi	r17,r17,1
  804768:	a80b883a 	mov	r5,r21
  80476c:	b009883a 	mov	r4,r22
  804770:	0803a340 	call	803a34 <quorem>
  804774:	10c00c04 	addi	r3,r2,48
  804778:	e445883a 	add	r2,fp,r17
  80477c:	10ffffc5 	stb	r3,-1(r2)
  804780:	8cbff216 	blt	r17,r18,80474c <_dtoa_r+0xaf8>
  804784:	d8800417 	ldw	r2,16(sp)
  804788:	0081510e 	bge	zero,r2,804cd0 <_dtoa_r+0x107c>
  80478c:	e0a5883a 	add	r18,fp,r2
  804790:	0023883a 	mov	r17,zero
  804794:	b00b883a 	mov	r5,r22
  804798:	01800044 	movi	r6,1
  80479c:	b809883a 	mov	r4,r23
  8047a0:	d8c00115 	stw	r3,4(sp)
  8047a4:	0807a1c0 	call	807a1c <__lshift>
  8047a8:	1009883a 	mov	r4,r2
  8047ac:	a80b883a 	mov	r5,r21
  8047b0:	102d883a 	mov	r22,r2
  8047b4:	0807ba40 	call	807ba4 <__mcmp>
  8047b8:	913fffc3 	ldbu	r4,-1(r18)
  8047bc:	00800416 	blt	zero,r2,8047d0 <_dtoa_r+0xb7c>
  8047c0:	00014806 	br	804ce4 <_dtoa_r+0x1090>
  8047c4:	e0c15626 	beq	fp,r3,804d20 <_dtoa_r+0x10cc>
  8047c8:	193fffc3 	ldbu	r4,-1(r3)
  8047cc:	1825883a 	mov	r18,r3
  8047d0:	20803fcc 	andi	r2,r4,255
  8047d4:	1080201c 	xori	r2,r2,128
  8047d8:	10bfe004 	addi	r2,r2,-128
  8047dc:	10800e60 	cmpeqi	r2,r2,57
  8047e0:	90ffffc4 	addi	r3,r18,-1
  8047e4:	103ff71e 	bne	r2,zero,8047c4 <_dtoa_r+0xb70>
  8047e8:	21000044 	addi	r4,r4,1
  8047ec:	19000005 	stb	r4,0(r3)
  8047f0:	a80b883a 	mov	r5,r21
  8047f4:	b809883a 	mov	r4,r23
  8047f8:	08072380 	call	807238 <_Bfree>
  8047fc:	80000826 	beq	r16,zero,804820 <_dtoa_r+0xbcc>
  804800:	88000426 	beq	r17,zero,804814 <_dtoa_r+0xbc0>
  804804:	8c000326 	beq	r17,r16,804814 <_dtoa_r+0xbc0>
  804808:	880b883a 	mov	r5,r17
  80480c:	b809883a 	mov	r4,r23
  804810:	08072380 	call	807238 <_Bfree>
  804814:	800b883a 	mov	r5,r16
  804818:	b809883a 	mov	r4,r23
  80481c:	08072380 	call	807238 <_Bfree>
  804820:	b00b883a 	mov	r5,r22
  804824:	b809883a 	mov	r4,r23
  804828:	08072380 	call	807238 <_Bfree>
  80482c:	d8801f17 	ldw	r2,124(sp)
  804830:	d8c00317 	ldw	r3,12(sp)
  804834:	90000005 	stb	zero,0(r18)
  804838:	10c00015 	stw	r3,0(r2)
  80483c:	d8802117 	ldw	r2,132(sp)
  804840:	103d3526 	beq	r2,zero,803d18 <_dtoa_r+0xc4>
  804844:	14800015 	stw	r18,0(r2)
  804848:	003d3306 	br	803d18 <_dtoa_r+0xc4>
  80484c:	e0bfffc4 	addi	r2,fp,-1
  804850:	d8000815 	stw	zero,32(sp)
  804854:	10002616 	blt	r2,zero,8048f0 <_dtoa_r+0xc9c>
  804858:	d8000515 	stw	zero,20(sp)
  80485c:	d8800217 	ldw	r2,8(sp)
  804860:	d8c00117 	ldw	r3,4(sp)
  804864:	dcc00315 	stw	r19,12(sp)
  804868:	14c5883a 	add	r2,r2,r19
  80486c:	d8800215 	stw	r2,8(sp)
  804870:	d8000715 	stw	zero,28(sp)
  804874:	188002a8 	cmpgeui	r2,r3,10
  804878:	103d9d26 	beq	r2,zero,803ef0 <_dtoa_r+0x29c>
  80487c:	00800044 	movi	r2,1
  804880:	d8800615 	stw	r2,24(sp)
  804884:	00bfffc4 	movi	r2,-1
  804888:	04000044 	movi	r16,1
  80488c:	d8000115 	stw	zero,4(sp)
  804890:	d8800415 	stw	r2,16(sp)
  804894:	d8001e15 	stw	zero,120(sp)
  804898:	d8800417 	ldw	r2,16(sp)
  80489c:	b8001115 	stw	zero,68(r23)
  8048a0:	000b883a 	mov	r5,zero
  8048a4:	d8800b15 	stw	r2,44(sp)
  8048a8:	003dae06 	br	803f64 <_dtoa_r+0x310>
  8048ac:	188000e0 	cmpeqi	r2,r3,3
  8048b0:	d8000615 	stw	zero,24(sp)
  8048b4:	103eb126 	beq	r2,zero,80437c <_dtoa_r+0x728>
  8048b8:	d8801e17 	ldw	r2,120(sp)
  8048bc:	d8c00317 	ldw	r3,12(sp)
  8048c0:	10c5883a 	add	r2,r2,r3
  8048c4:	d8800b15 	stw	r2,44(sp)
  8048c8:	10800044 	addi	r2,r2,1
  8048cc:	d8800415 	stw	r2,16(sp)
  8048d0:	100d883a 	mov	r6,r2
  8048d4:	00bd9816 	blt	zero,r2,803f38 <_dtoa_r+0x2e4>
  8048d8:	01800044 	movi	r6,1
  8048dc:	003d9606 	br	803f38 <_dtoa_r+0x2e4>
  8048e0:	00800044 	movi	r2,1
  8048e4:	d8800815 	stw	r2,32(sp)
  8048e8:	e0bfffc4 	addi	r2,fp,-1
  8048ec:	103d740e 	bge	r2,zero,803ec0 <_dtoa_r+0x26c>
  8048f0:	00800044 	movi	r2,1
  8048f4:	1705c83a 	sub	r2,r2,fp
  8048f8:	d8800515 	stw	r2,20(sp)
  8048fc:	d8000215 	stw	zero,8(sp)
  804900:	003d7006 	br	803ec4 <_dtoa_r+0x270>
  804904:	9809883a 	mov	r4,r19
  804908:	080e1500 	call	80e150 <__floatsidf>
  80490c:	900d883a 	mov	r6,r18
  804910:	a80f883a 	mov	r7,r21
  804914:	1009883a 	mov	r4,r2
  804918:	180b883a 	mov	r5,r3
  80491c:	080cd400 	call	80cd40 <__eqdf2>
  804920:	103d5426 	beq	r2,zero,803e74 <_dtoa_r+0x220>
  804924:	9cffffc4 	addi	r19,r19,-1
  804928:	003d5206 	br	803e74 <_dtoa_r+0x220>
  80492c:	07002074 	movhi	fp,129
  804930:	e7038704 	addi	fp,fp,3612
  804934:	003cf806 	br	803d18 <_dtoa_r+0xc4>
  804938:	dd400717 	ldw	r21,28(sp)
  80493c:	dc800517 	ldw	r18,20(sp)
  804940:	0021883a 	mov	r16,zero
  804944:	003f2906 	br	8045ec <_dtoa_r+0x998>
  804948:	00800704 	movi	r2,28
  80494c:	d8c00517 	ldw	r3,20(sp)
  804950:	90a5883a 	add	r18,r18,r2
  804954:	1887883a 	add	r3,r3,r2
  804958:	d8c00515 	stw	r3,20(sp)
  80495c:	d8c00217 	ldw	r3,8(sp)
  804960:	1885883a 	add	r2,r3,r2
  804964:	d8800215 	stw	r2,8(sp)
  804968:	003f5e06 	br	8046e4 <_dtoa_r+0xa90>
  80496c:	01000804 	movi	r4,32
  804970:	2089c83a 	sub	r4,r4,r2
  804974:	a108983a 	sll	r4,r20,r4
  804978:	003d0a06 	br	803da4 <_dtoa_r+0x150>
  80497c:	04000044 	movi	r16,1
  804980:	003d6006 	br	803f04 <_dtoa_r+0x2b0>
  804984:	100b883a 	mov	r5,r2
  804988:	980d883a 	mov	r6,r19
  80498c:	b809883a 	mov	r4,r23
  804990:	08079040 	call	807904 <__pow5mult>
  804994:	d8c00117 	ldw	r3,4(sp)
  804998:	102b883a 	mov	r21,r2
  80499c:	18c00090 	cmplti	r3,r3,2
  8049a0:	18014b1e 	bne	r3,zero,804ed0 <_dtoa_r+0x127c>
  8049a4:	0023883a 	mov	r17,zero
  8049a8:	a8800417 	ldw	r2,16(r21)
  8049ac:	10800104 	addi	r2,r2,4
  8049b0:	100490ba 	slli	r2,r2,2
  8049b4:	a885883a 	add	r2,r21,r2
  8049b8:	11000017 	ldw	r4,0(r2)
  8049bc:	08074f00 	call	8074f0 <__hi0bits>
  8049c0:	00c00804 	movi	r3,32
  8049c4:	1885c83a 	sub	r2,r3,r2
  8049c8:	003f3606 	br	8046a4 <_dtoa_r+0xa50>
  8049cc:	800b883a 	mov	r5,r16
  8049d0:	000f883a 	mov	r7,zero
  8049d4:	01800284 	movi	r6,10
  8049d8:	b809883a 	mov	r4,r23
  8049dc:	080725c0 	call	80725c <__multadd>
  8049e0:	1021883a 	mov	r16,r2
  8049e4:	d8800b17 	ldw	r2,44(sp)
  8049e8:	00824d0e 	bge	zero,r2,805320 <_dtoa_r+0x16cc>
  8049ec:	dcc00315 	stw	r19,12(sp)
  8049f0:	d8800415 	stw	r2,16(sp)
  8049f4:	0480aa16 	blt	zero,r18,804ca0 <_dtoa_r+0x104c>
  8049f8:	8801701e 	bne	r17,zero,804fbc <_dtoa_r+0x1368>
  8049fc:	8027883a 	mov	r19,r16
  804a00:	d9000417 	ldw	r4,16(sp)
  804a04:	e0bfffc4 	addi	r2,fp,-1
  804a08:	a0c0004c 	andi	r3,r20,1
  804a0c:	1105883a 	add	r2,r2,r4
  804a10:	d8800415 	stw	r2,16(sp)
  804a14:	d8800117 	ldw	r2,4(sp)
  804a18:	d8c00715 	stw	r3,28(sp)
  804a1c:	e029883a 	mov	r20,fp
  804a20:	1884b03a 	or	r2,r3,r2
  804a24:	d8800615 	stw	r2,24(sp)
  804a28:	df000815 	stw	fp,32(sp)
  804a2c:	00002906 	br	804ad4 <_dtoa_r+0xe80>
  804a30:	b009883a 	mov	r4,r22
  804a34:	0807ba40 	call	807ba4 <__mcmp>
  804a38:	900b883a 	mov	r5,r18
  804a3c:	b809883a 	mov	r4,r23
  804a40:	d8800215 	stw	r2,8(sp)
  804a44:	08072380 	call	807238 <_Bfree>
  804a48:	d8800217 	ldw	r2,8(sp)
  804a4c:	1000021e 	bne	r2,zero,804a58 <_dtoa_r+0xe04>
  804a50:	d8c00617 	ldw	r3,24(sp)
  804a54:	18022326 	beq	r3,zero,8052e4 <_dtoa_r+0x1690>
  804a58:	a4800044 	addi	r18,r20,1
  804a5c:	88012216 	blt	r17,zero,804ee8 <_dtoa_r+0x1294>
  804a60:	d8c00117 	ldw	r3,4(sp)
  804a64:	1c62b03a 	or	r17,r3,r17
  804a68:	d8c00717 	ldw	r3,28(sp)
  804a6c:	1c62b03a 	or	r17,r3,r17
  804a70:	88011d26 	beq	r17,zero,804ee8 <_dtoa_r+0x1294>
  804a74:	00816b16 	blt	zero,r2,805024 <_dtoa_r+0x13d0>
  804a78:	d8800417 	ldw	r2,16(sp)
  804a7c:	a7000005 	stb	fp,0(r20)
  804a80:	15017126 	beq	r2,r20,805048 <_dtoa_r+0x13f4>
  804a84:	b00b883a 	mov	r5,r22
  804a88:	000f883a 	mov	r7,zero
  804a8c:	01800284 	movi	r6,10
  804a90:	b809883a 	mov	r4,r23
  804a94:	080725c0 	call	80725c <__multadd>
  804a98:	102d883a 	mov	r22,r2
  804a9c:	800b883a 	mov	r5,r16
  804aa0:	000f883a 	mov	r7,zero
  804aa4:	01800284 	movi	r6,10
  804aa8:	b809883a 	mov	r4,r23
  804aac:	84c01f26 	beq	r16,r19,804b2c <_dtoa_r+0xed8>
  804ab0:	080725c0 	call	80725c <__multadd>
  804ab4:	980b883a 	mov	r5,r19
  804ab8:	000f883a 	mov	r7,zero
  804abc:	01800284 	movi	r6,10
  804ac0:	b809883a 	mov	r4,r23
  804ac4:	1021883a 	mov	r16,r2
  804ac8:	080725c0 	call	80725c <__multadd>
  804acc:	1027883a 	mov	r19,r2
  804ad0:	9029883a 	mov	r20,r18
  804ad4:	a80b883a 	mov	r5,r21
  804ad8:	b009883a 	mov	r4,r22
  804adc:	0803a340 	call	803a34 <quorem>
  804ae0:	800b883a 	mov	r5,r16
  804ae4:	b009883a 	mov	r4,r22
  804ae8:	1039883a 	mov	fp,r2
  804aec:	d8800515 	stw	r2,20(sp)
  804af0:	0807ba40 	call	807ba4 <__mcmp>
  804af4:	a80b883a 	mov	r5,r21
  804af8:	980d883a 	mov	r6,r19
  804afc:	b809883a 	mov	r4,r23
  804b00:	1023883a 	mov	r17,r2
  804b04:	0807bfc0 	call	807bfc <__mdiff>
  804b08:	1025883a 	mov	r18,r2
  804b0c:	10800317 	ldw	r2,12(r2)
  804b10:	e7000c04 	addi	fp,fp,48
  804b14:	900b883a 	mov	r5,r18
  804b18:	103fc526 	beq	r2,zero,804a30 <_dtoa_r+0xddc>
  804b1c:	b809883a 	mov	r4,r23
  804b20:	08072380 	call	807238 <_Bfree>
  804b24:	00800044 	movi	r2,1
  804b28:	003fcb06 	br	804a58 <_dtoa_r+0xe04>
  804b2c:	080725c0 	call	80725c <__multadd>
  804b30:	1021883a 	mov	r16,r2
  804b34:	1027883a 	mov	r19,r2
  804b38:	003fe506 	br	804ad0 <_dtoa_r+0xe7c>
  804b3c:	d8800117 	ldw	r2,4(sp)
  804b40:	108000d0 	cmplti	r2,r2,3
  804b44:	10003c26 	beq	r2,zero,804c38 <_dtoa_r+0xfe4>
  804b48:	d8800617 	ldw	r2,24(sp)
  804b4c:	103fa91e 	bne	r2,zero,8049f4 <_dtoa_r+0xda0>
  804b50:	a80b883a 	mov	r5,r21
  804b54:	b009883a 	mov	r4,r22
  804b58:	0803a340 	call	803a34 <quorem>
  804b5c:	10c00c04 	addi	r3,r2,48
  804b60:	d8800317 	ldw	r2,12(sp)
  804b64:	e4800044 	addi	r18,fp,1
  804b68:	e0c00005 	stb	r3,0(fp)
  804b6c:	10800044 	addi	r2,r2,1
  804b70:	d8800315 	stw	r2,12(sp)
  804b74:	0023883a 	mov	r17,zero
  804b78:	003f0606 	br	804794 <_dtoa_r+0xb40>
  804b7c:	a80b883a 	mov	r5,r21
  804b80:	b009883a 	mov	r4,r22
  804b84:	0807ba40 	call	807ba4 <__mcmp>
  804b88:	103ee60e 	bge	r2,zero,804724 <_dtoa_r+0xad0>
  804b8c:	b00b883a 	mov	r5,r22
  804b90:	000f883a 	mov	r7,zero
  804b94:	01800284 	movi	r6,10
  804b98:	b809883a 	mov	r4,r23
  804b9c:	080725c0 	call	80725c <__multadd>
  804ba0:	d8c00317 	ldw	r3,12(sp)
  804ba4:	102d883a 	mov	r22,r2
  804ba8:	d8800617 	ldw	r2,24(sp)
  804bac:	1cffffc4 	addi	r19,r3,-1
  804bb0:	103f861e 	bne	r2,zero,8049cc <_dtoa_r+0xd78>
  804bb4:	d8800b17 	ldw	r2,44(sp)
  804bb8:	0081d40e 	bge	zero,r2,80530c <_dtoa_r+0x16b8>
  804bbc:	d8800415 	stw	r2,16(sp)
  804bc0:	003edf06 	br	804740 <_dtoa_r+0xaec>
  804bc4:	00802074 	movhi	r2,129
  804bc8:	e7039004 	addi	fp,fp,3648
  804bcc:	108390c4 	addi	r2,r2,3651
  804bd0:	003dd906 	br	804338 <_dtoa_r+0x6e4>
  804bd4:	00800044 	movi	r2,1
  804bd8:	d8800615 	stw	r2,24(sp)
  804bdc:	003f3606 	br	8048b8 <_dtoa_r+0xc64>
  804be0:	a03ead1e 	bne	r20,zero,804698 <_dtoa_r+0xa44>
  804be4:	00800434 	movhi	r2,16
  804be8:	10bfffc4 	addi	r2,r2,-1
  804bec:	8884703a 	and	r2,r17,r2
  804bf0:	103ea91e 	bne	r2,zero,804698 <_dtoa_r+0xa44>
  804bf4:	8c5ffc2c 	andhi	r17,r17,32752
  804bf8:	883ea726 	beq	r17,zero,804698 <_dtoa_r+0xa44>
  804bfc:	d8800517 	ldw	r2,20(sp)
  804c00:	04400044 	movi	r17,1
  804c04:	10800044 	addi	r2,r2,1
  804c08:	d8800515 	stw	r2,20(sp)
  804c0c:	d8800217 	ldw	r2,8(sp)
  804c10:	10800044 	addi	r2,r2,1
  804c14:	d8800215 	stw	r2,8(sp)
  804c18:	003ea006 	br	80469c <_dtoa_r+0xa48>
  804c1c:	00800044 	movi	r2,1
  804c20:	d8800415 	stw	r2,16(sp)
  804c24:	d8801e15 	stw	r2,120(sp)
  804c28:	003f1b06 	br	804898 <_dtoa_r+0xc44>
  804c2c:	d8800b17 	ldw	r2,44(sp)
  804c30:	dcc00315 	stw	r19,12(sp)
  804c34:	d8800415 	stw	r2,16(sp)
  804c38:	d8800417 	ldw	r2,16(sp)
  804c3c:	103dfb1e 	bne	r2,zero,80442c <_dtoa_r+0x7d8>
  804c40:	a80b883a 	mov	r5,r21
  804c44:	b809883a 	mov	r4,r23
  804c48:	000f883a 	mov	r7,zero
  804c4c:	01800144 	movi	r6,5
  804c50:	080725c0 	call	80725c <__multadd>
  804c54:	100b883a 	mov	r5,r2
  804c58:	b009883a 	mov	r4,r22
  804c5c:	102b883a 	mov	r21,r2
  804c60:	0807ba40 	call	807ba4 <__mcmp>
  804c64:	00bdf10e 	bge	zero,r2,80442c <_dtoa_r+0x7d8>
  804c68:	00800c44 	movi	r2,49
  804c6c:	e0800005 	stb	r2,0(fp)
  804c70:	d8800317 	ldw	r2,12(sp)
  804c74:	e4800044 	addi	r18,fp,1
  804c78:	14400044 	addi	r17,r2,1
  804c7c:	a80b883a 	mov	r5,r21
  804c80:	b809883a 	mov	r4,r23
  804c84:	08072380 	call	807238 <_Bfree>
  804c88:	88800044 	addi	r2,r17,1
  804c8c:	d8800315 	stw	r2,12(sp)
  804c90:	803ee01e 	bne	r16,zero,804814 <_dtoa_r+0xbc0>
  804c94:	003ee206 	br	804820 <_dtoa_r+0xbcc>
  804c98:	1805883a 	mov	r2,r3
  804c9c:	003e5806 	br	804600 <_dtoa_r+0x9ac>
  804ca0:	800b883a 	mov	r5,r16
  804ca4:	900d883a 	mov	r6,r18
  804ca8:	b809883a 	mov	r4,r23
  804cac:	0807a1c0 	call	807a1c <__lshift>
  804cb0:	1021883a 	mov	r16,r2
  804cb4:	003f5006 	br	8049f8 <_dtoa_r+0xda4>
  804cb8:	156bc83a 	sub	r21,r2,r21
  804cbc:	003e3e06 	br	8045b8 <_dtoa_r+0x964>
  804cc0:	dd000a15 	stw	r20,40(sp)
  804cc4:	dc400c15 	stw	r17,48(sp)
  804cc8:	04000084 	movi	r16,2
  804ccc:	003cc906 	br	803ff4 <_dtoa_r+0x3a0>
  804cd0:	00800044 	movi	r2,1
  804cd4:	003ead06 	br	80478c <_dtoa_r+0xb38>
  804cd8:	00800044 	movi	r2,1
  804cdc:	d8800615 	stw	r2,24(sp)
  804ce0:	003c9006 	br	803f24 <_dtoa_r+0x2d0>
  804ce4:	1000031e 	bne	r2,zero,804cf4 <_dtoa_r+0x10a0>
  804ce8:	d8c00117 	ldw	r3,4(sp)
  804cec:	18c0004c 	andi	r3,r3,1
  804cf0:	183eb71e 	bne	r3,zero,8047d0 <_dtoa_r+0xb7c>
  804cf4:	2005883a 	mov	r2,r4
  804cf8:	00000206 	br	804d04 <_dtoa_r+0x10b0>
  804cfc:	90bfff83 	ldbu	r2,-2(r18)
  804d00:	1825883a 	mov	r18,r3
  804d04:	10803fcc 	andi	r2,r2,255
  804d08:	1080201c 	xori	r2,r2,128
  804d0c:	10bfe004 	addi	r2,r2,-128
  804d10:	10800c18 	cmpnei	r2,r2,48
  804d14:	90ffffc4 	addi	r3,r18,-1
  804d18:	103ff826 	beq	r2,zero,804cfc <_dtoa_r+0x10a8>
  804d1c:	003eb406 	br	8047f0 <_dtoa_r+0xb9c>
  804d20:	00800c44 	movi	r2,49
  804d24:	e0800005 	stb	r2,0(fp)
  804d28:	d8800317 	ldw	r2,12(sp)
  804d2c:	10800044 	addi	r2,r2,1
  804d30:	d8800315 	stw	r2,12(sp)
  804d34:	003eae06 	br	8047f0 <_dtoa_r+0xb9c>
  804d38:	d8c00917 	ldw	r3,36(sp)
  804d3c:	18011826 	beq	r3,zero,8051a0 <_dtoa_r+0x154c>
  804d40:	d8c00517 	ldw	r3,20(sp)
  804d44:	d9000217 	ldw	r4,8(sp)
  804d48:	10810cc4 	addi	r2,r2,1075
  804d4c:	dd400717 	ldw	r21,28(sp)
  804d50:	2089883a 	add	r4,r4,r2
  804d54:	1885883a 	add	r2,r3,r2
  804d58:	1825883a 	mov	r18,r3
  804d5c:	d9000215 	stw	r4,8(sp)
  804d60:	d8800515 	stw	r2,20(sp)
  804d64:	003e1d06 	br	8045dc <_dtoa_r+0x988>
  804d68:	8009883a 	mov	r4,r16
  804d6c:	080e1500 	call	80e150 <__floatsidf>
  804d70:	d9c00a17 	ldw	r7,40(sp)
  804d74:	900d883a 	mov	r6,r18
  804d78:	1009883a 	mov	r4,r2
  804d7c:	180b883a 	mov	r5,r3
  804d80:	080cfa00 	call	80cfa0 <__muldf3>
  804d84:	000d883a 	mov	r6,zero
  804d88:	01d00734 	movhi	r7,16412
  804d8c:	1009883a 	mov	r4,r2
  804d90:	180b883a 	mov	r5,r3
  804d94:	080ba940 	call	80ba94 <__adddf3>
  804d98:	d8800c15 	stw	r2,48(sp)
  804d9c:	00bf3034 	movhi	r2,64704
  804da0:	1885883a 	add	r2,r3,r2
  804da4:	d8800d15 	stw	r2,52(sp)
  804da8:	d9400a17 	ldw	r5,40(sp)
  804dac:	9009883a 	mov	r4,r18
  804db0:	000d883a 	mov	r6,zero
  804db4:	01d00534 	movhi	r7,16404
  804db8:	080d7480 	call	80d748 <__subdf3>
  804dbc:	dd400d17 	ldw	r21,52(sp)
  804dc0:	d9800c17 	ldw	r6,48(sp)
  804dc4:	1009883a 	mov	r4,r2
  804dc8:	a80f883a 	mov	r7,r21
  804dcc:	180b883a 	mov	r5,r3
  804dd0:	1025883a 	mov	r18,r2
  804dd4:	1821883a 	mov	r16,r3
  804dd8:	080cdc00 	call	80cdc0 <__gedf2>
  804ddc:	00812d16 	blt	zero,r2,805294 <_dtoa_r+0x1640>
  804de0:	d9800c17 	ldw	r6,48(sp)
  804de4:	a9e0003c 	xorhi	r7,r21,32768
  804de8:	9009883a 	mov	r4,r18
  804dec:	800b883a 	mov	r5,r16
  804df0:	080ceb00 	call	80ceb0 <__ledf2>
  804df4:	103d6e0e 	bge	r2,zero,8043b0 <_dtoa_r+0x75c>
  804df8:	002b883a 	mov	r21,zero
  804dfc:	0021883a 	mov	r16,zero
  804e00:	003d8a06 	br	80442c <_dtoa_r+0x7d8>
  804e04:	d9800717 	ldw	r6,28(sp)
  804e08:	b00b883a 	mov	r5,r22
  804e0c:	b809883a 	mov	r4,r23
  804e10:	08079040 	call	807904 <__pow5mult>
  804e14:	102d883a 	mov	r22,r2
  804e18:	003e1706 	br	804678 <_dtoa_r+0xa24>
  804e1c:	d8800317 	ldw	r2,12(sp)
  804e20:	10010d26 	beq	r2,zero,805258 <_dtoa_r+0x1604>
  804e24:	00abc83a 	sub	r21,zero,r2
  804e28:	a88003cc 	andi	r2,r21,15
  804e2c:	100690fa 	slli	r3,r2,3
  804e30:	00802074 	movhi	r2,129
  804e34:	1083d004 	addi	r2,r2,3904
  804e38:	10c5883a 	add	r2,r2,r3
  804e3c:	11800017 	ldw	r6,0(r2)
  804e40:	11c00117 	ldw	r7,4(r2)
  804e44:	a009883a 	mov	r4,r20
  804e48:	880b883a 	mov	r5,r17
  804e4c:	a82bd13a 	srai	r21,r21,4
  804e50:	080cfa00 	call	80cfa0 <__muldf3>
  804e54:	d8c00a15 	stw	r3,40(sp)
  804e58:	1025883a 	mov	r18,r2
  804e5c:	a8013826 	beq	r21,zero,805340 <_dtoa_r+0x16ec>
  804e60:	02002074 	movhi	r8,129
  804e64:	04000084 	movi	r16,2
  804e68:	4203c604 	addi	r8,r8,3864
  804e6c:	180b883a 	mov	r5,r3
  804e70:	dc400c15 	stw	r17,48(sp)
  804e74:	1009883a 	mov	r4,r2
  804e78:	8023883a 	mov	r17,r16
  804e7c:	0007883a 	mov	r3,zero
  804e80:	4021883a 	mov	r16,r8
  804e84:	a980004c 	andi	r6,r21,1
  804e88:	30000726 	beq	r6,zero,804ea8 <_dtoa_r+0x1254>
  804e8c:	81800017 	ldw	r6,0(r16)
  804e90:	81c00117 	ldw	r7,4(r16)
  804e94:	8c400044 	addi	r17,r17,1
  804e98:	080cfa00 	call	80cfa0 <__muldf3>
  804e9c:	180b883a 	mov	r5,r3
  804ea0:	1009883a 	mov	r4,r2
  804ea4:	00c00044 	movi	r3,1
  804ea8:	a82bd07a 	srai	r21,r21,1
  804eac:	84000204 	addi	r16,r16,8
  804eb0:	a83ff41e 	bne	r21,zero,804e84 <_dtoa_r+0x1230>
  804eb4:	18c03fcc 	andi	r3,r3,255
  804eb8:	8821883a 	mov	r16,r17
  804ebc:	dc400c17 	ldw	r17,48(sp)
  804ec0:	183c6526 	beq	r3,zero,804058 <_dtoa_r+0x404>
  804ec4:	2025883a 	mov	r18,r4
  804ec8:	d9400a15 	stw	r5,40(sp)
  804ecc:	003c6206 	br	804058 <_dtoa_r+0x404>
  804ed0:	a03eb41e 	bne	r20,zero,8049a4 <_dtoa_r+0xd50>
  804ed4:	00800434 	movhi	r2,16
  804ed8:	10bfffc4 	addi	r2,r2,-1
  804edc:	8884703a 	and	r2,r17,r2
  804ee0:	103f4426 	beq	r2,zero,804bf4 <_dtoa_r+0xfa0>
  804ee4:	003eaf06 	br	8049a4 <_dtoa_r+0xd50>
  804ee8:	d9000317 	ldw	r4,12(sp)
  804eec:	e007883a 	mov	r3,fp
  804ef0:	df000817 	ldw	fp,32(sp)
  804ef4:	21000044 	addi	r4,r4,1
  804ef8:	d9000315 	stw	r4,12(sp)
  804efc:	00800f0e 	bge	zero,r2,804f3c <_dtoa_r+0x12e8>
  804f00:	b00b883a 	mov	r5,r22
  804f04:	01800044 	movi	r6,1
  804f08:	b809883a 	mov	r4,r23
  804f0c:	d8c00115 	stw	r3,4(sp)
  804f10:	0807a1c0 	call	807a1c <__lshift>
  804f14:	a80b883a 	mov	r5,r21
  804f18:	1009883a 	mov	r4,r2
  804f1c:	102d883a 	mov	r22,r2
  804f20:	0807ba40 	call	807ba4 <__mcmp>
  804f24:	d8c00117 	ldw	r3,4(sp)
  804f28:	0080e40e 	bge	zero,r2,8052bc <_dtoa_r+0x1668>
  804f2c:	18c00e60 	cmpeqi	r3,r3,57
  804f30:	1800d21e 	bne	r3,zero,80527c <_dtoa_r+0x1628>
  804f34:	d8800517 	ldw	r2,20(sp)
  804f38:	10c00c44 	addi	r3,r2,49
  804f3c:	8023883a 	mov	r17,r16
  804f40:	a0c00005 	stb	r3,0(r20)
  804f44:	9821883a 	mov	r16,r19
  804f48:	003e2906 	br	8047f0 <_dtoa_r+0xb9c>
  804f4c:	b027883a 	mov	r19,r22
  804f50:	ddc00417 	ldw	r23,16(sp)
  804f54:	dd800217 	ldw	r22,8(sp)
  804f58:	200d883a 	mov	r6,r4
  804f5c:	280f883a 	mov	r7,r5
  804f60:	080ba940 	call	80ba94 <__adddf3>
  804f64:	dd400117 	ldw	r21,4(sp)
  804f68:	180b883a 	mov	r5,r3
  804f6c:	900f883a 	mov	r7,r18
  804f70:	a80d883a 	mov	r6,r21
  804f74:	1009883a 	mov	r4,r2
  804f78:	1823883a 	mov	r17,r3
  804f7c:	1029883a 	mov	r20,r2
  804f80:	080cdc00 	call	80cdc0 <__gedf2>
  804f84:	d8c00317 	ldw	r3,12(sp)
  804f88:	18c00044 	addi	r3,r3,1
  804f8c:	d8c00315 	stw	r3,12(sp)
  804f90:	00bcc716 	blt	zero,r2,8042b0 <_dtoa_r+0x65c>
  804f94:	a80d883a 	mov	r6,r21
  804f98:	900f883a 	mov	r7,r18
  804f9c:	a009883a 	mov	r4,r20
  804fa0:	880b883a 	mov	r5,r17
  804fa4:	080cd400 	call	80cd40 <__eqdf2>
  804fa8:	1000021e 	bne	r2,zero,804fb4 <_dtoa_r+0x1360>
  804fac:	9cc0004c 	andi	r19,r19,1
  804fb0:	983cbf1e 	bne	r19,zero,8042b0 <_dtoa_r+0x65c>
  804fb4:	8025883a 	mov	r18,r16
  804fb8:	003e1906 	br	804820 <_dtoa_r+0xbcc>
  804fbc:	81400117 	ldw	r5,4(r16)
  804fc0:	b809883a 	mov	r4,r23
  804fc4:	08071940 	call	807194 <_Balloc>
  804fc8:	1023883a 	mov	r17,r2
  804fcc:	1000e526 	beq	r2,zero,805364 <_dtoa_r+0x1710>
  804fd0:	81800417 	ldw	r6,16(r16)
  804fd4:	81400304 	addi	r5,r16,12
  804fd8:	11000304 	addi	r4,r2,12
  804fdc:	31800084 	addi	r6,r6,2
  804fe0:	300c90ba 	slli	r6,r6,2
  804fe4:	0806e780 	call	806e78 <memcpy>
  804fe8:	01800044 	movi	r6,1
  804fec:	880b883a 	mov	r5,r17
  804ff0:	b809883a 	mov	r4,r23
  804ff4:	0807a1c0 	call	807a1c <__lshift>
  804ff8:	1027883a 	mov	r19,r2
  804ffc:	003e8006 	br	804a00 <_dtoa_r+0xdac>
  805000:	b00b883a 	mov	r5,r22
  805004:	b809883a 	mov	r4,r23
  805008:	08079040 	call	807904 <__pow5mult>
  80500c:	102d883a 	mov	r22,r2
  805010:	003d9906 	br	804678 <_dtoa_r+0xa24>
  805014:	d8800517 	ldw	r2,20(sp)
  805018:	d8c00417 	ldw	r3,16(sp)
  80501c:	10e5c83a 	sub	r18,r2,r3
  805020:	003d6e06 	br	8045dc <_dtoa_r+0x988>
  805024:	d9000317 	ldw	r4,12(sp)
  805028:	e007883a 	mov	r3,fp
  80502c:	18800e58 	cmpnei	r2,r3,57
  805030:	21000044 	addi	r4,r4,1
  805034:	d9000315 	stw	r4,12(sp)
  805038:	df000817 	ldw	fp,32(sp)
  80503c:	10008f26 	beq	r2,zero,80527c <_dtoa_r+0x1628>
  805040:	18c00044 	addi	r3,r3,1
  805044:	003fbd06 	br	804f3c <_dtoa_r+0x12e8>
  805048:	d8800317 	ldw	r2,12(sp)
  80504c:	e007883a 	mov	r3,fp
  805050:	8023883a 	mov	r17,r16
  805054:	10800044 	addi	r2,r2,1
  805058:	df000817 	ldw	fp,32(sp)
  80505c:	d8800315 	stw	r2,12(sp)
  805060:	9821883a 	mov	r16,r19
  805064:	003dcb06 	br	804794 <_dtoa_r+0xb40>
  805068:	d9000c17 	ldw	r4,48(sp)
  80506c:	d9400d17 	ldw	r5,52(sp)
  805070:	600d883a 	mov	r6,r12
  805074:	680f883a 	mov	r7,r13
  805078:	dac00a15 	stw	r11,40(sp)
  80507c:	080cfa00 	call	80cfa0 <__muldf3>
  805080:	dac00a17 	ldw	r11,40(sp)
  805084:	d9400e17 	ldw	r5,56(sp)
  805088:	d8800a15 	stw	r2,40(sp)
  80508c:	e2c00005 	stb	r11,0(fp)
  805090:	29000058 	cmpnei	r4,r5,1
  805094:	d8c00c15 	stw	r3,48(sp)
  805098:	e145883a 	add	r2,fp,r5
  80509c:	20002126 	beq	r4,zero,805124 <_dtoa_r+0x14d0>
  8050a0:	dc400e15 	stw	r17,56(sp)
  8050a4:	dcc00d15 	stw	r19,52(sp)
  8050a8:	8023883a 	mov	r17,r16
  8050ac:	a809883a 	mov	r4,r21
  8050b0:	900b883a 	mov	r5,r18
  8050b4:	1021883a 	mov	r16,r2
  8050b8:	000d883a 	mov	r6,zero
  8050bc:	01d00934 	movhi	r7,16420
  8050c0:	080cfa00 	call	80cfa0 <__muldf3>
  8050c4:	180b883a 	mov	r5,r3
  8050c8:	1009883a 	mov	r4,r2
  8050cc:	182b883a 	mov	r21,r3
  8050d0:	1027883a 	mov	r19,r2
  8050d4:	080e0d00 	call	80e0d0 <__fixdfsi>
  8050d8:	1009883a 	mov	r4,r2
  8050dc:	1025883a 	mov	r18,r2
  8050e0:	080e1500 	call	80e150 <__floatsidf>
  8050e4:	9809883a 	mov	r4,r19
  8050e8:	a80b883a 	mov	r5,r21
  8050ec:	100d883a 	mov	r6,r2
  8050f0:	180f883a 	mov	r7,r3
  8050f4:	8c400044 	addi	r17,r17,1
  8050f8:	94800c04 	addi	r18,r18,48
  8050fc:	080d7480 	call	80d748 <__subdf3>
  805100:	8cbfffc5 	stb	r18,-1(r17)
  805104:	1009883a 	mov	r4,r2
  805108:	180b883a 	mov	r5,r3
  80510c:	847fea1e 	bne	r16,r17,8050b8 <_dtoa_r+0x1464>
  805110:	8821883a 	mov	r16,r17
  805114:	dcc00d17 	ldw	r19,52(sp)
  805118:	dc400e17 	ldw	r17,56(sp)
  80511c:	102b883a 	mov	r21,r2
  805120:	1825883a 	mov	r18,r3
  805124:	d9000a17 	ldw	r4,40(sp)
  805128:	d9400c17 	ldw	r5,48(sp)
  80512c:	000d883a 	mov	r6,zero
  805130:	01cff834 	movhi	r7,16352
  805134:	080ba940 	call	80ba94 <__adddf3>
  805138:	a80d883a 	mov	r6,r21
  80513c:	900f883a 	mov	r7,r18
  805140:	1009883a 	mov	r4,r2
  805144:	180b883a 	mov	r5,r3
  805148:	080ceb00 	call	80ceb0 <__ledf2>
  80514c:	103c5316 	blt	r2,zero,80429c <_dtoa_r+0x648>
  805150:	d9800a17 	ldw	r6,40(sp)
  805154:	d9c00c17 	ldw	r7,48(sp)
  805158:	0009883a 	mov	r4,zero
  80515c:	014ff834 	movhi	r5,16352
  805160:	080d7480 	call	80d748 <__subdf3>
  805164:	a80d883a 	mov	r6,r21
  805168:	900f883a 	mov	r7,r18
  80516c:	1009883a 	mov	r4,r2
  805170:	180b883a 	mov	r5,r3
  805174:	080cdc00 	call	80cdc0 <__gedf2>
  805178:	00bc8d0e 	bge	zero,r2,8043b0 <_dtoa_r+0x75c>
  80517c:	80bfffc7 	ldb	r2,-1(r16)
  805180:	8025883a 	mov	r18,r16
  805184:	843fffc4 	addi	r16,r16,-1
  805188:	10800c20 	cmpeqi	r2,r2,48
  80518c:	103ffb1e 	bne	r2,zero,80517c <_dtoa_r+0x1528>
  805190:	d8801117 	ldw	r2,68(sp)
  805194:	10800044 	addi	r2,r2,1
  805198:	d8800315 	stw	r2,12(sp)
  80519c:	003da006 	br	804820 <_dtoa_r+0xbcc>
  8051a0:	d8c01217 	ldw	r3,72(sp)
  8051a4:	00800d84 	movi	r2,54
  8051a8:	d9000517 	ldw	r4,20(sp)
  8051ac:	10c5c83a 	sub	r2,r2,r3
  8051b0:	d8c00217 	ldw	r3,8(sp)
  8051b4:	dd400717 	ldw	r21,28(sp)
  8051b8:	2025883a 	mov	r18,r4
  8051bc:	1887883a 	add	r3,r3,r2
  8051c0:	2085883a 	add	r2,r4,r2
  8051c4:	d8c00215 	stw	r3,8(sp)
  8051c8:	d8800515 	stw	r2,20(sp)
  8051cc:	003d0306 	br	8045dc <_dtoa_r+0x988>
  8051d0:	d8800417 	ldw	r2,16(sp)
  8051d4:	103ee426 	beq	r2,zero,804d68 <_dtoa_r+0x1114>
  8051d8:	d8800b17 	ldw	r2,44(sp)
  8051dc:	00bc740e 	bge	zero,r2,8043b0 <_dtoa_r+0x75c>
  8051e0:	a80b883a 	mov	r5,r21
  8051e4:	9009883a 	mov	r4,r18
  8051e8:	000d883a 	mov	r6,zero
  8051ec:	01d00934 	movhi	r7,16420
  8051f0:	080cfa00 	call	80cfa0 <__muldf3>
  8051f4:	81000044 	addi	r4,r16,1
  8051f8:	1025883a 	mov	r18,r2
  8051fc:	182b883a 	mov	r21,r3
  805200:	d8c00a15 	stw	r3,40(sp)
  805204:	080e1500 	call	80e150 <__floatsidf>
  805208:	900d883a 	mov	r6,r18
  80520c:	a80f883a 	mov	r7,r21
  805210:	1009883a 	mov	r4,r2
  805214:	180b883a 	mov	r5,r3
  805218:	080cfa00 	call	80cfa0 <__muldf3>
  80521c:	1009883a 	mov	r4,r2
  805220:	000d883a 	mov	r6,zero
  805224:	01d00734 	movhi	r7,16412
  805228:	180b883a 	mov	r5,r3
  80522c:	080ba940 	call	80ba94 <__adddf3>
  805230:	d9000317 	ldw	r4,12(sp)
  805234:	d8800c15 	stw	r2,48(sp)
  805238:	00bf3034 	movhi	r2,64704
  80523c:	1887883a 	add	r3,r3,r2
  805240:	d8800b17 	ldw	r2,44(sp)
  805244:	213fffc4 	addi	r4,r4,-1
  805248:	d9001115 	stw	r4,68(sp)
  80524c:	d8c00d15 	stw	r3,52(sp)
  805250:	d8800e15 	stw	r2,56(sp)
  805254:	003b9f06 	br	8040d4 <_dtoa_r+0x480>
  805258:	a025883a 	mov	r18,r20
  80525c:	dc400a15 	stw	r17,40(sp)
  805260:	04000084 	movi	r16,2
  805264:	003b7c06 	br	804058 <_dtoa_r+0x404>
  805268:	d8800317 	ldw	r2,12(sp)
  80526c:	00c00c44 	movi	r3,49
  805270:	10800044 	addi	r2,r2,1
  805274:	d8800315 	stw	r2,12(sp)
  805278:	003c1606 	br	8042d4 <_dtoa_r+0x680>
  80527c:	00800e44 	movi	r2,57
  805280:	8023883a 	mov	r17,r16
  805284:	a0800005 	stb	r2,0(r20)
  805288:	9821883a 	mov	r16,r19
  80528c:	01000e44 	movi	r4,57
  805290:	003d4f06 	br	8047d0 <_dtoa_r+0xb7c>
  805294:	002b883a 	mov	r21,zero
  805298:	0021883a 	mov	r16,zero
  80529c:	003e7206 	br	804c68 <_dtoa_r+0x1014>
  8052a0:	dd800d17 	ldw	r22,52(sp)
  8052a4:	ddc00e17 	ldw	r23,56(sp)
  8052a8:	d8801117 	ldw	r2,68(sp)
  8052ac:	8025883a 	mov	r18,r16
  8052b0:	10800044 	addi	r2,r2,1
  8052b4:	d8800315 	stw	r2,12(sp)
  8052b8:	003d5906 	br	804820 <_dtoa_r+0xbcc>
  8052bc:	103f1f1e 	bne	r2,zero,804f3c <_dtoa_r+0x12e8>
  8052c0:	1880004c 	andi	r2,r3,1
  8052c4:	103f191e 	bne	r2,zero,804f2c <_dtoa_r+0x12d8>
  8052c8:	003f1c06 	br	804f3c <_dtoa_r+0x12e8>
  8052cc:	dcc00f17 	ldw	r19,60(sp)
  8052d0:	dd800d17 	ldw	r22,52(sp)
  8052d4:	ddc00e17 	ldw	r23,56(sp)
  8052d8:	dc400c17 	ldw	r17,48(sp)
  8052dc:	dd000a17 	ldw	r20,40(sp)
  8052e0:	003c3306 	br	8043b0 <_dtoa_r+0x75c>
  8052e4:	d9000317 	ldw	r4,12(sp)
  8052e8:	e007883a 	mov	r3,fp
  8052ec:	18800e60 	cmpeqi	r2,r3,57
  8052f0:	21000044 	addi	r4,r4,1
  8052f4:	d9000315 	stw	r4,12(sp)
  8052f8:	df000817 	ldw	fp,32(sp)
  8052fc:	a4800044 	addi	r18,r20,1
  805300:	103fde1e 	bne	r2,zero,80527c <_dtoa_r+0x1628>
  805304:	047f0b16 	blt	zero,r17,804f34 <_dtoa_r+0x12e0>
  805308:	003f0c06 	br	804f3c <_dtoa_r+0x12e8>
  80530c:	d8800117 	ldw	r2,4(sp)
  805310:	108000c8 	cmpgei	r2,r2,3
  805314:	103e451e 	bne	r2,zero,804c2c <_dtoa_r+0xfd8>
  805318:	dcc00315 	stw	r19,12(sp)
  80531c:	003e0c06 	br	804b50 <_dtoa_r+0xefc>
  805320:	d8800117 	ldw	r2,4(sp)
  805324:	108000c8 	cmpgei	r2,r2,3
  805328:	103e401e 	bne	r2,zero,804c2c <_dtoa_r+0xfd8>
  80532c:	d8800b17 	ldw	r2,44(sp)
  805330:	dcc00315 	stw	r19,12(sp)
  805334:	d8800415 	stw	r2,16(sp)
  805338:	04bdaf0e 	bge	zero,r18,8049f8 <_dtoa_r+0xda4>
  80533c:	003e5806 	br	804ca0 <_dtoa_r+0x104c>
  805340:	04000084 	movi	r16,2
  805344:	003b4406 	br	804058 <_dtoa_r+0x404>
  805348:	01c02074 	movhi	r7,129
  80534c:	01002074 	movhi	r4,129
  805350:	39c39404 	addi	r7,r7,3664
  805354:	000d883a 	mov	r6,zero
  805358:	01406a84 	movi	r5,426
  80535c:	21039904 	addi	r4,r4,3684
  805360:	0809f800 	call	809f80 <__assert_func>
  805364:	01c02074 	movhi	r7,129
  805368:	01002074 	movhi	r4,129
  80536c:	39c39404 	addi	r7,r7,3664
  805370:	000d883a 	mov	r6,zero
  805374:	0140ba84 	movi	r5,746
  805378:	21039904 	addi	r4,r4,3684
  80537c:	0809f800 	call	809f80 <__assert_func>
  805380:	e7039104 	addi	fp,fp,3652
  805384:	003a6406 	br	803d18 <_dtoa_r+0xc4>
  805388:	18c00120 	cmpeqi	r3,r3,4
  80538c:	183cd51e 	bne	r3,zero,8046e4 <_dtoa_r+0xa90>
  805390:	00c00f04 	movi	r3,60
  805394:	1885c83a 	sub	r2,r3,r2
  805398:	003d6c06 	br	80494c <_dtoa_r+0xcf8>
  80539c:	000b883a 	mov	r5,zero
  8053a0:	003af006 	br	803f64 <_dtoa_r+0x310>

008053a4 <__sflush_r>:
  8053a4:	2880030b 	ldhu	r2,12(r5)
  8053a8:	defffb04 	addi	sp,sp,-20
  8053ac:	dcc00315 	stw	r19,12(sp)
  8053b0:	dc000015 	stw	r16,0(sp)
  8053b4:	dfc00415 	stw	ra,16(sp)
  8053b8:	dc800215 	stw	r18,8(sp)
  8053bc:	dc400115 	stw	r17,4(sp)
  8053c0:	10c0020c 	andi	r3,r2,8
  8053c4:	2821883a 	mov	r16,r5
  8053c8:	2027883a 	mov	r19,r4
  8053cc:	18003f1e 	bne	r3,zero,8054cc <__sflush_r+0x128>
  8053d0:	28c00117 	ldw	r3,4(r5)
  8053d4:	10820014 	ori	r2,r2,2048
  8053d8:	2880030d 	sth	r2,12(r5)
  8053dc:	00c0550e 	bge	zero,r3,805534 <__sflush_r+0x190>
  8053e0:	82000a17 	ldw	r8,40(r16)
  8053e4:	40003126 	beq	r8,zero,8054ac <__sflush_r+0x108>
  8053e8:	9c400017 	ldw	r17,0(r19)
  8053ec:	1104000c 	andi	r4,r2,4096
  8053f0:	98000015 	stw	zero,0(r19)
  8053f4:	81400717 	ldw	r5,28(r16)
  8053f8:	1007883a 	mov	r3,r2
  8053fc:	2000521e 	bne	r4,zero,805548 <__sflush_r+0x1a4>
  805400:	01c00044 	movi	r7,1
  805404:	000d883a 	mov	r6,zero
  805408:	9809883a 	mov	r4,r19
  80540c:	403ee83a 	callr	r8
  805410:	10ffffd8 	cmpnei	r3,r2,-1
  805414:	18005826 	beq	r3,zero,805578 <__sflush_r+0x1d4>
  805418:	80c0030b 	ldhu	r3,12(r16)
  80541c:	82000a17 	ldw	r8,40(r16)
  805420:	81400717 	ldw	r5,28(r16)
  805424:	18c0010c 	andi	r3,r3,4
  805428:	18000626 	beq	r3,zero,805444 <__sflush_r+0xa0>
  80542c:	81000117 	ldw	r4,4(r16)
  805430:	80c00c17 	ldw	r3,48(r16)
  805434:	1105c83a 	sub	r2,r2,r4
  805438:	18000226 	beq	r3,zero,805444 <__sflush_r+0xa0>
  80543c:	80c00f17 	ldw	r3,60(r16)
  805440:	10c5c83a 	sub	r2,r2,r3
  805444:	100d883a 	mov	r6,r2
  805448:	000f883a 	mov	r7,zero
  80544c:	9809883a 	mov	r4,r19
  805450:	403ee83a 	callr	r8
  805454:	10ffffd8 	cmpnei	r3,r2,-1
  805458:	18003d1e 	bne	r3,zero,805550 <__sflush_r+0x1ac>
  80545c:	99000017 	ldw	r4,0(r19)
  805460:	80c0030b 	ldhu	r3,12(r16)
  805464:	20004e26 	beq	r4,zero,8055a0 <__sflush_r+0x1fc>
  805468:	21400760 	cmpeqi	r5,r4,29
  80546c:	2800021e 	bne	r5,zero,805478 <__sflush_r+0xd4>
  805470:	210005a0 	cmpeqi	r4,r4,22
  805474:	20002c26 	beq	r4,zero,805528 <__sflush_r+0x184>
  805478:	80800417 	ldw	r2,16(r16)
  80547c:	18fdffcc 	andi	r3,r3,63487
  805480:	80c0030d 	sth	r3,12(r16)
  805484:	80000115 	stw	zero,4(r16)
  805488:	80800015 	stw	r2,0(r16)
  80548c:	81400c17 	ldw	r5,48(r16)
  805490:	9c400015 	stw	r17,0(r19)
  805494:	28000526 	beq	r5,zero,8054ac <__sflush_r+0x108>
  805498:	80801004 	addi	r2,r16,64
  80549c:	28800226 	beq	r5,r2,8054a8 <__sflush_r+0x104>
  8054a0:	9809883a 	mov	r4,r19
  8054a4:	0805ac40 	call	805ac4 <_free_r>
  8054a8:	80000c15 	stw	zero,48(r16)
  8054ac:	0005883a 	mov	r2,zero
  8054b0:	dfc00417 	ldw	ra,16(sp)
  8054b4:	dcc00317 	ldw	r19,12(sp)
  8054b8:	dc800217 	ldw	r18,8(sp)
  8054bc:	dc400117 	ldw	r17,4(sp)
  8054c0:	dc000017 	ldw	r16,0(sp)
  8054c4:	dec00504 	addi	sp,sp,20
  8054c8:	f800283a 	ret
  8054cc:	2c800417 	ldw	r18,16(r5)
  8054d0:	903ff626 	beq	r18,zero,8054ac <__sflush_r+0x108>
  8054d4:	2c400017 	ldw	r17,0(r5)
  8054d8:	108000cc 	andi	r2,r2,3
  8054dc:	2c800015 	stw	r18,0(r5)
  8054e0:	8ca3c83a 	sub	r17,r17,r18
  8054e4:	1000161e 	bne	r2,zero,805540 <__sflush_r+0x19c>
  8054e8:	28800517 	ldw	r2,20(r5)
  8054ec:	80800215 	stw	r2,8(r16)
  8054f0:	04400316 	blt	zero,r17,805500 <__sflush_r+0x15c>
  8054f4:	003fed06 	br	8054ac <__sflush_r+0x108>
  8054f8:	90a5883a 	add	r18,r18,r2
  8054fc:	047feb0e 	bge	zero,r17,8054ac <__sflush_r+0x108>
  805500:	80800917 	ldw	r2,36(r16)
  805504:	81400717 	ldw	r5,28(r16)
  805508:	880f883a 	mov	r7,r17
  80550c:	900d883a 	mov	r6,r18
  805510:	9809883a 	mov	r4,r19
  805514:	103ee83a 	callr	r2
  805518:	88a3c83a 	sub	r17,r17,r2
  80551c:	00bff616 	blt	zero,r2,8054f8 <__sflush_r+0x154>
  805520:	80c0030b 	ldhu	r3,12(r16)
  805524:	00bfffc4 	movi	r2,-1
  805528:	18c01014 	ori	r3,r3,64
  80552c:	80c0030d 	sth	r3,12(r16)
  805530:	003fdf06 	br	8054b0 <__sflush_r+0x10c>
  805534:	28c00f17 	ldw	r3,60(r5)
  805538:	00ffa916 	blt	zero,r3,8053e0 <__sflush_r+0x3c>
  80553c:	003fdb06 	br	8054ac <__sflush_r+0x108>
  805540:	0005883a 	mov	r2,zero
  805544:	003fe906 	br	8054ec <__sflush_r+0x148>
  805548:	80801417 	ldw	r2,80(r16)
  80554c:	003fb506 	br	805424 <__sflush_r+0x80>
  805550:	80c0030b 	ldhu	r3,12(r16)
  805554:	81000417 	ldw	r4,16(r16)
  805558:	80000115 	stw	zero,4(r16)
  80555c:	197dffcc 	andi	r5,r3,63487
  805560:	8140030d 	sth	r5,12(r16)
  805564:	81000015 	stw	r4,0(r16)
  805568:	18c4000c 	andi	r3,r3,4096
  80556c:	183fc726 	beq	r3,zero,80548c <__sflush_r+0xe8>
  805570:	80801415 	stw	r2,80(r16)
  805574:	003fc506 	br	80548c <__sflush_r+0xe8>
  805578:	98c00017 	ldw	r3,0(r19)
  80557c:	183fa626 	beq	r3,zero,805418 <__sflush_r+0x74>
  805580:	19000760 	cmpeqi	r4,r3,29
  805584:	20000e1e 	bne	r4,zero,8055c0 <__sflush_r+0x21c>
  805588:	18c00598 	cmpnei	r3,r3,22
  80558c:	18000c26 	beq	r3,zero,8055c0 <__sflush_r+0x21c>
  805590:	80c0030b 	ldhu	r3,12(r16)
  805594:	18c01014 	ori	r3,r3,64
  805598:	80c0030d 	sth	r3,12(r16)
  80559c:	003fc406 	br	8054b0 <__sflush_r+0x10c>
  8055a0:	81000417 	ldw	r4,16(r16)
  8055a4:	197dffcc 	andi	r5,r3,63487
  8055a8:	8140030d 	sth	r5,12(r16)
  8055ac:	80000115 	stw	zero,4(r16)
  8055b0:	81000015 	stw	r4,0(r16)
  8055b4:	18c4000c 	andi	r3,r3,4096
  8055b8:	183fb426 	beq	r3,zero,80548c <__sflush_r+0xe8>
  8055bc:	003fec06 	br	805570 <__sflush_r+0x1cc>
  8055c0:	9c400015 	stw	r17,0(r19)
  8055c4:	0005883a 	mov	r2,zero
  8055c8:	003fb906 	br	8054b0 <__sflush_r+0x10c>

008055cc <_fflush_r>:
  8055cc:	defffd04 	addi	sp,sp,-12
  8055d0:	dc000115 	stw	r16,4(sp)
  8055d4:	dfc00215 	stw	ra,8(sp)
  8055d8:	2021883a 	mov	r16,r4
  8055dc:	20000226 	beq	r4,zero,8055e8 <_fflush_r+0x1c>
  8055e0:	20800e17 	ldw	r2,56(r4)
  8055e4:	10000726 	beq	r2,zero,805604 <_fflush_r+0x38>
  8055e8:	2880030f 	ldh	r2,12(r5)
  8055ec:	10000a1e 	bne	r2,zero,805618 <_fflush_r+0x4c>
  8055f0:	0005883a 	mov	r2,zero
  8055f4:	dfc00217 	ldw	ra,8(sp)
  8055f8:	dc000117 	ldw	r16,4(sp)
  8055fc:	dec00304 	addi	sp,sp,12
  805600:	f800283a 	ret
  805604:	d9400015 	stw	r5,0(sp)
  805608:	08059600 	call	805960 <__sinit>
  80560c:	d9400017 	ldw	r5,0(sp)
  805610:	2880030f 	ldh	r2,12(r5)
  805614:	103ff626 	beq	r2,zero,8055f0 <_fflush_r+0x24>
  805618:	8009883a 	mov	r4,r16
  80561c:	dfc00217 	ldw	ra,8(sp)
  805620:	dc000117 	ldw	r16,4(sp)
  805624:	dec00304 	addi	sp,sp,12
  805628:	08053a41 	jmpi	8053a4 <__sflush_r>

0080562c <fflush>:
  80562c:	200b883a 	mov	r5,r4
  805630:	20000326 	beq	r4,zero,805640 <fflush+0x14>
  805634:	00802074 	movhi	r2,129
  805638:	110bb817 	ldw	r4,12000(r2)
  80563c:	08055cc1 	jmpi	8055cc <_fflush_r>
  805640:	00802074 	movhi	r2,129
  805644:	110bb717 	ldw	r4,11996(r2)
  805648:	01402034 	movhi	r5,128
  80564c:	29557304 	addi	r5,r5,21964
  805650:	08063241 	jmpi	806324 <_fwalk_reent>

00805654 <__fp_lock>:
  805654:	0005883a 	mov	r2,zero
  805658:	f800283a 	ret

0080565c <_cleanup_r>:
  80565c:	01402074 	movhi	r5,129
  805660:	29682f04 	addi	r5,r5,-24388
  805664:	08063241 	jmpi	806324 <_fwalk_reent>

00805668 <__sinit.part.0>:
  805668:	00c02034 	movhi	r3,128
  80566c:	20800117 	ldw	r2,4(r4)
  805670:	18d59704 	addi	r3,r3,22108
  805674:	20c00f15 	stw	r3,60(r4)
  805678:	2140bb04 	addi	r5,r4,748
  80567c:	00c000c4 	movi	r3,3
  805680:	20c0b915 	stw	r3,740(r4)
  805684:	2140ba15 	stw	r5,744(r4)
  805688:	2000b815 	stw	zero,736(r4)
  80568c:	10001705 	stb	zero,92(r2)
  805690:	10001745 	stb	zero,93(r2)
  805694:	10001785 	stb	zero,94(r2)
  805698:	100017c5 	stb	zero,95(r2)
  80569c:	10001805 	stb	zero,96(r2)
  8056a0:	10001845 	stb	zero,97(r2)
  8056a4:	10001885 	stb	zero,98(r2)
  8056a8:	100018c5 	stb	zero,99(r2)
  8056ac:	00c00104 	movi	r3,4
  8056b0:	10c00315 	stw	r3,12(r2)
  8056b4:	02002074 	movhi	r8,129
  8056b8:	20c00217 	ldw	r3,8(r4)
  8056bc:	01c02074 	movhi	r7,129
  8056c0:	01802074 	movhi	r6,129
  8056c4:	01402074 	movhi	r5,129
  8056c8:	42222204 	addi	r8,r8,-30584
  8056cc:	39e23904 	addi	r7,r7,-30492
  8056d0:	31a25904 	addi	r6,r6,-30364
  8056d4:	29627004 	addi	r5,r5,-30272
  8056d8:	02400074 	movhi	r9,1
  8056dc:	10001915 	stw	zero,100(r2)
  8056e0:	10000015 	stw	zero,0(r2)
  8056e4:	10000115 	stw	zero,4(r2)
  8056e8:	10000215 	stw	zero,8(r2)
  8056ec:	10000415 	stw	zero,16(r2)
  8056f0:	10000515 	stw	zero,20(r2)
  8056f4:	10000615 	stw	zero,24(r2)
  8056f8:	10800715 	stw	r2,28(r2)
  8056fc:	12000815 	stw	r8,32(r2)
  805700:	11c00915 	stw	r7,36(r2)
  805704:	11800a15 	stw	r6,40(r2)
  805708:	11400b15 	stw	r5,44(r2)
  80570c:	4a400284 	addi	r9,r9,10
  805710:	1a400315 	stw	r9,12(r3)
  805714:	18001915 	stw	zero,100(r3)
  805718:	18000015 	stw	zero,0(r3)
  80571c:	18000115 	stw	zero,4(r3)
  805720:	18000215 	stw	zero,8(r3)
  805724:	18000415 	stw	zero,16(r3)
  805728:	18001705 	stb	zero,92(r3)
  80572c:	18001745 	stb	zero,93(r3)
  805730:	18001785 	stb	zero,94(r3)
  805734:	180017c5 	stb	zero,95(r3)
  805738:	18001805 	stb	zero,96(r3)
  80573c:	18001845 	stb	zero,97(r3)
  805740:	18001885 	stb	zero,98(r3)
  805744:	180018c5 	stb	zero,99(r3)
  805748:	20800317 	ldw	r2,12(r4)
  80574c:	024000b4 	movhi	r9,2
  805750:	18000515 	stw	zero,20(r3)
  805754:	18000615 	stw	zero,24(r3)
  805758:	18c00715 	stw	r3,28(r3)
  80575c:	1a000815 	stw	r8,32(r3)
  805760:	19c00915 	stw	r7,36(r3)
  805764:	19800a15 	stw	r6,40(r3)
  805768:	19400b15 	stw	r5,44(r3)
  80576c:	4a400484 	addi	r9,r9,18
  805770:	10001915 	stw	zero,100(r2)
  805774:	10000015 	stw	zero,0(r2)
  805778:	10000115 	stw	zero,4(r2)
  80577c:	10000215 	stw	zero,8(r2)
  805780:	12400315 	stw	r9,12(r2)
  805784:	10000415 	stw	zero,16(r2)
  805788:	10000515 	stw	zero,20(r2)
  80578c:	10000615 	stw	zero,24(r2)
  805790:	10001705 	stb	zero,92(r2)
  805794:	10001745 	stb	zero,93(r2)
  805798:	10001785 	stb	zero,94(r2)
  80579c:	100017c5 	stb	zero,95(r2)
  8057a0:	10001805 	stb	zero,96(r2)
  8057a4:	10001845 	stb	zero,97(r2)
  8057a8:	10001885 	stb	zero,98(r2)
  8057ac:	100018c5 	stb	zero,99(r2)
  8057b0:	10800715 	stw	r2,28(r2)
  8057b4:	12000815 	stw	r8,32(r2)
  8057b8:	11c00915 	stw	r7,36(r2)
  8057bc:	11800a15 	stw	r6,40(r2)
  8057c0:	11400b15 	stw	r5,44(r2)
  8057c4:	00800044 	movi	r2,1
  8057c8:	20800e15 	stw	r2,56(r4)
  8057cc:	f800283a 	ret

008057d0 <__fp_unlock>:
  8057d0:	0005883a 	mov	r2,zero
  8057d4:	f800283a 	ret

008057d8 <__sfmoreglue>:
  8057d8:	defffc04 	addi	sp,sp,-16
  8057dc:	dc800215 	stw	r18,8(sp)
  8057e0:	2825883a 	mov	r18,r5
  8057e4:	dc000015 	stw	r16,0(sp)
  8057e8:	01401a04 	movi	r5,104
  8057ec:	2021883a 	mov	r16,r4
  8057f0:	913fffc4 	addi	r4,r18,-1
  8057f4:	dfc00315 	stw	ra,12(sp)
  8057f8:	dc400115 	stw	r17,4(sp)
  8057fc:	080150c0 	call	80150c <__mulsi3>
  805800:	8009883a 	mov	r4,r16
  805804:	11401d04 	addi	r5,r2,116
  805808:	1023883a 	mov	r17,r2
  80580c:	08065c40 	call	8065c4 <_malloc_r>
  805810:	1021883a 	mov	r16,r2
  805814:	10000726 	beq	r2,zero,805834 <__sfmoreglue+0x5c>
  805818:	11000304 	addi	r4,r2,12
  80581c:	10000015 	stw	zero,0(r2)
  805820:	14800115 	stw	r18,4(r2)
  805824:	11000215 	stw	r4,8(r2)
  805828:	89801a04 	addi	r6,r17,104
  80582c:	000b883a 	mov	r5,zero
  805830:	08070a40 	call	8070a4 <memset>
  805834:	8005883a 	mov	r2,r16
  805838:	dfc00317 	ldw	ra,12(sp)
  80583c:	dc800217 	ldw	r18,8(sp)
  805840:	dc400117 	ldw	r17,4(sp)
  805844:	dc000017 	ldw	r16,0(sp)
  805848:	dec00404 	addi	sp,sp,16
  80584c:	f800283a 	ret

00805850 <__sfp>:
  805850:	defffd04 	addi	sp,sp,-12
  805854:	00802074 	movhi	r2,129
  805858:	dc000015 	stw	r16,0(sp)
  80585c:	140bb717 	ldw	r16,11996(r2)
  805860:	dc400115 	stw	r17,4(sp)
  805864:	dfc00215 	stw	ra,8(sp)
  805868:	80800e17 	ldw	r2,56(r16)
  80586c:	2023883a 	mov	r17,r4
  805870:	10002b26 	beq	r2,zero,805920 <__sfp+0xd0>
  805874:	8400b804 	addi	r16,r16,736
  805878:	80c00117 	ldw	r3,4(r16)
  80587c:	80800217 	ldw	r2,8(r16)
  805880:	18ffffc4 	addi	r3,r3,-1
  805884:	1800030e 	bge	r3,zero,805894 <__sfp+0x44>
  805888:	00002106 	br	805910 <__sfp+0xc0>
  80588c:	10801a04 	addi	r2,r2,104
  805890:	30001f26 	beq	r6,zero,805910 <__sfp+0xc0>
  805894:	1140030f 	ldh	r5,12(r2)
  805898:	18ffffc4 	addi	r3,r3,-1
  80589c:	19bfffd8 	cmpnei	r6,r3,-1
  8058a0:	283ffa1e 	bne	r5,zero,80588c <__sfp+0x3c>
  8058a4:	00fffff4 	movhi	r3,65535
  8058a8:	18c00044 	addi	r3,r3,1
  8058ac:	10001915 	stw	zero,100(r2)
  8058b0:	10000015 	stw	zero,0(r2)
  8058b4:	10000115 	stw	zero,4(r2)
  8058b8:	10000215 	stw	zero,8(r2)
  8058bc:	10c00315 	stw	r3,12(r2)
  8058c0:	10000415 	stw	zero,16(r2)
  8058c4:	10000515 	stw	zero,20(r2)
  8058c8:	10000615 	stw	zero,24(r2)
  8058cc:	10001705 	stb	zero,92(r2)
  8058d0:	10001745 	stb	zero,93(r2)
  8058d4:	10001785 	stb	zero,94(r2)
  8058d8:	100017c5 	stb	zero,95(r2)
  8058dc:	10001805 	stb	zero,96(r2)
  8058e0:	10001845 	stb	zero,97(r2)
  8058e4:	10001885 	stb	zero,98(r2)
  8058e8:	100018c5 	stb	zero,99(r2)
  8058ec:	10000c15 	stw	zero,48(r2)
  8058f0:	10000d15 	stw	zero,52(r2)
  8058f4:	10001115 	stw	zero,68(r2)
  8058f8:	10001215 	stw	zero,72(r2)
  8058fc:	dfc00217 	ldw	ra,8(sp)
  805900:	dc400117 	ldw	r17,4(sp)
  805904:	dc000017 	ldw	r16,0(sp)
  805908:	dec00304 	addi	sp,sp,12
  80590c:	f800283a 	ret
  805910:	80800017 	ldw	r2,0(r16)
  805914:	10000526 	beq	r2,zero,80592c <__sfp+0xdc>
  805918:	1021883a 	mov	r16,r2
  80591c:	003fd606 	br	805878 <__sfp+0x28>
  805920:	8009883a 	mov	r4,r16
  805924:	08056680 	call	805668 <__sinit.part.0>
  805928:	003fd206 	br	805874 <__sfp+0x24>
  80592c:	01400104 	movi	r5,4
  805930:	8809883a 	mov	r4,r17
  805934:	08057d80 	call	8057d8 <__sfmoreglue>
  805938:	80800015 	stw	r2,0(r16)
  80593c:	103ff61e 	bne	r2,zero,805918 <__sfp+0xc8>
  805940:	00c00304 	movi	r3,12
  805944:	88c00015 	stw	r3,0(r17)
  805948:	003fec06 	br	8058fc <__sfp+0xac>

0080594c <_cleanup>:
  80594c:	00802074 	movhi	r2,129
  805950:	110bb717 	ldw	r4,11996(r2)
  805954:	01402074 	movhi	r5,129
  805958:	29682f04 	addi	r5,r5,-24388
  80595c:	08063241 	jmpi	806324 <_fwalk_reent>

00805960 <__sinit>:
  805960:	20800e17 	ldw	r2,56(r4)
  805964:	10000126 	beq	r2,zero,80596c <__sinit+0xc>
  805968:	f800283a 	ret
  80596c:	08056681 	jmpi	805668 <__sinit.part.0>

00805970 <__sfp_lock_acquire>:
  805970:	f800283a 	ret

00805974 <__sfp_lock_release>:
  805974:	f800283a 	ret

00805978 <__sinit_lock_acquire>:
  805978:	f800283a 	ret

0080597c <__sinit_lock_release>:
  80597c:	f800283a 	ret

00805980 <__fp_lock_all>:
  805980:	00802074 	movhi	r2,129
  805984:	110bb817 	ldw	r4,12000(r2)
  805988:	01402034 	movhi	r5,128
  80598c:	29559504 	addi	r5,r5,22100
  805990:	080628c1 	jmpi	80628c <_fwalk>

00805994 <__fp_unlock_all>:
  805994:	00802074 	movhi	r2,129
  805998:	110bb817 	ldw	r4,12000(r2)
  80599c:	01402034 	movhi	r5,128
  8059a0:	2955f404 	addi	r5,r5,22480
  8059a4:	080628c1 	jmpi	80628c <_fwalk>

008059a8 <_malloc_trim_r>:
  8059a8:	defffb04 	addi	sp,sp,-20
  8059ac:	dcc00315 	stw	r19,12(sp)
  8059b0:	04c02074 	movhi	r19,129
  8059b4:	dc800215 	stw	r18,8(sp)
  8059b8:	dc400115 	stw	r17,4(sp)
  8059bc:	dc000015 	stw	r16,0(sp)
  8059c0:	dfc00415 	stw	ra,16(sp)
  8059c4:	2821883a 	mov	r16,r5
  8059c8:	9cc5d304 	addi	r19,r19,5964
  8059cc:	2025883a 	mov	r18,r4
  8059d0:	080ea080 	call	80ea08 <__malloc_lock>
  8059d4:	98800217 	ldw	r2,8(r19)
  8059d8:	14400117 	ldw	r17,4(r2)
  8059dc:	00bfff04 	movi	r2,-4
  8059e0:	88a2703a 	and	r17,r17,r2
  8059e4:	8c21c83a 	sub	r16,r17,r16
  8059e8:	8403fbc4 	addi	r16,r16,4079
  8059ec:	8020d33a 	srli	r16,r16,12
  8059f0:	843fffc4 	addi	r16,r16,-1
  8059f4:	8020933a 	slli	r16,r16,12
  8059f8:	80840008 	cmpgei	r2,r16,4096
  8059fc:	10000626 	beq	r2,zero,805a18 <_malloc_trim_r+0x70>
  805a00:	000b883a 	mov	r5,zero
  805a04:	9009883a 	mov	r4,r18
  805a08:	08088300 	call	808830 <_sbrk_r>
  805a0c:	98c00217 	ldw	r3,8(r19)
  805a10:	1c47883a 	add	r3,r3,r17
  805a14:	10c00a26 	beq	r2,r3,805a40 <_malloc_trim_r+0x98>
  805a18:	9009883a 	mov	r4,r18
  805a1c:	080ea2c0 	call	80ea2c <__malloc_unlock>
  805a20:	0005883a 	mov	r2,zero
  805a24:	dfc00417 	ldw	ra,16(sp)
  805a28:	dcc00317 	ldw	r19,12(sp)
  805a2c:	dc800217 	ldw	r18,8(sp)
  805a30:	dc400117 	ldw	r17,4(sp)
  805a34:	dc000017 	ldw	r16,0(sp)
  805a38:	dec00504 	addi	sp,sp,20
  805a3c:	f800283a 	ret
  805a40:	040bc83a 	sub	r5,zero,r16
  805a44:	9009883a 	mov	r4,r18
  805a48:	08088300 	call	808830 <_sbrk_r>
  805a4c:	10bfffd8 	cmpnei	r2,r2,-1
  805a50:	10000d26 	beq	r2,zero,805a88 <_malloc_trim_r+0xe0>
  805a54:	00802074 	movhi	r2,129
  805a58:	1092cc17 	ldw	r2,19248(r2)
  805a5c:	98c00217 	ldw	r3,8(r19)
  805a60:	8c23c83a 	sub	r17,r17,r16
  805a64:	8c400054 	ori	r17,r17,1
  805a68:	1421c83a 	sub	r16,r2,r16
  805a6c:	1c400115 	stw	r17,4(r3)
  805a70:	00802074 	movhi	r2,129
  805a74:	9009883a 	mov	r4,r18
  805a78:	1412cc15 	stw	r16,19248(r2)
  805a7c:	080ea2c0 	call	80ea2c <__malloc_unlock>
  805a80:	00800044 	movi	r2,1
  805a84:	003fe706 	br	805a24 <_malloc_trim_r+0x7c>
  805a88:	000b883a 	mov	r5,zero
  805a8c:	9009883a 	mov	r4,r18
  805a90:	08088300 	call	808830 <_sbrk_r>
  805a94:	99000217 	ldw	r4,8(r19)
  805a98:	1107c83a 	sub	r3,r2,r4
  805a9c:	19400410 	cmplti	r5,r3,16
  805aa0:	283fdd1e 	bne	r5,zero,805a18 <_malloc_trim_r+0x70>
  805aa4:	01402074 	movhi	r5,129
  805aa8:	294bb917 	ldw	r5,12004(r5)
  805aac:	18c00054 	ori	r3,r3,1
  805ab0:	20c00115 	stw	r3,4(r4)
  805ab4:	1145c83a 	sub	r2,r2,r5
  805ab8:	01402074 	movhi	r5,129
  805abc:	2892cc15 	stw	r2,19248(r5)
  805ac0:	003fd506 	br	805a18 <_malloc_trim_r+0x70>

00805ac4 <_free_r>:
  805ac4:	28004f26 	beq	r5,zero,805c04 <_free_r+0x140>
  805ac8:	defffd04 	addi	sp,sp,-12
  805acc:	dc400115 	stw	r17,4(sp)
  805ad0:	dc000015 	stw	r16,0(sp)
  805ad4:	2023883a 	mov	r17,r4
  805ad8:	2821883a 	mov	r16,r5
  805adc:	dfc00215 	stw	ra,8(sp)
  805ae0:	080ea080 	call	80ea08 <__malloc_lock>
  805ae4:	81ffff17 	ldw	r7,-4(r16)
  805ae8:	00bfff84 	movi	r2,-2
  805aec:	80fffe04 	addi	r3,r16,-8
  805af0:	3884703a 	and	r2,r7,r2
  805af4:	01002074 	movhi	r4,129
  805af8:	188d883a 	add	r6,r3,r2
  805afc:	2105d304 	addi	r4,r4,5964
  805b00:	31400117 	ldw	r5,4(r6)
  805b04:	22000217 	ldw	r8,8(r4)
  805b08:	027fff04 	movi	r9,-4
  805b0c:	2a4a703a 	and	r5,r5,r9
  805b10:	41806426 	beq	r8,r6,805ca4 <_free_r+0x1e0>
  805b14:	31400115 	stw	r5,4(r6)
  805b18:	39c0004c 	andi	r7,r7,1
  805b1c:	3151883a 	add	r8,r6,r5
  805b20:	3800281e 	bne	r7,zero,805bc4 <_free_r+0x100>
  805b24:	82bffe17 	ldw	r10,-8(r16)
  805b28:	42000117 	ldw	r8,4(r8)
  805b2c:	01c02074 	movhi	r7,129
  805b30:	1a87c83a 	sub	r3,r3,r10
  805b34:	1a400217 	ldw	r9,8(r3)
  805b38:	39c5d504 	addi	r7,r7,5972
  805b3c:	1285883a 	add	r2,r2,r10
  805b40:	4200004c 	andi	r8,r8,1
  805b44:	49c04c26 	beq	r9,r7,805c78 <_free_r+0x1b4>
  805b48:	1a800317 	ldw	r10,12(r3)
  805b4c:	4a800315 	stw	r10,12(r9)
  805b50:	52400215 	stw	r9,8(r10)
  805b54:	40007126 	beq	r8,zero,805d1c <_free_r+0x258>
  805b58:	11400054 	ori	r5,r2,1
  805b5c:	19400115 	stw	r5,4(r3)
  805b60:	30800015 	stw	r2,0(r6)
  805b64:	11408028 	cmpgeui	r5,r2,512
  805b68:	28002c1e 	bne	r5,zero,805c1c <_free_r+0x158>
  805b6c:	100ad0fa 	srli	r5,r2,3
  805b70:	100cd17a 	srli	r6,r2,5
  805b74:	00800044 	movi	r2,1
  805b78:	29400044 	addi	r5,r5,1
  805b7c:	280a90fa 	slli	r5,r5,3
  805b80:	21c00117 	ldw	r7,4(r4)
  805b84:	1184983a 	sll	r2,r2,r6
  805b88:	214b883a 	add	r5,r4,r5
  805b8c:	29800017 	ldw	r6,0(r5)
  805b90:	11c4b03a 	or	r2,r2,r7
  805b94:	29fffe04 	addi	r7,r5,-8
  805b98:	19c00315 	stw	r7,12(r3)
  805b9c:	19800215 	stw	r6,8(r3)
  805ba0:	20800115 	stw	r2,4(r4)
  805ba4:	28c00015 	stw	r3,0(r5)
  805ba8:	30c00315 	stw	r3,12(r6)
  805bac:	8809883a 	mov	r4,r17
  805bb0:	dfc00217 	ldw	ra,8(sp)
  805bb4:	dc400117 	ldw	r17,4(sp)
  805bb8:	dc000017 	ldw	r16,0(sp)
  805bbc:	dec00304 	addi	sp,sp,12
  805bc0:	080ea2c1 	jmpi	80ea2c <__malloc_unlock>
  805bc4:	41c00117 	ldw	r7,4(r8)
  805bc8:	39c0004c 	andi	r7,r7,1
  805bcc:	38000e1e 	bne	r7,zero,805c08 <_free_r+0x144>
  805bd0:	01c02074 	movhi	r7,129
  805bd4:	1145883a 	add	r2,r2,r5
  805bd8:	39c5d504 	addi	r7,r7,5972
  805bdc:	31400217 	ldw	r5,8(r6)
  805be0:	12400054 	ori	r9,r2,1
  805be4:	1891883a 	add	r8,r3,r2
  805be8:	29c05226 	beq	r5,r7,805d34 <_free_r+0x270>
  805bec:	31800317 	ldw	r6,12(r6)
  805bf0:	29800315 	stw	r6,12(r5)
  805bf4:	31400215 	stw	r5,8(r6)
  805bf8:	1a400115 	stw	r9,4(r3)
  805bfc:	40800015 	stw	r2,0(r8)
  805c00:	003fd806 	br	805b64 <_free_r+0xa0>
  805c04:	f800283a 	ret
  805c08:	11400054 	ori	r5,r2,1
  805c0c:	817fff15 	stw	r5,-4(r16)
  805c10:	30800015 	stw	r2,0(r6)
  805c14:	11408028 	cmpgeui	r5,r2,512
  805c18:	283fd426 	beq	r5,zero,805b6c <_free_r+0xa8>
  805c1c:	100ad27a 	srli	r5,r2,9
  805c20:	29800168 	cmpgeui	r6,r5,5
  805c24:	3000341e 	bne	r6,zero,805cf8 <_free_r+0x234>
  805c28:	100ad1ba 	srli	r5,r2,6
  805c2c:	29800e44 	addi	r6,r5,57
  805c30:	300c90fa 	slli	r6,r6,3
  805c34:	29c00e04 	addi	r7,r5,56
  805c38:	218d883a 	add	r6,r4,r6
  805c3c:	31400017 	ldw	r5,0(r6)
  805c40:	31bffe04 	addi	r6,r6,-8
  805c44:	31404226 	beq	r6,r5,805d50 <_free_r+0x28c>
  805c48:	01ffff04 	movi	r7,-4
  805c4c:	29000117 	ldw	r4,4(r5)
  805c50:	21c8703a 	and	r4,r4,r7
  805c54:	1100022e 	bgeu	r2,r4,805c60 <_free_r+0x19c>
  805c58:	29400217 	ldw	r5,8(r5)
  805c5c:	317ffb1e 	bne	r6,r5,805c4c <_free_r+0x188>
  805c60:	29800317 	ldw	r6,12(r5)
  805c64:	19800315 	stw	r6,12(r3)
  805c68:	19400215 	stw	r5,8(r3)
  805c6c:	30c00215 	stw	r3,8(r6)
  805c70:	28c00315 	stw	r3,12(r5)
  805c74:	003fcd06 	br	805bac <_free_r+0xe8>
  805c78:	40004d1e 	bne	r8,zero,805db0 <_free_r+0x2ec>
  805c7c:	31000317 	ldw	r4,12(r6)
  805c80:	31800217 	ldw	r6,8(r6)
  805c84:	2885883a 	add	r2,r5,r2
  805c88:	11400054 	ori	r5,r2,1
  805c8c:	31000315 	stw	r4,12(r6)
  805c90:	21800215 	stw	r6,8(r4)
  805c94:	19400115 	stw	r5,4(r3)
  805c98:	1887883a 	add	r3,r3,r2
  805c9c:	18800015 	stw	r2,0(r3)
  805ca0:	003fc206 	br	805bac <_free_r+0xe8>
  805ca4:	39c0004c 	andi	r7,r7,1
  805ca8:	1145883a 	add	r2,r2,r5
  805cac:	3800071e 	bne	r7,zero,805ccc <_free_r+0x208>
  805cb0:	81fffe17 	ldw	r7,-8(r16)
  805cb4:	19c7c83a 	sub	r3,r3,r7
  805cb8:	19400317 	ldw	r5,12(r3)
  805cbc:	19800217 	ldw	r6,8(r3)
  805cc0:	11c5883a 	add	r2,r2,r7
  805cc4:	31400315 	stw	r5,12(r6)
  805cc8:	29800215 	stw	r6,8(r5)
  805ccc:	01402074 	movhi	r5,129
  805cd0:	11800054 	ori	r6,r2,1
  805cd4:	294bba17 	ldw	r5,12008(r5)
  805cd8:	19800115 	stw	r6,4(r3)
  805cdc:	20c00215 	stw	r3,8(r4)
  805ce0:	117fb236 	bltu	r2,r5,805bac <_free_r+0xe8>
  805ce4:	00802074 	movhi	r2,129
  805ce8:	1152c217 	ldw	r5,19208(r2)
  805cec:	8809883a 	mov	r4,r17
  805cf0:	08059a80 	call	8059a8 <_malloc_trim_r>
  805cf4:	003fad06 	br	805bac <_free_r+0xe8>
  805cf8:	29800568 	cmpgeui	r6,r5,21
  805cfc:	30000926 	beq	r6,zero,805d24 <_free_r+0x260>
  805d00:	29801568 	cmpgeui	r6,r5,85
  805d04:	3000191e 	bne	r6,zero,805d6c <_free_r+0x2a8>
  805d08:	100ad33a 	srli	r5,r2,12
  805d0c:	29801bc4 	addi	r6,r5,111
  805d10:	300c90fa 	slli	r6,r6,3
  805d14:	29c01b84 	addi	r7,r5,110
  805d18:	003fc706 	br	805c38 <_free_r+0x174>
  805d1c:	1145883a 	add	r2,r2,r5
  805d20:	003fae06 	br	805bdc <_free_r+0x118>
  805d24:	29801704 	addi	r6,r5,92
  805d28:	300c90fa 	slli	r6,r6,3
  805d2c:	29c016c4 	addi	r7,r5,91
  805d30:	003fc106 	br	805c38 <_free_r+0x174>
  805d34:	20c00515 	stw	r3,20(r4)
  805d38:	20c00415 	stw	r3,16(r4)
  805d3c:	19c00315 	stw	r7,12(r3)
  805d40:	19c00215 	stw	r7,8(r3)
  805d44:	1a400115 	stw	r9,4(r3)
  805d48:	40800015 	stw	r2,0(r8)
  805d4c:	003f9706 	br	805bac <_free_r+0xe8>
  805d50:	380fd0ba 	srai	r7,r7,2
  805d54:	00800044 	movi	r2,1
  805d58:	22000117 	ldw	r8,4(r4)
  805d5c:	11ce983a 	sll	r7,r2,r7
  805d60:	3a0eb03a 	or	r7,r7,r8
  805d64:	21c00115 	stw	r7,4(r4)
  805d68:	003fbe06 	br	805c64 <_free_r+0x1a0>
  805d6c:	29805568 	cmpgeui	r6,r5,341
  805d70:	3000051e 	bne	r6,zero,805d88 <_free_r+0x2c4>
  805d74:	100ad3fa 	srli	r5,r2,15
  805d78:	29801e04 	addi	r6,r5,120
  805d7c:	300c90fa 	slli	r6,r6,3
  805d80:	29c01dc4 	addi	r7,r5,119
  805d84:	003fac06 	br	805c38 <_free_r+0x174>
  805d88:	29415568 	cmpgeui	r5,r5,1365
  805d8c:	2800051e 	bne	r5,zero,805da4 <_free_r+0x2e0>
  805d90:	100ad4ba 	srli	r5,r2,18
  805d94:	29801f44 	addi	r6,r5,125
  805d98:	300c90fa 	slli	r6,r6,3
  805d9c:	29c01f04 	addi	r7,r5,124
  805da0:	003fa506 	br	805c38 <_free_r+0x174>
  805da4:	0180fe04 	movi	r6,1016
  805da8:	01c01f84 	movi	r7,126
  805dac:	003fa206 	br	805c38 <_free_r+0x174>
  805db0:	11000054 	ori	r4,r2,1
  805db4:	19000115 	stw	r4,4(r3)
  805db8:	30800015 	stw	r2,0(r6)
  805dbc:	003f7b06 	br	805bac <_free_r+0xe8>

00805dc0 <__sfvwrite_r>:
  805dc0:	30800217 	ldw	r2,8(r6)
  805dc4:	1000c826 	beq	r2,zero,8060e8 <__sfvwrite_r+0x328>
  805dc8:	29c0030b 	ldhu	r7,12(r5)
  805dcc:	defff404 	addi	sp,sp,-48
  805dd0:	dd800815 	stw	r22,32(sp)
  805dd4:	dd400715 	stw	r21,28(sp)
  805dd8:	dc000215 	stw	r16,8(sp)
  805ddc:	dfc00b15 	stw	ra,44(sp)
  805de0:	df000a15 	stw	fp,40(sp)
  805de4:	ddc00915 	stw	r23,36(sp)
  805de8:	dd000615 	stw	r20,24(sp)
  805dec:	dcc00515 	stw	r19,20(sp)
  805df0:	dc800415 	stw	r18,16(sp)
  805df4:	dc400315 	stw	r17,12(sp)
  805df8:	3880020c 	andi	r2,r7,8
  805dfc:	302d883a 	mov	r22,r6
  805e00:	202b883a 	mov	r21,r4
  805e04:	2821883a 	mov	r16,r5
  805e08:	10002226 	beq	r2,zero,805e94 <__sfvwrite_r+0xd4>
  805e0c:	28800417 	ldw	r2,16(r5)
  805e10:	10002026 	beq	r2,zero,805e94 <__sfvwrite_r+0xd4>
  805e14:	3880008c 	andi	r2,r7,2
  805e18:	b4400017 	ldw	r17,0(r22)
  805e1c:	10002526 	beq	r2,zero,805eb4 <__sfvwrite_r+0xf4>
  805e20:	80800917 	ldw	r2,36(r16)
  805e24:	81400717 	ldw	r5,28(r16)
  805e28:	05200034 	movhi	r20,32768
  805e2c:	0027883a 	mov	r19,zero
  805e30:	0025883a 	mov	r18,zero
  805e34:	a53f0004 	addi	r20,r20,-1024
  805e38:	980d883a 	mov	r6,r19
  805e3c:	a809883a 	mov	r4,r21
  805e40:	90001026 	beq	r18,zero,805e84 <__sfvwrite_r+0xc4>
  805e44:	900f883a 	mov	r7,r18
  805e48:	a480012e 	bgeu	r20,r18,805e50 <__sfvwrite_r+0x90>
  805e4c:	a00f883a 	mov	r7,r20
  805e50:	103ee83a 	callr	r2
  805e54:	00809f0e 	bge	zero,r2,8060d4 <__sfvwrite_r+0x314>
  805e58:	b1000217 	ldw	r4,8(r22)
  805e5c:	98a7883a 	add	r19,r19,r2
  805e60:	90a5c83a 	sub	r18,r18,r2
  805e64:	2085c83a 	sub	r2,r4,r2
  805e68:	b0800215 	stw	r2,8(r22)
  805e6c:	10006326 	beq	r2,zero,805ffc <__sfvwrite_r+0x23c>
  805e70:	80800917 	ldw	r2,36(r16)
  805e74:	81400717 	ldw	r5,28(r16)
  805e78:	980d883a 	mov	r6,r19
  805e7c:	a809883a 	mov	r4,r21
  805e80:	903ff01e 	bne	r18,zero,805e44 <__sfvwrite_r+0x84>
  805e84:	8cc00017 	ldw	r19,0(r17)
  805e88:	8c800117 	ldw	r18,4(r17)
  805e8c:	8c400204 	addi	r17,r17,8
  805e90:	003fe906 	br	805e38 <__sfvwrite_r+0x78>
  805e94:	800b883a 	mov	r5,r16
  805e98:	a809883a 	mov	r4,r21
  805e9c:	08038d80 	call	8038d8 <__swsetup_r>
  805ea0:	1000f81e 	bne	r2,zero,806284 <__sfvwrite_r+0x4c4>
  805ea4:	81c0030b 	ldhu	r7,12(r16)
  805ea8:	b4400017 	ldw	r17,0(r22)
  805eac:	3880008c 	andi	r2,r7,2
  805eb0:	103fdb1e 	bne	r2,zero,805e20 <__sfvwrite_r+0x60>
  805eb4:	3880004c 	andi	r2,r7,1
  805eb8:	84800217 	ldw	r18,8(r16)
  805ebc:	82000017 	ldw	r8,0(r16)
  805ec0:	10008b1e 	bne	r2,zero,8060f0 <__sfvwrite_r+0x330>
  805ec4:	00a00034 	movhi	r2,32768
  805ec8:	10bfff84 	addi	r2,r2,-2
  805ecc:	00e00034 	movhi	r3,32768
  805ed0:	d8800015 	stw	r2,0(sp)
  805ed4:	18bfffc4 	addi	r2,r3,-1
  805ed8:	0039883a 	mov	fp,zero
  805edc:	0027883a 	mov	r19,zero
  805ee0:	d8800115 	stw	r2,4(sp)
  805ee4:	98004126 	beq	r19,zero,805fec <__sfvwrite_r+0x22c>
  805ee8:	3880800c 	andi	r2,r7,512
  805eec:	10009326 	beq	r2,zero,80613c <__sfvwrite_r+0x37c>
  805ef0:	902f883a 	mov	r23,r18
  805ef4:	9c80ba36 	bltu	r19,r18,8061e0 <__sfvwrite_r+0x420>
  805ef8:	3881200c 	andi	r2,r7,1152
  805efc:	10002626 	beq	r2,zero,805f98 <__sfvwrite_r+0x1d8>
  805f00:	81800517 	ldw	r6,20(r16)
  805f04:	81400417 	ldw	r5,16(r16)
  805f08:	98800044 	addi	r2,r19,1
  805f0c:	3189883a 	add	r4,r6,r6
  805f10:	2189883a 	add	r4,r4,r6
  805f14:	2028d7fa 	srli	r20,r4,31
  805f18:	4165c83a 	sub	r18,r8,r5
  805f1c:	1485883a 	add	r2,r2,r18
  805f20:	a109883a 	add	r4,r20,r4
  805f24:	2029d07a 	srai	r20,r4,1
  805f28:	a00d883a 	mov	r6,r20
  805f2c:	a080022e 	bgeu	r20,r2,805f38 <__sfvwrite_r+0x178>
  805f30:	1029883a 	mov	r20,r2
  805f34:	100d883a 	mov	r6,r2
  805f38:	39c1000c 	andi	r7,r7,1024
  805f3c:	3800c126 	beq	r7,zero,806244 <__sfvwrite_r+0x484>
  805f40:	a809883a 	mov	r4,r21
  805f44:	300b883a 	mov	r5,r6
  805f48:	08065c40 	call	8065c4 <_malloc_r>
  805f4c:	1009883a 	mov	r4,r2
  805f50:	1000c826 	beq	r2,zero,806274 <__sfvwrite_r+0x4b4>
  805f54:	81400417 	ldw	r5,16(r16)
  805f58:	900d883a 	mov	r6,r18
  805f5c:	0806e780 	call	806e78 <memcpy>
  805f60:	1009883a 	mov	r4,r2
  805f64:	8080030b 	ldhu	r2,12(r16)
  805f68:	00fedfc4 	movi	r3,-1153
  805f6c:	10c4703a 	and	r2,r2,r3
  805f70:	10802014 	ori	r2,r2,128
  805f74:	8080030d 	sth	r2,12(r16)
  805f78:	2491883a 	add	r8,r4,r18
  805f7c:	a485c83a 	sub	r2,r20,r18
  805f80:	81000415 	stw	r4,16(r16)
  805f84:	82000015 	stw	r8,0(r16)
  805f88:	85000515 	stw	r20,20(r16)
  805f8c:	9825883a 	mov	r18,r19
  805f90:	80800215 	stw	r2,8(r16)
  805f94:	982f883a 	mov	r23,r19
  805f98:	4009883a 	mov	r4,r8
  805f9c:	b80d883a 	mov	r6,r23
  805fa0:	e00b883a 	mov	r5,fp
  805fa4:	0806f780 	call	806f78 <memmove>
  805fa8:	81000217 	ldw	r4,8(r16)
  805fac:	80800017 	ldw	r2,0(r16)
  805fb0:	9829883a 	mov	r20,r19
  805fb4:	24a5c83a 	sub	r18,r4,r18
  805fb8:	15c5883a 	add	r2,r2,r23
  805fbc:	84800215 	stw	r18,8(r16)
  805fc0:	80800015 	stw	r2,0(r16)
  805fc4:	0027883a 	mov	r19,zero
  805fc8:	b0800217 	ldw	r2,8(r22)
  805fcc:	e539883a 	add	fp,fp,r20
  805fd0:	1529c83a 	sub	r20,r2,r20
  805fd4:	b5000215 	stw	r20,8(r22)
  805fd8:	a0000826 	beq	r20,zero,805ffc <__sfvwrite_r+0x23c>
  805fdc:	81c0030b 	ldhu	r7,12(r16)
  805fe0:	84800217 	ldw	r18,8(r16)
  805fe4:	82000017 	ldw	r8,0(r16)
  805fe8:	983fbf1e 	bne	r19,zero,805ee8 <__sfvwrite_r+0x128>
  805fec:	8f000017 	ldw	fp,0(r17)
  805ff0:	8cc00117 	ldw	r19,4(r17)
  805ff4:	8c400204 	addi	r17,r17,8
  805ff8:	003fba06 	br	805ee4 <__sfvwrite_r+0x124>
  805ffc:	0005883a 	mov	r2,zero
  806000:	dfc00b17 	ldw	ra,44(sp)
  806004:	df000a17 	ldw	fp,40(sp)
  806008:	ddc00917 	ldw	r23,36(sp)
  80600c:	dd800817 	ldw	r22,32(sp)
  806010:	dd400717 	ldw	r21,28(sp)
  806014:	dd000617 	ldw	r20,24(sp)
  806018:	dcc00517 	ldw	r19,20(sp)
  80601c:	dc800417 	ldw	r18,16(sp)
  806020:	dc400317 	ldw	r17,12(sp)
  806024:	dc000217 	ldw	r16,8(sp)
  806028:	dec00c04 	addi	sp,sp,48
  80602c:	f800283a 	ret
  806030:	e1c07316 	blt	fp,r7,806200 <__sfvwrite_r+0x440>
  806034:	80800917 	ldw	r2,36(r16)
  806038:	81400717 	ldw	r5,28(r16)
  80603c:	b80d883a 	mov	r6,r23
  806040:	a809883a 	mov	r4,r21
  806044:	103ee83a 	callr	r2
  806048:	1025883a 	mov	r18,r2
  80604c:	0080210e 	bge	zero,r2,8060d4 <__sfvwrite_r+0x314>
  806050:	a4a9c83a 	sub	r20,r20,r18
  806054:	a0006526 	beq	r20,zero,8061ec <__sfvwrite_r+0x42c>
  806058:	00800044 	movi	r2,1
  80605c:	b1800217 	ldw	r6,8(r22)
  806060:	bcaf883a 	add	r23,r23,r18
  806064:	9ca7c83a 	sub	r19,r19,r18
  806068:	34a5c83a 	sub	r18,r6,r18
  80606c:	b4800215 	stw	r18,8(r22)
  806070:	903fe226 	beq	r18,zero,805ffc <__sfvwrite_r+0x23c>
  806074:	84800217 	ldw	r18,8(r16)
  806078:	82000017 	ldw	r8,0(r16)
  80607c:	98002126 	beq	r19,zero,806104 <__sfvwrite_r+0x344>
  806080:	10002426 	beq	r2,zero,806114 <__sfvwrite_r+0x354>
  806084:	a005883a 	mov	r2,r20
  806088:	9839883a 	mov	fp,r19
  80608c:	14c0012e 	bgeu	r2,r19,806094 <__sfvwrite_r+0x2d4>
  806090:	1039883a 	mov	fp,r2
  806094:	80800417 	ldw	r2,16(r16)
  806098:	81c00517 	ldw	r7,20(r16)
  80609c:	123fe42e 	bgeu	r2,r8,806030 <__sfvwrite_r+0x270>
  8060a0:	3ca5883a 	add	r18,r7,r18
  8060a4:	973fe20e 	bge	r18,fp,806030 <__sfvwrite_r+0x270>
  8060a8:	b80b883a 	mov	r5,r23
  8060ac:	4009883a 	mov	r4,r8
  8060b0:	900d883a 	mov	r6,r18
  8060b4:	0806f780 	call	806f78 <memmove>
  8060b8:	80800017 	ldw	r2,0(r16)
  8060bc:	800b883a 	mov	r5,r16
  8060c0:	a809883a 	mov	r4,r21
  8060c4:	1485883a 	add	r2,r2,r18
  8060c8:	80800015 	stw	r2,0(r16)
  8060cc:	08055cc0 	call	8055cc <_fflush_r>
  8060d0:	103fdf26 	beq	r2,zero,806050 <__sfvwrite_r+0x290>
  8060d4:	8080030b 	ldhu	r2,12(r16)
  8060d8:	10801014 	ori	r2,r2,64
  8060dc:	8080030d 	sth	r2,12(r16)
  8060e0:	00bfffc4 	movi	r2,-1
  8060e4:	003fc606 	br	806000 <__sfvwrite_r+0x240>
  8060e8:	0005883a 	mov	r2,zero
  8060ec:	f800283a 	ret
  8060f0:	0027883a 	mov	r19,zero
  8060f4:	0029883a 	mov	r20,zero
  8060f8:	0005883a 	mov	r2,zero
  8060fc:	002f883a 	mov	r23,zero
  806100:	983fdf1e 	bne	r19,zero,806080 <__sfvwrite_r+0x2c0>
  806104:	8cc00117 	ldw	r19,4(r17)
  806108:	8dc00017 	ldw	r23,0(r17)
  80610c:	8c400204 	addi	r17,r17,8
  806110:	983ffc26 	beq	r19,zero,806104 <__sfvwrite_r+0x344>
  806114:	980d883a 	mov	r6,r19
  806118:	01400284 	movi	r5,10
  80611c:	b809883a 	mov	r4,r23
  806120:	da000015 	stw	r8,0(sp)
  806124:	0806da40 	call	806da4 <memchr>
  806128:	da000017 	ldw	r8,0(sp)
  80612c:	10004226 	beq	r2,zero,806238 <__sfvwrite_r+0x478>
  806130:	10800044 	addi	r2,r2,1
  806134:	15e9c83a 	sub	r20,r2,r23
  806138:	003fd206 	br	806084 <__sfvwrite_r+0x2c4>
  80613c:	80800417 	ldw	r2,16(r16)
  806140:	12001436 	bltu	r2,r8,806194 <__sfvwrite_r+0x3d4>
  806144:	85000517 	ldw	r20,20(r16)
  806148:	9d001236 	bltu	r19,r20,806194 <__sfvwrite_r+0x3d4>
  80614c:	d8800017 	ldw	r2,0(sp)
  806150:	14c0372e 	bgeu	r2,r19,806230 <__sfvwrite_r+0x470>
  806154:	d9000117 	ldw	r4,4(sp)
  806158:	a00b883a 	mov	r5,r20
  80615c:	080b8e00 	call	80b8e0 <__divsi3>
  806160:	a00b883a 	mov	r5,r20
  806164:	1009883a 	mov	r4,r2
  806168:	080150c0 	call	80150c <__mulsi3>
  80616c:	82000917 	ldw	r8,36(r16)
  806170:	81400717 	ldw	r5,28(r16)
  806174:	100f883a 	mov	r7,r2
  806178:	e00d883a 	mov	r6,fp
  80617c:	a809883a 	mov	r4,r21
  806180:	403ee83a 	callr	r8
  806184:	1029883a 	mov	r20,r2
  806188:	00bfd20e 	bge	zero,r2,8060d4 <__sfvwrite_r+0x314>
  80618c:	9d27c83a 	sub	r19,r19,r20
  806190:	003f8d06 	br	805fc8 <__sfvwrite_r+0x208>
  806194:	9029883a 	mov	r20,r18
  806198:	9c80012e 	bgeu	r19,r18,8061a0 <__sfvwrite_r+0x3e0>
  80619c:	9829883a 	mov	r20,r19
  8061a0:	4009883a 	mov	r4,r8
  8061a4:	a00d883a 	mov	r6,r20
  8061a8:	e00b883a 	mov	r5,fp
  8061ac:	0806f780 	call	806f78 <memmove>
  8061b0:	80800217 	ldw	r2,8(r16)
  8061b4:	81000017 	ldw	r4,0(r16)
  8061b8:	1505c83a 	sub	r2,r2,r20
  8061bc:	2509883a 	add	r4,r4,r20
  8061c0:	80800215 	stw	r2,8(r16)
  8061c4:	81000015 	stw	r4,0(r16)
  8061c8:	103ff01e 	bne	r2,zero,80618c <__sfvwrite_r+0x3cc>
  8061cc:	800b883a 	mov	r5,r16
  8061d0:	a809883a 	mov	r4,r21
  8061d4:	08055cc0 	call	8055cc <_fflush_r>
  8061d8:	103fec26 	beq	r2,zero,80618c <__sfvwrite_r+0x3cc>
  8061dc:	003fbd06 	br	8060d4 <__sfvwrite_r+0x314>
  8061e0:	9825883a 	mov	r18,r19
  8061e4:	982f883a 	mov	r23,r19
  8061e8:	003f6b06 	br	805f98 <__sfvwrite_r+0x1d8>
  8061ec:	800b883a 	mov	r5,r16
  8061f0:	a809883a 	mov	r4,r21
  8061f4:	08055cc0 	call	8055cc <_fflush_r>
  8061f8:	103f9826 	beq	r2,zero,80605c <__sfvwrite_r+0x29c>
  8061fc:	003fb506 	br	8060d4 <__sfvwrite_r+0x314>
  806200:	e00d883a 	mov	r6,fp
  806204:	b80b883a 	mov	r5,r23
  806208:	4009883a 	mov	r4,r8
  80620c:	0806f780 	call	806f78 <memmove>
  806210:	80800217 	ldw	r2,8(r16)
  806214:	81800017 	ldw	r6,0(r16)
  806218:	e025883a 	mov	r18,fp
  80621c:	1705c83a 	sub	r2,r2,fp
  806220:	370d883a 	add	r6,r6,fp
  806224:	80800215 	stw	r2,8(r16)
  806228:	81800015 	stw	r6,0(r16)
  80622c:	003f8806 	br	806050 <__sfvwrite_r+0x290>
  806230:	9809883a 	mov	r4,r19
  806234:	003fc806 	br	806158 <__sfvwrite_r+0x398>
  806238:	98800044 	addi	r2,r19,1
  80623c:	1029883a 	mov	r20,r2
  806240:	003f9106 	br	806088 <__sfvwrite_r+0x2c8>
  806244:	a809883a 	mov	r4,r21
  806248:	08082cc0 	call	8082cc <_realloc_r>
  80624c:	1009883a 	mov	r4,r2
  806250:	103f491e 	bne	r2,zero,805f78 <__sfvwrite_r+0x1b8>
  806254:	81400417 	ldw	r5,16(r16)
  806258:	a809883a 	mov	r4,r21
  80625c:	0805ac40 	call	805ac4 <_free_r>
  806260:	8080030b 	ldhu	r2,12(r16)
  806264:	00c00304 	movi	r3,12
  806268:	a8c00015 	stw	r3,0(r21)
  80626c:	10bfdfcc 	andi	r2,r2,65407
  806270:	003f9906 	br	8060d8 <__sfvwrite_r+0x318>
  806274:	00c00304 	movi	r3,12
  806278:	8080030b 	ldhu	r2,12(r16)
  80627c:	a8c00015 	stw	r3,0(r21)
  806280:	003f9506 	br	8060d8 <__sfvwrite_r+0x318>
  806284:	00bfffc4 	movi	r2,-1
  806288:	003f5d06 	br	806000 <__sfvwrite_r+0x240>

0080628c <_fwalk>:
  80628c:	defffa04 	addi	sp,sp,-24
  806290:	dd000415 	stw	r20,16(sp)
  806294:	dcc00315 	stw	r19,12(sp)
  806298:	dc800215 	stw	r18,8(sp)
  80629c:	dfc00515 	stw	ra,20(sp)
  8062a0:	dc400115 	stw	r17,4(sp)
  8062a4:	dc000015 	stw	r16,0(sp)
  8062a8:	2827883a 	mov	r19,r5
  8062ac:	2480b804 	addi	r18,r4,736
  8062b0:	0029883a 	mov	r20,zero
  8062b4:	94400117 	ldw	r17,4(r18)
  8062b8:	94000217 	ldw	r16,8(r18)
  8062bc:	8c7fffc4 	addi	r17,r17,-1
  8062c0:	88000d16 	blt	r17,zero,8062f8 <_fwalk+0x6c>
  8062c4:	8080030b 	ldhu	r2,12(r16)
  8062c8:	8c7fffc4 	addi	r17,r17,-1
  8062cc:	108000b0 	cmpltui	r2,r2,2
  8062d0:	1000061e 	bne	r2,zero,8062ec <_fwalk+0x60>
  8062d4:	8080038f 	ldh	r2,14(r16)
  8062d8:	8009883a 	mov	r4,r16
  8062dc:	10bfffe0 	cmpeqi	r2,r2,-1
  8062e0:	1000021e 	bne	r2,zero,8062ec <_fwalk+0x60>
  8062e4:	983ee83a 	callr	r19
  8062e8:	a0a8b03a 	or	r20,r20,r2
  8062ec:	88bfffd8 	cmpnei	r2,r17,-1
  8062f0:	84001a04 	addi	r16,r16,104
  8062f4:	103ff31e 	bne	r2,zero,8062c4 <_fwalk+0x38>
  8062f8:	94800017 	ldw	r18,0(r18)
  8062fc:	903fed1e 	bne	r18,zero,8062b4 <_fwalk+0x28>
  806300:	a005883a 	mov	r2,r20
  806304:	dfc00517 	ldw	ra,20(sp)
  806308:	dd000417 	ldw	r20,16(sp)
  80630c:	dcc00317 	ldw	r19,12(sp)
  806310:	dc800217 	ldw	r18,8(sp)
  806314:	dc400117 	ldw	r17,4(sp)
  806318:	dc000017 	ldw	r16,0(sp)
  80631c:	dec00604 	addi	sp,sp,24
  806320:	f800283a 	ret

00806324 <_fwalk_reent>:
  806324:	defff904 	addi	sp,sp,-28
  806328:	dd400515 	stw	r21,20(sp)
  80632c:	dd000415 	stw	r20,16(sp)
  806330:	dcc00315 	stw	r19,12(sp)
  806334:	dc800215 	stw	r18,8(sp)
  806338:	dfc00615 	stw	ra,24(sp)
  80633c:	dc400115 	stw	r17,4(sp)
  806340:	dc000015 	stw	r16,0(sp)
  806344:	202b883a 	mov	r21,r4
  806348:	2827883a 	mov	r19,r5
  80634c:	2480b804 	addi	r18,r4,736
  806350:	0029883a 	mov	r20,zero
  806354:	94400117 	ldw	r17,4(r18)
  806358:	94000217 	ldw	r16,8(r18)
  80635c:	8c7fffc4 	addi	r17,r17,-1
  806360:	88000e16 	blt	r17,zero,80639c <_fwalk_reent+0x78>
  806364:	8080030b 	ldhu	r2,12(r16)
  806368:	8c7fffc4 	addi	r17,r17,-1
  80636c:	108000b0 	cmpltui	r2,r2,2
  806370:	1000071e 	bne	r2,zero,806390 <_fwalk_reent+0x6c>
  806374:	8080038f 	ldh	r2,14(r16)
  806378:	800b883a 	mov	r5,r16
  80637c:	a809883a 	mov	r4,r21
  806380:	10bfffe0 	cmpeqi	r2,r2,-1
  806384:	1000021e 	bne	r2,zero,806390 <_fwalk_reent+0x6c>
  806388:	983ee83a 	callr	r19
  80638c:	a0a8b03a 	or	r20,r20,r2
  806390:	88bfffd8 	cmpnei	r2,r17,-1
  806394:	84001a04 	addi	r16,r16,104
  806398:	103ff21e 	bne	r2,zero,806364 <_fwalk_reent+0x40>
  80639c:	94800017 	ldw	r18,0(r18)
  8063a0:	903fec1e 	bne	r18,zero,806354 <_fwalk_reent+0x30>
  8063a4:	a005883a 	mov	r2,r20
  8063a8:	dfc00617 	ldw	ra,24(sp)
  8063ac:	dd400517 	ldw	r21,20(sp)
  8063b0:	dd000417 	ldw	r20,16(sp)
  8063b4:	dcc00317 	ldw	r19,12(sp)
  8063b8:	dc800217 	ldw	r18,8(sp)
  8063bc:	dc400117 	ldw	r17,4(sp)
  8063c0:	dc000017 	ldw	r16,0(sp)
  8063c4:	dec00704 	addi	sp,sp,28
  8063c8:	f800283a 	ret

008063cc <__localeconv_l>:
  8063cc:	20803c04 	addi	r2,r4,240
  8063d0:	f800283a 	ret

008063d4 <_localeconv_r>:
  8063d4:	00802074 	movhi	r2,129
  8063d8:	10871104 	addi	r2,r2,7236
  8063dc:	f800283a 	ret

008063e0 <localeconv>:
  8063e0:	00802074 	movhi	r2,129
  8063e4:	10871104 	addi	r2,r2,7236
  8063e8:	f800283a 	ret

008063ec <__swhatbuf_r>:
  8063ec:	deffea04 	addi	sp,sp,-88
  8063f0:	dc001215 	stw	r16,72(sp)
  8063f4:	2821883a 	mov	r16,r5
  8063f8:	2940038f 	ldh	r5,14(r5)
  8063fc:	dc801415 	stw	r18,80(sp)
  806400:	dc401315 	stw	r17,76(sp)
  806404:	dfc01515 	stw	ra,84(sp)
  806408:	3023883a 	mov	r17,r6
  80640c:	3825883a 	mov	r18,r7
  806410:	28001016 	blt	r5,zero,806454 <__swhatbuf_r+0x68>
  806414:	d80d883a 	mov	r6,sp
  806418:	080a41c0 	call	80a41c <_fstat_r>
  80641c:	10000d16 	blt	r2,zero,806454 <__swhatbuf_r+0x68>
  806420:	d8c00117 	ldw	r3,4(sp)
  806424:	00820004 	movi	r2,2048
  806428:	18fc000c 	andi	r3,r3,61440
  80642c:	18c80020 	cmpeqi	r3,r3,8192
  806430:	90c00015 	stw	r3,0(r18)
  806434:	00c10004 	movi	r3,1024
  806438:	88c00015 	stw	r3,0(r17)
  80643c:	dfc01517 	ldw	ra,84(sp)
  806440:	dc801417 	ldw	r18,80(sp)
  806444:	dc401317 	ldw	r17,76(sp)
  806448:	dc001217 	ldw	r16,72(sp)
  80644c:	dec01604 	addi	sp,sp,88
  806450:	f800283a 	ret
  806454:	8080030b 	ldhu	r2,12(r16)
  806458:	90000015 	stw	zero,0(r18)
  80645c:	1080200c 	andi	r2,r2,128
  806460:	10000426 	beq	r2,zero,806474 <__swhatbuf_r+0x88>
  806464:	00801004 	movi	r2,64
  806468:	88800015 	stw	r2,0(r17)
  80646c:	0005883a 	mov	r2,zero
  806470:	003ff206 	br	80643c <__swhatbuf_r+0x50>
  806474:	00810004 	movi	r2,1024
  806478:	88800015 	stw	r2,0(r17)
  80647c:	0005883a 	mov	r2,zero
  806480:	003fee06 	br	80643c <__swhatbuf_r+0x50>

00806484 <__smakebuf_r>:
  806484:	2880030b 	ldhu	r2,12(r5)
  806488:	defffa04 	addi	sp,sp,-24
  80648c:	dc000215 	stw	r16,8(sp)
  806490:	dfc00515 	stw	ra,20(sp)
  806494:	dc800415 	stw	r18,16(sp)
  806498:	dc400315 	stw	r17,12(sp)
  80649c:	1080008c 	andi	r2,r2,2
  8064a0:	2821883a 	mov	r16,r5
  8064a4:	10000b26 	beq	r2,zero,8064d4 <__smakebuf_r+0x50>
  8064a8:	288010c4 	addi	r2,r5,67
  8064ac:	28800015 	stw	r2,0(r5)
  8064b0:	28800415 	stw	r2,16(r5)
  8064b4:	00800044 	movi	r2,1
  8064b8:	28800515 	stw	r2,20(r5)
  8064bc:	dfc00517 	ldw	ra,20(sp)
  8064c0:	dc800417 	ldw	r18,16(sp)
  8064c4:	dc400317 	ldw	r17,12(sp)
  8064c8:	dc000217 	ldw	r16,8(sp)
  8064cc:	dec00604 	addi	sp,sp,24
  8064d0:	f800283a 	ret
  8064d4:	d9c00104 	addi	r7,sp,4
  8064d8:	d80d883a 	mov	r6,sp
  8064dc:	2023883a 	mov	r17,r4
  8064e0:	08063ec0 	call	8063ec <__swhatbuf_r>
  8064e4:	d9000117 	ldw	r4,4(sp)
  8064e8:	1025883a 	mov	r18,r2
  8064ec:	2000131e 	bne	r4,zero,80653c <__smakebuf_r+0xb8>
  8064f0:	d9400017 	ldw	r5,0(sp)
  8064f4:	8809883a 	mov	r4,r17
  8064f8:	08065c40 	call	8065c4 <_malloc_r>
  8064fc:	10001c26 	beq	r2,zero,806570 <__smakebuf_r+0xec>
  806500:	01002034 	movhi	r4,128
  806504:	21159704 	addi	r4,r4,22108
  806508:	80c0030b 	ldhu	r3,12(r16)
  80650c:	89000f15 	stw	r4,60(r17)
  806510:	80800015 	stw	r2,0(r16)
  806514:	80800415 	stw	r2,16(r16)
  806518:	d8800017 	ldw	r2,0(sp)
  80651c:	d9400117 	ldw	r5,4(sp)
  806520:	18c02014 	ori	r3,r3,128
  806524:	80c0030d 	sth	r3,12(r16)
  806528:	80800515 	stw	r2,20(r16)
  80652c:	28001d1e 	bne	r5,zero,8065a4 <__smakebuf_r+0x120>
  806530:	90c6b03a 	or	r3,r18,r3
  806534:	80c0030d 	sth	r3,12(r16)
  806538:	003fe006 	br	8064bc <__smakebuf_r+0x38>
  80653c:	8140038f 	ldh	r5,14(r16)
  806540:	8809883a 	mov	r4,r17
  806544:	080a47c0 	call	80a47c <_isatty_r>
  806548:	103fe926 	beq	r2,zero,8064f0 <__smakebuf_r+0x6c>
  80654c:	8080030b 	ldhu	r2,12(r16)
  806550:	80c010c4 	addi	r3,r16,67
  806554:	80c00015 	stw	r3,0(r16)
  806558:	10800054 	ori	r2,r2,1
  80655c:	8080030d 	sth	r2,12(r16)
  806560:	00800044 	movi	r2,1
  806564:	80c00415 	stw	r3,16(r16)
  806568:	80800515 	stw	r2,20(r16)
  80656c:	003fe006 	br	8064f0 <__smakebuf_r+0x6c>
  806570:	8080030b 	ldhu	r2,12(r16)
  806574:	10c0800c 	andi	r3,r2,512
  806578:	183fd01e 	bne	r3,zero,8064bc <__smakebuf_r+0x38>
  80657c:	00ffff04 	movi	r3,-4
  806580:	10c4703a 	and	r2,r2,r3
  806584:	10800094 	ori	r2,r2,2
  806588:	80c010c4 	addi	r3,r16,67
  80658c:	8080030d 	sth	r2,12(r16)
  806590:	00800044 	movi	r2,1
  806594:	80c00015 	stw	r3,0(r16)
  806598:	80c00415 	stw	r3,16(r16)
  80659c:	80800515 	stw	r2,20(r16)
  8065a0:	003fc606 	br	8064bc <__smakebuf_r+0x38>
  8065a4:	8140038f 	ldh	r5,14(r16)
  8065a8:	8809883a 	mov	r4,r17
  8065ac:	080a47c0 	call	80a47c <_isatty_r>
  8065b0:	80c0030b 	ldhu	r3,12(r16)
  8065b4:	103fde26 	beq	r2,zero,806530 <__smakebuf_r+0xac>
  8065b8:	18ffff0c 	andi	r3,r3,65532
  8065bc:	18c00054 	ori	r3,r3,1
  8065c0:	003fdb06 	br	806530 <__smakebuf_r+0xac>

008065c4 <_malloc_r>:
  8065c4:	defff604 	addi	sp,sp,-40
  8065c8:	dc400115 	stw	r17,4(sp)
  8065cc:	2c4002c4 	addi	r17,r5,11
  8065d0:	dc800215 	stw	r18,8(sp)
  8065d4:	dfc00915 	stw	ra,36(sp)
  8065d8:	df000815 	stw	fp,32(sp)
  8065dc:	ddc00715 	stw	r23,28(sp)
  8065e0:	dd800615 	stw	r22,24(sp)
  8065e4:	dd400515 	stw	r21,20(sp)
  8065e8:	dd000415 	stw	r20,16(sp)
  8065ec:	dcc00315 	stw	r19,12(sp)
  8065f0:	dc000015 	stw	r16,0(sp)
  8065f4:	888005e8 	cmpgeui	r2,r17,23
  8065f8:	2025883a 	mov	r18,r4
  8065fc:	10001b1e 	bne	r2,zero,80666c <_malloc_r+0xa8>
  806600:	29400468 	cmpgeui	r5,r5,17
  806604:	2800821e 	bne	r5,zero,806810 <_malloc_r+0x24c>
  806608:	080ea080 	call	80ea08 <__malloc_lock>
  80660c:	04400404 	movi	r17,16
  806610:	01c00084 	movi	r7,2
  806614:	00800604 	movi	r2,24
  806618:	04c02074 	movhi	r19,129
  80661c:	9cc5d304 	addi	r19,r19,5964
  806620:	9885883a 	add	r2,r19,r2
  806624:	14000117 	ldw	r16,4(r2)
  806628:	10fffe04 	addi	r3,r2,-8
  80662c:	80c08b26 	beq	r16,r3,80685c <_malloc_r+0x298>
  806630:	80800117 	ldw	r2,4(r16)
  806634:	81000317 	ldw	r4,12(r16)
  806638:	00ffff04 	movi	r3,-4
  80663c:	10c4703a 	and	r2,r2,r3
  806640:	81400217 	ldw	r5,8(r16)
  806644:	8085883a 	add	r2,r16,r2
  806648:	10c00117 	ldw	r3,4(r2)
  80664c:	29000315 	stw	r4,12(r5)
  806650:	21400215 	stw	r5,8(r4)
  806654:	18c00054 	ori	r3,r3,1
  806658:	10c00115 	stw	r3,4(r2)
  80665c:	9009883a 	mov	r4,r18
  806660:	080ea2c0 	call	80ea2c <__malloc_unlock>
  806664:	80800204 	addi	r2,r16,8
  806668:	00006c06 	br	80681c <_malloc_r+0x258>
  80666c:	00bffe04 	movi	r2,-8
  806670:	88a2703a 	and	r17,r17,r2
  806674:	88006616 	blt	r17,zero,806810 <_malloc_r+0x24c>
  806678:	89406536 	bltu	r17,r5,806810 <_malloc_r+0x24c>
  80667c:	080ea080 	call	80ea08 <__malloc_lock>
  806680:	88807e28 	cmpgeui	r2,r17,504
  806684:	10012226 	beq	r2,zero,806b10 <_malloc_r+0x54c>
  806688:	8804d27a 	srli	r2,r17,9
  80668c:	10006f26 	beq	r2,zero,80684c <_malloc_r+0x288>
  806690:	10c00168 	cmpgeui	r3,r2,5
  806694:	1800fe1e 	bne	r3,zero,806a90 <_malloc_r+0x4cc>
  806698:	8804d1ba 	srli	r2,r17,6
  80669c:	11c00e44 	addi	r7,r2,57
  8066a0:	380890fa 	slli	r4,r7,3
  8066a4:	12000e04 	addi	r8,r2,56
  8066a8:	04c02074 	movhi	r19,129
  8066ac:	9cc5d304 	addi	r19,r19,5964
  8066b0:	9909883a 	add	r4,r19,r4
  8066b4:	24000117 	ldw	r16,4(r4)
  8066b8:	213ffe04 	addi	r4,r4,-8
  8066bc:	24000b26 	beq	r4,r16,8066ec <_malloc_r+0x128>
  8066c0:	01bfff04 	movi	r6,-4
  8066c4:	00000306 	br	8066d4 <_malloc_r+0x110>
  8066c8:	1800d60e 	bge	r3,zero,806a24 <_malloc_r+0x460>
  8066cc:	84000317 	ldw	r16,12(r16)
  8066d0:	24000626 	beq	r4,r16,8066ec <_malloc_r+0x128>
  8066d4:	80800117 	ldw	r2,4(r16)
  8066d8:	1184703a 	and	r2,r2,r6
  8066dc:	1447c83a 	sub	r3,r2,r17
  8066e0:	19400408 	cmpgei	r5,r3,16
  8066e4:	283ff826 	beq	r5,zero,8066c8 <_malloc_r+0x104>
  8066e8:	400f883a 	mov	r7,r8
  8066ec:	9c000417 	ldw	r16,16(r19)
  8066f0:	02402074 	movhi	r9,129
  8066f4:	4a45d504 	addi	r9,r9,5972
  8066f8:	82405f26 	beq	r16,r9,806878 <_malloc_r+0x2b4>
  8066fc:	80c00117 	ldw	r3,4(r16)
  806700:	00bfff04 	movi	r2,-4
  806704:	1884703a 	and	r2,r3,r2
  806708:	1447c83a 	sub	r3,r2,r17
  80670c:	19000410 	cmplti	r4,r3,16
  806710:	20010a26 	beq	r4,zero,806b3c <_malloc_r+0x578>
  806714:	9a400515 	stw	r9,20(r19)
  806718:	9a400415 	stw	r9,16(r19)
  80671c:	1800ff0e 	bge	r3,zero,806b1c <_malloc_r+0x558>
  806720:	10c08028 	cmpgeui	r3,r2,512
  806724:	1800c11e 	bne	r3,zero,806a2c <_malloc_r+0x468>
  806728:	1006d0fa 	srli	r3,r2,3
  80672c:	1008d17a 	srli	r4,r2,5
  806730:	00800044 	movi	r2,1
  806734:	18c00044 	addi	r3,r3,1
  806738:	180690fa 	slli	r3,r3,3
  80673c:	99400117 	ldw	r5,4(r19)
  806740:	1104983a 	sll	r2,r2,r4
  806744:	98c7883a 	add	r3,r19,r3
  806748:	19000017 	ldw	r4,0(r3)
  80674c:	1144b03a 	or	r2,r2,r5
  806750:	197ffe04 	addi	r5,r3,-8
  806754:	81400315 	stw	r5,12(r16)
  806758:	81000215 	stw	r4,8(r16)
  80675c:	98800115 	stw	r2,4(r19)
  806760:	1c000015 	stw	r16,0(r3)
  806764:	24000315 	stw	r16,12(r4)
  806768:	3807d0ba 	srai	r3,r7,2
  80676c:	01000044 	movi	r4,1
  806770:	20c8983a 	sll	r4,r4,r3
  806774:	11004536 	bltu	r2,r4,80688c <_malloc_r+0x2c8>
  806778:	2086703a 	and	r3,r4,r2
  80677c:	18000a1e 	bne	r3,zero,8067a8 <_malloc_r+0x1e4>
  806780:	00ffff04 	movi	r3,-4
  806784:	2109883a 	add	r4,r4,r4
  806788:	38ce703a 	and	r7,r7,r3
  80678c:	2086703a 	and	r3,r4,r2
  806790:	39c00104 	addi	r7,r7,4
  806794:	1800041e 	bne	r3,zero,8067a8 <_malloc_r+0x1e4>
  806798:	2109883a 	add	r4,r4,r4
  80679c:	2086703a 	and	r3,r4,r2
  8067a0:	39c00104 	addi	r7,r7,4
  8067a4:	183ffc26 	beq	r3,zero,806798 <_malloc_r+0x1d4>
  8067a8:	02bfff04 	movi	r10,-4
  8067ac:	381690fa 	slli	r11,r7,3
  8067b0:	3819883a 	mov	r12,r7
  8067b4:	9ad7883a 	add	r11,r19,r11
  8067b8:	5811883a 	mov	r8,r11
  8067bc:	40800317 	ldw	r2,12(r8)
  8067c0:	4080bc26 	beq	r8,r2,806ab4 <_malloc_r+0x4f0>
  8067c4:	10c00117 	ldw	r3,4(r2)
  8067c8:	1021883a 	mov	r16,r2
  8067cc:	10800317 	ldw	r2,12(r2)
  8067d0:	1a86703a 	and	r3,r3,r10
  8067d4:	1c4bc83a 	sub	r5,r3,r17
  8067d8:	29800410 	cmplti	r6,r5,16
  8067dc:	3000ba26 	beq	r6,zero,806ac8 <_malloc_r+0x504>
  8067e0:	283ff716 	blt	r5,zero,8067c0 <_malloc_r+0x1fc>
  8067e4:	80c7883a 	add	r3,r16,r3
  8067e8:	19400117 	ldw	r5,4(r3)
  8067ec:	81800217 	ldw	r6,8(r16)
  8067f0:	9009883a 	mov	r4,r18
  8067f4:	29400054 	ori	r5,r5,1
  8067f8:	19400115 	stw	r5,4(r3)
  8067fc:	30800315 	stw	r2,12(r6)
  806800:	11800215 	stw	r6,8(r2)
  806804:	080ea2c0 	call	80ea2c <__malloc_unlock>
  806808:	80800204 	addi	r2,r16,8
  80680c:	00000306 	br	80681c <_malloc_r+0x258>
  806810:	00800304 	movi	r2,12
  806814:	90800015 	stw	r2,0(r18)
  806818:	0005883a 	mov	r2,zero
  80681c:	dfc00917 	ldw	ra,36(sp)
  806820:	df000817 	ldw	fp,32(sp)
  806824:	ddc00717 	ldw	r23,28(sp)
  806828:	dd800617 	ldw	r22,24(sp)
  80682c:	dd400517 	ldw	r21,20(sp)
  806830:	dd000417 	ldw	r20,16(sp)
  806834:	dcc00317 	ldw	r19,12(sp)
  806838:	dc800217 	ldw	r18,8(sp)
  80683c:	dc400117 	ldw	r17,4(sp)
  806840:	dc000017 	ldw	r16,0(sp)
  806844:	dec00a04 	addi	sp,sp,40
  806848:	f800283a 	ret
  80684c:	01008004 	movi	r4,512
  806850:	01c01004 	movi	r7,64
  806854:	02000fc4 	movi	r8,63
  806858:	003f9306 	br	8066a8 <_malloc_r+0xe4>
  80685c:	14000317 	ldw	r16,12(r2)
  806860:	39c00084 	addi	r7,r7,2
  806864:	143f721e 	bne	r2,r16,806630 <_malloc_r+0x6c>
  806868:	9c000417 	ldw	r16,16(r19)
  80686c:	02402074 	movhi	r9,129
  806870:	4a45d504 	addi	r9,r9,5972
  806874:	827fa11e 	bne	r16,r9,8066fc <_malloc_r+0x138>
  806878:	3807d0ba 	srai	r3,r7,2
  80687c:	01000044 	movi	r4,1
  806880:	98800117 	ldw	r2,4(r19)
  806884:	20c8983a 	sll	r4,r4,r3
  806888:	113fbb2e 	bgeu	r2,r4,806778 <_malloc_r+0x1b4>
  80688c:	9c000217 	ldw	r16,8(r19)
  806890:	00bfff04 	movi	r2,-4
  806894:	85400117 	ldw	r21,4(r16)
  806898:	a8ac703a 	and	r22,r21,r2
  80689c:	b4400336 	bltu	r22,r17,8068ac <_malloc_r+0x2e8>
  8068a0:	b445c83a 	sub	r2,r22,r17
  8068a4:	10c00408 	cmpgei	r3,r2,16
  8068a8:	1800541e 	bne	r3,zero,8069fc <_malloc_r+0x438>
  8068ac:	00802074 	movhi	r2,129
  8068b0:	108bb917 	ldw	r2,12004(r2)
  8068b4:	00c02074 	movhi	r3,129
  8068b8:	1d52c217 	ldw	r21,19208(r3)
  8068bc:	10bfffd8 	cmpnei	r2,r2,-1
  8068c0:	85b9883a 	add	fp,r16,r22
  8068c4:	8d6b883a 	add	r21,r17,r21
  8068c8:	1000d626 	beq	r2,zero,806c24 <_malloc_r+0x660>
  8068cc:	ad4403c4 	addi	r21,r21,4111
  8068d0:	00bc0004 	movi	r2,-4096
  8068d4:	a8aa703a 	and	r21,r21,r2
  8068d8:	a80b883a 	mov	r5,r21
  8068dc:	9009883a 	mov	r4,r18
  8068e0:	08088300 	call	808830 <_sbrk_r>
  8068e4:	102f883a 	mov	r23,r2
  8068e8:	10bfffd8 	cmpnei	r2,r2,-1
  8068ec:	1000a826 	beq	r2,zero,806b90 <_malloc_r+0x5cc>
  8068f0:	bf00a636 	bltu	r23,fp,806b8c <_malloc_r+0x5c8>
  8068f4:	00802074 	movhi	r2,129
  8068f8:	1512cc17 	ldw	r20,19248(r2)
  8068fc:	ad29883a 	add	r20,r21,r20
  806900:	1512cc15 	stw	r20,19248(r2)
  806904:	a007883a 	mov	r3,r20
  806908:	e5c0ec26 	beq	fp,r23,806cbc <_malloc_r+0x6f8>
  80690c:	00802074 	movhi	r2,129
  806910:	108bb917 	ldw	r2,12004(r2)
  806914:	10bfffd8 	cmpnei	r2,r2,-1
  806918:	1000ef26 	beq	r2,zero,806cd8 <_malloc_r+0x714>
  80691c:	bf39c83a 	sub	fp,r23,fp
  806920:	e0c7883a 	add	r3,fp,r3
  806924:	00802074 	movhi	r2,129
  806928:	10d2cc15 	stw	r3,19248(r2)
  80692c:	bf0001cc 	andi	fp,r23,7
  806930:	e000c526 	beq	fp,zero,806c48 <_malloc_r+0x684>
  806934:	bf2fc83a 	sub	r23,r23,fp
  806938:	bdc00204 	addi	r23,r23,8
  80693c:	05040204 	movi	r20,4104
  806940:	a729c83a 	sub	r20,r20,fp
  806944:	bd6b883a 	add	r21,r23,r21
  806948:	a569c83a 	sub	r20,r20,r21
  80694c:	a503ffcc 	andi	r20,r20,4095
  806950:	a00b883a 	mov	r5,r20
  806954:	9009883a 	mov	r4,r18
  806958:	08088300 	call	808830 <_sbrk_r>
  80695c:	10ffffe0 	cmpeqi	r3,r2,-1
  806960:	1800f31e 	bne	r3,zero,806d30 <_malloc_r+0x76c>
  806964:	15c5c83a 	sub	r2,r2,r23
  806968:	152b883a 	add	r21,r2,r20
  80696c:	00802074 	movhi	r2,129
  806970:	1152cc17 	ldw	r5,19248(r2)
  806974:	9dc00215 	stw	r23,8(r19)
  806978:	ad400054 	ori	r21,r21,1
  80697c:	a169883a 	add	r20,r20,r5
  806980:	1512cc15 	stw	r20,19248(r2)
  806984:	bd400115 	stw	r21,4(r23)
  806988:	84c0d626 	beq	r16,r19,806ce4 <_malloc_r+0x720>
  80698c:	b0800428 	cmpgeui	r2,r22,16
  806990:	1000d626 	beq	r2,zero,806cec <_malloc_r+0x728>
  806994:	80c00117 	ldw	r3,4(r16)
  806998:	013ffe04 	movi	r4,-8
  80699c:	b0bffd04 	addi	r2,r22,-12
  8069a0:	1104703a 	and	r2,r2,r4
  8069a4:	18c0004c 	andi	r3,r3,1
  8069a8:	1886b03a 	or	r3,r3,r2
  8069ac:	80c00115 	stw	r3,4(r16)
  8069b0:	01000144 	movi	r4,5
  8069b4:	8087883a 	add	r3,r16,r2
  8069b8:	19000115 	stw	r4,4(r3)
  8069bc:	19000215 	stw	r4,8(r3)
  8069c0:	10800428 	cmpgeui	r2,r2,16
  8069c4:	1000df1e 	bne	r2,zero,806d44 <_malloc_r+0x780>
  8069c8:	bd400117 	ldw	r21,4(r23)
  8069cc:	b821883a 	mov	r16,r23
  8069d0:	00802074 	movhi	r2,129
  8069d4:	1092c117 	ldw	r2,19204(r2)
  8069d8:	1500022e 	bgeu	r2,r20,8069e4 <_malloc_r+0x420>
  8069dc:	00802074 	movhi	r2,129
  8069e0:	1512c115 	stw	r20,19204(r2)
  8069e4:	00802074 	movhi	r2,129
  8069e8:	1092c017 	ldw	r2,19200(r2)
  8069ec:	15006a2e 	bgeu	r2,r20,806b98 <_malloc_r+0x5d4>
  8069f0:	00802074 	movhi	r2,129
  8069f4:	1512c015 	stw	r20,19200(r2)
  8069f8:	00006706 	br	806b98 <_malloc_r+0x5d4>
  8069fc:	88c00054 	ori	r3,r17,1
  806a00:	80c00115 	stw	r3,4(r16)
  806a04:	8463883a 	add	r17,r16,r17
  806a08:	10800054 	ori	r2,r2,1
  806a0c:	9c400215 	stw	r17,8(r19)
  806a10:	88800115 	stw	r2,4(r17)
  806a14:	9009883a 	mov	r4,r18
  806a18:	080ea2c0 	call	80ea2c <__malloc_unlock>
  806a1c:	80800204 	addi	r2,r16,8
  806a20:	003f7e06 	br	80681c <_malloc_r+0x258>
  806a24:	81000317 	ldw	r4,12(r16)
  806a28:	003f0506 	br	806640 <_malloc_r+0x7c>
  806a2c:	1006d27a 	srli	r3,r2,9
  806a30:	19000168 	cmpgeui	r4,r3,5
  806a34:	20005026 	beq	r4,zero,806b78 <_malloc_r+0x5b4>
  806a38:	19000568 	cmpgeui	r4,r3,21
  806a3c:	20008c1e 	bne	r4,zero,806c70 <_malloc_r+0x6ac>
  806a40:	19401704 	addi	r5,r3,92
  806a44:	280a90fa 	slli	r5,r5,3
  806a48:	190016c4 	addi	r4,r3,91
  806a4c:	994b883a 	add	r5,r19,r5
  806a50:	28c00017 	ldw	r3,0(r5)
  806a54:	297ffe04 	addi	r5,r5,-8
  806a58:	28c07426 	beq	r5,r3,806c2c <_malloc_r+0x668>
  806a5c:	01bfff04 	movi	r6,-4
  806a60:	19000117 	ldw	r4,4(r3)
  806a64:	2188703a 	and	r4,r4,r6
  806a68:	1100022e 	bgeu	r2,r4,806a74 <_malloc_r+0x4b0>
  806a6c:	18c00217 	ldw	r3,8(r3)
  806a70:	28fffb1e 	bne	r5,r3,806a60 <_malloc_r+0x49c>
  806a74:	19400317 	ldw	r5,12(r3)
  806a78:	98800117 	ldw	r2,4(r19)
  806a7c:	81400315 	stw	r5,12(r16)
  806a80:	80c00215 	stw	r3,8(r16)
  806a84:	2c000215 	stw	r16,8(r5)
  806a88:	1c000315 	stw	r16,12(r3)
  806a8c:	003f3606 	br	806768 <_malloc_r+0x1a4>
  806a90:	10c00568 	cmpgeui	r3,r2,21
  806a94:	18004a26 	beq	r3,zero,806bc0 <_malloc_r+0x5fc>
  806a98:	10c01568 	cmpgeui	r3,r2,85
  806a9c:	18007b1e 	bne	r3,zero,806c8c <_malloc_r+0x6c8>
  806aa0:	8804d33a 	srli	r2,r17,12
  806aa4:	11c01bc4 	addi	r7,r2,111
  806aa8:	380890fa 	slli	r4,r7,3
  806aac:	12001b84 	addi	r8,r2,110
  806ab0:	003efd06 	br	8066a8 <_malloc_r+0xe4>
  806ab4:	63000044 	addi	r12,r12,1
  806ab8:	608000cc 	andi	r2,r12,3
  806abc:	42000204 	addi	r8,r8,8
  806ac0:	103f3e1e 	bne	r2,zero,8067bc <_malloc_r+0x1f8>
  806ac4:	00004506 	br	806bdc <_malloc_r+0x618>
  806ac8:	81000217 	ldw	r4,8(r16)
  806acc:	89800054 	ori	r6,r17,1
  806ad0:	81800115 	stw	r6,4(r16)
  806ad4:	20800315 	stw	r2,12(r4)
  806ad8:	11000215 	stw	r4,8(r2)
  806adc:	8463883a 	add	r17,r16,r17
  806ae0:	9c400515 	stw	r17,20(r19)
  806ae4:	9c400415 	stw	r17,16(r19)
  806ae8:	28800054 	ori	r2,r5,1
  806aec:	88800115 	stw	r2,4(r17)
  806af0:	8a400315 	stw	r9,12(r17)
  806af4:	8a400215 	stw	r9,8(r17)
  806af8:	80c7883a 	add	r3,r16,r3
  806afc:	19400015 	stw	r5,0(r3)
  806b00:	9009883a 	mov	r4,r18
  806b04:	080ea2c0 	call	80ea2c <__malloc_unlock>
  806b08:	80800204 	addi	r2,r16,8
  806b0c:	003f4306 	br	80681c <_malloc_r+0x258>
  806b10:	880ed0fa 	srli	r7,r17,3
  806b14:	88800204 	addi	r2,r17,8
  806b18:	003ebf06 	br	806618 <_malloc_r+0x54>
  806b1c:	8085883a 	add	r2,r16,r2
  806b20:	10c00117 	ldw	r3,4(r2)
  806b24:	9009883a 	mov	r4,r18
  806b28:	18c00054 	ori	r3,r3,1
  806b2c:	10c00115 	stw	r3,4(r2)
  806b30:	080ea2c0 	call	80ea2c <__malloc_unlock>
  806b34:	80800204 	addi	r2,r16,8
  806b38:	003f3806 	br	80681c <_malloc_r+0x258>
  806b3c:	89000054 	ori	r4,r17,1
  806b40:	81000115 	stw	r4,4(r16)
  806b44:	8463883a 	add	r17,r16,r17
  806b48:	9c400515 	stw	r17,20(r19)
  806b4c:	9c400415 	stw	r17,16(r19)
  806b50:	19000054 	ori	r4,r3,1
  806b54:	89000115 	stw	r4,4(r17)
  806b58:	8085883a 	add	r2,r16,r2
  806b5c:	8a400315 	stw	r9,12(r17)
  806b60:	8a400215 	stw	r9,8(r17)
  806b64:	10c00015 	stw	r3,0(r2)
  806b68:	9009883a 	mov	r4,r18
  806b6c:	080ea2c0 	call	80ea2c <__malloc_unlock>
  806b70:	80800204 	addi	r2,r16,8
  806b74:	003f2906 	br	80681c <_malloc_r+0x258>
  806b78:	1006d1ba 	srli	r3,r2,6
  806b7c:	19400e44 	addi	r5,r3,57
  806b80:	280a90fa 	slli	r5,r5,3
  806b84:	19000e04 	addi	r4,r3,56
  806b88:	003fb006 	br	806a4c <_malloc_r+0x488>
  806b8c:	84c04626 	beq	r16,r19,806ca8 <_malloc_r+0x6e4>
  806b90:	9c000217 	ldw	r16,8(r19)
  806b94:	85400117 	ldw	r21,4(r16)
  806b98:	00bfff04 	movi	r2,-4
  806b9c:	a8aa703a 	and	r21,r21,r2
  806ba0:	ac45c83a 	sub	r2,r21,r17
  806ba4:	ac400236 	bltu	r21,r17,806bb0 <_malloc_r+0x5ec>
  806ba8:	10c00408 	cmpgei	r3,r2,16
  806bac:	183f931e 	bne	r3,zero,8069fc <_malloc_r+0x438>
  806bb0:	9009883a 	mov	r4,r18
  806bb4:	080ea2c0 	call	80ea2c <__malloc_unlock>
  806bb8:	0005883a 	mov	r2,zero
  806bbc:	003f1706 	br	80681c <_malloc_r+0x258>
  806bc0:	11c01704 	addi	r7,r2,92
  806bc4:	380890fa 	slli	r4,r7,3
  806bc8:	120016c4 	addi	r8,r2,91
  806bcc:	003eb606 	br	8066a8 <_malloc_r+0xe4>
  806bd0:	58800217 	ldw	r2,8(r11)
  806bd4:	39ffffc4 	addi	r7,r7,-1
  806bd8:	12c0701e 	bne	r2,r11,806d9c <_malloc_r+0x7d8>
  806bdc:	388000cc 	andi	r2,r7,3
  806be0:	5afffe04 	addi	r11,r11,-8
  806be4:	103ffa1e 	bne	r2,zero,806bd0 <_malloc_r+0x60c>
  806be8:	98c00117 	ldw	r3,4(r19)
  806bec:	0104303a 	nor	r2,zero,r4
  806bf0:	10c4703a 	and	r2,r2,r3
  806bf4:	98800115 	stw	r2,4(r19)
  806bf8:	2109883a 	add	r4,r4,r4
  806bfc:	113f2336 	bltu	r2,r4,80688c <_malloc_r+0x2c8>
  806c00:	203f2226 	beq	r4,zero,80688c <_malloc_r+0x2c8>
  806c04:	2086703a 	and	r3,r4,r2
  806c08:	1800041e 	bne	r3,zero,806c1c <_malloc_r+0x658>
  806c0c:	2109883a 	add	r4,r4,r4
  806c10:	2086703a 	and	r3,r4,r2
  806c14:	63000104 	addi	r12,r12,4
  806c18:	183ffc26 	beq	r3,zero,806c0c <_malloc_r+0x648>
  806c1c:	600f883a 	mov	r7,r12
  806c20:	003ee206 	br	8067ac <_malloc_r+0x1e8>
  806c24:	ad400404 	addi	r21,r21,16
  806c28:	003f2b06 	br	8068d8 <_malloc_r+0x314>
  806c2c:	2009d0ba 	srai	r4,r4,2
  806c30:	00800044 	movi	r2,1
  806c34:	99800117 	ldw	r6,4(r19)
  806c38:	1104983a 	sll	r2,r2,r4
  806c3c:	1184b03a 	or	r2,r2,r6
  806c40:	98800115 	stw	r2,4(r19)
  806c44:	003f8d06 	br	806a7c <_malloc_r+0x4b8>
  806c48:	bd69883a 	add	r20,r23,r21
  806c4c:	0529c83a 	sub	r20,zero,r20
  806c50:	a503ffcc 	andi	r20,r20,4095
  806c54:	a00b883a 	mov	r5,r20
  806c58:	9009883a 	mov	r4,r18
  806c5c:	08088300 	call	808830 <_sbrk_r>
  806c60:	10ffffe0 	cmpeqi	r3,r2,-1
  806c64:	183f3f26 	beq	r3,zero,806964 <_malloc_r+0x3a0>
  806c68:	0029883a 	mov	r20,zero
  806c6c:	003f3f06 	br	80696c <_malloc_r+0x3a8>
  806c70:	19001568 	cmpgeui	r4,r3,85
  806c74:	2000201e 	bne	r4,zero,806cf8 <_malloc_r+0x734>
  806c78:	1006d33a 	srli	r3,r2,12
  806c7c:	19401bc4 	addi	r5,r3,111
  806c80:	280a90fa 	slli	r5,r5,3
  806c84:	19001b84 	addi	r4,r3,110
  806c88:	003f7006 	br	806a4c <_malloc_r+0x488>
  806c8c:	10c05568 	cmpgeui	r3,r2,341
  806c90:	1800201e 	bne	r3,zero,806d14 <_malloc_r+0x750>
  806c94:	8804d3fa 	srli	r2,r17,15
  806c98:	11c01e04 	addi	r7,r2,120
  806c9c:	380890fa 	slli	r4,r7,3
  806ca0:	12001dc4 	addi	r8,r2,119
  806ca4:	003e8006 	br	8066a8 <_malloc_r+0xe4>
  806ca8:	00802074 	movhi	r2,129
  806cac:	10d2cc17 	ldw	r3,19248(r2)
  806cb0:	a8c7883a 	add	r3,r21,r3
  806cb4:	10d2cc15 	stw	r3,19248(r2)
  806cb8:	003f1406 	br	80690c <_malloc_r+0x348>
  806cbc:	e083ffcc 	andi	r2,fp,4095
  806cc0:	103f121e 	bne	r2,zero,80690c <_malloc_r+0x348>
  806cc4:	9c000217 	ldw	r16,8(r19)
  806cc8:	b56b883a 	add	r21,r22,r21
  806ccc:	ad400054 	ori	r21,r21,1
  806cd0:	85400115 	stw	r21,4(r16)
  806cd4:	003f3e06 	br	8069d0 <_malloc_r+0x40c>
  806cd8:	00802074 	movhi	r2,129
  806cdc:	15cbb915 	stw	r23,12004(r2)
  806ce0:	003f1206 	br	80692c <_malloc_r+0x368>
  806ce4:	b821883a 	mov	r16,r23
  806ce8:	003f3906 	br	8069d0 <_malloc_r+0x40c>
  806cec:	00800044 	movi	r2,1
  806cf0:	b8800115 	stw	r2,4(r23)
  806cf4:	003fae06 	br	806bb0 <_malloc_r+0x5ec>
  806cf8:	19005568 	cmpgeui	r4,r3,341
  806cfc:	2000191e 	bne	r4,zero,806d64 <_malloc_r+0x7a0>
  806d00:	1006d3fa 	srli	r3,r2,15
  806d04:	19401e04 	addi	r5,r3,120
  806d08:	280a90fa 	slli	r5,r5,3
  806d0c:	19001dc4 	addi	r4,r3,119
  806d10:	003f4e06 	br	806a4c <_malloc_r+0x488>
  806d14:	10815568 	cmpgeui	r2,r2,1365
  806d18:	1000191e 	bne	r2,zero,806d80 <_malloc_r+0x7bc>
  806d1c:	8804d4ba 	srli	r2,r17,18
  806d20:	11c01f44 	addi	r7,r2,125
  806d24:	380890fa 	slli	r4,r7,3
  806d28:	12001f04 	addi	r8,r2,124
  806d2c:	003e5e06 	br	8066a8 <_malloc_r+0xe4>
  806d30:	e73ffe04 	addi	fp,fp,-8
  806d34:	af2b883a 	add	r21,r21,fp
  806d38:	adebc83a 	sub	r21,r21,r23
  806d3c:	0029883a 	mov	r20,zero
  806d40:	003f0a06 	br	80696c <_malloc_r+0x3a8>
  806d44:	81400204 	addi	r5,r16,8
  806d48:	9009883a 	mov	r4,r18
  806d4c:	0805ac40 	call	805ac4 <_free_r>
  806d50:	9c000217 	ldw	r16,8(r19)
  806d54:	00802074 	movhi	r2,129
  806d58:	1512cc17 	ldw	r20,19248(r2)
  806d5c:	85400117 	ldw	r21,4(r16)
  806d60:	003f1b06 	br	8069d0 <_malloc_r+0x40c>
  806d64:	18c15568 	cmpgeui	r3,r3,1365
  806d68:	1800091e 	bne	r3,zero,806d90 <_malloc_r+0x7cc>
  806d6c:	1006d4ba 	srli	r3,r2,18
  806d70:	19401f44 	addi	r5,r3,125
  806d74:	280a90fa 	slli	r5,r5,3
  806d78:	19001f04 	addi	r4,r3,124
  806d7c:	003f3306 	br	806a4c <_malloc_r+0x488>
  806d80:	0100fe04 	movi	r4,1016
  806d84:	01c01fc4 	movi	r7,127
  806d88:	02001f84 	movi	r8,126
  806d8c:	003e4606 	br	8066a8 <_malloc_r+0xe4>
  806d90:	0140fe04 	movi	r5,1016
  806d94:	01001f84 	movi	r4,126
  806d98:	003f2c06 	br	806a4c <_malloc_r+0x488>
  806d9c:	98800117 	ldw	r2,4(r19)
  806da0:	003f9506 	br	806bf8 <_malloc_r+0x634>

00806da4 <memchr>:
  806da4:	208000cc 	andi	r2,r4,3
  806da8:	280f883a 	mov	r7,r5
  806dac:	10000e26 	beq	r2,zero,806de8 <memchr+0x44>
  806db0:	30bfffc4 	addi	r2,r6,-1
  806db4:	30001726 	beq	r6,zero,806e14 <memchr+0x70>
  806db8:	29803fcc 	andi	r6,r5,255
  806dbc:	00000606 	br	806dd8 <memchr+0x34>
  806dc0:	21000044 	addi	r4,r4,1
  806dc4:	20c000cc 	andi	r3,r4,3
  806dc8:	18000826 	beq	r3,zero,806dec <memchr+0x48>
  806dcc:	10bfffc4 	addi	r2,r2,-1
  806dd0:	10ffffe0 	cmpeqi	r3,r2,-1
  806dd4:	18000f1e 	bne	r3,zero,806e14 <memchr+0x70>
  806dd8:	20c00003 	ldbu	r3,0(r4)
  806ddc:	19bff81e 	bne	r3,r6,806dc0 <memchr+0x1c>
  806de0:	2005883a 	mov	r2,r4
  806de4:	f800283a 	ret
  806de8:	3005883a 	mov	r2,r6
  806dec:	10c00128 	cmpgeui	r3,r2,4
  806df0:	18000a1e 	bne	r3,zero,806e1c <memchr+0x78>
  806df4:	10001f26 	beq	r2,zero,806e74 <memchr+0xd0>
  806df8:	2087883a 	add	r3,r4,r2
  806dfc:	39803fcc 	andi	r6,r7,255
  806e00:	2005883a 	mov	r2,r4
  806e04:	11000003 	ldbu	r4,0(r2)
  806e08:	21bff626 	beq	r4,r6,806de4 <memchr+0x40>
  806e0c:	10800044 	addi	r2,r2,1
  806e10:	18bffc1e 	bne	r3,r2,806e04 <memchr+0x60>
  806e14:	0005883a 	mov	r2,zero
  806e18:	f800283a 	ret
  806e1c:	2810923a 	slli	r8,r5,8
  806e20:	29403fcc 	andi	r5,r5,255
  806e24:	027fbff4 	movhi	r9,65279
  806e28:	423fffcc 	andi	r8,r8,65535
  806e2c:	414ab03a 	or	r5,r8,r5
  806e30:	2810943a 	slli	r8,r5,16
  806e34:	01a02074 	movhi	r6,32897
  806e38:	4a7fbfc4 	addi	r9,r9,-257
  806e3c:	4150b03a 	or	r8,r8,r5
  806e40:	31a02004 	addi	r6,r6,-32640
  806e44:	20c00017 	ldw	r3,0(r4)
  806e48:	40c6f03a 	xor	r3,r8,r3
  806e4c:	1a4b883a 	add	r5,r3,r9
  806e50:	00c6303a 	nor	r3,zero,r3
  806e54:	28c6703a 	and	r3,r5,r3
  806e58:	1986703a 	and	r3,r3,r6
  806e5c:	183fe61e 	bne	r3,zero,806df8 <memchr+0x54>
  806e60:	10bfff04 	addi	r2,r2,-4
  806e64:	10c00128 	cmpgeui	r3,r2,4
  806e68:	21000104 	addi	r4,r4,4
  806e6c:	183ff51e 	bne	r3,zero,806e44 <memchr+0xa0>
  806e70:	003fe006 	br	806df4 <memchr+0x50>
  806e74:	f800283a 	ret

00806e78 <memcpy>:
  806e78:	30c00430 	cmpltui	r3,r6,16
  806e7c:	2005883a 	mov	r2,r4
  806e80:	18002d1e 	bne	r3,zero,806f38 <memcpy+0xc0>
  806e84:	2906b03a 	or	r3,r5,r4
  806e88:	18c000cc 	andi	r3,r3,3
  806e8c:	1800351e 	bne	r3,zero,806f64 <memcpy+0xec>
  806e90:	32fffc04 	addi	r11,r6,-16
  806e94:	5816d13a 	srli	r11,r11,4
  806e98:	280f883a 	mov	r7,r5
  806e9c:	2007883a 	mov	r3,r4
  806ea0:	5ac00044 	addi	r11,r11,1
  806ea4:	5816913a 	slli	r11,r11,4
  806ea8:	22d5883a 	add	r10,r4,r11
  806eac:	39000117 	ldw	r4,4(r7)
  806eb0:	3a400017 	ldw	r9,0(r7)
  806eb4:	3a000217 	ldw	r8,8(r7)
  806eb8:	19000115 	stw	r4,4(r3)
  806ebc:	39000317 	ldw	r4,12(r7)
  806ec0:	1a400015 	stw	r9,0(r3)
  806ec4:	1a000215 	stw	r8,8(r3)
  806ec8:	19000315 	stw	r4,12(r3)
  806ecc:	18c00404 	addi	r3,r3,16
  806ed0:	39c00404 	addi	r7,r7,16
  806ed4:	50fff51e 	bne	r10,r3,806eac <memcpy+0x34>
  806ed8:	3100030c 	andi	r4,r6,12
  806edc:	2acb883a 	add	r5,r5,r11
  806ee0:	320003cc 	andi	r8,r6,15
  806ee4:	20002226 	beq	r4,zero,806f70 <memcpy+0xf8>
  806ee8:	280f883a 	mov	r7,r5
  806eec:	1813883a 	mov	r9,r3
  806ef0:	39c00104 	addi	r7,r7,4
  806ef4:	3abfff17 	ldw	r10,-4(r7)
  806ef8:	41c9c83a 	sub	r4,r8,r7
  806efc:	2909883a 	add	r4,r5,r4
  806f00:	4a800015 	stw	r10,0(r9)
  806f04:	21000128 	cmpgeui	r4,r4,4
  806f08:	4a400104 	addi	r9,r9,4
  806f0c:	203ff81e 	bne	r4,zero,806ef0 <memcpy+0x78>
  806f10:	413fff04 	addi	r4,r8,-4
  806f14:	2008d0ba 	srli	r4,r4,2
  806f18:	318000cc 	andi	r6,r6,3
  806f1c:	31ffffc4 	addi	r7,r6,-1
  806f20:	21000044 	addi	r4,r4,1
  806f24:	200890ba 	slli	r4,r4,2
  806f28:	1907883a 	add	r3,r3,r4
  806f2c:	290b883a 	add	r5,r5,r4
  806f30:	3000041e 	bne	r6,zero,806f44 <memcpy+0xcc>
  806f34:	f800283a 	ret
  806f38:	2007883a 	mov	r3,r4
  806f3c:	31ffffc4 	addi	r7,r6,-1
  806f40:	303ffc26 	beq	r6,zero,806f34 <memcpy+0xbc>
  806f44:	39c00044 	addi	r7,r7,1
  806f48:	19cf883a 	add	r7,r3,r7
  806f4c:	29800003 	ldbu	r6,0(r5)
  806f50:	18c00044 	addi	r3,r3,1
  806f54:	29400044 	addi	r5,r5,1
  806f58:	19bfffc5 	stb	r6,-1(r3)
  806f5c:	38fffb1e 	bne	r7,r3,806f4c <memcpy+0xd4>
  806f60:	f800283a 	ret
  806f64:	31ffffc4 	addi	r7,r6,-1
  806f68:	2007883a 	mov	r3,r4
  806f6c:	003ff506 	br	806f44 <memcpy+0xcc>
  806f70:	400d883a 	mov	r6,r8
  806f74:	003ff106 	br	806f3c <memcpy+0xc4>

00806f78 <memmove>:
  806f78:	2005883a 	mov	r2,r4
  806f7c:	29000a2e 	bgeu	r5,r4,806fa8 <memmove+0x30>
  806f80:	2989883a 	add	r4,r5,r6
  806f84:	1100082e 	bgeu	r2,r4,806fa8 <memmove+0x30>
  806f88:	1187883a 	add	r3,r2,r6
  806f8c:	30003e26 	beq	r6,zero,807088 <memmove+0x110>
  806f90:	217fffc3 	ldbu	r5,-1(r4)
  806f94:	18ffffc4 	addi	r3,r3,-1
  806f98:	213fffc4 	addi	r4,r4,-1
  806f9c:	19400005 	stb	r5,0(r3)
  806fa0:	10fffb1e 	bne	r2,r3,806f90 <memmove+0x18>
  806fa4:	f800283a 	ret
  806fa8:	30c00430 	cmpltui	r3,r6,16
  806fac:	18000b26 	beq	r3,zero,806fdc <memmove+0x64>
  806fb0:	1007883a 	mov	r3,r2
  806fb4:	31ffffc4 	addi	r7,r6,-1
  806fb8:	30003726 	beq	r6,zero,807098 <memmove+0x120>
  806fbc:	39c00044 	addi	r7,r7,1
  806fc0:	29cf883a 	add	r7,r5,r7
  806fc4:	29800003 	ldbu	r6,0(r5)
  806fc8:	29400044 	addi	r5,r5,1
  806fcc:	18c00044 	addi	r3,r3,1
  806fd0:	19bfffc5 	stb	r6,-1(r3)
  806fd4:	29fffb1e 	bne	r5,r7,806fc4 <memmove+0x4c>
  806fd8:	f800283a 	ret
  806fdc:	2886b03a 	or	r3,r5,r2
  806fe0:	18c000cc 	andi	r3,r3,3
  806fe4:	1800291e 	bne	r3,zero,80708c <memmove+0x114>
  806fe8:	327ffc04 	addi	r9,r6,-16
  806fec:	4812d13a 	srli	r9,r9,4
  806ff0:	280f883a 	mov	r7,r5
  806ff4:	1007883a 	mov	r3,r2
  806ff8:	4a400044 	addi	r9,r9,1
  806ffc:	4812913a 	slli	r9,r9,4
  807000:	1251883a 	add	r8,r2,r9
  807004:	39000017 	ldw	r4,0(r7)
  807008:	39c00404 	addi	r7,r7,16
  80700c:	18c00404 	addi	r3,r3,16
  807010:	193ffc15 	stw	r4,-16(r3)
  807014:	393ffd17 	ldw	r4,-12(r7)
  807018:	193ffd15 	stw	r4,-12(r3)
  80701c:	393ffe17 	ldw	r4,-8(r7)
  807020:	193ffe15 	stw	r4,-8(r3)
  807024:	393fff17 	ldw	r4,-4(r7)
  807028:	193fff15 	stw	r4,-4(r3)
  80702c:	40fff51e 	bne	r8,r3,807004 <memmove+0x8c>
  807030:	3100030c 	andi	r4,r6,12
  807034:	2a4b883a 	add	r5,r5,r9
  807038:	320003cc 	andi	r8,r6,15
  80703c:	20001726 	beq	r4,zero,80709c <memmove+0x124>
  807040:	2813883a 	mov	r9,r5
  807044:	180f883a 	mov	r7,r3
  807048:	4a800017 	ldw	r10,0(r9)
  80704c:	39c00104 	addi	r7,r7,4
  807050:	41c9c83a 	sub	r4,r8,r7
  807054:	1909883a 	add	r4,r3,r4
  807058:	21000128 	cmpgeui	r4,r4,4
  80705c:	3abfff15 	stw	r10,-4(r7)
  807060:	4a400104 	addi	r9,r9,4
  807064:	203ff81e 	bne	r4,zero,807048 <memmove+0xd0>
  807068:	413fff04 	addi	r4,r8,-4
  80706c:	2008d0ba 	srli	r4,r4,2
  807070:	318000cc 	andi	r6,r6,3
  807074:	21000044 	addi	r4,r4,1
  807078:	200890ba 	slli	r4,r4,2
  80707c:	1907883a 	add	r3,r3,r4
  807080:	290b883a 	add	r5,r5,r4
  807084:	003fcb06 	br	806fb4 <memmove+0x3c>
  807088:	f800283a 	ret
  80708c:	31ffffc4 	addi	r7,r6,-1
  807090:	1007883a 	mov	r3,r2
  807094:	003fc906 	br	806fbc <memmove+0x44>
  807098:	f800283a 	ret
  80709c:	400d883a 	mov	r6,r8
  8070a0:	003fc406 	br	806fb4 <memmove+0x3c>

008070a4 <memset>:
  8070a4:	20c000cc 	andi	r3,r4,3
  8070a8:	2005883a 	mov	r2,r4
  8070ac:	18003626 	beq	r3,zero,807188 <memset+0xe4>
  8070b0:	31ffffc4 	addi	r7,r6,-1
  8070b4:	30003326 	beq	r6,zero,807184 <memset+0xe0>
  8070b8:	2811883a 	mov	r8,r5
  8070bc:	2007883a 	mov	r3,r4
  8070c0:	00000306 	br	8070d0 <memset+0x2c>
  8070c4:	39ffffc4 	addi	r7,r7,-1
  8070c8:	39bfffe0 	cmpeqi	r6,r7,-1
  8070cc:	30002d1e 	bne	r6,zero,807184 <memset+0xe0>
  8070d0:	18c00044 	addi	r3,r3,1
  8070d4:	198000cc 	andi	r6,r3,3
  8070d8:	1a3fffc5 	stb	r8,-1(r3)
  8070dc:	303ff91e 	bne	r6,zero,8070c4 <memset+0x20>
  8070e0:	39000130 	cmpltui	r4,r7,4
  8070e4:	2000221e 	bne	r4,zero,807170 <memset+0xcc>
  8070e8:	29003fcc 	andi	r4,r5,255
  8070ec:	200c923a 	slli	r6,r4,8
  8070f0:	3a000430 	cmpltui	r8,r7,16
  8070f4:	3108b03a 	or	r4,r6,r4
  8070f8:	200c943a 	slli	r6,r4,16
  8070fc:	310cb03a 	or	r6,r6,r4
  807100:	40000e1e 	bne	r8,zero,80713c <memset+0x98>
  807104:	393ffc04 	addi	r4,r7,-16
  807108:	2008d13a 	srli	r4,r4,4
  80710c:	21000044 	addi	r4,r4,1
  807110:	2008913a 	slli	r4,r4,4
  807114:	1909883a 	add	r4,r3,r4
  807118:	19800015 	stw	r6,0(r3)
  80711c:	19800115 	stw	r6,4(r3)
  807120:	19800215 	stw	r6,8(r3)
  807124:	19800315 	stw	r6,12(r3)
  807128:	18c00404 	addi	r3,r3,16
  80712c:	20fffa1e 	bne	r4,r3,807118 <memset+0x74>
  807130:	3900030c 	andi	r4,r7,12
  807134:	39c003cc 	andi	r7,r7,15
  807138:	20000d26 	beq	r4,zero,807170 <memset+0xcc>
  80713c:	1811883a 	mov	r8,r3
  807140:	42000104 	addi	r8,r8,4
  807144:	3a09c83a 	sub	r4,r7,r8
  807148:	1909883a 	add	r4,r3,r4
  80714c:	21000128 	cmpgeui	r4,r4,4
  807150:	41bfff15 	stw	r6,-4(r8)
  807154:	203ffa1e 	bne	r4,zero,807140 <memset+0x9c>
  807158:	393fff04 	addi	r4,r7,-4
  80715c:	2008d0ba 	srli	r4,r4,2
  807160:	39c000cc 	andi	r7,r7,3
  807164:	21000044 	addi	r4,r4,1
  807168:	200890ba 	slli	r4,r4,2
  80716c:	1907883a 	add	r3,r3,r4
  807170:	38000426 	beq	r7,zero,807184 <memset+0xe0>
  807174:	19cf883a 	add	r7,r3,r7
  807178:	18c00044 	addi	r3,r3,1
  80717c:	197fffc5 	stb	r5,-1(r3)
  807180:	38fffd1e 	bne	r7,r3,807178 <memset+0xd4>
  807184:	f800283a 	ret
  807188:	2007883a 	mov	r3,r4
  80718c:	300f883a 	mov	r7,r6
  807190:	003fd306 	br	8070e0 <memset+0x3c>

00807194 <_Balloc>:
  807194:	20801317 	ldw	r2,76(r4)
  807198:	defffc04 	addi	sp,sp,-16
  80719c:	dc400115 	stw	r17,4(sp)
  8071a0:	dc000015 	stw	r16,0(sp)
  8071a4:	dfc00315 	stw	ra,12(sp)
  8071a8:	dc800215 	stw	r18,8(sp)
  8071ac:	2021883a 	mov	r16,r4
  8071b0:	2823883a 	mov	r17,r5
  8071b4:	10000e26 	beq	r2,zero,8071f0 <_Balloc+0x5c>
  8071b8:	880690ba 	slli	r3,r17,2
  8071bc:	10c7883a 	add	r3,r2,r3
  8071c0:	18800017 	ldw	r2,0(r3)
  8071c4:	10001126 	beq	r2,zero,80720c <_Balloc+0x78>
  8071c8:	11000017 	ldw	r4,0(r2)
  8071cc:	19000015 	stw	r4,0(r3)
  8071d0:	10000415 	stw	zero,16(r2)
  8071d4:	10000315 	stw	zero,12(r2)
  8071d8:	dfc00317 	ldw	ra,12(sp)
  8071dc:	dc800217 	ldw	r18,8(sp)
  8071e0:	dc400117 	ldw	r17,4(sp)
  8071e4:	dc000017 	ldw	r16,0(sp)
  8071e8:	dec00404 	addi	sp,sp,16
  8071ec:	f800283a 	ret
  8071f0:	01800844 	movi	r6,33
  8071f4:	01400104 	movi	r5,4
  8071f8:	0809ff80 	call	809ff8 <_calloc_r>
  8071fc:	80801315 	stw	r2,76(r16)
  807200:	103fed1e 	bne	r2,zero,8071b8 <_Balloc+0x24>
  807204:	0005883a 	mov	r2,zero
  807208:	003ff306 	br	8071d8 <_Balloc+0x44>
  80720c:	04800044 	movi	r18,1
  807210:	9464983a 	sll	r18,r18,r17
  807214:	01400044 	movi	r5,1
  807218:	8009883a 	mov	r4,r16
  80721c:	91800144 	addi	r6,r18,5
  807220:	300c90ba 	slli	r6,r6,2
  807224:	0809ff80 	call	809ff8 <_calloc_r>
  807228:	103ff626 	beq	r2,zero,807204 <_Balloc+0x70>
  80722c:	14400115 	stw	r17,4(r2)
  807230:	14800215 	stw	r18,8(r2)
  807234:	003fe606 	br	8071d0 <_Balloc+0x3c>

00807238 <_Bfree>:
  807238:	28000726 	beq	r5,zero,807258 <_Bfree+0x20>
  80723c:	28c00117 	ldw	r3,4(r5)
  807240:	20801317 	ldw	r2,76(r4)
  807244:	180690ba 	slli	r3,r3,2
  807248:	10c5883a 	add	r2,r2,r3
  80724c:	10c00017 	ldw	r3,0(r2)
  807250:	28c00015 	stw	r3,0(r5)
  807254:	11400015 	stw	r5,0(r2)
  807258:	f800283a 	ret

0080725c <__multadd>:
  80725c:	defff704 	addi	sp,sp,-36
  807260:	dc800215 	stw	r18,8(sp)
  807264:	2c800417 	ldw	r18,16(r5)
  807268:	ddc00715 	stw	r23,28(sp)
  80726c:	dd800615 	stw	r22,24(sp)
  807270:	dd400515 	stw	r21,20(sp)
  807274:	dd000415 	stw	r20,16(sp)
  807278:	dcc00315 	stw	r19,12(sp)
  80727c:	dc400115 	stw	r17,4(sp)
  807280:	dfc00815 	stw	ra,32(sp)
  807284:	dc000015 	stw	r16,0(sp)
  807288:	2827883a 	mov	r19,r5
  80728c:	2029883a 	mov	r20,r4
  807290:	302b883a 	mov	r21,r6
  807294:	3823883a 	mov	r17,r7
  807298:	2d800504 	addi	r22,r5,20
  80729c:	002f883a 	mov	r23,zero
  8072a0:	b4000017 	ldw	r16,0(r22)
  8072a4:	a80b883a 	mov	r5,r21
  8072a8:	b5800104 	addi	r22,r22,4
  8072ac:	813fffcc 	andi	r4,r16,65535
  8072b0:	080150c0 	call	80150c <__mulsi3>
  8072b4:	8008d43a 	srli	r4,r16,16
  8072b8:	a80b883a 	mov	r5,r21
  8072bc:	1461883a 	add	r16,r2,r17
  8072c0:	080150c0 	call	80150c <__mulsi3>
  8072c4:	800ed43a 	srli	r7,r16,16
  8072c8:	843fffcc 	andi	r16,r16,65535
  8072cc:	bdc00044 	addi	r23,r23,1
  8072d0:	11c5883a 	add	r2,r2,r7
  8072d4:	1006943a 	slli	r3,r2,16
  8072d8:	1022d43a 	srli	r17,r2,16
  8072dc:	1c21883a 	add	r16,r3,r16
  8072e0:	b43fff15 	stw	r16,-4(r22)
  8072e4:	bcbfee16 	blt	r23,r18,8072a0 <__multadd+0x44>
  8072e8:	88000826 	beq	r17,zero,80730c <__multadd+0xb0>
  8072ec:	98800217 	ldw	r2,8(r19)
  8072f0:	9080120e 	bge	r18,r2,80733c <__multadd+0xe0>
  8072f4:	90800144 	addi	r2,r18,5
  8072f8:	100490ba 	slli	r2,r2,2
  8072fc:	94800044 	addi	r18,r18,1
  807300:	9885883a 	add	r2,r19,r2
  807304:	14400015 	stw	r17,0(r2)
  807308:	9c800415 	stw	r18,16(r19)
  80730c:	9805883a 	mov	r2,r19
  807310:	dfc00817 	ldw	ra,32(sp)
  807314:	ddc00717 	ldw	r23,28(sp)
  807318:	dd800617 	ldw	r22,24(sp)
  80731c:	dd400517 	ldw	r21,20(sp)
  807320:	dd000417 	ldw	r20,16(sp)
  807324:	dcc00317 	ldw	r19,12(sp)
  807328:	dc800217 	ldw	r18,8(sp)
  80732c:	dc400117 	ldw	r17,4(sp)
  807330:	dc000017 	ldw	r16,0(sp)
  807334:	dec00904 	addi	sp,sp,36
  807338:	f800283a 	ret
  80733c:	99400117 	ldw	r5,4(r19)
  807340:	a009883a 	mov	r4,r20
  807344:	29400044 	addi	r5,r5,1
  807348:	08071940 	call	807194 <_Balloc>
  80734c:	1021883a 	mov	r16,r2
  807350:	10001226 	beq	r2,zero,80739c <__multadd+0x140>
  807354:	99800417 	ldw	r6,16(r19)
  807358:	99400304 	addi	r5,r19,12
  80735c:	11000304 	addi	r4,r2,12
  807360:	31800084 	addi	r6,r6,2
  807364:	300c90ba 	slli	r6,r6,2
  807368:	0806e780 	call	806e78 <memcpy>
  80736c:	98000926 	beq	r19,zero,807394 <__multadd+0x138>
  807370:	98c00117 	ldw	r3,4(r19)
  807374:	a0801317 	ldw	r2,76(r20)
  807378:	180690ba 	slli	r3,r3,2
  80737c:	10c5883a 	add	r2,r2,r3
  807380:	10c00017 	ldw	r3,0(r2)
  807384:	98c00015 	stw	r3,0(r19)
  807388:	14c00015 	stw	r19,0(r2)
  80738c:	8027883a 	mov	r19,r16
  807390:	003fd806 	br	8072f4 <__multadd+0x98>
  807394:	8027883a 	mov	r19,r16
  807398:	003fd606 	br	8072f4 <__multadd+0x98>
  80739c:	01c02074 	movhi	r7,129
  8073a0:	01002074 	movhi	r4,129
  8073a4:	39c39404 	addi	r7,r7,3664
  8073a8:	000d883a 	mov	r6,zero
  8073ac:	01402d44 	movi	r5,181
  8073b0:	2103a904 	addi	r4,r4,3748
  8073b4:	0809f800 	call	809f80 <__assert_func>

008073b8 <__s2b>:
  8073b8:	defff904 	addi	sp,sp,-28
  8073bc:	dc800215 	stw	r18,8(sp)
  8073c0:	dc000015 	stw	r16,0(sp)
  8073c4:	2025883a 	mov	r18,r4
  8073c8:	2821883a 	mov	r16,r5
  8073cc:	39000204 	addi	r4,r7,8
  8073d0:	01400244 	movi	r5,9
  8073d4:	dcc00315 	stw	r19,12(sp)
  8073d8:	dc400115 	stw	r17,4(sp)
  8073dc:	dfc00615 	stw	ra,24(sp)
  8073e0:	3823883a 	mov	r17,r7
  8073e4:	dd400515 	stw	r21,20(sp)
  8073e8:	dd000415 	stw	r20,16(sp)
  8073ec:	3027883a 	mov	r19,r6
  8073f0:	080b8e00 	call	80b8e0 <__divsi3>
  8073f4:	88c00290 	cmplti	r3,r17,10
  8073f8:	1800341e 	bne	r3,zero,8074cc <__s2b+0x114>
  8073fc:	00c00044 	movi	r3,1
  807400:	000b883a 	mov	r5,zero
  807404:	18c7883a 	add	r3,r3,r3
  807408:	29400044 	addi	r5,r5,1
  80740c:	18bffd16 	blt	r3,r2,807404 <__s2b+0x4c>
  807410:	9009883a 	mov	r4,r18
  807414:	08071940 	call	807194 <_Balloc>
  807418:	100b883a 	mov	r5,r2
  80741c:	10002d26 	beq	r2,zero,8074d4 <__s2b+0x11c>
  807420:	d8800717 	ldw	r2,28(sp)
  807424:	28800515 	stw	r2,20(r5)
  807428:	00800044 	movi	r2,1
  80742c:	28800415 	stw	r2,16(r5)
  807430:	98800290 	cmplti	r2,r19,10
  807434:	1000221e 	bne	r2,zero,8074c0 <__s2b+0x108>
  807438:	85400244 	addi	r21,r16,9
  80743c:	a829883a 	mov	r20,r21
  807440:	84e1883a 	add	r16,r16,r19
  807444:	a1c00007 	ldb	r7,0(r20)
  807448:	01800284 	movi	r6,10
  80744c:	9009883a 	mov	r4,r18
  807450:	39fff404 	addi	r7,r7,-48
  807454:	080725c0 	call	80725c <__multadd>
  807458:	a5000044 	addi	r20,r20,1
  80745c:	100b883a 	mov	r5,r2
  807460:	a43ff81e 	bne	r20,r16,807444 <__s2b+0x8c>
  807464:	9c3ffe04 	addi	r16,r19,-8
  807468:	ac21883a 	add	r16,r21,r16
  80746c:	9c400a0e 	bge	r19,r17,807498 <__s2b+0xe0>
  807470:	8ce3c83a 	sub	r17,r17,r19
  807474:	8463883a 	add	r17,r16,r17
  807478:	81c00007 	ldb	r7,0(r16)
  80747c:	01800284 	movi	r6,10
  807480:	9009883a 	mov	r4,r18
  807484:	39fff404 	addi	r7,r7,-48
  807488:	080725c0 	call	80725c <__multadd>
  80748c:	84000044 	addi	r16,r16,1
  807490:	100b883a 	mov	r5,r2
  807494:	8c3ff81e 	bne	r17,r16,807478 <__s2b+0xc0>
  807498:	2805883a 	mov	r2,r5
  80749c:	dfc00617 	ldw	ra,24(sp)
  8074a0:	dd400517 	ldw	r21,20(sp)
  8074a4:	dd000417 	ldw	r20,16(sp)
  8074a8:	dcc00317 	ldw	r19,12(sp)
  8074ac:	dc800217 	ldw	r18,8(sp)
  8074b0:	dc400117 	ldw	r17,4(sp)
  8074b4:	dc000017 	ldw	r16,0(sp)
  8074b8:	dec00704 	addi	sp,sp,28
  8074bc:	f800283a 	ret
  8074c0:	84000284 	addi	r16,r16,10
  8074c4:	04c00244 	movi	r19,9
  8074c8:	003fe806 	br	80746c <__s2b+0xb4>
  8074cc:	000b883a 	mov	r5,zero
  8074d0:	003fcf06 	br	807410 <__s2b+0x58>
  8074d4:	01c02074 	movhi	r7,129
  8074d8:	01002074 	movhi	r4,129
  8074dc:	39c39404 	addi	r7,r7,3664
  8074e0:	000d883a 	mov	r6,zero
  8074e4:	01403384 	movi	r5,206
  8074e8:	2103a904 	addi	r4,r4,3748
  8074ec:	0809f800 	call	809f80 <__assert_func>

008074f0 <__hi0bits>:
  8074f0:	20bfffec 	andhi	r2,r4,65535
  8074f4:	1000131e 	bne	r2,zero,807544 <__hi0bits+0x54>
  8074f8:	2008943a 	slli	r4,r4,16
  8074fc:	00800404 	movi	r2,16
  807500:	20ffc02c 	andhi	r3,r4,65280
  807504:	1800021e 	bne	r3,zero,807510 <__hi0bits+0x20>
  807508:	2008923a 	slli	r4,r4,8
  80750c:	10800204 	addi	r2,r2,8
  807510:	20fc002c 	andhi	r3,r4,61440
  807514:	1800021e 	bne	r3,zero,807520 <__hi0bits+0x30>
  807518:	2008913a 	slli	r4,r4,4
  80751c:	10800104 	addi	r2,r2,4
  807520:	20f0002c 	andhi	r3,r4,49152
  807524:	1800021e 	bne	r3,zero,807530 <__hi0bits+0x40>
  807528:	200890ba 	slli	r4,r4,2
  80752c:	10800084 	addi	r2,r2,2
  807530:	20000316 	blt	r4,zero,807540 <__hi0bits+0x50>
  807534:	2110002c 	andhi	r4,r4,16384
  807538:	10800044 	addi	r2,r2,1
  80753c:	20000326 	beq	r4,zero,80754c <__hi0bits+0x5c>
  807540:	f800283a 	ret
  807544:	0005883a 	mov	r2,zero
  807548:	003fed06 	br	807500 <__hi0bits+0x10>
  80754c:	00800804 	movi	r2,32
  807550:	f800283a 	ret

00807554 <__lo0bits>:
  807554:	20c00017 	ldw	r3,0(r4)
  807558:	188001cc 	andi	r2,r3,7
  80755c:	10000826 	beq	r2,zero,807580 <__lo0bits+0x2c>
  807560:	1880004c 	andi	r2,r3,1
  807564:	10001f1e 	bne	r2,zero,8075e4 <__lo0bits+0x90>
  807568:	1880008c 	andi	r2,r3,2
  80756c:	10002126 	beq	r2,zero,8075f4 <__lo0bits+0xa0>
  807570:	1806d07a 	srli	r3,r3,1
  807574:	00800044 	movi	r2,1
  807578:	20c00015 	stw	r3,0(r4)
  80757c:	f800283a 	ret
  807580:	18bfffcc 	andi	r2,r3,65535
  807584:	10001426 	beq	r2,zero,8075d8 <__lo0bits+0x84>
  807588:	0005883a 	mov	r2,zero
  80758c:	19403fcc 	andi	r5,r3,255
  807590:	2800021e 	bne	r5,zero,80759c <__lo0bits+0x48>
  807594:	1806d23a 	srli	r3,r3,8
  807598:	10800204 	addi	r2,r2,8
  80759c:	194003cc 	andi	r5,r3,15
  8075a0:	2800021e 	bne	r5,zero,8075ac <__lo0bits+0x58>
  8075a4:	1806d13a 	srli	r3,r3,4
  8075a8:	10800104 	addi	r2,r2,4
  8075ac:	194000cc 	andi	r5,r3,3
  8075b0:	2800021e 	bne	r5,zero,8075bc <__lo0bits+0x68>
  8075b4:	1806d0ba 	srli	r3,r3,2
  8075b8:	10800084 	addi	r2,r2,2
  8075bc:	1940004c 	andi	r5,r3,1
  8075c0:	2800031e 	bne	r5,zero,8075d0 <__lo0bits+0x7c>
  8075c4:	1806d07a 	srli	r3,r3,1
  8075c8:	10800044 	addi	r2,r2,1
  8075cc:	18000726 	beq	r3,zero,8075ec <__lo0bits+0x98>
  8075d0:	20c00015 	stw	r3,0(r4)
  8075d4:	f800283a 	ret
  8075d8:	1806d43a 	srli	r3,r3,16
  8075dc:	00800404 	movi	r2,16
  8075e0:	003fea06 	br	80758c <__lo0bits+0x38>
  8075e4:	0005883a 	mov	r2,zero
  8075e8:	f800283a 	ret
  8075ec:	00800804 	movi	r2,32
  8075f0:	f800283a 	ret
  8075f4:	1806d0ba 	srli	r3,r3,2
  8075f8:	00800084 	movi	r2,2
  8075fc:	20c00015 	stw	r3,0(r4)
  807600:	f800283a 	ret

00807604 <__i2b>:
  807604:	defffe04 	addi	sp,sp,-8
  807608:	dc000015 	stw	r16,0(sp)
  80760c:	2821883a 	mov	r16,r5
  807610:	01400044 	movi	r5,1
  807614:	dfc00115 	stw	ra,4(sp)
  807618:	08071940 	call	807194 <_Balloc>
  80761c:	10000726 	beq	r2,zero,80763c <__i2b+0x38>
  807620:	01000044 	movi	r4,1
  807624:	14000515 	stw	r16,20(r2)
  807628:	11000415 	stw	r4,16(r2)
  80762c:	dfc00117 	ldw	ra,4(sp)
  807630:	dc000017 	ldw	r16,0(sp)
  807634:	dec00204 	addi	sp,sp,8
  807638:	f800283a 	ret
  80763c:	01c02074 	movhi	r7,129
  807640:	01002074 	movhi	r4,129
  807644:	39c39404 	addi	r7,r7,3664
  807648:	000d883a 	mov	r6,zero
  80764c:	01405004 	movi	r5,320
  807650:	2103a904 	addi	r4,r4,3748
  807654:	0809f800 	call	809f80 <__assert_func>

00807658 <__multiply>:
  807658:	defff004 	addi	sp,sp,-64
  80765c:	dd800c15 	stw	r22,48(sp)
  807660:	dc400715 	stw	r17,28(sp)
  807664:	2d800417 	ldw	r22,16(r5)
  807668:	34400417 	ldw	r17,16(r6)
  80766c:	dc800815 	stw	r18,32(sp)
  807670:	dc000615 	stw	r16,24(sp)
  807674:	dfc00f15 	stw	ra,60(sp)
  807678:	df000e15 	stw	fp,56(sp)
  80767c:	ddc00d15 	stw	r23,52(sp)
  807680:	dd400b15 	stw	r21,44(sp)
  807684:	dd000a15 	stw	r20,40(sp)
  807688:	dcc00915 	stw	r19,36(sp)
  80768c:	2825883a 	mov	r18,r5
  807690:	3021883a 	mov	r16,r6
  807694:	b4400516 	blt	r22,r17,8076ac <__multiply+0x54>
  807698:	8807883a 	mov	r3,r17
  80769c:	2821883a 	mov	r16,r5
  8076a0:	b023883a 	mov	r17,r22
  8076a4:	3025883a 	mov	r18,r6
  8076a8:	182d883a 	mov	r22,r3
  8076ac:	80800217 	ldw	r2,8(r16)
  8076b0:	8d87883a 	add	r3,r17,r22
  8076b4:	d8c00115 	stw	r3,4(sp)
  8076b8:	81400117 	ldw	r5,4(r16)
  8076bc:	10c0010e 	bge	r2,r3,8076c4 <__multiply+0x6c>
  8076c0:	29400044 	addi	r5,r5,1
  8076c4:	08071940 	call	807194 <_Balloc>
  8076c8:	d8800515 	stw	r2,20(sp)
  8076cc:	10008626 	beq	r2,zero,8078e8 <__multiply+0x290>
  8076d0:	d8800117 	ldw	r2,4(sp)
  8076d4:	102690ba 	slli	r19,r2,2
  8076d8:	d8800517 	ldw	r2,20(sp)
  8076dc:	10c00504 	addi	r3,r2,20
  8076e0:	d8c00015 	stw	r3,0(sp)
  8076e4:	1ce7883a 	add	r19,r3,r19
  8076e8:	1805883a 	mov	r2,r3
  8076ec:	1cc0032e 	bgeu	r3,r19,8076fc <__multiply+0xa4>
  8076f0:	10000015 	stw	zero,0(r2)
  8076f4:	10800104 	addi	r2,r2,4
  8076f8:	14fffd36 	bltu	r2,r19,8076f0 <__multiply+0x98>
  8076fc:	b02c90ba 	slli	r22,r22,2
  807700:	882290ba 	slli	r17,r17,2
  807704:	94800504 	addi	r18,r18,20
  807708:	80800504 	addi	r2,r16,20
  80770c:	9587883a 	add	r3,r18,r22
  807710:	d8800315 	stw	r2,12(sp)
  807714:	d8c00215 	stw	r3,8(sp)
  807718:	1463883a 	add	r17,r2,r17
  80771c:	90c0342e 	bgeu	r18,r3,8077f0 <__multiply+0x198>
  807720:	80800544 	addi	r2,r16,21
  807724:	88804b36 	bltu	r17,r2,807854 <__multiply+0x1fc>
  807728:	8c05c83a 	sub	r2,r17,r16
  80772c:	10bffac4 	addi	r2,r2,-21
  807730:	1004d0ba 	srli	r2,r2,2
  807734:	10800044 	addi	r2,r2,1
  807738:	100490ba 	slli	r2,r2,2
  80773c:	d8800415 	stw	r2,16(sp)
  807740:	00000606 	br	80775c <__multiply+0x104>
  807744:	d8800017 	ldw	r2,0(sp)
  807748:	94800104 	addi	r18,r18,4
  80774c:	10800104 	addi	r2,r2,4
  807750:	d8800015 	stw	r2,0(sp)
  807754:	d8800217 	ldw	r2,8(sp)
  807758:	9080252e 	bgeu	r18,r2,8077f0 <__multiply+0x198>
  80775c:	90800017 	ldw	r2,0(r18)
  807760:	15ffffcc 	andi	r23,r2,65535
  807764:	b800401e 	bne	r23,zero,807868 <__multiply+0x210>
  807768:	1028d43a 	srli	r20,r2,16
  80776c:	a03ff526 	beq	r20,zero,807744 <__multiply+0xec>
  807770:	dd400017 	ldw	r21,0(sp)
  807774:	dd800317 	ldw	r22,12(sp)
  807778:	0039883a 	mov	fp,zero
  80777c:	adc00017 	ldw	r23,0(r21)
  807780:	b821883a 	mov	r16,r23
  807784:	b100000b 	ldhu	r4,0(r22)
  807788:	a00b883a 	mov	r5,r20
  80778c:	ad400104 	addi	r21,r21,4
  807790:	080150c0 	call	80150c <__mulsi3>
  807794:	800cd43a 	srli	r6,r16,16
  807798:	b8ffffcc 	andi	r3,r23,65535
  80779c:	b5800104 	addi	r22,r22,4
  8077a0:	118d883a 	add	r6,r2,r6
  8077a4:	3739883a 	add	fp,r6,fp
  8077a8:	e004943a 	slli	r2,fp,16
  8077ac:	ac000017 	ldw	r16,0(r21)
  8077b0:	a00b883a 	mov	r5,r20
  8077b4:	10c6b03a 	or	r3,r2,r3
  8077b8:	a8ffff15 	stw	r3,-4(r21)
  8077bc:	b13fff8b 	ldhu	r4,-2(r22)
  8077c0:	080150c0 	call	80150c <__mulsi3>
  8077c4:	e00cd43a 	srli	r6,fp,16
  8077c8:	80ffffcc 	andi	r3,r16,65535
  8077cc:	10c7883a 	add	r3,r2,r3
  8077d0:	19af883a 	add	r23,r3,r6
  8077d4:	b838d43a 	srli	fp,r23,16
  8077d8:	b47fea36 	bltu	r22,r17,807784 <__multiply+0x12c>
  8077dc:	d8800017 	ldw	r2,0(sp)
  8077e0:	d8c00417 	ldw	r3,16(sp)
  8077e4:	10c5883a 	add	r2,r2,r3
  8077e8:	15c00015 	stw	r23,0(r2)
  8077ec:	003fd506 	br	807744 <__multiply+0xec>
  8077f0:	d8800117 	ldw	r2,4(sp)
  8077f4:	00800516 	blt	zero,r2,80780c <__multiply+0x1b4>
  8077f8:	00000706 	br	807818 <__multiply+0x1c0>
  8077fc:	d8800117 	ldw	r2,4(sp)
  807800:	10bfffc4 	addi	r2,r2,-1
  807804:	d8800115 	stw	r2,4(sp)
  807808:	10000326 	beq	r2,zero,807818 <__multiply+0x1c0>
  80780c:	98bfff17 	ldw	r2,-4(r19)
  807810:	9cffff04 	addi	r19,r19,-4
  807814:	103ff926 	beq	r2,zero,8077fc <__multiply+0x1a4>
  807818:	d8800517 	ldw	r2,20(sp)
  80781c:	d8c00117 	ldw	r3,4(sp)
  807820:	10c00415 	stw	r3,16(r2)
  807824:	dfc00f17 	ldw	ra,60(sp)
  807828:	df000e17 	ldw	fp,56(sp)
  80782c:	ddc00d17 	ldw	r23,52(sp)
  807830:	dd800c17 	ldw	r22,48(sp)
  807834:	dd400b17 	ldw	r21,44(sp)
  807838:	dd000a17 	ldw	r20,40(sp)
  80783c:	dcc00917 	ldw	r19,36(sp)
  807840:	dc800817 	ldw	r18,32(sp)
  807844:	dc400717 	ldw	r17,28(sp)
  807848:	dc000617 	ldw	r16,24(sp)
  80784c:	dec01004 	addi	sp,sp,64
  807850:	f800283a 	ret
  807854:	00800104 	movi	r2,4
  807858:	d8800415 	stw	r2,16(sp)
  80785c:	90800017 	ldw	r2,0(r18)
  807860:	15ffffcc 	andi	r23,r2,65535
  807864:	b83fc026 	beq	r23,zero,807768 <__multiply+0x110>
  807868:	dd800017 	ldw	r22,0(sp)
  80786c:	dd400317 	ldw	r21,12(sp)
  807870:	0029883a 	mov	r20,zero
  807874:	af000017 	ldw	fp,0(r21)
  807878:	b4000017 	ldw	r16,0(r22)
  80787c:	b80b883a 	mov	r5,r23
  807880:	e13fffcc 	andi	r4,fp,65535
  807884:	080150c0 	call	80150c <__mulsi3>
  807888:	e008d43a 	srli	r4,fp,16
  80788c:	823fffcc 	andi	r8,r16,65535
  807890:	1205883a 	add	r2,r2,r8
  807894:	b80b883a 	mov	r5,r23
  807898:	1529883a 	add	r20,r2,r20
  80789c:	8020d43a 	srli	r16,r16,16
  8078a0:	080150c0 	call	80150c <__mulsi3>
  8078a4:	a008d43a 	srli	r4,r20,16
  8078a8:	1405883a 	add	r2,r2,r16
  8078ac:	a0ffffcc 	andi	r3,r20,65535
  8078b0:	1105883a 	add	r2,r2,r4
  8078b4:	1008943a 	slli	r4,r2,16
  8078b8:	b5800104 	addi	r22,r22,4
  8078bc:	ad400104 	addi	r21,r21,4
  8078c0:	20c6b03a 	or	r3,r4,r3
  8078c4:	b0ffff15 	stw	r3,-4(r22)
  8078c8:	1028d43a 	srli	r20,r2,16
  8078cc:	ac7fe936 	bltu	r21,r17,807874 <__multiply+0x21c>
  8078d0:	d8800017 	ldw	r2,0(sp)
  8078d4:	d8c00417 	ldw	r3,16(sp)
  8078d8:	10c5883a 	add	r2,r2,r3
  8078dc:	15000015 	stw	r20,0(r2)
  8078e0:	90800017 	ldw	r2,0(r18)
  8078e4:	003fa006 	br	807768 <__multiply+0x110>
  8078e8:	01c02074 	movhi	r7,129
  8078ec:	01002074 	movhi	r4,129
  8078f0:	39c39404 	addi	r7,r7,3664
  8078f4:	000d883a 	mov	r6,zero
  8078f8:	01405744 	movi	r5,349
  8078fc:	2103a904 	addi	r4,r4,3748
  807900:	0809f800 	call	809f80 <__assert_func>

00807904 <__pow5mult>:
  807904:	defffb04 	addi	sp,sp,-20
  807908:	dcc00315 	stw	r19,12(sp)
  80790c:	dc000015 	stw	r16,0(sp)
  807910:	dfc00415 	stw	ra,16(sp)
  807914:	dc800215 	stw	r18,8(sp)
  807918:	dc400115 	stw	r17,4(sp)
  80791c:	308000cc 	andi	r2,r6,3
  807920:	3021883a 	mov	r16,r6
  807924:	2027883a 	mov	r19,r4
  807928:	10002d1e 	bne	r2,zero,8079e0 <__pow5mult+0xdc>
  80792c:	2825883a 	mov	r18,r5
  807930:	8021d0ba 	srai	r16,r16,2
  807934:	80001926 	beq	r16,zero,80799c <__pow5mult+0x98>
  807938:	9c401217 	ldw	r17,72(r19)
  80793c:	8800061e 	bne	r17,zero,807958 <__pow5mult+0x54>
  807940:	00002f06 	br	807a00 <__pow5mult+0xfc>
  807944:	8021d07a 	srai	r16,r16,1
  807948:	80001426 	beq	r16,zero,80799c <__pow5mult+0x98>
  80794c:	88800017 	ldw	r2,0(r17)
  807950:	10001a26 	beq	r2,zero,8079bc <__pow5mult+0xb8>
  807954:	1023883a 	mov	r17,r2
  807958:	8080004c 	andi	r2,r16,1
  80795c:	103ff926 	beq	r2,zero,807944 <__pow5mult+0x40>
  807960:	880d883a 	mov	r6,r17
  807964:	900b883a 	mov	r5,r18
  807968:	9809883a 	mov	r4,r19
  80796c:	08076580 	call	807658 <__multiply>
  807970:	90001926 	beq	r18,zero,8079d8 <__pow5mult+0xd4>
  807974:	91000117 	ldw	r4,4(r18)
  807978:	98c01317 	ldw	r3,76(r19)
  80797c:	8021d07a 	srai	r16,r16,1
  807980:	200890ba 	slli	r4,r4,2
  807984:	1907883a 	add	r3,r3,r4
  807988:	19000017 	ldw	r4,0(r3)
  80798c:	91000015 	stw	r4,0(r18)
  807990:	1c800015 	stw	r18,0(r3)
  807994:	1025883a 	mov	r18,r2
  807998:	803fec1e 	bne	r16,zero,80794c <__pow5mult+0x48>
  80799c:	9005883a 	mov	r2,r18
  8079a0:	dfc00417 	ldw	ra,16(sp)
  8079a4:	dcc00317 	ldw	r19,12(sp)
  8079a8:	dc800217 	ldw	r18,8(sp)
  8079ac:	dc400117 	ldw	r17,4(sp)
  8079b0:	dc000017 	ldw	r16,0(sp)
  8079b4:	dec00504 	addi	sp,sp,20
  8079b8:	f800283a 	ret
  8079bc:	880d883a 	mov	r6,r17
  8079c0:	880b883a 	mov	r5,r17
  8079c4:	9809883a 	mov	r4,r19
  8079c8:	08076580 	call	807658 <__multiply>
  8079cc:	88800015 	stw	r2,0(r17)
  8079d0:	10000015 	stw	zero,0(r2)
  8079d4:	003fdf06 	br	807954 <__pow5mult+0x50>
  8079d8:	1025883a 	mov	r18,r2
  8079dc:	003fd906 	br	807944 <__pow5mult+0x40>
  8079e0:	100490ba 	slli	r2,r2,2
  8079e4:	00c02074 	movhi	r3,129
  8079e8:	000f883a 	mov	r7,zero
  8079ec:	10c7883a 	add	r3,r2,r3
  8079f0:	1983b817 	ldw	r6,3808(r3)
  8079f4:	080725c0 	call	80725c <__multadd>
  8079f8:	1025883a 	mov	r18,r2
  8079fc:	003fcc06 	br	807930 <__pow5mult+0x2c>
  807a00:	01409c44 	movi	r5,625
  807a04:	9809883a 	mov	r4,r19
  807a08:	08076040 	call	807604 <__i2b>
  807a0c:	98801215 	stw	r2,72(r19)
  807a10:	1023883a 	mov	r17,r2
  807a14:	10000015 	stw	zero,0(r2)
  807a18:	003fcf06 	br	807958 <__pow5mult+0x54>

00807a1c <__lshift>:
  807a1c:	defff904 	addi	sp,sp,-28
  807a20:	dd400515 	stw	r21,20(sp)
  807a24:	dc800215 	stw	r18,8(sp)
  807a28:	302bd17a 	srai	r21,r6,5
  807a2c:	2c800417 	ldw	r18,16(r5)
  807a30:	28800217 	ldw	r2,8(r5)
  807a34:	dd000415 	stw	r20,16(sp)
  807a38:	aca5883a 	add	r18,r21,r18
  807a3c:	dcc00315 	stw	r19,12(sp)
  807a40:	dc400115 	stw	r17,4(sp)
  807a44:	dc000015 	stw	r16,0(sp)
  807a48:	dfc00615 	stw	ra,24(sp)
  807a4c:	94400044 	addi	r17,r18,1
  807a50:	2821883a 	mov	r16,r5
  807a54:	3029883a 	mov	r20,r6
  807a58:	29400117 	ldw	r5,4(r5)
  807a5c:	2027883a 	mov	r19,r4
  807a60:	1440030e 	bge	r2,r17,807a70 <__lshift+0x54>
  807a64:	1085883a 	add	r2,r2,r2
  807a68:	29400044 	addi	r5,r5,1
  807a6c:	147ffd16 	blt	r2,r17,807a64 <__lshift+0x48>
  807a70:	9809883a 	mov	r4,r19
  807a74:	08071940 	call	807194 <_Balloc>
  807a78:	10004326 	beq	r2,zero,807b88 <__lshift+0x16c>
  807a7c:	12000504 	addi	r8,r2,20
  807a80:	0540090e 	bge	zero,r21,807aa8 <__lshift+0x8c>
  807a84:	ad400144 	addi	r21,r21,5
  807a88:	a82a90ba 	slli	r21,r21,2
  807a8c:	4007883a 	mov	r3,r8
  807a90:	1549883a 	add	r4,r2,r21
  807a94:	18c00104 	addi	r3,r3,4
  807a98:	183fff15 	stw	zero,-4(r3)
  807a9c:	193ffd1e 	bne	r3,r4,807a94 <__lshift+0x78>
  807aa0:	ad7ffb04 	addi	r21,r21,-20
  807aa4:	4551883a 	add	r8,r8,r21
  807aa8:	82400417 	ldw	r9,16(r16)
  807aac:	80c00504 	addi	r3,r16,20
  807ab0:	a14007cc 	andi	r5,r20,31
  807ab4:	481290ba 	slli	r9,r9,2
  807ab8:	1a53883a 	add	r9,r3,r9
  807abc:	28002a26 	beq	r5,zero,807b68 <__lshift+0x14c>
  807ac0:	02800804 	movi	r10,32
  807ac4:	5155c83a 	sub	r10,r10,r5
  807ac8:	4009883a 	mov	r4,r8
  807acc:	000f883a 	mov	r7,zero
  807ad0:	19800017 	ldw	r6,0(r3)
  807ad4:	21000104 	addi	r4,r4,4
  807ad8:	18c00104 	addi	r3,r3,4
  807adc:	314c983a 	sll	r6,r6,r5
  807ae0:	31ccb03a 	or	r6,r6,r7
  807ae4:	21bfff15 	stw	r6,-4(r4)
  807ae8:	19bfff17 	ldw	r6,-4(r3)
  807aec:	328ed83a 	srl	r7,r6,r10
  807af0:	1a7ff736 	bltu	r3,r9,807ad0 <__lshift+0xb4>
  807af4:	80c00544 	addi	r3,r16,21
  807af8:	48c02136 	bltu	r9,r3,807b80 <__lshift+0x164>
  807afc:	4c07c83a 	sub	r3,r9,r16
  807b00:	18fffac4 	addi	r3,r3,-21
  807b04:	1806d0ba 	srli	r3,r3,2
  807b08:	18c00044 	addi	r3,r3,1
  807b0c:	180690ba 	slli	r3,r3,2
  807b10:	40d1883a 	add	r8,r8,r3
  807b14:	41c00015 	stw	r7,0(r8)
  807b18:	38000126 	beq	r7,zero,807b20 <__lshift+0x104>
  807b1c:	8825883a 	mov	r18,r17
  807b20:	14800415 	stw	r18,16(r2)
  807b24:	80000726 	beq	r16,zero,807b44 <__lshift+0x128>
  807b28:	81000117 	ldw	r4,4(r16)
  807b2c:	98c01317 	ldw	r3,76(r19)
  807b30:	200890ba 	slli	r4,r4,2
  807b34:	1907883a 	add	r3,r3,r4
  807b38:	19000017 	ldw	r4,0(r3)
  807b3c:	81000015 	stw	r4,0(r16)
  807b40:	1c000015 	stw	r16,0(r3)
  807b44:	dfc00617 	ldw	ra,24(sp)
  807b48:	dd400517 	ldw	r21,20(sp)
  807b4c:	dd000417 	ldw	r20,16(sp)
  807b50:	dcc00317 	ldw	r19,12(sp)
  807b54:	dc800217 	ldw	r18,8(sp)
  807b58:	dc400117 	ldw	r17,4(sp)
  807b5c:	dc000017 	ldw	r16,0(sp)
  807b60:	dec00704 	addi	sp,sp,28
  807b64:	f800283a 	ret
  807b68:	19000017 	ldw	r4,0(r3)
  807b6c:	18c00104 	addi	r3,r3,4
  807b70:	42000104 	addi	r8,r8,4
  807b74:	413fff15 	stw	r4,-4(r8)
  807b78:	1a7ffb36 	bltu	r3,r9,807b68 <__lshift+0x14c>
  807b7c:	003fe806 	br	807b20 <__lshift+0x104>
  807b80:	00c00104 	movi	r3,4
  807b84:	003fe206 	br	807b10 <__lshift+0xf4>
  807b88:	01c02074 	movhi	r7,129
  807b8c:	01002074 	movhi	r4,129
  807b90:	39c39404 	addi	r7,r7,3664
  807b94:	000d883a 	mov	r6,zero
  807b98:	01407644 	movi	r5,473
  807b9c:	2103a904 	addi	r4,r4,3748
  807ba0:	0809f800 	call	809f80 <__assert_func>

00807ba4 <__mcmp>:
  807ba4:	21800417 	ldw	r6,16(r4)
  807ba8:	28c00417 	ldw	r3,16(r5)
  807bac:	30c5c83a 	sub	r2,r6,r3
  807bb0:	30c00e1e 	bne	r6,r3,807bec <__mcmp+0x48>
  807bb4:	180690ba 	slli	r3,r3,2
  807bb8:	21c00504 	addi	r7,r4,20
  807bbc:	29400504 	addi	r5,r5,20
  807bc0:	38c9883a 	add	r4,r7,r3
  807bc4:	28c7883a 	add	r3,r5,r3
  807bc8:	00000106 	br	807bd0 <__mcmp+0x2c>
  807bcc:	3900082e 	bgeu	r7,r4,807bf0 <__mcmp+0x4c>
  807bd0:	21bfff17 	ldw	r6,-4(r4)
  807bd4:	197fff17 	ldw	r5,-4(r3)
  807bd8:	213fff04 	addi	r4,r4,-4
  807bdc:	18ffff04 	addi	r3,r3,-4
  807be0:	317ffa26 	beq	r6,r5,807bcc <__mcmp+0x28>
  807be4:	3140032e 	bgeu	r6,r5,807bf4 <__mcmp+0x50>
  807be8:	00bfffc4 	movi	r2,-1
  807bec:	f800283a 	ret
  807bf0:	f800283a 	ret
  807bf4:	00800044 	movi	r2,1
  807bf8:	f800283a 	ret

00807bfc <__mdiff>:
  807bfc:	28800417 	ldw	r2,16(r5)
  807c00:	30c00417 	ldw	r3,16(r6)
  807c04:	defffc04 	addi	sp,sp,-16
  807c08:	dc800215 	stw	r18,8(sp)
  807c0c:	dc400115 	stw	r17,4(sp)
  807c10:	dc000015 	stw	r16,0(sp)
  807c14:	dfc00315 	stw	ra,12(sp)
  807c18:	2823883a 	mov	r17,r5
  807c1c:	3021883a 	mov	r16,r6
  807c20:	10e5c83a 	sub	r18,r2,r3
  807c24:	10c0641e 	bne	r2,r3,807db8 <__mdiff+0x1bc>
  807c28:	180c90ba 	slli	r6,r3,2
  807c2c:	29400504 	addi	r5,r5,20
  807c30:	80c00504 	addi	r3,r16,20
  807c34:	2985883a 	add	r2,r5,r6
  807c38:	1987883a 	add	r3,r3,r6
  807c3c:	00000106 	br	807c44 <__mdiff+0x48>
  807c40:	2880642e 	bgeu	r5,r2,807dd4 <__mdiff+0x1d8>
  807c44:	11ffff17 	ldw	r7,-4(r2)
  807c48:	19bfff17 	ldw	r6,-4(r3)
  807c4c:	10bfff04 	addi	r2,r2,-4
  807c50:	18ffff04 	addi	r3,r3,-4
  807c54:	39bffa26 	beq	r7,r6,807c40 <__mdiff+0x44>
  807c58:	39805236 	bltu	r7,r6,807da4 <__mdiff+0x1a8>
  807c5c:	89400117 	ldw	r5,4(r17)
  807c60:	08071940 	call	807194 <_Balloc>
  807c64:	10006226 	beq	r2,zero,807df0 <__mdiff+0x1f4>
  807c68:	8a400417 	ldw	r9,16(r17)
  807c6c:	83000417 	ldw	r12,16(r16)
  807c70:	8ac00504 	addi	r11,r17,20
  807c74:	481090ba 	slli	r8,r9,2
  807c78:	601890ba 	slli	r12,r12,2
  807c7c:	81800504 	addi	r6,r16,20
  807c80:	13400504 	addi	r13,r2,20
  807c84:	14800315 	stw	r18,12(r2)
  807c88:	5a11883a 	add	r8,r11,r8
  807c8c:	3319883a 	add	r12,r6,r12
  807c90:	681d883a 	mov	r14,r13
  807c94:	5815883a 	mov	r10,r11
  807c98:	0007883a 	mov	r3,zero
  807c9c:	51000017 	ldw	r4,0(r10)
  807ca0:	31c00017 	ldw	r7,0(r6)
  807ca4:	73800104 	addi	r14,r14,4
  807ca8:	217fffcc 	andi	r5,r4,65535
  807cac:	28cb883a 	add	r5,r5,r3
  807cb0:	38ffffcc 	andi	r3,r7,65535
  807cb4:	28cbc83a 	sub	r5,r5,r3
  807cb8:	380ed43a 	srli	r7,r7,16
  807cbc:	2006d43a 	srli	r3,r4,16
  807cc0:	2809d43a 	srai	r4,r5,16
  807cc4:	297fffcc 	andi	r5,r5,65535
  807cc8:	19c7c83a 	sub	r3,r3,r7
  807ccc:	1907883a 	add	r3,r3,r4
  807cd0:	1808943a 	slli	r4,r3,16
  807cd4:	31800104 	addi	r6,r6,4
  807cd8:	1807d43a 	srai	r3,r3,16
  807cdc:	214ab03a 	or	r5,r4,r5
  807ce0:	717fff15 	stw	r5,-4(r14)
  807ce4:	52800104 	addi	r10,r10,4
  807ce8:	333fec36 	bltu	r6,r12,807c9c <__mdiff+0xa0>
  807cec:	640fc83a 	sub	r7,r12,r16
  807cf0:	39fffac4 	addi	r7,r7,-21
  807cf4:	84000544 	addi	r16,r16,21
  807cf8:	380ed0ba 	srli	r7,r7,2
  807cfc:	64003336 	bltu	r12,r16,807dcc <__mdiff+0x1d0>
  807d00:	380890ba 	slli	r4,r7,2
  807d04:	6909883a 	add	r4,r13,r4
  807d08:	64002e36 	bltu	r12,r16,807dc4 <__mdiff+0x1c8>
  807d0c:	39800044 	addi	r6,r7,1
  807d10:	300c90ba 	slli	r6,r6,2
  807d14:	5997883a 	add	r11,r11,r6
  807d18:	699b883a 	add	r13,r13,r6
  807d1c:	5a00152e 	bgeu	r11,r8,807d74 <__mdiff+0x178>
  807d20:	680f883a 	mov	r7,r13
  807d24:	580d883a 	mov	r6,r11
  807d28:	31000017 	ldw	r4,0(r6)
  807d2c:	39c00104 	addi	r7,r7,4
  807d30:	31800104 	addi	r6,r6,4
  807d34:	217fffcc 	andi	r5,r4,65535
  807d38:	28cb883a 	add	r5,r5,r3
  807d3c:	2815d43a 	srai	r10,r5,16
  807d40:	2006d43a 	srli	r3,r4,16
  807d44:	297fffcc 	andi	r5,r5,65535
  807d48:	1a87883a 	add	r3,r3,r10
  807d4c:	1814943a 	slli	r10,r3,16
  807d50:	1807d43a 	srai	r3,r3,16
  807d54:	514ab03a 	or	r5,r10,r5
  807d58:	397fff15 	stw	r5,-4(r7)
  807d5c:	323ff236 	bltu	r6,r8,807d28 <__mdiff+0x12c>
  807d60:	413fffc4 	addi	r4,r8,-1
  807d64:	22c9c83a 	sub	r4,r4,r11
  807d68:	2008d0ba 	srli	r4,r4,2
  807d6c:	200890ba 	slli	r4,r4,2
  807d70:	6909883a 	add	r4,r13,r4
  807d74:	2800041e 	bne	r5,zero,807d88 <__mdiff+0x18c>
  807d78:	20ffff17 	ldw	r3,-4(r4)
  807d7c:	4a7fffc4 	addi	r9,r9,-1
  807d80:	213fff04 	addi	r4,r4,-4
  807d84:	183ffc26 	beq	r3,zero,807d78 <__mdiff+0x17c>
  807d88:	12400415 	stw	r9,16(r2)
  807d8c:	dfc00317 	ldw	ra,12(sp)
  807d90:	dc800217 	ldw	r18,8(sp)
  807d94:	dc400117 	ldw	r17,4(sp)
  807d98:	dc000017 	ldw	r16,0(sp)
  807d9c:	dec00404 	addi	sp,sp,16
  807da0:	f800283a 	ret
  807da4:	8805883a 	mov	r2,r17
  807da8:	04800044 	movi	r18,1
  807dac:	8023883a 	mov	r17,r16
  807db0:	1021883a 	mov	r16,r2
  807db4:	003fa906 	br	807c5c <__mdiff+0x60>
  807db8:	903ffa16 	blt	r18,zero,807da4 <__mdiff+0x1a8>
  807dbc:	0025883a 	mov	r18,zero
  807dc0:	003fa606 	br	807c5c <__mdiff+0x60>
  807dc4:	01800104 	movi	r6,4
  807dc8:	003fd206 	br	807d14 <__mdiff+0x118>
  807dcc:	0009883a 	mov	r4,zero
  807dd0:	003fcc06 	br	807d04 <__mdiff+0x108>
  807dd4:	000b883a 	mov	r5,zero
  807dd8:	08071940 	call	807194 <_Balloc>
  807ddc:	10000b26 	beq	r2,zero,807e0c <__mdiff+0x210>
  807de0:	00c00044 	movi	r3,1
  807de4:	10c00415 	stw	r3,16(r2)
  807de8:	10000515 	stw	zero,20(r2)
  807dec:	003fe706 	br	807d8c <__mdiff+0x190>
  807df0:	01c02074 	movhi	r7,129
  807df4:	01002074 	movhi	r4,129
  807df8:	39c39404 	addi	r7,r7,3664
  807dfc:	000d883a 	mov	r6,zero
  807e00:	01409004 	movi	r5,576
  807e04:	2103a904 	addi	r4,r4,3748
  807e08:	0809f800 	call	809f80 <__assert_func>
  807e0c:	01c02074 	movhi	r7,129
  807e10:	01002074 	movhi	r4,129
  807e14:	39c39404 	addi	r7,r7,3664
  807e18:	000d883a 	mov	r6,zero
  807e1c:	01408c84 	movi	r5,562
  807e20:	2103a904 	addi	r4,r4,3748
  807e24:	0809f800 	call	809f80 <__assert_func>

00807e28 <__ulp>:
  807e28:	28dffc2c 	andhi	r3,r5,32752
  807e2c:	017f3034 	movhi	r5,64704
  807e30:	1947883a 	add	r3,r3,r5
  807e34:	00c0020e 	bge	zero,r3,807e40 <__ulp+0x18>
  807e38:	0005883a 	mov	r2,zero
  807e3c:	f800283a 	ret
  807e40:	00c7c83a 	sub	r3,zero,r3
  807e44:	1807d53a 	srai	r3,r3,20
  807e48:	18800508 	cmpgei	r2,r3,20
  807e4c:	1000041e 	bne	r2,zero,807e60 <__ulp+0x38>
  807e50:	00800234 	movhi	r2,8
  807e54:	10c7d83a 	sra	r3,r2,r3
  807e58:	0005883a 	mov	r2,zero
  807e5c:	f800283a 	ret
  807e60:	193ffb04 	addi	r4,r3,-20
  807e64:	208007c8 	cmpgei	r2,r4,31
  807e68:	0007883a 	mov	r3,zero
  807e6c:	1000031e 	bne	r2,zero,807e7c <__ulp+0x54>
  807e70:	00a00034 	movhi	r2,32768
  807e74:	1104d83a 	srl	r2,r2,r4
  807e78:	f800283a 	ret
  807e7c:	00800044 	movi	r2,1
  807e80:	f800283a 	ret

00807e84 <__b2d>:
  807e84:	defffa04 	addi	sp,sp,-24
  807e88:	dc400115 	stw	r17,4(sp)
  807e8c:	24400417 	ldw	r17,16(r4)
  807e90:	dc000015 	stw	r16,0(sp)
  807e94:	24000504 	addi	r16,r4,20
  807e98:	882290ba 	slli	r17,r17,2
  807e9c:	dc800215 	stw	r18,8(sp)
  807ea0:	dd000415 	stw	r20,16(sp)
  807ea4:	8463883a 	add	r17,r16,r17
  807ea8:	8cbfff17 	ldw	r18,-4(r17)
  807eac:	dcc00315 	stw	r19,12(sp)
  807eb0:	dfc00515 	stw	ra,20(sp)
  807eb4:	9009883a 	mov	r4,r18
  807eb8:	2827883a 	mov	r19,r5
  807ebc:	08074f00 	call	8074f0 <__hi0bits>
  807ec0:	01000804 	movi	r4,32
  807ec4:	2087c83a 	sub	r3,r4,r2
  807ec8:	98c00015 	stw	r3,0(r19)
  807ecc:	10c002c8 	cmpgei	r3,r2,11
  807ed0:	8d3fff04 	addi	r20,r17,-4
  807ed4:	18001f26 	beq	r3,zero,807f54 <__b2d+0xd0>
  807ed8:	10fffd44 	addi	r3,r2,-11
  807edc:	85000e2e 	bgeu	r16,r20,807f18 <__b2d+0x94>
  807ee0:	88bffe17 	ldw	r2,-8(r17)
  807ee4:	18001226 	beq	r3,zero,807f30 <__b2d+0xac>
  807ee8:	20c9c83a 	sub	r4,r4,r3
  807eec:	110cd83a 	srl	r6,r2,r4
  807ef0:	90e4983a 	sll	r18,r18,r3
  807ef4:	10c4983a 	sll	r2,r2,r3
  807ef8:	897ffe04 	addi	r5,r17,-8
  807efc:	9186b03a 	or	r3,r18,r6
  807f00:	18cffc34 	orhi	r3,r3,16368
  807f04:	81400b2e 	bgeu	r16,r5,807f34 <__b2d+0xb0>
  807f08:	897ffd17 	ldw	r5,-12(r17)
  807f0c:	2908d83a 	srl	r4,r5,r4
  807f10:	1104b03a 	or	r2,r2,r4
  807f14:	00000706 	br	807f34 <__b2d+0xb0>
  807f18:	18000426 	beq	r3,zero,807f2c <__b2d+0xa8>
  807f1c:	90c6983a 	sll	r3,r18,r3
  807f20:	0005883a 	mov	r2,zero
  807f24:	18cffc34 	orhi	r3,r3,16368
  807f28:	00000206 	br	807f34 <__b2d+0xb0>
  807f2c:	0005883a 	mov	r2,zero
  807f30:	90cffc34 	orhi	r3,r18,16368
  807f34:	dfc00517 	ldw	ra,20(sp)
  807f38:	dd000417 	ldw	r20,16(sp)
  807f3c:	dcc00317 	ldw	r19,12(sp)
  807f40:	dc800217 	ldw	r18,8(sp)
  807f44:	dc400117 	ldw	r17,4(sp)
  807f48:	dc000017 	ldw	r16,0(sp)
  807f4c:	dec00604 	addi	sp,sp,24
  807f50:	f800283a 	ret
  807f54:	014002c4 	movi	r5,11
  807f58:	2889c83a 	sub	r4,r5,r2
  807f5c:	9106d83a 	srl	r3,r18,r4
  807f60:	18cffc34 	orhi	r3,r3,16368
  807f64:	85000536 	bltu	r16,r20,807f7c <__b2d+0xf8>
  807f68:	000b883a 	mov	r5,zero
  807f6c:	10800544 	addi	r2,r2,21
  807f70:	9084983a 	sll	r2,r18,r2
  807f74:	1144b03a 	or	r2,r2,r5
  807f78:	003fee06 	br	807f34 <__b2d+0xb0>
  807f7c:	897ffe17 	ldw	r5,-8(r17)
  807f80:	290ad83a 	srl	r5,r5,r4
  807f84:	003ff906 	br	807f6c <__b2d+0xe8>

00807f88 <__d2b>:
  807f88:	defff804 	addi	sp,sp,-32
  807f8c:	dd000615 	stw	r20,24(sp)
  807f90:	2829883a 	mov	r20,r5
  807f94:	01400044 	movi	r5,1
  807f98:	dcc00515 	stw	r19,20(sp)
  807f9c:	dc000215 	stw	r16,8(sp)
  807fa0:	dfc00715 	stw	ra,28(sp)
  807fa4:	dc800415 	stw	r18,16(sp)
  807fa8:	dc400315 	stw	r17,12(sp)
  807fac:	3021883a 	mov	r16,r6
  807fb0:	3827883a 	mov	r19,r7
  807fb4:	08071940 	call	807194 <_Balloc>
  807fb8:	10004526 	beq	r2,zero,8080d0 <__d2b+0x148>
  807fbc:	8024d53a 	srli	r18,r16,20
  807fc0:	01800434 	movhi	r6,16
  807fc4:	31bfffc4 	addi	r6,r6,-1
  807fc8:	9481ffcc 	andi	r18,r18,2047
  807fcc:	1023883a 	mov	r17,r2
  807fd0:	81a0703a 	and	r16,r16,r6
  807fd4:	90000126 	beq	r18,zero,807fdc <__d2b+0x54>
  807fd8:	84000434 	orhi	r16,r16,16
  807fdc:	dc000115 	stw	r16,4(sp)
  807fe0:	a0002226 	beq	r20,zero,80806c <__d2b+0xe4>
  807fe4:	d809883a 	mov	r4,sp
  807fe8:	dd000015 	stw	r20,0(sp)
  807fec:	08075540 	call	807554 <__lo0bits>
  807ff0:	d8c00117 	ldw	r3,4(sp)
  807ff4:	10003326 	beq	r2,zero,8080c4 <__d2b+0x13c>
  807ff8:	01000804 	movi	r4,32
  807ffc:	2089c83a 	sub	r4,r4,r2
  808000:	1908983a 	sll	r4,r3,r4
  808004:	d9400017 	ldw	r5,0(sp)
  808008:	1886d83a 	srl	r3,r3,r2
  80800c:	2148b03a 	or	r4,r4,r5
  808010:	89000515 	stw	r4,20(r17)
  808014:	d8c00115 	stw	r3,4(sp)
  808018:	88c00615 	stw	r3,24(r17)
  80801c:	1800271e 	bne	r3,zero,8080bc <__d2b+0x134>
  808020:	04000044 	movi	r16,1
  808024:	8c000415 	stw	r16,16(r17)
  808028:	90001926 	beq	r18,zero,808090 <__d2b+0x108>
  80802c:	00c00d44 	movi	r3,53
  808030:	94bef344 	addi	r18,r18,-1075
  808034:	90a5883a 	add	r18,r18,r2
  808038:	1885c83a 	sub	r2,r3,r2
  80803c:	d8c00817 	ldw	r3,32(sp)
  808040:	9c800015 	stw	r18,0(r19)
  808044:	18800015 	stw	r2,0(r3)
  808048:	8805883a 	mov	r2,r17
  80804c:	dfc00717 	ldw	ra,28(sp)
  808050:	dd000617 	ldw	r20,24(sp)
  808054:	dcc00517 	ldw	r19,20(sp)
  808058:	dc800417 	ldw	r18,16(sp)
  80805c:	dc400317 	ldw	r17,12(sp)
  808060:	dc000217 	ldw	r16,8(sp)
  808064:	dec00804 	addi	sp,sp,32
  808068:	f800283a 	ret
  80806c:	d9000104 	addi	r4,sp,4
  808070:	08075540 	call	807554 <__lo0bits>
  808074:	00c00044 	movi	r3,1
  808078:	88c00415 	stw	r3,16(r17)
  80807c:	d8c00117 	ldw	r3,4(sp)
  808080:	10800804 	addi	r2,r2,32
  808084:	04000044 	movi	r16,1
  808088:	88c00515 	stw	r3,20(r17)
  80808c:	903fe71e 	bne	r18,zero,80802c <__d2b+0xa4>
  808090:	800690ba 	slli	r3,r16,2
  808094:	10bef384 	addi	r2,r2,-1074
  808098:	98800015 	stw	r2,0(r19)
  80809c:	88c5883a 	add	r2,r17,r3
  8080a0:	11000417 	ldw	r4,16(r2)
  8080a4:	8020917a 	slli	r16,r16,5
  8080a8:	08074f00 	call	8074f0 <__hi0bits>
  8080ac:	80a1c83a 	sub	r16,r16,r2
  8080b0:	d8800817 	ldw	r2,32(sp)
  8080b4:	14000015 	stw	r16,0(r2)
  8080b8:	003fe306 	br	808048 <__d2b+0xc0>
  8080bc:	04000084 	movi	r16,2
  8080c0:	003fd806 	br	808024 <__d2b+0x9c>
  8080c4:	d9000017 	ldw	r4,0(sp)
  8080c8:	89000515 	stw	r4,20(r17)
  8080cc:	003fd206 	br	808018 <__d2b+0x90>
  8080d0:	01c02074 	movhi	r7,129
  8080d4:	01002074 	movhi	r4,129
  8080d8:	39c39404 	addi	r7,r7,3664
  8080dc:	000d883a 	mov	r6,zero
  8080e0:	0140c284 	movi	r5,778
  8080e4:	2103a904 	addi	r4,r4,3748
  8080e8:	0809f800 	call	809f80 <__assert_func>

008080ec <__ratio>:
  8080ec:	defff904 	addi	sp,sp,-28
  8080f0:	dc400315 	stw	r17,12(sp)
  8080f4:	2823883a 	mov	r17,r5
  8080f8:	d80b883a 	mov	r5,sp
  8080fc:	dfc00615 	stw	ra,24(sp)
  808100:	dcc00515 	stw	r19,20(sp)
  808104:	dc800415 	stw	r18,16(sp)
  808108:	2027883a 	mov	r19,r4
  80810c:	dc000215 	stw	r16,8(sp)
  808110:	0807e840 	call	807e84 <__b2d>
  808114:	d9400104 	addi	r5,sp,4
  808118:	8809883a 	mov	r4,r17
  80811c:	1025883a 	mov	r18,r2
  808120:	1821883a 	mov	r16,r3
  808124:	0807e840 	call	807e84 <__b2d>
  808128:	89400417 	ldw	r5,16(r17)
  80812c:	99000417 	ldw	r4,16(r19)
  808130:	d9800117 	ldw	r6,4(sp)
  808134:	180f883a 	mov	r7,r3
  808138:	2149c83a 	sub	r4,r4,r5
  80813c:	d9400017 	ldw	r5,0(sp)
  808140:	2008917a 	slli	r4,r4,5
  808144:	298bc83a 	sub	r5,r5,r6
  808148:	2149883a 	add	r4,r4,r5
  80814c:	100d883a 	mov	r6,r2
  808150:	01000c0e 	bge	zero,r4,808184 <__ratio+0x98>
  808154:	2008953a 	slli	r4,r4,20
  808158:	2421883a 	add	r16,r4,r16
  80815c:	9009883a 	mov	r4,r18
  808160:	800b883a 	mov	r5,r16
  808164:	080c40c0 	call	80c40c <__divdf3>
  808168:	dfc00617 	ldw	ra,24(sp)
  80816c:	dcc00517 	ldw	r19,20(sp)
  808170:	dc800417 	ldw	r18,16(sp)
  808174:	dc400317 	ldw	r17,12(sp)
  808178:	dc000217 	ldw	r16,8(sp)
  80817c:	dec00704 	addi	sp,sp,28
  808180:	f800283a 	ret
  808184:	2008953a 	slli	r4,r4,20
  808188:	190fc83a 	sub	r7,r3,r4
  80818c:	003ff306 	br	80815c <__ratio+0x70>

00808190 <_mprec_log10>:
  808190:	defffe04 	addi	sp,sp,-8
  808194:	dc000015 	stw	r16,0(sp)
  808198:	dfc00115 	stw	ra,4(sp)
  80819c:	20800608 	cmpgei	r2,r4,24
  8081a0:	2021883a 	mov	r16,r4
  8081a4:	10000f26 	beq	r2,zero,8081e4 <_mprec_log10+0x54>
  8081a8:	0009883a 	mov	r4,zero
  8081ac:	014ffc34 	movhi	r5,16368
  8081b0:	000d883a 	mov	r6,zero
  8081b4:	01d00934 	movhi	r7,16420
  8081b8:	080cfa00 	call	80cfa0 <__muldf3>
  8081bc:	843fffc4 	addi	r16,r16,-1
  8081c0:	1009883a 	mov	r4,r2
  8081c4:	180b883a 	mov	r5,r3
  8081c8:	803ff91e 	bne	r16,zero,8081b0 <_mprec_log10+0x20>
  8081cc:	2005883a 	mov	r2,r4
  8081d0:	2807883a 	mov	r3,r5
  8081d4:	dfc00117 	ldw	ra,4(sp)
  8081d8:	dc000017 	ldw	r16,0(sp)
  8081dc:	dec00204 	addi	sp,sp,8
  8081e0:	f800283a 	ret
  8081e4:	202090fa 	slli	r16,r4,3
  8081e8:	00802074 	movhi	r2,129
  8081ec:	1083d004 	addi	r2,r2,3904
  8081f0:	1421883a 	add	r16,r2,r16
  8081f4:	81000017 	ldw	r4,0(r16)
  8081f8:	81400117 	ldw	r5,4(r16)
  8081fc:	003ff306 	br	8081cc <_mprec_log10+0x3c>

00808200 <__copybits>:
  808200:	297fffc4 	addi	r5,r5,-1
  808204:	280fd17a 	srai	r7,r5,5
  808208:	31400417 	ldw	r5,16(r6)
  80820c:	30800504 	addi	r2,r6,20
  808210:	39c00044 	addi	r7,r7,1
  808214:	280a90ba 	slli	r5,r5,2
  808218:	380e90ba 	slli	r7,r7,2
  80821c:	114b883a 	add	r5,r2,r5
  808220:	21cf883a 	add	r7,r4,r7
  808224:	11400c2e 	bgeu	r2,r5,808258 <__copybits+0x58>
  808228:	2007883a 	mov	r3,r4
  80822c:	12000017 	ldw	r8,0(r2)
  808230:	10800104 	addi	r2,r2,4
  808234:	18c00104 	addi	r3,r3,4
  808238:	1a3fff15 	stw	r8,-4(r3)
  80823c:	117ffb36 	bltu	r2,r5,80822c <__copybits+0x2c>
  808240:	2985c83a 	sub	r2,r5,r6
  808244:	10bffac4 	addi	r2,r2,-21
  808248:	1004d0ba 	srli	r2,r2,2
  80824c:	10800044 	addi	r2,r2,1
  808250:	100490ba 	slli	r2,r2,2
  808254:	2089883a 	add	r4,r4,r2
  808258:	21c0032e 	bgeu	r4,r7,808268 <__copybits+0x68>
  80825c:	21000104 	addi	r4,r4,4
  808260:	203fff15 	stw	zero,-4(r4)
  808264:	21fffd36 	bltu	r4,r7,80825c <__copybits+0x5c>
  808268:	f800283a 	ret

0080826c <__any_on>:
  80826c:	20c00417 	ldw	r3,16(r4)
  808270:	280dd17a 	srai	r6,r5,5
  808274:	21000504 	addi	r4,r4,20
  808278:	1980080e 	bge	r3,r6,80829c <__any_on+0x30>
  80827c:	180490ba 	slli	r2,r3,2
  808280:	2085883a 	add	r2,r4,r2
  808284:	20800f2e 	bgeu	r4,r2,8082c4 <__any_on+0x58>
  808288:	10ffff17 	ldw	r3,-4(r2)
  80828c:	10bfff04 	addi	r2,r2,-4
  808290:	183ffc26 	beq	r3,zero,808284 <__any_on+0x18>
  808294:	00800044 	movi	r2,1
  808298:	f800283a 	ret
  80829c:	300490ba 	slli	r2,r6,2
  8082a0:	2085883a 	add	r2,r4,r2
  8082a4:	30fff70e 	bge	r6,r3,808284 <__any_on+0x18>
  8082a8:	294007cc 	andi	r5,r5,31
  8082ac:	283ff526 	beq	r5,zero,808284 <__any_on+0x18>
  8082b0:	11800017 	ldw	r6,0(r2)
  8082b4:	3146d83a 	srl	r3,r6,r5
  8082b8:	194a983a 	sll	r5,r3,r5
  8082bc:	317ff51e 	bne	r6,r5,808294 <__any_on+0x28>
  8082c0:	003ff006 	br	808284 <__any_on+0x18>
  8082c4:	0005883a 	mov	r2,zero
  8082c8:	f800283a 	ret

008082cc <_realloc_r>:
  8082cc:	defff504 	addi	sp,sp,-44
  8082d0:	dc800315 	stw	r18,12(sp)
  8082d4:	dfc00a15 	stw	ra,40(sp)
  8082d8:	df000915 	stw	fp,36(sp)
  8082dc:	ddc00815 	stw	r23,32(sp)
  8082e0:	dd800715 	stw	r22,28(sp)
  8082e4:	dd400615 	stw	r21,24(sp)
  8082e8:	dd000515 	stw	r20,20(sp)
  8082ec:	dcc00415 	stw	r19,16(sp)
  8082f0:	dc400215 	stw	r17,8(sp)
  8082f4:	dc000115 	stw	r16,4(sp)
  8082f8:	3025883a 	mov	r18,r6
  8082fc:	28008b26 	beq	r5,zero,80852c <_realloc_r+0x260>
  808300:	2821883a 	mov	r16,r5
  808304:	2027883a 	mov	r19,r4
  808308:	944002c4 	addi	r17,r18,11
  80830c:	080ea080 	call	80ea08 <__malloc_lock>
  808310:	888005f0 	cmpltui	r2,r17,23
  808314:	1000521e 	bne	r2,zero,808460 <_realloc_r+0x194>
  808318:	017ffe04 	movi	r5,-8
  80831c:	8962703a 	and	r17,r17,r5
  808320:	8807883a 	mov	r3,r17
  808324:	88005116 	blt	r17,zero,80846c <_realloc_r+0x1a0>
  808328:	8c805036 	bltu	r17,r18,80846c <_realloc_r+0x1a0>
  80832c:	80bfff17 	ldw	r2,-4(r16)
  808330:	017fff04 	movi	r5,-4
  808334:	857ffe04 	addi	r21,r16,-8
  808338:	1168703a 	and	r20,r2,r5
  80833c:	ad2d883a 	add	r22,r21,r20
  808340:	a0c0390e 	bge	r20,r3,808428 <_realloc_r+0x15c>
  808344:	07002074 	movhi	fp,129
  808348:	e705d304 	addi	fp,fp,5964
  80834c:	e2000217 	ldw	r8,8(fp)
  808350:	b1000117 	ldw	r4,4(r22)
  808354:	45808e26 	beq	r8,r22,808590 <_realloc_r+0x2c4>
  808358:	01bfff84 	movi	r6,-2
  80835c:	218c703a 	and	r6,r4,r6
  808360:	b18d883a 	add	r6,r22,r6
  808364:	31800117 	ldw	r6,4(r6)
  808368:	3180004c 	andi	r6,r6,1
  80836c:	30004f1e 	bne	r6,zero,8084ac <_realloc_r+0x1e0>
  808370:	2148703a 	and	r4,r4,r5
  808374:	a10b883a 	add	r5,r20,r4
  808378:	28c0bf0e 	bge	r5,r3,808678 <_realloc_r+0x3ac>
  80837c:	1080004c 	andi	r2,r2,1
  808380:	10004c1e 	bne	r2,zero,8084b4 <_realloc_r+0x1e8>
  808384:	81fffe17 	ldw	r7,-8(r16)
  808388:	00bfff04 	movi	r2,-4
  80838c:	a9cfc83a 	sub	r7,r21,r7
  808390:	39400117 	ldw	r5,4(r7)
  808394:	288a703a 	and	r5,r5,r2
  808398:	b0000426 	beq	r22,zero,8083ac <_realloc_r+0xe0>
  80839c:	a16f883a 	add	r23,r20,r5
  8083a0:	b92f883a 	add	r23,r23,r4
  8083a4:	4580bf26 	beq	r8,r22,8086a4 <_realloc_r+0x3d8>
  8083a8:	b8c0930e 	bge	r23,r3,8085f8 <_realloc_r+0x32c>
  8083ac:	38004126 	beq	r7,zero,8084b4 <_realloc_r+0x1e8>
  8083b0:	a16f883a 	add	r23,r20,r5
  8083b4:	b8c03f16 	blt	r23,r3,8084b4 <_realloc_r+0x1e8>
  8083b8:	38800317 	ldw	r2,12(r7)
  8083bc:	38c00217 	ldw	r3,8(r7)
  8083c0:	a1bfff04 	addi	r6,r20,-4
  8083c4:	31400968 	cmpgeui	r5,r6,37
  8083c8:	18800315 	stw	r2,12(r3)
  8083cc:	10c00215 	stw	r3,8(r2)
  8083d0:	39000204 	addi	r4,r7,8
  8083d4:	3ded883a 	add	r22,r7,r23
  8083d8:	2800941e 	bne	r5,zero,80862c <_realloc_r+0x360>
  8083dc:	30800530 	cmpltui	r2,r6,20
  8083e0:	80c00017 	ldw	r3,0(r16)
  8083e4:	1000df1e 	bne	r2,zero,808764 <_realloc_r+0x498>
  8083e8:	38c00215 	stw	r3,8(r7)
  8083ec:	80c00117 	ldw	r3,4(r16)
  8083f0:	30800728 	cmpgeui	r2,r6,28
  8083f4:	38c00315 	stw	r3,12(r7)
  8083f8:	1000dc1e 	bne	r2,zero,80876c <_realloc_r+0x4a0>
  8083fc:	80c00217 	ldw	r3,8(r16)
  808400:	38800404 	addi	r2,r7,16
  808404:	84000204 	addi	r16,r16,8
  808408:	10c00015 	stw	r3,0(r2)
  80840c:	80c00117 	ldw	r3,4(r16)
  808410:	b829883a 	mov	r20,r23
  808414:	382b883a 	mov	r21,r7
  808418:	10c00115 	stw	r3,4(r2)
  80841c:	80c00217 	ldw	r3,8(r16)
  808420:	2021883a 	mov	r16,r4
  808424:	10c00215 	stw	r3,8(r2)
  808428:	a9800117 	ldw	r6,4(r21)
  80842c:	a445c83a 	sub	r2,r20,r17
  808430:	10c00430 	cmpltui	r3,r2,16
  808434:	3180004c 	andi	r6,r6,1
  808438:	18004926 	beq	r3,zero,808560 <_realloc_r+0x294>
  80843c:	a18cb03a 	or	r6,r20,r6
  808440:	a9800115 	stw	r6,4(r21)
  808444:	b0800117 	ldw	r2,4(r22)
  808448:	10800054 	ori	r2,r2,1
  80844c:	b0800115 	stw	r2,4(r22)
  808450:	9809883a 	mov	r4,r19
  808454:	080ea2c0 	call	80ea2c <__malloc_unlock>
  808458:	8025883a 	mov	r18,r16
  80845c:	00000606 	br	808478 <_realloc_r+0x1ac>
  808460:	04400404 	movi	r17,16
  808464:	00c00404 	movi	r3,16
  808468:	8cbfb02e 	bgeu	r17,r18,80832c <_realloc_r+0x60>
  80846c:	00800304 	movi	r2,12
  808470:	98800015 	stw	r2,0(r19)
  808474:	0025883a 	mov	r18,zero
  808478:	9005883a 	mov	r2,r18
  80847c:	dfc00a17 	ldw	ra,40(sp)
  808480:	df000917 	ldw	fp,36(sp)
  808484:	ddc00817 	ldw	r23,32(sp)
  808488:	dd800717 	ldw	r22,28(sp)
  80848c:	dd400617 	ldw	r21,24(sp)
  808490:	dd000517 	ldw	r20,20(sp)
  808494:	dcc00417 	ldw	r19,16(sp)
  808498:	dc800317 	ldw	r18,12(sp)
  80849c:	dc400217 	ldw	r17,8(sp)
  8084a0:	dc000117 	ldw	r16,4(sp)
  8084a4:	dec00b04 	addi	sp,sp,44
  8084a8:	f800283a 	ret
  8084ac:	1080004c 	andi	r2,r2,1
  8084b0:	10006c26 	beq	r2,zero,808664 <_realloc_r+0x398>
  8084b4:	900b883a 	mov	r5,r18
  8084b8:	9809883a 	mov	r4,r19
  8084bc:	08065c40 	call	8065c4 <_malloc_r>
  8084c0:	1025883a 	mov	r18,r2
  8084c4:	10001626 	beq	r2,zero,808520 <_realloc_r+0x254>
  8084c8:	80bfff17 	ldw	r2,-4(r16)
  8084cc:	013fff84 	movi	r4,-2
  8084d0:	90fffe04 	addi	r3,r18,-8
  8084d4:	1104703a 	and	r2,r2,r4
  8084d8:	a885883a 	add	r2,r21,r2
  8084dc:	10c05b26 	beq	r2,r3,80864c <_realloc_r+0x380>
  8084e0:	a1bfff04 	addi	r6,r20,-4
  8084e4:	30800968 	cmpgeui	r2,r6,37
  8084e8:	10006a1e 	bne	r2,zero,808694 <_realloc_r+0x3c8>
  8084ec:	30800530 	cmpltui	r2,r6,20
  8084f0:	81000017 	ldw	r4,0(r16)
  8084f4:	10003726 	beq	r2,zero,8085d4 <_realloc_r+0x308>
  8084f8:	9005883a 	mov	r2,r18
  8084fc:	8007883a 	mov	r3,r16
  808500:	11000015 	stw	r4,0(r2)
  808504:	19000117 	ldw	r4,4(r3)
  808508:	11000115 	stw	r4,4(r2)
  80850c:	18c00217 	ldw	r3,8(r3)
  808510:	10c00215 	stw	r3,8(r2)
  808514:	800b883a 	mov	r5,r16
  808518:	9809883a 	mov	r4,r19
  80851c:	0805ac40 	call	805ac4 <_free_r>
  808520:	9809883a 	mov	r4,r19
  808524:	080ea2c0 	call	80ea2c <__malloc_unlock>
  808528:	003fd306 	br	808478 <_realloc_r+0x1ac>
  80852c:	300b883a 	mov	r5,r6
  808530:	dfc00a17 	ldw	ra,40(sp)
  808534:	df000917 	ldw	fp,36(sp)
  808538:	ddc00817 	ldw	r23,32(sp)
  80853c:	dd800717 	ldw	r22,28(sp)
  808540:	dd400617 	ldw	r21,24(sp)
  808544:	dd000517 	ldw	r20,20(sp)
  808548:	dcc00417 	ldw	r19,16(sp)
  80854c:	dc800317 	ldw	r18,12(sp)
  808550:	dc400217 	ldw	r17,8(sp)
  808554:	dc000117 	ldw	r16,4(sp)
  808558:	dec00b04 	addi	sp,sp,44
  80855c:	08065c41 	jmpi	8065c4 <_malloc_r>
  808560:	344cb03a 	or	r6,r6,r17
  808564:	a9800115 	stw	r6,4(r21)
  808568:	ac4b883a 	add	r5,r21,r17
  80856c:	10800054 	ori	r2,r2,1
  808570:	28800115 	stw	r2,4(r5)
  808574:	b0800117 	ldw	r2,4(r22)
  808578:	29400204 	addi	r5,r5,8
  80857c:	9809883a 	mov	r4,r19
  808580:	10800054 	ori	r2,r2,1
  808584:	b0800115 	stw	r2,4(r22)
  808588:	0805ac40 	call	805ac4 <_free_r>
  80858c:	003fb006 	br	808450 <_realloc_r+0x184>
  808590:	2148703a 	and	r4,r4,r5
  808594:	a10b883a 	add	r5,r20,r4
  808598:	89800404 	addi	r6,r17,16
  80859c:	29bf7716 	blt	r5,r6,80837c <_realloc_r+0xb0>
  8085a0:	ac6b883a 	add	r21,r21,r17
  8085a4:	2c45c83a 	sub	r2,r5,r17
  8085a8:	e5400215 	stw	r21,8(fp)
  8085ac:	10800054 	ori	r2,r2,1
  8085b0:	a8800115 	stw	r2,4(r21)
  8085b4:	80bfff17 	ldw	r2,-4(r16)
  8085b8:	9809883a 	mov	r4,r19
  8085bc:	8025883a 	mov	r18,r16
  8085c0:	1080004c 	andi	r2,r2,1
  8085c4:	1462b03a 	or	r17,r2,r17
  8085c8:	847fff15 	stw	r17,-4(r16)
  8085cc:	080ea2c0 	call	80ea2c <__malloc_unlock>
  8085d0:	003fa906 	br	808478 <_realloc_r+0x1ac>
  8085d4:	91000015 	stw	r4,0(r18)
  8085d8:	80c00117 	ldw	r3,4(r16)
  8085dc:	30800728 	cmpgeui	r2,r6,28
  8085e0:	90c00115 	stw	r3,4(r18)
  8085e4:	1000551e 	bne	r2,zero,80873c <_realloc_r+0x470>
  8085e8:	81000217 	ldw	r4,8(r16)
  8085ec:	80c00204 	addi	r3,r16,8
  8085f0:	90800204 	addi	r2,r18,8
  8085f4:	003fc206 	br	808500 <_realloc_r+0x234>
  8085f8:	b0800317 	ldw	r2,12(r22)
  8085fc:	b0c00217 	ldw	r3,8(r22)
  808600:	a1bfff04 	addi	r6,r20,-4
  808604:	31400968 	cmpgeui	r5,r6,37
  808608:	18800315 	stw	r2,12(r3)
  80860c:	10c00215 	stw	r3,8(r2)
  808610:	38c00217 	ldw	r3,8(r7)
  808614:	38800317 	ldw	r2,12(r7)
  808618:	39000204 	addi	r4,r7,8
  80861c:	3ded883a 	add	r22,r7,r23
  808620:	18800315 	stw	r2,12(r3)
  808624:	10c00215 	stw	r3,8(r2)
  808628:	283f6c26 	beq	r5,zero,8083dc <_realloc_r+0x110>
  80862c:	800b883a 	mov	r5,r16
  808630:	d9c00015 	stw	r7,0(sp)
  808634:	0806f780 	call	806f78 <memmove>
  808638:	d9c00017 	ldw	r7,0(sp)
  80863c:	1021883a 	mov	r16,r2
  808640:	b829883a 	mov	r20,r23
  808644:	382b883a 	mov	r21,r7
  808648:	003f7706 	br	808428 <_realloc_r+0x15c>
  80864c:	90bfff17 	ldw	r2,-4(r18)
  808650:	00ffff04 	movi	r3,-4
  808654:	10c4703a 	and	r2,r2,r3
  808658:	a0a9883a 	add	r20,r20,r2
  80865c:	ad2d883a 	add	r22,r21,r20
  808660:	003f7106 	br	808428 <_realloc_r+0x15c>
  808664:	81fffe17 	ldw	r7,-8(r16)
  808668:	a9cfc83a 	sub	r7,r21,r7
  80866c:	39000117 	ldw	r4,4(r7)
  808670:	214a703a 	and	r5,r4,r5
  808674:	003f4d06 	br	8083ac <_realloc_r+0xe0>
  808678:	b0800317 	ldw	r2,12(r22)
  80867c:	b0c00217 	ldw	r3,8(r22)
  808680:	2829883a 	mov	r20,r5
  808684:	a96d883a 	add	r22,r21,r5
  808688:	18800315 	stw	r2,12(r3)
  80868c:	10c00215 	stw	r3,8(r2)
  808690:	003f6506 	br	808428 <_realloc_r+0x15c>
  808694:	800b883a 	mov	r5,r16
  808698:	9009883a 	mov	r4,r18
  80869c:	0806f780 	call	806f78 <memmove>
  8086a0:	003f9c06 	br	808514 <_realloc_r+0x248>
  8086a4:	88800404 	addi	r2,r17,16
  8086a8:	b8bf4016 	blt	r23,r2,8083ac <_realloc_r+0xe0>
  8086ac:	38800317 	ldw	r2,12(r7)
  8086b0:	38c00217 	ldw	r3,8(r7)
  8086b4:	a1bfff04 	addi	r6,r20,-4
  8086b8:	31000968 	cmpgeui	r4,r6,37
  8086bc:	18800315 	stw	r2,12(r3)
  8086c0:	10c00215 	stw	r3,8(r2)
  8086c4:	3c800204 	addi	r18,r7,8
  8086c8:	20003b1e 	bne	r4,zero,8087b8 <_realloc_r+0x4ec>
  8086cc:	30800530 	cmpltui	r2,r6,20
  8086d0:	80c00017 	ldw	r3,0(r16)
  8086d4:	1000361e 	bne	r2,zero,8087b0 <_realloc_r+0x4e4>
  8086d8:	38c00215 	stw	r3,8(r7)
  8086dc:	80c00117 	ldw	r3,4(r16)
  8086e0:	30800728 	cmpgeui	r2,r6,28
  8086e4:	38c00315 	stw	r3,12(r7)
  8086e8:	1000401e 	bne	r2,zero,8087ec <_realloc_r+0x520>
  8086ec:	80c00217 	ldw	r3,8(r16)
  8086f0:	38800404 	addi	r2,r7,16
  8086f4:	84000204 	addi	r16,r16,8
  8086f8:	10c00015 	stw	r3,0(r2)
  8086fc:	80c00117 	ldw	r3,4(r16)
  808700:	10c00115 	stw	r3,4(r2)
  808704:	80c00217 	ldw	r3,8(r16)
  808708:	10c00215 	stw	r3,8(r2)
  80870c:	3c47883a 	add	r3,r7,r17
  808710:	bc45c83a 	sub	r2,r23,r17
  808714:	e0c00215 	stw	r3,8(fp)
  808718:	10800054 	ori	r2,r2,1
  80871c:	18800115 	stw	r2,4(r3)
  808720:	38800117 	ldw	r2,4(r7)
  808724:	9809883a 	mov	r4,r19
  808728:	1080004c 	andi	r2,r2,1
  80872c:	1462b03a 	or	r17,r2,r17
  808730:	3c400115 	stw	r17,4(r7)
  808734:	080ea2c0 	call	80ea2c <__malloc_unlock>
  808738:	003f4f06 	br	808478 <_realloc_r+0x1ac>
  80873c:	80800217 	ldw	r2,8(r16)
  808740:	31800920 	cmpeqi	r6,r6,36
  808744:	90800215 	stw	r2,8(r18)
  808748:	80800317 	ldw	r2,12(r16)
  80874c:	90800315 	stw	r2,12(r18)
  808750:	81000417 	ldw	r4,16(r16)
  808754:	30000f1e 	bne	r6,zero,808794 <_realloc_r+0x4c8>
  808758:	80c00404 	addi	r3,r16,16
  80875c:	90800404 	addi	r2,r18,16
  808760:	003f6706 	br	808500 <_realloc_r+0x234>
  808764:	2005883a 	mov	r2,r4
  808768:	003f2706 	br	808408 <_realloc_r+0x13c>
  80876c:	80800217 	ldw	r2,8(r16)
  808770:	31800920 	cmpeqi	r6,r6,36
  808774:	38800415 	stw	r2,16(r7)
  808778:	80800317 	ldw	r2,12(r16)
  80877c:	38800515 	stw	r2,20(r7)
  808780:	80c00417 	ldw	r3,16(r16)
  808784:	3000121e 	bne	r6,zero,8087d0 <_realloc_r+0x504>
  808788:	38800604 	addi	r2,r7,24
  80878c:	84000404 	addi	r16,r16,16
  808790:	003f1d06 	br	808408 <_realloc_r+0x13c>
  808794:	91000415 	stw	r4,16(r18)
  808798:	81000517 	ldw	r4,20(r16)
  80879c:	80c00604 	addi	r3,r16,24
  8087a0:	90800604 	addi	r2,r18,24
  8087a4:	91000515 	stw	r4,20(r18)
  8087a8:	81000617 	ldw	r4,24(r16)
  8087ac:	003f5406 	br	808500 <_realloc_r+0x234>
  8087b0:	9005883a 	mov	r2,r18
  8087b4:	003fd006 	br	8086f8 <_realloc_r+0x42c>
  8087b8:	800b883a 	mov	r5,r16
  8087bc:	9009883a 	mov	r4,r18
  8087c0:	d9c00015 	stw	r7,0(sp)
  8087c4:	0806f780 	call	806f78 <memmove>
  8087c8:	d9c00017 	ldw	r7,0(sp)
  8087cc:	003fcf06 	br	80870c <_realloc_r+0x440>
  8087d0:	84000604 	addi	r16,r16,24
  8087d4:	38c00615 	stw	r3,24(r7)
  8087d8:	80ffff17 	ldw	r3,-4(r16)
  8087dc:	38800804 	addi	r2,r7,32
  8087e0:	38c00715 	stw	r3,28(r7)
  8087e4:	80c00017 	ldw	r3,0(r16)
  8087e8:	003f0706 	br	808408 <_realloc_r+0x13c>
  8087ec:	80800217 	ldw	r2,8(r16)
  8087f0:	31800920 	cmpeqi	r6,r6,36
  8087f4:	38800415 	stw	r2,16(r7)
  8087f8:	80800317 	ldw	r2,12(r16)
  8087fc:	38800515 	stw	r2,20(r7)
  808800:	80c00417 	ldw	r3,16(r16)
  808804:	3000031e 	bne	r6,zero,808814 <_realloc_r+0x548>
  808808:	38800604 	addi	r2,r7,24
  80880c:	84000404 	addi	r16,r16,16
  808810:	003fb906 	br	8086f8 <_realloc_r+0x42c>
  808814:	84000604 	addi	r16,r16,24
  808818:	38c00615 	stw	r3,24(r7)
  80881c:	80ffff17 	ldw	r3,-4(r16)
  808820:	38800804 	addi	r2,r7,32
  808824:	38c00715 	stw	r3,28(r7)
  808828:	80c00017 	ldw	r3,0(r16)
  80882c:	003fb206 	br	8086f8 <_realloc_r+0x42c>

00808830 <_sbrk_r>:
  808830:	defffe04 	addi	sp,sp,-8
  808834:	dc000015 	stw	r16,0(sp)
  808838:	00802074 	movhi	r2,129
  80883c:	2021883a 	mov	r16,r4
  808840:	2809883a 	mov	r4,r5
  808844:	dfc00115 	stw	ra,4(sp)
  808848:	1012c315 	stw	zero,19212(r2)
  80884c:	080ec040 	call	80ec04 <sbrk>
  808850:	10ffffd8 	cmpnei	r3,r2,-1
  808854:	18000426 	beq	r3,zero,808868 <_sbrk_r+0x38>
  808858:	dfc00117 	ldw	ra,4(sp)
  80885c:	dc000017 	ldw	r16,0(sp)
  808860:	dec00204 	addi	sp,sp,8
  808864:	f800283a 	ret
  808868:	00c02074 	movhi	r3,129
  80886c:	18d2c317 	ldw	r3,19212(r3)
  808870:	183ff926 	beq	r3,zero,808858 <_sbrk_r+0x28>
  808874:	80c00015 	stw	r3,0(r16)
  808878:	dfc00117 	ldw	ra,4(sp)
  80887c:	dc000017 	ldw	r16,0(sp)
  808880:	dec00204 	addi	sp,sp,8
  808884:	f800283a 	ret

00808888 <__sread>:
  808888:	defffe04 	addi	sp,sp,-8
  80888c:	dc000015 	stw	r16,0(sp)
  808890:	2821883a 	mov	r16,r5
  808894:	2940038f 	ldh	r5,14(r5)
  808898:	dfc00115 	stw	ra,4(sp)
  80889c:	080a6200 	call	80a620 <_read_r>
  8088a0:	10000716 	blt	r2,zero,8088c0 <__sread+0x38>
  8088a4:	80c01417 	ldw	r3,80(r16)
  8088a8:	1887883a 	add	r3,r3,r2
  8088ac:	80c01415 	stw	r3,80(r16)
  8088b0:	dfc00117 	ldw	ra,4(sp)
  8088b4:	dc000017 	ldw	r16,0(sp)
  8088b8:	dec00204 	addi	sp,sp,8
  8088bc:	f800283a 	ret
  8088c0:	80c0030b 	ldhu	r3,12(r16)
  8088c4:	18fbffcc 	andi	r3,r3,61439
  8088c8:	80c0030d 	sth	r3,12(r16)
  8088cc:	dfc00117 	ldw	ra,4(sp)
  8088d0:	dc000017 	ldw	r16,0(sp)
  8088d4:	dec00204 	addi	sp,sp,8
  8088d8:	f800283a 	ret

008088dc <__seofread>:
  8088dc:	0005883a 	mov	r2,zero
  8088e0:	f800283a 	ret

008088e4 <__swrite>:
  8088e4:	2880030b 	ldhu	r2,12(r5)
  8088e8:	defffb04 	addi	sp,sp,-20
  8088ec:	dcc00315 	stw	r19,12(sp)
  8088f0:	dc800215 	stw	r18,8(sp)
  8088f4:	dc400115 	stw	r17,4(sp)
  8088f8:	dc000015 	stw	r16,0(sp)
  8088fc:	dfc00415 	stw	ra,16(sp)
  808900:	10c0400c 	andi	r3,r2,256
  808904:	2821883a 	mov	r16,r5
  808908:	2023883a 	mov	r17,r4
  80890c:	2940038f 	ldh	r5,14(r5)
  808910:	3025883a 	mov	r18,r6
  808914:	3827883a 	mov	r19,r7
  808918:	18000c1e 	bne	r3,zero,80894c <__swrite+0x68>
  80891c:	10bbffcc 	andi	r2,r2,61439
  808920:	980f883a 	mov	r7,r19
  808924:	900d883a 	mov	r6,r18
  808928:	8809883a 	mov	r4,r17
  80892c:	8080030d 	sth	r2,12(r16)
  808930:	dfc00417 	ldw	ra,16(sp)
  808934:	dcc00317 	ldw	r19,12(sp)
  808938:	dc800217 	ldw	r18,8(sp)
  80893c:	dc400117 	ldw	r17,4(sp)
  808940:	dc000017 	ldw	r16,0(sp)
  808944:	dec00504 	addi	sp,sp,20
  808948:	0809ec41 	jmpi	809ec4 <_write_r>
  80894c:	01c00084 	movi	r7,2
  808950:	000d883a 	mov	r6,zero
  808954:	080a56c0 	call	80a56c <_lseek_r>
  808958:	8080030b 	ldhu	r2,12(r16)
  80895c:	8140038f 	ldh	r5,14(r16)
  808960:	003fee06 	br	80891c <__swrite+0x38>

00808964 <__sseek>:
  808964:	defffe04 	addi	sp,sp,-8
  808968:	dc000015 	stw	r16,0(sp)
  80896c:	2821883a 	mov	r16,r5
  808970:	2940038f 	ldh	r5,14(r5)
  808974:	dfc00115 	stw	ra,4(sp)
  808978:	080a56c0 	call	80a56c <_lseek_r>
  80897c:	10ffffd8 	cmpnei	r3,r2,-1
  808980:	18000826 	beq	r3,zero,8089a4 <__sseek+0x40>
  808984:	80c0030b 	ldhu	r3,12(r16)
  808988:	80801415 	stw	r2,80(r16)
  80898c:	18c40014 	ori	r3,r3,4096
  808990:	80c0030d 	sth	r3,12(r16)
  808994:	dfc00117 	ldw	ra,4(sp)
  808998:	dc000017 	ldw	r16,0(sp)
  80899c:	dec00204 	addi	sp,sp,8
  8089a0:	f800283a 	ret
  8089a4:	80c0030b 	ldhu	r3,12(r16)
  8089a8:	18fbffcc 	andi	r3,r3,61439
  8089ac:	80c0030d 	sth	r3,12(r16)
  8089b0:	dfc00117 	ldw	ra,4(sp)
  8089b4:	dc000017 	ldw	r16,0(sp)
  8089b8:	dec00204 	addi	sp,sp,8
  8089bc:	f800283a 	ret

008089c0 <__sclose>:
  8089c0:	2940038f 	ldh	r5,14(r5)
  8089c4:	0809f281 	jmpi	809f28 <_close_r>

008089c8 <__sprint_r.part.0>:
  8089c8:	28801917 	ldw	r2,100(r5)
  8089cc:	defff604 	addi	sp,sp,-40
  8089d0:	dcc00315 	stw	r19,12(sp)
  8089d4:	dfc00915 	stw	ra,36(sp)
  8089d8:	df000815 	stw	fp,32(sp)
  8089dc:	ddc00715 	stw	r23,28(sp)
  8089e0:	dd800615 	stw	r22,24(sp)
  8089e4:	dd400515 	stw	r21,20(sp)
  8089e8:	dd000415 	stw	r20,16(sp)
  8089ec:	dc800215 	stw	r18,8(sp)
  8089f0:	dc400115 	stw	r17,4(sp)
  8089f4:	dc000015 	stw	r16,0(sp)
  8089f8:	1088000c 	andi	r2,r2,8192
  8089fc:	3027883a 	mov	r19,r6
  808a00:	10002c26 	beq	r2,zero,808ab4 <__sprint_r.part.0+0xec>
  808a04:	30800217 	ldw	r2,8(r6)
  808a08:	35000017 	ldw	r20,0(r6)
  808a0c:	2821883a 	mov	r16,r5
  808a10:	2023883a 	mov	r17,r4
  808a14:	05bfff04 	movi	r22,-4
  808a18:	10002426 	beq	r2,zero,808aac <__sprint_r.part.0+0xe4>
  808a1c:	a5400117 	ldw	r21,4(r20)
  808a20:	a5c00017 	ldw	r23,0(r20)
  808a24:	a824d0ba 	srli	r18,r21,2
  808a28:	90001b26 	beq	r18,zero,808a98 <__sprint_r.part.0+0xd0>
  808a2c:	0039883a 	mov	fp,zero
  808a30:	00000206 	br	808a3c <__sprint_r.part.0+0x74>
  808a34:	bdc00104 	addi	r23,r23,4
  808a38:	97001626 	beq	r18,fp,808a94 <__sprint_r.part.0+0xcc>
  808a3c:	b9400017 	ldw	r5,0(r23)
  808a40:	800d883a 	mov	r6,r16
  808a44:	8809883a 	mov	r4,r17
  808a48:	080a3800 	call	80a380 <_fputwc_r>
  808a4c:	10bfffe0 	cmpeqi	r2,r2,-1
  808a50:	e7000044 	addi	fp,fp,1
  808a54:	103ff726 	beq	r2,zero,808a34 <__sprint_r.part.0+0x6c>
  808a58:	00bfffc4 	movi	r2,-1
  808a5c:	98000215 	stw	zero,8(r19)
  808a60:	98000115 	stw	zero,4(r19)
  808a64:	dfc00917 	ldw	ra,36(sp)
  808a68:	df000817 	ldw	fp,32(sp)
  808a6c:	ddc00717 	ldw	r23,28(sp)
  808a70:	dd800617 	ldw	r22,24(sp)
  808a74:	dd400517 	ldw	r21,20(sp)
  808a78:	dd000417 	ldw	r20,16(sp)
  808a7c:	dcc00317 	ldw	r19,12(sp)
  808a80:	dc800217 	ldw	r18,8(sp)
  808a84:	dc400117 	ldw	r17,4(sp)
  808a88:	dc000017 	ldw	r16,0(sp)
  808a8c:	dec00a04 	addi	sp,sp,40
  808a90:	f800283a 	ret
  808a94:	98800217 	ldw	r2,8(r19)
  808a98:	adaa703a 	and	r21,r21,r22
  808a9c:	1545c83a 	sub	r2,r2,r21
  808aa0:	98800215 	stw	r2,8(r19)
  808aa4:	a5000204 	addi	r20,r20,8
  808aa8:	103fdc1e 	bne	r2,zero,808a1c <__sprint_r.part.0+0x54>
  808aac:	0005883a 	mov	r2,zero
  808ab0:	003fea06 	br	808a5c <__sprint_r.part.0+0x94>
  808ab4:	0805dc00 	call	805dc0 <__sfvwrite_r>
  808ab8:	003fe806 	br	808a5c <__sprint_r.part.0+0x94>

00808abc <__sprint_r>:
  808abc:	30c00217 	ldw	r3,8(r6)
  808ac0:	18000126 	beq	r3,zero,808ac8 <__sprint_r+0xc>
  808ac4:	08089c81 	jmpi	8089c8 <__sprint_r.part.0>
  808ac8:	30000115 	stw	zero,4(r6)
  808acc:	0005883a 	mov	r2,zero
  808ad0:	f800283a 	ret

00808ad4 <___vfiprintf_internal_r>:
  808ad4:	deffcf04 	addi	sp,sp,-196
  808ad8:	dd802d15 	stw	r22,180(sp)
  808adc:	dd402c15 	stw	r21,176(sp)
  808ae0:	dd002b15 	stw	r20,172(sp)
  808ae4:	dfc03015 	stw	ra,192(sp)
  808ae8:	df002f15 	stw	fp,188(sp)
  808aec:	ddc02e15 	stw	r23,184(sp)
  808af0:	dcc02a15 	stw	r19,168(sp)
  808af4:	dc802915 	stw	r18,164(sp)
  808af8:	dc402815 	stw	r17,160(sp)
  808afc:	dc002715 	stw	r16,156(sp)
  808b00:	d9c00415 	stw	r7,16(sp)
  808b04:	202d883a 	mov	r22,r4
  808b08:	282b883a 	mov	r21,r5
  808b0c:	3029883a 	mov	r20,r6
  808b10:	20000226 	beq	r4,zero,808b1c <___vfiprintf_internal_r+0x48>
  808b14:	20800e17 	ldw	r2,56(r4)
  808b18:	1001b426 	beq	r2,zero,8091ec <___vfiprintf_internal_r+0x718>
  808b1c:	a880030b 	ldhu	r2,12(r21)
  808b20:	10c8000c 	andi	r3,r2,8192
  808b24:	1800061e 	bne	r3,zero,808b40 <___vfiprintf_internal_r+0x6c>
  808b28:	a8c01917 	ldw	r3,100(r21)
  808b2c:	0137ffc4 	movi	r4,-8193
  808b30:	10880014 	ori	r2,r2,8192
  808b34:	1906703a 	and	r3,r3,r4
  808b38:	a880030d 	sth	r2,12(r21)
  808b3c:	a8c01915 	stw	r3,100(r21)
  808b40:	10c0020c 	andi	r3,r2,8
  808b44:	18010826 	beq	r3,zero,808f68 <___vfiprintf_internal_r+0x494>
  808b48:	a8c00417 	ldw	r3,16(r21)
  808b4c:	18010626 	beq	r3,zero,808f68 <___vfiprintf_internal_r+0x494>
  808b50:	1080068c 	andi	r2,r2,26
  808b54:	10800298 	cmpnei	r2,r2,10
  808b58:	10010b26 	beq	r2,zero,808f88 <___vfiprintf_internal_r+0x4b4>
  808b5c:	dc801704 	addi	r18,sp,92
  808b60:	dc800a15 	stw	r18,40(sp)
  808b64:	d8000c15 	stw	zero,48(sp)
  808b68:	d8000b15 	stw	zero,44(sp)
  808b6c:	9021883a 	mov	r16,r18
  808b70:	d8000515 	stw	zero,20(sp)
  808b74:	d8000115 	stw	zero,4(sp)
  808b78:	a0c00007 	ldb	r3,0(r20)
  808b7c:	1800e826 	beq	r3,zero,808f20 <___vfiprintf_internal_r+0x44c>
  808b80:	a023883a 	mov	r17,r20
  808b84:	00000306 	br	808b94 <___vfiprintf_internal_r+0xc0>
  808b88:	88c00047 	ldb	r3,1(r17)
  808b8c:	8c400044 	addi	r17,r17,1
  808b90:	18012a26 	beq	r3,zero,80903c <___vfiprintf_internal_r+0x568>
  808b94:	18c00958 	cmpnei	r3,r3,37
  808b98:	183ffb1e 	bne	r3,zero,808b88 <___vfiprintf_internal_r+0xb4>
  808b9c:	8d27c83a 	sub	r19,r17,r20
  808ba0:	8d01281e 	bne	r17,r20,809044 <___vfiprintf_internal_r+0x570>
  808ba4:	88800003 	ldbu	r2,0(r17)
  808ba8:	10803fcc 	andi	r2,r2,255
  808bac:	1080201c 	xori	r2,r2,128
  808bb0:	10bfe004 	addi	r2,r2,-128
  808bb4:	1000da26 	beq	r2,zero,808f20 <___vfiprintf_internal_r+0x44c>
  808bb8:	88800047 	ldb	r2,1(r17)
  808bbc:	8d000044 	addi	r20,r17,1
  808bc0:	d8000945 	stb	zero,37(sp)
  808bc4:	000b883a 	mov	r5,zero
  808bc8:	000d883a 	mov	r6,zero
  808bcc:	023fffc4 	movi	r8,-1
  808bd0:	0023883a 	mov	r17,zero
  808bd4:	001b883a 	mov	r13,zero
  808bd8:	a5000044 	addi	r20,r20,1
  808bdc:	10fff804 	addi	r3,r2,-32
  808be0:	19001668 	cmpgeui	r4,r3,89
  808be4:	20006c1e 	bne	r4,zero,808d98 <___vfiprintf_internal_r+0x2c4>
  808be8:	180690ba 	slli	r3,r3,2
  808bec:	01002074 	movhi	r4,129
  808bf0:	1909883a 	add	r4,r3,r4
  808bf4:	20e2ff17 	ldw	r3,-29700(r4)
  808bf8:	1800683a 	jmp	r3
  808bfc:	008094fc 	xorhi	r2,zero,595
  808c00:	00808d98 	cmpnei	r2,zero,566
  808c04:	00808d98 	cmpnei	r2,zero,566
  808c08:	008094f0 	cmpltui	r2,zero,595
  808c0c:	00808d98 	cmpnei	r2,zero,566
  808c10:	00808d98 	cmpnei	r2,zero,566
  808c14:	00808d98 	cmpnei	r2,zero,566
  808c18:	00808d98 	cmpnei	r2,zero,566
  808c1c:	00808d98 	cmpnei	r2,zero,566
  808c20:	00808d98 	cmpnei	r2,zero,566
  808c24:	008094c8 	cmpgei	r2,zero,595
  808c28:	008094b8 	rdprs	r2,zero,594
  808c2c:	00808d98 	cmpnei	r2,zero,566
  808c30:	008094a0 	cmpeqi	r2,zero,594
  808c34:	00809454 	movui	r2,593
  808c38:	00808d98 	cmpnei	r2,zero,566
  808c3c:	00809448 	cmpgei	r2,zero,593
  808c40:	00808d60 	cmpeqi	r2,zero,565
  808c44:	00808d60 	cmpeqi	r2,zero,565
  808c48:	00808d60 	cmpeqi	r2,zero,565
  808c4c:	00808d60 	cmpeqi	r2,zero,565
  808c50:	00808d60 	cmpeqi	r2,zero,565
  808c54:	00808d60 	cmpeqi	r2,zero,565
  808c58:	00808d60 	cmpeqi	r2,zero,565
  808c5c:	00808d60 	cmpeqi	r2,zero,565
  808c60:	00808d60 	cmpeqi	r2,zero,565
  808c64:	00808d98 	cmpnei	r2,zero,566
  808c68:	00808d98 	cmpnei	r2,zero,566
  808c6c:	00808d98 	cmpnei	r2,zero,566
  808c70:	00808d98 	cmpnei	r2,zero,566
  808c74:	00808d98 	cmpnei	r2,zero,566
  808c78:	00808d98 	cmpnei	r2,zero,566
  808c7c:	00808d98 	cmpnei	r2,zero,566
  808c80:	00808d98 	cmpnei	r2,zero,566
  808c84:	00808d98 	cmpnei	r2,zero,566
  808c88:	00808d98 	cmpnei	r2,zero,566
  808c8c:	00809364 	muli	r2,zero,589
  808c90:	00808d98 	cmpnei	r2,zero,566
  808c94:	00808d98 	cmpnei	r2,zero,566
  808c98:	00808d98 	cmpnei	r2,zero,566
  808c9c:	00808d98 	cmpnei	r2,zero,566
  808ca0:	00808d98 	cmpnei	r2,zero,566
  808ca4:	00808d98 	cmpnei	r2,zero,566
  808ca8:	00808d98 	cmpnei	r2,zero,566
  808cac:	00808d98 	cmpnei	r2,zero,566
  808cb0:	00808d98 	cmpnei	r2,zero,566
  808cb4:	00808d98 	cmpnei	r2,zero,566
  808cb8:	00808fd4 	movui	r2,575
  808cbc:	00808d98 	cmpnei	r2,zero,566
  808cc0:	00808d98 	cmpnei	r2,zero,566
  808cc4:	00808d98 	cmpnei	r2,zero,566
  808cc8:	00808d98 	cmpnei	r2,zero,566
  808ccc:	00808d98 	cmpnei	r2,zero,566
  808cd0:	00808fac 	andhi	r2,zero,574
  808cd4:	00808d98 	cmpnei	r2,zero,566
  808cd8:	00808d98 	cmpnei	r2,zero,566
  808cdc:	0080931c 	xori	r2,zero,588
  808ce0:	00808d98 	cmpnei	r2,zero,566
  808ce4:	00808d98 	cmpnei	r2,zero,566
  808ce8:	00808d98 	cmpnei	r2,zero,566
  808cec:	00808d98 	cmpnei	r2,zero,566
  808cf0:	00808d98 	cmpnei	r2,zero,566
  808cf4:	00808d98 	cmpnei	r2,zero,566
  808cf8:	00808d98 	cmpnei	r2,zero,566
  808cfc:	00808d98 	cmpnei	r2,zero,566
  808d00:	00808d98 	cmpnei	r2,zero,566
  808d04:	00808d98 	cmpnei	r2,zero,566
  808d08:	008092f4 	movhi	r2,587
  808d0c:	008091f4 	movhi	r2,583
  808d10:	00808d98 	cmpnei	r2,zero,566
  808d14:	00808d98 	cmpnei	r2,zero,566
  808d18:	00808d98 	cmpnei	r2,zero,566
  808d1c:	00809298 	cmpnei	r2,zero,586
  808d20:	008091f4 	movhi	r2,583
  808d24:	00808d98 	cmpnei	r2,zero,566
  808d28:	00808d98 	cmpnei	r2,zero,566
  808d2c:	008092e0 	cmpeqi	r2,zero,587
  808d30:	00808d98 	cmpnei	r2,zero,566
  808d34:	008092a4 	muli	r2,zero,586
  808d38:	00808fd8 	cmpnei	r2,zero,575
  808d3c:	008095d4 	movui	r2,599
  808d40:	008095c8 	cmpgei	r2,zero,599
  808d44:	00808d98 	cmpnei	r2,zero,566
  808d48:	00809570 	cmpltui	r2,zero,597
  808d4c:	00808d98 	cmpnei	r2,zero,566
  808d50:	00808fb0 	cmpltui	r2,zero,574
  808d54:	00808d98 	cmpnei	r2,zero,566
  808d58:	00808d98 	cmpnei	r2,zero,566
  808d5c:	00809528 	cmpgeui	r2,zero,596
  808d60:	0023883a 	mov	r17,zero
  808d64:	113ff404 	addi	r4,r2,-48
  808d68:	880690ba 	slli	r3,r17,2
  808d6c:	a0800007 	ldb	r2,0(r20)
  808d70:	a5000044 	addi	r20,r20,1
  808d74:	1c63883a 	add	r17,r3,r17
  808d78:	8c63883a 	add	r17,r17,r17
  808d7c:	2463883a 	add	r17,r4,r17
  808d80:	113ff404 	addi	r4,r2,-48
  808d84:	20c002b0 	cmpltui	r3,r4,10
  808d88:	183ff71e 	bne	r3,zero,808d68 <___vfiprintf_internal_r+0x294>
  808d8c:	10fff804 	addi	r3,r2,-32
  808d90:	19001668 	cmpgeui	r4,r3,89
  808d94:	203f9426 	beq	r4,zero,808be8 <___vfiprintf_internal_r+0x114>
  808d98:	29403fcc 	andi	r5,r5,255
  808d9c:	2803e31e 	bne	r5,zero,809d2c <___vfiprintf_internal_r+0x1258>
  808da0:	10005f26 	beq	r2,zero,808f20 <___vfiprintf_internal_r+0x44c>
  808da4:	d8800d05 	stb	r2,52(sp)
  808da8:	d8000945 	stb	zero,37(sp)
  808dac:	05c00044 	movi	r23,1
  808db0:	07000044 	movi	fp,1
  808db4:	dcc00d04 	addi	r19,sp,52
  808db8:	db400015 	stw	r13,0(sp)
  808dbc:	0011883a 	mov	r8,zero
  808dc0:	d8800017 	ldw	r2,0(sp)
  808dc4:	1380008c 	andi	r14,r2,2
  808dc8:	70000126 	beq	r14,zero,808dd0 <___vfiprintf_internal_r+0x2fc>
  808dcc:	bdc00084 	addi	r23,r23,2
  808dd0:	d8800017 	ldw	r2,0(sp)
  808dd4:	d9000b17 	ldw	r4,44(sp)
  808dd8:	1340210c 	andi	r13,r2,132
  808ddc:	21800044 	addi	r6,r4,1
  808de0:	d8800c17 	ldw	r2,48(sp)
  808de4:	300b883a 	mov	r5,r6
  808de8:	6800021e 	bne	r13,zero,808df4 <___vfiprintf_internal_r+0x320>
  808dec:	8dc7c83a 	sub	r3,r17,r23
  808df0:	00c2d716 	blt	zero,r3,809950 <___vfiprintf_internal_r+0xe7c>
  808df4:	d8c00947 	ldb	r3,37(sp)
  808df8:	81800204 	addi	r6,r16,8
  808dfc:	18000d26 	beq	r3,zero,808e34 <___vfiprintf_internal_r+0x360>
  808e00:	d8c00944 	addi	r3,sp,37
  808e04:	10800044 	addi	r2,r2,1
  808e08:	80c00015 	stw	r3,0(r16)
  808e0c:	00c00044 	movi	r3,1
  808e10:	80c00115 	stw	r3,4(r16)
  808e14:	d8800c15 	stw	r2,48(sp)
  808e18:	d9400b15 	stw	r5,44(sp)
  808e1c:	28c00208 	cmpgei	r3,r5,8
  808e20:	1802ac1e 	bne	r3,zero,8098d4 <___vfiprintf_internal_r+0xe00>
  808e24:	2809883a 	mov	r4,r5
  808e28:	3021883a 	mov	r16,r6
  808e2c:	29400044 	addi	r5,r5,1
  808e30:	31800204 	addi	r6,r6,8
  808e34:	70001826 	beq	r14,zero,808e98 <___vfiprintf_internal_r+0x3c4>
  808e38:	d8c00984 	addi	r3,sp,38
  808e3c:	10800084 	addi	r2,r2,2
  808e40:	80c00015 	stw	r3,0(r16)
  808e44:	00c00084 	movi	r3,2
  808e48:	80c00115 	stw	r3,4(r16)
  808e4c:	d8800c15 	stw	r2,48(sp)
  808e50:	d9400b15 	stw	r5,44(sp)
  808e54:	28c00208 	cmpgei	r3,r5,8
  808e58:	1802b626 	beq	r3,zero,809934 <___vfiprintf_internal_r+0xe60>
  808e5c:	10031226 	beq	r2,zero,809aa8 <___vfiprintf_internal_r+0xfd4>
  808e60:	d9800a04 	addi	r6,sp,40
  808e64:	a80b883a 	mov	r5,r21
  808e68:	b009883a 	mov	r4,r22
  808e6c:	da000315 	stw	r8,12(sp)
  808e70:	db400215 	stw	r13,8(sp)
  808e74:	08089c80 	call	8089c8 <__sprint_r.part.0>
  808e78:	10002b1e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  808e7c:	d9000b17 	ldw	r4,44(sp)
  808e80:	d8800c17 	ldw	r2,48(sp)
  808e84:	da000317 	ldw	r8,12(sp)
  808e88:	db400217 	ldw	r13,8(sp)
  808e8c:	d9801904 	addi	r6,sp,100
  808e90:	21400044 	addi	r5,r4,1
  808e94:	9021883a 	mov	r16,r18
  808e98:	6b402018 	cmpnei	r13,r13,128
  808e9c:	68020c26 	beq	r13,zero,8096d0 <___vfiprintf_internal_r+0xbfc>
  808ea0:	4711c83a 	sub	r8,r8,fp
  808ea4:	02024b16 	blt	zero,r8,8097d4 <___vfiprintf_internal_r+0xd00>
  808ea8:	e085883a 	add	r2,fp,r2
  808eac:	d9400b15 	stw	r5,44(sp)
  808eb0:	84c00015 	stw	r19,0(r16)
  808eb4:	87000115 	stw	fp,4(r16)
  808eb8:	d8800c15 	stw	r2,48(sp)
  808ebc:	29400210 	cmplti	r5,r5,8
  808ec0:	2800081e 	bne	r5,zero,808ee4 <___vfiprintf_internal_r+0x410>
  808ec4:	10008f26 	beq	r2,zero,809104 <___vfiprintf_internal_r+0x630>
  808ec8:	d9800a04 	addi	r6,sp,40
  808ecc:	a80b883a 	mov	r5,r21
  808ed0:	b009883a 	mov	r4,r22
  808ed4:	08089c80 	call	8089c8 <__sprint_r.part.0>
  808ed8:	1000131e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  808edc:	d8800c17 	ldw	r2,48(sp)
  808ee0:	900d883a 	mov	r6,r18
  808ee4:	d8c00017 	ldw	r3,0(sp)
  808ee8:	1cc0010c 	andi	r19,r3,4
  808eec:	98000226 	beq	r19,zero,808ef8 <___vfiprintf_internal_r+0x424>
  808ef0:	8de1c83a 	sub	r16,r17,r23
  808ef4:	04008a16 	blt	zero,r16,809120 <___vfiprintf_internal_r+0x64c>
  808ef8:	8dc0010e 	bge	r17,r23,808f00 <___vfiprintf_internal_r+0x42c>
  808efc:	b823883a 	mov	r17,r23
  808f00:	d8c00117 	ldw	r3,4(sp)
  808f04:	1c47883a 	add	r3,r3,r17
  808f08:	d8c00115 	stw	r3,4(sp)
  808f0c:	1002671e 	bne	r2,zero,8098ac <___vfiprintf_internal_r+0xdd8>
  808f10:	a0c00007 	ldb	r3,0(r20)
  808f14:	d8000b15 	stw	zero,44(sp)
  808f18:	9021883a 	mov	r16,r18
  808f1c:	183f181e 	bne	r3,zero,808b80 <___vfiprintf_internal_r+0xac>
  808f20:	d8800c17 	ldw	r2,48(sp)
  808f24:	1003831e 	bne	r2,zero,809d34 <___vfiprintf_internal_r+0x1260>
  808f28:	a880030b 	ldhu	r2,12(r21)
  808f2c:	1080100c 	andi	r2,r2,64
  808f30:	10039e1e 	bne	r2,zero,809dac <___vfiprintf_internal_r+0x12d8>
  808f34:	d8800117 	ldw	r2,4(sp)
  808f38:	dfc03017 	ldw	ra,192(sp)
  808f3c:	df002f17 	ldw	fp,188(sp)
  808f40:	ddc02e17 	ldw	r23,184(sp)
  808f44:	dd802d17 	ldw	r22,180(sp)
  808f48:	dd402c17 	ldw	r21,176(sp)
  808f4c:	dd002b17 	ldw	r20,172(sp)
  808f50:	dcc02a17 	ldw	r19,168(sp)
  808f54:	dc802917 	ldw	r18,164(sp)
  808f58:	dc402817 	ldw	r17,160(sp)
  808f5c:	dc002717 	ldw	r16,156(sp)
  808f60:	dec03104 	addi	sp,sp,196
  808f64:	f800283a 	ret
  808f68:	a80b883a 	mov	r5,r21
  808f6c:	b009883a 	mov	r4,r22
  808f70:	08038d80 	call	8038d8 <__swsetup_r>
  808f74:	10038d1e 	bne	r2,zero,809dac <___vfiprintf_internal_r+0x12d8>
  808f78:	a880030b 	ldhu	r2,12(r21)
  808f7c:	1080068c 	andi	r2,r2,26
  808f80:	10800298 	cmpnei	r2,r2,10
  808f84:	103ef51e 	bne	r2,zero,808b5c <___vfiprintf_internal_r+0x88>
  808f88:	a880038f 	ldh	r2,14(r21)
  808f8c:	103ef316 	blt	r2,zero,808b5c <___vfiprintf_internal_r+0x88>
  808f90:	d9c00417 	ldw	r7,16(sp)
  808f94:	a00d883a 	mov	r6,r20
  808f98:	a80b883a 	mov	r5,r21
  808f9c:	b009883a 	mov	r4,r22
  808fa0:	0809e040 	call	809e04 <__sbprintf>
  808fa4:	d8800115 	stw	r2,4(sp)
  808fa8:	003fe206 	br	808f34 <___vfiprintf_internal_r+0x460>
  808fac:	6b400414 	ori	r13,r13,16
  808fb0:	6880080c 	andi	r2,r13,32
  808fb4:	10004726 	beq	r2,zero,8090d4 <___vfiprintf_internal_r+0x600>
  808fb8:	d8c00417 	ldw	r3,16(sp)
  808fbc:	00800044 	movi	r2,1
  808fc0:	1dc00017 	ldw	r23,0(r3)
  808fc4:	1f000117 	ldw	fp,4(r3)
  808fc8:	18c00204 	addi	r3,r3,8
  808fcc:	d8c00415 	stw	r3,16(sp)
  808fd0:	00000906 	br	808ff8 <___vfiprintf_internal_r+0x524>
  808fd4:	6b400414 	ori	r13,r13,16
  808fd8:	6880080c 	andi	r2,r13,32
  808fdc:	10003126 	beq	r2,zero,8090a4 <___vfiprintf_internal_r+0x5d0>
  808fe0:	d8c00417 	ldw	r3,16(sp)
  808fe4:	0005883a 	mov	r2,zero
  808fe8:	1dc00017 	ldw	r23,0(r3)
  808fec:	1f000117 	ldw	fp,4(r3)
  808ff0:	18c00204 	addi	r3,r3,8
  808ff4:	d8c00415 	stw	r3,16(sp)
  808ff8:	d8000945 	stb	zero,37(sp)
  808ffc:	40ffffe0 	cmpeqi	r3,r8,-1
  809000:	001d883a 	mov	r14,zero
  809004:	1800f21e 	bne	r3,zero,8093d0 <___vfiprintf_internal_r+0x8fc>
  809008:	04ffdfc4 	movi	r19,-129
  80900c:	6cc8703a 	and	r4,r13,r19
  809010:	bf06b03a 	or	r3,r23,fp
  809014:	d9000015 	stw	r4,0(sp)
  809018:	18024b1e 	bne	r3,zero,809948 <___vfiprintf_internal_r+0xe74>
  80901c:	4003091e 	bne	r8,zero,809c44 <___vfiprintf_internal_r+0x1170>
  809020:	1002a61e 	bne	r2,zero,809abc <___vfiprintf_internal_r+0xfe8>
  809024:	6f00004c 	andi	fp,r13,1
  809028:	e002b826 	beq	fp,zero,809b0c <___vfiprintf_internal_r+0x1038>
  80902c:	00800c04 	movi	r2,48
  809030:	d88016c5 	stb	r2,91(sp)
  809034:	dcc016c4 	addi	r19,sp,91
  809038:	00008e06 	br	809274 <___vfiprintf_internal_r+0x7a0>
  80903c:	8d27c83a 	sub	r19,r17,r20
  809040:	8d3fb726 	beq	r17,r20,808f20 <___vfiprintf_internal_r+0x44c>
  809044:	d8c00c17 	ldw	r3,48(sp)
  809048:	d8800b17 	ldw	r2,44(sp)
  80904c:	85000015 	stw	r20,0(r16)
  809050:	98c7883a 	add	r3,r19,r3
  809054:	10800044 	addi	r2,r2,1
  809058:	d8800b15 	stw	r2,44(sp)
  80905c:	84c00115 	stw	r19,4(r16)
  809060:	d8c00c15 	stw	r3,48(sp)
  809064:	10800208 	cmpgei	r2,r2,8
  809068:	1000061e 	bne	r2,zero,809084 <___vfiprintf_internal_r+0x5b0>
  80906c:	84000204 	addi	r16,r16,8
  809070:	d8c00117 	ldw	r3,4(sp)
  809074:	88800003 	ldbu	r2,0(r17)
  809078:	1cc7883a 	add	r3,r3,r19
  80907c:	d8c00115 	stw	r3,4(sp)
  809080:	003ec906 	br	808ba8 <___vfiprintf_internal_r+0xd4>
  809084:	18027f26 	beq	r3,zero,809a84 <___vfiprintf_internal_r+0xfb0>
  809088:	d9800a04 	addi	r6,sp,40
  80908c:	a80b883a 	mov	r5,r21
  809090:	b009883a 	mov	r4,r22
  809094:	08089c80 	call	8089c8 <__sprint_r.part.0>
  809098:	103fa31e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  80909c:	9021883a 	mov	r16,r18
  8090a0:	003ff306 	br	809070 <___vfiprintf_internal_r+0x59c>
  8090a4:	d9000417 	ldw	r4,16(sp)
  8090a8:	6880040c 	andi	r2,r13,16
  8090ac:	20c00104 	addi	r3,r4,4
  8090b0:	1002a31e 	bne	r2,zero,809b40 <___vfiprintf_internal_r+0x106c>
  8090b4:	6880100c 	andi	r2,r13,64
  8090b8:	1002f626 	beq	r2,zero,809c94 <___vfiprintf_internal_r+0x11c0>
  8090bc:	d8800417 	ldw	r2,16(sp)
  8090c0:	0039883a 	mov	fp,zero
  8090c4:	d8c00415 	stw	r3,16(sp)
  8090c8:	15c0000b 	ldhu	r23,0(r2)
  8090cc:	0005883a 	mov	r2,zero
  8090d0:	003fc906 	br	808ff8 <___vfiprintf_internal_r+0x524>
  8090d4:	d9000417 	ldw	r4,16(sp)
  8090d8:	6880040c 	andi	r2,r13,16
  8090dc:	20c00104 	addi	r3,r4,4
  8090e0:	1002ab1e 	bne	r2,zero,809b90 <___vfiprintf_internal_r+0x10bc>
  8090e4:	6880100c 	andi	r2,r13,64
  8090e8:	1002f026 	beq	r2,zero,809cac <___vfiprintf_internal_r+0x11d8>
  8090ec:	d8800417 	ldw	r2,16(sp)
  8090f0:	0039883a 	mov	fp,zero
  8090f4:	d8c00415 	stw	r3,16(sp)
  8090f8:	15c0000b 	ldhu	r23,0(r2)
  8090fc:	00800044 	movi	r2,1
  809100:	003fbd06 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809104:	d8c00017 	ldw	r3,0(sp)
  809108:	d8000b15 	stw	zero,44(sp)
  80910c:	1cc0010c 	andi	r19,r3,4
  809110:	98024a26 	beq	r19,zero,809a3c <___vfiprintf_internal_r+0xf68>
  809114:	8de1c83a 	sub	r16,r17,r23
  809118:	0402480e 	bge	zero,r16,809a3c <___vfiprintf_internal_r+0xf68>
  80911c:	900d883a 	mov	r6,r18
  809120:	80c00450 	cmplti	r3,r16,17
  809124:	d9000b17 	ldw	r4,44(sp)
  809128:	01c02074 	movhi	r7,129
  80912c:	1803171e 	bne	r3,zero,809d8c <___vfiprintf_internal_r+0x12b8>
  809130:	39c40604 	addi	r7,r7,4120
  809134:	04c00404 	movi	r19,16
  809138:	00000606 	br	809154 <___vfiprintf_internal_r+0x680>
  80913c:	21400084 	addi	r5,r4,2
  809140:	31800204 	addi	r6,r6,8
  809144:	1809883a 	mov	r4,r3
  809148:	843ffc04 	addi	r16,r16,-16
  80914c:	80c00448 	cmpgei	r3,r16,17
  809150:	18001726 	beq	r3,zero,8091b0 <___vfiprintf_internal_r+0x6dc>
  809154:	20c00044 	addi	r3,r4,1
  809158:	10800404 	addi	r2,r2,16
  80915c:	31c00015 	stw	r7,0(r6)
  809160:	34c00115 	stw	r19,4(r6)
  809164:	d8800c15 	stw	r2,48(sp)
  809168:	d8c00b15 	stw	r3,44(sp)
  80916c:	19400208 	cmpgei	r5,r3,8
  809170:	283ff226 	beq	r5,zero,80913c <___vfiprintf_internal_r+0x668>
  809174:	d9800a04 	addi	r6,sp,40
  809178:	a80b883a 	mov	r5,r21
  80917c:	b009883a 	mov	r4,r22
  809180:	10014f26 	beq	r2,zero,8096c0 <___vfiprintf_internal_r+0xbec>
  809184:	d9c00015 	stw	r7,0(sp)
  809188:	08089c80 	call	8089c8 <__sprint_r.part.0>
  80918c:	103f661e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  809190:	d9000b17 	ldw	r4,44(sp)
  809194:	843ffc04 	addi	r16,r16,-16
  809198:	80c00448 	cmpgei	r3,r16,17
  80919c:	d8800c17 	ldw	r2,48(sp)
  8091a0:	d9c00017 	ldw	r7,0(sp)
  8091a4:	900d883a 	mov	r6,r18
  8091a8:	21400044 	addi	r5,r4,1
  8091ac:	183fe91e 	bne	r3,zero,809154 <___vfiprintf_internal_r+0x680>
  8091b0:	1405883a 	add	r2,r2,r16
  8091b4:	d9400b15 	stw	r5,44(sp)
  8091b8:	31c00015 	stw	r7,0(r6)
  8091bc:	34000115 	stw	r16,4(r6)
  8091c0:	d8800c15 	stw	r2,48(sp)
  8091c4:	29400210 	cmplti	r5,r5,8
  8091c8:	283f4b1e 	bne	r5,zero,808ef8 <___vfiprintf_internal_r+0x424>
  8091cc:	10021b26 	beq	r2,zero,809a3c <___vfiprintf_internal_r+0xf68>
  8091d0:	d9800a04 	addi	r6,sp,40
  8091d4:	a80b883a 	mov	r5,r21
  8091d8:	b009883a 	mov	r4,r22
  8091dc:	08089c80 	call	8089c8 <__sprint_r.part.0>
  8091e0:	103f511e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  8091e4:	d8800c17 	ldw	r2,48(sp)
  8091e8:	003f4306 	br	808ef8 <___vfiprintf_internal_r+0x424>
  8091ec:	08059600 	call	805960 <__sinit>
  8091f0:	003e4a06 	br	808b1c <___vfiprintf_internal_r+0x48>
  8091f4:	29403fcc 	andi	r5,r5,255
  8091f8:	2802e01e 	bne	r5,zero,809d7c <___vfiprintf_internal_r+0x12a8>
  8091fc:	6880080c 	andi	r2,r13,32
  809200:	10005d26 	beq	r2,zero,809378 <___vfiprintf_internal_r+0x8a4>
  809204:	d8c00417 	ldw	r3,16(sp)
  809208:	18800117 	ldw	r2,4(r3)
  80920c:	1dc00017 	ldw	r23,0(r3)
  809210:	18c00204 	addi	r3,r3,8
  809214:	d8c00415 	stw	r3,16(sp)
  809218:	1039883a 	mov	fp,r2
  80921c:	10006216 	blt	r2,zero,8093a8 <___vfiprintf_internal_r+0x8d4>
  809220:	40bfffd8 	cmpnei	r2,r8,-1
  809224:	10000a26 	beq	r2,zero,809250 <___vfiprintf_internal_r+0x77c>
  809228:	00ffdfc4 	movi	r3,-129
  80922c:	bf04b03a 	or	r2,r23,fp
  809230:	db800943 	ldbu	r14,37(sp)
  809234:	68da703a 	and	r13,r13,r3
  809238:	1000061e 	bne	r2,zero,809254 <___vfiprintf_internal_r+0x780>
  80923c:	4000081e 	bne	r8,zero,809260 <___vfiprintf_internal_r+0x78c>
  809240:	0039883a 	mov	fp,zero
  809244:	db400015 	stw	r13,0(sp)
  809248:	9027883a 	mov	r19,r18
  80924c:	00000906 	br	809274 <___vfiprintf_internal_r+0x7a0>
  809250:	db800943 	ldbu	r14,37(sp)
  809254:	e000ee1e 	bne	fp,zero,809610 <___vfiprintf_internal_r+0xb3c>
  809258:	b88002a8 	cmpgeui	r2,r23,10
  80925c:	1000ec1e 	bne	r2,zero,809610 <___vfiprintf_internal_r+0xb3c>
  809260:	bdc00c04 	addi	r23,r23,48
  809264:	ddc016c5 	stb	r23,91(sp)
  809268:	db400015 	stw	r13,0(sp)
  80926c:	07000044 	movi	fp,1
  809270:	dcc016c4 	addi	r19,sp,91
  809274:	402f883a 	mov	r23,r8
  809278:	4700010e 	bge	r8,fp,809280 <___vfiprintf_internal_r+0x7ac>
  80927c:	e02f883a 	mov	r23,fp
  809280:	73803fcc 	andi	r14,r14,255
  809284:	7380201c 	xori	r14,r14,128
  809288:	73bfe004 	addi	r14,r14,-128
  80928c:	703ecc26 	beq	r14,zero,808dc0 <___vfiprintf_internal_r+0x2ec>
  809290:	bdc00044 	addi	r23,r23,1
  809294:	003eca06 	br	808dc0 <___vfiprintf_internal_r+0x2ec>
  809298:	a0800007 	ldb	r2,0(r20)
  80929c:	6b401014 	ori	r13,r13,64
  8092a0:	003e4d06 	br	808bd8 <___vfiprintf_internal_r+0x104>
  8092a4:	29403fcc 	andi	r5,r5,255
  8092a8:	2802b21e 	bne	r5,zero,809d74 <___vfiprintf_internal_r+0x12a0>
  8092ac:	d9000417 	ldw	r4,16(sp)
  8092b0:	6880080c 	andi	r2,r13,32
  8092b4:	20c00017 	ldw	r3,0(r4)
  8092b8:	21000104 	addi	r4,r4,4
  8092bc:	1002251e 	bne	r2,zero,809b54 <___vfiprintf_internal_r+0x1080>
  8092c0:	6880040c 	andi	r2,r13,16
  8092c4:	1002531e 	bne	r2,zero,809c14 <___vfiprintf_internal_r+0x1140>
  8092c8:	6b40100c 	andi	r13,r13,64
  8092cc:	68025126 	beq	r13,zero,809c14 <___vfiprintf_internal_r+0x1140>
  8092d0:	d8800117 	ldw	r2,4(sp)
  8092d4:	d9000415 	stw	r4,16(sp)
  8092d8:	1880000d 	sth	r2,0(r3)
  8092dc:	003e2606 	br	808b78 <___vfiprintf_internal_r+0xa4>
  8092e0:	a0800007 	ldb	r2,0(r20)
  8092e4:	10c01b18 	cmpnei	r3,r2,108
  8092e8:	18025a26 	beq	r3,zero,809c54 <___vfiprintf_internal_r+0x1180>
  8092ec:	6b400414 	ori	r13,r13,16
  8092f0:	003e3906 	br	808bd8 <___vfiprintf_internal_r+0x104>
  8092f4:	d8c00417 	ldw	r3,16(sp)
  8092f8:	d8000945 	stb	zero,37(sp)
  8092fc:	05c00044 	movi	r23,1
  809300:	18800017 	ldw	r2,0(r3)
  809304:	18c00104 	addi	r3,r3,4
  809308:	d8c00415 	stw	r3,16(sp)
  80930c:	d8800d05 	stb	r2,52(sp)
  809310:	07000044 	movi	fp,1
  809314:	dcc00d04 	addi	r19,sp,52
  809318:	003ea706 	br	808db8 <___vfiprintf_internal_r+0x2e4>
  80931c:	29403fcc 	andi	r5,r5,255
  809320:	2802981e 	bne	r5,zero,809d84 <___vfiprintf_internal_r+0x12b0>
  809324:	00c02074 	movhi	r3,129
  809328:	18c37b04 	addi	r3,r3,3564
  80932c:	d8c00515 	stw	r3,20(sp)
  809330:	68c0080c 	andi	r3,r13,32
  809334:	18008326 	beq	r3,zero,809544 <___vfiprintf_internal_r+0xa70>
  809338:	d8c00417 	ldw	r3,16(sp)
  80933c:	1dc00017 	ldw	r23,0(r3)
  809340:	1f000117 	ldw	fp,4(r3)
  809344:	18c00204 	addi	r3,r3,8
  809348:	d8c00415 	stw	r3,16(sp)
  80934c:	68c0004c 	andi	r3,r13,1
  809350:	18000226 	beq	r3,zero,80935c <___vfiprintf_internal_r+0x888>
  809354:	bf06b03a 	or	r3,r23,fp
  809358:	1801f31e 	bne	r3,zero,809b28 <___vfiprintf_internal_r+0x1054>
  80935c:	00800084 	movi	r2,2
  809360:	003f2506 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809364:	29403fcc 	andi	r5,r5,255
  809368:	2802801e 	bne	r5,zero,809d6c <___vfiprintf_internal_r+0x1298>
  80936c:	6b400414 	ori	r13,r13,16
  809370:	6880080c 	andi	r2,r13,32
  809374:	103fa31e 	bne	r2,zero,809204 <___vfiprintf_internal_r+0x730>
  809378:	d9000417 	ldw	r4,16(sp)
  80937c:	6880040c 	andi	r2,r13,16
  809380:	20c00104 	addi	r3,r4,4
  809384:	1001f91e 	bne	r2,zero,809b6c <___vfiprintf_internal_r+0x1098>
  809388:	6880100c 	andi	r2,r13,64
  80938c:	10025226 	beq	r2,zero,809cd8 <___vfiprintf_internal_r+0x1204>
  809390:	d8800417 	ldw	r2,16(sp)
  809394:	d8c00415 	stw	r3,16(sp)
  809398:	15c0000f 	ldh	r23,0(r2)
  80939c:	b839d7fa 	srai	fp,r23,31
  8093a0:	e005883a 	mov	r2,fp
  8093a4:	103f9e0e 	bge	r2,zero,809220 <___vfiprintf_internal_r+0x74c>
  8093a8:	b804c03a 	cmpne	r2,r23,zero
  8093ac:	0739c83a 	sub	fp,zero,fp
  8093b0:	e0b9c83a 	sub	fp,fp,r2
  8093b4:	00800b44 	movi	r2,45
  8093b8:	d8800945 	stb	r2,37(sp)
  8093bc:	40ffffe0 	cmpeqi	r3,r8,-1
  8093c0:	05efc83a 	sub	r23,zero,r23
  8093c4:	03800b44 	movi	r14,45
  8093c8:	00800044 	movi	r2,1
  8093cc:	183f0e26 	beq	r3,zero,809008 <___vfiprintf_internal_r+0x534>
  8093d0:	10c00060 	cmpeqi	r3,r2,1
  8093d4:	183f9f1e 	bne	r3,zero,809254 <___vfiprintf_internal_r+0x780>
  8093d8:	108000a0 	cmpeqi	r2,r2,2
  8093dc:	9027883a 	mov	r19,r18
  8093e0:	1000a81e 	bne	r2,zero,809684 <___vfiprintf_internal_r+0xbb0>
  8093e4:	e006977a 	slli	r3,fp,29
  8093e8:	b804d0fa 	srli	r2,r23,3
  8093ec:	e038d0fa 	srli	fp,fp,3
  8093f0:	b90001cc 	andi	r4,r23,7
  8093f4:	21000c04 	addi	r4,r4,48
  8093f8:	18aeb03a 	or	r23,r3,r2
  8093fc:	993fffc5 	stb	r4,-1(r19)
  809400:	bf04b03a 	or	r2,r23,fp
  809404:	980b883a 	mov	r5,r19
  809408:	9cffffc4 	addi	r19,r19,-1
  80940c:	103ff51e 	bne	r2,zero,8093e4 <___vfiprintf_internal_r+0x910>
  809410:	6880004c 	andi	r2,r13,1
  809414:	1000a726 	beq	r2,zero,8096b4 <___vfiprintf_internal_r+0xbe0>
  809418:	21003fcc 	andi	r4,r4,255
  80941c:	2100201c 	xori	r4,r4,128
  809420:	213fe004 	addi	r4,r4,-128
  809424:	20800c18 	cmpnei	r2,r4,48
  809428:	1000a226 	beq	r2,zero,8096b4 <___vfiprintf_internal_r+0xbe0>
  80942c:	297fff84 	addi	r5,r5,-2
  809430:	00800c04 	movi	r2,48
  809434:	98bfffc5 	stb	r2,-1(r19)
  809438:	9179c83a 	sub	fp,r18,r5
  80943c:	db400015 	stw	r13,0(sp)
  809440:	2827883a 	mov	r19,r5
  809444:	003f8b06 	br	809274 <___vfiprintf_internal_r+0x7a0>
  809448:	a0800007 	ldb	r2,0(r20)
  80944c:	6b402014 	ori	r13,r13,128
  809450:	003de106 	br	808bd8 <___vfiprintf_internal_r+0x104>
  809454:	a0800007 	ldb	r2,0(r20)
  809458:	a0c00044 	addi	r3,r20,1
  80945c:	11000aa0 	cmpeqi	r4,r2,42
  809460:	2002551e 	bne	r4,zero,809db8 <___vfiprintf_internal_r+0x12e4>
  809464:	113ff404 	addi	r4,r2,-48
  809468:	21c002b0 	cmpltui	r7,r4,10
  80946c:	1829883a 	mov	r20,r3
  809470:	0011883a 	mov	r8,zero
  809474:	383dd926 	beq	r7,zero,808bdc <___vfiprintf_internal_r+0x108>
  809478:	400690ba 	slli	r3,r8,2
  80947c:	a0800007 	ldb	r2,0(r20)
  809480:	a5000044 	addi	r20,r20,1
  809484:	1a11883a 	add	r8,r3,r8
  809488:	4211883a 	add	r8,r8,r8
  80948c:	4111883a 	add	r8,r8,r4
  809490:	113ff404 	addi	r4,r2,-48
  809494:	20c002b0 	cmpltui	r3,r4,10
  809498:	183ff71e 	bne	r3,zero,809478 <___vfiprintf_internal_r+0x9a4>
  80949c:	003dcf06 	br	808bdc <___vfiprintf_internal_r+0x108>
  8094a0:	a0800003 	ldbu	r2,0(r20)
  8094a4:	10803fcc 	andi	r2,r2,255
  8094a8:	1080201c 	xori	r2,r2,128
  8094ac:	6b400114 	ori	r13,r13,4
  8094b0:	10bfe004 	addi	r2,r2,-128
  8094b4:	003dc806 	br	808bd8 <___vfiprintf_internal_r+0x104>
  8094b8:	a0800007 	ldb	r2,0(r20)
  8094bc:	01400044 	movi	r5,1
  8094c0:	01800ac4 	movi	r6,43
  8094c4:	003dc406 	br	808bd8 <___vfiprintf_internal_r+0x104>
  8094c8:	d8c00417 	ldw	r3,16(sp)
  8094cc:	a0800003 	ldbu	r2,0(r20)
  8094d0:	1c400017 	ldw	r17,0(r3)
  8094d4:	18c00104 	addi	r3,r3,4
  8094d8:	8801b916 	blt	r17,zero,809bc0 <___vfiprintf_internal_r+0x10ec>
  8094dc:	d8c00415 	stw	r3,16(sp)
  8094e0:	10803fcc 	andi	r2,r2,255
  8094e4:	1080201c 	xori	r2,r2,128
  8094e8:	10bfe004 	addi	r2,r2,-128
  8094ec:	003dba06 	br	808bd8 <___vfiprintf_internal_r+0x104>
  8094f0:	a0800007 	ldb	r2,0(r20)
  8094f4:	6b400054 	ori	r13,r13,1
  8094f8:	003db706 	br	808bd8 <___vfiprintf_internal_r+0x104>
  8094fc:	30c03fcc 	andi	r3,r6,255
  809500:	18c0201c 	xori	r3,r3,128
  809504:	18ffe004 	addi	r3,r3,-128
  809508:	a0800003 	ldbu	r2,0(r20)
  80950c:	183ff41e 	bne	r3,zero,8094e0 <___vfiprintf_internal_r+0xa0c>
  809510:	10803fcc 	andi	r2,r2,255
  809514:	1080201c 	xori	r2,r2,128
  809518:	01400044 	movi	r5,1
  80951c:	01800804 	movi	r6,32
  809520:	10bfe004 	addi	r2,r2,-128
  809524:	003dac06 	br	808bd8 <___vfiprintf_internal_r+0x104>
  809528:	29403fcc 	andi	r5,r5,255
  80952c:	28020a1e 	bne	r5,zero,809d58 <___vfiprintf_internal_r+0x1284>
  809530:	00c02074 	movhi	r3,129
  809534:	18c38004 	addi	r3,r3,3584
  809538:	d8c00515 	stw	r3,20(sp)
  80953c:	68c0080c 	andi	r3,r13,32
  809540:	183f7d1e 	bne	r3,zero,809338 <___vfiprintf_internal_r+0x864>
  809544:	d9400417 	ldw	r5,16(sp)
  809548:	68c0040c 	andi	r3,r13,16
  80954c:	29000104 	addi	r4,r5,4
  809550:	18018b1e 	bne	r3,zero,809b80 <___vfiprintf_internal_r+0x10ac>
  809554:	68c0100c 	andi	r3,r13,64
  809558:	1801da26 	beq	r3,zero,809cc4 <___vfiprintf_internal_r+0x11f0>
  80955c:	d8c00417 	ldw	r3,16(sp)
  809560:	0039883a 	mov	fp,zero
  809564:	d9000415 	stw	r4,16(sp)
  809568:	1dc0000b 	ldhu	r23,0(r3)
  80956c:	003f7706 	br	80934c <___vfiprintf_internal_r+0x878>
  809570:	d8800417 	ldw	r2,16(sp)
  809574:	d8000945 	stb	zero,37(sp)
  809578:	14c00017 	ldw	r19,0(r2)
  80957c:	10c00104 	addi	r3,r2,4
  809580:	9801bb26 	beq	r19,zero,809c70 <___vfiprintf_internal_r+0x119c>
  809584:	40bfffe0 	cmpeqi	r2,r8,-1
  809588:	1001901e 	bne	r2,zero,809bcc <___vfiprintf_internal_r+0x10f8>
  80958c:	400d883a 	mov	r6,r8
  809590:	000b883a 	mov	r5,zero
  809594:	9809883a 	mov	r4,r19
  809598:	d8c00315 	stw	r3,12(sp)
  80959c:	db400215 	stw	r13,8(sp)
  8095a0:	da000015 	stw	r8,0(sp)
  8095a4:	0806da40 	call	806da4 <memchr>
  8095a8:	da000017 	ldw	r8,0(sp)
  8095ac:	db400217 	ldw	r13,8(sp)
  8095b0:	d8c00317 	ldw	r3,12(sp)
  8095b4:	1001e426 	beq	r2,zero,809d48 <___vfiprintf_internal_r+0x1274>
  8095b8:	14f9c83a 	sub	fp,r2,r19
  8095bc:	e02f883a 	mov	r23,fp
  8095c0:	d8c00415 	stw	r3,16(sp)
  8095c4:	003dfc06 	br	808db8 <___vfiprintf_internal_r+0x2e4>
  8095c8:	a0800007 	ldb	r2,0(r20)
  8095cc:	6b400814 	ori	r13,r13,32
  8095d0:	003d8106 	br	808bd8 <___vfiprintf_internal_r+0x104>
  8095d4:	d8c00417 	ldw	r3,16(sp)
  8095d8:	00800c04 	movi	r2,48
  8095dc:	d8800985 	stb	r2,38(sp)
  8095e0:	00801e04 	movi	r2,120
  8095e4:	01002074 	movhi	r4,129
  8095e8:	d88009c5 	stb	r2,39(sp)
  8095ec:	18800104 	addi	r2,r3,4
  8095f0:	d8800415 	stw	r2,16(sp)
  8095f4:	20838004 	addi	r2,r4,3584
  8095f8:	d8800515 	stw	r2,20(sp)
  8095fc:	1dc00017 	ldw	r23,0(r3)
  809600:	0039883a 	mov	fp,zero
  809604:	6b400094 	ori	r13,r13,2
  809608:	00800084 	movi	r2,2
  80960c:	003e7a06 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809610:	9027883a 	mov	r19,r18
  809614:	b809883a 	mov	r4,r23
  809618:	e00b883a 	mov	r5,fp
  80961c:	01800284 	movi	r6,10
  809620:	000f883a 	mov	r7,zero
  809624:	db800315 	stw	r14,12(sp)
  809628:	da000215 	stw	r8,8(sp)
  80962c:	db400015 	stw	r13,0(sp)
  809630:	080b31c0 	call	80b31c <__umoddi3>
  809634:	10800c04 	addi	r2,r2,48
  809638:	b809883a 	mov	r4,r23
  80963c:	e00b883a 	mov	r5,fp
  809640:	98bfffc5 	stb	r2,-1(r19)
  809644:	01800284 	movi	r6,10
  809648:	000f883a 	mov	r7,zero
  80964c:	080ad000 	call	80ad00 <__udivdi3>
  809650:	e009883a 	mov	r4,fp
  809654:	b80b883a 	mov	r5,r23
  809658:	db400017 	ldw	r13,0(sp)
  80965c:	da000217 	ldw	r8,8(sp)
  809660:	db800317 	ldw	r14,12(sp)
  809664:	9cffffc4 	addi	r19,r19,-1
  809668:	102f883a 	mov	r23,r2
  80966c:	1839883a 	mov	fp,r3
  809670:	203fe81e 	bne	r4,zero,809614 <___vfiprintf_internal_r+0xb40>
  809674:	294002a8 	cmpgeui	r5,r5,10
  809678:	283fe61e 	bne	r5,zero,809614 <___vfiprintf_internal_r+0xb40>
  80967c:	94f9c83a 	sub	fp,r18,r19
  809680:	003efc06 	br	809274 <___vfiprintf_internal_r+0x7a0>
  809684:	d9000517 	ldw	r4,20(sp)
  809688:	b88003cc 	andi	r2,r23,15
  80968c:	e006973a 	slli	r3,fp,28
  809690:	b82ed13a 	srli	r23,r23,4
  809694:	2085883a 	add	r2,r4,r2
  809698:	10800003 	ldbu	r2,0(r2)
  80969c:	e038d13a 	srli	fp,fp,4
  8096a0:	1deeb03a 	or	r23,r3,r23
  8096a4:	98bfffc5 	stb	r2,-1(r19)
  8096a8:	bf04b03a 	or	r2,r23,fp
  8096ac:	9cffffc4 	addi	r19,r19,-1
  8096b0:	103ff41e 	bne	r2,zero,809684 <___vfiprintf_internal_r+0xbb0>
  8096b4:	94f9c83a 	sub	fp,r18,r19
  8096b8:	db400015 	stw	r13,0(sp)
  8096bc:	003eed06 	br	809274 <___vfiprintf_internal_r+0x7a0>
  8096c0:	01400044 	movi	r5,1
  8096c4:	0009883a 	mov	r4,zero
  8096c8:	900d883a 	mov	r6,r18
  8096cc:	003e9e06 	br	809148 <___vfiprintf_internal_r+0x674>
  8096d0:	8dc7c83a 	sub	r3,r17,r23
  8096d4:	00fdf20e 	bge	zero,r3,808ea0 <___vfiprintf_internal_r+0x3cc>
  8096d8:	19c00450 	cmplti	r7,r3,17
  8096dc:	3801ae1e 	bne	r7,zero,809d98 <___vfiprintf_internal_r+0x12c4>
  8096e0:	01c02074 	movhi	r7,129
  8096e4:	39c40204 	addi	r7,r7,4104
  8096e8:	03400404 	movi	r13,16
  8096ec:	00000606 	br	809708 <___vfiprintf_internal_r+0xc34>
  8096f0:	23800084 	addi	r14,r4,2
  8096f4:	84000204 	addi	r16,r16,8
  8096f8:	2809883a 	mov	r4,r5
  8096fc:	18fffc04 	addi	r3,r3,-16
  809700:	19400448 	cmpgei	r5,r3,17
  809704:	28001c26 	beq	r5,zero,809778 <___vfiprintf_internal_r+0xca4>
  809708:	21400044 	addi	r5,r4,1
  80970c:	10800404 	addi	r2,r2,16
  809710:	81c00015 	stw	r7,0(r16)
  809714:	83400115 	stw	r13,4(r16)
  809718:	d8800c15 	stw	r2,48(sp)
  80971c:	d9400b15 	stw	r5,44(sp)
  809720:	29800208 	cmpgei	r6,r5,8
  809724:	303ff226 	beq	r6,zero,8096f0 <___vfiprintf_internal_r+0xc1c>
  809728:	d9800a04 	addi	r6,sp,40
  80972c:	a80b883a 	mov	r5,r21
  809730:	b009883a 	mov	r4,r22
  809734:	10006326 	beq	r2,zero,8098c4 <___vfiprintf_internal_r+0xdf0>
  809738:	d9c00615 	stw	r7,24(sp)
  80973c:	d8c00315 	stw	r3,12(sp)
  809740:	da000215 	stw	r8,8(sp)
  809744:	08089c80 	call	8089c8 <__sprint_r.part.0>
  809748:	103df71e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  80974c:	d8c00317 	ldw	r3,12(sp)
  809750:	d9000b17 	ldw	r4,44(sp)
  809754:	d8800c17 	ldw	r2,48(sp)
  809758:	18fffc04 	addi	r3,r3,-16
  80975c:	19400448 	cmpgei	r5,r3,17
  809760:	d9c00617 	ldw	r7,24(sp)
  809764:	da000217 	ldw	r8,8(sp)
  809768:	9021883a 	mov	r16,r18
  80976c:	23800044 	addi	r14,r4,1
  809770:	03400404 	movi	r13,16
  809774:	283fe41e 	bne	r5,zero,809708 <___vfiprintf_internal_r+0xc34>
  809778:	83400204 	addi	r13,r16,8
  80977c:	10c5883a 	add	r2,r2,r3
  809780:	80c00115 	stw	r3,4(r16)
  809784:	81c00015 	stw	r7,0(r16)
  809788:	d8800c15 	stw	r2,48(sp)
  80978c:	db800b15 	stw	r14,44(sp)
  809790:	70c00208 	cmpgei	r3,r14,8
  809794:	1800df26 	beq	r3,zero,809b14 <___vfiprintf_internal_r+0x1040>
  809798:	10015826 	beq	r2,zero,809cfc <___vfiprintf_internal_r+0x1228>
  80979c:	d9800a04 	addi	r6,sp,40
  8097a0:	a80b883a 	mov	r5,r21
  8097a4:	b009883a 	mov	r4,r22
  8097a8:	da000215 	stw	r8,8(sp)
  8097ac:	08089c80 	call	8089c8 <__sprint_r.part.0>
  8097b0:	103ddd1e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  8097b4:	da000217 	ldw	r8,8(sp)
  8097b8:	d9000b17 	ldw	r4,44(sp)
  8097bc:	d8800c17 	ldw	r2,48(sp)
  8097c0:	4711c83a 	sub	r8,r8,fp
  8097c4:	d9801904 	addi	r6,sp,100
  8097c8:	21400044 	addi	r5,r4,1
  8097cc:	9021883a 	mov	r16,r18
  8097d0:	023db50e 	bge	zero,r8,808ea8 <___vfiprintf_internal_r+0x3d4>
  8097d4:	40c00450 	cmplti	r3,r8,17
  8097d8:	01c02074 	movhi	r7,129
  8097dc:	1801441e 	bne	r3,zero,809cf0 <___vfiprintf_internal_r+0x121c>
  8097e0:	39c40204 	addi	r7,r7,4104
  8097e4:	03400404 	movi	r13,16
  8097e8:	00000606 	br	809804 <___vfiprintf_internal_r+0xd30>
  8097ec:	21400084 	addi	r5,r4,2
  8097f0:	84000204 	addi	r16,r16,8
  8097f4:	1809883a 	mov	r4,r3
  8097f8:	423ffc04 	addi	r8,r8,-16
  8097fc:	40c00448 	cmpgei	r3,r8,17
  809800:	18001a26 	beq	r3,zero,80986c <___vfiprintf_internal_r+0xd98>
  809804:	20c00044 	addi	r3,r4,1
  809808:	10800404 	addi	r2,r2,16
  80980c:	81c00015 	stw	r7,0(r16)
  809810:	83400115 	stw	r13,4(r16)
  809814:	d8800c15 	stw	r2,48(sp)
  809818:	d8c00b15 	stw	r3,44(sp)
  80981c:	19400208 	cmpgei	r5,r3,8
  809820:	283ff226 	beq	r5,zero,8097ec <___vfiprintf_internal_r+0xd18>
  809824:	d9800a04 	addi	r6,sp,40
  809828:	a80b883a 	mov	r5,r21
  80982c:	b009883a 	mov	r4,r22
  809830:	10001a26 	beq	r2,zero,80989c <___vfiprintf_internal_r+0xdc8>
  809834:	d9c00315 	stw	r7,12(sp)
  809838:	da000215 	stw	r8,8(sp)
  80983c:	08089c80 	call	8089c8 <__sprint_r.part.0>
  809840:	103db91e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  809844:	da000217 	ldw	r8,8(sp)
  809848:	d9000b17 	ldw	r4,44(sp)
  80984c:	d8800c17 	ldw	r2,48(sp)
  809850:	423ffc04 	addi	r8,r8,-16
  809854:	40c00448 	cmpgei	r3,r8,17
  809858:	d9c00317 	ldw	r7,12(sp)
  80985c:	9021883a 	mov	r16,r18
  809860:	21400044 	addi	r5,r4,1
  809864:	03400404 	movi	r13,16
  809868:	183fe61e 	bne	r3,zero,809804 <___vfiprintf_internal_r+0xd30>
  80986c:	81000204 	addi	r4,r16,8
  809870:	1205883a 	add	r2,r2,r8
  809874:	81c00015 	stw	r7,0(r16)
  809878:	82000115 	stw	r8,4(r16)
  80987c:	d8800c15 	stw	r2,48(sp)
  809880:	d9400b15 	stw	r5,44(sp)
  809884:	28c00208 	cmpgei	r3,r5,8
  809888:	1800721e 	bne	r3,zero,809a54 <___vfiprintf_internal_r+0xf80>
  80988c:	29400044 	addi	r5,r5,1
  809890:	21800204 	addi	r6,r4,8
  809894:	2021883a 	mov	r16,r4
  809898:	003d8306 	br	808ea8 <___vfiprintf_internal_r+0x3d4>
  80989c:	01400044 	movi	r5,1
  8098a0:	0009883a 	mov	r4,zero
  8098a4:	9021883a 	mov	r16,r18
  8098a8:	003fd306 	br	8097f8 <___vfiprintf_internal_r+0xd24>
  8098ac:	d9800a04 	addi	r6,sp,40
  8098b0:	a80b883a 	mov	r5,r21
  8098b4:	b009883a 	mov	r4,r22
  8098b8:	08089c80 	call	8089c8 <__sprint_r.part.0>
  8098bc:	103d9426 	beq	r2,zero,808f10 <___vfiprintf_internal_r+0x43c>
  8098c0:	003d9906 	br	808f28 <___vfiprintf_internal_r+0x454>
  8098c4:	03800044 	movi	r14,1
  8098c8:	0009883a 	mov	r4,zero
  8098cc:	9021883a 	mov	r16,r18
  8098d0:	003f8a06 	br	8096fc <___vfiprintf_internal_r+0xc28>
  8098d4:	10006e26 	beq	r2,zero,809a90 <___vfiprintf_internal_r+0xfbc>
  8098d8:	d9800a04 	addi	r6,sp,40
  8098dc:	a80b883a 	mov	r5,r21
  8098e0:	b009883a 	mov	r4,r22
  8098e4:	da000615 	stw	r8,24(sp)
  8098e8:	db400315 	stw	r13,12(sp)
  8098ec:	db800215 	stw	r14,8(sp)
  8098f0:	08089c80 	call	8089c8 <__sprint_r.part.0>
  8098f4:	103d8c1e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  8098f8:	d9000b17 	ldw	r4,44(sp)
  8098fc:	d8800c17 	ldw	r2,48(sp)
  809900:	da000617 	ldw	r8,24(sp)
  809904:	db400317 	ldw	r13,12(sp)
  809908:	db800217 	ldw	r14,8(sp)
  80990c:	d9801904 	addi	r6,sp,100
  809910:	21400044 	addi	r5,r4,1
  809914:	9021883a 	mov	r16,r18
  809918:	003d4606 	br	808e34 <___vfiprintf_internal_r+0x360>
  80991c:	d8800984 	addi	r2,sp,38
  809920:	d8801715 	stw	r2,92(sp)
  809924:	00800084 	movi	r2,2
  809928:	d8801815 	stw	r2,96(sp)
  80992c:	d9801904 	addi	r6,sp,100
  809930:	01400044 	movi	r5,1
  809934:	3021883a 	mov	r16,r6
  809938:	2809883a 	mov	r4,r5
  80993c:	21400044 	addi	r5,r4,1
  809940:	81800204 	addi	r6,r16,8
  809944:	003d5406 	br	808e98 <___vfiprintf_internal_r+0x3c4>
  809948:	db400017 	ldw	r13,0(sp)
  80994c:	003ea006 	br	8093d0 <___vfiprintf_internal_r+0x8fc>
  809950:	19400450 	cmplti	r5,r3,17
  809954:	01c02074 	movhi	r7,129
  809958:	2801011e 	bne	r5,zero,809d60 <___vfiprintf_internal_r+0x128c>
  80995c:	39c40604 	addi	r7,r7,4120
  809960:	03c00404 	movi	r15,16
  809964:	00000706 	br	809984 <___vfiprintf_internal_r+0xeb0>
  809968:	27c00084 	addi	ra,r4,2
  80996c:	84000204 	addi	r16,r16,8
  809970:	3009883a 	mov	r4,r6
  809974:	18fffc04 	addi	r3,r3,-16
  809978:	19400448 	cmpgei	r5,r3,17
  80997c:	28002026 	beq	r5,zero,809a00 <___vfiprintf_internal_r+0xf2c>
  809980:	21800044 	addi	r6,r4,1
  809984:	10800404 	addi	r2,r2,16
  809988:	81c00015 	stw	r7,0(r16)
  80998c:	83c00115 	stw	r15,4(r16)
  809990:	d8800c15 	stw	r2,48(sp)
  809994:	d9800b15 	stw	r6,44(sp)
  809998:	31400208 	cmpgei	r5,r6,8
  80999c:	283ff226 	beq	r5,zero,809968 <___vfiprintf_internal_r+0xe94>
  8099a0:	d9800a04 	addi	r6,sp,40
  8099a4:	a80b883a 	mov	r5,r21
  8099a8:	b009883a 	mov	r4,r22
  8099ac:	10001f26 	beq	r2,zero,809a2c <___vfiprintf_internal_r+0xf58>
  8099b0:	d9c00815 	stw	r7,32(sp)
  8099b4:	d8c00715 	stw	r3,28(sp)
  8099b8:	da000615 	stw	r8,24(sp)
  8099bc:	db400315 	stw	r13,12(sp)
  8099c0:	db800215 	stw	r14,8(sp)
  8099c4:	08089c80 	call	8089c8 <__sprint_r.part.0>
  8099c8:	103d571e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  8099cc:	d8c00717 	ldw	r3,28(sp)
  8099d0:	d9000b17 	ldw	r4,44(sp)
  8099d4:	d8800c17 	ldw	r2,48(sp)
  8099d8:	18fffc04 	addi	r3,r3,-16
  8099dc:	19400448 	cmpgei	r5,r3,17
  8099e0:	d9c00817 	ldw	r7,32(sp)
  8099e4:	da000617 	ldw	r8,24(sp)
  8099e8:	db400317 	ldw	r13,12(sp)
  8099ec:	db800217 	ldw	r14,8(sp)
  8099f0:	9021883a 	mov	r16,r18
  8099f4:	27c00044 	addi	ra,r4,1
  8099f8:	03c00404 	movi	r15,16
  8099fc:	283fe01e 	bne	r5,zero,809980 <___vfiprintf_internal_r+0xeac>
  809a00:	10c5883a 	add	r2,r2,r3
  809a04:	80c00115 	stw	r3,4(r16)
  809a08:	81c00015 	stw	r7,0(r16)
  809a0c:	d8800c15 	stw	r2,48(sp)
  809a10:	dfc00b15 	stw	ra,44(sp)
  809a14:	f8c00208 	cmpgei	r3,ra,8
  809a18:	18002b1e 	bne	r3,zero,809ac8 <___vfiprintf_internal_r+0xff4>
  809a1c:	84000204 	addi	r16,r16,8
  809a20:	f9400044 	addi	r5,ra,1
  809a24:	f809883a 	mov	r4,ra
  809a28:	003cf206 	br	808df4 <___vfiprintf_internal_r+0x320>
  809a2c:	0009883a 	mov	r4,zero
  809a30:	07c00044 	movi	ra,1
  809a34:	9021883a 	mov	r16,r18
  809a38:	003fce06 	br	809974 <___vfiprintf_internal_r+0xea0>
  809a3c:	8dc0010e 	bge	r17,r23,809a44 <___vfiprintf_internal_r+0xf70>
  809a40:	b823883a 	mov	r17,r23
  809a44:	d8800117 	ldw	r2,4(sp)
  809a48:	1445883a 	add	r2,r2,r17
  809a4c:	d8800115 	stw	r2,4(sp)
  809a50:	003d2f06 	br	808f10 <___vfiprintf_internal_r+0x43c>
  809a54:	10007326 	beq	r2,zero,809c24 <___vfiprintf_internal_r+0x1150>
  809a58:	d9800a04 	addi	r6,sp,40
  809a5c:	a80b883a 	mov	r5,r21
  809a60:	b009883a 	mov	r4,r22
  809a64:	08089c80 	call	8089c8 <__sprint_r.part.0>
  809a68:	103d2f1e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  809a6c:	d9400b17 	ldw	r5,44(sp)
  809a70:	d8800c17 	ldw	r2,48(sp)
  809a74:	d9801904 	addi	r6,sp,100
  809a78:	29400044 	addi	r5,r5,1
  809a7c:	9021883a 	mov	r16,r18
  809a80:	003d0906 	br	808ea8 <___vfiprintf_internal_r+0x3d4>
  809a84:	d8000b15 	stw	zero,44(sp)
  809a88:	9021883a 	mov	r16,r18
  809a8c:	003d7806 	br	809070 <___vfiprintf_internal_r+0x59c>
  809a90:	7000441e 	bne	r14,zero,809ba4 <___vfiprintf_internal_r+0x10d0>
  809a94:	0009883a 	mov	r4,zero
  809a98:	d9801904 	addi	r6,sp,100
  809a9c:	01400044 	movi	r5,1
  809aa0:	9021883a 	mov	r16,r18
  809aa4:	003cfc06 	br	808e98 <___vfiprintf_internal_r+0x3c4>
  809aa8:	d9801904 	addi	r6,sp,100
  809aac:	01400044 	movi	r5,1
  809ab0:	0009883a 	mov	r4,zero
  809ab4:	9021883a 	mov	r16,r18
  809ab8:	003cf706 	br	808e98 <___vfiprintf_internal_r+0x3c4>
  809abc:	0039883a 	mov	fp,zero
  809ac0:	9027883a 	mov	r19,r18
  809ac4:	003deb06 	br	809274 <___vfiprintf_internal_r+0x7a0>
  809ac8:	10004a26 	beq	r2,zero,809bf4 <___vfiprintf_internal_r+0x1120>
  809acc:	d9800a04 	addi	r6,sp,40
  809ad0:	a80b883a 	mov	r5,r21
  809ad4:	b009883a 	mov	r4,r22
  809ad8:	da000615 	stw	r8,24(sp)
  809adc:	db400315 	stw	r13,12(sp)
  809ae0:	db800215 	stw	r14,8(sp)
  809ae4:	08089c80 	call	8089c8 <__sprint_r.part.0>
  809ae8:	103d0f1e 	bne	r2,zero,808f28 <___vfiprintf_internal_r+0x454>
  809aec:	d9000b17 	ldw	r4,44(sp)
  809af0:	d8800c17 	ldw	r2,48(sp)
  809af4:	da000617 	ldw	r8,24(sp)
  809af8:	db400317 	ldw	r13,12(sp)
  809afc:	db800217 	ldw	r14,8(sp)
  809b00:	9021883a 	mov	r16,r18
  809b04:	21400044 	addi	r5,r4,1
  809b08:	003cba06 	br	808df4 <___vfiprintf_internal_r+0x320>
  809b0c:	9027883a 	mov	r19,r18
  809b10:	003dd806 	br	809274 <___vfiprintf_internal_r+0x7a0>
  809b14:	71400044 	addi	r5,r14,1
  809b18:	69800204 	addi	r6,r13,8
  809b1c:	7009883a 	mov	r4,r14
  809b20:	6821883a 	mov	r16,r13
  809b24:	003cde06 	br	808ea0 <___vfiprintf_internal_r+0x3cc>
  809b28:	00c00c04 	movi	r3,48
  809b2c:	d88009c5 	stb	r2,39(sp)
  809b30:	d8c00985 	stb	r3,38(sp)
  809b34:	6b400094 	ori	r13,r13,2
  809b38:	00800084 	movi	r2,2
  809b3c:	003d2e06 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809b40:	25c00017 	ldw	r23,0(r4)
  809b44:	0039883a 	mov	fp,zero
  809b48:	d8c00415 	stw	r3,16(sp)
  809b4c:	0005883a 	mov	r2,zero
  809b50:	003d2906 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809b54:	d9400117 	ldw	r5,4(sp)
  809b58:	d9000415 	stw	r4,16(sp)
  809b5c:	2805d7fa 	srai	r2,r5,31
  809b60:	19400015 	stw	r5,0(r3)
  809b64:	18800115 	stw	r2,4(r3)
  809b68:	003c0306 	br	808b78 <___vfiprintf_internal_r+0xa4>
  809b6c:	25c00017 	ldw	r23,0(r4)
  809b70:	d8c00415 	stw	r3,16(sp)
  809b74:	b839d7fa 	srai	fp,r23,31
  809b78:	e005883a 	mov	r2,fp
  809b7c:	003da706 	br	80921c <___vfiprintf_internal_r+0x748>
  809b80:	2dc00017 	ldw	r23,0(r5)
  809b84:	0039883a 	mov	fp,zero
  809b88:	d9000415 	stw	r4,16(sp)
  809b8c:	003def06 	br	80934c <___vfiprintf_internal_r+0x878>
  809b90:	25c00017 	ldw	r23,0(r4)
  809b94:	0039883a 	mov	fp,zero
  809b98:	d8c00415 	stw	r3,16(sp)
  809b9c:	00800044 	movi	r2,1
  809ba0:	003d1506 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809ba4:	d8800984 	addi	r2,sp,38
  809ba8:	d8801715 	stw	r2,92(sp)
  809bac:	00800084 	movi	r2,2
  809bb0:	d8801815 	stw	r2,96(sp)
  809bb4:	dc001904 	addi	r16,sp,100
  809bb8:	01000044 	movi	r4,1
  809bbc:	003f5f06 	br	80993c <___vfiprintf_internal_r+0xe68>
  809bc0:	0463c83a 	sub	r17,zero,r17
  809bc4:	d8c00415 	stw	r3,16(sp)
  809bc8:	003e3606 	br	8094a4 <___vfiprintf_internal_r+0x9d0>
  809bcc:	9809883a 	mov	r4,r19
  809bd0:	d8c00215 	stw	r3,8(sp)
  809bd4:	db400015 	stw	r13,0(sp)
  809bd8:	08016780 	call	801678 <strlen>
  809bdc:	d8c00217 	ldw	r3,8(sp)
  809be0:	db400017 	ldw	r13,0(sp)
  809be4:	1039883a 	mov	fp,r2
  809be8:	102f883a 	mov	r23,r2
  809bec:	d8c00415 	stw	r3,16(sp)
  809bf0:	003c7106 	br	808db8 <___vfiprintf_internal_r+0x2e4>
  809bf4:	d8c00947 	ldb	r3,37(sp)
  809bf8:	1800451e 	bne	r3,zero,809d10 <___vfiprintf_internal_r+0x123c>
  809bfc:	703f471e 	bne	r14,zero,80991c <___vfiprintf_internal_r+0xe48>
  809c00:	0009883a 	mov	r4,zero
  809c04:	d9801904 	addi	r6,sp,100
  809c08:	01400044 	movi	r5,1
  809c0c:	9021883a 	mov	r16,r18
  809c10:	003ca306 	br	808ea0 <___vfiprintf_internal_r+0x3cc>
  809c14:	d8800117 	ldw	r2,4(sp)
  809c18:	18800015 	stw	r2,0(r3)
  809c1c:	d9000415 	stw	r4,16(sp)
  809c20:	003bd506 	br	808b78 <___vfiprintf_internal_r+0xa4>
  809c24:	00c00044 	movi	r3,1
  809c28:	e005883a 	mov	r2,fp
  809c2c:	dcc01715 	stw	r19,92(sp)
  809c30:	df001815 	stw	fp,96(sp)
  809c34:	df000c15 	stw	fp,48(sp)
  809c38:	d8c00b15 	stw	r3,44(sp)
  809c3c:	d9801904 	addi	r6,sp,100
  809c40:	003ca806 	br	808ee4 <___vfiprintf_internal_r+0x410>
  809c44:	10c00060 	cmpeqi	r3,r2,1
  809c48:	db400017 	ldw	r13,0(sp)
  809c4c:	183de226 	beq	r3,zero,8093d8 <___vfiprintf_internal_r+0x904>
  809c50:	003d8306 	br	809260 <___vfiprintf_internal_r+0x78c>
  809c54:	a0800043 	ldbu	r2,1(r20)
  809c58:	6b400814 	ori	r13,r13,32
  809c5c:	a5000044 	addi	r20,r20,1
  809c60:	10803fcc 	andi	r2,r2,255
  809c64:	1080201c 	xori	r2,r2,128
  809c68:	10bfe004 	addi	r2,r2,-128
  809c6c:	003bda06 	br	808bd8 <___vfiprintf_internal_r+0x104>
  809c70:	408001f0 	cmpltui	r2,r8,7
  809c74:	4039883a 	mov	fp,r8
  809c78:	1000011e 	bne	r2,zero,809c80 <___vfiprintf_internal_r+0x11ac>
  809c7c:	07000184 	movi	fp,6
  809c80:	04c02074 	movhi	r19,129
  809c84:	e02f883a 	mov	r23,fp
  809c88:	d8c00415 	stw	r3,16(sp)
  809c8c:	9cc38504 	addi	r19,r19,3604
  809c90:	003c4906 	br	808db8 <___vfiprintf_internal_r+0x2e4>
  809c94:	d8800417 	ldw	r2,16(sp)
  809c98:	0039883a 	mov	fp,zero
  809c9c:	d8c00415 	stw	r3,16(sp)
  809ca0:	15c00017 	ldw	r23,0(r2)
  809ca4:	0005883a 	mov	r2,zero
  809ca8:	003cd306 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809cac:	d8800417 	ldw	r2,16(sp)
  809cb0:	0039883a 	mov	fp,zero
  809cb4:	d8c00415 	stw	r3,16(sp)
  809cb8:	15c00017 	ldw	r23,0(r2)
  809cbc:	00800044 	movi	r2,1
  809cc0:	003ccd06 	br	808ff8 <___vfiprintf_internal_r+0x524>
  809cc4:	d8c00417 	ldw	r3,16(sp)
  809cc8:	0039883a 	mov	fp,zero
  809ccc:	d9000415 	stw	r4,16(sp)
  809cd0:	1dc00017 	ldw	r23,0(r3)
  809cd4:	003d9d06 	br	80934c <___vfiprintf_internal_r+0x878>
  809cd8:	d8800417 	ldw	r2,16(sp)
  809cdc:	d8c00415 	stw	r3,16(sp)
  809ce0:	15c00017 	ldw	r23,0(r2)
  809ce4:	b839d7fa 	srai	fp,r23,31
  809ce8:	e005883a 	mov	r2,fp
  809cec:	003d4b06 	br	80921c <___vfiprintf_internal_r+0x748>
  809cf0:	3009883a 	mov	r4,r6
  809cf4:	39c40204 	addi	r7,r7,4104
  809cf8:	003edd06 	br	809870 <___vfiprintf_internal_r+0xd9c>
  809cfc:	d9801904 	addi	r6,sp,100
  809d00:	01400044 	movi	r5,1
  809d04:	0009883a 	mov	r4,zero
  809d08:	9021883a 	mov	r16,r18
  809d0c:	003c6406 	br	808ea0 <___vfiprintf_internal_r+0x3cc>
  809d10:	d8800944 	addi	r2,sp,37
  809d14:	d8801715 	stw	r2,92(sp)
  809d18:	00800044 	movi	r2,1
  809d1c:	d8801815 	stw	r2,96(sp)
  809d20:	d9801904 	addi	r6,sp,100
  809d24:	01400044 	movi	r5,1
  809d28:	003c3e06 	br	808e24 <___vfiprintf_internal_r+0x350>
  809d2c:	d9800945 	stb	r6,37(sp)
  809d30:	003c1b06 	br	808da0 <___vfiprintf_internal_r+0x2cc>
  809d34:	d9800a04 	addi	r6,sp,40
  809d38:	a80b883a 	mov	r5,r21
  809d3c:	b009883a 	mov	r4,r22
  809d40:	08089c80 	call	8089c8 <__sprint_r.part.0>
  809d44:	003c7806 	br	808f28 <___vfiprintf_internal_r+0x454>
  809d48:	402f883a 	mov	r23,r8
  809d4c:	d8c00415 	stw	r3,16(sp)
  809d50:	4039883a 	mov	fp,r8
  809d54:	003c1806 	br	808db8 <___vfiprintf_internal_r+0x2e4>
  809d58:	d9800945 	stb	r6,37(sp)
  809d5c:	003df406 	br	809530 <___vfiprintf_internal_r+0xa5c>
  809d60:	303f883a 	mov	ra,r6
  809d64:	39c40604 	addi	r7,r7,4120
  809d68:	003f2506 	br	809a00 <___vfiprintf_internal_r+0xf2c>
  809d6c:	d9800945 	stb	r6,37(sp)
  809d70:	003d7e06 	br	80936c <___vfiprintf_internal_r+0x898>
  809d74:	d9800945 	stb	r6,37(sp)
  809d78:	003d4c06 	br	8092ac <___vfiprintf_internal_r+0x7d8>
  809d7c:	d9800945 	stb	r6,37(sp)
  809d80:	003d1e06 	br	8091fc <___vfiprintf_internal_r+0x728>
  809d84:	d9800945 	stb	r6,37(sp)
  809d88:	003d6606 	br	809324 <___vfiprintf_internal_r+0x850>
  809d8c:	21400044 	addi	r5,r4,1
  809d90:	39c40604 	addi	r7,r7,4120
  809d94:	003d0606 	br	8091b0 <___vfiprintf_internal_r+0x6dc>
  809d98:	01c02074 	movhi	r7,129
  809d9c:	301b883a 	mov	r13,r6
  809da0:	281d883a 	mov	r14,r5
  809da4:	39c40204 	addi	r7,r7,4104
  809da8:	003e7406 	br	80977c <___vfiprintf_internal_r+0xca8>
  809dac:	00bfffc4 	movi	r2,-1
  809db0:	d8800115 	stw	r2,4(sp)
  809db4:	003c5f06 	br	808f34 <___vfiprintf_internal_r+0x460>
  809db8:	d8800417 	ldw	r2,16(sp)
  809dbc:	12000017 	ldw	r8,0(r2)
  809dc0:	11000104 	addi	r4,r2,4
  809dc4:	4000010e 	bge	r8,zero,809dcc <___vfiprintf_internal_r+0x12f8>
  809dc8:	023fffc4 	movi	r8,-1
  809dcc:	a0800043 	ldbu	r2,1(r20)
  809dd0:	d9000415 	stw	r4,16(sp)
  809dd4:	1829883a 	mov	r20,r3
  809dd8:	10803fcc 	andi	r2,r2,255
  809ddc:	1080201c 	xori	r2,r2,128
  809de0:	10bfe004 	addi	r2,r2,-128
  809de4:	003b7c06 	br	808bd8 <___vfiprintf_internal_r+0x104>

00809de8 <__vfiprintf_internal>:
  809de8:	00c02074 	movhi	r3,129
  809dec:	2005883a 	mov	r2,r4
  809df0:	190bb817 	ldw	r4,12000(r3)
  809df4:	300f883a 	mov	r7,r6
  809df8:	280d883a 	mov	r6,r5
  809dfc:	100b883a 	mov	r5,r2
  809e00:	0808ad41 	jmpi	808ad4 <___vfiprintf_internal_r>

00809e04 <__sbprintf>:
  809e04:	2880030b 	ldhu	r2,12(r5)
  809e08:	2b001917 	ldw	r12,100(r5)
  809e0c:	2ac0038b 	ldhu	r11,14(r5)
  809e10:	2a800717 	ldw	r10,28(r5)
  809e14:	2a400917 	ldw	r9,36(r5)
  809e18:	defee204 	addi	sp,sp,-1144
  809e1c:	da001a04 	addi	r8,sp,104
  809e20:	00c10004 	movi	r3,1024
  809e24:	dc011a15 	stw	r16,1128(sp)
  809e28:	10bfff4c 	andi	r2,r2,65533
  809e2c:	2821883a 	mov	r16,r5
  809e30:	d80b883a 	mov	r5,sp
  809e34:	dc811c15 	stw	r18,1136(sp)
  809e38:	dc411b15 	stw	r17,1132(sp)
  809e3c:	dfc11d15 	stw	ra,1140(sp)
  809e40:	2025883a 	mov	r18,r4
  809e44:	d880030d 	sth	r2,12(sp)
  809e48:	db001915 	stw	r12,100(sp)
  809e4c:	dac0038d 	sth	r11,14(sp)
  809e50:	da800715 	stw	r10,28(sp)
  809e54:	da400915 	stw	r9,36(sp)
  809e58:	da000015 	stw	r8,0(sp)
  809e5c:	da000415 	stw	r8,16(sp)
  809e60:	d8c00215 	stw	r3,8(sp)
  809e64:	d8c00515 	stw	r3,20(sp)
  809e68:	d8000615 	stw	zero,24(sp)
  809e6c:	0808ad40 	call	808ad4 <___vfiprintf_internal_r>
  809e70:	1023883a 	mov	r17,r2
  809e74:	10000d0e 	bge	r2,zero,809eac <__sbprintf+0xa8>
  809e78:	d880030b 	ldhu	r2,12(sp)
  809e7c:	1080100c 	andi	r2,r2,64
  809e80:	10000326 	beq	r2,zero,809e90 <__sbprintf+0x8c>
  809e84:	8080030b 	ldhu	r2,12(r16)
  809e88:	10801014 	ori	r2,r2,64
  809e8c:	8080030d 	sth	r2,12(r16)
  809e90:	8805883a 	mov	r2,r17
  809e94:	dfc11d17 	ldw	ra,1140(sp)
  809e98:	dc811c17 	ldw	r18,1136(sp)
  809e9c:	dc411b17 	ldw	r17,1132(sp)
  809ea0:	dc011a17 	ldw	r16,1128(sp)
  809ea4:	dec11e04 	addi	sp,sp,1144
  809ea8:	f800283a 	ret
  809eac:	d80b883a 	mov	r5,sp
  809eb0:	9009883a 	mov	r4,r18
  809eb4:	08055cc0 	call	8055cc <_fflush_r>
  809eb8:	103fef26 	beq	r2,zero,809e78 <__sbprintf+0x74>
  809ebc:	047fffc4 	movi	r17,-1
  809ec0:	003fed06 	br	809e78 <__sbprintf+0x74>

00809ec4 <_write_r>:
  809ec4:	2807883a 	mov	r3,r5
  809ec8:	defffe04 	addi	sp,sp,-8
  809ecc:	dc000015 	stw	r16,0(sp)
  809ed0:	300b883a 	mov	r5,r6
  809ed4:	00802074 	movhi	r2,129
  809ed8:	380d883a 	mov	r6,r7
  809edc:	2021883a 	mov	r16,r4
  809ee0:	1809883a 	mov	r4,r3
  809ee4:	dfc00115 	stw	ra,4(sp)
  809ee8:	1012c315 	stw	zero,19212(r2)
  809eec:	080ef580 	call	80ef58 <write>
  809ef0:	10ffffd8 	cmpnei	r3,r2,-1
  809ef4:	18000426 	beq	r3,zero,809f08 <_write_r+0x44>
  809ef8:	dfc00117 	ldw	ra,4(sp)
  809efc:	dc000017 	ldw	r16,0(sp)
  809f00:	dec00204 	addi	sp,sp,8
  809f04:	f800283a 	ret
  809f08:	00c02074 	movhi	r3,129
  809f0c:	18d2c317 	ldw	r3,19212(r3)
  809f10:	183ff926 	beq	r3,zero,809ef8 <_write_r+0x34>
  809f14:	80c00015 	stw	r3,0(r16)
  809f18:	dfc00117 	ldw	ra,4(sp)
  809f1c:	dc000017 	ldw	r16,0(sp)
  809f20:	dec00204 	addi	sp,sp,8
  809f24:	f800283a 	ret

00809f28 <_close_r>:
  809f28:	defffe04 	addi	sp,sp,-8
  809f2c:	dc000015 	stw	r16,0(sp)
  809f30:	00802074 	movhi	r2,129
  809f34:	2021883a 	mov	r16,r4
  809f38:	2809883a 	mov	r4,r5
  809f3c:	dfc00115 	stw	ra,4(sp)
  809f40:	1012c315 	stw	zero,19212(r2)
  809f44:	080e2d80 	call	80e2d8 <close>
  809f48:	10ffffd8 	cmpnei	r3,r2,-1
  809f4c:	18000426 	beq	r3,zero,809f60 <_close_r+0x38>
  809f50:	dfc00117 	ldw	ra,4(sp)
  809f54:	dc000017 	ldw	r16,0(sp)
  809f58:	dec00204 	addi	sp,sp,8
  809f5c:	f800283a 	ret
  809f60:	00c02074 	movhi	r3,129
  809f64:	18d2c317 	ldw	r3,19212(r3)
  809f68:	183ff926 	beq	r3,zero,809f50 <_close_r+0x28>
  809f6c:	80c00015 	stw	r3,0(r16)
  809f70:	dfc00117 	ldw	ra,4(sp)
  809f74:	dc000017 	ldw	r16,0(sp)
  809f78:	dec00204 	addi	sp,sp,8
  809f7c:	f800283a 	ret

00809f80 <__assert_func>:
  809f80:	00802074 	movhi	r2,129
  809f84:	120bb817 	ldw	r8,12000(r2)
  809f88:	defffc04 	addi	sp,sp,-16
  809f8c:	3807883a 	mov	r3,r7
  809f90:	3005883a 	mov	r2,r6
  809f94:	dfc00315 	stw	ra,12(sp)
  809f98:	42400317 	ldw	r9,12(r8)
  809f9c:	200f883a 	mov	r7,r4
  809fa0:	2811883a 	mov	r8,r5
  809fa4:	180d883a 	mov	r6,r3
  809fa8:	10000a26 	beq	r2,zero,809fd4 <__assert_func+0x54>
  809fac:	00c02074 	movhi	r3,129
  809fb0:	18c40a04 	addi	r3,r3,4136
  809fb4:	01402074 	movhi	r5,129
  809fb8:	29440e04 	addi	r5,r5,4152
  809fbc:	4809883a 	mov	r4,r9
  809fc0:	d8c00115 	stw	r3,4(sp)
  809fc4:	da000015 	stw	r8,0(sp)
  809fc8:	d8800215 	stw	r2,8(sp)
  809fcc:	080a1e40 	call	80a1e4 <fiprintf>
  809fd0:	080a9d00 	call	80a9d0 <abort>
  809fd4:	00c02074 	movhi	r3,129
  809fd8:	18c40d04 	addi	r3,r3,4148
  809fdc:	1805883a 	mov	r2,r3
  809fe0:	003ff406 	br	809fb4 <__assert_func+0x34>

00809fe4 <__assert>:
  809fe4:	deffff04 	addi	sp,sp,-4
  809fe8:	300f883a 	mov	r7,r6
  809fec:	000d883a 	mov	r6,zero
  809ff0:	dfc00015 	stw	ra,0(sp)
  809ff4:	0809f800 	call	809f80 <__assert_func>

00809ff8 <_calloc_r>:
  809ff8:	defffe04 	addi	sp,sp,-8
  809ffc:	dc000015 	stw	r16,0(sp)
  80a000:	2021883a 	mov	r16,r4
  80a004:	2809883a 	mov	r4,r5
  80a008:	300b883a 	mov	r5,r6
  80a00c:	dfc00115 	stw	ra,4(sp)
  80a010:	080150c0 	call	80150c <__mulsi3>
  80a014:	8009883a 	mov	r4,r16
  80a018:	100b883a 	mov	r5,r2
  80a01c:	08065c40 	call	8065c4 <_malloc_r>
  80a020:	1009883a 	mov	r4,r2
  80a024:	10000c26 	beq	r2,zero,80a058 <_calloc_r+0x60>
  80a028:	11bfff17 	ldw	r6,-4(r2)
  80a02c:	00bfff04 	movi	r2,-4
  80a030:	308c703a 	and	r6,r6,r2
  80a034:	31bfff04 	addi	r6,r6,-4
  80a038:	30800968 	cmpgeui	r2,r6,37
  80a03c:	1000151e 	bne	r2,zero,80a094 <_calloc_r+0x9c>
  80a040:	30800530 	cmpltui	r2,r6,20
  80a044:	10000926 	beq	r2,zero,80a06c <_calloc_r+0x74>
  80a048:	2005883a 	mov	r2,r4
  80a04c:	10000015 	stw	zero,0(r2)
  80a050:	10000115 	stw	zero,4(r2)
  80a054:	10000215 	stw	zero,8(r2)
  80a058:	2005883a 	mov	r2,r4
  80a05c:	dfc00117 	ldw	ra,4(sp)
  80a060:	dc000017 	ldw	r16,0(sp)
  80a064:	dec00204 	addi	sp,sp,8
  80a068:	f800283a 	ret
  80a06c:	20000015 	stw	zero,0(r4)
  80a070:	20000115 	stw	zero,4(r4)
  80a074:	30800728 	cmpgeui	r2,r6,28
  80a078:	10000a26 	beq	r2,zero,80a0a4 <_calloc_r+0xac>
  80a07c:	20000215 	stw	zero,8(r4)
  80a080:	20000315 	stw	zero,12(r4)
  80a084:	31800920 	cmpeqi	r6,r6,36
  80a088:	3000081e 	bne	r6,zero,80a0ac <_calloc_r+0xb4>
  80a08c:	20800404 	addi	r2,r4,16
  80a090:	003fee06 	br	80a04c <_calloc_r+0x54>
  80a094:	000b883a 	mov	r5,zero
  80a098:	08070a40 	call	8070a4 <memset>
  80a09c:	1009883a 	mov	r4,r2
  80a0a0:	003fed06 	br	80a058 <_calloc_r+0x60>
  80a0a4:	20800204 	addi	r2,r4,8
  80a0a8:	003fe806 	br	80a04c <_calloc_r+0x54>
  80a0ac:	20000415 	stw	zero,16(r4)
  80a0b0:	20800604 	addi	r2,r4,24
  80a0b4:	20000515 	stw	zero,20(r4)
  80a0b8:	003fe406 	br	80a04c <_calloc_r+0x54>

0080a0bc <_fclose_r>:
  80a0bc:	defffc04 	addi	sp,sp,-16
  80a0c0:	dfc00315 	stw	ra,12(sp)
  80a0c4:	dc800215 	stw	r18,8(sp)
  80a0c8:	dc400115 	stw	r17,4(sp)
  80a0cc:	dc000015 	stw	r16,0(sp)
  80a0d0:	28000726 	beq	r5,zero,80a0f0 <_fclose_r+0x34>
  80a0d4:	2821883a 	mov	r16,r5
  80a0d8:	2023883a 	mov	r17,r4
  80a0dc:	20000226 	beq	r4,zero,80a0e8 <_fclose_r+0x2c>
  80a0e0:	20800e17 	ldw	r2,56(r4)
  80a0e4:	10002726 	beq	r2,zero,80a184 <_fclose_r+0xc8>
  80a0e8:	8080030f 	ldh	r2,12(r16)
  80a0ec:	1000081e 	bne	r2,zero,80a110 <_fclose_r+0x54>
  80a0f0:	0025883a 	mov	r18,zero
  80a0f4:	9005883a 	mov	r2,r18
  80a0f8:	dfc00317 	ldw	ra,12(sp)
  80a0fc:	dc800217 	ldw	r18,8(sp)
  80a100:	dc400117 	ldw	r17,4(sp)
  80a104:	dc000017 	ldw	r16,0(sp)
  80a108:	dec00404 	addi	sp,sp,16
  80a10c:	f800283a 	ret
  80a110:	800b883a 	mov	r5,r16
  80a114:	8809883a 	mov	r4,r17
  80a118:	08053a40 	call	8053a4 <__sflush_r>
  80a11c:	80c00b17 	ldw	r3,44(r16)
  80a120:	1025883a 	mov	r18,r2
  80a124:	18000426 	beq	r3,zero,80a138 <_fclose_r+0x7c>
  80a128:	81400717 	ldw	r5,28(r16)
  80a12c:	8809883a 	mov	r4,r17
  80a130:	183ee83a 	callr	r3
  80a134:	10001716 	blt	r2,zero,80a194 <_fclose_r+0xd8>
  80a138:	8080030b 	ldhu	r2,12(r16)
  80a13c:	1080200c 	andi	r2,r2,128
  80a140:	1000181e 	bne	r2,zero,80a1a4 <_fclose_r+0xe8>
  80a144:	81400c17 	ldw	r5,48(r16)
  80a148:	28000526 	beq	r5,zero,80a160 <_fclose_r+0xa4>
  80a14c:	80801004 	addi	r2,r16,64
  80a150:	28800226 	beq	r5,r2,80a15c <_fclose_r+0xa0>
  80a154:	8809883a 	mov	r4,r17
  80a158:	0805ac40 	call	805ac4 <_free_r>
  80a15c:	80000c15 	stw	zero,48(r16)
  80a160:	81401117 	ldw	r5,68(r16)
  80a164:	28000326 	beq	r5,zero,80a174 <_fclose_r+0xb8>
  80a168:	8809883a 	mov	r4,r17
  80a16c:	0805ac40 	call	805ac4 <_free_r>
  80a170:	80001115 	stw	zero,68(r16)
  80a174:	08059700 	call	805970 <__sfp_lock_acquire>
  80a178:	8000030d 	sth	zero,12(r16)
  80a17c:	08059740 	call	805974 <__sfp_lock_release>
  80a180:	003fdc06 	br	80a0f4 <_fclose_r+0x38>
  80a184:	08059600 	call	805960 <__sinit>
  80a188:	8080030f 	ldh	r2,12(r16)
  80a18c:	103fd826 	beq	r2,zero,80a0f0 <_fclose_r+0x34>
  80a190:	003fdf06 	br	80a110 <_fclose_r+0x54>
  80a194:	8080030b 	ldhu	r2,12(r16)
  80a198:	04bfffc4 	movi	r18,-1
  80a19c:	1080200c 	andi	r2,r2,128
  80a1a0:	103fe826 	beq	r2,zero,80a144 <_fclose_r+0x88>
  80a1a4:	81400417 	ldw	r5,16(r16)
  80a1a8:	8809883a 	mov	r4,r17
  80a1ac:	0805ac40 	call	805ac4 <_free_r>
  80a1b0:	003fe406 	br	80a144 <_fclose_r+0x88>

0080a1b4 <fclose>:
  80a1b4:	00802074 	movhi	r2,129
  80a1b8:	200b883a 	mov	r5,r4
  80a1bc:	110bb817 	ldw	r4,12000(r2)
  80a1c0:	080a0bc1 	jmpi	80a0bc <_fclose_r>

0080a1c4 <_fiprintf_r>:
  80a1c4:	defffe04 	addi	sp,sp,-8
  80a1c8:	dfc00015 	stw	ra,0(sp)
  80a1cc:	d9c00115 	stw	r7,4(sp)
  80a1d0:	d9c00104 	addi	r7,sp,4
  80a1d4:	080a73c0 	call	80a73c <_vfiprintf_r>
  80a1d8:	dfc00017 	ldw	ra,0(sp)
  80a1dc:	dec00204 	addi	sp,sp,8
  80a1e0:	f800283a 	ret

0080a1e4 <fiprintf>:
  80a1e4:	defffd04 	addi	sp,sp,-12
  80a1e8:	2005883a 	mov	r2,r4
  80a1ec:	dfc00015 	stw	ra,0(sp)
  80a1f0:	d9800115 	stw	r6,4(sp)
  80a1f4:	d9c00215 	stw	r7,8(sp)
  80a1f8:	00c02074 	movhi	r3,129
  80a1fc:	190bb817 	ldw	r4,12000(r3)
  80a200:	280d883a 	mov	r6,r5
  80a204:	d9c00104 	addi	r7,sp,4
  80a208:	100b883a 	mov	r5,r2
  80a20c:	080a73c0 	call	80a73c <_vfiprintf_r>
  80a210:	dfc00017 	ldw	ra,0(sp)
  80a214:	dec00304 	addi	sp,sp,12
  80a218:	f800283a 	ret

0080a21c <__fputwc>:
  80a21c:	defff904 	addi	sp,sp,-28
  80a220:	dcc00415 	stw	r19,16(sp)
  80a224:	dc800315 	stw	r18,12(sp)
  80a228:	dc000115 	stw	r16,4(sp)
  80a22c:	dfc00615 	stw	ra,24(sp)
  80a230:	dd000515 	stw	r20,20(sp)
  80a234:	dc400215 	stw	r17,8(sp)
  80a238:	2025883a 	mov	r18,r4
  80a23c:	2827883a 	mov	r19,r5
  80a240:	3021883a 	mov	r16,r6
  80a244:	080a5480 	call	80a548 <__locale_mb_cur_max>
  80a248:	10800058 	cmpnei	r2,r2,1
  80a24c:	1000071e 	bne	r2,zero,80a26c <__fputwc+0x50>
  80a250:	98bfffc4 	addi	r2,r19,-1
  80a254:	10803fe8 	cmpgeui	r2,r2,255
  80a258:	1000041e 	bne	r2,zero,80a26c <__fputwc+0x50>
  80a25c:	980b883a 	mov	r5,r19
  80a260:	dcc000c5 	stb	r19,3(sp)
  80a264:	05000044 	movi	r20,1
  80a268:	00000a06 	br	80a294 <__fputwc+0x78>
  80a26c:	81c01704 	addi	r7,r16,92
  80a270:	980d883a 	mov	r6,r19
  80a274:	d94000c4 	addi	r5,sp,3
  80a278:	9009883a 	mov	r4,r18
  80a27c:	080a8a00 	call	80a8a0 <_wcrtomb_r>
  80a280:	1029883a 	mov	r20,r2
  80a284:	10bfffd8 	cmpnei	r2,r2,-1
  80a288:	10003926 	beq	r2,zero,80a370 <__fputwc+0x154>
  80a28c:	a0001f26 	beq	r20,zero,80a30c <__fputwc+0xf0>
  80a290:	d94000c3 	ldbu	r5,3(sp)
  80a294:	0023883a 	mov	r17,zero
  80a298:	00000a06 	br	80a2c4 <__fputwc+0xa8>
  80a29c:	80800017 	ldw	r2,0(r16)
  80a2a0:	11400005 	stb	r5,0(r2)
  80a2a4:	80c00017 	ldw	r3,0(r16)
  80a2a8:	18c00044 	addi	r3,r3,1
  80a2ac:	80c00015 	stw	r3,0(r16)
  80a2b0:	8c400044 	addi	r17,r17,1
  80a2b4:	d88000c4 	addi	r2,sp,3
  80a2b8:	1447883a 	add	r3,r2,r17
  80a2bc:	8d00132e 	bgeu	r17,r20,80a30c <__fputwc+0xf0>
  80a2c0:	19400003 	ldbu	r5,0(r3)
  80a2c4:	80c00217 	ldw	r3,8(r16)
  80a2c8:	18ffffc4 	addi	r3,r3,-1
  80a2cc:	80c00215 	stw	r3,8(r16)
  80a2d0:	183ff20e 	bge	r3,zero,80a29c <__fputwc+0x80>
  80a2d4:	80800617 	ldw	r2,24(r16)
  80a2d8:	18801616 	blt	r3,r2,80a334 <__fputwc+0x118>
  80a2dc:	80800017 	ldw	r2,0(r16)
  80a2e0:	11400005 	stb	r5,0(r2)
  80a2e4:	80800017 	ldw	r2,0(r16)
  80a2e8:	10c00003 	ldbu	r3,0(r2)
  80a2ec:	10800044 	addi	r2,r2,1
  80a2f0:	18c002a0 	cmpeqi	r3,r3,10
  80a2f4:	1800181e 	bne	r3,zero,80a358 <__fputwc+0x13c>
  80a2f8:	80800015 	stw	r2,0(r16)
  80a2fc:	8c400044 	addi	r17,r17,1
  80a300:	d88000c4 	addi	r2,sp,3
  80a304:	1447883a 	add	r3,r2,r17
  80a308:	8d3fed36 	bltu	r17,r20,80a2c0 <__fputwc+0xa4>
  80a30c:	9829883a 	mov	r20,r19
  80a310:	a005883a 	mov	r2,r20
  80a314:	dfc00617 	ldw	ra,24(sp)
  80a318:	dd000517 	ldw	r20,20(sp)
  80a31c:	dcc00417 	ldw	r19,16(sp)
  80a320:	dc800317 	ldw	r18,12(sp)
  80a324:	dc400217 	ldw	r17,8(sp)
  80a328:	dc000117 	ldw	r16,4(sp)
  80a32c:	dec00704 	addi	sp,sp,28
  80a330:	f800283a 	ret
  80a334:	29403fcc 	andi	r5,r5,255
  80a338:	800d883a 	mov	r6,r16
  80a33c:	9009883a 	mov	r4,r18
  80a340:	080a7400 	call	80a740 <__swbuf_r>
  80a344:	10ffffe0 	cmpeqi	r3,r2,-1
  80a348:	18c03fcc 	andi	r3,r3,255
  80a34c:	183fd826 	beq	r3,zero,80a2b0 <__fputwc+0x94>
  80a350:	053fffc4 	movi	r20,-1
  80a354:	003fee06 	br	80a310 <__fputwc+0xf4>
  80a358:	800d883a 	mov	r6,r16
  80a35c:	01400284 	movi	r5,10
  80a360:	9009883a 	mov	r4,r18
  80a364:	080a7400 	call	80a740 <__swbuf_r>
  80a368:	10ffffe0 	cmpeqi	r3,r2,-1
  80a36c:	003ff606 	br	80a348 <__fputwc+0x12c>
  80a370:	8080030b 	ldhu	r2,12(r16)
  80a374:	10801014 	ori	r2,r2,64
  80a378:	8080030d 	sth	r2,12(r16)
  80a37c:	003fe406 	br	80a310 <__fputwc+0xf4>

0080a380 <_fputwc_r>:
  80a380:	3080030b 	ldhu	r2,12(r6)
  80a384:	10c8000c 	andi	r3,r2,8192
  80a388:	1800051e 	bne	r3,zero,80a3a0 <_fputwc_r+0x20>
  80a38c:	30c01917 	ldw	r3,100(r6)
  80a390:	10880014 	ori	r2,r2,8192
  80a394:	3080030d 	sth	r2,12(r6)
  80a398:	18880014 	ori	r2,r3,8192
  80a39c:	30801915 	stw	r2,100(r6)
  80a3a0:	080a21c1 	jmpi	80a21c <__fputwc>

0080a3a4 <fputwc>:
  80a3a4:	defffc04 	addi	sp,sp,-16
  80a3a8:	00802074 	movhi	r2,129
  80a3ac:	dc000215 	stw	r16,8(sp)
  80a3b0:	140bb817 	ldw	r16,12000(r2)
  80a3b4:	dfc00315 	stw	ra,12(sp)
  80a3b8:	280d883a 	mov	r6,r5
  80a3bc:	200b883a 	mov	r5,r4
  80a3c0:	80000226 	beq	r16,zero,80a3cc <fputwc+0x28>
  80a3c4:	80800e17 	ldw	r2,56(r16)
  80a3c8:	10000d26 	beq	r2,zero,80a400 <fputwc+0x5c>
  80a3cc:	3080030b 	ldhu	r2,12(r6)
  80a3d0:	10c8000c 	andi	r3,r2,8192
  80a3d4:	1800051e 	bne	r3,zero,80a3ec <fputwc+0x48>
  80a3d8:	30c01917 	ldw	r3,100(r6)
  80a3dc:	10880014 	ori	r2,r2,8192
  80a3e0:	3080030d 	sth	r2,12(r6)
  80a3e4:	18880014 	ori	r2,r3,8192
  80a3e8:	30801915 	stw	r2,100(r6)
  80a3ec:	8009883a 	mov	r4,r16
  80a3f0:	dfc00317 	ldw	ra,12(sp)
  80a3f4:	dc000217 	ldw	r16,8(sp)
  80a3f8:	dec00404 	addi	sp,sp,16
  80a3fc:	080a21c1 	jmpi	80a21c <__fputwc>
  80a400:	d9000015 	stw	r4,0(sp)
  80a404:	8009883a 	mov	r4,r16
  80a408:	d9800115 	stw	r6,4(sp)
  80a40c:	08059600 	call	805960 <__sinit>
  80a410:	d9800117 	ldw	r6,4(sp)
  80a414:	d9400017 	ldw	r5,0(sp)
  80a418:	003fec06 	br	80a3cc <fputwc+0x28>

0080a41c <_fstat_r>:
  80a41c:	2807883a 	mov	r3,r5
  80a420:	defffe04 	addi	sp,sp,-8
  80a424:	dc000015 	stw	r16,0(sp)
  80a428:	00802074 	movhi	r2,129
  80a42c:	300b883a 	mov	r5,r6
  80a430:	2021883a 	mov	r16,r4
  80a434:	1809883a 	mov	r4,r3
  80a438:	dfc00115 	stw	ra,4(sp)
  80a43c:	1012c315 	stw	zero,19212(r2)
  80a440:	080e4540 	call	80e454 <fstat>
  80a444:	10ffffd8 	cmpnei	r3,r2,-1
  80a448:	18000426 	beq	r3,zero,80a45c <_fstat_r+0x40>
  80a44c:	dfc00117 	ldw	ra,4(sp)
  80a450:	dc000017 	ldw	r16,0(sp)
  80a454:	dec00204 	addi	sp,sp,8
  80a458:	f800283a 	ret
  80a45c:	00c02074 	movhi	r3,129
  80a460:	18d2c317 	ldw	r3,19212(r3)
  80a464:	183ff926 	beq	r3,zero,80a44c <_fstat_r+0x30>
  80a468:	80c00015 	stw	r3,0(r16)
  80a46c:	dfc00117 	ldw	ra,4(sp)
  80a470:	dc000017 	ldw	r16,0(sp)
  80a474:	dec00204 	addi	sp,sp,8
  80a478:	f800283a 	ret

0080a47c <_isatty_r>:
  80a47c:	defffe04 	addi	sp,sp,-8
  80a480:	dc000015 	stw	r16,0(sp)
  80a484:	00802074 	movhi	r2,129
  80a488:	2021883a 	mov	r16,r4
  80a48c:	2809883a 	mov	r4,r5
  80a490:	dfc00115 	stw	ra,4(sp)
  80a494:	1012c315 	stw	zero,19212(r2)
  80a498:	080e56c0 	call	80e56c <isatty>
  80a49c:	10ffffd8 	cmpnei	r3,r2,-1
  80a4a0:	18000426 	beq	r3,zero,80a4b4 <_isatty_r+0x38>
  80a4a4:	dfc00117 	ldw	ra,4(sp)
  80a4a8:	dc000017 	ldw	r16,0(sp)
  80a4ac:	dec00204 	addi	sp,sp,8
  80a4b0:	f800283a 	ret
  80a4b4:	00c02074 	movhi	r3,129
  80a4b8:	18d2c317 	ldw	r3,19212(r3)
  80a4bc:	183ff926 	beq	r3,zero,80a4a4 <_isatty_r+0x28>
  80a4c0:	80c00015 	stw	r3,0(r16)
  80a4c4:	dfc00117 	ldw	ra,4(sp)
  80a4c8:	dc000017 	ldw	r16,0(sp)
  80a4cc:	dec00204 	addi	sp,sp,8
  80a4d0:	f800283a 	ret

0080a4d4 <_setlocale_r>:
  80a4d4:	30001626 	beq	r6,zero,80a530 <_setlocale_r+0x5c>
  80a4d8:	01402074 	movhi	r5,129
  80a4dc:	defffe04 	addi	sp,sp,-8
  80a4e0:	29441b04 	addi	r5,r5,4204
  80a4e4:	3009883a 	mov	r4,r6
  80a4e8:	dc000015 	stw	r16,0(sp)
  80a4ec:	dfc00115 	stw	ra,4(sp)
  80a4f0:	3021883a 	mov	r16,r6
  80a4f4:	080a6840 	call	80a684 <strcmp>
  80a4f8:	1000061e 	bne	r2,zero,80a514 <_setlocale_r+0x40>
  80a4fc:	00802074 	movhi	r2,129
  80a500:	10841a04 	addi	r2,r2,4200
  80a504:	dfc00117 	ldw	ra,4(sp)
  80a508:	dc000017 	ldw	r16,0(sp)
  80a50c:	dec00204 	addi	sp,sp,8
  80a510:	f800283a 	ret
  80a514:	80800003 	ldbu	r2,0(r16)
  80a518:	10bfef44 	addi	r2,r2,-67
  80a51c:	10000726 	beq	r2,zero,80a53c <_setlocale_r+0x68>
  80a520:	80800003 	ldbu	r2,0(r16)
  80a524:	103ff526 	beq	r2,zero,80a4fc <_setlocale_r+0x28>
  80a528:	0005883a 	mov	r2,zero
  80a52c:	003ff506 	br	80a504 <_setlocale_r+0x30>
  80a530:	00802074 	movhi	r2,129
  80a534:	10841a04 	addi	r2,r2,4200
  80a538:	f800283a 	ret
  80a53c:	80800043 	ldbu	r2,1(r16)
  80a540:	103fee26 	beq	r2,zero,80a4fc <_setlocale_r+0x28>
  80a544:	003ff606 	br	80a520 <_setlocale_r+0x4c>

0080a548 <__locale_mb_cur_max>:
  80a548:	00802074 	movhi	r2,129
  80a54c:	10871f07 	ldb	r2,7292(r2)
  80a550:	f800283a 	ret

0080a554 <setlocale>:
  80a554:	00c02074 	movhi	r3,129
  80a558:	2005883a 	mov	r2,r4
  80a55c:	190bb817 	ldw	r4,12000(r3)
  80a560:	280d883a 	mov	r6,r5
  80a564:	100b883a 	mov	r5,r2
  80a568:	080a4d41 	jmpi	80a4d4 <_setlocale_r>

0080a56c <_lseek_r>:
  80a56c:	2807883a 	mov	r3,r5
  80a570:	defffe04 	addi	sp,sp,-8
  80a574:	dc000015 	stw	r16,0(sp)
  80a578:	300b883a 	mov	r5,r6
  80a57c:	00802074 	movhi	r2,129
  80a580:	380d883a 	mov	r6,r7
  80a584:	2021883a 	mov	r16,r4
  80a588:	1809883a 	mov	r4,r3
  80a58c:	dfc00115 	stw	ra,4(sp)
  80a590:	1012c315 	stw	zero,19212(r2)
  80a594:	080e8ac0 	call	80e8ac <lseek>
  80a598:	10ffffd8 	cmpnei	r3,r2,-1
  80a59c:	18000426 	beq	r3,zero,80a5b0 <_lseek_r+0x44>
  80a5a0:	dfc00117 	ldw	ra,4(sp)
  80a5a4:	dc000017 	ldw	r16,0(sp)
  80a5a8:	dec00204 	addi	sp,sp,8
  80a5ac:	f800283a 	ret
  80a5b0:	00c02074 	movhi	r3,129
  80a5b4:	18d2c317 	ldw	r3,19212(r3)
  80a5b8:	183ff926 	beq	r3,zero,80a5a0 <_lseek_r+0x34>
  80a5bc:	80c00015 	stw	r3,0(r16)
  80a5c0:	dfc00117 	ldw	ra,4(sp)
  80a5c4:	dc000017 	ldw	r16,0(sp)
  80a5c8:	dec00204 	addi	sp,sp,8
  80a5cc:	f800283a 	ret

0080a5d0 <_mbtowc_r>:
  80a5d0:	00802074 	movhi	r2,129
  80a5d4:	10870e17 	ldw	r2,7224(r2)
  80a5d8:	1000683a 	jmp	r2

0080a5dc <__ascii_mbtowc>:
  80a5dc:	deffff04 	addi	sp,sp,-4
  80a5e0:	28000826 	beq	r5,zero,80a604 <__ascii_mbtowc+0x28>
  80a5e4:	30000926 	beq	r6,zero,80a60c <__ascii_mbtowc+0x30>
  80a5e8:	38000b26 	beq	r7,zero,80a618 <__ascii_mbtowc+0x3c>
  80a5ec:	30800003 	ldbu	r2,0(r6)
  80a5f0:	28800015 	stw	r2,0(r5)
  80a5f4:	30800003 	ldbu	r2,0(r6)
  80a5f8:	1004c03a 	cmpne	r2,r2,zero
  80a5fc:	dec00104 	addi	sp,sp,4
  80a600:	f800283a 	ret
  80a604:	d80b883a 	mov	r5,sp
  80a608:	303ff71e 	bne	r6,zero,80a5e8 <__ascii_mbtowc+0xc>
  80a60c:	0005883a 	mov	r2,zero
  80a610:	dec00104 	addi	sp,sp,4
  80a614:	f800283a 	ret
  80a618:	00bfff84 	movi	r2,-2
  80a61c:	003ff706 	br	80a5fc <__ascii_mbtowc+0x20>

0080a620 <_read_r>:
  80a620:	2807883a 	mov	r3,r5
  80a624:	defffe04 	addi	sp,sp,-8
  80a628:	dc000015 	stw	r16,0(sp)
  80a62c:	300b883a 	mov	r5,r6
  80a630:	00802074 	movhi	r2,129
  80a634:	380d883a 	mov	r6,r7
  80a638:	2021883a 	mov	r16,r4
  80a63c:	1809883a 	mov	r4,r3
  80a640:	dfc00115 	stw	ra,4(sp)
  80a644:	1012c315 	stw	zero,19212(r2)
  80a648:	080ea8c0 	call	80ea8c <read>
  80a64c:	10ffffd8 	cmpnei	r3,r2,-1
  80a650:	18000426 	beq	r3,zero,80a664 <_read_r+0x44>
  80a654:	dfc00117 	ldw	ra,4(sp)
  80a658:	dc000017 	ldw	r16,0(sp)
  80a65c:	dec00204 	addi	sp,sp,8
  80a660:	f800283a 	ret
  80a664:	00c02074 	movhi	r3,129
  80a668:	18d2c317 	ldw	r3,19212(r3)
  80a66c:	183ff926 	beq	r3,zero,80a654 <_read_r+0x34>
  80a670:	80c00015 	stw	r3,0(r16)
  80a674:	dfc00117 	ldw	ra,4(sp)
  80a678:	dc000017 	ldw	r16,0(sp)
  80a67c:	dec00204 	addi	sp,sp,8
  80a680:	f800283a 	ret

0080a684 <strcmp>:
  80a684:	2144b03a 	or	r2,r4,r5
  80a688:	108000cc 	andi	r2,r2,3
  80a68c:	1000141e 	bne	r2,zero,80a6e0 <strcmp+0x5c>
  80a690:	20800017 	ldw	r2,0(r4)
  80a694:	28c00017 	ldw	r3,0(r5)
  80a698:	10c0111e 	bne	r2,r3,80a6e0 <strcmp+0x5c>
  80a69c:	01ffbff4 	movhi	r7,65279
  80a6a0:	01a02074 	movhi	r6,32897
  80a6a4:	39ffbfc4 	addi	r7,r7,-257
  80a6a8:	31a02004 	addi	r6,r6,-32640
  80a6ac:	00000306 	br	80a6bc <strcmp+0x38>
  80a6b0:	20800017 	ldw	r2,0(r4)
  80a6b4:	28c00017 	ldw	r3,0(r5)
  80a6b8:	10c0091e 	bne	r2,r3,80a6e0 <strcmp+0x5c>
  80a6bc:	11c7883a 	add	r3,r2,r7
  80a6c0:	0084303a 	nor	r2,zero,r2
  80a6c4:	1884703a 	and	r2,r3,r2
  80a6c8:	1184703a 	and	r2,r2,r6
  80a6cc:	21000104 	addi	r4,r4,4
  80a6d0:	29400104 	addi	r5,r5,4
  80a6d4:	103ff626 	beq	r2,zero,80a6b0 <strcmp+0x2c>
  80a6d8:	0005883a 	mov	r2,zero
  80a6dc:	f800283a 	ret
  80a6e0:	20c00003 	ldbu	r3,0(r4)
  80a6e4:	18803fcc 	andi	r2,r3,255
  80a6e8:	1080201c 	xori	r2,r2,128
  80a6ec:	10bfe004 	addi	r2,r2,-128
  80a6f0:	1000071e 	bne	r2,zero,80a710 <strcmp+0x8c>
  80a6f4:	00000a06 	br	80a720 <strcmp+0x9c>
  80a6f8:	20c00003 	ldbu	r3,0(r4)
  80a6fc:	29400044 	addi	r5,r5,1
  80a700:	18803fcc 	andi	r2,r3,255
  80a704:	1080201c 	xori	r2,r2,128
  80a708:	10bfe004 	addi	r2,r2,-128
  80a70c:	10000726 	beq	r2,zero,80a72c <strcmp+0xa8>
  80a710:	29800007 	ldb	r6,0(r5)
  80a714:	21000044 	addi	r4,r4,1
  80a718:	30bff726 	beq	r6,r2,80a6f8 <strcmp+0x74>
  80a71c:	18803fcc 	andi	r2,r3,255
  80a720:	28c00003 	ldbu	r3,0(r5)
  80a724:	10c5c83a 	sub	r2,r2,r3
  80a728:	f800283a 	ret
  80a72c:	28c00003 	ldbu	r3,0(r5)
  80a730:	0005883a 	mov	r2,zero
  80a734:	10c5c83a 	sub	r2,r2,r3
  80a738:	f800283a 	ret

0080a73c <_vfiprintf_r>:
  80a73c:	0808ad41 	jmpi	808ad4 <___vfiprintf_internal_r>

0080a740 <__swbuf_r>:
  80a740:	defffb04 	addi	sp,sp,-20
  80a744:	dcc00315 	stw	r19,12(sp)
  80a748:	dc400115 	stw	r17,4(sp)
  80a74c:	dc000015 	stw	r16,0(sp)
  80a750:	dfc00415 	stw	ra,16(sp)
  80a754:	dc800215 	stw	r18,8(sp)
  80a758:	2027883a 	mov	r19,r4
  80a75c:	2823883a 	mov	r17,r5
  80a760:	3021883a 	mov	r16,r6
  80a764:	20000226 	beq	r4,zero,80a770 <__swbuf_r+0x30>
  80a768:	20800e17 	ldw	r2,56(r4)
  80a76c:	10003e26 	beq	r2,zero,80a868 <__swbuf_r+0x128>
  80a770:	80800617 	ldw	r2,24(r16)
  80a774:	80c0030b 	ldhu	r3,12(r16)
  80a778:	80800215 	stw	r2,8(r16)
  80a77c:	1880020c 	andi	r2,r3,8
  80a780:	10001f26 	beq	r2,zero,80a800 <__swbuf_r+0xc0>
  80a784:	80800417 	ldw	r2,16(r16)
  80a788:	10001d26 	beq	r2,zero,80a800 <__swbuf_r+0xc0>
  80a78c:	1948000c 	andi	r5,r3,8192
  80a790:	8c803fcc 	andi	r18,r17,255
  80a794:	28002326 	beq	r5,zero,80a824 <__swbuf_r+0xe4>
  80a798:	80c00017 	ldw	r3,0(r16)
  80a79c:	81000517 	ldw	r4,20(r16)
  80a7a0:	1885c83a 	sub	r2,r3,r2
  80a7a4:	1100290e 	bge	r2,r4,80a84c <__swbuf_r+0x10c>
  80a7a8:	10800044 	addi	r2,r2,1
  80a7ac:	81400217 	ldw	r5,8(r16)
  80a7b0:	19000044 	addi	r4,r3,1
  80a7b4:	81000015 	stw	r4,0(r16)
  80a7b8:	297fffc4 	addi	r5,r5,-1
  80a7bc:	81400215 	stw	r5,8(r16)
  80a7c0:	1c400005 	stb	r17,0(r3)
  80a7c4:	80c00517 	ldw	r3,20(r16)
  80a7c8:	18802926 	beq	r3,r2,80a870 <__swbuf_r+0x130>
  80a7cc:	8080030b 	ldhu	r2,12(r16)
  80a7d0:	1080004c 	andi	r2,r2,1
  80a7d4:	10000226 	beq	r2,zero,80a7e0 <__swbuf_r+0xa0>
  80a7d8:	90800298 	cmpnei	r2,r18,10
  80a7dc:	10002426 	beq	r2,zero,80a870 <__swbuf_r+0x130>
  80a7e0:	9005883a 	mov	r2,r18
  80a7e4:	dfc00417 	ldw	ra,16(sp)
  80a7e8:	dcc00317 	ldw	r19,12(sp)
  80a7ec:	dc800217 	ldw	r18,8(sp)
  80a7f0:	dc400117 	ldw	r17,4(sp)
  80a7f4:	dc000017 	ldw	r16,0(sp)
  80a7f8:	dec00504 	addi	sp,sp,20
  80a7fc:	f800283a 	ret
  80a800:	800b883a 	mov	r5,r16
  80a804:	9809883a 	mov	r4,r19
  80a808:	08038d80 	call	8038d8 <__swsetup_r>
  80a80c:	10001c1e 	bne	r2,zero,80a880 <__swbuf_r+0x140>
  80a810:	80c0030b 	ldhu	r3,12(r16)
  80a814:	80800417 	ldw	r2,16(r16)
  80a818:	8c803fcc 	andi	r18,r17,255
  80a81c:	1948000c 	andi	r5,r3,8192
  80a820:	283fdd1e 	bne	r5,zero,80a798 <__swbuf_r+0x58>
  80a824:	81001917 	ldw	r4,100(r16)
  80a828:	18c80014 	ori	r3,r3,8192
  80a82c:	0177ffc4 	movi	r5,-8193
  80a830:	2148703a 	and	r4,r4,r5
  80a834:	80c0030d 	sth	r3,12(r16)
  80a838:	80c00017 	ldw	r3,0(r16)
  80a83c:	81001915 	stw	r4,100(r16)
  80a840:	81000517 	ldw	r4,20(r16)
  80a844:	1885c83a 	sub	r2,r3,r2
  80a848:	113fd716 	blt	r2,r4,80a7a8 <__swbuf_r+0x68>
  80a84c:	800b883a 	mov	r5,r16
  80a850:	9809883a 	mov	r4,r19
  80a854:	08055cc0 	call	8055cc <_fflush_r>
  80a858:	1000091e 	bne	r2,zero,80a880 <__swbuf_r+0x140>
  80a85c:	80c00017 	ldw	r3,0(r16)
  80a860:	00800044 	movi	r2,1
  80a864:	003fd106 	br	80a7ac <__swbuf_r+0x6c>
  80a868:	08059600 	call	805960 <__sinit>
  80a86c:	003fc006 	br	80a770 <__swbuf_r+0x30>
  80a870:	800b883a 	mov	r5,r16
  80a874:	9809883a 	mov	r4,r19
  80a878:	08055cc0 	call	8055cc <_fflush_r>
  80a87c:	103fd826 	beq	r2,zero,80a7e0 <__swbuf_r+0xa0>
  80a880:	04bfffc4 	movi	r18,-1
  80a884:	003fd606 	br	80a7e0 <__swbuf_r+0xa0>

0080a888 <__swbuf>:
  80a888:	00c02074 	movhi	r3,129
  80a88c:	2005883a 	mov	r2,r4
  80a890:	190bb817 	ldw	r4,12000(r3)
  80a894:	280d883a 	mov	r6,r5
  80a898:	100b883a 	mov	r5,r2
  80a89c:	080a7401 	jmpi	80a740 <__swbuf_r>

0080a8a0 <_wcrtomb_r>:
  80a8a0:	defffa04 	addi	sp,sp,-24
  80a8a4:	dc400415 	stw	r17,16(sp)
  80a8a8:	dc000315 	stw	r16,12(sp)
  80a8ac:	00802074 	movhi	r2,129
  80a8b0:	dfc00515 	stw	ra,20(sp)
  80a8b4:	10870d17 	ldw	r2,7220(r2)
  80a8b8:	2023883a 	mov	r17,r4
  80a8bc:	3821883a 	mov	r16,r7
  80a8c0:	28000826 	beq	r5,zero,80a8e4 <_wcrtomb_r+0x44>
  80a8c4:	103ee83a 	callr	r2
  80a8c8:	10ffffd8 	cmpnei	r3,r2,-1
  80a8cc:	18000a26 	beq	r3,zero,80a8f8 <_wcrtomb_r+0x58>
  80a8d0:	dfc00517 	ldw	ra,20(sp)
  80a8d4:	dc400417 	ldw	r17,16(sp)
  80a8d8:	dc000317 	ldw	r16,12(sp)
  80a8dc:	dec00604 	addi	sp,sp,24
  80a8e0:	f800283a 	ret
  80a8e4:	000d883a 	mov	r6,zero
  80a8e8:	d9400084 	addi	r5,sp,2
  80a8ec:	103ee83a 	callr	r2
  80a8f0:	10ffffd8 	cmpnei	r3,r2,-1
  80a8f4:	183ff61e 	bne	r3,zero,80a8d0 <_wcrtomb_r+0x30>
  80a8f8:	00802284 	movi	r2,138
  80a8fc:	80000015 	stw	zero,0(r16)
  80a900:	88800015 	stw	r2,0(r17)
  80a904:	00bfffc4 	movi	r2,-1
  80a908:	003ff106 	br	80a8d0 <_wcrtomb_r+0x30>

0080a90c <wcrtomb>:
  80a90c:	defffa04 	addi	sp,sp,-24
  80a910:	00c02074 	movhi	r3,129
  80a914:	dc400415 	stw	r17,16(sp)
  80a918:	dc000315 	stw	r16,12(sp)
  80a91c:	1c4bb817 	ldw	r17,12000(r3)
  80a920:	dfc00515 	stw	ra,20(sp)
  80a924:	00c02074 	movhi	r3,129
  80a928:	18c70d17 	ldw	r3,7220(r3)
  80a92c:	3021883a 	mov	r16,r6
  80a930:	20000c26 	beq	r4,zero,80a964 <wcrtomb+0x58>
  80a934:	280d883a 	mov	r6,r5
  80a938:	800f883a 	mov	r7,r16
  80a93c:	200b883a 	mov	r5,r4
  80a940:	8809883a 	mov	r4,r17
  80a944:	183ee83a 	callr	r3
  80a948:	10ffffd8 	cmpnei	r3,r2,-1
  80a94c:	18000c26 	beq	r3,zero,80a980 <wcrtomb+0x74>
  80a950:	dfc00517 	ldw	ra,20(sp)
  80a954:	dc400417 	ldw	r17,16(sp)
  80a958:	dc000317 	ldw	r16,12(sp)
  80a95c:	dec00604 	addi	sp,sp,24
  80a960:	f800283a 	ret
  80a964:	300f883a 	mov	r7,r6
  80a968:	d9400084 	addi	r5,sp,2
  80a96c:	000d883a 	mov	r6,zero
  80a970:	8809883a 	mov	r4,r17
  80a974:	183ee83a 	callr	r3
  80a978:	10ffffd8 	cmpnei	r3,r2,-1
  80a97c:	183ff41e 	bne	r3,zero,80a950 <wcrtomb+0x44>
  80a980:	00802284 	movi	r2,138
  80a984:	80000015 	stw	zero,0(r16)
  80a988:	88800015 	stw	r2,0(r17)
  80a98c:	00bfffc4 	movi	r2,-1
  80a990:	003fef06 	br	80a950 <wcrtomb+0x44>

0080a994 <_wctomb_r>:
  80a994:	00802074 	movhi	r2,129
  80a998:	10870d17 	ldw	r2,7220(r2)
  80a99c:	1000683a 	jmp	r2

0080a9a0 <__ascii_wctomb>:
  80a9a0:	28000926 	beq	r5,zero,80a9c8 <__ascii_wctomb+0x28>
  80a9a4:	30804030 	cmpltui	r2,r6,256
  80a9a8:	10000326 	beq	r2,zero,80a9b8 <__ascii_wctomb+0x18>
  80a9ac:	29800005 	stb	r6,0(r5)
  80a9b0:	00800044 	movi	r2,1
  80a9b4:	f800283a 	ret
  80a9b8:	00802284 	movi	r2,138
  80a9bc:	20800015 	stw	r2,0(r4)
  80a9c0:	00bfffc4 	movi	r2,-1
  80a9c4:	f800283a 	ret
  80a9c8:	0005883a 	mov	r2,zero
  80a9cc:	f800283a 	ret

0080a9d0 <abort>:
  80a9d0:	deffff04 	addi	sp,sp,-4
  80a9d4:	01000184 	movi	r4,6
  80a9d8:	dfc00015 	stw	ra,0(sp)
  80a9dc:	080ac480 	call	80ac48 <raise>
  80a9e0:	01000044 	movi	r4,1
  80a9e4:	080e3e00 	call	80e3e0 <_exit>

0080a9e8 <_init_signal_r.part.0>:
  80a9e8:	defffe04 	addi	sp,sp,-8
  80a9ec:	01402004 	movi	r5,128
  80a9f0:	dc000015 	stw	r16,0(sp)
  80a9f4:	dfc00115 	stw	ra,4(sp)
  80a9f8:	2021883a 	mov	r16,r4
  80a9fc:	08065c40 	call	8065c4 <_malloc_r>
  80aa00:	8080b715 	stw	r2,732(r16)
  80aa04:	10000926 	beq	r2,zero,80aa2c <_init_signal_r.part.0+0x44>
  80aa08:	10c02004 	addi	r3,r2,128
  80aa0c:	10000015 	stw	zero,0(r2)
  80aa10:	10800104 	addi	r2,r2,4
  80aa14:	10fffd1e 	bne	r2,r3,80aa0c <_init_signal_r.part.0+0x24>
  80aa18:	0005883a 	mov	r2,zero
  80aa1c:	dfc00117 	ldw	ra,4(sp)
  80aa20:	dc000017 	ldw	r16,0(sp)
  80aa24:	dec00204 	addi	sp,sp,8
  80aa28:	f800283a 	ret
  80aa2c:	00bfffc4 	movi	r2,-1
  80aa30:	003ffa06 	br	80aa1c <_init_signal_r.part.0+0x34>

0080aa34 <_init_signal_r>:
  80aa34:	2080b717 	ldw	r2,732(r4)
  80aa38:	10000226 	beq	r2,zero,80aa44 <_init_signal_r+0x10>
  80aa3c:	0005883a 	mov	r2,zero
  80aa40:	f800283a 	ret
  80aa44:	080a9e81 	jmpi	80a9e8 <_init_signal_r.part.0>

0080aa48 <_signal_r>:
  80aa48:	defffc04 	addi	sp,sp,-16
  80aa4c:	dc000215 	stw	r16,8(sp)
  80aa50:	dfc00315 	stw	ra,12(sp)
  80aa54:	28800830 	cmpltui	r2,r5,32
  80aa58:	2021883a 	mov	r16,r4
  80aa5c:	10000a26 	beq	r2,zero,80aa88 <_signal_r+0x40>
  80aa60:	2080b717 	ldw	r2,732(r4)
  80aa64:	10000f26 	beq	r2,zero,80aaa4 <_signal_r+0x5c>
  80aa68:	280a90ba 	slli	r5,r5,2
  80aa6c:	114b883a 	add	r5,r2,r5
  80aa70:	28800017 	ldw	r2,0(r5)
  80aa74:	29800015 	stw	r6,0(r5)
  80aa78:	dfc00317 	ldw	ra,12(sp)
  80aa7c:	dc000217 	ldw	r16,8(sp)
  80aa80:	dec00404 	addi	sp,sp,16
  80aa84:	f800283a 	ret
  80aa88:	00800584 	movi	r2,22
  80aa8c:	20800015 	stw	r2,0(r4)
  80aa90:	00bfffc4 	movi	r2,-1
  80aa94:	dfc00317 	ldw	ra,12(sp)
  80aa98:	dc000217 	ldw	r16,8(sp)
  80aa9c:	dec00404 	addi	sp,sp,16
  80aaa0:	f800283a 	ret
  80aaa4:	d9800115 	stw	r6,4(sp)
  80aaa8:	d9400015 	stw	r5,0(sp)
  80aaac:	080a9e80 	call	80a9e8 <_init_signal_r.part.0>
  80aab0:	1000041e 	bne	r2,zero,80aac4 <_signal_r+0x7c>
  80aab4:	8080b717 	ldw	r2,732(r16)
  80aab8:	d9800117 	ldw	r6,4(sp)
  80aabc:	d9400017 	ldw	r5,0(sp)
  80aac0:	003fe906 	br	80aa68 <_signal_r+0x20>
  80aac4:	00bfffc4 	movi	r2,-1
  80aac8:	003feb06 	br	80aa78 <_signal_r+0x30>

0080aacc <_raise_r>:
  80aacc:	28800830 	cmpltui	r2,r5,32
  80aad0:	10002b26 	beq	r2,zero,80ab80 <_raise_r+0xb4>
  80aad4:	2080b717 	ldw	r2,732(r4)
  80aad8:	defffd04 	addi	sp,sp,-12
  80aadc:	dc000115 	stw	r16,4(sp)
  80aae0:	dfc00215 	stw	ra,8(sp)
  80aae4:	2821883a 	mov	r16,r5
  80aae8:	10001026 	beq	r2,zero,80ab2c <_raise_r+0x60>
  80aaec:	280690ba 	slli	r3,r5,2
  80aaf0:	10c5883a 	add	r2,r2,r3
  80aaf4:	10c00017 	ldw	r3,0(r2)
  80aaf8:	18000c26 	beq	r3,zero,80ab2c <_raise_r+0x60>
  80aafc:	19400060 	cmpeqi	r5,r3,1
  80ab00:	28001a1e 	bne	r5,zero,80ab6c <_raise_r+0xa0>
  80ab04:	197fffd8 	cmpnei	r5,r3,-1
  80ab08:	28001126 	beq	r5,zero,80ab50 <_raise_r+0x84>
  80ab0c:	10000015 	stw	zero,0(r2)
  80ab10:	8009883a 	mov	r4,r16
  80ab14:	183ee83a 	callr	r3
  80ab18:	0005883a 	mov	r2,zero
  80ab1c:	dfc00217 	ldw	ra,8(sp)
  80ab20:	dc000117 	ldw	r16,4(sp)
  80ab24:	dec00304 	addi	sp,sp,12
  80ab28:	f800283a 	ret
  80ab2c:	d9000015 	stw	r4,0(sp)
  80ab30:	080acfc0 	call	80acfc <_getpid_r>
  80ab34:	d9000017 	ldw	r4,0(sp)
  80ab38:	800d883a 	mov	r6,r16
  80ab3c:	100b883a 	mov	r5,r2
  80ab40:	dfc00217 	ldw	ra,8(sp)
  80ab44:	dc000117 	ldw	r16,4(sp)
  80ab48:	dec00304 	addi	sp,sp,12
  80ab4c:	080ac9c1 	jmpi	80ac9c <_kill_r>
  80ab50:	00800584 	movi	r2,22
  80ab54:	20800015 	stw	r2,0(r4)
  80ab58:	00800044 	movi	r2,1
  80ab5c:	dfc00217 	ldw	ra,8(sp)
  80ab60:	dc000117 	ldw	r16,4(sp)
  80ab64:	dec00304 	addi	sp,sp,12
  80ab68:	f800283a 	ret
  80ab6c:	0005883a 	mov	r2,zero
  80ab70:	dfc00217 	ldw	ra,8(sp)
  80ab74:	dc000117 	ldw	r16,4(sp)
  80ab78:	dec00304 	addi	sp,sp,12
  80ab7c:	f800283a 	ret
  80ab80:	00800584 	movi	r2,22
  80ab84:	20800015 	stw	r2,0(r4)
  80ab88:	00bfffc4 	movi	r2,-1
  80ab8c:	f800283a 	ret

0080ab90 <__sigtramp_r>:
  80ab90:	28800830 	cmpltui	r2,r5,32
  80ab94:	10002a26 	beq	r2,zero,80ac40 <__sigtramp_r+0xb0>
  80ab98:	2080b717 	ldw	r2,732(r4)
  80ab9c:	defffd04 	addi	sp,sp,-12
  80aba0:	dc400115 	stw	r17,4(sp)
  80aba4:	dfc00215 	stw	ra,8(sp)
  80aba8:	2023883a 	mov	r17,r4
  80abac:	10001526 	beq	r2,zero,80ac04 <__sigtramp_r+0x74>
  80abb0:	280690ba 	slli	r3,r5,2
  80abb4:	10c5883a 	add	r2,r2,r3
  80abb8:	10c00017 	ldw	r3,0(r2)
  80abbc:	18000c26 	beq	r3,zero,80abf0 <__sigtramp_r+0x60>
  80abc0:	193fffe0 	cmpeqi	r4,r3,-1
  80abc4:	20001a1e 	bne	r4,zero,80ac30 <__sigtramp_r+0xa0>
  80abc8:	19000060 	cmpeqi	r4,r3,1
  80abcc:	2000131e 	bne	r4,zero,80ac1c <__sigtramp_r+0x8c>
  80abd0:	10000015 	stw	zero,0(r2)
  80abd4:	2809883a 	mov	r4,r5
  80abd8:	183ee83a 	callr	r3
  80abdc:	0005883a 	mov	r2,zero
  80abe0:	dfc00217 	ldw	ra,8(sp)
  80abe4:	dc400117 	ldw	r17,4(sp)
  80abe8:	dec00304 	addi	sp,sp,12
  80abec:	f800283a 	ret
  80abf0:	00800044 	movi	r2,1
  80abf4:	dfc00217 	ldw	ra,8(sp)
  80abf8:	dc400117 	ldw	r17,4(sp)
  80abfc:	dec00304 	addi	sp,sp,12
  80ac00:	f800283a 	ret
  80ac04:	d9400015 	stw	r5,0(sp)
  80ac08:	080a9e80 	call	80a9e8 <_init_signal_r.part.0>
  80ac0c:	10000a1e 	bne	r2,zero,80ac38 <__sigtramp_r+0xa8>
  80ac10:	8880b717 	ldw	r2,732(r17)
  80ac14:	d9400017 	ldw	r5,0(sp)
  80ac18:	003fe506 	br	80abb0 <__sigtramp_r+0x20>
  80ac1c:	008000c4 	movi	r2,3
  80ac20:	dfc00217 	ldw	ra,8(sp)
  80ac24:	dc400117 	ldw	r17,4(sp)
  80ac28:	dec00304 	addi	sp,sp,12
  80ac2c:	f800283a 	ret
  80ac30:	00800084 	movi	r2,2
  80ac34:	003fea06 	br	80abe0 <__sigtramp_r+0x50>
  80ac38:	00bfffc4 	movi	r2,-1
  80ac3c:	003fe806 	br	80abe0 <__sigtramp_r+0x50>
  80ac40:	00bfffc4 	movi	r2,-1
  80ac44:	f800283a 	ret

0080ac48 <raise>:
  80ac48:	00802074 	movhi	r2,129
  80ac4c:	200b883a 	mov	r5,r4
  80ac50:	110bb817 	ldw	r4,12000(r2)
  80ac54:	080aacc1 	jmpi	80aacc <_raise_r>

0080ac58 <signal>:
  80ac58:	00c02074 	movhi	r3,129
  80ac5c:	2005883a 	mov	r2,r4
  80ac60:	190bb817 	ldw	r4,12000(r3)
  80ac64:	280d883a 	mov	r6,r5
  80ac68:	100b883a 	mov	r5,r2
  80ac6c:	080aa481 	jmpi	80aa48 <_signal_r>

0080ac70 <_init_signal>:
  80ac70:	00802074 	movhi	r2,129
  80ac74:	110bb817 	ldw	r4,12000(r2)
  80ac78:	2080b717 	ldw	r2,732(r4)
  80ac7c:	10000226 	beq	r2,zero,80ac88 <_init_signal+0x18>
  80ac80:	0005883a 	mov	r2,zero
  80ac84:	f800283a 	ret
  80ac88:	080a9e81 	jmpi	80a9e8 <_init_signal_r.part.0>

0080ac8c <__sigtramp>:
  80ac8c:	00802074 	movhi	r2,129
  80ac90:	200b883a 	mov	r5,r4
  80ac94:	110bb817 	ldw	r4,12000(r2)
  80ac98:	080ab901 	jmpi	80ab90 <__sigtramp_r>

0080ac9c <_kill_r>:
  80ac9c:	2807883a 	mov	r3,r5
  80aca0:	defffe04 	addi	sp,sp,-8
  80aca4:	dc000015 	stw	r16,0(sp)
  80aca8:	00802074 	movhi	r2,129
  80acac:	300b883a 	mov	r5,r6
  80acb0:	2021883a 	mov	r16,r4
  80acb4:	1809883a 	mov	r4,r3
  80acb8:	dfc00115 	stw	ra,4(sp)
  80acbc:	1012c315 	stw	zero,19212(r2)
  80acc0:	080e6580 	call	80e658 <kill>
  80acc4:	10ffffd8 	cmpnei	r3,r2,-1
  80acc8:	18000426 	beq	r3,zero,80acdc <_kill_r+0x40>
  80accc:	dfc00117 	ldw	ra,4(sp)
  80acd0:	dc000017 	ldw	r16,0(sp)
  80acd4:	dec00204 	addi	sp,sp,8
  80acd8:	f800283a 	ret
  80acdc:	00c02074 	movhi	r3,129
  80ace0:	18d2c317 	ldw	r3,19212(r3)
  80ace4:	183ff926 	beq	r3,zero,80accc <_kill_r+0x30>
  80ace8:	80c00015 	stw	r3,0(r16)
  80acec:	dfc00117 	ldw	ra,4(sp)
  80acf0:	dc000017 	ldw	r16,0(sp)
  80acf4:	dec00204 	addi	sp,sp,8
  80acf8:	f800283a 	ret

0080acfc <_getpid_r>:
  80acfc:	080e5101 	jmpi	80e510 <getpid>

0080ad00 <__udivdi3>:
  80ad00:	defff504 	addi	sp,sp,-44
  80ad04:	dd000515 	stw	r20,20(sp)
  80ad08:	dc800315 	stw	r18,12(sp)
  80ad0c:	dfc00a15 	stw	ra,40(sp)
  80ad10:	df000915 	stw	fp,36(sp)
  80ad14:	ddc00815 	stw	r23,32(sp)
  80ad18:	dd800715 	stw	r22,28(sp)
  80ad1c:	dd400615 	stw	r21,24(sp)
  80ad20:	dcc00415 	stw	r19,16(sp)
  80ad24:	dc400215 	stw	r17,8(sp)
  80ad28:	dc000115 	stw	r16,4(sp)
  80ad2c:	2029883a 	mov	r20,r4
  80ad30:	2825883a 	mov	r18,r5
  80ad34:	3800461e 	bne	r7,zero,80ae50 <__udivdi3+0x150>
  80ad38:	3823883a 	mov	r17,r7
  80ad3c:	3021883a 	mov	r16,r6
  80ad40:	2027883a 	mov	r19,r4
  80ad44:	2980622e 	bgeu	r5,r6,80aed0 <__udivdi3+0x1d0>
  80ad48:	00bfffd4 	movui	r2,65535
  80ad4c:	282b883a 	mov	r21,r5
  80ad50:	1180aa2e 	bgeu	r2,r6,80affc <__udivdi3+0x2fc>
  80ad54:	00804034 	movhi	r2,256
  80ad58:	30815936 	bltu	r6,r2,80b2c0 <__udivdi3+0x5c0>
  80ad5c:	3006d63a 	srli	r3,r6,24
  80ad60:	04400604 	movi	r17,24
  80ad64:	00802074 	movhi	r2,129
  80ad68:	1885883a 	add	r2,r3,r2
  80ad6c:	11033703 	ldbu	r4,3292(r2)
  80ad70:	00800804 	movi	r2,32
  80ad74:	2463883a 	add	r17,r4,r17
  80ad78:	1449c83a 	sub	r4,r2,r17
  80ad7c:	14400526 	beq	r2,r17,80ad94 <__udivdi3+0x94>
  80ad80:	9106983a 	sll	r3,r18,r4
  80ad84:	a462d83a 	srl	r17,r20,r17
  80ad88:	3120983a 	sll	r16,r6,r4
  80ad8c:	a126983a 	sll	r19,r20,r4
  80ad90:	88eab03a 	or	r21,r17,r3
  80ad94:	802cd43a 	srli	r22,r16,16
  80ad98:	a809883a 	mov	r4,r21
  80ad9c:	853fffcc 	andi	r20,r16,65535
  80ada0:	b00b883a 	mov	r5,r22
  80ada4:	080ba380 	call	80ba38 <__umodsi3>
  80ada8:	a809883a 	mov	r4,r21
  80adac:	b00b883a 	mov	r5,r22
  80adb0:	1025883a 	mov	r18,r2
  80adb4:	080b9d40 	call	80b9d4 <__udivsi3>
  80adb8:	a009883a 	mov	r4,r20
  80adbc:	100b883a 	mov	r5,r2
  80adc0:	102b883a 	mov	r21,r2
  80adc4:	080150c0 	call	80150c <__mulsi3>
  80adc8:	9024943a 	slli	r18,r18,16
  80adcc:	9808d43a 	srli	r4,r19,16
  80add0:	9108b03a 	or	r4,r18,r4
  80add4:	2080052e 	bgeu	r4,r2,80adec <__udivdi3+0xec>
  80add8:	2409883a 	add	r4,r4,r16
  80addc:	a8ffffc4 	addi	r3,r21,-1
  80ade0:	24000136 	bltu	r4,r16,80ade8 <__udivdi3+0xe8>
  80ade4:	20814736 	bltu	r4,r2,80b304 <__udivdi3+0x604>
  80ade8:	182b883a 	mov	r21,r3
  80adec:	20a3c83a 	sub	r17,r4,r2
  80adf0:	8809883a 	mov	r4,r17
  80adf4:	b00b883a 	mov	r5,r22
  80adf8:	080ba380 	call	80ba38 <__umodsi3>
  80adfc:	8809883a 	mov	r4,r17
  80ae00:	1023883a 	mov	r17,r2
  80ae04:	b00b883a 	mov	r5,r22
  80ae08:	8822943a 	slli	r17,r17,16
  80ae0c:	080b9d40 	call	80b9d4 <__udivsi3>
  80ae10:	100b883a 	mov	r5,r2
  80ae14:	a009883a 	mov	r4,r20
  80ae18:	9cffffcc 	andi	r19,r19,65535
  80ae1c:	1025883a 	mov	r18,r2
  80ae20:	8ce6b03a 	or	r19,r17,r19
  80ae24:	080150c0 	call	80150c <__mulsi3>
  80ae28:	9880052e 	bgeu	r19,r2,80ae40 <__udivdi3+0x140>
  80ae2c:	84e7883a 	add	r19,r16,r19
  80ae30:	90ffffc4 	addi	r3,r18,-1
  80ae34:	9c000136 	bltu	r19,r16,80ae3c <__udivdi3+0x13c>
  80ae38:	98813036 	bltu	r19,r2,80b2fc <__udivdi3+0x5fc>
  80ae3c:	1825883a 	mov	r18,r3
  80ae40:	a80c943a 	slli	r6,r21,16
  80ae44:	0007883a 	mov	r3,zero
  80ae48:	3484b03a 	or	r2,r6,r18
  80ae4c:	00000306 	br	80ae5c <__udivdi3+0x15c>
  80ae50:	29c00e2e 	bgeu	r5,r7,80ae8c <__udivdi3+0x18c>
  80ae54:	0007883a 	mov	r3,zero
  80ae58:	0005883a 	mov	r2,zero
  80ae5c:	dfc00a17 	ldw	ra,40(sp)
  80ae60:	df000917 	ldw	fp,36(sp)
  80ae64:	ddc00817 	ldw	r23,32(sp)
  80ae68:	dd800717 	ldw	r22,28(sp)
  80ae6c:	dd400617 	ldw	r21,24(sp)
  80ae70:	dd000517 	ldw	r20,20(sp)
  80ae74:	dcc00417 	ldw	r19,16(sp)
  80ae78:	dc800317 	ldw	r18,12(sp)
  80ae7c:	dc400217 	ldw	r17,8(sp)
  80ae80:	dc000117 	ldw	r16,4(sp)
  80ae84:	dec00b04 	addi	sp,sp,44
  80ae88:	f800283a 	ret
  80ae8c:	00bfffd4 	movui	r2,65535
  80ae90:	11c05f2e 	bgeu	r2,r7,80b010 <__udivdi3+0x310>
  80ae94:	00804034 	movhi	r2,256
  80ae98:	3880fb36 	bltu	r7,r2,80b288 <__udivdi3+0x588>
  80ae9c:	3806d63a 	srli	r3,r7,24
  80aea0:	01000604 	movi	r4,24
  80aea4:	00802074 	movhi	r2,129
  80aea8:	1885883a 	add	r2,r3,r2
  80aeac:	10c33703 	ldbu	r3,3292(r2)
  80aeb0:	00800804 	movi	r2,32
  80aeb4:	1907883a 	add	r3,r3,r4
  80aeb8:	10e3c83a 	sub	r17,r2,r3
  80aebc:	10c0901e 	bne	r2,r3,80b100 <__udivdi3+0x400>
  80aec0:	3c80f636 	bltu	r7,r18,80b29c <__udivdi3+0x59c>
  80aec4:	a185403a 	cmpgeu	r2,r20,r6
  80aec8:	0007883a 	mov	r3,zero
  80aecc:	003fe306 	br	80ae5c <__udivdi3+0x15c>
  80aed0:	3000041e 	bne	r6,zero,80aee4 <__udivdi3+0x1e4>
  80aed4:	000b883a 	mov	r5,zero
  80aed8:	01000044 	movi	r4,1
  80aedc:	080b9d40 	call	80b9d4 <__udivsi3>
  80aee0:	1021883a 	mov	r16,r2
  80aee4:	00bfffd4 	movui	r2,65535
  80aee8:	14003f2e 	bgeu	r2,r16,80afe8 <__udivdi3+0x2e8>
  80aeec:	00804034 	movhi	r2,256
  80aef0:	8080f036 	bltu	r16,r2,80b2b4 <__udivdi3+0x5b4>
  80aef4:	8006d63a 	srli	r3,r16,24
  80aef8:	04400604 	movi	r17,24
  80aefc:	00802074 	movhi	r2,129
  80af00:	1885883a 	add	r2,r3,r2
  80af04:	10833703 	ldbu	r2,3292(r2)
  80af08:	00c00804 	movi	r3,32
  80af0c:	1463883a 	add	r17,r2,r17
  80af10:	1c45c83a 	sub	r2,r3,r17
  80af14:	1c40431e 	bne	r3,r17,80b024 <__udivdi3+0x324>
  80af18:	802cd43a 	srli	r22,r16,16
  80af1c:	9423c83a 	sub	r17,r18,r16
  80af20:	853fffcc 	andi	r20,r16,65535
  80af24:	00c00044 	movi	r3,1
  80af28:	b00b883a 	mov	r5,r22
  80af2c:	8809883a 	mov	r4,r17
  80af30:	d8c00015 	stw	r3,0(sp)
  80af34:	080ba380 	call	80ba38 <__umodsi3>
  80af38:	b00b883a 	mov	r5,r22
  80af3c:	8809883a 	mov	r4,r17
  80af40:	1025883a 	mov	r18,r2
  80af44:	080b9d40 	call	80b9d4 <__udivsi3>
  80af48:	1009883a 	mov	r4,r2
  80af4c:	a00b883a 	mov	r5,r20
  80af50:	102b883a 	mov	r21,r2
  80af54:	080150c0 	call	80150c <__mulsi3>
  80af58:	9024943a 	slli	r18,r18,16
  80af5c:	9808d43a 	srli	r4,r19,16
  80af60:	d8c00017 	ldw	r3,0(sp)
  80af64:	9108b03a 	or	r4,r18,r4
  80af68:	2080052e 	bgeu	r4,r2,80af80 <__udivdi3+0x280>
  80af6c:	2409883a 	add	r4,r4,r16
  80af70:	a97fffc4 	addi	r5,r21,-1
  80af74:	24000136 	bltu	r4,r16,80af7c <__udivdi3+0x27c>
  80af78:	2080e536 	bltu	r4,r2,80b310 <__udivdi3+0x610>
  80af7c:	282b883a 	mov	r21,r5
  80af80:	20a3c83a 	sub	r17,r4,r2
  80af84:	8809883a 	mov	r4,r17
  80af88:	b00b883a 	mov	r5,r22
  80af8c:	d8c00015 	stw	r3,0(sp)
  80af90:	080ba380 	call	80ba38 <__umodsi3>
  80af94:	8809883a 	mov	r4,r17
  80af98:	1023883a 	mov	r17,r2
  80af9c:	b00b883a 	mov	r5,r22
  80afa0:	8822943a 	slli	r17,r17,16
  80afa4:	080b9d40 	call	80b9d4 <__udivsi3>
  80afa8:	a00b883a 	mov	r5,r20
  80afac:	1009883a 	mov	r4,r2
  80afb0:	9cffffcc 	andi	r19,r19,65535
  80afb4:	1025883a 	mov	r18,r2
  80afb8:	8ce6b03a 	or	r19,r17,r19
  80afbc:	080150c0 	call	80150c <__mulsi3>
  80afc0:	d8c00017 	ldw	r3,0(sp)
  80afc4:	9880052e 	bgeu	r19,r2,80afdc <__udivdi3+0x2dc>
  80afc8:	84e7883a 	add	r19,r16,r19
  80afcc:	913fffc4 	addi	r4,r18,-1
  80afd0:	9c000136 	bltu	r19,r16,80afd8 <__udivdi3+0x2d8>
  80afd4:	9880c736 	bltu	r19,r2,80b2f4 <__udivdi3+0x5f4>
  80afd8:	2025883a 	mov	r18,r4
  80afdc:	a80c943a 	slli	r6,r21,16
  80afe0:	3484b03a 	or	r2,r6,r18
  80afe4:	003f9d06 	br	80ae5c <__udivdi3+0x15c>
  80afe8:	80804030 	cmpltui	r2,r16,256
  80afec:	1000b71e 	bne	r2,zero,80b2cc <__udivdi3+0x5cc>
  80aff0:	8006d23a 	srli	r3,r16,8
  80aff4:	04400204 	movi	r17,8
  80aff8:	003fc006 	br	80aefc <__udivdi3+0x1fc>
  80affc:	30804030 	cmpltui	r2,r6,256
  80b000:	1000a41e 	bne	r2,zero,80b294 <__udivdi3+0x594>
  80b004:	3006d23a 	srli	r3,r6,8
  80b008:	04400204 	movi	r17,8
  80b00c:	003f5506 	br	80ad64 <__udivdi3+0x64>
  80b010:	38804030 	cmpltui	r2,r7,256
  80b014:	1000a41e 	bne	r2,zero,80b2a8 <__udivdi3+0x5a8>
  80b018:	3806d23a 	srli	r3,r7,8
  80b01c:	01000204 	movi	r4,8
  80b020:	003fa006 	br	80aea4 <__udivdi3+0x1a4>
  80b024:	80a0983a 	sll	r16,r16,r2
  80b028:	946ed83a 	srl	r23,r18,r17
  80b02c:	9086983a 	sll	r3,r18,r2
  80b030:	802cd43a 	srli	r22,r16,16
  80b034:	a462d83a 	srl	r17,r20,r17
  80b038:	b809883a 	mov	r4,r23
  80b03c:	b00b883a 	mov	r5,r22
  80b040:	88eab03a 	or	r21,r17,r3
  80b044:	a0a6983a 	sll	r19,r20,r2
  80b048:	080ba380 	call	80ba38 <__umodsi3>
  80b04c:	b809883a 	mov	r4,r23
  80b050:	b00b883a 	mov	r5,r22
  80b054:	1025883a 	mov	r18,r2
  80b058:	853fffcc 	andi	r20,r16,65535
  80b05c:	080b9d40 	call	80b9d4 <__udivsi3>
  80b060:	a009883a 	mov	r4,r20
  80b064:	100b883a 	mov	r5,r2
  80b068:	102f883a 	mov	r23,r2
  80b06c:	080150c0 	call	80150c <__mulsi3>
  80b070:	9024943a 	slli	r18,r18,16
  80b074:	a808d43a 	srli	r4,r21,16
  80b078:	9108b03a 	or	r4,r18,r4
  80b07c:	2080062e 	bgeu	r4,r2,80b098 <__udivdi3+0x398>
  80b080:	2409883a 	add	r4,r4,r16
  80b084:	b8ffffc4 	addi	r3,r23,-1
  80b088:	24009836 	bltu	r4,r16,80b2ec <__udivdi3+0x5ec>
  80b08c:	2080972e 	bgeu	r4,r2,80b2ec <__udivdi3+0x5ec>
  80b090:	bdffff84 	addi	r23,r23,-2
  80b094:	2409883a 	add	r4,r4,r16
  80b098:	20a3c83a 	sub	r17,r4,r2
  80b09c:	8809883a 	mov	r4,r17
  80b0a0:	b00b883a 	mov	r5,r22
  80b0a4:	080ba380 	call	80ba38 <__umodsi3>
  80b0a8:	1025883a 	mov	r18,r2
  80b0ac:	8809883a 	mov	r4,r17
  80b0b0:	b00b883a 	mov	r5,r22
  80b0b4:	9024943a 	slli	r18,r18,16
  80b0b8:	080b9d40 	call	80b9d4 <__udivsi3>
  80b0bc:	100b883a 	mov	r5,r2
  80b0c0:	a009883a 	mov	r4,r20
  80b0c4:	ac7fffcc 	andi	r17,r21,65535
  80b0c8:	1039883a 	mov	fp,r2
  80b0cc:	9462b03a 	or	r17,r18,r17
  80b0d0:	080150c0 	call	80150c <__mulsi3>
  80b0d4:	8880062e 	bgeu	r17,r2,80b0f0 <__udivdi3+0x3f0>
  80b0d8:	8c23883a 	add	r17,r17,r16
  80b0dc:	e0ffffc4 	addi	r3,fp,-1
  80b0e0:	8c007e36 	bltu	r17,r16,80b2dc <__udivdi3+0x5dc>
  80b0e4:	88807d2e 	bgeu	r17,r2,80b2dc <__udivdi3+0x5dc>
  80b0e8:	e73fff84 	addi	fp,fp,-2
  80b0ec:	8c23883a 	add	r17,r17,r16
  80b0f0:	b806943a 	slli	r3,r23,16
  80b0f4:	88a3c83a 	sub	r17,r17,r2
  80b0f8:	1f06b03a 	or	r3,r3,fp
  80b0fc:	003f8a06 	br	80af28 <__udivdi3+0x228>
  80b100:	30e6d83a 	srl	r19,r6,r3
  80b104:	3c4e983a 	sll	r7,r7,r17
  80b108:	90e0d83a 	srl	r16,r18,r3
  80b10c:	a0c4d83a 	srl	r2,r20,r3
  80b110:	99e6b03a 	or	r19,r19,r7
  80b114:	9446983a 	sll	r3,r18,r17
  80b118:	9838d43a 	srli	fp,r19,16
  80b11c:	8009883a 	mov	r4,r16
  80b120:	10eab03a 	or	r21,r2,r3
  80b124:	e00b883a 	mov	r5,fp
  80b128:	346c983a 	sll	r22,r6,r17
  80b12c:	dd400015 	stw	r21,0(sp)
  80b130:	080ba380 	call	80ba38 <__umodsi3>
  80b134:	8009883a 	mov	r4,r16
  80b138:	e00b883a 	mov	r5,fp
  80b13c:	102f883a 	mov	r23,r2
  80b140:	9cbfffcc 	andi	r18,r19,65535
  80b144:	080b9d40 	call	80b9d4 <__udivsi3>
  80b148:	9009883a 	mov	r4,r18
  80b14c:	100b883a 	mov	r5,r2
  80b150:	1021883a 	mov	r16,r2
  80b154:	080150c0 	call	80150c <__mulsi3>
  80b158:	b82e943a 	slli	r23,r23,16
  80b15c:	a808d43a 	srli	r4,r21,16
  80b160:	b908b03a 	or	r4,r23,r4
  80b164:	2080062e 	bgeu	r4,r2,80b180 <__udivdi3+0x480>
  80b168:	24c9883a 	add	r4,r4,r19
  80b16c:	817fffc4 	addi	r5,r16,-1
  80b170:	24c05c36 	bltu	r4,r19,80b2e4 <__udivdi3+0x5e4>
  80b174:	20805b2e 	bgeu	r4,r2,80b2e4 <__udivdi3+0x5e4>
  80b178:	843fff84 	addi	r16,r16,-2
  80b17c:	24c9883a 	add	r4,r4,r19
  80b180:	20abc83a 	sub	r21,r4,r2
  80b184:	a809883a 	mov	r4,r21
  80b188:	e00b883a 	mov	r5,fp
  80b18c:	080ba380 	call	80ba38 <__umodsi3>
  80b190:	a809883a 	mov	r4,r21
  80b194:	e00b883a 	mov	r5,fp
  80b198:	102b883a 	mov	r21,r2
  80b19c:	080b9d40 	call	80b9d4 <__udivsi3>
  80b1a0:	9009883a 	mov	r4,r18
  80b1a4:	100b883a 	mov	r5,r2
  80b1a8:	102f883a 	mov	r23,r2
  80b1ac:	080150c0 	call	80150c <__mulsi3>
  80b1b0:	d8c00017 	ldw	r3,0(sp)
  80b1b4:	a82a943a 	slli	r21,r21,16
  80b1b8:	1cbfffcc 	andi	r18,r3,65535
  80b1bc:	aca4b03a 	or	r18,r21,r18
  80b1c0:	9080062e 	bgeu	r18,r2,80b1dc <__udivdi3+0x4dc>
  80b1c4:	94e5883a 	add	r18,r18,r19
  80b1c8:	b8ffffc4 	addi	r3,r23,-1
  80b1cc:	94c04136 	bltu	r18,r19,80b2d4 <__udivdi3+0x5d4>
  80b1d0:	9080402e 	bgeu	r18,r2,80b2d4 <__udivdi3+0x5d4>
  80b1d4:	bdffff84 	addi	r23,r23,-2
  80b1d8:	94e5883a 	add	r18,r18,r19
  80b1dc:	8020943a 	slli	r16,r16,16
  80b1e0:	bd7fffcc 	andi	r21,r23,65535
  80b1e4:	b73fffcc 	andi	fp,r22,65535
  80b1e8:	85e0b03a 	or	r16,r16,r23
  80b1ec:	8026d43a 	srli	r19,r16,16
  80b1f0:	a809883a 	mov	r4,r21
  80b1f4:	e00b883a 	mov	r5,fp
  80b1f8:	b02cd43a 	srli	r22,r22,16
  80b1fc:	90a5c83a 	sub	r18,r18,r2
  80b200:	080150c0 	call	80150c <__mulsi3>
  80b204:	9809883a 	mov	r4,r19
  80b208:	e00b883a 	mov	r5,fp
  80b20c:	102f883a 	mov	r23,r2
  80b210:	080150c0 	call	80150c <__mulsi3>
  80b214:	9809883a 	mov	r4,r19
  80b218:	b00b883a 	mov	r5,r22
  80b21c:	1027883a 	mov	r19,r2
  80b220:	080150c0 	call	80150c <__mulsi3>
  80b224:	a809883a 	mov	r4,r21
  80b228:	b00b883a 	mov	r5,r22
  80b22c:	102b883a 	mov	r21,r2
  80b230:	080150c0 	call	80150c <__mulsi3>
  80b234:	b806d43a 	srli	r3,r23,16
  80b238:	14c5883a 	add	r2,r2,r19
  80b23c:	1887883a 	add	r3,r3,r2
  80b240:	1cc0022e 	bgeu	r3,r19,80b24c <__udivdi3+0x54c>
  80b244:	00800074 	movhi	r2,1
  80b248:	a8ab883a 	add	r21,r21,r2
  80b24c:	1804d43a 	srli	r2,r3,16
  80b250:	156b883a 	add	r21,r2,r21
  80b254:	95400936 	bltu	r18,r21,80b27c <__udivdi3+0x57c>
  80b258:	95400326 	beq	r18,r21,80b268 <__udivdi3+0x568>
  80b25c:	8005883a 	mov	r2,r16
  80b260:	0007883a 	mov	r3,zero
  80b264:	003efd06 	br	80ae5c <__udivdi3+0x15c>
  80b268:	1806943a 	slli	r3,r3,16
  80b26c:	a44c983a 	sll	r6,r20,r17
  80b270:	bdffffcc 	andi	r23,r23,65535
  80b274:	1dc7883a 	add	r3,r3,r23
  80b278:	30fff82e 	bgeu	r6,r3,80b25c <__udivdi3+0x55c>
  80b27c:	80bfffc4 	addi	r2,r16,-1
  80b280:	0007883a 	mov	r3,zero
  80b284:	003ef506 	br	80ae5c <__udivdi3+0x15c>
  80b288:	3806d43a 	srli	r3,r7,16
  80b28c:	01000404 	movi	r4,16
  80b290:	003f0406 	br	80aea4 <__udivdi3+0x1a4>
  80b294:	3007883a 	mov	r3,r6
  80b298:	003eb206 	br	80ad64 <__udivdi3+0x64>
  80b29c:	0007883a 	mov	r3,zero
  80b2a0:	00800044 	movi	r2,1
  80b2a4:	003eed06 	br	80ae5c <__udivdi3+0x15c>
  80b2a8:	3807883a 	mov	r3,r7
  80b2ac:	0009883a 	mov	r4,zero
  80b2b0:	003efc06 	br	80aea4 <__udivdi3+0x1a4>
  80b2b4:	8006d43a 	srli	r3,r16,16
  80b2b8:	04400404 	movi	r17,16
  80b2bc:	003f0f06 	br	80aefc <__udivdi3+0x1fc>
  80b2c0:	3006d43a 	srli	r3,r6,16
  80b2c4:	04400404 	movi	r17,16
  80b2c8:	003ea606 	br	80ad64 <__udivdi3+0x64>
  80b2cc:	8007883a 	mov	r3,r16
  80b2d0:	003f0a06 	br	80aefc <__udivdi3+0x1fc>
  80b2d4:	182f883a 	mov	r23,r3
  80b2d8:	003fc006 	br	80b1dc <__udivdi3+0x4dc>
  80b2dc:	1839883a 	mov	fp,r3
  80b2e0:	003f8306 	br	80b0f0 <__udivdi3+0x3f0>
  80b2e4:	2821883a 	mov	r16,r5
  80b2e8:	003fa506 	br	80b180 <__udivdi3+0x480>
  80b2ec:	182f883a 	mov	r23,r3
  80b2f0:	003f6906 	br	80b098 <__udivdi3+0x398>
  80b2f4:	94bfff84 	addi	r18,r18,-2
  80b2f8:	003f3806 	br	80afdc <__udivdi3+0x2dc>
  80b2fc:	94bfff84 	addi	r18,r18,-2
  80b300:	003ecf06 	br	80ae40 <__udivdi3+0x140>
  80b304:	ad7fff84 	addi	r21,r21,-2
  80b308:	2409883a 	add	r4,r4,r16
  80b30c:	003eb706 	br	80adec <__udivdi3+0xec>
  80b310:	ad7fff84 	addi	r21,r21,-2
  80b314:	2409883a 	add	r4,r4,r16
  80b318:	003f1906 	br	80af80 <__udivdi3+0x280>

0080b31c <__umoddi3>:
  80b31c:	defff304 	addi	sp,sp,-52
  80b320:	dc400415 	stw	r17,16(sp)
  80b324:	dc000315 	stw	r16,12(sp)
  80b328:	dfc00c15 	stw	ra,48(sp)
  80b32c:	df000b15 	stw	fp,44(sp)
  80b330:	ddc00a15 	stw	r23,40(sp)
  80b334:	dd800915 	stw	r22,36(sp)
  80b338:	dd400815 	stw	r21,32(sp)
  80b33c:	dd000715 	stw	r20,28(sp)
  80b340:	dcc00615 	stw	r19,24(sp)
  80b344:	dc800515 	stw	r18,20(sp)
  80b348:	2823883a 	mov	r17,r5
  80b34c:	2021883a 	mov	r16,r4
  80b350:	38003b1e 	bne	r7,zero,80b440 <__umoddi3+0x124>
  80b354:	3825883a 	mov	r18,r7
  80b358:	3029883a 	mov	r20,r6
  80b35c:	2027883a 	mov	r19,r4
  80b360:	29805b2e 	bgeu	r5,r6,80b4d0 <__umoddi3+0x1b4>
  80b364:	00bfffd4 	movui	r2,65535
  80b368:	282d883a 	mov	r22,r5
  80b36c:	11809a2e 	bgeu	r2,r6,80b5d8 <__umoddi3+0x2bc>
  80b370:	00804034 	movhi	r2,256
  80b374:	30814436 	bltu	r6,r2,80b888 <__umoddi3+0x56c>
  80b378:	3006d63a 	srli	r3,r6,24
  80b37c:	04800604 	movi	r18,24
  80b380:	00802074 	movhi	r2,129
  80b384:	1885883a 	add	r2,r3,r2
  80b388:	11033703 	ldbu	r4,3292(r2)
  80b38c:	00800804 	movi	r2,32
  80b390:	2489883a 	add	r4,r4,r18
  80b394:	1125c83a 	sub	r18,r2,r4
  80b398:	11000526 	beq	r2,r4,80b3b0 <__umoddi3+0x94>
  80b39c:	8ca2983a 	sll	r17,r17,r18
  80b3a0:	8108d83a 	srl	r4,r16,r4
  80b3a4:	34a8983a 	sll	r20,r6,r18
  80b3a8:	84a6983a 	sll	r19,r16,r18
  80b3ac:	246cb03a 	or	r22,r4,r17
  80b3b0:	a02ed43a 	srli	r23,r20,16
  80b3b4:	b009883a 	mov	r4,r22
  80b3b8:	a57fffcc 	andi	r21,r20,65535
  80b3bc:	b80b883a 	mov	r5,r23
  80b3c0:	080ba380 	call	80ba38 <__umodsi3>
  80b3c4:	b80b883a 	mov	r5,r23
  80b3c8:	b009883a 	mov	r4,r22
  80b3cc:	1023883a 	mov	r17,r2
  80b3d0:	080b9d40 	call	80b9d4 <__udivsi3>
  80b3d4:	a809883a 	mov	r4,r21
  80b3d8:	100b883a 	mov	r5,r2
  80b3dc:	080150c0 	call	80150c <__mulsi3>
  80b3e0:	8822943a 	slli	r17,r17,16
  80b3e4:	9808d43a 	srli	r4,r19,16
  80b3e8:	8908b03a 	or	r4,r17,r4
  80b3ec:	2080042e 	bgeu	r4,r2,80b400 <__umoddi3+0xe4>
  80b3f0:	2509883a 	add	r4,r4,r20
  80b3f4:	25000236 	bltu	r4,r20,80b400 <__umoddi3+0xe4>
  80b3f8:	2080012e 	bgeu	r4,r2,80b400 <__umoddi3+0xe4>
  80b3fc:	2509883a 	add	r4,r4,r20
  80b400:	20a1c83a 	sub	r16,r4,r2
  80b404:	b80b883a 	mov	r5,r23
  80b408:	8009883a 	mov	r4,r16
  80b40c:	080ba380 	call	80ba38 <__umodsi3>
  80b410:	b80b883a 	mov	r5,r23
  80b414:	8009883a 	mov	r4,r16
  80b418:	1023883a 	mov	r17,r2
  80b41c:	080b9d40 	call	80b9d4 <__udivsi3>
  80b420:	8822943a 	slli	r17,r17,16
  80b424:	100b883a 	mov	r5,r2
  80b428:	a809883a 	mov	r4,r21
  80b42c:	080150c0 	call	80150c <__mulsi3>
  80b430:	98ffffcc 	andi	r3,r19,65535
  80b434:	88c6b03a 	or	r3,r17,r3
  80b438:	18805e2e 	bgeu	r3,r2,80b5b4 <__umoddi3+0x298>
  80b43c:	00005906 	br	80b5a4 <__umoddi3+0x288>
  80b440:	2005883a 	mov	r2,r4
  80b444:	29c00d2e 	bgeu	r5,r7,80b47c <__umoddi3+0x160>
  80b448:	2807883a 	mov	r3,r5
  80b44c:	dfc00c17 	ldw	ra,48(sp)
  80b450:	df000b17 	ldw	fp,44(sp)
  80b454:	ddc00a17 	ldw	r23,40(sp)
  80b458:	dd800917 	ldw	r22,36(sp)
  80b45c:	dd400817 	ldw	r21,32(sp)
  80b460:	dd000717 	ldw	r20,28(sp)
  80b464:	dcc00617 	ldw	r19,24(sp)
  80b468:	dc800517 	ldw	r18,20(sp)
  80b46c:	dc400417 	ldw	r17,16(sp)
  80b470:	dc000317 	ldw	r16,12(sp)
  80b474:	dec00d04 	addi	sp,sp,52
  80b478:	f800283a 	ret
  80b47c:	013fffd4 	movui	r4,65535
  80b480:	2807883a 	mov	r3,r5
  80b484:	21c0592e 	bgeu	r4,r7,80b5ec <__umoddi3+0x2d0>
  80b488:	01004034 	movhi	r4,256
  80b48c:	39010336 	bltu	r7,r4,80b89c <__umoddi3+0x580>
  80b490:	3808d63a 	srli	r4,r7,24
  80b494:	02000604 	movi	r8,24
  80b498:	01402074 	movhi	r5,129
  80b49c:	214b883a 	add	r5,r4,r5
  80b4a0:	2d033703 	ldbu	r20,3292(r5)
  80b4a4:	01000804 	movi	r4,32
  80b4a8:	a229883a 	add	r20,r20,r8
  80b4ac:	252bc83a 	sub	r21,r4,r20
  80b4b0:	2500531e 	bne	r4,r20,80b600 <__umoddi3+0x2e4>
  80b4b4:	3c400136 	bltu	r7,r17,80b4bc <__umoddi3+0x1a0>
  80b4b8:	81bfe436 	bltu	r16,r6,80b44c <__umoddi3+0x130>
  80b4bc:	8185c83a 	sub	r2,r16,r6
  80b4c0:	89cfc83a 	sub	r7,r17,r7
  80b4c4:	8087803a 	cmpltu	r3,r16,r2
  80b4c8:	38c7c83a 	sub	r3,r7,r3
  80b4cc:	003fdf06 	br	80b44c <__umoddi3+0x130>
  80b4d0:	3000041e 	bne	r6,zero,80b4e4 <__umoddi3+0x1c8>
  80b4d4:	000b883a 	mov	r5,zero
  80b4d8:	01000044 	movi	r4,1
  80b4dc:	080b9d40 	call	80b9d4 <__udivsi3>
  80b4e0:	1029883a 	mov	r20,r2
  80b4e4:	00bfffd4 	movui	r2,65535
  80b4e8:	1500362e 	bgeu	r2,r20,80b5c4 <__umoddi3+0x2a8>
  80b4ec:	00804034 	movhi	r2,256
  80b4f0:	a080ed36 	bltu	r20,r2,80b8a8 <__umoddi3+0x58c>
  80b4f4:	a006d63a 	srli	r3,r20,24
  80b4f8:	04800604 	movi	r18,24
  80b4fc:	00802074 	movhi	r2,129
  80b500:	1885883a 	add	r2,r3,r2
  80b504:	15833703 	ldbu	r22,3292(r2)
  80b508:	00800804 	movi	r2,32
  80b50c:	b4ad883a 	add	r22,r22,r18
  80b510:	15a5c83a 	sub	r18,r2,r22
  80b514:	1580a51e 	bne	r2,r22,80b7ac <__umoddi3+0x490>
  80b518:	a02ed43a 	srli	r23,r20,16
  80b51c:	8d23c83a 	sub	r17,r17,r20
  80b520:	a57fffcc 	andi	r21,r20,65535
  80b524:	8809883a 	mov	r4,r17
  80b528:	b80b883a 	mov	r5,r23
  80b52c:	080ba380 	call	80ba38 <__umodsi3>
  80b530:	8809883a 	mov	r4,r17
  80b534:	b80b883a 	mov	r5,r23
  80b538:	1023883a 	mov	r17,r2
  80b53c:	080b9d40 	call	80b9d4 <__udivsi3>
  80b540:	1009883a 	mov	r4,r2
  80b544:	a80b883a 	mov	r5,r21
  80b548:	080150c0 	call	80150c <__mulsi3>
  80b54c:	8822943a 	slli	r17,r17,16
  80b550:	9808d43a 	srli	r4,r19,16
  80b554:	8908b03a 	or	r4,r17,r4
  80b558:	2080032e 	bgeu	r4,r2,80b568 <__umoddi3+0x24c>
  80b55c:	2509883a 	add	r4,r4,r20
  80b560:	25000136 	bltu	r4,r20,80b568 <__umoddi3+0x24c>
  80b564:	2080dc36 	bltu	r4,r2,80b8d8 <__umoddi3+0x5bc>
  80b568:	20a1c83a 	sub	r16,r4,r2
  80b56c:	b80b883a 	mov	r5,r23
  80b570:	8009883a 	mov	r4,r16
  80b574:	080ba380 	call	80ba38 <__umodsi3>
  80b578:	b80b883a 	mov	r5,r23
  80b57c:	8009883a 	mov	r4,r16
  80b580:	1023883a 	mov	r17,r2
  80b584:	8822943a 	slli	r17,r17,16
  80b588:	080b9d40 	call	80b9d4 <__udivsi3>
  80b58c:	a80b883a 	mov	r5,r21
  80b590:	1009883a 	mov	r4,r2
  80b594:	080150c0 	call	80150c <__mulsi3>
  80b598:	9cffffcc 	andi	r19,r19,65535
  80b59c:	8cc6b03a 	or	r3,r17,r19
  80b5a0:	1880042e 	bgeu	r3,r2,80b5b4 <__umoddi3+0x298>
  80b5a4:	1d07883a 	add	r3,r3,r20
  80b5a8:	1d000236 	bltu	r3,r20,80b5b4 <__umoddi3+0x298>
  80b5ac:	1880012e 	bgeu	r3,r2,80b5b4 <__umoddi3+0x298>
  80b5b0:	1d07883a 	add	r3,r3,r20
  80b5b4:	1885c83a 	sub	r2,r3,r2
  80b5b8:	1484d83a 	srl	r2,r2,r18
  80b5bc:	0007883a 	mov	r3,zero
  80b5c0:	003fa206 	br	80b44c <__umoddi3+0x130>
  80b5c4:	a0804030 	cmpltui	r2,r20,256
  80b5c8:	1000ba1e 	bne	r2,zero,80b8b4 <__umoddi3+0x598>
  80b5cc:	a006d23a 	srli	r3,r20,8
  80b5d0:	04800204 	movi	r18,8
  80b5d4:	003fc906 	br	80b4fc <__umoddi3+0x1e0>
  80b5d8:	30804030 	cmpltui	r2,r6,256
  80b5dc:	1000ad1e 	bne	r2,zero,80b894 <__umoddi3+0x578>
  80b5e0:	3006d23a 	srli	r3,r6,8
  80b5e4:	04800204 	movi	r18,8
  80b5e8:	003f6506 	br	80b380 <__umoddi3+0x64>
  80b5ec:	39004030 	cmpltui	r4,r7,256
  80b5f0:	2000b21e 	bne	r4,zero,80b8bc <__umoddi3+0x5a0>
  80b5f4:	3808d23a 	srli	r4,r7,8
  80b5f8:	02000204 	movi	r8,8
  80b5fc:	003fa606 	br	80b498 <__umoddi3+0x17c>
  80b600:	3d4e983a 	sll	r7,r7,r21
  80b604:	3508d83a 	srl	r4,r6,r20
  80b608:	8d2cd83a 	srl	r22,r17,r20
  80b60c:	8504d83a 	srl	r2,r16,r20
  80b610:	21e4b03a 	or	r18,r4,r7
  80b614:	8d62983a 	sll	r17,r17,r21
  80b618:	9026d43a 	srli	r19,r18,16
  80b61c:	354c983a 	sll	r6,r6,r21
  80b620:	1444b03a 	or	r2,r2,r17
  80b624:	b009883a 	mov	r4,r22
  80b628:	980b883a 	mov	r5,r19
  80b62c:	d9800115 	stw	r6,4(sp)
  80b630:	d8800015 	stw	r2,0(sp)
  80b634:	080ba380 	call	80ba38 <__umodsi3>
  80b638:	980b883a 	mov	r5,r19
  80b63c:	b009883a 	mov	r4,r22
  80b640:	102f883a 	mov	r23,r2
  80b644:	947fffcc 	andi	r17,r18,65535
  80b648:	080b9d40 	call	80b9d4 <__udivsi3>
  80b64c:	8809883a 	mov	r4,r17
  80b650:	100b883a 	mov	r5,r2
  80b654:	1039883a 	mov	fp,r2
  80b658:	080150c0 	call	80150c <__mulsi3>
  80b65c:	d8c00017 	ldw	r3,0(sp)
  80b660:	b82e943a 	slli	r23,r23,16
  80b664:	8560983a 	sll	r16,r16,r21
  80b668:	1808d43a 	srli	r4,r3,16
  80b66c:	b908b03a 	or	r4,r23,r4
  80b670:	2080062e 	bgeu	r4,r2,80b68c <__umoddi3+0x370>
  80b674:	2489883a 	add	r4,r4,r18
  80b678:	e17fffc4 	addi	r5,fp,-1
  80b67c:	24809436 	bltu	r4,r18,80b8d0 <__umoddi3+0x5b4>
  80b680:	2080932e 	bgeu	r4,r2,80b8d0 <__umoddi3+0x5b4>
  80b684:	e73fff84 	addi	fp,fp,-2
  80b688:	2489883a 	add	r4,r4,r18
  80b68c:	20adc83a 	sub	r22,r4,r2
  80b690:	980b883a 	mov	r5,r19
  80b694:	b009883a 	mov	r4,r22
  80b698:	080ba380 	call	80ba38 <__umodsi3>
  80b69c:	980b883a 	mov	r5,r19
  80b6a0:	b009883a 	mov	r4,r22
  80b6a4:	102f883a 	mov	r23,r2
  80b6a8:	080b9d40 	call	80b9d4 <__udivsi3>
  80b6ac:	100b883a 	mov	r5,r2
  80b6b0:	8809883a 	mov	r4,r17
  80b6b4:	d8800215 	stw	r2,8(sp)
  80b6b8:	080150c0 	call	80150c <__mulsi3>
  80b6bc:	d8c00017 	ldw	r3,0(sp)
  80b6c0:	b82e943a 	slli	r23,r23,16
  80b6c4:	d9400217 	ldw	r5,8(sp)
  80b6c8:	1c7fffcc 	andi	r17,r3,65535
  80b6cc:	bc62b03a 	or	r17,r23,r17
  80b6d0:	8880062e 	bgeu	r17,r2,80b6ec <__umoddi3+0x3d0>
  80b6d4:	8ca3883a 	add	r17,r17,r18
  80b6d8:	28ffffc4 	addi	r3,r5,-1
  80b6dc:	8c807a36 	bltu	r17,r18,80b8c8 <__umoddi3+0x5ac>
  80b6e0:	8880792e 	bgeu	r17,r2,80b8c8 <__umoddi3+0x5ac>
  80b6e4:	297fff84 	addi	r5,r5,-2
  80b6e8:	8ca3883a 	add	r17,r17,r18
  80b6ec:	e02c943a 	slli	r22,fp,16
  80b6f0:	d9c00117 	ldw	r7,4(sp)
  80b6f4:	29bfffcc 	andi	r6,r5,65535
  80b6f8:	b16cb03a 	or	r22,r22,r5
  80b6fc:	38ffffcc 	andi	r3,r7,65535
  80b700:	b02cd43a 	srli	r22,r22,16
  80b704:	180b883a 	mov	r5,r3
  80b708:	3009883a 	mov	r4,r6
  80b70c:	3838d43a 	srli	fp,r7,16
  80b710:	182f883a 	mov	r23,r3
  80b714:	d9800015 	stw	r6,0(sp)
  80b718:	88a3c83a 	sub	r17,r17,r2
  80b71c:	080150c0 	call	80150c <__mulsi3>
  80b720:	b80b883a 	mov	r5,r23
  80b724:	b009883a 	mov	r4,r22
  80b728:	102f883a 	mov	r23,r2
  80b72c:	080150c0 	call	80150c <__mulsi3>
  80b730:	e00b883a 	mov	r5,fp
  80b734:	b009883a 	mov	r4,r22
  80b738:	102d883a 	mov	r22,r2
  80b73c:	080150c0 	call	80150c <__mulsi3>
  80b740:	d9800017 	ldw	r6,0(sp)
  80b744:	e00b883a 	mov	r5,fp
  80b748:	1039883a 	mov	fp,r2
  80b74c:	3009883a 	mov	r4,r6
  80b750:	080150c0 	call	80150c <__mulsi3>
  80b754:	b808d43a 	srli	r4,r23,16
  80b758:	1585883a 	add	r2,r2,r22
  80b75c:	2089883a 	add	r4,r4,r2
  80b760:	2580022e 	bgeu	r4,r22,80b76c <__umoddi3+0x450>
  80b764:	00800074 	movhi	r2,1
  80b768:	e0b9883a 	add	fp,fp,r2
  80b76c:	2006d43a 	srli	r3,r4,16
  80b770:	2008943a 	slli	r4,r4,16
  80b774:	bdffffcc 	andi	r23,r23,65535
  80b778:	1f07883a 	add	r3,r3,fp
  80b77c:	25c9883a 	add	r4,r4,r23
  80b780:	88c03a36 	bltu	r17,r3,80b86c <__umoddi3+0x550>
  80b784:	88c03826 	beq	r17,r3,80b868 <__umoddi3+0x54c>
  80b788:	8109c83a 	sub	r4,r16,r4
  80b78c:	8121803a 	cmpltu	r16,r16,r4
  80b790:	88c7c83a 	sub	r3,r17,r3
  80b794:	1c07c83a 	sub	r3,r3,r16
  80b798:	1d04983a 	sll	r2,r3,r20
  80b79c:	2548d83a 	srl	r4,r4,r21
  80b7a0:	1d46d83a 	srl	r3,r3,r21
  80b7a4:	1104b03a 	or	r2,r2,r4
  80b7a8:	003f2806 	br	80b44c <__umoddi3+0x130>
  80b7ac:	a4a8983a 	sll	r20,r20,r18
  80b7b0:	8da6d83a 	srl	r19,r17,r22
  80b7b4:	8ca2983a 	sll	r17,r17,r18
  80b7b8:	a02ed43a 	srli	r23,r20,16
  80b7bc:	9809883a 	mov	r4,r19
  80b7c0:	85acd83a 	srl	r22,r16,r22
  80b7c4:	b80b883a 	mov	r5,r23
  80b7c8:	080ba380 	call	80ba38 <__umodsi3>
  80b7cc:	9809883a 	mov	r4,r19
  80b7d0:	b80b883a 	mov	r5,r23
  80b7d4:	b46cb03a 	or	r22,r22,r17
  80b7d8:	a57fffcc 	andi	r21,r20,65535
  80b7dc:	1023883a 	mov	r17,r2
  80b7e0:	080b9d40 	call	80b9d4 <__udivsi3>
  80b7e4:	a809883a 	mov	r4,r21
  80b7e8:	100b883a 	mov	r5,r2
  80b7ec:	080150c0 	call	80150c <__mulsi3>
  80b7f0:	8822943a 	slli	r17,r17,16
  80b7f4:	b008d43a 	srli	r4,r22,16
  80b7f8:	84a6983a 	sll	r19,r16,r18
  80b7fc:	8908b03a 	or	r4,r17,r4
  80b800:	2080042e 	bgeu	r4,r2,80b814 <__umoddi3+0x4f8>
  80b804:	2509883a 	add	r4,r4,r20
  80b808:	25000236 	bltu	r4,r20,80b814 <__umoddi3+0x4f8>
  80b80c:	2080012e 	bgeu	r4,r2,80b814 <__umoddi3+0x4f8>
  80b810:	2509883a 	add	r4,r4,r20
  80b814:	20a1c83a 	sub	r16,r4,r2
  80b818:	8009883a 	mov	r4,r16
  80b81c:	b80b883a 	mov	r5,r23
  80b820:	080ba380 	call	80ba38 <__umodsi3>
  80b824:	8009883a 	mov	r4,r16
  80b828:	1021883a 	mov	r16,r2
  80b82c:	b80b883a 	mov	r5,r23
  80b830:	8020943a 	slli	r16,r16,16
  80b834:	080b9d40 	call	80b9d4 <__udivsi3>
  80b838:	100b883a 	mov	r5,r2
  80b83c:	a809883a 	mov	r4,r21
  80b840:	b47fffcc 	andi	r17,r22,65535
  80b844:	080150c0 	call	80150c <__mulsi3>
  80b848:	8462b03a 	or	r17,r16,r17
  80b84c:	8880042e 	bgeu	r17,r2,80b860 <__umoddi3+0x544>
  80b850:	8d23883a 	add	r17,r17,r20
  80b854:	8d000236 	bltu	r17,r20,80b860 <__umoddi3+0x544>
  80b858:	8880012e 	bgeu	r17,r2,80b860 <__umoddi3+0x544>
  80b85c:	8d23883a 	add	r17,r17,r20
  80b860:	88a3c83a 	sub	r17,r17,r2
  80b864:	003f2f06 	br	80b524 <__umoddi3+0x208>
  80b868:	813fc72e 	bgeu	r16,r4,80b788 <__umoddi3+0x46c>
  80b86c:	d8800117 	ldw	r2,4(sp)
  80b870:	20a7c83a 	sub	r19,r4,r2
  80b874:	24c9803a 	cmpltu	r4,r4,r19
  80b878:	2489883a 	add	r4,r4,r18
  80b87c:	1907c83a 	sub	r3,r3,r4
  80b880:	9809883a 	mov	r4,r19
  80b884:	003fc006 	br	80b788 <__umoddi3+0x46c>
  80b888:	3006d43a 	srli	r3,r6,16
  80b88c:	04800404 	movi	r18,16
  80b890:	003ebb06 	br	80b380 <__umoddi3+0x64>
  80b894:	3007883a 	mov	r3,r6
  80b898:	003eb906 	br	80b380 <__umoddi3+0x64>
  80b89c:	3808d43a 	srli	r4,r7,16
  80b8a0:	02000404 	movi	r8,16
  80b8a4:	003efc06 	br	80b498 <__umoddi3+0x17c>
  80b8a8:	a006d43a 	srli	r3,r20,16
  80b8ac:	04800404 	movi	r18,16
  80b8b0:	003f1206 	br	80b4fc <__umoddi3+0x1e0>
  80b8b4:	a007883a 	mov	r3,r20
  80b8b8:	003f1006 	br	80b4fc <__umoddi3+0x1e0>
  80b8bc:	3809883a 	mov	r4,r7
  80b8c0:	0011883a 	mov	r8,zero
  80b8c4:	003ef406 	br	80b498 <__umoddi3+0x17c>
  80b8c8:	180b883a 	mov	r5,r3
  80b8cc:	003f8706 	br	80b6ec <__umoddi3+0x3d0>
  80b8d0:	2839883a 	mov	fp,r5
  80b8d4:	003f6d06 	br	80b68c <__umoddi3+0x370>
  80b8d8:	2509883a 	add	r4,r4,r20
  80b8dc:	003f2206 	br	80b568 <__umoddi3+0x24c>

0080b8e0 <__divsi3>:
  80b8e0:	20001a16 	blt	r4,zero,80b94c <__divsi3+0x6c>
  80b8e4:	000f883a 	mov	r7,zero
  80b8e8:	2800020e 	bge	r5,zero,80b8f4 <__divsi3+0x14>
  80b8ec:	014bc83a 	sub	r5,zero,r5
  80b8f0:	39c0005c 	xori	r7,r7,1
  80b8f4:	200d883a 	mov	r6,r4
  80b8f8:	00c00044 	movi	r3,1
  80b8fc:	2900092e 	bgeu	r5,r4,80b924 <__divsi3+0x44>
  80b900:	00800804 	movi	r2,32
  80b904:	00c00044 	movi	r3,1
  80b908:	00000106 	br	80b910 <__divsi3+0x30>
  80b90c:	10001226 	beq	r2,zero,80b958 <__divsi3+0x78>
  80b910:	294b883a 	add	r5,r5,r5
  80b914:	10bfffc4 	addi	r2,r2,-1
  80b918:	18c7883a 	add	r3,r3,r3
  80b91c:	293ffb36 	bltu	r5,r4,80b90c <__divsi3+0x2c>
  80b920:	18000d26 	beq	r3,zero,80b958 <__divsi3+0x78>
  80b924:	0005883a 	mov	r2,zero
  80b928:	31400236 	bltu	r6,r5,80b934 <__divsi3+0x54>
  80b92c:	314dc83a 	sub	r6,r6,r5
  80b930:	10c4b03a 	or	r2,r2,r3
  80b934:	1806d07a 	srli	r3,r3,1
  80b938:	280ad07a 	srli	r5,r5,1
  80b93c:	183ffa1e 	bne	r3,zero,80b928 <__divsi3+0x48>
  80b940:	38000126 	beq	r7,zero,80b948 <__divsi3+0x68>
  80b944:	0085c83a 	sub	r2,zero,r2
  80b948:	f800283a 	ret
  80b94c:	0109c83a 	sub	r4,zero,r4
  80b950:	01c00044 	movi	r7,1
  80b954:	003fe406 	br	80b8e8 <__divsi3+0x8>
  80b958:	0005883a 	mov	r2,zero
  80b95c:	003ff806 	br	80b940 <__divsi3+0x60>

0080b960 <__modsi3>:
  80b960:	20001916 	blt	r4,zero,80b9c8 <__modsi3+0x68>
  80b964:	000f883a 	mov	r7,zero
  80b968:	2005883a 	mov	r2,r4
  80b96c:	2800010e 	bge	r5,zero,80b974 <__modsi3+0x14>
  80b970:	014bc83a 	sub	r5,zero,r5
  80b974:	00c00044 	movi	r3,1
  80b978:	2900092e 	bgeu	r5,r4,80b9a0 <__modsi3+0x40>
  80b97c:	01800804 	movi	r6,32
  80b980:	00c00044 	movi	r3,1
  80b984:	00000106 	br	80b98c <__modsi3+0x2c>
  80b988:	30000d26 	beq	r6,zero,80b9c0 <__modsi3+0x60>
  80b98c:	294b883a 	add	r5,r5,r5
  80b990:	31bfffc4 	addi	r6,r6,-1
  80b994:	18c7883a 	add	r3,r3,r3
  80b998:	293ffb36 	bltu	r5,r4,80b988 <__modsi3+0x28>
  80b99c:	18000826 	beq	r3,zero,80b9c0 <__modsi3+0x60>
  80b9a0:	1806d07a 	srli	r3,r3,1
  80b9a4:	11400136 	bltu	r2,r5,80b9ac <__modsi3+0x4c>
  80b9a8:	1145c83a 	sub	r2,r2,r5
  80b9ac:	280ad07a 	srli	r5,r5,1
  80b9b0:	183ffb1e 	bne	r3,zero,80b9a0 <__modsi3+0x40>
  80b9b4:	38000126 	beq	r7,zero,80b9bc <__modsi3+0x5c>
  80b9b8:	0085c83a 	sub	r2,zero,r2
  80b9bc:	f800283a 	ret
  80b9c0:	2005883a 	mov	r2,r4
  80b9c4:	003ffb06 	br	80b9b4 <__modsi3+0x54>
  80b9c8:	0109c83a 	sub	r4,zero,r4
  80b9cc:	01c00044 	movi	r7,1
  80b9d0:	003fe506 	br	80b968 <__modsi3+0x8>

0080b9d4 <__udivsi3>:
  80b9d4:	200d883a 	mov	r6,r4
  80b9d8:	2900152e 	bgeu	r5,r4,80ba30 <__udivsi3+0x5c>
  80b9dc:	28001416 	blt	r5,zero,80ba30 <__udivsi3+0x5c>
  80b9e0:	00800804 	movi	r2,32
  80b9e4:	00c00044 	movi	r3,1
  80b9e8:	00000206 	br	80b9f4 <__udivsi3+0x20>
  80b9ec:	10000e26 	beq	r2,zero,80ba28 <__udivsi3+0x54>
  80b9f0:	28000516 	blt	r5,zero,80ba08 <__udivsi3+0x34>
  80b9f4:	294b883a 	add	r5,r5,r5
  80b9f8:	10bfffc4 	addi	r2,r2,-1
  80b9fc:	18c7883a 	add	r3,r3,r3
  80ba00:	293ffa36 	bltu	r5,r4,80b9ec <__udivsi3+0x18>
  80ba04:	18000826 	beq	r3,zero,80ba28 <__udivsi3+0x54>
  80ba08:	0005883a 	mov	r2,zero
  80ba0c:	31400236 	bltu	r6,r5,80ba18 <__udivsi3+0x44>
  80ba10:	314dc83a 	sub	r6,r6,r5
  80ba14:	10c4b03a 	or	r2,r2,r3
  80ba18:	1806d07a 	srli	r3,r3,1
  80ba1c:	280ad07a 	srli	r5,r5,1
  80ba20:	183ffa1e 	bne	r3,zero,80ba0c <__udivsi3+0x38>
  80ba24:	f800283a 	ret
  80ba28:	0005883a 	mov	r2,zero
  80ba2c:	f800283a 	ret
  80ba30:	00c00044 	movi	r3,1
  80ba34:	003ff406 	br	80ba08 <__udivsi3+0x34>

0080ba38 <__umodsi3>:
  80ba38:	2005883a 	mov	r2,r4
  80ba3c:	2900132e 	bgeu	r5,r4,80ba8c <__umodsi3+0x54>
  80ba40:	28001216 	blt	r5,zero,80ba8c <__umodsi3+0x54>
  80ba44:	01800804 	movi	r6,32
  80ba48:	00c00044 	movi	r3,1
  80ba4c:	00000206 	br	80ba58 <__umodsi3+0x20>
  80ba50:	30000c26 	beq	r6,zero,80ba84 <__umodsi3+0x4c>
  80ba54:	28000516 	blt	r5,zero,80ba6c <__umodsi3+0x34>
  80ba58:	294b883a 	add	r5,r5,r5
  80ba5c:	31bfffc4 	addi	r6,r6,-1
  80ba60:	18c7883a 	add	r3,r3,r3
  80ba64:	293ffa36 	bltu	r5,r4,80ba50 <__umodsi3+0x18>
  80ba68:	18000626 	beq	r3,zero,80ba84 <__umodsi3+0x4c>
  80ba6c:	1806d07a 	srli	r3,r3,1
  80ba70:	11400136 	bltu	r2,r5,80ba78 <__umodsi3+0x40>
  80ba74:	1145c83a 	sub	r2,r2,r5
  80ba78:	280ad07a 	srli	r5,r5,1
  80ba7c:	183ffb1e 	bne	r3,zero,80ba6c <__umodsi3+0x34>
  80ba80:	f800283a 	ret
  80ba84:	2005883a 	mov	r2,r4
  80ba88:	f800283a 	ret
  80ba8c:	00c00044 	movi	r3,1
  80ba90:	003ff606 	br	80ba6c <__umodsi3+0x34>

0080ba94 <__adddf3>:
  80ba94:	02000434 	movhi	r8,16
  80ba98:	423fffc4 	addi	r8,r8,-1
  80ba9c:	3a12703a 	and	r9,r7,r8
  80baa0:	2a06703a 	and	r3,r5,r8
  80baa4:	2818d53a 	srli	r12,r5,20
  80baa8:	3804d53a 	srli	r2,r7,20
  80baac:	481490fa 	slli	r10,r9,3
  80bab0:	280ad7fa 	srli	r5,r5,31
  80bab4:	180690fa 	slli	r3,r3,3
  80bab8:	2016d77a 	srli	r11,r4,29
  80babc:	3012d77a 	srli	r9,r6,29
  80bac0:	380ed7fa 	srli	r7,r7,31
  80bac4:	defffb04 	addi	sp,sp,-20
  80bac8:	dc400115 	stw	r17,4(sp)
  80bacc:	dc000015 	stw	r16,0(sp)
  80bad0:	dfc00415 	stw	ra,16(sp)
  80bad4:	dcc00315 	stw	r19,12(sp)
  80bad8:	dc800215 	stw	r18,8(sp)
  80badc:	201c90fa 	slli	r14,r4,3
  80bae0:	301a90fa 	slli	r13,r6,3
  80bae4:	6441ffcc 	andi	r17,r12,2047
  80bae8:	2821883a 	mov	r16,r5
  80baec:	58c6b03a 	or	r3,r11,r3
  80baf0:	1081ffcc 	andi	r2,r2,2047
  80baf4:	4a92b03a 	or	r9,r9,r10
  80baf8:	29c06326 	beq	r5,r7,80bc88 <__adddf3+0x1f4>
  80bafc:	888bc83a 	sub	r5,r17,r2
  80bb00:	0140560e 	bge	zero,r5,80bc5c <__adddf3+0x1c8>
  80bb04:	10007526 	beq	r2,zero,80bcdc <__adddf3+0x248>
  80bb08:	8881ffd8 	cmpnei	r2,r17,2047
  80bb0c:	10012d26 	beq	r2,zero,80bfc4 <__adddf3+0x530>
  80bb10:	4a402034 	orhi	r9,r9,128
  80bb14:	28800e48 	cmpgei	r2,r5,57
  80bb18:	1000f41e 	bne	r2,zero,80beec <__adddf3+0x458>
  80bb1c:	28800808 	cmpgei	r2,r5,32
  80bb20:	1001471e 	bne	r2,zero,80c040 <__adddf3+0x5ac>
  80bb24:	00800804 	movi	r2,32
  80bb28:	1145c83a 	sub	r2,r2,r5
  80bb2c:	6948d83a 	srl	r4,r13,r5
  80bb30:	48a4983a 	sll	r18,r9,r2
  80bb34:	6884983a 	sll	r2,r13,r2
  80bb38:	494ad83a 	srl	r5,r9,r5
  80bb3c:	9124b03a 	or	r18,r18,r4
  80bb40:	101ac03a 	cmpne	r13,r2,zero
  80bb44:	9364b03a 	or	r18,r18,r13
  80bb48:	1947c83a 	sub	r3,r3,r5
  80bb4c:	74a5c83a 	sub	r18,r14,r18
  80bb50:	7489803a 	cmpltu	r4,r14,r18
  80bb54:	1909c83a 	sub	r4,r3,r4
  80bb58:	2080202c 	andhi	r2,r4,128
  80bb5c:	10008626 	beq	r2,zero,80bd78 <__adddf3+0x2e4>
  80bb60:	00802034 	movhi	r2,128
  80bb64:	10bfffc4 	addi	r2,r2,-1
  80bb68:	20a6703a 	and	r19,r4,r2
  80bb6c:	9800d626 	beq	r19,zero,80bec8 <__adddf3+0x434>
  80bb70:	9809883a 	mov	r4,r19
  80bb74:	08014b80 	call	8014b8 <__clzsi2>
  80bb78:	133ffe04 	addi	r12,r2,-8
  80bb7c:	01000804 	movi	r4,32
  80bb80:	2309c83a 	sub	r4,r4,r12
  80bb84:	9108d83a 	srl	r4,r18,r4
  80bb88:	9b04983a 	sll	r2,r19,r12
  80bb8c:	9324983a 	sll	r18,r18,r12
  80bb90:	2088b03a 	or	r4,r4,r2
  80bb94:	6440c716 	blt	r12,r17,80beb4 <__adddf3+0x420>
  80bb98:	6459c83a 	sub	r12,r12,r17
  80bb9c:	62000044 	addi	r8,r12,1
  80bba0:	40800808 	cmpgei	r2,r8,32
  80bba4:	1001191e 	bne	r2,zero,80c00c <__adddf3+0x578>
  80bba8:	00800804 	movi	r2,32
  80bbac:	1205c83a 	sub	r2,r2,r8
  80bbb0:	9206d83a 	srl	r3,r18,r8
  80bbb4:	90a4983a 	sll	r18,r18,r2
  80bbb8:	2084983a 	sll	r2,r4,r2
  80bbbc:	2208d83a 	srl	r4,r4,r8
  80bbc0:	9024c03a 	cmpne	r18,r18,zero
  80bbc4:	10c4b03a 	or	r2,r2,r3
  80bbc8:	14a4b03a 	or	r18,r2,r18
  80bbcc:	0023883a 	mov	r17,zero
  80bbd0:	908001cc 	andi	r2,r18,7
  80bbd4:	10000726 	beq	r2,zero,80bbf4 <__adddf3+0x160>
  80bbd8:	908003cc 	andi	r2,r18,15
  80bbdc:	10800120 	cmpeqi	r2,r2,4
  80bbe0:	1000041e 	bne	r2,zero,80bbf4 <__adddf3+0x160>
  80bbe4:	90c00104 	addi	r3,r18,4
  80bbe8:	1ca5803a 	cmpltu	r18,r3,r18
  80bbec:	2489883a 	add	r4,r4,r18
  80bbf0:	1825883a 	mov	r18,r3
  80bbf4:	2080202c 	andhi	r2,r4,128
  80bbf8:	10006126 	beq	r2,zero,80bd80 <__adddf3+0x2ec>
  80bbfc:	89400044 	addi	r5,r17,1
  80bc00:	2881ffe0 	cmpeqi	r2,r5,2047
  80bc04:	2941ffcc 	andi	r5,r5,2047
  80bc08:	1000731e 	bne	r2,zero,80bdd8 <__adddf3+0x344>
  80bc0c:	023fe034 	movhi	r8,65408
  80bc10:	423fffc4 	addi	r8,r8,-1
  80bc14:	2210703a 	and	r8,r4,r8
  80bc18:	4006927a 	slli	r3,r8,9
  80bc1c:	9024d0fa 	srli	r18,r18,3
  80bc20:	4004977a 	slli	r2,r8,29
  80bc24:	1806d33a 	srli	r3,r3,12
  80bc28:	1484b03a 	or	r2,r2,r18
  80bc2c:	280a953a 	slli	r5,r5,20
  80bc30:	84003fcc 	andi	r16,r16,255
  80bc34:	802097fa 	slli	r16,r16,31
  80bc38:	28c6b03a 	or	r3,r5,r3
  80bc3c:	1c06b03a 	or	r3,r3,r16
  80bc40:	dfc00417 	ldw	ra,16(sp)
  80bc44:	dcc00317 	ldw	r19,12(sp)
  80bc48:	dc800217 	ldw	r18,8(sp)
  80bc4c:	dc400117 	ldw	r17,4(sp)
  80bc50:	dc000017 	ldw	r16,0(sp)
  80bc54:	dec00504 	addi	sp,sp,20
  80bc58:	f800283a 	ret
  80bc5c:	28002726 	beq	r5,zero,80bcfc <__adddf3+0x268>
  80bc60:	144bc83a 	sub	r5,r2,r17
  80bc64:	8800be1e 	bne	r17,zero,80bf60 <__adddf3+0x4cc>
  80bc68:	1b88b03a 	or	r4,r3,r14
  80bc6c:	20013126 	beq	r4,zero,80c134 <__adddf3+0x6a0>
  80bc70:	293fffc4 	addi	r4,r5,-1
  80bc74:	20017226 	beq	r4,zero,80c240 <__adddf3+0x7ac>
  80bc78:	2941ffd8 	cmpnei	r5,r5,2047
  80bc7c:	2801c226 	beq	r5,zero,80c388 <__adddf3+0x8f4>
  80bc80:	200b883a 	mov	r5,r4
  80bc84:	0000b906 	br	80bf6c <__adddf3+0x4d8>
  80bc88:	888bc83a 	sub	r5,r17,r2
  80bc8c:	0140700e 	bge	zero,r5,80be50 <__adddf3+0x3bc>
  80bc90:	10002a26 	beq	r2,zero,80bd3c <__adddf3+0x2a8>
  80bc94:	8881ffd8 	cmpnei	r2,r17,2047
  80bc98:	1000ca26 	beq	r2,zero,80bfc4 <__adddf3+0x530>
  80bc9c:	4a402034 	orhi	r9,r9,128
  80bca0:	28800e48 	cmpgei	r2,r5,57
  80bca4:	1000421e 	bne	r2,zero,80bdb0 <__adddf3+0x31c>
  80bca8:	28800808 	cmpgei	r2,r5,32
  80bcac:	1000ff26 	beq	r2,zero,80c0ac <__adddf3+0x618>
  80bcb0:	2cbff804 	addi	r18,r5,-32
  80bcb4:	29000820 	cmpeqi	r4,r5,32
  80bcb8:	4c84d83a 	srl	r2,r9,r18
  80bcbc:	2000041e 	bne	r4,zero,80bcd0 <__adddf3+0x23c>
  80bcc0:	01001004 	movi	r4,64
  80bcc4:	214bc83a 	sub	r5,r4,r5
  80bcc8:	4952983a 	sll	r9,r9,r5
  80bccc:	6a5ab03a 	or	r13,r13,r9
  80bcd0:	6824c03a 	cmpne	r18,r13,zero
  80bcd4:	90a4b03a 	or	r18,r18,r2
  80bcd8:	00003706 	br	80bdb8 <__adddf3+0x324>
  80bcdc:	4b44b03a 	or	r2,r9,r13
  80bce0:	1000b126 	beq	r2,zero,80bfa8 <__adddf3+0x514>
  80bce4:	28bfffc4 	addi	r2,r5,-1
  80bce8:	10011a26 	beq	r2,zero,80c154 <__adddf3+0x6c0>
  80bcec:	2941ffd8 	cmpnei	r5,r5,2047
  80bcf0:	28012526 	beq	r5,zero,80c188 <__adddf3+0x6f4>
  80bcf4:	100b883a 	mov	r5,r2
  80bcf8:	003f8606 	br	80bb14 <__adddf3+0x80>
  80bcfc:	8a800044 	addi	r10,r17,1
  80bd00:	5281ff8c 	andi	r10,r10,2046
  80bd04:	50008b1e 	bne	r10,zero,80bf34 <__adddf3+0x4a0>
  80bd08:	1b96b03a 	or	r11,r3,r14
  80bd0c:	4b44b03a 	or	r2,r9,r13
  80bd10:	8801031e 	bne	r17,zero,80c120 <__adddf3+0x68c>
  80bd14:	58014126 	beq	r11,zero,80c21c <__adddf3+0x788>
  80bd18:	1001571e 	bne	r2,zero,80c278 <__adddf3+0x7e4>
  80bd1c:	1804977a 	slli	r2,r3,29
  80bd20:	01480034 	movhi	r5,8192
  80bd24:	297fffc4 	addi	r5,r5,-1
  80bd28:	2148703a 	and	r4,r4,r5
  80bd2c:	1810d0fa 	srli	r8,r3,3
  80bd30:	1104b03a 	or	r2,r2,r4
  80bd34:	500b883a 	mov	r5,r10
  80bd38:	00001806 	br	80bd9c <__adddf3+0x308>
  80bd3c:	4b44b03a 	or	r2,r9,r13
  80bd40:	10010a26 	beq	r2,zero,80c16c <__adddf3+0x6d8>
  80bd44:	28bfffc4 	addi	r2,r5,-1
  80bd48:	10000426 	beq	r2,zero,80bd5c <__adddf3+0x2c8>
  80bd4c:	2941ffd8 	cmpnei	r5,r5,2047
  80bd50:	28014226 	beq	r5,zero,80c25c <__adddf3+0x7c8>
  80bd54:	100b883a 	mov	r5,r2
  80bd58:	003fd106 	br	80bca0 <__adddf3+0x20c>
  80bd5c:	7365883a 	add	r18,r14,r13
  80bd60:	1a47883a 	add	r3,r3,r9
  80bd64:	9389803a 	cmpltu	r4,r18,r14
  80bd68:	1909883a 	add	r4,r3,r4
  80bd6c:	2080202c 	andhi	r2,r4,128
  80bd70:	10009b1e 	bne	r2,zero,80bfe0 <__adddf3+0x54c>
  80bd74:	04400044 	movi	r17,1
  80bd78:	908001cc 	andi	r2,r18,7
  80bd7c:	103f961e 	bne	r2,zero,80bbd8 <__adddf3+0x144>
  80bd80:	9024d0fa 	srli	r18,r18,3
  80bd84:	2004977a 	slli	r2,r4,29
  80bd88:	2010d0fa 	srli	r8,r4,3
  80bd8c:	880b883a 	mov	r5,r17
  80bd90:	9084b03a 	or	r2,r18,r2
  80bd94:	28c1ffe0 	cmpeqi	r3,r5,2047
  80bd98:	1800251e 	bne	r3,zero,80be30 <__adddf3+0x39c>
  80bd9c:	00c00434 	movhi	r3,16
  80bda0:	18ffffc4 	addi	r3,r3,-1
  80bda4:	40c6703a 	and	r3,r8,r3
  80bda8:	2941ffcc 	andi	r5,r5,2047
  80bdac:	003f9f06 	br	80bc2c <__adddf3+0x198>
  80bdb0:	4b64b03a 	or	r18,r9,r13
  80bdb4:	9024c03a 	cmpne	r18,r18,zero
  80bdb8:	93a5883a 	add	r18,r18,r14
  80bdbc:	9389803a 	cmpltu	r4,r18,r14
  80bdc0:	20c9883a 	add	r4,r4,r3
  80bdc4:	2080202c 	andhi	r2,r4,128
  80bdc8:	103feb26 	beq	r2,zero,80bd78 <__adddf3+0x2e4>
  80bdcc:	8c400044 	addi	r17,r17,1
  80bdd0:	8881ffe0 	cmpeqi	r2,r17,2047
  80bdd4:	10008326 	beq	r2,zero,80bfe4 <__adddf3+0x550>
  80bdd8:	0141ffc4 	movi	r5,2047
  80bddc:	0007883a 	mov	r3,zero
  80bde0:	0005883a 	mov	r2,zero
  80bde4:	003f9106 	br	80bc2c <__adddf3+0x198>
  80bde8:	4b44b03a 	or	r2,r9,r13
  80bdec:	180a977a 	slli	r5,r3,29
  80bdf0:	1810d0fa 	srli	r8,r3,3
  80bdf4:	10016c26 	beq	r2,zero,80c3a8 <__adddf3+0x914>
  80bdf8:	00c80034 	movhi	r3,8192
  80bdfc:	18ffffc4 	addi	r3,r3,-1
  80be00:	20c4703a 	and	r2,r4,r3
  80be04:	4100022c 	andhi	r4,r8,8
  80be08:	1144b03a 	or	r2,r2,r5
  80be0c:	20000826 	beq	r4,zero,80be30 <__adddf3+0x39c>
  80be10:	4808d0fa 	srli	r4,r9,3
  80be14:	2140022c 	andhi	r5,r4,8
  80be18:	2800051e 	bne	r5,zero,80be30 <__adddf3+0x39c>
  80be1c:	4804977a 	slli	r2,r9,29
  80be20:	30cc703a 	and	r6,r6,r3
  80be24:	3821883a 	mov	r16,r7
  80be28:	3084b03a 	or	r2,r6,r2
  80be2c:	2011883a 	mov	r8,r4
  80be30:	4086b03a 	or	r3,r8,r2
  80be34:	18017126 	beq	r3,zero,80c3fc <__adddf3+0x968>
  80be38:	01000434 	movhi	r4,16
  80be3c:	40c00234 	orhi	r3,r8,8
  80be40:	213fffc4 	addi	r4,r4,-1
  80be44:	1906703a 	and	r3,r3,r4
  80be48:	0141ffc4 	movi	r5,2047
  80be4c:	003f7706 	br	80bc2c <__adddf3+0x198>
  80be50:	28002926 	beq	r5,zero,80bef8 <__adddf3+0x464>
  80be54:	144bc83a 	sub	r5,r2,r17
  80be58:	88008c26 	beq	r17,zero,80c08c <__adddf3+0x5f8>
  80be5c:	1101ffd8 	cmpnei	r4,r2,2047
  80be60:	20011126 	beq	r4,zero,80c2a8 <__adddf3+0x814>
  80be64:	18c02034 	orhi	r3,r3,128
  80be68:	29000e48 	cmpgei	r4,r5,57
  80be6c:	2000d51e 	bne	r4,zero,80c1c4 <__adddf3+0x730>
  80be70:	29000808 	cmpgei	r4,r5,32
  80be74:	2001511e 	bne	r4,zero,80c3bc <__adddf3+0x928>
  80be78:	01000804 	movi	r4,32
  80be7c:	2149c83a 	sub	r4,r4,r5
  80be80:	1924983a 	sll	r18,r3,r4
  80be84:	714cd83a 	srl	r6,r14,r5
  80be88:	7108983a 	sll	r4,r14,r4
  80be8c:	194ad83a 	srl	r5,r3,r5
  80be90:	91a4b03a 	or	r18,r18,r6
  80be94:	2006c03a 	cmpne	r3,r4,zero
  80be98:	90e4b03a 	or	r18,r18,r3
  80be9c:	4953883a 	add	r9,r9,r5
  80bea0:	9365883a 	add	r18,r18,r13
  80bea4:	9349803a 	cmpltu	r4,r18,r13
  80bea8:	2249883a 	add	r4,r4,r9
  80beac:	1023883a 	mov	r17,r2
  80beb0:	003fc406 	br	80bdc4 <__adddf3+0x330>
  80beb4:	023fe034 	movhi	r8,65408
  80beb8:	423fffc4 	addi	r8,r8,-1
  80bebc:	8b23c83a 	sub	r17,r17,r12
  80bec0:	2208703a 	and	r4,r4,r8
  80bec4:	003f4206 	br	80bbd0 <__adddf3+0x13c>
  80bec8:	9009883a 	mov	r4,r18
  80becc:	08014b80 	call	8014b8 <__clzsi2>
  80bed0:	13000604 	addi	r12,r2,24
  80bed4:	60c00808 	cmpgei	r3,r12,32
  80bed8:	183f2826 	beq	r3,zero,80bb7c <__adddf3+0xe8>
  80bedc:	113ffe04 	addi	r4,r2,-8
  80bee0:	9108983a 	sll	r4,r18,r4
  80bee4:	0025883a 	mov	r18,zero
  80bee8:	003f2a06 	br	80bb94 <__adddf3+0x100>
  80beec:	4b64b03a 	or	r18,r9,r13
  80bef0:	9024c03a 	cmpne	r18,r18,zero
  80bef4:	003f1506 	br	80bb4c <__adddf3+0xb8>
  80bef8:	8a000044 	addi	r8,r17,1
  80befc:	4081ff8c 	andi	r2,r8,2046
  80bf00:	1000751e 	bne	r2,zero,80c0d8 <__adddf3+0x644>
  80bf04:	1b84b03a 	or	r2,r3,r14
  80bf08:	8800bc1e 	bne	r17,zero,80c1fc <__adddf3+0x768>
  80bf0c:	10010c26 	beq	r2,zero,80c340 <__adddf3+0x8ac>
  80bf10:	4b44b03a 	or	r2,r9,r13
  80bf14:	1001111e 	bne	r2,zero,80c35c <__adddf3+0x8c8>
  80bf18:	180c977a 	slli	r6,r3,29
  80bf1c:	00880034 	movhi	r2,8192
  80bf20:	10bfffc4 	addi	r2,r2,-1
  80bf24:	2084703a 	and	r2,r4,r2
  80bf28:	1810d0fa 	srli	r8,r3,3
  80bf2c:	1184b03a 	or	r2,r2,r6
  80bf30:	003f9a06 	br	80bd9c <__adddf3+0x308>
  80bf34:	7365c83a 	sub	r18,r14,r13
  80bf38:	1a67c83a 	sub	r19,r3,r9
  80bf3c:	7489803a 	cmpltu	r4,r14,r18
  80bf40:	9927c83a 	sub	r19,r19,r4
  80bf44:	9880202c 	andhi	r2,r19,128
  80bf48:	10006f1e 	bne	r2,zero,80c108 <__adddf3+0x674>
  80bf4c:	94c4b03a 	or	r2,r18,r19
  80bf50:	103f061e 	bne	r2,zero,80bb6c <__adddf3+0xd8>
  80bf54:	0011883a 	mov	r8,zero
  80bf58:	0021883a 	mov	r16,zero
  80bf5c:	003f8f06 	br	80bd9c <__adddf3+0x308>
  80bf60:	1101ffd8 	cmpnei	r4,r2,2047
  80bf64:	20008f26 	beq	r4,zero,80c1a4 <__adddf3+0x710>
  80bf68:	18c02034 	orhi	r3,r3,128
  80bf6c:	29000e48 	cmpgei	r4,r5,57
  80bf70:	20003e1e 	bne	r4,zero,80c06c <__adddf3+0x5d8>
  80bf74:	29000808 	cmpgei	r4,r5,32
  80bf78:	2000951e 	bne	r4,zero,80c1d0 <__adddf3+0x73c>
  80bf7c:	01000804 	movi	r4,32
  80bf80:	2149c83a 	sub	r4,r4,r5
  80bf84:	1924983a 	sll	r18,r3,r4
  80bf88:	714cd83a 	srl	r6,r14,r5
  80bf8c:	711c983a 	sll	r14,r14,r4
  80bf90:	1946d83a 	srl	r3,r3,r5
  80bf94:	91a4b03a 	or	r18,r18,r6
  80bf98:	701cc03a 	cmpne	r14,r14,zero
  80bf9c:	93a4b03a 	or	r18,r18,r14
  80bfa0:	48d3c83a 	sub	r9,r9,r3
  80bfa4:	00003306 	br	80c074 <__adddf3+0x5e0>
  80bfa8:	1824977a 	slli	r18,r3,29
  80bfac:	01880034 	movhi	r6,8192
  80bfb0:	31bfffc4 	addi	r6,r6,-1
  80bfb4:	2184703a 	and	r2,r4,r6
  80bfb8:	1810d0fa 	srli	r8,r3,3
  80bfbc:	1484b03a 	or	r2,r2,r18
  80bfc0:	003f7406 	br	80bd94 <__adddf3+0x300>
  80bfc4:	1804977a 	slli	r2,r3,29
  80bfc8:	01480034 	movhi	r5,8192
  80bfcc:	297fffc4 	addi	r5,r5,-1
  80bfd0:	2148703a 	and	r4,r4,r5
  80bfd4:	1810d0fa 	srli	r8,r3,3
  80bfd8:	1104b03a 	or	r2,r2,r4
  80bfdc:	003f9406 	br	80be30 <__adddf3+0x39c>
  80bfe0:	04400084 	movi	r17,2
  80bfe4:	00bfe034 	movhi	r2,65408
  80bfe8:	10bfffc4 	addi	r2,r2,-1
  80bfec:	9006d07a 	srli	r3,r18,1
  80bff0:	2088703a 	and	r4,r4,r2
  80bff4:	200497fa 	slli	r2,r4,31
  80bff8:	9480004c 	andi	r18,r18,1
  80bffc:	1ca4b03a 	or	r18,r3,r18
  80c000:	2008d07a 	srli	r4,r4,1
  80c004:	14a4b03a 	or	r18,r2,r18
  80c008:	003ef106 	br	80bbd0 <__adddf3+0x13c>
  80c00c:	633ff844 	addi	r12,r12,-31
  80c010:	40800820 	cmpeqi	r2,r8,32
  80c014:	2318d83a 	srl	r12,r4,r12
  80c018:	1000041e 	bne	r2,zero,80c02c <__adddf3+0x598>
  80c01c:	00801004 	movi	r2,64
  80c020:	1211c83a 	sub	r8,r2,r8
  80c024:	2208983a 	sll	r4,r4,r8
  80c028:	9124b03a 	or	r18,r18,r4
  80c02c:	9024c03a 	cmpne	r18,r18,zero
  80c030:	9324b03a 	or	r18,r18,r12
  80c034:	0009883a 	mov	r4,zero
  80c038:	0023883a 	mov	r17,zero
  80c03c:	003f4e06 	br	80bd78 <__adddf3+0x2e4>
  80c040:	2cbff804 	addi	r18,r5,-32
  80c044:	29000820 	cmpeqi	r4,r5,32
  80c048:	4c84d83a 	srl	r2,r9,r18
  80c04c:	2000041e 	bne	r4,zero,80c060 <__adddf3+0x5cc>
  80c050:	01001004 	movi	r4,64
  80c054:	214bc83a 	sub	r5,r4,r5
  80c058:	4952983a 	sll	r9,r9,r5
  80c05c:	6a5ab03a 	or	r13,r13,r9
  80c060:	6824c03a 	cmpne	r18,r13,zero
  80c064:	90a4b03a 	or	r18,r18,r2
  80c068:	003eb806 	br	80bb4c <__adddf3+0xb8>
  80c06c:	1b88b03a 	or	r4,r3,r14
  80c070:	2024c03a 	cmpne	r18,r4,zero
  80c074:	6ca5c83a 	sub	r18,r13,r18
  80c078:	6c89803a 	cmpltu	r4,r13,r18
  80c07c:	4909c83a 	sub	r4,r9,r4
  80c080:	3821883a 	mov	r16,r7
  80c084:	1023883a 	mov	r17,r2
  80c088:	003eb306 	br	80bb58 <__adddf3+0xc4>
  80c08c:	1b88b03a 	or	r4,r3,r14
  80c090:	20008c26 	beq	r4,zero,80c2c4 <__adddf3+0x830>
  80c094:	293fffc4 	addi	r4,r5,-1
  80c098:	2000d326 	beq	r4,zero,80c3e8 <__adddf3+0x954>
  80c09c:	2941ffd8 	cmpnei	r5,r5,2047
  80c0a0:	28008126 	beq	r5,zero,80c2a8 <__adddf3+0x814>
  80c0a4:	200b883a 	mov	r5,r4
  80c0a8:	003f6f06 	br	80be68 <__adddf3+0x3d4>
  80c0ac:	00800804 	movi	r2,32
  80c0b0:	1145c83a 	sub	r2,r2,r5
  80c0b4:	6948d83a 	srl	r4,r13,r5
  80c0b8:	48a4983a 	sll	r18,r9,r2
  80c0bc:	6884983a 	sll	r2,r13,r2
  80c0c0:	494ad83a 	srl	r5,r9,r5
  80c0c4:	9124b03a 	or	r18,r18,r4
  80c0c8:	101ac03a 	cmpne	r13,r2,zero
  80c0cc:	9364b03a 	or	r18,r18,r13
  80c0d0:	1947883a 	add	r3,r3,r5
  80c0d4:	003f3806 	br	80bdb8 <__adddf3+0x324>
  80c0d8:	4081ffe0 	cmpeqi	r2,r8,2047
  80c0dc:	103f3e1e 	bne	r2,zero,80bdd8 <__adddf3+0x344>
  80c0e0:	7345883a 	add	r2,r14,r13
  80c0e4:	139d803a 	cmpltu	r14,r2,r14
  80c0e8:	1a49883a 	add	r4,r3,r9
  80c0ec:	2389883a 	add	r4,r4,r14
  80c0f0:	202497fa 	slli	r18,r4,31
  80c0f4:	1004d07a 	srli	r2,r2,1
  80c0f8:	2008d07a 	srli	r4,r4,1
  80c0fc:	4023883a 	mov	r17,r8
  80c100:	90a4b03a 	or	r18,r18,r2
  80c104:	003f1c06 	br	80bd78 <__adddf3+0x2e4>
  80c108:	6ba5c83a 	sub	r18,r13,r14
  80c10c:	48c9c83a 	sub	r4,r9,r3
  80c110:	6c85803a 	cmpltu	r2,r13,r18
  80c114:	20a7c83a 	sub	r19,r4,r2
  80c118:	3821883a 	mov	r16,r7
  80c11c:	003e9306 	br	80bb6c <__adddf3+0xd8>
  80c120:	58006f1e 	bne	r11,zero,80c2e0 <__adddf3+0x84c>
  80c124:	10001f1e 	bne	r2,zero,80c1a4 <__adddf3+0x710>
  80c128:	00bfffc4 	movi	r2,-1
  80c12c:	0021883a 	mov	r16,zero
  80c130:	003f4106 	br	80be38 <__adddf3+0x3a4>
  80c134:	4808977a 	slli	r4,r9,29
  80c138:	00c80034 	movhi	r3,8192
  80c13c:	18ffffc4 	addi	r3,r3,-1
  80c140:	30c4703a 	and	r2,r6,r3
  80c144:	4810d0fa 	srli	r8,r9,3
  80c148:	1104b03a 	or	r2,r2,r4
  80c14c:	3821883a 	mov	r16,r7
  80c150:	003f1006 	br	80bd94 <__adddf3+0x300>
  80c154:	7365c83a 	sub	r18,r14,r13
  80c158:	1a47c83a 	sub	r3,r3,r9
  80c15c:	7489803a 	cmpltu	r4,r14,r18
  80c160:	1909c83a 	sub	r4,r3,r4
  80c164:	04400044 	movi	r17,1
  80c168:	003e7b06 	br	80bb58 <__adddf3+0xc4>
  80c16c:	1824977a 	slli	r18,r3,29
  80c170:	01c80034 	movhi	r7,8192
  80c174:	39ffffc4 	addi	r7,r7,-1
  80c178:	21c4703a 	and	r2,r4,r7
  80c17c:	1810d0fa 	srli	r8,r3,3
  80c180:	1484b03a 	or	r2,r2,r18
  80c184:	003f0306 	br	80bd94 <__adddf3+0x300>
  80c188:	1824977a 	slli	r18,r3,29
  80c18c:	01480034 	movhi	r5,8192
  80c190:	297fffc4 	addi	r5,r5,-1
  80c194:	2144703a 	and	r2,r4,r5
  80c198:	1810d0fa 	srli	r8,r3,3
  80c19c:	1484b03a 	or	r2,r2,r18
  80c1a0:	003f2306 	br	80be30 <__adddf3+0x39c>
  80c1a4:	4806977a 	slli	r3,r9,29
  80c1a8:	00880034 	movhi	r2,8192
  80c1ac:	10bfffc4 	addi	r2,r2,-1
  80c1b0:	3084703a 	and	r2,r6,r2
  80c1b4:	4810d0fa 	srli	r8,r9,3
  80c1b8:	10c4b03a 	or	r2,r2,r3
  80c1bc:	3821883a 	mov	r16,r7
  80c1c0:	003f1b06 	br	80be30 <__adddf3+0x39c>
  80c1c4:	1b88b03a 	or	r4,r3,r14
  80c1c8:	2024c03a 	cmpne	r18,r4,zero
  80c1cc:	003f3406 	br	80bea0 <__adddf3+0x40c>
  80c1d0:	2cbff804 	addi	r18,r5,-32
  80c1d4:	29800820 	cmpeqi	r6,r5,32
  80c1d8:	1c88d83a 	srl	r4,r3,r18
  80c1dc:	3000041e 	bne	r6,zero,80c1f0 <__adddf3+0x75c>
  80c1e0:	01801004 	movi	r6,64
  80c1e4:	314bc83a 	sub	r5,r6,r5
  80c1e8:	1946983a 	sll	r3,r3,r5
  80c1ec:	70dcb03a 	or	r14,r14,r3
  80c1f0:	7024c03a 	cmpne	r18,r14,zero
  80c1f4:	9124b03a 	or	r18,r18,r4
  80c1f8:	003f9e06 	br	80c074 <__adddf3+0x5e0>
  80c1fc:	103efa1e 	bne	r2,zero,80bde8 <__adddf3+0x354>
  80c200:	4804977a 	slli	r2,r9,29
  80c204:	00c80034 	movhi	r3,8192
  80c208:	18ffffc4 	addi	r3,r3,-1
  80c20c:	30cc703a 	and	r6,r6,r3
  80c210:	4810d0fa 	srli	r8,r9,3
  80c214:	1184b03a 	or	r2,r2,r6
  80c218:	003f0506 	br	80be30 <__adddf3+0x39c>
  80c21c:	10004426 	beq	r2,zero,80c330 <__adddf3+0x89c>
  80c220:	4806977a 	slli	r3,r9,29
  80c224:	00880034 	movhi	r2,8192
  80c228:	10bfffc4 	addi	r2,r2,-1
  80c22c:	3084703a 	and	r2,r6,r2
  80c230:	4810d0fa 	srli	r8,r9,3
  80c234:	10c4b03a 	or	r2,r2,r3
  80c238:	3821883a 	mov	r16,r7
  80c23c:	003ed706 	br	80bd9c <__adddf3+0x308>
  80c240:	6ba5c83a 	sub	r18,r13,r14
  80c244:	48c7c83a 	sub	r3,r9,r3
  80c248:	6c85803a 	cmpltu	r2,r13,r18
  80c24c:	1889c83a 	sub	r4,r3,r2
  80c250:	3821883a 	mov	r16,r7
  80c254:	04400044 	movi	r17,1
  80c258:	003e3f06 	br	80bb58 <__adddf3+0xc4>
  80c25c:	180a977a 	slli	r5,r3,29
  80c260:	00880034 	movhi	r2,8192
  80c264:	10bfffc4 	addi	r2,r2,-1
  80c268:	2084703a 	and	r2,r4,r2
  80c26c:	1810d0fa 	srli	r8,r3,3
  80c270:	1144b03a 	or	r2,r2,r5
  80c274:	003eee06 	br	80be30 <__adddf3+0x39c>
  80c278:	7365c83a 	sub	r18,r14,r13
  80c27c:	7485803a 	cmpltu	r2,r14,r18
  80c280:	1a49c83a 	sub	r4,r3,r9
  80c284:	2089c83a 	sub	r4,r4,r2
  80c288:	2080202c 	andhi	r2,r4,128
  80c28c:	10002626 	beq	r2,zero,80c328 <__adddf3+0x894>
  80c290:	6ba5c83a 	sub	r18,r13,r14
  80c294:	48c7c83a 	sub	r3,r9,r3
  80c298:	6c85803a 	cmpltu	r2,r13,r18
  80c29c:	1889c83a 	sub	r4,r3,r2
  80c2a0:	3821883a 	mov	r16,r7
  80c2a4:	003e4a06 	br	80bbd0 <__adddf3+0x13c>
  80c2a8:	4806977a 	slli	r3,r9,29
  80c2ac:	00880034 	movhi	r2,8192
  80c2b0:	10bfffc4 	addi	r2,r2,-1
  80c2b4:	3084703a 	and	r2,r6,r2
  80c2b8:	4810d0fa 	srli	r8,r9,3
  80c2bc:	10c4b03a 	or	r2,r2,r3
  80c2c0:	003edb06 	br	80be30 <__adddf3+0x39c>
  80c2c4:	4806977a 	slli	r3,r9,29
  80c2c8:	00880034 	movhi	r2,8192
  80c2cc:	10bfffc4 	addi	r2,r2,-1
  80c2d0:	3084703a 	and	r2,r6,r2
  80c2d4:	4810d0fa 	srli	r8,r9,3
  80c2d8:	10c4b03a 	or	r2,r2,r3
  80c2dc:	003ead06 	br	80bd94 <__adddf3+0x300>
  80c2e0:	180a977a 	slli	r5,r3,29
  80c2e4:	1810d0fa 	srli	r8,r3,3
  80c2e8:	10002f26 	beq	r2,zero,80c3a8 <__adddf3+0x914>
  80c2ec:	00c80034 	movhi	r3,8192
  80c2f0:	18ffffc4 	addi	r3,r3,-1
  80c2f4:	20c4703a 	and	r2,r4,r3
  80c2f8:	4100022c 	andhi	r4,r8,8
  80c2fc:	1144b03a 	or	r2,r2,r5
  80c300:	203ecb26 	beq	r4,zero,80be30 <__adddf3+0x39c>
  80c304:	4808d0fa 	srli	r4,r9,3
  80c308:	2140022c 	andhi	r5,r4,8
  80c30c:	283ec81e 	bne	r5,zero,80be30 <__adddf3+0x39c>
  80c310:	4812977a 	slli	r9,r9,29
  80c314:	30c4703a 	and	r2,r6,r3
  80c318:	3821883a 	mov	r16,r7
  80c31c:	1244b03a 	or	r2,r2,r9
  80c320:	2011883a 	mov	r8,r4
  80c324:	003ec206 	br	80be30 <__adddf3+0x39c>
  80c328:	9104b03a 	or	r2,r18,r4
  80c32c:	103e921e 	bne	r2,zero,80bd78 <__adddf3+0x2e4>
  80c330:	0011883a 	mov	r8,zero
  80c334:	100b883a 	mov	r5,r2
  80c338:	0021883a 	mov	r16,zero
  80c33c:	003e9706 	br	80bd9c <__adddf3+0x308>
  80c340:	4804977a 	slli	r2,r9,29
  80c344:	00c80034 	movhi	r3,8192
  80c348:	18ffffc4 	addi	r3,r3,-1
  80c34c:	30cc703a 	and	r6,r6,r3
  80c350:	4810d0fa 	srli	r8,r9,3
  80c354:	1184b03a 	or	r2,r2,r6
  80c358:	003e9006 	br	80bd9c <__adddf3+0x308>
  80c35c:	7365883a 	add	r18,r14,r13
  80c360:	1a47883a 	add	r3,r3,r9
  80c364:	9389803a 	cmpltu	r4,r18,r14
  80c368:	1909883a 	add	r4,r3,r4
  80c36c:	2080202c 	andhi	r2,r4,128
  80c370:	103e8126 	beq	r2,zero,80bd78 <__adddf3+0x2e4>
  80c374:	00bfe034 	movhi	r2,65408
  80c378:	10bfffc4 	addi	r2,r2,-1
  80c37c:	2088703a 	and	r4,r4,r2
  80c380:	04400044 	movi	r17,1
  80c384:	003e7c06 	br	80bd78 <__adddf3+0x2e4>
  80c388:	4804977a 	slli	r2,r9,29
  80c38c:	00c80034 	movhi	r3,8192
  80c390:	18ffffc4 	addi	r3,r3,-1
  80c394:	30cc703a 	and	r6,r6,r3
  80c398:	4810d0fa 	srli	r8,r9,3
  80c39c:	1184b03a 	or	r2,r2,r6
  80c3a0:	3821883a 	mov	r16,r7
  80c3a4:	003ea206 	br	80be30 <__adddf3+0x39c>
  80c3a8:	00880034 	movhi	r2,8192
  80c3ac:	10bfffc4 	addi	r2,r2,-1
  80c3b0:	2084703a 	and	r2,r4,r2
  80c3b4:	1144b03a 	or	r2,r2,r5
  80c3b8:	003e9d06 	br	80be30 <__adddf3+0x39c>
  80c3bc:	293ff804 	addi	r4,r5,-32
  80c3c0:	29800820 	cmpeqi	r6,r5,32
  80c3c4:	1908d83a 	srl	r4,r3,r4
  80c3c8:	3000041e 	bne	r6,zero,80c3dc <__adddf3+0x948>
  80c3cc:	01801004 	movi	r6,64
  80c3d0:	314bc83a 	sub	r5,r6,r5
  80c3d4:	1946983a 	sll	r3,r3,r5
  80c3d8:	70dcb03a 	or	r14,r14,r3
  80c3dc:	7024c03a 	cmpne	r18,r14,zero
  80c3e0:	9124b03a 	or	r18,r18,r4
  80c3e4:	003eae06 	br	80bea0 <__adddf3+0x40c>
  80c3e8:	7365883a 	add	r18,r14,r13
  80c3ec:	1a47883a 	add	r3,r3,r9
  80c3f0:	9345803a 	cmpltu	r2,r18,r13
  80c3f4:	1889883a 	add	r4,r3,r2
  80c3f8:	003e5c06 	br	80bd6c <__adddf3+0x2d8>
  80c3fc:	0005883a 	mov	r2,zero
  80c400:	0141ffc4 	movi	r5,2047
  80c404:	0007883a 	mov	r3,zero
  80c408:	003e0806 	br	80bc2c <__adddf3+0x198>

0080c40c <__divdf3>:
  80c40c:	2810d53a 	srli	r8,r5,20
  80c410:	defff004 	addi	sp,sp,-64
  80c414:	dc000615 	stw	r16,24(sp)
  80c418:	04000434 	movhi	r16,16
  80c41c:	df000e15 	stw	fp,56(sp)
  80c420:	ddc00d15 	stw	r23,52(sp)
  80c424:	dd800c15 	stw	r22,48(sp)
  80c428:	dd000a15 	stw	r20,40(sp)
  80c42c:	843fffc4 	addi	r16,r16,-1
  80c430:	dfc00f15 	stw	ra,60(sp)
  80c434:	dd400b15 	stw	r21,44(sp)
  80c438:	dcc00915 	stw	r19,36(sp)
  80c43c:	dc800815 	stw	r18,32(sp)
  80c440:	dc400715 	stw	r17,28(sp)
  80c444:	4201ffcc 	andi	r8,r8,2047
  80c448:	282ed7fa 	srli	r23,r5,31
  80c44c:	3039883a 	mov	fp,r6
  80c450:	382d883a 	mov	r22,r7
  80c454:	2029883a 	mov	r20,r4
  80c458:	2c20703a 	and	r16,r5,r16
  80c45c:	40005326 	beq	r8,zero,80c5ac <__divdf3+0x1a0>
  80c460:	4081ffe0 	cmpeqi	r2,r8,2047
  80c464:	1000641e 	bne	r2,zero,80c5f8 <__divdf3+0x1ec>
  80c468:	2026d77a 	srli	r19,r4,29
  80c46c:	800a90fa 	slli	r5,r16,3
  80c470:	202890fa 	slli	r20,r4,3
  80c474:	44bf0044 	addi	r18,r8,-1023
  80c478:	994ab03a 	or	r5,r19,r5
  80c47c:	2cc02034 	orhi	r19,r5,128
  80c480:	0021883a 	mov	r16,zero
  80c484:	0023883a 	mov	r17,zero
  80c488:	b010d53a 	srli	r8,r22,20
  80c48c:	00c00434 	movhi	r3,16
  80c490:	18ffffc4 	addi	r3,r3,-1
  80c494:	4201ffcc 	andi	r8,r8,2047
  80c498:	b02ad7fa 	srli	r21,r22,31
  80c49c:	b0ec703a 	and	r22,r22,r3
  80c4a0:	40005c26 	beq	r8,zero,80c614 <__divdf3+0x208>
  80c4a4:	4081ffe0 	cmpeqi	r2,r8,2047
  80c4a8:	1000201e 	bne	r2,zero,80c52c <__divdf3+0x120>
  80c4ac:	b00690fa 	slli	r3,r22,3
  80c4b0:	e004d77a 	srli	r2,fp,29
  80c4b4:	e01490fa 	slli	r10,fp,3
  80c4b8:	423f0044 	addi	r8,r8,-1023
  80c4bc:	10c6b03a 	or	r3,r2,r3
  80c4c0:	1d802034 	orhi	r22,r3,128
  80c4c4:	9225c83a 	sub	r18,r18,r8
  80c4c8:	0007883a 	mov	r3,zero
  80c4cc:	80800428 	cmpgeui	r2,r16,16
  80c4d0:	bd52f03a 	xor	r9,r23,r21
  80c4d4:	1000a81e 	bne	r2,zero,80c778 <__divdf3+0x36c>
  80c4d8:	800c90ba 	slli	r6,r16,2
  80c4dc:	00802074 	movhi	r2,129
  80c4e0:	3085883a 	add	r2,r6,r2
  80c4e4:	10b13b17 	ldw	r2,-15124(r2)
  80c4e8:	1000683a 	jmp	r2
  80c4ec:	0080c778 	rdprs	r2,zero,797
  80c4f0:	0080c59c 	xori	r2,zero,790
  80c4f4:	0080c548 	cmpgei	r2,zero,789
  80c4f8:	0080c6c0 	call	80c6c <__alt_mem_sdram-0x77f394>
  80c4fc:	0080c548 	cmpgei	r2,zero,789
  80c500:	0080c71c 	xori	r2,zero,796
  80c504:	0080c548 	cmpgei	r2,zero,789
  80c508:	0080c6c0 	call	80c6c <__alt_mem_sdram-0x77f394>
  80c50c:	0080c59c 	xori	r2,zero,790
  80c510:	0080c59c 	xori	r2,zero,790
  80c514:	0080c71c 	xori	r2,zero,796
  80c518:	0080c6c0 	call	80c6c <__alt_mem_sdram-0x77f394>
  80c51c:	0080c658 	cmpnei	r2,zero,793
  80c520:	0080c658 	cmpnei	r2,zero,793
  80c524:	0080c658 	cmpnei	r2,zero,793
  80c528:	0080c734 	movhi	r2,796
  80c52c:	b714b03a 	or	r10,r22,fp
  80c530:	94be0044 	addi	r18,r18,-2047
  80c534:	5000671e 	bne	r10,zero,80c6d4 <__divdf3+0x2c8>
  80c538:	84000094 	ori	r16,r16,2
  80c53c:	002d883a 	mov	r22,zero
  80c540:	00c00084 	movi	r3,2
  80c544:	003fe106 	br	80c4cc <__divdf3+0xc0>
  80c548:	0007883a 	mov	r3,zero
  80c54c:	000b883a 	mov	r5,zero
  80c550:	0029883a 	mov	r20,zero
  80c554:	1806953a 	slli	r3,r3,20
  80c558:	4a403fcc 	andi	r9,r9,255
  80c55c:	481297fa 	slli	r9,r9,31
  80c560:	1946b03a 	or	r3,r3,r5
  80c564:	a005883a 	mov	r2,r20
  80c568:	1a46b03a 	or	r3,r3,r9
  80c56c:	dfc00f17 	ldw	ra,60(sp)
  80c570:	df000e17 	ldw	fp,56(sp)
  80c574:	ddc00d17 	ldw	r23,52(sp)
  80c578:	dd800c17 	ldw	r22,48(sp)
  80c57c:	dd400b17 	ldw	r21,44(sp)
  80c580:	dd000a17 	ldw	r20,40(sp)
  80c584:	dcc00917 	ldw	r19,36(sp)
  80c588:	dc800817 	ldw	r18,32(sp)
  80c58c:	dc400717 	ldw	r17,28(sp)
  80c590:	dc000617 	ldw	r16,24(sp)
  80c594:	dec01004 	addi	sp,sp,64
  80c598:	f800283a 	ret
  80c59c:	00c1ffc4 	movi	r3,2047
  80c5a0:	000b883a 	mov	r5,zero
  80c5a4:	0029883a 	mov	r20,zero
  80c5a8:	003fea06 	br	80c554 <__divdf3+0x148>
  80c5ac:	2426b03a 	or	r19,r4,r16
  80c5b0:	2023883a 	mov	r17,r4
  80c5b4:	98004f26 	beq	r19,zero,80c6f4 <__divdf3+0x2e8>
  80c5b8:	80017b26 	beq	r16,zero,80cba8 <__divdf3+0x79c>
  80c5bc:	8009883a 	mov	r4,r16
  80c5c0:	08014b80 	call	8014b8 <__clzsi2>
  80c5c4:	113ffd44 	addi	r4,r2,-11
  80c5c8:	00c00744 	movi	r3,29
  80c5cc:	14fffe04 	addi	r19,r2,-8
  80c5d0:	1907c83a 	sub	r3,r3,r4
  80c5d4:	84ca983a 	sll	r5,r16,r19
  80c5d8:	88c6d83a 	srl	r3,r17,r3
  80c5dc:	8ce8983a 	sll	r20,r17,r19
  80c5e0:	1966b03a 	or	r19,r3,r5
  80c5e4:	023f0344 	movi	r8,-1011
  80c5e8:	40a5c83a 	sub	r18,r8,r2
  80c5ec:	0021883a 	mov	r16,zero
  80c5f0:	0023883a 	mov	r17,zero
  80c5f4:	003fa406 	br	80c488 <__divdf3+0x7c>
  80c5f8:	2426b03a 	or	r19,r4,r16
  80c5fc:	9800421e 	bne	r19,zero,80c708 <__divdf3+0x2fc>
  80c600:	0029883a 	mov	r20,zero
  80c604:	04000204 	movi	r16,8
  80c608:	0481ffc4 	movi	r18,2047
  80c60c:	04400084 	movi	r17,2
  80c610:	003f9d06 	br	80c488 <__divdf3+0x7c>
  80c614:	b714b03a 	or	r10,r22,fp
  80c618:	50003226 	beq	r10,zero,80c6e4 <__divdf3+0x2d8>
  80c61c:	b0016c26 	beq	r22,zero,80cbd0 <__divdf3+0x7c4>
  80c620:	b009883a 	mov	r4,r22
  80c624:	08014b80 	call	8014b8 <__clzsi2>
  80c628:	117ffd44 	addi	r5,r2,-11
  80c62c:	01000744 	movi	r4,29
  80c630:	12bffe04 	addi	r10,r2,-8
  80c634:	2149c83a 	sub	r4,r4,r5
  80c638:	b286983a 	sll	r3,r22,r10
  80c63c:	e108d83a 	srl	r4,fp,r4
  80c640:	e294983a 	sll	r10,fp,r10
  80c644:	20ecb03a 	or	r22,r4,r3
  80c648:	1491883a 	add	r8,r2,r18
  80c64c:	4480fcc4 	addi	r18,r8,1011
  80c650:	0007883a 	mov	r3,zero
  80c654:	003f9d06 	br	80c4cc <__divdf3+0xc0>
  80c658:	b813883a 	mov	r9,r23
  80c65c:	888000a0 	cmpeqi	r2,r17,2
  80c660:	103fce1e 	bne	r2,zero,80c59c <__divdf3+0x190>
  80c664:	888000e0 	cmpeqi	r2,r17,3
  80c668:	1001ac1e 	bne	r2,zero,80cd1c <__divdf3+0x910>
  80c66c:	88800060 	cmpeqi	r2,r17,1
  80c670:	103fb51e 	bne	r2,zero,80c548 <__divdf3+0x13c>
  80c674:	9440ffc4 	addi	r17,r18,1023
  80c678:	04411c0e 	bge	zero,r17,80caec <__divdf3+0x6e0>
  80c67c:	a08001cc 	andi	r2,r20,7
  80c680:	1001831e 	bne	r2,zero,80cc90 <__divdf3+0x884>
  80c684:	a008d0fa 	srli	r4,r20,3
  80c688:	9880402c 	andhi	r2,r19,256
  80c68c:	10000426 	beq	r2,zero,80c6a0 <__divdf3+0x294>
  80c690:	00bfc034 	movhi	r2,65280
  80c694:	10bfffc4 	addi	r2,r2,-1
  80c698:	98a6703a 	and	r19,r19,r2
  80c69c:	94410004 	addi	r17,r18,1024
  80c6a0:	8881ffc8 	cmpgei	r2,r17,2047
  80c6a4:	103fbd1e 	bne	r2,zero,80c59c <__divdf3+0x190>
  80c6a8:	9828977a 	slli	r20,r19,29
  80c6ac:	980a927a 	slli	r5,r19,9
  80c6b0:	88c1ffcc 	andi	r3,r17,2047
  80c6b4:	a128b03a 	or	r20,r20,r4
  80c6b8:	280ad33a 	srli	r5,r5,12
  80c6bc:	003fa506 	br	80c554 <__divdf3+0x148>
  80c6c0:	a813883a 	mov	r9,r21
  80c6c4:	b027883a 	mov	r19,r22
  80c6c8:	5029883a 	mov	r20,r10
  80c6cc:	1823883a 	mov	r17,r3
  80c6d0:	003fe206 	br	80c65c <__divdf3+0x250>
  80c6d4:	840000d4 	ori	r16,r16,3
  80c6d8:	e015883a 	mov	r10,fp
  80c6dc:	00c000c4 	movi	r3,3
  80c6e0:	003f7a06 	br	80c4cc <__divdf3+0xc0>
  80c6e4:	84000054 	ori	r16,r16,1
  80c6e8:	002d883a 	mov	r22,zero
  80c6ec:	00c00044 	movi	r3,1
  80c6f0:	003f7606 	br	80c4cc <__divdf3+0xc0>
  80c6f4:	0029883a 	mov	r20,zero
  80c6f8:	04000104 	movi	r16,4
  80c6fc:	0025883a 	mov	r18,zero
  80c700:	04400044 	movi	r17,1
  80c704:	003f6006 	br	80c488 <__divdf3+0x7c>
  80c708:	8027883a 	mov	r19,r16
  80c70c:	0481ffc4 	movi	r18,2047
  80c710:	04000304 	movi	r16,12
  80c714:	044000c4 	movi	r17,3
  80c718:	003f5b06 	br	80c488 <__divdf3+0x7c>
  80c71c:	01400434 	movhi	r5,16
  80c720:	0013883a 	mov	r9,zero
  80c724:	297fffc4 	addi	r5,r5,-1
  80c728:	053fffc4 	movi	r20,-1
  80c72c:	00c1ffc4 	movi	r3,2047
  80c730:	003f8806 	br	80c554 <__divdf3+0x148>
  80c734:	9880022c 	andhi	r2,r19,8
  80c738:	10000926 	beq	r2,zero,80c760 <__divdf3+0x354>
  80c73c:	b080022c 	andhi	r2,r22,8
  80c740:	1000071e 	bne	r2,zero,80c760 <__divdf3+0x354>
  80c744:	00800434 	movhi	r2,16
  80c748:	b1400234 	orhi	r5,r22,8
  80c74c:	10bfffc4 	addi	r2,r2,-1
  80c750:	288a703a 	and	r5,r5,r2
  80c754:	a813883a 	mov	r9,r21
  80c758:	5029883a 	mov	r20,r10
  80c75c:	003ff306 	br	80c72c <__divdf3+0x320>
  80c760:	00800434 	movhi	r2,16
  80c764:	99400234 	orhi	r5,r19,8
  80c768:	10bfffc4 	addi	r2,r2,-1
  80c76c:	288a703a 	and	r5,r5,r2
  80c770:	b813883a 	mov	r9,r23
  80c774:	003fed06 	br	80c72c <__divdf3+0x320>
  80c778:	b4c10536 	bltu	r22,r19,80cb90 <__divdf3+0x784>
  80c77c:	b4c10326 	beq	r22,r19,80cb8c <__divdf3+0x780>
  80c780:	94bfffc4 	addi	r18,r18,-1
  80c784:	a039883a 	mov	fp,r20
  80c788:	9821883a 	mov	r16,r19
  80c78c:	0023883a 	mov	r17,zero
  80c790:	b006923a 	slli	r3,r22,8
  80c794:	502cd63a 	srli	r22,r10,24
  80c798:	8009883a 	mov	r4,r16
  80c79c:	182ed43a 	srli	r23,r3,16
  80c7a0:	b0ecb03a 	or	r22,r22,r3
  80c7a4:	da400015 	stw	r9,0(sp)
  80c7a8:	b80b883a 	mov	r5,r23
  80c7ac:	502a923a 	slli	r21,r10,8
  80c7b0:	b53fffcc 	andi	r20,r22,65535
  80c7b4:	080b9d40 	call	80b9d4 <__udivsi3>
  80c7b8:	100b883a 	mov	r5,r2
  80c7bc:	a009883a 	mov	r4,r20
  80c7c0:	1027883a 	mov	r19,r2
  80c7c4:	080150c0 	call	80150c <__mulsi3>
  80c7c8:	8009883a 	mov	r4,r16
  80c7cc:	b80b883a 	mov	r5,r23
  80c7d0:	1021883a 	mov	r16,r2
  80c7d4:	080ba380 	call	80ba38 <__umodsi3>
  80c7d8:	1004943a 	slli	r2,r2,16
  80c7dc:	e008d43a 	srli	r4,fp,16
  80c7e0:	da400017 	ldw	r9,0(sp)
  80c7e4:	2088b03a 	or	r4,r4,r2
  80c7e8:	2400042e 	bgeu	r4,r16,80c7fc <__divdf3+0x3f0>
  80c7ec:	2589883a 	add	r4,r4,r22
  80c7f0:	98bfffc4 	addi	r2,r19,-1
  80c7f4:	2581082e 	bgeu	r4,r22,80cc18 <__divdf3+0x80c>
  80c7f8:	1027883a 	mov	r19,r2
  80c7fc:	2421c83a 	sub	r16,r4,r16
  80c800:	b80b883a 	mov	r5,r23
  80c804:	8009883a 	mov	r4,r16
  80c808:	da400215 	stw	r9,8(sp)
  80c80c:	080b9d40 	call	80b9d4 <__udivsi3>
  80c810:	100b883a 	mov	r5,r2
  80c814:	a009883a 	mov	r4,r20
  80c818:	d8800115 	stw	r2,4(sp)
  80c81c:	080150c0 	call	80150c <__mulsi3>
  80c820:	b80b883a 	mov	r5,r23
  80c824:	8009883a 	mov	r4,r16
  80c828:	d8800015 	stw	r2,0(sp)
  80c82c:	080ba380 	call	80ba38 <__umodsi3>
  80c830:	100c943a 	slli	r6,r2,16
  80c834:	d8c00017 	ldw	r3,0(sp)
  80c838:	e73fffcc 	andi	fp,fp,65535
  80c83c:	e18cb03a 	or	r6,fp,r6
  80c840:	d9c00117 	ldw	r7,4(sp)
  80c844:	da400217 	ldw	r9,8(sp)
  80c848:	30c0042e 	bgeu	r6,r3,80c85c <__divdf3+0x450>
  80c84c:	358d883a 	add	r6,r6,r22
  80c850:	38bfffc4 	addi	r2,r7,-1
  80c854:	3580ec2e 	bgeu	r6,r22,80cc08 <__divdf3+0x7fc>
  80c858:	100f883a 	mov	r7,r2
  80c85c:	9826943a 	slli	r19,r19,16
  80c860:	af3fffcc 	andi	fp,r21,65535
  80c864:	30c7c83a 	sub	r3,r6,r3
  80c868:	99e6b03a 	or	r19,r19,r7
  80c86c:	980ed43a 	srli	r7,r19,16
  80c870:	9abfffcc 	andi	r10,r19,65535
  80c874:	5009883a 	mov	r4,r10
  80c878:	e00b883a 	mov	r5,fp
  80c87c:	da400515 	stw	r9,20(sp)
  80c880:	d8c00315 	stw	r3,12(sp)
  80c884:	da800415 	stw	r10,16(sp)
  80c888:	d9c00015 	stw	r7,0(sp)
  80c88c:	080150c0 	call	80150c <__mulsi3>
  80c890:	d9c00017 	ldw	r7,0(sp)
  80c894:	e00b883a 	mov	r5,fp
  80c898:	d8800215 	stw	r2,8(sp)
  80c89c:	3809883a 	mov	r4,r7
  80c8a0:	080150c0 	call	80150c <__mulsi3>
  80c8a4:	d9c00017 	ldw	r7,0(sp)
  80c8a8:	a820d43a 	srli	r16,r21,16
  80c8ac:	d8800115 	stw	r2,4(sp)
  80c8b0:	3809883a 	mov	r4,r7
  80c8b4:	800b883a 	mov	r5,r16
  80c8b8:	080150c0 	call	80150c <__mulsi3>
  80c8bc:	da800417 	ldw	r10,16(sp)
  80c8c0:	8009883a 	mov	r4,r16
  80c8c4:	d8800015 	stw	r2,0(sp)
  80c8c8:	500b883a 	mov	r5,r10
  80c8cc:	080150c0 	call	80150c <__mulsi3>
  80c8d0:	d9800217 	ldw	r6,8(sp)
  80c8d4:	d9c00117 	ldw	r7,4(sp)
  80c8d8:	da000017 	ldw	r8,0(sp)
  80c8dc:	3008d43a 	srli	r4,r6,16
  80c8e0:	11c5883a 	add	r2,r2,r7
  80c8e4:	d8c00317 	ldw	r3,12(sp)
  80c8e8:	2089883a 	add	r4,r4,r2
  80c8ec:	da400517 	ldw	r9,20(sp)
  80c8f0:	21c0022e 	bgeu	r4,r7,80c8fc <__divdf3+0x4f0>
  80c8f4:	00800074 	movhi	r2,1
  80c8f8:	4091883a 	add	r8,r8,r2
  80c8fc:	200ad43a 	srli	r5,r4,16
  80c900:	2008943a 	slli	r4,r4,16
  80c904:	31bfffcc 	andi	r6,r6,65535
  80c908:	2a0b883a 	add	r5,r5,r8
  80c90c:	218d883a 	add	r6,r4,r6
  80c910:	19409436 	bltu	r3,r5,80cb64 <__divdf3+0x758>
  80c914:	19409226 	beq	r3,r5,80cb60 <__divdf3+0x754>
  80c918:	898dc83a 	sub	r6,r17,r6
  80c91c:	89a3803a 	cmpltu	r17,r17,r6
  80c920:	1947c83a 	sub	r3,r3,r5
  80c924:	1c47c83a 	sub	r3,r3,r17
  80c928:	9440ffc4 	addi	r17,r18,1023
  80c92c:	b0c0d326 	beq	r22,r3,80cc7c <__divdf3+0x870>
  80c930:	1809883a 	mov	r4,r3
  80c934:	b80b883a 	mov	r5,r23
  80c938:	d9800315 	stw	r6,12(sp)
  80c93c:	da400215 	stw	r9,8(sp)
  80c940:	d8c00015 	stw	r3,0(sp)
  80c944:	080b9d40 	call	80b9d4 <__udivsi3>
  80c948:	100b883a 	mov	r5,r2
  80c94c:	a009883a 	mov	r4,r20
  80c950:	d8800115 	stw	r2,4(sp)
  80c954:	080150c0 	call	80150c <__mulsi3>
  80c958:	d8c00017 	ldw	r3,0(sp)
  80c95c:	b80b883a 	mov	r5,r23
  80c960:	d8800015 	stw	r2,0(sp)
  80c964:	1809883a 	mov	r4,r3
  80c968:	080ba380 	call	80ba38 <__umodsi3>
  80c96c:	d9800317 	ldw	r6,12(sp)
  80c970:	1006943a 	slli	r3,r2,16
  80c974:	da000017 	ldw	r8,0(sp)
  80c978:	3008d43a 	srli	r4,r6,16
  80c97c:	d9c00117 	ldw	r7,4(sp)
  80c980:	da400217 	ldw	r9,8(sp)
  80c984:	20c6b03a 	or	r3,r4,r3
  80c988:	1a00062e 	bgeu	r3,r8,80c9a4 <__divdf3+0x598>
  80c98c:	1d87883a 	add	r3,r3,r22
  80c990:	38bfffc4 	addi	r2,r7,-1
  80c994:	1d80c836 	bltu	r3,r22,80ccb8 <__divdf3+0x8ac>
  80c998:	1a00c72e 	bgeu	r3,r8,80ccb8 <__divdf3+0x8ac>
  80c99c:	39ffff84 	addi	r7,r7,-2
  80c9a0:	1d87883a 	add	r3,r3,r22
  80c9a4:	1a07c83a 	sub	r3,r3,r8
  80c9a8:	1809883a 	mov	r4,r3
  80c9ac:	b80b883a 	mov	r5,r23
  80c9b0:	d9800415 	stw	r6,16(sp)
  80c9b4:	da400315 	stw	r9,12(sp)
  80c9b8:	d9c00215 	stw	r7,8(sp)
  80c9bc:	d8c00115 	stw	r3,4(sp)
  80c9c0:	080b9d40 	call	80b9d4 <__udivsi3>
  80c9c4:	100b883a 	mov	r5,r2
  80c9c8:	a009883a 	mov	r4,r20
  80c9cc:	d8800015 	stw	r2,0(sp)
  80c9d0:	080150c0 	call	80150c <__mulsi3>
  80c9d4:	d8c00117 	ldw	r3,4(sp)
  80c9d8:	b80b883a 	mov	r5,r23
  80c9dc:	102f883a 	mov	r23,r2
  80c9e0:	1809883a 	mov	r4,r3
  80c9e4:	080ba380 	call	80ba38 <__umodsi3>
  80c9e8:	d9800417 	ldw	r6,16(sp)
  80c9ec:	1004943a 	slli	r2,r2,16
  80c9f0:	da000017 	ldw	r8,0(sp)
  80c9f4:	31bfffcc 	andi	r6,r6,65535
  80c9f8:	308cb03a 	or	r6,r6,r2
  80c9fc:	d9c00217 	ldw	r7,8(sp)
  80ca00:	da400317 	ldw	r9,12(sp)
  80ca04:	35c0062e 	bgeu	r6,r23,80ca20 <__divdf3+0x614>
  80ca08:	358d883a 	add	r6,r6,r22
  80ca0c:	40bfffc4 	addi	r2,r8,-1
  80ca10:	3580a736 	bltu	r6,r22,80ccb0 <__divdf3+0x8a4>
  80ca14:	35c0a62e 	bgeu	r6,r23,80ccb0 <__divdf3+0x8a4>
  80ca18:	423fff84 	addi	r8,r8,-2
  80ca1c:	358d883a 	add	r6,r6,r22
  80ca20:	3828943a 	slli	r20,r7,16
  80ca24:	35d5c83a 	sub	r10,r6,r23
  80ca28:	e009883a 	mov	r4,fp
  80ca2c:	a228b03a 	or	r20,r20,r8
  80ca30:	a1ffffcc 	andi	r7,r20,65535
  80ca34:	a02ed43a 	srli	r23,r20,16
  80ca38:	380b883a 	mov	r5,r7
  80ca3c:	da400315 	stw	r9,12(sp)
  80ca40:	da800215 	stw	r10,8(sp)
  80ca44:	d9c00115 	stw	r7,4(sp)
  80ca48:	080150c0 	call	80150c <__mulsi3>
  80ca4c:	e00b883a 	mov	r5,fp
  80ca50:	b809883a 	mov	r4,r23
  80ca54:	1039883a 	mov	fp,r2
  80ca58:	080150c0 	call	80150c <__mulsi3>
  80ca5c:	8009883a 	mov	r4,r16
  80ca60:	b80b883a 	mov	r5,r23
  80ca64:	d8800015 	stw	r2,0(sp)
  80ca68:	080150c0 	call	80150c <__mulsi3>
  80ca6c:	d9c00117 	ldw	r7,4(sp)
  80ca70:	8009883a 	mov	r4,r16
  80ca74:	1021883a 	mov	r16,r2
  80ca78:	380b883a 	mov	r5,r7
  80ca7c:	080150c0 	call	80150c <__mulsi3>
  80ca80:	d9800017 	ldw	r6,0(sp)
  80ca84:	e006d43a 	srli	r3,fp,16
  80ca88:	da800217 	ldw	r10,8(sp)
  80ca8c:	1185883a 	add	r2,r2,r6
  80ca90:	1887883a 	add	r3,r3,r2
  80ca94:	da400317 	ldw	r9,12(sp)
  80ca98:	1980022e 	bgeu	r3,r6,80caa4 <__divdf3+0x698>
  80ca9c:	00800074 	movhi	r2,1
  80caa0:	80a1883a 	add	r16,r16,r2
  80caa4:	1808d43a 	srli	r4,r3,16
  80caa8:	1806943a 	slli	r3,r3,16
  80caac:	e73fffcc 	andi	fp,fp,65535
  80cab0:	2409883a 	add	r4,r4,r16
  80cab4:	1f07883a 	add	r3,r3,fp
  80cab8:	51000436 	bltu	r10,r4,80cacc <__divdf3+0x6c0>
  80cabc:	51000226 	beq	r10,r4,80cac8 <__divdf3+0x6bc>
  80cac0:	a5000054 	ori	r20,r20,1
  80cac4:	003eec06 	br	80c678 <__divdf3+0x26c>
  80cac8:	183eeb26 	beq	r3,zero,80c678 <__divdf3+0x26c>
  80cacc:	b28d883a 	add	r6,r22,r10
  80cad0:	a0bfffc4 	addi	r2,r20,-1
  80cad4:	35806536 	bltu	r6,r22,80cc6c <__divdf3+0x860>
  80cad8:	31008036 	bltu	r6,r4,80ccdc <__divdf3+0x8d0>
  80cadc:	31009426 	beq	r6,r4,80cd30 <__divdf3+0x924>
  80cae0:	1029883a 	mov	r20,r2
  80cae4:	003ff606 	br	80cac0 <__divdf3+0x6b4>
  80cae8:	053fffc4 	movi	r20,-1
  80caec:	01400044 	movi	r5,1
  80caf0:	2c4bc83a 	sub	r5,r5,r17
  80caf4:	28800e48 	cmpgei	r2,r5,57
  80caf8:	103e931e 	bne	r2,zero,80c548 <__divdf3+0x13c>
  80cafc:	28800808 	cmpgei	r2,r5,32
  80cb00:	1000491e 	bne	r2,zero,80cc28 <__divdf3+0x81c>
  80cb04:	92010784 	addi	r8,r18,1054
  80cb08:	9a04983a 	sll	r2,r19,r8
  80cb0c:	a146d83a 	srl	r3,r20,r5
  80cb10:	a210983a 	sll	r8,r20,r8
  80cb14:	994ad83a 	srl	r5,r19,r5
  80cb18:	10e8b03a 	or	r20,r2,r3
  80cb1c:	4010c03a 	cmpne	r8,r8,zero
  80cb20:	a228b03a 	or	r20,r20,r8
  80cb24:	a08001cc 	andi	r2,r20,7
  80cb28:	10000726 	beq	r2,zero,80cb48 <__divdf3+0x73c>
  80cb2c:	a08003cc 	andi	r2,r20,15
  80cb30:	10800120 	cmpeqi	r2,r2,4
  80cb34:	1000041e 	bne	r2,zero,80cb48 <__divdf3+0x73c>
  80cb38:	a0800104 	addi	r2,r20,4
  80cb3c:	1529803a 	cmpltu	r20,r2,r20
  80cb40:	2d0b883a 	add	r5,r5,r20
  80cb44:	1029883a 	mov	r20,r2
  80cb48:	2880202c 	andhi	r2,r5,128
  80cb4c:	10006f26 	beq	r2,zero,80cd0c <__divdf3+0x900>
  80cb50:	00c00044 	movi	r3,1
  80cb54:	000b883a 	mov	r5,zero
  80cb58:	0029883a 	mov	r20,zero
  80cb5c:	003e7d06 	br	80c554 <__divdf3+0x148>
  80cb60:	89bf6d2e 	bgeu	r17,r6,80c918 <__divdf3+0x50c>
  80cb64:	8d63883a 	add	r17,r17,r21
  80cb68:	8d45803a 	cmpltu	r2,r17,r21
  80cb6c:	1585883a 	add	r2,r2,r22
  80cb70:	1887883a 	add	r3,r3,r2
  80cb74:	98bfffc4 	addi	r2,r19,-1
  80cb78:	b0c0202e 	bgeu	r22,r3,80cbfc <__divdf3+0x7f0>
  80cb7c:	19405136 	bltu	r3,r5,80ccc4 <__divdf3+0x8b8>
  80cb80:	28c04f26 	beq	r5,r3,80ccc0 <__divdf3+0x8b4>
  80cb84:	1027883a 	mov	r19,r2
  80cb88:	003f6306 	br	80c918 <__divdf3+0x50c>
  80cb8c:	a2befc36 	bltu	r20,r10,80c780 <__divdf3+0x374>
  80cb90:	983897fa 	slli	fp,r19,31
  80cb94:	a004d07a 	srli	r2,r20,1
  80cb98:	9820d07a 	srli	r16,r19,1
  80cb9c:	a02297fa 	slli	r17,r20,31
  80cba0:	e0b8b03a 	or	fp,fp,r2
  80cba4:	003efa06 	br	80c790 <__divdf3+0x384>
  80cba8:	08014b80 	call	8014b8 <__clzsi2>
  80cbac:	11000544 	addi	r4,r2,21
  80cbb0:	20c00748 	cmpgei	r3,r4,29
  80cbb4:	100b883a 	mov	r5,r2
  80cbb8:	10800804 	addi	r2,r2,32
  80cbbc:	183e8226 	beq	r3,zero,80c5c8 <__divdf3+0x1bc>
  80cbc0:	297ffe04 	addi	r5,r5,-8
  80cbc4:	a166983a 	sll	r19,r20,r5
  80cbc8:	0029883a 	mov	r20,zero
  80cbcc:	003e8506 	br	80c5e4 <__divdf3+0x1d8>
  80cbd0:	e009883a 	mov	r4,fp
  80cbd4:	08014b80 	call	8014b8 <__clzsi2>
  80cbd8:	11400544 	addi	r5,r2,21
  80cbdc:	29000748 	cmpgei	r4,r5,29
  80cbe0:	1007883a 	mov	r3,r2
  80cbe4:	10800804 	addi	r2,r2,32
  80cbe8:	203e9026 	beq	r4,zero,80c62c <__divdf3+0x220>
  80cbec:	18fffe04 	addi	r3,r3,-8
  80cbf0:	e0ec983a 	sll	r22,fp,r3
  80cbf4:	0015883a 	mov	r10,zero
  80cbf8:	003e9306 	br	80c648 <__divdf3+0x23c>
  80cbfc:	b0ffe11e 	bne	r22,r3,80cb84 <__divdf3+0x778>
  80cc00:	8d7fe036 	bltu	r17,r21,80cb84 <__divdf3+0x778>
  80cc04:	003fdd06 	br	80cb7c <__divdf3+0x770>
  80cc08:	30ff132e 	bgeu	r6,r3,80c858 <__divdf3+0x44c>
  80cc0c:	39ffff84 	addi	r7,r7,-2
  80cc10:	358d883a 	add	r6,r6,r22
  80cc14:	003f1106 	br	80c85c <__divdf3+0x450>
  80cc18:	243ef72e 	bgeu	r4,r16,80c7f8 <__divdf3+0x3ec>
  80cc1c:	9cffff84 	addi	r19,r19,-2
  80cc20:	2589883a 	add	r4,r4,r22
  80cc24:	003ef506 	br	80c7fc <__divdf3+0x3f0>
  80cc28:	00fff844 	movi	r3,-31
  80cc2c:	1c47c83a 	sub	r3,r3,r17
  80cc30:	29400820 	cmpeqi	r5,r5,32
  80cc34:	98c6d83a 	srl	r3,r19,r3
  80cc38:	2800031e 	bne	r5,zero,80cc48 <__divdf3+0x83c>
  80cc3c:	91410f84 	addi	r5,r18,1086
  80cc40:	994a983a 	sll	r5,r19,r5
  80cc44:	a168b03a 	or	r20,r20,r5
  80cc48:	a028c03a 	cmpne	r20,r20,zero
  80cc4c:	a0e8b03a 	or	r20,r20,r3
  80cc50:	a4c001cc 	andi	r19,r20,7
  80cc54:	9800291e 	bne	r19,zero,80ccfc <__divdf3+0x8f0>
  80cc58:	000b883a 	mov	r5,zero
  80cc5c:	a028d0fa 	srli	r20,r20,3
  80cc60:	0007883a 	mov	r3,zero
  80cc64:	a4e8b03a 	or	r20,r20,r19
  80cc68:	003e3a06 	br	80c554 <__divdf3+0x148>
  80cc6c:	1029883a 	mov	r20,r2
  80cc70:	313f931e 	bne	r6,r4,80cac0 <__divdf3+0x6b4>
  80cc74:	1d7f921e 	bne	r3,r21,80cac0 <__divdf3+0x6b4>
  80cc78:	003e7f06 	br	80c678 <__divdf3+0x26c>
  80cc7c:	047f9a0e 	bge	zero,r17,80cae8 <__divdf3+0x6dc>
  80cc80:	0009883a 	mov	r4,zero
  80cc84:	05000044 	movi	r20,1
  80cc88:	9d27883a 	add	r19,r19,r20
  80cc8c:	003e7e06 	br	80c688 <__divdf3+0x27c>
  80cc90:	a08003cc 	andi	r2,r20,15
  80cc94:	10800118 	cmpnei	r2,r2,4
  80cc98:	103e7a26 	beq	r2,zero,80c684 <__divdf3+0x278>
  80cc9c:	a1000104 	addi	r4,r20,4
  80cca0:	00bffec4 	movi	r2,-5
  80cca4:	2008d0fa 	srli	r4,r4,3
  80cca8:	1529803a 	cmpltu	r20,r2,r20
  80ccac:	003ff606 	br	80cc88 <__divdf3+0x87c>
  80ccb0:	1011883a 	mov	r8,r2
  80ccb4:	003f5a06 	br	80ca20 <__divdf3+0x614>
  80ccb8:	100f883a 	mov	r7,r2
  80ccbc:	003f3906 	br	80c9a4 <__divdf3+0x598>
  80ccc0:	89bfb02e 	bgeu	r17,r6,80cb84 <__divdf3+0x778>
  80ccc4:	8d63883a 	add	r17,r17,r21
  80ccc8:	8d45803a 	cmpltu	r2,r17,r21
  80cccc:	1585883a 	add	r2,r2,r22
  80ccd0:	9cffff84 	addi	r19,r19,-2
  80ccd4:	1887883a 	add	r3,r3,r2
  80ccd8:	003f0f06 	br	80c918 <__divdf3+0x50c>
  80ccdc:	ad45883a 	add	r2,r21,r21
  80cce0:	156b803a 	cmpltu	r21,r2,r21
  80cce4:	adad883a 	add	r22,r21,r22
  80cce8:	358d883a 	add	r6,r6,r22
  80ccec:	a53fff84 	addi	r20,r20,-2
  80ccf0:	102b883a 	mov	r21,r2
  80ccf4:	313fdf26 	beq	r6,r4,80cc74 <__divdf3+0x868>
  80ccf8:	003f7106 	br	80cac0 <__divdf3+0x6b4>
  80ccfc:	a08003cc 	andi	r2,r20,15
  80cd00:	10800118 	cmpnei	r2,r2,4
  80cd04:	000b883a 	mov	r5,zero
  80cd08:	103f8b1e 	bne	r2,zero,80cb38 <__divdf3+0x72c>
  80cd0c:	2804927a 	slli	r2,r5,9
  80cd10:	2826977a 	slli	r19,r5,29
  80cd14:	100ad33a 	srli	r5,r2,12
  80cd18:	003fd006 	br	80cc5c <__divdf3+0x850>
  80cd1c:	00800434 	movhi	r2,16
  80cd20:	99400234 	orhi	r5,r19,8
  80cd24:	10bfffc4 	addi	r2,r2,-1
  80cd28:	288a703a 	and	r5,r5,r2
  80cd2c:	003e7f06 	br	80c72c <__divdf3+0x320>
  80cd30:	a8ffea36 	bltu	r21,r3,80ccdc <__divdf3+0x8d0>
  80cd34:	1029883a 	mov	r20,r2
  80cd38:	1d7f611e 	bne	r3,r21,80cac0 <__divdf3+0x6b4>
  80cd3c:	003e4e06 	br	80c678 <__divdf3+0x26c>

0080cd40 <__eqdf2>:
  80cd40:	2810d53a 	srli	r8,r5,20
  80cd44:	3806d53a 	srli	r3,r7,20
  80cd48:	00800434 	movhi	r2,16
  80cd4c:	4201ffcc 	andi	r8,r8,2047
  80cd50:	10bfffc4 	addi	r2,r2,-1
  80cd54:	4241ffd8 	cmpnei	r9,r8,2047
  80cd58:	2814d7fa 	srli	r10,r5,31
  80cd5c:	3816d7fa 	srli	r11,r7,31
  80cd60:	288a703a 	and	r5,r5,r2
  80cd64:	388e703a 	and	r7,r7,r2
  80cd68:	1881ffcc 	andi	r2,r3,2047
  80cd6c:	48000626 	beq	r9,zero,80cd88 <__eqdf2+0x48>
  80cd70:	10c1ffe0 	cmpeqi	r3,r2,2047
  80cd74:	1800021e 	bne	r3,zero,80cd80 <__eqdf2+0x40>
  80cd78:	4080011e 	bne	r8,r2,80cd80 <__eqdf2+0x40>
  80cd7c:	29c00826 	beq	r5,r7,80cda0 <__eqdf2+0x60>
  80cd80:	00800044 	movi	r2,1
  80cd84:	f800283a 	ret
  80cd88:	2906b03a 	or	r3,r5,r4
  80cd8c:	183ffc1e 	bne	r3,zero,80cd80 <__eqdf2+0x40>
  80cd90:	1081ffd8 	cmpnei	r2,r2,2047
  80cd94:	103ffa1e 	bne	r2,zero,80cd80 <__eqdf2+0x40>
  80cd98:	398eb03a 	or	r7,r7,r6
  80cd9c:	383ff81e 	bne	r7,zero,80cd80 <__eqdf2+0x40>
  80cda0:	21bff71e 	bne	r4,r6,80cd80 <__eqdf2+0x40>
  80cda4:	52c00426 	beq	r10,r11,80cdb8 <__eqdf2+0x78>
  80cda8:	403ff51e 	bne	r8,zero,80cd80 <__eqdf2+0x40>
  80cdac:	290ab03a 	or	r5,r5,r4
  80cdb0:	2804c03a 	cmpne	r2,r5,zero
  80cdb4:	f800283a 	ret
  80cdb8:	0005883a 	mov	r2,zero
  80cdbc:	f800283a 	ret

0080cdc0 <__gedf2>:
  80cdc0:	2810d53a 	srli	r8,r5,20
  80cdc4:	3812d53a 	srli	r9,r7,20
  80cdc8:	00c00434 	movhi	r3,16
  80cdcc:	4201ffcc 	andi	r8,r8,2047
  80cdd0:	18ffffc4 	addi	r3,r3,-1
  80cdd4:	4281ffd8 	cmpnei	r10,r8,2047
  80cdd8:	2816d7fa 	srli	r11,r5,31
  80cddc:	3804d7fa 	srli	r2,r7,31
  80cde0:	28ca703a 	and	r5,r5,r3
  80cde4:	38ce703a 	and	r7,r7,r3
  80cde8:	48c1ffcc 	andi	r3,r9,2047
  80cdec:	50000b26 	beq	r10,zero,80ce1c <__gedf2+0x5c>
  80cdf0:	1a41ffd8 	cmpnei	r9,r3,2047
  80cdf4:	48000d26 	beq	r9,zero,80ce2c <__gedf2+0x6c>
  80cdf8:	4000191e 	bne	r8,zero,80ce60 <__gedf2+0xa0>
  80cdfc:	2914b03a 	or	r10,r5,r4
  80ce00:	5013003a 	cmpeq	r9,r10,zero
  80ce04:	1800131e 	bne	r3,zero,80ce54 <__gedf2+0x94>
  80ce08:	3998b03a 	or	r12,r7,r6
  80ce0c:	6000111e 	bne	r12,zero,80ce54 <__gedf2+0x94>
  80ce10:	50000a1e 	bne	r10,zero,80ce3c <__gedf2+0x7c>
  80ce14:	0005883a 	mov	r2,zero
  80ce18:	f800283a 	ret
  80ce1c:	2912b03a 	or	r9,r5,r4
  80ce20:	48001e1e 	bne	r9,zero,80ce9c <__gedf2+0xdc>
  80ce24:	1a41ffe0 	cmpeqi	r9,r3,2047
  80ce28:	48000d26 	beq	r9,zero,80ce60 <__gedf2+0xa0>
  80ce2c:	3992b03a 	or	r9,r7,r6
  80ce30:	48001a1e 	bne	r9,zero,80ce9c <__gedf2+0xdc>
  80ce34:	40000526 	beq	r8,zero,80ce4c <__gedf2+0x8c>
  80ce38:	58800d26 	beq	r11,r2,80ce70 <__gedf2+0xb0>
  80ce3c:	00800044 	movi	r2,1
  80ce40:	58000626 	beq	r11,zero,80ce5c <__gedf2+0x9c>
  80ce44:	00bfffc4 	movi	r2,-1
  80ce48:	f800283a 	ret
  80ce4c:	2912b03a 	or	r9,r5,r4
  80ce50:	4813003a 	cmpeq	r9,r9,zero
  80ce54:	483ff826 	beq	r9,zero,80ce38 <__gedf2+0x78>
  80ce58:	103ffa26 	beq	r2,zero,80ce44 <__gedf2+0x84>
  80ce5c:	f800283a 	ret
  80ce60:	183ff51e 	bne	r3,zero,80ce38 <__gedf2+0x78>
  80ce64:	3992b03a 	or	r9,r7,r6
  80ce68:	483ff31e 	bne	r9,zero,80ce38 <__gedf2+0x78>
  80ce6c:	003ff306 	br	80ce3c <__gedf2+0x7c>
  80ce70:	1a000716 	blt	r3,r8,80ce90 <__gedf2+0xd0>
  80ce74:	40fff816 	blt	r8,r3,80ce58 <__gedf2+0x98>
  80ce78:	397ff036 	bltu	r7,r5,80ce3c <__gedf2+0x7c>
  80ce7c:	29c00926 	beq	r5,r7,80cea4 <__gedf2+0xe4>
  80ce80:	29ffe42e 	bgeu	r5,r7,80ce14 <__gedf2+0x54>
  80ce84:	583fef26 	beq	r11,zero,80ce44 <__gedf2+0x84>
  80ce88:	5805883a 	mov	r2,r11
  80ce8c:	f800283a 	ret
  80ce90:	103fec1e 	bne	r2,zero,80ce44 <__gedf2+0x84>
  80ce94:	00800044 	movi	r2,1
  80ce98:	f800283a 	ret
  80ce9c:	00bfff84 	movi	r2,-2
  80cea0:	f800283a 	ret
  80cea4:	313fe536 	bltu	r6,r4,80ce3c <__gedf2+0x7c>
  80cea8:	21bfda2e 	bgeu	r4,r6,80ce14 <__gedf2+0x54>
  80ceac:	003ff506 	br	80ce84 <__gedf2+0xc4>

0080ceb0 <__ledf2>:
  80ceb0:	2810d53a 	srli	r8,r5,20
  80ceb4:	3812d53a 	srli	r9,r7,20
  80ceb8:	00c00434 	movhi	r3,16
  80cebc:	4201ffcc 	andi	r8,r8,2047
  80cec0:	18ffffc4 	addi	r3,r3,-1
  80cec4:	4281ffd8 	cmpnei	r10,r8,2047
  80cec8:	2816d7fa 	srli	r11,r5,31
  80cecc:	3804d7fa 	srli	r2,r7,31
  80ced0:	28ca703a 	and	r5,r5,r3
  80ced4:	38ce703a 	and	r7,r7,r3
  80ced8:	48c1ffcc 	andi	r3,r9,2047
  80cedc:	50000b26 	beq	r10,zero,80cf0c <__ledf2+0x5c>
  80cee0:	1a41ffd8 	cmpnei	r9,r3,2047
  80cee4:	48000d26 	beq	r9,zero,80cf1c <__ledf2+0x6c>
  80cee8:	40001b1e 	bne	r8,zero,80cf58 <__ledf2+0xa8>
  80ceec:	2914b03a 	or	r10,r5,r4
  80cef0:	5013003a 	cmpeq	r9,r10,zero
  80cef4:	18000e1e 	bne	r3,zero,80cf30 <__ledf2+0x80>
  80cef8:	3998b03a 	or	r12,r7,r6
  80cefc:	60000c1e 	bne	r12,zero,80cf30 <__ledf2+0x80>
  80cf00:	50000d1e 	bne	r10,zero,80cf38 <__ledf2+0x88>
  80cf04:	0005883a 	mov	r2,zero
  80cf08:	f800283a 	ret
  80cf0c:	2912b03a 	or	r9,r5,r4
  80cf10:	48000d1e 	bne	r9,zero,80cf48 <__ledf2+0x98>
  80cf14:	1a41ffe0 	cmpeqi	r9,r3,2047
  80cf18:	48000f26 	beq	r9,zero,80cf58 <__ledf2+0xa8>
  80cf1c:	3992b03a 	or	r9,r7,r6
  80cf20:	4800091e 	bne	r9,zero,80cf48 <__ledf2+0x98>
  80cf24:	4000031e 	bne	r8,zero,80cf34 <__ledf2+0x84>
  80cf28:	2912b03a 	or	r9,r5,r4
  80cf2c:	4813003a 	cmpeq	r9,r9,zero
  80cf30:	4800071e 	bne	r9,zero,80cf50 <__ledf2+0xa0>
  80cf34:	58800c26 	beq	r11,r2,80cf68 <__ledf2+0xb8>
  80cf38:	00800044 	movi	r2,1
  80cf3c:	58000526 	beq	r11,zero,80cf54 <__ledf2+0xa4>
  80cf40:	00bfffc4 	movi	r2,-1
  80cf44:	f800283a 	ret
  80cf48:	00800084 	movi	r2,2
  80cf4c:	f800283a 	ret
  80cf50:	103ffb26 	beq	r2,zero,80cf40 <__ledf2+0x90>
  80cf54:	f800283a 	ret
  80cf58:	183ff61e 	bne	r3,zero,80cf34 <__ledf2+0x84>
  80cf5c:	3992b03a 	or	r9,r7,r6
  80cf60:	483ff41e 	bne	r9,zero,80cf34 <__ledf2+0x84>
  80cf64:	003ff406 	br	80cf38 <__ledf2+0x88>
  80cf68:	1a00030e 	bge	r3,r8,80cf78 <__ledf2+0xc8>
  80cf6c:	103ff41e 	bne	r2,zero,80cf40 <__ledf2+0x90>
  80cf70:	00800044 	movi	r2,1
  80cf74:	f800283a 	ret
  80cf78:	40fff516 	blt	r8,r3,80cf50 <__ledf2+0xa0>
  80cf7c:	397fee36 	bltu	r7,r5,80cf38 <__ledf2+0x88>
  80cf80:	29c00426 	beq	r5,r7,80cf94 <__ledf2+0xe4>
  80cf84:	29ffdf2e 	bgeu	r5,r7,80cf04 <__ledf2+0x54>
  80cf88:	583fed26 	beq	r11,zero,80cf40 <__ledf2+0x90>
  80cf8c:	5805883a 	mov	r2,r11
  80cf90:	f800283a 	ret
  80cf94:	313fe836 	bltu	r6,r4,80cf38 <__ledf2+0x88>
  80cf98:	21bfda2e 	bgeu	r4,r6,80cf04 <__ledf2+0x54>
  80cf9c:	003ffa06 	br	80cf88 <__ledf2+0xd8>

0080cfa0 <__muldf3>:
  80cfa0:	2810d53a 	srli	r8,r5,20
  80cfa4:	defff004 	addi	sp,sp,-64
  80cfa8:	00800434 	movhi	r2,16
  80cfac:	df000e15 	stw	fp,56(sp)
  80cfb0:	dd000a15 	stw	r20,40(sp)
  80cfb4:	dcc00915 	stw	r19,36(sp)
  80cfb8:	dc400715 	stw	r17,28(sp)
  80cfbc:	10bfffc4 	addi	r2,r2,-1
  80cfc0:	dfc00f15 	stw	ra,60(sp)
  80cfc4:	ddc00d15 	stw	r23,52(sp)
  80cfc8:	dd800c15 	stw	r22,48(sp)
  80cfcc:	dd400b15 	stw	r21,44(sp)
  80cfd0:	dc800815 	stw	r18,32(sp)
  80cfd4:	dc000615 	stw	r16,24(sp)
  80cfd8:	4201ffcc 	andi	r8,r8,2047
  80cfdc:	2828d7fa 	srli	r20,r5,31
  80cfe0:	2023883a 	mov	r17,r4
  80cfe4:	3039883a 	mov	fp,r6
  80cfe8:	28a6703a 	and	r19,r5,r2
  80cfec:	40005a26 	beq	r8,zero,80d158 <__muldf3+0x1b8>
  80cff0:	4081ffe0 	cmpeqi	r2,r8,2047
  80cff4:	10006c1e 	bne	r2,zero,80d1a8 <__muldf3+0x208>
  80cff8:	980a90fa 	slli	r5,r19,3
  80cffc:	2026d77a 	srli	r19,r4,29
  80d000:	202490fa 	slli	r18,r4,3
  80d004:	423f0044 	addi	r8,r8,-1023
  80d008:	9966b03a 	or	r19,r19,r5
  80d00c:	9cc02034 	orhi	r19,r19,128
  80d010:	002b883a 	mov	r21,zero
  80d014:	002d883a 	mov	r22,zero
  80d018:	3804d53a 	srli	r2,r7,20
  80d01c:	00c00434 	movhi	r3,16
  80d020:	18ffffc4 	addi	r3,r3,-1
  80d024:	1081ffcc 	andi	r2,r2,2047
  80d028:	382ed7fa 	srli	r23,r7,31
  80d02c:	38e0703a 	and	r16,r7,r3
  80d030:	10006426 	beq	r2,zero,80d1c4 <__muldf3+0x224>
  80d034:	10c1ffe0 	cmpeqi	r3,r2,2047
  80d038:	1800211e 	bne	r3,zero,80d0c0 <__muldf3+0x120>
  80d03c:	e008d77a 	srli	r4,fp,29
  80d040:	802090fa 	slli	r16,r16,3
  80d044:	e02290fa 	slli	r17,fp,3
  80d048:	10bf0044 	addi	r2,r2,-1023
  80d04c:	2420b03a 	or	r16,r4,r16
  80d050:	84002034 	orhi	r16,r16,128
  80d054:	4091883a 	add	r8,r8,r2
  80d058:	0009883a 	mov	r4,zero
  80d05c:	a8800428 	cmpgeui	r2,r21,16
  80d060:	a5ccf03a 	xor	r6,r20,r23
  80d064:	41c00044 	addi	r7,r8,1
  80d068:	10006d1e 	bne	r2,zero,80d220 <__muldf3+0x280>
  80d06c:	a80490ba 	slli	r2,r21,2
  80d070:	00c02074 	movhi	r3,129
  80d074:	10c7883a 	add	r3,r2,r3
  80d078:	18b42017 	ldw	r2,-12160(r3)
  80d07c:	1000683a 	jmp	r2
  80d080:	0080d220 	cmpeqi	r2,zero,840
  80d084:	0080d0e0 	cmpeqi	r2,zero,835
  80d088:	0080d0e0 	cmpeqi	r2,zero,835
  80d08c:	0080d0dc 	xori	r2,zero,835
  80d090:	0080d0ec 	andhi	r2,zero,835
  80d094:	0080d0ec 	andhi	r2,zero,835
  80d098:	0080d59c 	xori	r2,zero,854
  80d09c:	0080d0dc 	xori	r2,zero,835
  80d0a0:	0080d0ec 	andhi	r2,zero,835
  80d0a4:	0080d59c 	xori	r2,zero,854
  80d0a8:	0080d0ec 	andhi	r2,zero,835
  80d0ac:	0080d0dc 	xori	r2,zero,835
  80d0b0:	0080d54c 	andi	r2,zero,853
  80d0b4:	0080d54c 	andi	r2,zero,853
  80d0b8:	0080d54c 	andi	r2,zero,853
  80d0bc:	0080d628 	cmpgeui	r2,zero,856
  80d0c0:	e422b03a 	or	r17,fp,r16
  80d0c4:	4201ffc4 	addi	r8,r8,2047
  80d0c8:	8801221e 	bne	r17,zero,80d554 <__muldf3+0x5b4>
  80d0cc:	ad400094 	ori	r21,r21,2
  80d0d0:	0021883a 	mov	r16,zero
  80d0d4:	01000084 	movi	r4,2
  80d0d8:	003fe006 	br	80d05c <__muldf3+0xbc>
  80d0dc:	b80d883a 	mov	r6,r23
  80d0e0:	8027883a 	mov	r19,r16
  80d0e4:	8825883a 	mov	r18,r17
  80d0e8:	202d883a 	mov	r22,r4
  80d0ec:	b08000a0 	cmpeqi	r2,r22,2
  80d0f0:	1000471e 	bne	r2,zero,80d210 <__muldf3+0x270>
  80d0f4:	b08000e0 	cmpeqi	r2,r22,3
  80d0f8:	10018e1e 	bne	r2,zero,80d734 <__muldf3+0x794>
  80d0fc:	b0800060 	cmpeqi	r2,r22,1
  80d100:	1000f826 	beq	r2,zero,80d4e4 <__muldf3+0x544>
  80d104:	0007883a 	mov	r3,zero
  80d108:	0027883a 	mov	r19,zero
  80d10c:	0025883a 	mov	r18,zero
  80d110:	1806953a 	slli	r3,r3,20
  80d114:	31803fcc 	andi	r6,r6,255
  80d118:	300c97fa 	slli	r6,r6,31
  80d11c:	1cc6b03a 	or	r3,r3,r19
  80d120:	9005883a 	mov	r2,r18
  80d124:	1986b03a 	or	r3,r3,r6
  80d128:	dfc00f17 	ldw	ra,60(sp)
  80d12c:	df000e17 	ldw	fp,56(sp)
  80d130:	ddc00d17 	ldw	r23,52(sp)
  80d134:	dd800c17 	ldw	r22,48(sp)
  80d138:	dd400b17 	ldw	r21,44(sp)
  80d13c:	dd000a17 	ldw	r20,40(sp)
  80d140:	dcc00917 	ldw	r19,36(sp)
  80d144:	dc800817 	ldw	r18,32(sp)
  80d148:	dc400717 	ldw	r17,28(sp)
  80d14c:	dc000617 	ldw	r16,24(sp)
  80d150:	dec01004 	addi	sp,sp,64
  80d154:	f800283a 	ret
  80d158:	9924b03a 	or	r18,r19,r4
  80d15c:	90010a26 	beq	r18,zero,80d588 <__muldf3+0x5e8>
  80d160:	d9c00015 	stw	r7,0(sp)
  80d164:	98014d26 	beq	r19,zero,80d69c <__muldf3+0x6fc>
  80d168:	9809883a 	mov	r4,r19
  80d16c:	08014b80 	call	8014b8 <__clzsi2>
  80d170:	d9c00017 	ldw	r7,0(sp)
  80d174:	113ffd44 	addi	r4,r2,-11
  80d178:	00c00744 	movi	r3,29
  80d17c:	14bffe04 	addi	r18,r2,-8
  80d180:	1907c83a 	sub	r3,r3,r4
  80d184:	9ca6983a 	sll	r19,r19,r18
  80d188:	88c6d83a 	srl	r3,r17,r3
  80d18c:	8ca4983a 	sll	r18,r17,r18
  80d190:	1ce6b03a 	or	r19,r3,r19
  80d194:	023f0344 	movi	r8,-1011
  80d198:	4091c83a 	sub	r8,r8,r2
  80d19c:	002b883a 	mov	r21,zero
  80d1a0:	002d883a 	mov	r22,zero
  80d1a4:	003f9c06 	br	80d018 <__muldf3+0x78>
  80d1a8:	9924b03a 	or	r18,r19,r4
  80d1ac:	9000f11e 	bne	r18,zero,80d574 <__muldf3+0x5d4>
  80d1b0:	0027883a 	mov	r19,zero
  80d1b4:	05400204 	movi	r21,8
  80d1b8:	0201ffc4 	movi	r8,2047
  80d1bc:	05800084 	movi	r22,2
  80d1c0:	003f9506 	br	80d018 <__muldf3+0x78>
  80d1c4:	e422b03a 	or	r17,fp,r16
  80d1c8:	8800e626 	beq	r17,zero,80d564 <__muldf3+0x5c4>
  80d1cc:	da000015 	stw	r8,0(sp)
  80d1d0:	80012626 	beq	r16,zero,80d66c <__muldf3+0x6cc>
  80d1d4:	8009883a 	mov	r4,r16
  80d1d8:	08014b80 	call	8014b8 <__clzsi2>
  80d1dc:	da000017 	ldw	r8,0(sp)
  80d1e0:	117ffd44 	addi	r5,r2,-11
  80d1e4:	01000744 	movi	r4,29
  80d1e8:	147ffe04 	addi	r17,r2,-8
  80d1ec:	2149c83a 	sub	r4,r4,r5
  80d1f0:	8460983a 	sll	r16,r16,r17
  80d1f4:	e108d83a 	srl	r4,fp,r4
  80d1f8:	e462983a 	sll	r17,fp,r17
  80d1fc:	2420b03a 	or	r16,r4,r16
  80d200:	4091c83a 	sub	r8,r8,r2
  80d204:	423f0344 	addi	r8,r8,-1011
  80d208:	0009883a 	mov	r4,zero
  80d20c:	003f9306 	br	80d05c <__muldf3+0xbc>
  80d210:	00c1ffc4 	movi	r3,2047
  80d214:	0027883a 	mov	r19,zero
  80d218:	0025883a 	mov	r18,zero
  80d21c:	003fbc06 	br	80d110 <__muldf3+0x170>
  80d220:	9028d43a 	srli	r20,r18,16
  80d224:	8f3fffcc 	andi	fp,r17,65535
  80d228:	957fffcc 	andi	r21,r18,65535
  80d22c:	a80b883a 	mov	r5,r21
  80d230:	e009883a 	mov	r4,fp
  80d234:	d9800315 	stw	r6,12(sp)
  80d238:	da000215 	stw	r8,8(sp)
  80d23c:	d9c00115 	stw	r7,4(sp)
  80d240:	8822d43a 	srli	r17,r17,16
  80d244:	080150c0 	call	80150c <__mulsi3>
  80d248:	e00b883a 	mov	r5,fp
  80d24c:	a009883a 	mov	r4,r20
  80d250:	102d883a 	mov	r22,r2
  80d254:	080150c0 	call	80150c <__mulsi3>
  80d258:	880b883a 	mov	r5,r17
  80d25c:	a009883a 	mov	r4,r20
  80d260:	102f883a 	mov	r23,r2
  80d264:	080150c0 	call	80150c <__mulsi3>
  80d268:	a80b883a 	mov	r5,r21
  80d26c:	8809883a 	mov	r4,r17
  80d270:	d8800015 	stw	r2,0(sp)
  80d274:	080150c0 	call	80150c <__mulsi3>
  80d278:	b006d43a 	srli	r3,r22,16
  80d27c:	15e5883a 	add	r18,r2,r23
  80d280:	d9c00117 	ldw	r7,4(sp)
  80d284:	1c87883a 	add	r3,r3,r18
  80d288:	da000217 	ldw	r8,8(sp)
  80d28c:	d9800317 	ldw	r6,12(sp)
  80d290:	1dc0042e 	bgeu	r3,r23,80d2a4 <__muldf3+0x304>
  80d294:	d9000017 	ldw	r4,0(sp)
  80d298:	00800074 	movhi	r2,1
  80d29c:	2085883a 	add	r2,r4,r2
  80d2a0:	d8800015 	stw	r2,0(sp)
  80d2a4:	1804943a 	slli	r2,r3,16
  80d2a8:	85ffffcc 	andi	r23,r16,65535
  80d2ac:	b5bfffcc 	andi	r22,r22,65535
  80d2b0:	1585883a 	add	r2,r2,r22
  80d2b4:	a80b883a 	mov	r5,r21
  80d2b8:	b809883a 	mov	r4,r23
  80d2bc:	1824d43a 	srli	r18,r3,16
  80d2c0:	d9800515 	stw	r6,20(sp)
  80d2c4:	da000415 	stw	r8,16(sp)
  80d2c8:	d9c00315 	stw	r7,12(sp)
  80d2cc:	8020d43a 	srli	r16,r16,16
  80d2d0:	d8800115 	stw	r2,4(sp)
  80d2d4:	080150c0 	call	80150c <__mulsi3>
  80d2d8:	a009883a 	mov	r4,r20
  80d2dc:	b80b883a 	mov	r5,r23
  80d2e0:	d8800215 	stw	r2,8(sp)
  80d2e4:	080150c0 	call	80150c <__mulsi3>
  80d2e8:	a009883a 	mov	r4,r20
  80d2ec:	800b883a 	mov	r5,r16
  80d2f0:	102d883a 	mov	r22,r2
  80d2f4:	080150c0 	call	80150c <__mulsi3>
  80d2f8:	a80b883a 	mov	r5,r21
  80d2fc:	8009883a 	mov	r4,r16
  80d300:	1029883a 	mov	r20,r2
  80d304:	080150c0 	call	80150c <__mulsi3>
  80d308:	da800217 	ldw	r10,8(sp)
  80d30c:	1585883a 	add	r2,r2,r22
  80d310:	d9c00317 	ldw	r7,12(sp)
  80d314:	5006d43a 	srli	r3,r10,16
  80d318:	da000417 	ldw	r8,16(sp)
  80d31c:	d9800517 	ldw	r6,20(sp)
  80d320:	1887883a 	add	r3,r3,r2
  80d324:	1d80022e 	bgeu	r3,r22,80d330 <__muldf3+0x390>
  80d328:	00800074 	movhi	r2,1
  80d32c:	a0a9883a 	add	r20,r20,r2
  80d330:	1804d43a 	srli	r2,r3,16
  80d334:	1806943a 	slli	r3,r3,16
  80d338:	982cd43a 	srli	r22,r19,16
  80d33c:	9d7fffcc 	andi	r21,r19,65535
  80d340:	e009883a 	mov	r4,fp
  80d344:	54ffffcc 	andi	r19,r10,65535
  80d348:	a80b883a 	mov	r5,r21
  80d34c:	1ce7883a 	add	r19,r3,r19
  80d350:	d9800515 	stw	r6,20(sp)
  80d354:	da000415 	stw	r8,16(sp)
  80d358:	d9c00315 	stw	r7,12(sp)
  80d35c:	1529883a 	add	r20,r2,r20
  80d360:	080150c0 	call	80150c <__mulsi3>
  80d364:	e00b883a 	mov	r5,fp
  80d368:	b009883a 	mov	r4,r22
  80d36c:	d8800215 	stw	r2,8(sp)
  80d370:	080150c0 	call	80150c <__mulsi3>
  80d374:	8809883a 	mov	r4,r17
  80d378:	b00b883a 	mov	r5,r22
  80d37c:	1039883a 	mov	fp,r2
  80d380:	080150c0 	call	80150c <__mulsi3>
  80d384:	8809883a 	mov	r4,r17
  80d388:	a80b883a 	mov	r5,r21
  80d38c:	1023883a 	mov	r17,r2
  80d390:	080150c0 	call	80150c <__mulsi3>
  80d394:	d8c00217 	ldw	r3,8(sp)
  80d398:	1705883a 	add	r2,r2,fp
  80d39c:	d9c00317 	ldw	r7,12(sp)
  80d3a0:	1808d43a 	srli	r4,r3,16
  80d3a4:	da000417 	ldw	r8,16(sp)
  80d3a8:	d9800517 	ldw	r6,20(sp)
  80d3ac:	2089883a 	add	r4,r4,r2
  80d3b0:	94e5883a 	add	r18,r18,r19
  80d3b4:	2700022e 	bgeu	r4,fp,80d3c0 <__muldf3+0x420>
  80d3b8:	00800074 	movhi	r2,1
  80d3bc:	88a3883a 	add	r17,r17,r2
  80d3c0:	2004d43a 	srli	r2,r4,16
  80d3c4:	2038943a 	slli	fp,r4,16
  80d3c8:	18ffffcc 	andi	r3,r3,65535
  80d3cc:	b809883a 	mov	r4,r23
  80d3d0:	a80b883a 	mov	r5,r21
  80d3d4:	d9800415 	stw	r6,16(sp)
  80d3d8:	da000315 	stw	r8,12(sp)
  80d3dc:	d9c00215 	stw	r7,8(sp)
  80d3e0:	e0f9883a 	add	fp,fp,r3
  80d3e4:	1463883a 	add	r17,r2,r17
  80d3e8:	080150c0 	call	80150c <__mulsi3>
  80d3ec:	b80b883a 	mov	r5,r23
  80d3f0:	b009883a 	mov	r4,r22
  80d3f4:	102f883a 	mov	r23,r2
  80d3f8:	080150c0 	call	80150c <__mulsi3>
  80d3fc:	b00b883a 	mov	r5,r22
  80d400:	8009883a 	mov	r4,r16
  80d404:	102d883a 	mov	r22,r2
  80d408:	080150c0 	call	80150c <__mulsi3>
  80d40c:	a80b883a 	mov	r5,r21
  80d410:	8009883a 	mov	r4,r16
  80d414:	1021883a 	mov	r16,r2
  80d418:	080150c0 	call	80150c <__mulsi3>
  80d41c:	b80ad43a 	srli	r5,r23,16
  80d420:	1585883a 	add	r2,r2,r22
  80d424:	d9c00217 	ldw	r7,8(sp)
  80d428:	288b883a 	add	r5,r5,r2
  80d42c:	da000317 	ldw	r8,12(sp)
  80d430:	d9800417 	ldw	r6,16(sp)
  80d434:	2d80022e 	bgeu	r5,r22,80d440 <__muldf3+0x4a0>
  80d438:	00800074 	movhi	r2,1
  80d43c:	80a1883a 	add	r16,r16,r2
  80d440:	2806943a 	slli	r3,r5,16
  80d444:	d8800017 	ldw	r2,0(sp)
  80d448:	bdffffcc 	andi	r23,r23,65535
  80d44c:	1dc7883a 	add	r3,r3,r23
  80d450:	90ab883a 	add	r21,r18,r2
  80d454:	acd5803a 	cmpltu	r10,r21,r19
  80d458:	1d07883a 	add	r3,r3,r20
  80d45c:	af2b883a 	add	r21,r21,fp
  80d460:	1a97883a 	add	r11,r3,r10
  80d464:	af09803a 	cmpltu	r4,r21,fp
  80d468:	2826d43a 	srli	r19,r5,16
  80d46c:	5c53883a 	add	r9,r11,r17
  80d470:	4905883a 	add	r2,r9,r4
  80d474:	1d29803a 	cmpltu	r20,r3,r20
  80d478:	5a95803a 	cmpltu	r10,r11,r10
  80d47c:	1109803a 	cmpltu	r4,r2,r4
  80d480:	a2a8b03a 	or	r20,r20,r10
  80d484:	4c63803a 	cmpltu	r17,r9,r17
  80d488:	a4e7883a 	add	r19,r20,r19
  80d48c:	8908b03a 	or	r4,r17,r4
  80d490:	a824927a 	slli	r18,r21,9
  80d494:	d8c00117 	ldw	r3,4(sp)
  80d498:	9927883a 	add	r19,r19,r4
  80d49c:	9c27883a 	add	r19,r19,r16
  80d4a0:	9826927a 	slli	r19,r19,9
  80d4a4:	a82ad5fa 	srli	r21,r21,23
  80d4a8:	100ad5fa 	srli	r5,r2,23
  80d4ac:	90e4b03a 	or	r18,r18,r3
  80d4b0:	1004927a 	slli	r2,r2,9
  80d4b4:	9024c03a 	cmpne	r18,r18,zero
  80d4b8:	9564b03a 	or	r18,r18,r21
  80d4bc:	98c0402c 	andhi	r3,r19,256
  80d4c0:	90a4b03a 	or	r18,r18,r2
  80d4c4:	9966b03a 	or	r19,r19,r5
  80d4c8:	18007f26 	beq	r3,zero,80d6c8 <__muldf3+0x728>
  80d4cc:	9006d07a 	srli	r3,r18,1
  80d4d0:	980497fa 	slli	r2,r19,31
  80d4d4:	9480004c 	andi	r18,r18,1
  80d4d8:	9826d07a 	srli	r19,r19,1
  80d4dc:	1c86b03a 	or	r3,r3,r18
  80d4e0:	18a4b03a 	or	r18,r3,r2
  80d4e4:	3900ffc4 	addi	r4,r7,1023
  80d4e8:	0100320e 	bge	zero,r4,80d5b4 <__muldf3+0x614>
  80d4ec:	908001cc 	andi	r2,r18,7
  80d4f0:	10000726 	beq	r2,zero,80d510 <__muldf3+0x570>
  80d4f4:	908003cc 	andi	r2,r18,15
  80d4f8:	10800120 	cmpeqi	r2,r2,4
  80d4fc:	1000041e 	bne	r2,zero,80d510 <__muldf3+0x570>
  80d500:	90800104 	addi	r2,r18,4
  80d504:	14a5803a 	cmpltu	r18,r2,r18
  80d508:	9ca7883a 	add	r19,r19,r18
  80d50c:	1025883a 	mov	r18,r2
  80d510:	9880402c 	andhi	r2,r19,256
  80d514:	10000426 	beq	r2,zero,80d528 <__muldf3+0x588>
  80d518:	00bfc034 	movhi	r2,65280
  80d51c:	10bfffc4 	addi	r2,r2,-1
  80d520:	98a6703a 	and	r19,r19,r2
  80d524:	39010004 	addi	r4,r7,1024
  80d528:	2081ffc8 	cmpgei	r2,r4,2047
  80d52c:	103f381e 	bne	r2,zero,80d210 <__muldf3+0x270>
  80d530:	9804977a 	slli	r2,r19,29
  80d534:	9024d0fa 	srli	r18,r18,3
  80d538:	9826927a 	slli	r19,r19,9
  80d53c:	20c1ffcc 	andi	r3,r4,2047
  80d540:	14a4b03a 	or	r18,r2,r18
  80d544:	9826d33a 	srli	r19,r19,12
  80d548:	003ef106 	br	80d110 <__muldf3+0x170>
  80d54c:	a00d883a 	mov	r6,r20
  80d550:	003ee606 	br	80d0ec <__muldf3+0x14c>
  80d554:	ad4000d4 	ori	r21,r21,3
  80d558:	e023883a 	mov	r17,fp
  80d55c:	010000c4 	movi	r4,3
  80d560:	003ebe06 	br	80d05c <__muldf3+0xbc>
  80d564:	ad400054 	ori	r21,r21,1
  80d568:	0021883a 	mov	r16,zero
  80d56c:	01000044 	movi	r4,1
  80d570:	003eba06 	br	80d05c <__muldf3+0xbc>
  80d574:	2025883a 	mov	r18,r4
  80d578:	05400304 	movi	r21,12
  80d57c:	0201ffc4 	movi	r8,2047
  80d580:	058000c4 	movi	r22,3
  80d584:	003ea406 	br	80d018 <__muldf3+0x78>
  80d588:	0027883a 	mov	r19,zero
  80d58c:	05400104 	movi	r21,4
  80d590:	0011883a 	mov	r8,zero
  80d594:	05800044 	movi	r22,1
  80d598:	003e9f06 	br	80d018 <__muldf3+0x78>
  80d59c:	04c00434 	movhi	r19,16
  80d5a0:	000d883a 	mov	r6,zero
  80d5a4:	9cffffc4 	addi	r19,r19,-1
  80d5a8:	04bfffc4 	movi	r18,-1
  80d5ac:	00c1ffc4 	movi	r3,2047
  80d5b0:	003ed706 	br	80d110 <__muldf3+0x170>
  80d5b4:	00800044 	movi	r2,1
  80d5b8:	1105c83a 	sub	r2,r2,r4
  80d5bc:	10c00e48 	cmpgei	r3,r2,57
  80d5c0:	183ed01e 	bne	r3,zero,80d104 <__muldf3+0x164>
  80d5c4:	10c00808 	cmpgei	r3,r2,32
  80d5c8:	1800411e 	bne	r3,zero,80d6d0 <__muldf3+0x730>
  80d5cc:	39c10784 	addi	r7,r7,1054
  80d5d0:	99c6983a 	sll	r3,r19,r7
  80d5d4:	9088d83a 	srl	r4,r18,r2
  80d5d8:	91ce983a 	sll	r7,r18,r7
  80d5dc:	98a6d83a 	srl	r19,r19,r2
  80d5e0:	1904b03a 	or	r2,r3,r4
  80d5e4:	3824c03a 	cmpne	r18,r7,zero
  80d5e8:	1484b03a 	or	r2,r2,r18
  80d5ec:	10c001cc 	andi	r3,r2,7
  80d5f0:	18000726 	beq	r3,zero,80d610 <__muldf3+0x670>
  80d5f4:	10c003cc 	andi	r3,r2,15
  80d5f8:	18c00120 	cmpeqi	r3,r3,4
  80d5fc:	1800041e 	bne	r3,zero,80d610 <__muldf3+0x670>
  80d600:	10c00104 	addi	r3,r2,4
  80d604:	1885803a 	cmpltu	r2,r3,r2
  80d608:	98a7883a 	add	r19,r19,r2
  80d60c:	1805883a 	mov	r2,r3
  80d610:	98c0202c 	andhi	r3,r19,128
  80d614:	18004326 	beq	r3,zero,80d724 <__muldf3+0x784>
  80d618:	00c00044 	movi	r3,1
  80d61c:	0027883a 	mov	r19,zero
  80d620:	0025883a 	mov	r18,zero
  80d624:	003eba06 	br	80d110 <__muldf3+0x170>
  80d628:	9880022c 	andhi	r2,r19,8
  80d62c:	10000926 	beq	r2,zero,80d654 <__muldf3+0x6b4>
  80d630:	8080022c 	andhi	r2,r16,8
  80d634:	1000071e 	bne	r2,zero,80d654 <__muldf3+0x6b4>
  80d638:	00800434 	movhi	r2,16
  80d63c:	84c00234 	orhi	r19,r16,8
  80d640:	10bfffc4 	addi	r2,r2,-1
  80d644:	98a6703a 	and	r19,r19,r2
  80d648:	b80d883a 	mov	r6,r23
  80d64c:	8825883a 	mov	r18,r17
  80d650:	003fd606 	br	80d5ac <__muldf3+0x60c>
  80d654:	00800434 	movhi	r2,16
  80d658:	9cc00234 	orhi	r19,r19,8
  80d65c:	10bfffc4 	addi	r2,r2,-1
  80d660:	98a6703a 	and	r19,r19,r2
  80d664:	a00d883a 	mov	r6,r20
  80d668:	003fd006 	br	80d5ac <__muldf3+0x60c>
  80d66c:	e009883a 	mov	r4,fp
  80d670:	08014b80 	call	8014b8 <__clzsi2>
  80d674:	11400544 	addi	r5,r2,21
  80d678:	29000748 	cmpgei	r4,r5,29
  80d67c:	1007883a 	mov	r3,r2
  80d680:	da000017 	ldw	r8,0(sp)
  80d684:	10800804 	addi	r2,r2,32
  80d688:	203ed626 	beq	r4,zero,80d1e4 <__muldf3+0x244>
  80d68c:	1c3ffe04 	addi	r16,r3,-8
  80d690:	e420983a 	sll	r16,fp,r16
  80d694:	0023883a 	mov	r17,zero
  80d698:	003ed906 	br	80d200 <__muldf3+0x260>
  80d69c:	08014b80 	call	8014b8 <__clzsi2>
  80d6a0:	11000544 	addi	r4,r2,21
  80d6a4:	21400748 	cmpgei	r5,r4,29
  80d6a8:	1007883a 	mov	r3,r2
  80d6ac:	d9c00017 	ldw	r7,0(sp)
  80d6b0:	10800804 	addi	r2,r2,32
  80d6b4:	283eb026 	beq	r5,zero,80d178 <__muldf3+0x1d8>
  80d6b8:	1cfffe04 	addi	r19,r3,-8
  80d6bc:	8ce6983a 	sll	r19,r17,r19
  80d6c0:	0025883a 	mov	r18,zero
  80d6c4:	003eb306 	br	80d194 <__muldf3+0x1f4>
  80d6c8:	400f883a 	mov	r7,r8
  80d6cc:	003f8506 	br	80d4e4 <__muldf3+0x544>
  80d6d0:	00fff844 	movi	r3,-31
  80d6d4:	1907c83a 	sub	r3,r3,r4
  80d6d8:	10800820 	cmpeqi	r2,r2,32
  80d6dc:	98c6d83a 	srl	r3,r19,r3
  80d6e0:	1000031e 	bne	r2,zero,80d6f0 <__muldf3+0x750>
  80d6e4:	39c10f84 	addi	r7,r7,1086
  80d6e8:	99e6983a 	sll	r19,r19,r7
  80d6ec:	94e4b03a 	or	r18,r18,r19
  80d6f0:	9024c03a 	cmpne	r18,r18,zero
  80d6f4:	90c4b03a 	or	r2,r18,r3
  80d6f8:	148001cc 	andi	r18,r2,7
  80d6fc:	9000051e 	bne	r18,zero,80d714 <__muldf3+0x774>
  80d700:	0027883a 	mov	r19,zero
  80d704:	1004d0fa 	srli	r2,r2,3
  80d708:	0007883a 	mov	r3,zero
  80d70c:	14a4b03a 	or	r18,r2,r18
  80d710:	003e7f06 	br	80d110 <__muldf3+0x170>
  80d714:	10c003cc 	andi	r3,r2,15
  80d718:	18c00118 	cmpnei	r3,r3,4
  80d71c:	0027883a 	mov	r19,zero
  80d720:	183fb71e 	bne	r3,zero,80d600 <__muldf3+0x660>
  80d724:	9806927a 	slli	r3,r19,9
  80d728:	9824977a 	slli	r18,r19,29
  80d72c:	1826d33a 	srli	r19,r3,12
  80d730:	003ff406 	br	80d704 <__muldf3+0x764>
  80d734:	00800434 	movhi	r2,16
  80d738:	9cc00234 	orhi	r19,r19,8
  80d73c:	10bfffc4 	addi	r2,r2,-1
  80d740:	98a6703a 	and	r19,r19,r2
  80d744:	003f9906 	br	80d5ac <__muldf3+0x60c>

0080d748 <__subdf3>:
  80d748:	00c00434 	movhi	r3,16
  80d74c:	3812d53a 	srli	r9,r7,20
  80d750:	18ffffc4 	addi	r3,r3,-1
  80d754:	defffb04 	addi	sp,sp,-20
  80d758:	28d0703a 	and	r8,r5,r3
  80d75c:	38c6703a 	and	r3,r7,r3
  80d760:	2804d7fa 	srli	r2,r5,31
  80d764:	401090fa 	slli	r8,r8,3
  80d768:	280ad53a 	srli	r5,r5,20
  80d76c:	180690fa 	slli	r3,r3,3
  80d770:	dcc00315 	stw	r19,12(sp)
  80d774:	dc400115 	stw	r17,4(sp)
  80d778:	2026d77a 	srli	r19,r4,29
  80d77c:	3022d77a 	srli	r17,r6,29
  80d780:	4b41ffcc 	andi	r13,r9,2047
  80d784:	dc800215 	stw	r18,8(sp)
  80d788:	dc000015 	stw	r16,0(sp)
  80d78c:	dfc00415 	stw	ra,16(sp)
  80d790:	6a41ffe0 	cmpeqi	r9,r13,2047
  80d794:	1025883a 	mov	r18,r2
  80d798:	201690fa 	slli	r11,r4,3
  80d79c:	380ed7fa 	srli	r7,r7,31
  80d7a0:	301490fa 	slli	r10,r6,3
  80d7a4:	2c01ffcc 	andi	r16,r5,2047
  80d7a8:	10803fcc 	andi	r2,r2,255
  80d7ac:	9a10b03a 	or	r8,r19,r8
  80d7b0:	88c6b03a 	or	r3,r17,r3
  80d7b4:	48006e1e 	bne	r9,zero,80d970 <__subdf3+0x228>
  80d7b8:	3a40005c 	xori	r9,r7,1
  80d7bc:	834bc83a 	sub	r5,r16,r13
  80d7c0:	12405726 	beq	r2,r9,80d920 <__subdf3+0x1d8>
  80d7c4:	01406f0e 	bge	zero,r5,80d984 <__subdf3+0x23c>
  80d7c8:	68007a26 	beq	r13,zero,80d9b4 <__subdf3+0x26c>
  80d7cc:	8081ffd8 	cmpnei	r2,r16,2047
  80d7d0:	10019f26 	beq	r2,zero,80de50 <__subdf3+0x708>
  80d7d4:	18c02034 	orhi	r3,r3,128
  80d7d8:	28800e48 	cmpgei	r2,r5,57
  80d7dc:	1000f91e 	bne	r2,zero,80dbc4 <__subdf3+0x47c>
  80d7e0:	28800808 	cmpgei	r2,r5,32
  80d7e4:	1001451e 	bne	r2,zero,80dcfc <__subdf3+0x5b4>
  80d7e8:	00800804 	movi	r2,32
  80d7ec:	1145c83a 	sub	r2,r2,r5
  80d7f0:	18a2983a 	sll	r17,r3,r2
  80d7f4:	5148d83a 	srl	r4,r10,r5
  80d7f8:	5084983a 	sll	r2,r10,r2
  80d7fc:	1946d83a 	srl	r3,r3,r5
  80d800:	8922b03a 	or	r17,r17,r4
  80d804:	1004c03a 	cmpne	r2,r2,zero
  80d808:	88a2b03a 	or	r17,r17,r2
  80d80c:	40d1c83a 	sub	r8,r8,r3
  80d810:	5c63c83a 	sub	r17,r11,r17
  80d814:	5c49803a 	cmpltu	r4,r11,r17
  80d818:	4109c83a 	sub	r4,r8,r4
  80d81c:	2080202c 	andhi	r2,r4,128
  80d820:	1000a526 	beq	r2,zero,80dab8 <__subdf3+0x370>
  80d824:	04c02034 	movhi	r19,128
  80d828:	9cffffc4 	addi	r19,r19,-1
  80d82c:	24e6703a 	and	r19,r4,r19
  80d830:	9800db26 	beq	r19,zero,80dba0 <__subdf3+0x458>
  80d834:	9809883a 	mov	r4,r19
  80d838:	08014b80 	call	8014b8 <__clzsi2>
  80d83c:	117ffe04 	addi	r5,r2,-8
  80d840:	01000804 	movi	r4,32
  80d844:	2149c83a 	sub	r4,r4,r5
  80d848:	8906d83a 	srl	r3,r17,r4
  80d84c:	9948983a 	sll	r4,r19,r5
  80d850:	8962983a 	sll	r17,r17,r5
  80d854:	1908b03a 	or	r4,r3,r4
  80d858:	2c00cc16 	blt	r5,r16,80db8c <__subdf3+0x444>
  80d85c:	2c0bc83a 	sub	r5,r5,r16
  80d860:	28c00044 	addi	r3,r5,1
  80d864:	18800808 	cmpgei	r2,r3,32
  80d868:	1001171e 	bne	r2,zero,80dcc8 <__subdf3+0x580>
  80d86c:	00800804 	movi	r2,32
  80d870:	10c5c83a 	sub	r2,r2,r3
  80d874:	88cad83a 	srl	r5,r17,r3
  80d878:	88a2983a 	sll	r17,r17,r2
  80d87c:	2084983a 	sll	r2,r4,r2
  80d880:	20c8d83a 	srl	r4,r4,r3
  80d884:	8822c03a 	cmpne	r17,r17,zero
  80d888:	1144b03a 	or	r2,r2,r5
  80d88c:	1462b03a 	or	r17,r2,r17
  80d890:	0021883a 	mov	r16,zero
  80d894:	888001cc 	andi	r2,r17,7
  80d898:	10000726 	beq	r2,zero,80d8b8 <__subdf3+0x170>
  80d89c:	888003cc 	andi	r2,r17,15
  80d8a0:	10800120 	cmpeqi	r2,r2,4
  80d8a4:	1000041e 	bne	r2,zero,80d8b8 <__subdf3+0x170>
  80d8a8:	88c00104 	addi	r3,r17,4
  80d8ac:	1c63803a 	cmpltu	r17,r3,r17
  80d8b0:	2449883a 	add	r4,r4,r17
  80d8b4:	1823883a 	mov	r17,r3
  80d8b8:	2080202c 	andhi	r2,r4,128
  80d8bc:	10008026 	beq	r2,zero,80dac0 <__subdf3+0x378>
  80d8c0:	81400044 	addi	r5,r16,1
  80d8c4:	2881ffe0 	cmpeqi	r2,r5,2047
  80d8c8:	2941ffcc 	andi	r5,r5,2047
  80d8cc:	1000921e 	bne	r2,zero,80db18 <__subdf3+0x3d0>
  80d8d0:	00bfe034 	movhi	r2,65408
  80d8d4:	10bfffc4 	addi	r2,r2,-1
  80d8d8:	2088703a 	and	r4,r4,r2
  80d8dc:	2006927a 	slli	r3,r4,9
  80d8e0:	8822d0fa 	srli	r17,r17,3
  80d8e4:	2004977a 	slli	r2,r4,29
  80d8e8:	1806d33a 	srli	r3,r3,12
  80d8ec:	1444b03a 	or	r2,r2,r17
  80d8f0:	280a953a 	slli	r5,r5,20
  80d8f4:	94803fcc 	andi	r18,r18,255
  80d8f8:	902497fa 	slli	r18,r18,31
  80d8fc:	28c6b03a 	or	r3,r5,r3
  80d900:	1c86b03a 	or	r3,r3,r18
  80d904:	dfc00417 	ldw	ra,16(sp)
  80d908:	dcc00317 	ldw	r19,12(sp)
  80d90c:	dc800217 	ldw	r18,8(sp)
  80d910:	dc400117 	ldw	r17,4(sp)
  80d914:	dc000017 	ldw	r16,0(sp)
  80d918:	dec00504 	addi	sp,sp,20
  80d91c:	f800283a 	ret
  80d920:	01402e0e 	bge	zero,r5,80d9dc <__subdf3+0x294>
  80d924:	68005526 	beq	r13,zero,80da7c <__subdf3+0x334>
  80d928:	8081ffd8 	cmpnei	r2,r16,2047
  80d92c:	10013b26 	beq	r2,zero,80de1c <__subdf3+0x6d4>
  80d930:	18c02034 	orhi	r3,r3,128
  80d934:	28800e48 	cmpgei	r2,r5,57
  80d938:	10006d1e 	bne	r2,zero,80daf0 <__subdf3+0x3a8>
  80d93c:	28800808 	cmpgei	r2,r5,32
  80d940:	10010826 	beq	r2,zero,80dd64 <__subdf3+0x61c>
  80d944:	2c7ff804 	addi	r17,r5,-32
  80d948:	29000820 	cmpeqi	r4,r5,32
  80d94c:	1c44d83a 	srl	r2,r3,r17
  80d950:	2000041e 	bne	r4,zero,80d964 <__subdf3+0x21c>
  80d954:	01001004 	movi	r4,64
  80d958:	214bc83a 	sub	r5,r4,r5
  80d95c:	1946983a 	sll	r3,r3,r5
  80d960:	50d4b03a 	or	r10,r10,r3
  80d964:	5022c03a 	cmpne	r17,r10,zero
  80d968:	88a2b03a 	or	r17,r17,r2
  80d96c:	00006206 	br	80daf8 <__subdf3+0x3b0>
  80d970:	1a98b03a 	or	r12,r3,r10
  80d974:	817e0044 	addi	r5,r16,-2047
  80d978:	6000161e 	bne	r12,zero,80d9d4 <__subdf3+0x28c>
  80d97c:	3a40005c 	xori	r9,r7,1
  80d980:	12401626 	beq	r2,r9,80d9dc <__subdf3+0x294>
  80d984:	28002e26 	beq	r5,zero,80da40 <__subdf3+0x2f8>
  80d988:	6c0bc83a 	sub	r5,r13,r16
  80d98c:	4825883a 	mov	r18,r9
  80d990:	80009e1e 	bne	r16,zero,80dc0c <__subdf3+0x4c4>
  80d994:	42c4b03a 	or	r2,r8,r11
  80d998:	10010926 	beq	r2,zero,80ddc0 <__subdf3+0x678>
  80d99c:	28bfffc4 	addi	r2,r5,-1
  80d9a0:	10016826 	beq	r2,zero,80df44 <__subdf3+0x7fc>
  80d9a4:	2941ffd8 	cmpnei	r5,r5,2047
  80d9a8:	28015f26 	beq	r5,zero,80df28 <__subdf3+0x7e0>
  80d9ac:	100b883a 	mov	r5,r2
  80d9b0:	00009906 	br	80dc18 <__subdf3+0x4d0>
  80d9b4:	1a84b03a 	or	r2,r3,r10
  80d9b8:	1000b126 	beq	r2,zero,80dc80 <__subdf3+0x538>
  80d9bc:	28bfffc4 	addi	r2,r5,-1
  80d9c0:	10011d26 	beq	r2,zero,80de38 <__subdf3+0x6f0>
  80d9c4:	2941ffd8 	cmpnei	r5,r5,2047
  80d9c8:	28011426 	beq	r5,zero,80de1c <__subdf3+0x6d4>
  80d9cc:	100b883a 	mov	r5,r2
  80d9d0:	003f8106 	br	80d7d8 <__subdf3+0x90>
  80d9d4:	3a403fcc 	andi	r9,r7,255
  80d9d8:	11ffea1e 	bne	r2,r7,80d984 <__subdf3+0x23c>
  80d9dc:	28007c26 	beq	r5,zero,80dbd0 <__subdf3+0x488>
  80d9e0:	6c0bc83a 	sub	r5,r13,r16
  80d9e4:	8000d726 	beq	r16,zero,80dd44 <__subdf3+0x5fc>
  80d9e8:	6881ffd8 	cmpnei	r2,r13,2047
  80d9ec:	10012626 	beq	r2,zero,80de88 <__subdf3+0x740>
  80d9f0:	42002034 	orhi	r8,r8,128
  80d9f4:	28800e48 	cmpgei	r2,r5,57
  80d9f8:	10012a1e 	bne	r2,zero,80dea4 <__subdf3+0x75c>
  80d9fc:	28800808 	cmpgei	r2,r5,32
  80da00:	1001821e 	bne	r2,zero,80e00c <__subdf3+0x8c4>
  80da04:	00800804 	movi	r2,32
  80da08:	1145c83a 	sub	r2,r2,r5
  80da0c:	40a2983a 	sll	r17,r8,r2
  80da10:	5948d83a 	srl	r4,r11,r5
  80da14:	5884983a 	sll	r2,r11,r2
  80da18:	4150d83a 	srl	r8,r8,r5
  80da1c:	8922b03a 	or	r17,r17,r4
  80da20:	1004c03a 	cmpne	r2,r2,zero
  80da24:	88a2b03a 	or	r17,r17,r2
  80da28:	1a07883a 	add	r3,r3,r8
  80da2c:	8aa3883a 	add	r17,r17,r10
  80da30:	8a89803a 	cmpltu	r4,r17,r10
  80da34:	20c9883a 	add	r4,r4,r3
  80da38:	6821883a 	mov	r16,r13
  80da3c:	00003106 	br	80db04 <__subdf3+0x3bc>
  80da40:	80800044 	addi	r2,r16,1
  80da44:	1081ff8c 	andi	r2,r2,2046
  80da48:	1000821e 	bne	r2,zero,80dc54 <__subdf3+0x50c>
  80da4c:	42ceb03a 	or	r7,r8,r11
  80da50:	1a84b03a 	or	r2,r3,r10
  80da54:	8000e11e 	bne	r16,zero,80dddc <__subdf3+0x694>
  80da58:	38012a26 	beq	r7,zero,80df04 <__subdf3+0x7bc>
  80da5c:	1001461e 	bne	r2,zero,80df78 <__subdf3+0x830>
  80da60:	4004977a 	slli	r2,r8,29
  80da64:	00c80034 	movhi	r3,8192
  80da68:	18ffffc4 	addi	r3,r3,-1
  80da6c:	20c8703a 	and	r4,r4,r3
  80da70:	4010d0fa 	srli	r8,r8,3
  80da74:	1104b03a 	or	r2,r2,r4
  80da78:	00001806 	br	80dadc <__subdf3+0x394>
  80da7c:	1a84b03a 	or	r2,r3,r10
  80da80:	1000fa26 	beq	r2,zero,80de6c <__subdf3+0x724>
  80da84:	28bfffc4 	addi	r2,r5,-1
  80da88:	10000426 	beq	r2,zero,80da9c <__subdf3+0x354>
  80da8c:	2941ffd8 	cmpnei	r5,r5,2047
  80da90:	28013226 	beq	r5,zero,80df5c <__subdf3+0x814>
  80da94:	100b883a 	mov	r5,r2
  80da98:	003fa606 	br	80d934 <__subdf3+0x1ec>
  80da9c:	5aa3883a 	add	r17,r11,r10
  80daa0:	40c9883a 	add	r4,r8,r3
  80daa4:	8ad7803a 	cmpltu	r11,r17,r11
  80daa8:	22c9883a 	add	r4,r4,r11
  80daac:	2080202c 	andhi	r2,r4,128
  80dab0:	10007a1e 	bne	r2,zero,80dc9c <__subdf3+0x554>
  80dab4:	04000044 	movi	r16,1
  80dab8:	888001cc 	andi	r2,r17,7
  80dabc:	103f771e 	bne	r2,zero,80d89c <__subdf3+0x154>
  80dac0:	8822d0fa 	srli	r17,r17,3
  80dac4:	2004977a 	slli	r2,r4,29
  80dac8:	2010d0fa 	srli	r8,r4,3
  80dacc:	800b883a 	mov	r5,r16
  80dad0:	8884b03a 	or	r2,r17,r2
  80dad4:	28c1ffe0 	cmpeqi	r3,r5,2047
  80dad8:	1800241e 	bne	r3,zero,80db6c <__subdf3+0x424>
  80dadc:	00c00434 	movhi	r3,16
  80dae0:	18ffffc4 	addi	r3,r3,-1
  80dae4:	40c6703a 	and	r3,r8,r3
  80dae8:	2941ffcc 	andi	r5,r5,2047
  80daec:	003f8006 	br	80d8f0 <__subdf3+0x1a8>
  80daf0:	1aa2b03a 	or	r17,r3,r10
  80daf4:	8822c03a 	cmpne	r17,r17,zero
  80daf8:	8ae3883a 	add	r17,r17,r11
  80dafc:	8ac9803a 	cmpltu	r4,r17,r11
  80db00:	2209883a 	add	r4,r4,r8
  80db04:	2080202c 	andhi	r2,r4,128
  80db08:	103feb26 	beq	r2,zero,80dab8 <__subdf3+0x370>
  80db0c:	84000044 	addi	r16,r16,1
  80db10:	8081ffe0 	cmpeqi	r2,r16,2047
  80db14:	10006226 	beq	r2,zero,80dca0 <__subdf3+0x558>
  80db18:	0141ffc4 	movi	r5,2047
  80db1c:	0007883a 	mov	r3,zero
  80db20:	0005883a 	mov	r2,zero
  80db24:	003f7206 	br	80d8f0 <__subdf3+0x1a8>
  80db28:	400e977a 	slli	r7,r8,29
  80db2c:	4010d0fa 	srli	r8,r8,3
  80db30:	1000ef26 	beq	r2,zero,80def0 <__subdf3+0x7a8>
  80db34:	01480034 	movhi	r5,8192
  80db38:	297fffc4 	addi	r5,r5,-1
  80db3c:	2144703a 	and	r2,r4,r5
  80db40:	4100022c 	andhi	r4,r8,8
  80db44:	11c4b03a 	or	r2,r2,r7
  80db48:	20000826 	beq	r4,zero,80db6c <__subdf3+0x424>
  80db4c:	1808d0fa 	srli	r4,r3,3
  80db50:	21c0022c 	andhi	r7,r4,8
  80db54:	3800051e 	bne	r7,zero,80db6c <__subdf3+0x424>
  80db58:	1804977a 	slli	r2,r3,29
  80db5c:	314c703a 	and	r6,r6,r5
  80db60:	4825883a 	mov	r18,r9
  80db64:	3084b03a 	or	r2,r6,r2
  80db68:	2011883a 	mov	r8,r4
  80db6c:	1206b03a 	or	r3,r2,r8
  80db70:	18013e26 	beq	r3,zero,80e06c <__subdf3+0x924>
  80db74:	01000434 	movhi	r4,16
  80db78:	40c00234 	orhi	r3,r8,8
  80db7c:	213fffc4 	addi	r4,r4,-1
  80db80:	1906703a 	and	r3,r3,r4
  80db84:	0141ffc4 	movi	r5,2047
  80db88:	003f5906 	br	80d8f0 <__subdf3+0x1a8>
  80db8c:	00ffe034 	movhi	r3,65408
  80db90:	18ffffc4 	addi	r3,r3,-1
  80db94:	8161c83a 	sub	r16,r16,r5
  80db98:	20c8703a 	and	r4,r4,r3
  80db9c:	003f3d06 	br	80d894 <__subdf3+0x14c>
  80dba0:	8809883a 	mov	r4,r17
  80dba4:	08014b80 	call	8014b8 <__clzsi2>
  80dba8:	11400604 	addi	r5,r2,24
  80dbac:	28c00808 	cmpgei	r3,r5,32
  80dbb0:	183f2326 	beq	r3,zero,80d840 <__subdf3+0xf8>
  80dbb4:	113ffe04 	addi	r4,r2,-8
  80dbb8:	8908983a 	sll	r4,r17,r4
  80dbbc:	0023883a 	mov	r17,zero
  80dbc0:	003f2506 	br	80d858 <__subdf3+0x110>
  80dbc4:	1aa2b03a 	or	r17,r3,r10
  80dbc8:	8822c03a 	cmpne	r17,r17,zero
  80dbcc:	003f1006 	br	80d810 <__subdf3+0xc8>
  80dbd0:	80800044 	addi	r2,r16,1
  80dbd4:	11c1ff8c 	andi	r7,r2,2046
  80dbd8:	38006d1e 	bne	r7,zero,80dd90 <__subdf3+0x648>
  80dbdc:	42c4b03a 	or	r2,r8,r11
  80dbe0:	8000be1e 	bne	r16,zero,80dedc <__subdf3+0x794>
  80dbe4:	1000f726 	beq	r2,zero,80dfc4 <__subdf3+0x87c>
  80dbe8:	1a84b03a 	or	r2,r3,r10
  80dbec:	1000fc1e 	bne	r2,zero,80dfe0 <__subdf3+0x898>
  80dbf0:	4006977a 	slli	r3,r8,29
  80dbf4:	00880034 	movhi	r2,8192
  80dbf8:	10bfffc4 	addi	r2,r2,-1
  80dbfc:	2084703a 	and	r2,r4,r2
  80dc00:	4010d0fa 	srli	r8,r8,3
  80dc04:	10c4b03a 	or	r2,r2,r3
  80dc08:	003fb406 	br	80dadc <__subdf3+0x394>
  80dc0c:	6881ffd8 	cmpnei	r2,r13,2047
  80dc10:	10009d26 	beq	r2,zero,80de88 <__subdf3+0x740>
  80dc14:	42002034 	orhi	r8,r8,128
  80dc18:	28800e48 	cmpgei	r2,r5,57
  80dc1c:	1000421e 	bne	r2,zero,80dd28 <__subdf3+0x5e0>
  80dc20:	28800808 	cmpgei	r2,r5,32
  80dc24:	1000a21e 	bne	r2,zero,80deb0 <__subdf3+0x768>
  80dc28:	00800804 	movi	r2,32
  80dc2c:	1145c83a 	sub	r2,r2,r5
  80dc30:	40a2983a 	sll	r17,r8,r2
  80dc34:	5948d83a 	srl	r4,r11,r5
  80dc38:	5896983a 	sll	r11,r11,r2
  80dc3c:	4150d83a 	srl	r8,r8,r5
  80dc40:	8922b03a 	or	r17,r17,r4
  80dc44:	5816c03a 	cmpne	r11,r11,zero
  80dc48:	8ae2b03a 	or	r17,r17,r11
  80dc4c:	1a07c83a 	sub	r3,r3,r8
  80dc50:	00003706 	br	80dd30 <__subdf3+0x5e8>
  80dc54:	5aa3c83a 	sub	r17,r11,r10
  80dc58:	40e7c83a 	sub	r19,r8,r3
  80dc5c:	5c49803a 	cmpltu	r4,r11,r17
  80dc60:	9927c83a 	sub	r19,r19,r4
  80dc64:	9880202c 	andhi	r2,r19,128
  80dc68:	1000661e 	bne	r2,zero,80de04 <__subdf3+0x6bc>
  80dc6c:	8cc4b03a 	or	r2,r17,r19
  80dc70:	103eef1e 	bne	r2,zero,80d830 <__subdf3+0xe8>
  80dc74:	0011883a 	mov	r8,zero
  80dc78:	0025883a 	mov	r18,zero
  80dc7c:	003f9706 	br	80dadc <__subdf3+0x394>
  80dc80:	4022977a 	slli	r17,r8,29
  80dc84:	00880034 	movhi	r2,8192
  80dc88:	10bfffc4 	addi	r2,r2,-1
  80dc8c:	2088703a 	and	r4,r4,r2
  80dc90:	4010d0fa 	srli	r8,r8,3
  80dc94:	2444b03a 	or	r2,r4,r17
  80dc98:	003f8e06 	br	80dad4 <__subdf3+0x38c>
  80dc9c:	04000084 	movi	r16,2
  80dca0:	00bfe034 	movhi	r2,65408
  80dca4:	10bfffc4 	addi	r2,r2,-1
  80dca8:	8806d07a 	srli	r3,r17,1
  80dcac:	2088703a 	and	r4,r4,r2
  80dcb0:	200497fa 	slli	r2,r4,31
  80dcb4:	8c40004c 	andi	r17,r17,1
  80dcb8:	1c62b03a 	or	r17,r3,r17
  80dcbc:	2008d07a 	srli	r4,r4,1
  80dcc0:	1462b03a 	or	r17,r2,r17
  80dcc4:	003ef306 	br	80d894 <__subdf3+0x14c>
  80dcc8:	297ff844 	addi	r5,r5,-31
  80dccc:	18800820 	cmpeqi	r2,r3,32
  80dcd0:	214ad83a 	srl	r5,r4,r5
  80dcd4:	1000041e 	bne	r2,zero,80dce8 <__subdf3+0x5a0>
  80dcd8:	00801004 	movi	r2,64
  80dcdc:	10c7c83a 	sub	r3,r2,r3
  80dce0:	20c8983a 	sll	r4,r4,r3
  80dce4:	8922b03a 	or	r17,r17,r4
  80dce8:	8822c03a 	cmpne	r17,r17,zero
  80dcec:	8962b03a 	or	r17,r17,r5
  80dcf0:	0009883a 	mov	r4,zero
  80dcf4:	0021883a 	mov	r16,zero
  80dcf8:	003f6f06 	br	80dab8 <__subdf3+0x370>
  80dcfc:	2c7ff804 	addi	r17,r5,-32
  80dd00:	29000820 	cmpeqi	r4,r5,32
  80dd04:	1c44d83a 	srl	r2,r3,r17
  80dd08:	2000041e 	bne	r4,zero,80dd1c <__subdf3+0x5d4>
  80dd0c:	01001004 	movi	r4,64
  80dd10:	214bc83a 	sub	r5,r4,r5
  80dd14:	1946983a 	sll	r3,r3,r5
  80dd18:	50d4b03a 	or	r10,r10,r3
  80dd1c:	5022c03a 	cmpne	r17,r10,zero
  80dd20:	88a2b03a 	or	r17,r17,r2
  80dd24:	003eba06 	br	80d810 <__subdf3+0xc8>
  80dd28:	42d0b03a 	or	r8,r8,r11
  80dd2c:	4022c03a 	cmpne	r17,r8,zero
  80dd30:	5463c83a 	sub	r17,r10,r17
  80dd34:	5449803a 	cmpltu	r4,r10,r17
  80dd38:	1909c83a 	sub	r4,r3,r4
  80dd3c:	6821883a 	mov	r16,r13
  80dd40:	003eb606 	br	80d81c <__subdf3+0xd4>
  80dd44:	42c4b03a 	or	r2,r8,r11
  80dd48:	10009726 	beq	r2,zero,80dfa8 <__subdf3+0x860>
  80dd4c:	28bfffc4 	addi	r2,r5,-1
  80dd50:	1000b926 	beq	r2,zero,80e038 <__subdf3+0x8f0>
  80dd54:	2941ffd8 	cmpnei	r5,r5,2047
  80dd58:	28007326 	beq	r5,zero,80df28 <__subdf3+0x7e0>
  80dd5c:	100b883a 	mov	r5,r2
  80dd60:	003f2406 	br	80d9f4 <__subdf3+0x2ac>
  80dd64:	00800804 	movi	r2,32
  80dd68:	1145c83a 	sub	r2,r2,r5
  80dd6c:	18a2983a 	sll	r17,r3,r2
  80dd70:	5148d83a 	srl	r4,r10,r5
  80dd74:	5084983a 	sll	r2,r10,r2
  80dd78:	1946d83a 	srl	r3,r3,r5
  80dd7c:	8922b03a 	or	r17,r17,r4
  80dd80:	1004c03a 	cmpne	r2,r2,zero
  80dd84:	88a2b03a 	or	r17,r17,r2
  80dd88:	40d1883a 	add	r8,r8,r3
  80dd8c:	003f5a06 	br	80daf8 <__subdf3+0x3b0>
  80dd90:	1101ffe0 	cmpeqi	r4,r2,2047
  80dd94:	203f601e 	bne	r4,zero,80db18 <__subdf3+0x3d0>
  80dd98:	5a95883a 	add	r10,r11,r10
  80dd9c:	52d7803a 	cmpltu	r11,r10,r11
  80dda0:	40c9883a 	add	r4,r8,r3
  80dda4:	22c9883a 	add	r4,r4,r11
  80dda8:	202297fa 	slli	r17,r4,31
  80ddac:	5014d07a 	srli	r10,r10,1
  80ddb0:	2008d07a 	srli	r4,r4,1
  80ddb4:	1021883a 	mov	r16,r2
  80ddb8:	8aa2b03a 	or	r17,r17,r10
  80ddbc:	003f3e06 	br	80dab8 <__subdf3+0x370>
  80ddc0:	1808977a 	slli	r4,r3,29
  80ddc4:	00880034 	movhi	r2,8192
  80ddc8:	10bfffc4 	addi	r2,r2,-1
  80ddcc:	308c703a 	and	r6,r6,r2
  80ddd0:	1810d0fa 	srli	r8,r3,3
  80ddd4:	3104b03a 	or	r2,r6,r4
  80ddd8:	003f3e06 	br	80dad4 <__subdf3+0x38c>
  80dddc:	383f521e 	bne	r7,zero,80db28 <__subdf3+0x3e0>
  80dde0:	10009d26 	beq	r2,zero,80e058 <__subdf3+0x910>
  80dde4:	1808977a 	slli	r4,r3,29
  80dde8:	00880034 	movhi	r2,8192
  80ddec:	10bfffc4 	addi	r2,r2,-1
  80ddf0:	3084703a 	and	r2,r6,r2
  80ddf4:	1810d0fa 	srli	r8,r3,3
  80ddf8:	1104b03a 	or	r2,r2,r4
  80ddfc:	4825883a 	mov	r18,r9
  80de00:	003f5a06 	br	80db6c <__subdf3+0x424>
  80de04:	52e3c83a 	sub	r17,r10,r11
  80de08:	1a09c83a 	sub	r4,r3,r8
  80de0c:	5467803a 	cmpltu	r19,r10,r17
  80de10:	24e7c83a 	sub	r19,r4,r19
  80de14:	4825883a 	mov	r18,r9
  80de18:	003e8506 	br	80d830 <__subdf3+0xe8>
  80de1c:	4022977a 	slli	r17,r8,29
  80de20:	00880034 	movhi	r2,8192
  80de24:	10bfffc4 	addi	r2,r2,-1
  80de28:	2088703a 	and	r4,r4,r2
  80de2c:	4010d0fa 	srli	r8,r8,3
  80de30:	2444b03a 	or	r2,r4,r17
  80de34:	003f4d06 	br	80db6c <__subdf3+0x424>
  80de38:	5aa3c83a 	sub	r17,r11,r10
  80de3c:	40c9c83a 	sub	r4,r8,r3
  80de40:	5c57803a 	cmpltu	r11,r11,r17
  80de44:	22c9c83a 	sub	r4,r4,r11
  80de48:	04000044 	movi	r16,1
  80de4c:	003e7306 	br	80d81c <__subdf3+0xd4>
  80de50:	4004977a 	slli	r2,r8,29
  80de54:	00c80034 	movhi	r3,8192
  80de58:	18ffffc4 	addi	r3,r3,-1
  80de5c:	20c8703a 	and	r4,r4,r3
  80de60:	4010d0fa 	srli	r8,r8,3
  80de64:	1104b03a 	or	r2,r2,r4
  80de68:	003f4006 	br	80db6c <__subdf3+0x424>
  80de6c:	4004977a 	slli	r2,r8,29
  80de70:	00c80034 	movhi	r3,8192
  80de74:	18ffffc4 	addi	r3,r3,-1
  80de78:	20c8703a 	and	r4,r4,r3
  80de7c:	4010d0fa 	srli	r8,r8,3
  80de80:	1104b03a 	or	r2,r2,r4
  80de84:	003f1306 	br	80dad4 <__subdf3+0x38c>
  80de88:	1804977a 	slli	r2,r3,29
  80de8c:	01080034 	movhi	r4,8192
  80de90:	213fffc4 	addi	r4,r4,-1
  80de94:	310c703a 	and	r6,r6,r4
  80de98:	1810d0fa 	srli	r8,r3,3
  80de9c:	1184b03a 	or	r2,r2,r6
  80dea0:	003f3206 	br	80db6c <__subdf3+0x424>
  80dea4:	42d0b03a 	or	r8,r8,r11
  80dea8:	4022c03a 	cmpne	r17,r8,zero
  80deac:	003edf06 	br	80da2c <__subdf3+0x2e4>
  80deb0:	2c7ff804 	addi	r17,r5,-32
  80deb4:	29000820 	cmpeqi	r4,r5,32
  80deb8:	4444d83a 	srl	r2,r8,r17
  80debc:	2000041e 	bne	r4,zero,80ded0 <__subdf3+0x788>
  80dec0:	01001004 	movi	r4,64
  80dec4:	214bc83a 	sub	r5,r4,r5
  80dec8:	4150983a 	sll	r8,r8,r5
  80decc:	5a16b03a 	or	r11,r11,r8
  80ded0:	5822c03a 	cmpne	r17,r11,zero
  80ded4:	88a2b03a 	or	r17,r17,r2
  80ded8:	003f9506 	br	80dd30 <__subdf3+0x5e8>
  80dedc:	103fea26 	beq	r2,zero,80de88 <__subdf3+0x740>
  80dee0:	1a94b03a 	or	r10,r3,r10
  80dee4:	400e977a 	slli	r7,r8,29
  80dee8:	4010d0fa 	srli	r8,r8,3
  80deec:	503f111e 	bne	r10,zero,80db34 <__subdf3+0x3ec>
  80def0:	00880034 	movhi	r2,8192
  80def4:	10bfffc4 	addi	r2,r2,-1
  80def8:	2084703a 	and	r2,r4,r2
  80defc:	11c4b03a 	or	r2,r2,r7
  80df00:	003f1a06 	br	80db6c <__subdf3+0x424>
  80df04:	103f5b26 	beq	r2,zero,80dc74 <__subdf3+0x52c>
  80df08:	1804977a 	slli	r2,r3,29
  80df0c:	01080034 	movhi	r4,8192
  80df10:	213fffc4 	addi	r4,r4,-1
  80df14:	310c703a 	and	r6,r6,r4
  80df18:	1810d0fa 	srli	r8,r3,3
  80df1c:	1184b03a 	or	r2,r2,r6
  80df20:	4825883a 	mov	r18,r9
  80df24:	003eed06 	br	80dadc <__subdf3+0x394>
  80df28:	1808977a 	slli	r4,r3,29
  80df2c:	00880034 	movhi	r2,8192
  80df30:	10bfffc4 	addi	r2,r2,-1
  80df34:	3084703a 	and	r2,r6,r2
  80df38:	1810d0fa 	srli	r8,r3,3
  80df3c:	1104b03a 	or	r2,r2,r4
  80df40:	003f0a06 	br	80db6c <__subdf3+0x424>
  80df44:	52e3c83a 	sub	r17,r10,r11
  80df48:	1a09c83a 	sub	r4,r3,r8
  80df4c:	5455803a 	cmpltu	r10,r10,r17
  80df50:	2289c83a 	sub	r4,r4,r10
  80df54:	04000044 	movi	r16,1
  80df58:	003e3006 	br	80d81c <__subdf3+0xd4>
  80df5c:	4006977a 	slli	r3,r8,29
  80df60:	00880034 	movhi	r2,8192
  80df64:	10bfffc4 	addi	r2,r2,-1
  80df68:	2084703a 	and	r2,r4,r2
  80df6c:	4010d0fa 	srli	r8,r8,3
  80df70:	10c4b03a 	or	r2,r2,r3
  80df74:	003efd06 	br	80db6c <__subdf3+0x424>
  80df78:	5aa3c83a 	sub	r17,r11,r10
  80df7c:	5c45803a 	cmpltu	r2,r11,r17
  80df80:	40c9c83a 	sub	r4,r8,r3
  80df84:	2089c83a 	sub	r4,r4,r2
  80df88:	2080202c 	andhi	r2,r4,128
  80df8c:	10002f26 	beq	r2,zero,80e04c <__subdf3+0x904>
  80df90:	52e3c83a 	sub	r17,r10,r11
  80df94:	1a09c83a 	sub	r4,r3,r8
  80df98:	5455803a 	cmpltu	r10,r10,r17
  80df9c:	2289c83a 	sub	r4,r4,r10
  80dfa0:	4825883a 	mov	r18,r9
  80dfa4:	003e3b06 	br	80d894 <__subdf3+0x14c>
  80dfa8:	1808977a 	slli	r4,r3,29
  80dfac:	00880034 	movhi	r2,8192
  80dfb0:	10bfffc4 	addi	r2,r2,-1
  80dfb4:	3084703a 	and	r2,r6,r2
  80dfb8:	1810d0fa 	srli	r8,r3,3
  80dfbc:	1104b03a 	or	r2,r2,r4
  80dfc0:	003ec406 	br	80dad4 <__subdf3+0x38c>
  80dfc4:	1808977a 	slli	r4,r3,29
  80dfc8:	00880034 	movhi	r2,8192
  80dfcc:	10bfffc4 	addi	r2,r2,-1
  80dfd0:	3084703a 	and	r2,r6,r2
  80dfd4:	1810d0fa 	srli	r8,r3,3
  80dfd8:	1104b03a 	or	r2,r2,r4
  80dfdc:	003ebf06 	br	80dadc <__subdf3+0x394>
  80dfe0:	5aa3883a 	add	r17,r11,r10
  80dfe4:	40c9883a 	add	r4,r8,r3
  80dfe8:	8ad7803a 	cmpltu	r11,r17,r11
  80dfec:	22c9883a 	add	r4,r4,r11
  80dff0:	2080202c 	andhi	r2,r4,128
  80dff4:	103eb026 	beq	r2,zero,80dab8 <__subdf3+0x370>
  80dff8:	00bfe034 	movhi	r2,65408
  80dffc:	10bfffc4 	addi	r2,r2,-1
  80e000:	2088703a 	and	r4,r4,r2
  80e004:	04000044 	movi	r16,1
  80e008:	003eab06 	br	80dab8 <__subdf3+0x370>
  80e00c:	28bff804 	addi	r2,r5,-32
  80e010:	29000820 	cmpeqi	r4,r5,32
  80e014:	4084d83a 	srl	r2,r8,r2
  80e018:	2000041e 	bne	r4,zero,80e02c <__subdf3+0x8e4>
  80e01c:	01001004 	movi	r4,64
  80e020:	214bc83a 	sub	r5,r4,r5
  80e024:	4150983a 	sll	r8,r8,r5
  80e028:	5a16b03a 	or	r11,r11,r8
  80e02c:	5822c03a 	cmpne	r17,r11,zero
  80e030:	88a2b03a 	or	r17,r17,r2
  80e034:	003e7d06 	br	80da2c <__subdf3+0x2e4>
  80e038:	5aa3883a 	add	r17,r11,r10
  80e03c:	40c9883a 	add	r4,r8,r3
  80e040:	8a95803a 	cmpltu	r10,r17,r10
  80e044:	2289883a 	add	r4,r4,r10
  80e048:	003e9806 	br	80daac <__subdf3+0x364>
  80e04c:	8904b03a 	or	r2,r17,r4
  80e050:	103f0826 	beq	r2,zero,80dc74 <__subdf3+0x52c>
  80e054:	003e9806 	br	80dab8 <__subdf3+0x370>
  80e058:	02000434 	movhi	r8,16
  80e05c:	423fffc4 	addi	r8,r8,-1
  80e060:	0025883a 	mov	r18,zero
  80e064:	00bfffc4 	movi	r2,-1
  80e068:	003ec206 	br	80db74 <__subdf3+0x42c>
  80e06c:	0005883a 	mov	r2,zero
  80e070:	0141ffc4 	movi	r5,2047
  80e074:	0007883a 	mov	r3,zero
  80e078:	003e1d06 	br	80d8f0 <__subdf3+0x1a8>

0080e07c <__unorddf2>:
  80e07c:	2806d53a 	srli	r3,r5,20
  80e080:	3810d53a 	srli	r8,r7,20
  80e084:	02400434 	movhi	r9,16
  80e088:	18c1ffcc 	andi	r3,r3,2047
  80e08c:	4a7fffc4 	addi	r9,r9,-1
  80e090:	18c1ffd8 	cmpnei	r3,r3,2047
  80e094:	2a4a703a 	and	r5,r5,r9
  80e098:	3a4e703a 	and	r7,r7,r9
  80e09c:	4201ffcc 	andi	r8,r8,2047
  80e0a0:	18000426 	beq	r3,zero,80e0b4 <__unorddf2+0x38>
  80e0a4:	4201ffd8 	cmpnei	r8,r8,2047
  80e0a8:	40000626 	beq	r8,zero,80e0c4 <__unorddf2+0x48>
  80e0ac:	0005883a 	mov	r2,zero
  80e0b0:	f800283a 	ret
  80e0b4:	214ab03a 	or	r5,r4,r5
  80e0b8:	283ffa26 	beq	r5,zero,80e0a4 <__unorddf2+0x28>
  80e0bc:	00800044 	movi	r2,1
  80e0c0:	f800283a 	ret
  80e0c4:	398eb03a 	or	r7,r7,r6
  80e0c8:	3804c03a 	cmpne	r2,r7,zero
  80e0cc:	f800283a 	ret

0080e0d0 <__fixdfsi>:
  80e0d0:	2806d53a 	srli	r3,r5,20
  80e0d4:	01800434 	movhi	r6,16
  80e0d8:	31bfffc4 	addi	r6,r6,-1
  80e0dc:	18c1ffcc 	andi	r3,r3,2047
  80e0e0:	19c0ffd0 	cmplti	r7,r3,1023
  80e0e4:	2810d7fa 	srli	r8,r5,31
  80e0e8:	298a703a 	and	r5,r5,r6
  80e0ec:	3800061e 	bne	r7,zero,80e108 <__fixdfsi+0x38>
  80e0f0:	18810790 	cmplti	r2,r3,1054
  80e0f4:	1000061e 	bne	r2,zero,80e110 <__fixdfsi+0x40>
  80e0f8:	00a00034 	movhi	r2,32768
  80e0fc:	10bfffc4 	addi	r2,r2,-1
  80e100:	4085883a 	add	r2,r8,r2
  80e104:	f800283a 	ret
  80e108:	0005883a 	mov	r2,zero
  80e10c:	f800283a 	ret
  80e110:	01810cc4 	movi	r6,1075
  80e114:	30cdc83a 	sub	r6,r6,r3
  80e118:	30800808 	cmpgei	r2,r6,32
  80e11c:	29400434 	orhi	r5,r5,16
  80e120:	1000071e 	bne	r2,zero,80e140 <__fixdfsi+0x70>
  80e124:	18befb44 	addi	r2,r3,-1043
  80e128:	2884983a 	sll	r2,r5,r2
  80e12c:	2188d83a 	srl	r4,r4,r6
  80e130:	1104b03a 	or	r2,r2,r4
  80e134:	403ff526 	beq	r8,zero,80e10c <__fixdfsi+0x3c>
  80e138:	0085c83a 	sub	r2,zero,r2
  80e13c:	f800283a 	ret
  80e140:	008104c4 	movi	r2,1043
  80e144:	10c5c83a 	sub	r2,r2,r3
  80e148:	2884d83a 	srl	r2,r5,r2
  80e14c:	003ff906 	br	80e134 <__fixdfsi+0x64>

0080e150 <__floatsidf>:
  80e150:	defffd04 	addi	sp,sp,-12
  80e154:	dfc00215 	stw	ra,8(sp)
  80e158:	dc400115 	stw	r17,4(sp)
  80e15c:	dc000015 	stw	r16,0(sp)
  80e160:	20001326 	beq	r4,zero,80e1b0 <__floatsidf+0x60>
  80e164:	2022d7fa 	srli	r17,r4,31
  80e168:	2021883a 	mov	r16,r4
  80e16c:	20002516 	blt	r4,zero,80e204 <__floatsidf+0xb4>
  80e170:	8009883a 	mov	r4,r16
  80e174:	08014b80 	call	8014b8 <__clzsi2>
  80e178:	01410784 	movi	r5,1054
  80e17c:	288bc83a 	sub	r5,r5,r2
  80e180:	10c002c8 	cmpgei	r3,r2,11
  80e184:	2941ffcc 	andi	r5,r5,2047
  80e188:	1800171e 	bne	r3,zero,80e1e8 <__floatsidf+0x98>
  80e18c:	00c002c4 	movi	r3,11
  80e190:	1887c83a 	sub	r3,r3,r2
  80e194:	80c6d83a 	srl	r3,r16,r3
  80e198:	01000434 	movhi	r4,16
  80e19c:	10800544 	addi	r2,r2,21
  80e1a0:	213fffc4 	addi	r4,r4,-1
  80e1a4:	8084983a 	sll	r2,r16,r2
  80e1a8:	1906703a 	and	r3,r3,r4
  80e1ac:	00000406 	br	80e1c0 <__floatsidf+0x70>
  80e1b0:	0023883a 	mov	r17,zero
  80e1b4:	000b883a 	mov	r5,zero
  80e1b8:	0007883a 	mov	r3,zero
  80e1bc:	0005883a 	mov	r2,zero
  80e1c0:	280a953a 	slli	r5,r5,20
  80e1c4:	8c403fcc 	andi	r17,r17,255
  80e1c8:	882297fa 	slli	r17,r17,31
  80e1cc:	28c6b03a 	or	r3,r5,r3
  80e1d0:	1c46b03a 	or	r3,r3,r17
  80e1d4:	dfc00217 	ldw	ra,8(sp)
  80e1d8:	dc400117 	ldw	r17,4(sp)
  80e1dc:	dc000017 	ldw	r16,0(sp)
  80e1e0:	dec00304 	addi	sp,sp,12
  80e1e4:	f800283a 	ret
  80e1e8:	10bffd44 	addi	r2,r2,-11
  80e1ec:	8086983a 	sll	r3,r16,r2
  80e1f0:	00800434 	movhi	r2,16
  80e1f4:	10bfffc4 	addi	r2,r2,-1
  80e1f8:	1886703a 	and	r3,r3,r2
  80e1fc:	0005883a 	mov	r2,zero
  80e200:	003fef06 	br	80e1c0 <__floatsidf+0x70>
  80e204:	0121c83a 	sub	r16,zero,r4
  80e208:	003fd906 	br	80e170 <__floatsidf+0x20>

0080e20c <__floatunsidf>:
  80e20c:	defffe04 	addi	sp,sp,-8
  80e210:	dc000015 	stw	r16,0(sp)
  80e214:	dfc00115 	stw	ra,4(sp)
  80e218:	2021883a 	mov	r16,r4
  80e21c:	20000f26 	beq	r4,zero,80e25c <__floatunsidf+0x50>
  80e220:	08014b80 	call	8014b8 <__clzsi2>
  80e224:	00c10784 	movi	r3,1054
  80e228:	1887c83a 	sub	r3,r3,r2
  80e22c:	110002c8 	cmpgei	r4,r2,11
  80e230:	18c1ffcc 	andi	r3,r3,2047
  80e234:	2000121e 	bne	r4,zero,80e280 <__floatunsidf+0x74>
  80e238:	014002c4 	movi	r5,11
  80e23c:	288bc83a 	sub	r5,r5,r2
  80e240:	814ad83a 	srl	r5,r16,r5
  80e244:	01000434 	movhi	r4,16
  80e248:	10800544 	addi	r2,r2,21
  80e24c:	213fffc4 	addi	r4,r4,-1
  80e250:	80a0983a 	sll	r16,r16,r2
  80e254:	290a703a 	and	r5,r5,r4
  80e258:	00000206 	br	80e264 <__floatunsidf+0x58>
  80e25c:	0007883a 	mov	r3,zero
  80e260:	000b883a 	mov	r5,zero
  80e264:	1806953a 	slli	r3,r3,20
  80e268:	8005883a 	mov	r2,r16
  80e26c:	1946b03a 	or	r3,r3,r5
  80e270:	dfc00117 	ldw	ra,4(sp)
  80e274:	dc000017 	ldw	r16,0(sp)
  80e278:	dec00204 	addi	sp,sp,8
  80e27c:	f800283a 	ret
  80e280:	10bffd44 	addi	r2,r2,-11
  80e284:	808a983a 	sll	r5,r16,r2
  80e288:	00800434 	movhi	r2,16
  80e28c:	10bfffc4 	addi	r2,r2,-1
  80e290:	288a703a 	and	r5,r5,r2
  80e294:	0021883a 	mov	r16,zero
  80e298:	003ff206 	br	80e264 <__floatunsidf+0x58>

0080e29c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e29c:	defffe04 	addi	sp,sp,-8
  80e2a0:	dfc00115 	stw	ra,4(sp)
  80e2a4:	df000015 	stw	fp,0(sp)
  80e2a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e2ac:	d0a00e17 	ldw	r2,-32712(gp)
  80e2b0:	10000326 	beq	r2,zero,80e2c0 <alt_get_errno+0x24>
  80e2b4:	d0a00e17 	ldw	r2,-32712(gp)
  80e2b8:	103ee83a 	callr	r2
  80e2bc:	00000106 	br	80e2c4 <alt_get_errno+0x28>
  80e2c0:	d0a71104 	addi	r2,gp,-25532
}
  80e2c4:	e037883a 	mov	sp,fp
  80e2c8:	dfc00117 	ldw	ra,4(sp)
  80e2cc:	df000017 	ldw	fp,0(sp)
  80e2d0:	dec00204 	addi	sp,sp,8
  80e2d4:	f800283a 	ret

0080e2d8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80e2d8:	defffb04 	addi	sp,sp,-20
  80e2dc:	dfc00415 	stw	ra,16(sp)
  80e2e0:	df000315 	stw	fp,12(sp)
  80e2e4:	df000304 	addi	fp,sp,12
  80e2e8:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80e2ec:	e0bffd17 	ldw	r2,-12(fp)
  80e2f0:	10000916 	blt	r2,zero,80e318 <close+0x40>
  80e2f4:	e0fffd17 	ldw	r3,-12(fp)
  80e2f8:	1805883a 	mov	r2,r3
  80e2fc:	1085883a 	add	r2,r2,r2
  80e300:	10c5883a 	add	r2,r2,r3
  80e304:	100490ba 	slli	r2,r2,2
  80e308:	00c02074 	movhi	r3,129
  80e30c:	18c73a04 	addi	r3,r3,7400
  80e310:	10c5883a 	add	r2,r2,r3
  80e314:	00000106 	br	80e31c <close+0x44>
  80e318:	0005883a 	mov	r2,zero
  80e31c:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  80e320:	e0bfff17 	ldw	r2,-4(fp)
  80e324:	10001926 	beq	r2,zero,80e38c <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80e328:	e0bfff17 	ldw	r2,-4(fp)
  80e32c:	10800017 	ldw	r2,0(r2)
  80e330:	10800417 	ldw	r2,16(r2)
  80e334:	10000626 	beq	r2,zero,80e350 <close+0x78>
  80e338:	e0bfff17 	ldw	r2,-4(fp)
  80e33c:	10800017 	ldw	r2,0(r2)
  80e340:	10800417 	ldw	r2,16(r2)
  80e344:	e13fff17 	ldw	r4,-4(fp)
  80e348:	103ee83a 	callr	r2
  80e34c:	00000106 	br	80e354 <close+0x7c>
  80e350:	0005883a 	mov	r2,zero
  80e354:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80e358:	e13ffd17 	ldw	r4,-12(fp)
  80e35c:	080eb940 	call	80eb94 <alt_release_fd>
    if (rval < 0)
  80e360:	e0bffe17 	ldw	r2,-8(fp)
  80e364:	1000070e 	bge	r2,zero,80e384 <close+0xac>
    {
      ALT_ERRNO = -rval;
  80e368:	080e29c0 	call	80e29c <alt_get_errno>
  80e36c:	1007883a 	mov	r3,r2
  80e370:	e0bffe17 	ldw	r2,-8(fp)
  80e374:	0085c83a 	sub	r2,zero,r2
  80e378:	18800015 	stw	r2,0(r3)
      return -1;
  80e37c:	00bfffc4 	movi	r2,-1
  80e380:	00000706 	br	80e3a0 <close+0xc8>
    }
    return 0;
  80e384:	0005883a 	mov	r2,zero
  80e388:	00000506 	br	80e3a0 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e38c:	080e29c0 	call	80e29c <alt_get_errno>
  80e390:	1007883a 	mov	r3,r2
  80e394:	00801444 	movi	r2,81
  80e398:	18800015 	stw	r2,0(r3)
    return -1;
  80e39c:	00bfffc4 	movi	r2,-1
  }
}
  80e3a0:	e037883a 	mov	sp,fp
  80e3a4:	dfc00117 	ldw	ra,4(sp)
  80e3a8:	df000017 	ldw	fp,0(sp)
  80e3ac:	dec00204 	addi	sp,sp,8
  80e3b0:	f800283a 	ret

0080e3b4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80e3b4:	defffc04 	addi	sp,sp,-16
  80e3b8:	df000315 	stw	fp,12(sp)
  80e3bc:	df000304 	addi	fp,sp,12
  80e3c0:	e13fff15 	stw	r4,-4(fp)
  80e3c4:	e17ffe15 	stw	r5,-8(fp)
  80e3c8:	e1bffd15 	stw	r6,-12(fp)
  return len;
  80e3cc:	e0bffd17 	ldw	r2,-12(fp)
}
  80e3d0:	e037883a 	mov	sp,fp
  80e3d4:	df000017 	ldw	fp,0(sp)
  80e3d8:	dec00104 	addi	sp,sp,4
  80e3dc:	f800283a 	ret

0080e3e0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80e3e0:	defffd04 	addi	sp,sp,-12
  80e3e4:	df000215 	stw	fp,8(sp)
  80e3e8:	df000204 	addi	fp,sp,8
  80e3ec:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80e3f0:	0001883a 	nop
  80e3f4:	e0bffe17 	ldw	r2,-8(fp)
  80e3f8:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80e3fc:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80e400:	10000226 	beq	r2,zero,80e40c <_exit+0x2c>
    ALT_SIM_FAIL();
  80e404:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  80e408:	00000106 	br	80e410 <_exit+0x30>
    ALT_SIM_PASS();
  80e40c:	002af0b0 	cmpltui	zero,zero,43970
}
  80e410:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80e414:	003fff06 	br	80e414 <_exit+0x34>

0080e418 <alt_get_errno>:
{
  80e418:	defffe04 	addi	sp,sp,-8
  80e41c:	dfc00115 	stw	ra,4(sp)
  80e420:	df000015 	stw	fp,0(sp)
  80e424:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e428:	d0a00e17 	ldw	r2,-32712(gp)
  80e42c:	10000326 	beq	r2,zero,80e43c <alt_get_errno+0x24>
  80e430:	d0a00e17 	ldw	r2,-32712(gp)
  80e434:	103ee83a 	callr	r2
  80e438:	00000106 	br	80e440 <alt_get_errno+0x28>
  80e43c:	d0a71104 	addi	r2,gp,-25532
}
  80e440:	e037883a 	mov	sp,fp
  80e444:	dfc00117 	ldw	ra,4(sp)
  80e448:	df000017 	ldw	fp,0(sp)
  80e44c:	dec00204 	addi	sp,sp,8
  80e450:	f800283a 	ret

0080e454 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80e454:	defffb04 	addi	sp,sp,-20
  80e458:	dfc00415 	stw	ra,16(sp)
  80e45c:	df000315 	stw	fp,12(sp)
  80e460:	df000304 	addi	fp,sp,12
  80e464:	e13ffe15 	stw	r4,-8(fp)
  80e468:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e46c:	e0bffe17 	ldw	r2,-8(fp)
  80e470:	10000916 	blt	r2,zero,80e498 <fstat+0x44>
  80e474:	e0fffe17 	ldw	r3,-8(fp)
  80e478:	1805883a 	mov	r2,r3
  80e47c:	1085883a 	add	r2,r2,r2
  80e480:	10c5883a 	add	r2,r2,r3
  80e484:	100490ba 	slli	r2,r2,2
  80e488:	00c02074 	movhi	r3,129
  80e48c:	18c73a04 	addi	r3,r3,7400
  80e490:	10c5883a 	add	r2,r2,r3
  80e494:	00000106 	br	80e49c <fstat+0x48>
  80e498:	0005883a 	mov	r2,zero
  80e49c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e4a0:	e0bfff17 	ldw	r2,-4(fp)
  80e4a4:	10001026 	beq	r2,zero,80e4e8 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80e4a8:	e0bfff17 	ldw	r2,-4(fp)
  80e4ac:	10800017 	ldw	r2,0(r2)
  80e4b0:	10800817 	ldw	r2,32(r2)
  80e4b4:	10000726 	beq	r2,zero,80e4d4 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
  80e4b8:	e0bfff17 	ldw	r2,-4(fp)
  80e4bc:	10800017 	ldw	r2,0(r2)
  80e4c0:	10800817 	ldw	r2,32(r2)
  80e4c4:	e17ffd17 	ldw	r5,-12(fp)
  80e4c8:	e13fff17 	ldw	r4,-4(fp)
  80e4cc:	103ee83a 	callr	r2
  80e4d0:	00000a06 	br	80e4fc <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80e4d4:	e0bffd17 	ldw	r2,-12(fp)
  80e4d8:	00c80004 	movi	r3,8192
  80e4dc:	10c00115 	stw	r3,4(r2)
      return 0;
  80e4e0:	0005883a 	mov	r2,zero
  80e4e4:	00000506 	br	80e4fc <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e4e8:	080e4180 	call	80e418 <alt_get_errno>
  80e4ec:	1007883a 	mov	r3,r2
  80e4f0:	00801444 	movi	r2,81
  80e4f4:	18800015 	stw	r2,0(r3)
    return -1;
  80e4f8:	00bfffc4 	movi	r2,-1
  }
}
  80e4fc:	e037883a 	mov	sp,fp
  80e500:	dfc00117 	ldw	ra,4(sp)
  80e504:	df000017 	ldw	fp,0(sp)
  80e508:	dec00204 	addi	sp,sp,8
  80e50c:	f800283a 	ret

0080e510 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  80e510:	deffff04 	addi	sp,sp,-4
  80e514:	df000015 	stw	fp,0(sp)
  80e518:	d839883a 	mov	fp,sp
  return 0;
  80e51c:	0005883a 	mov	r2,zero
}
  80e520:	e037883a 	mov	sp,fp
  80e524:	df000017 	ldw	fp,0(sp)
  80e528:	dec00104 	addi	sp,sp,4
  80e52c:	f800283a 	ret

0080e530 <alt_get_errno>:
{
  80e530:	defffe04 	addi	sp,sp,-8
  80e534:	dfc00115 	stw	ra,4(sp)
  80e538:	df000015 	stw	fp,0(sp)
  80e53c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e540:	d0a00e17 	ldw	r2,-32712(gp)
  80e544:	10000326 	beq	r2,zero,80e554 <alt_get_errno+0x24>
  80e548:	d0a00e17 	ldw	r2,-32712(gp)
  80e54c:	103ee83a 	callr	r2
  80e550:	00000106 	br	80e558 <alt_get_errno+0x28>
  80e554:	d0a71104 	addi	r2,gp,-25532
}
  80e558:	e037883a 	mov	sp,fp
  80e55c:	dfc00117 	ldw	ra,4(sp)
  80e560:	df000017 	ldw	fp,0(sp)
  80e564:	dec00204 	addi	sp,sp,8
  80e568:	f800283a 	ret

0080e56c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80e56c:	deffea04 	addi	sp,sp,-88
  80e570:	dfc01515 	stw	ra,84(sp)
  80e574:	df001415 	stw	fp,80(sp)
  80e578:	df001404 	addi	fp,sp,80
  80e57c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e580:	e0bfec17 	ldw	r2,-80(fp)
  80e584:	10000916 	blt	r2,zero,80e5ac <isatty+0x40>
  80e588:	e0ffec17 	ldw	r3,-80(fp)
  80e58c:	1805883a 	mov	r2,r3
  80e590:	1085883a 	add	r2,r2,r2
  80e594:	10c5883a 	add	r2,r2,r3
  80e598:	100490ba 	slli	r2,r2,2
  80e59c:	00c02074 	movhi	r3,129
  80e5a0:	18c73a04 	addi	r3,r3,7400
  80e5a4:	10c5883a 	add	r2,r2,r3
  80e5a8:	00000106 	br	80e5b0 <isatty+0x44>
  80e5ac:	0005883a 	mov	r2,zero
  80e5b0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e5b4:	e0bfff17 	ldw	r2,-4(fp)
  80e5b8:	10000e26 	beq	r2,zero,80e5f4 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80e5bc:	e0bfff17 	ldw	r2,-4(fp)
  80e5c0:	10800017 	ldw	r2,0(r2)
  80e5c4:	10800817 	ldw	r2,32(r2)
  80e5c8:	1000021e 	bne	r2,zero,80e5d4 <isatty+0x68>
    {
      return 1;
  80e5cc:	00800044 	movi	r2,1
  80e5d0:	00000d06 	br	80e608 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80e5d4:	e0bfed04 	addi	r2,fp,-76
  80e5d8:	100b883a 	mov	r5,r2
  80e5dc:	e13fec17 	ldw	r4,-80(fp)
  80e5e0:	080e4540 	call	80e454 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80e5e4:	e0bfee17 	ldw	r2,-72(fp)
  80e5e8:	10880020 	cmpeqi	r2,r2,8192
  80e5ec:	10803fcc 	andi	r2,r2,255
  80e5f0:	00000506 	br	80e608 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e5f4:	080e5300 	call	80e530 <alt_get_errno>
  80e5f8:	1007883a 	mov	r3,r2
  80e5fc:	00801444 	movi	r2,81
  80e600:	18800015 	stw	r2,0(r3)
    return 0;
  80e604:	0005883a 	mov	r2,zero
  }
}
  80e608:	e037883a 	mov	sp,fp
  80e60c:	dfc00117 	ldw	ra,4(sp)
  80e610:	df000017 	ldw	fp,0(sp)
  80e614:	dec00204 	addi	sp,sp,8
  80e618:	f800283a 	ret

0080e61c <alt_get_errno>:
{
  80e61c:	defffe04 	addi	sp,sp,-8
  80e620:	dfc00115 	stw	ra,4(sp)
  80e624:	df000015 	stw	fp,0(sp)
  80e628:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e62c:	d0a00e17 	ldw	r2,-32712(gp)
  80e630:	10000326 	beq	r2,zero,80e640 <alt_get_errno+0x24>
  80e634:	d0a00e17 	ldw	r2,-32712(gp)
  80e638:	103ee83a 	callr	r2
  80e63c:	00000106 	br	80e644 <alt_get_errno+0x28>
  80e640:	d0a71104 	addi	r2,gp,-25532
}
  80e644:	e037883a 	mov	sp,fp
  80e648:	dfc00117 	ldw	ra,4(sp)
  80e64c:	df000017 	ldw	fp,0(sp)
  80e650:	dec00204 	addi	sp,sp,8
  80e654:	f800283a 	ret

0080e658 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  80e658:	defffb04 	addi	sp,sp,-20
  80e65c:	dfc00415 	stw	ra,16(sp)
  80e660:	df000315 	stw	fp,12(sp)
  80e664:	df000304 	addi	fp,sp,12
  80e668:	e13ffe15 	stw	r4,-8(fp)
  80e66c:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  80e670:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  80e674:	e0bffe17 	ldw	r2,-8(fp)
  80e678:	00802e16 	blt	zero,r2,80e734 <kill+0xdc>
  80e67c:	e0bffd17 	ldw	r2,-12(fp)
  80e680:	10800828 	cmpgeui	r2,r2,32
  80e684:	1000281e 	bne	r2,zero,80e728 <kill+0xd0>
  80e688:	e0bffd17 	ldw	r2,-12(fp)
  80e68c:	100690ba 	slli	r3,r2,2
  80e690:	00802074 	movhi	r2,129
  80e694:	1885883a 	add	r2,r3,r2
  80e698:	10b9a817 	ldw	r2,-6496(r2)
  80e69c:	1000683a 	jmp	r2
  80e6a0:	0080e748 	cmpgei	r2,zero,925
  80e6a4:	0080e728 	cmpgeui	r2,zero,924
  80e6a8:	0080e728 	cmpgeui	r2,zero,924
  80e6ac:	0080e720 	cmpeqi	r2,zero,924
  80e6b0:	0080e720 	cmpeqi	r2,zero,924
  80e6b4:	0080e720 	cmpeqi	r2,zero,924
  80e6b8:	0080e720 	cmpeqi	r2,zero,924
  80e6bc:	0080e728 	cmpgeui	r2,zero,924
  80e6c0:	0080e720 	cmpeqi	r2,zero,924
  80e6c4:	0080e720 	cmpeqi	r2,zero,924
  80e6c8:	0080e720 	cmpeqi	r2,zero,924
  80e6cc:	0080e720 	cmpeqi	r2,zero,924
  80e6d0:	0080e720 	cmpeqi	r2,zero,924
  80e6d4:	0080e720 	cmpeqi	r2,zero,924
  80e6d8:	0080e720 	cmpeqi	r2,zero,924
  80e6dc:	0080e720 	cmpeqi	r2,zero,924
  80e6e0:	0080e748 	cmpgei	r2,zero,925
  80e6e4:	0080e728 	cmpgeui	r2,zero,924
  80e6e8:	0080e728 	cmpgeui	r2,zero,924
  80e6ec:	0080e728 	cmpgeui	r2,zero,924
  80e6f0:	0080e748 	cmpgei	r2,zero,925
  80e6f4:	0080e728 	cmpgeui	r2,zero,924
  80e6f8:	0080e728 	cmpgeui	r2,zero,924
  80e6fc:	0080e720 	cmpeqi	r2,zero,924
  80e700:	0080e720 	cmpeqi	r2,zero,924
  80e704:	0080e720 	cmpeqi	r2,zero,924
  80e708:	0080e720 	cmpeqi	r2,zero,924
  80e70c:	0080e720 	cmpeqi	r2,zero,924
  80e710:	0080e728 	cmpgeui	r2,zero,924
  80e714:	0080e728 	cmpgeui	r2,zero,924
  80e718:	0080e720 	cmpeqi	r2,zero,924
  80e71c:	0080e720 	cmpeqi	r2,zero,924
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  80e720:	0009883a 	mov	r4,zero
  80e724:	080e3e00 	call	80e3e0 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  80e728:	00800584 	movi	r2,22
  80e72c:	e0bfff15 	stw	r2,-4(fp)
  80e730:	00000606 	br	80e74c <kill+0xf4>
    }
  }

  else if (pid > 0)
  80e734:	e0bffe17 	ldw	r2,-8(fp)
  80e738:	0080040e 	bge	zero,r2,80e74c <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  80e73c:	008000c4 	movi	r2,3
  80e740:	e0bfff15 	stw	r2,-4(fp)
  80e744:	00000106 	br	80e74c <kill+0xf4>
      break;
  80e748:	0001883a 	nop
  }

  if (status)
  80e74c:	e0bfff17 	ldw	r2,-4(fp)
  80e750:	10000626 	beq	r2,zero,80e76c <kill+0x114>
  {
    ALT_ERRNO = status;
  80e754:	080e61c0 	call	80e61c <alt_get_errno>
  80e758:	1007883a 	mov	r3,r2
  80e75c:	e0bfff17 	ldw	r2,-4(fp)
  80e760:	18800015 	stw	r2,0(r3)
    return -1;
  80e764:	00bfffc4 	movi	r2,-1
  80e768:	00000106 	br	80e770 <kill+0x118>
  }

  return 0;
  80e76c:	0005883a 	mov	r2,zero
}
  80e770:	e037883a 	mov	sp,fp
  80e774:	dfc00117 	ldw	ra,4(sp)
  80e778:	df000017 	ldw	fp,0(sp)
  80e77c:	dec00204 	addi	sp,sp,8
  80e780:	f800283a 	ret

0080e784 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80e784:	defffc04 	addi	sp,sp,-16
  80e788:	df000315 	stw	fp,12(sp)
  80e78c:	df000304 	addi	fp,sp,12
  80e790:	e13fff15 	stw	r4,-4(fp)
  80e794:	e17ffe15 	stw	r5,-8(fp)
  80e798:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  80e79c:	e0fffe17 	ldw	r3,-8(fp)
  80e7a0:	e0bfff17 	ldw	r2,-4(fp)
  80e7a4:	18800c26 	beq	r3,r2,80e7d8 <alt_load_section+0x54>
  {
    while( to != end )
  80e7a8:	00000806 	br	80e7cc <alt_load_section+0x48>
    {
      *to++ = *from++;
  80e7ac:	e0ffff17 	ldw	r3,-4(fp)
  80e7b0:	18800104 	addi	r2,r3,4
  80e7b4:	e0bfff15 	stw	r2,-4(fp)
  80e7b8:	e0bffe17 	ldw	r2,-8(fp)
  80e7bc:	11000104 	addi	r4,r2,4
  80e7c0:	e13ffe15 	stw	r4,-8(fp)
  80e7c4:	18c00017 	ldw	r3,0(r3)
  80e7c8:	10c00015 	stw	r3,0(r2)
    while( to != end )
  80e7cc:	e0fffe17 	ldw	r3,-8(fp)
  80e7d0:	e0bffd17 	ldw	r2,-12(fp)
  80e7d4:	18bff51e 	bne	r3,r2,80e7ac <alt_load_section+0x28>
    }
  }
}
  80e7d8:	0001883a 	nop
  80e7dc:	e037883a 	mov	sp,fp
  80e7e0:	df000017 	ldw	fp,0(sp)
  80e7e4:	dec00104 	addi	sp,sp,4
  80e7e8:	f800283a 	ret

0080e7ec <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80e7ec:	defffe04 	addi	sp,sp,-8
  80e7f0:	dfc00115 	stw	ra,4(sp)
  80e7f4:	df000015 	stw	fp,0(sp)
  80e7f8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80e7fc:	01802074 	movhi	r6,129
  80e800:	318bc504 	addi	r6,r6,12052
  80e804:	01402074 	movhi	r5,129
  80e808:	2944ca04 	addi	r5,r5,4904
  80e80c:	01002074 	movhi	r4,129
  80e810:	210bc504 	addi	r4,r4,12052
  80e814:	080e7840 	call	80e784 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80e818:	01802034 	movhi	r6,128
  80e81c:	31808e04 	addi	r6,r6,568
  80e820:	01402034 	movhi	r5,128
  80e824:	29400804 	addi	r5,r5,32
  80e828:	01002034 	movhi	r4,128
  80e82c:	21000804 	addi	r4,r4,32
  80e830:	080e7840 	call	80e784 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80e834:	01802074 	movhi	r6,129
  80e838:	3184ca04 	addi	r6,r6,4904
  80e83c:	01402074 	movhi	r5,129
  80e840:	29431c04 	addi	r5,r5,3184
  80e844:	01002074 	movhi	r4,129
  80e848:	21031c04 	addi	r4,r4,3184
  80e84c:	080e7840 	call	80e784 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80e850:	080fdd80 	call	80fdd8 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80e854:	080ffd00 	call	80ffd0 <alt_icache_flush_all>
}
  80e858:	0001883a 	nop
  80e85c:	e037883a 	mov	sp,fp
  80e860:	dfc00117 	ldw	ra,4(sp)
  80e864:	df000017 	ldw	fp,0(sp)
  80e868:	dec00204 	addi	sp,sp,8
  80e86c:	f800283a 	ret

0080e870 <alt_get_errno>:
{
  80e870:	defffe04 	addi	sp,sp,-8
  80e874:	dfc00115 	stw	ra,4(sp)
  80e878:	df000015 	stw	fp,0(sp)
  80e87c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e880:	d0a00e17 	ldw	r2,-32712(gp)
  80e884:	10000326 	beq	r2,zero,80e894 <alt_get_errno+0x24>
  80e888:	d0a00e17 	ldw	r2,-32712(gp)
  80e88c:	103ee83a 	callr	r2
  80e890:	00000106 	br	80e898 <alt_get_errno+0x28>
  80e894:	d0a71104 	addi	r2,gp,-25532
}
  80e898:	e037883a 	mov	sp,fp
  80e89c:	dfc00117 	ldw	ra,4(sp)
  80e8a0:	df000017 	ldw	fp,0(sp)
  80e8a4:	dec00204 	addi	sp,sp,8
  80e8a8:	f800283a 	ret

0080e8ac <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80e8ac:	defff904 	addi	sp,sp,-28
  80e8b0:	dfc00615 	stw	ra,24(sp)
  80e8b4:	df000515 	stw	fp,20(sp)
  80e8b8:	df000504 	addi	fp,sp,20
  80e8bc:	e13ffd15 	stw	r4,-12(fp)
  80e8c0:	e17ffc15 	stw	r5,-16(fp)
  80e8c4:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80e8c8:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e8cc:	e0bffd17 	ldw	r2,-12(fp)
  80e8d0:	10000916 	blt	r2,zero,80e8f8 <lseek+0x4c>
  80e8d4:	e0fffd17 	ldw	r3,-12(fp)
  80e8d8:	1805883a 	mov	r2,r3
  80e8dc:	1085883a 	add	r2,r2,r2
  80e8e0:	10c5883a 	add	r2,r2,r3
  80e8e4:	100490ba 	slli	r2,r2,2
  80e8e8:	00c02074 	movhi	r3,129
  80e8ec:	18c73a04 	addi	r3,r3,7400
  80e8f0:	10c5883a 	add	r2,r2,r3
  80e8f4:	00000106 	br	80e8fc <lseek+0x50>
  80e8f8:	0005883a 	mov	r2,zero
  80e8fc:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  80e900:	e0bffe17 	ldw	r2,-8(fp)
  80e904:	10001026 	beq	r2,zero,80e948 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80e908:	e0bffe17 	ldw	r2,-8(fp)
  80e90c:	10800017 	ldw	r2,0(r2)
  80e910:	10800717 	ldw	r2,28(r2)
  80e914:	10000926 	beq	r2,zero,80e93c <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80e918:	e0bffe17 	ldw	r2,-8(fp)
  80e91c:	10800017 	ldw	r2,0(r2)
  80e920:	10800717 	ldw	r2,28(r2)
  80e924:	e1bffb17 	ldw	r6,-20(fp)
  80e928:	e17ffc17 	ldw	r5,-16(fp)
  80e92c:	e13ffe17 	ldw	r4,-8(fp)
  80e930:	103ee83a 	callr	r2
  80e934:	e0bfff15 	stw	r2,-4(fp)
  80e938:	00000506 	br	80e950 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80e93c:	00bfde84 	movi	r2,-134
  80e940:	e0bfff15 	stw	r2,-4(fp)
  80e944:	00000206 	br	80e950 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80e948:	00bfebc4 	movi	r2,-81
  80e94c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  80e950:	e0bfff17 	ldw	r2,-4(fp)
  80e954:	1000070e 	bge	r2,zero,80e974 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
  80e958:	080e8700 	call	80e870 <alt_get_errno>
  80e95c:	1007883a 	mov	r3,r2
  80e960:	e0bfff17 	ldw	r2,-4(fp)
  80e964:	0085c83a 	sub	r2,zero,r2
  80e968:	18800015 	stw	r2,0(r3)
    rc = -1;
  80e96c:	00bfffc4 	movi	r2,-1
  80e970:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  80e974:	e0bfff17 	ldw	r2,-4(fp)
}
  80e978:	e037883a 	mov	sp,fp
  80e97c:	dfc00117 	ldw	ra,4(sp)
  80e980:	df000017 	ldw	fp,0(sp)
  80e984:	dec00204 	addi	sp,sp,8
  80e988:	f800283a 	ret

0080e98c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80e98c:	defffd04 	addi	sp,sp,-12
  80e990:	dfc00215 	stw	ra,8(sp)
  80e994:	df000115 	stw	fp,4(sp)
  80e998:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80e99c:	0009883a 	mov	r4,zero
  80e9a0:	080f0900 	call	80f090 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80e9a4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80e9a8:	080f0cc0 	call	80f0cc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80e9ac:	01802074 	movhi	r6,129
  80e9b0:	3184c204 	addi	r6,r6,4872
  80e9b4:	01402074 	movhi	r5,129
  80e9b8:	2944c204 	addi	r5,r5,4872
  80e9bc:	01002074 	movhi	r4,129
  80e9c0:	2104c204 	addi	r4,r4,4872
  80e9c4:	08103700 	call	810370 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80e9c8:	080ff080 	call	80ff08 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80e9cc:	01002074 	movhi	r4,129
  80e9d0:	213fdb04 	addi	r4,r4,-148
  80e9d4:	0810a000 	call	810a00 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80e9d8:	d0a71317 	ldw	r2,-25524(gp)
  80e9dc:	d0e71417 	ldw	r3,-25520(gp)
  80e9e0:	d1271517 	ldw	r4,-25516(gp)
  80e9e4:	200d883a 	mov	r6,r4
  80e9e8:	180b883a 	mov	r5,r3
  80e9ec:	1009883a 	mov	r4,r2
  80e9f0:	08004b80 	call	8004b8 <main>
  80e9f4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80e9f8:	01000044 	movi	r4,1
  80e9fc:	080e2d80 	call	80e2d8 <close>
  exit (result);
  80ea00:	e13fff17 	ldw	r4,-4(fp)
  80ea04:	0810a140 	call	810a14 <exit>

0080ea08 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80ea08:	defffe04 	addi	sp,sp,-8
  80ea0c:	df000115 	stw	fp,4(sp)
  80ea10:	df000104 	addi	fp,sp,4
  80ea14:	e13fff15 	stw	r4,-4(fp)
}
  80ea18:	0001883a 	nop
  80ea1c:	e037883a 	mov	sp,fp
  80ea20:	df000017 	ldw	fp,0(sp)
  80ea24:	dec00104 	addi	sp,sp,4
  80ea28:	f800283a 	ret

0080ea2c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80ea2c:	defffe04 	addi	sp,sp,-8
  80ea30:	df000115 	stw	fp,4(sp)
  80ea34:	df000104 	addi	fp,sp,4
  80ea38:	e13fff15 	stw	r4,-4(fp)
}
  80ea3c:	0001883a 	nop
  80ea40:	e037883a 	mov	sp,fp
  80ea44:	df000017 	ldw	fp,0(sp)
  80ea48:	dec00104 	addi	sp,sp,4
  80ea4c:	f800283a 	ret

0080ea50 <alt_get_errno>:
{
  80ea50:	defffe04 	addi	sp,sp,-8
  80ea54:	dfc00115 	stw	ra,4(sp)
  80ea58:	df000015 	stw	fp,0(sp)
  80ea5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ea60:	d0a00e17 	ldw	r2,-32712(gp)
  80ea64:	10000326 	beq	r2,zero,80ea74 <alt_get_errno+0x24>
  80ea68:	d0a00e17 	ldw	r2,-32712(gp)
  80ea6c:	103ee83a 	callr	r2
  80ea70:	00000106 	br	80ea78 <alt_get_errno+0x28>
  80ea74:	d0a71104 	addi	r2,gp,-25532
}
  80ea78:	e037883a 	mov	sp,fp
  80ea7c:	dfc00117 	ldw	ra,4(sp)
  80ea80:	df000017 	ldw	fp,0(sp)
  80ea84:	dec00204 	addi	sp,sp,8
  80ea88:	f800283a 	ret

0080ea8c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80ea8c:	defff904 	addi	sp,sp,-28
  80ea90:	dfc00615 	stw	ra,24(sp)
  80ea94:	df000515 	stw	fp,20(sp)
  80ea98:	df000504 	addi	fp,sp,20
  80ea9c:	e13ffd15 	stw	r4,-12(fp)
  80eaa0:	e17ffc15 	stw	r5,-16(fp)
  80eaa4:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80eaa8:	e0bffd17 	ldw	r2,-12(fp)
  80eaac:	10000916 	blt	r2,zero,80ead4 <read+0x48>
  80eab0:	e0fffd17 	ldw	r3,-12(fp)
  80eab4:	1805883a 	mov	r2,r3
  80eab8:	1085883a 	add	r2,r2,r2
  80eabc:	10c5883a 	add	r2,r2,r3
  80eac0:	100490ba 	slli	r2,r2,2
  80eac4:	00c02074 	movhi	r3,129
  80eac8:	18c73a04 	addi	r3,r3,7400
  80eacc:	10c5883a 	add	r2,r2,r3
  80ead0:	00000106 	br	80ead8 <read+0x4c>
  80ead4:	0005883a 	mov	r2,zero
  80ead8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80eadc:	e0bfff17 	ldw	r2,-4(fp)
  80eae0:	10002226 	beq	r2,zero,80eb6c <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80eae4:	e0bfff17 	ldw	r2,-4(fp)
  80eae8:	10800217 	ldw	r2,8(r2)
  80eaec:	108000cc 	andi	r2,r2,3
  80eaf0:	10800060 	cmpeqi	r2,r2,1
  80eaf4:	1000181e 	bne	r2,zero,80eb58 <read+0xcc>
        (fd->dev->read))
  80eaf8:	e0bfff17 	ldw	r2,-4(fp)
  80eafc:	10800017 	ldw	r2,0(r2)
  80eb00:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80eb04:	10001426 	beq	r2,zero,80eb58 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80eb08:	e0bfff17 	ldw	r2,-4(fp)
  80eb0c:	10800017 	ldw	r2,0(r2)
  80eb10:	10800517 	ldw	r2,20(r2)
  80eb14:	e0fffb17 	ldw	r3,-20(fp)
  80eb18:	180d883a 	mov	r6,r3
  80eb1c:	e17ffc17 	ldw	r5,-16(fp)
  80eb20:	e13fff17 	ldw	r4,-4(fp)
  80eb24:	103ee83a 	callr	r2
  80eb28:	e0bffe15 	stw	r2,-8(fp)
  80eb2c:	e0bffe17 	ldw	r2,-8(fp)
  80eb30:	1000070e 	bge	r2,zero,80eb50 <read+0xc4>
        {
          ALT_ERRNO = -rval;
  80eb34:	080ea500 	call	80ea50 <alt_get_errno>
  80eb38:	1007883a 	mov	r3,r2
  80eb3c:	e0bffe17 	ldw	r2,-8(fp)
  80eb40:	0085c83a 	sub	r2,zero,r2
  80eb44:	18800015 	stw	r2,0(r3)
          return -1;
  80eb48:	00bfffc4 	movi	r2,-1
  80eb4c:	00000c06 	br	80eb80 <read+0xf4>
        }
        return rval;
  80eb50:	e0bffe17 	ldw	r2,-8(fp)
  80eb54:	00000a06 	br	80eb80 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80eb58:	080ea500 	call	80ea50 <alt_get_errno>
  80eb5c:	1007883a 	mov	r3,r2
  80eb60:	00800344 	movi	r2,13
  80eb64:	18800015 	stw	r2,0(r3)
  80eb68:	00000406 	br	80eb7c <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80eb6c:	080ea500 	call	80ea50 <alt_get_errno>
  80eb70:	1007883a 	mov	r3,r2
  80eb74:	00801444 	movi	r2,81
  80eb78:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80eb7c:	00bfffc4 	movi	r2,-1
}
  80eb80:	e037883a 	mov	sp,fp
  80eb84:	dfc00117 	ldw	ra,4(sp)
  80eb88:	df000017 	ldw	fp,0(sp)
  80eb8c:	dec00204 	addi	sp,sp,8
  80eb90:	f800283a 	ret

0080eb94 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80eb94:	defffe04 	addi	sp,sp,-8
  80eb98:	df000115 	stw	fp,4(sp)
  80eb9c:	df000104 	addi	fp,sp,4
  80eba0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80eba4:	e0bfff17 	ldw	r2,-4(fp)
  80eba8:	108000d0 	cmplti	r2,r2,3
  80ebac:	1000101e 	bne	r2,zero,80ebf0 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
  80ebb0:	e0ffff17 	ldw	r3,-4(fp)
  80ebb4:	1805883a 	mov	r2,r3
  80ebb8:	1085883a 	add	r2,r2,r2
  80ebbc:	10c5883a 	add	r2,r2,r3
  80ebc0:	100490ba 	slli	r2,r2,2
  80ebc4:	00c02074 	movhi	r3,129
  80ebc8:	10c7883a 	add	r3,r2,r3
  80ebcc:	18073c15 	stw	zero,7408(r3)
    alt_fd_list[fd].dev      = 0;
  80ebd0:	e0ffff17 	ldw	r3,-4(fp)
  80ebd4:	1805883a 	mov	r2,r3
  80ebd8:	1085883a 	add	r2,r2,r2
  80ebdc:	10c5883a 	add	r2,r2,r3
  80ebe0:	100490ba 	slli	r2,r2,2
  80ebe4:	00c02074 	movhi	r3,129
  80ebe8:	10c7883a 	add	r3,r2,r3
  80ebec:	18073a15 	stw	zero,7400(r3)
  }
}
  80ebf0:	0001883a 	nop
  80ebf4:	e037883a 	mov	sp,fp
  80ebf8:	df000017 	ldw	fp,0(sp)
  80ebfc:	dec00104 	addi	sp,sp,4
  80ec00:	f800283a 	ret

0080ec04 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80ec04:	defff904 	addi	sp,sp,-28
  80ec08:	df000615 	stw	fp,24(sp)
  80ec0c:	df000604 	addi	fp,sp,24
  80ec10:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  80ec14:	0005303a 	rdctl	r2,status
  80ec18:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ec1c:	e0fffd17 	ldw	r3,-12(fp)
  80ec20:	00bfff84 	movi	r2,-2
  80ec24:	1884703a 	and	r2,r3,r2
  80ec28:	1001703a 	wrctl	status,r2
  return context;
  80ec2c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80ec30:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80ec34:	d0a00f17 	ldw	r2,-32708(gp)
  80ec38:	10c000c4 	addi	r3,r2,3
  80ec3c:	00bfff04 	movi	r2,-4
  80ec40:	1884703a 	and	r2,r3,r2
  80ec44:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80ec48:	d0e00f17 	ldw	r3,-32708(gp)
  80ec4c:	e0bffa17 	ldw	r2,-24(fp)
  80ec50:	1887883a 	add	r3,r3,r2
  80ec54:	00804034 	movhi	r2,256
  80ec58:	10800004 	addi	r2,r2,0
  80ec5c:	10c0072e 	bgeu	r2,r3,80ec7c <sbrk+0x78>
  80ec60:	e0bfff17 	ldw	r2,-4(fp)
  80ec64:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80ec68:	e0bffc17 	ldw	r2,-16(fp)
  80ec6c:	1001703a 	wrctl	status,r2
}
  80ec70:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80ec74:	00bfffc4 	movi	r2,-1
  80ec78:	00000c06 	br	80ecac <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80ec7c:	d0a00f17 	ldw	r2,-32708(gp)
  80ec80:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  80ec84:	d0e00f17 	ldw	r3,-32708(gp)
  80ec88:	e0bffa17 	ldw	r2,-24(fp)
  80ec8c:	1885883a 	add	r2,r3,r2
  80ec90:	d0a00f15 	stw	r2,-32708(gp)
  80ec94:	e0bfff17 	ldw	r2,-4(fp)
  80ec98:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80ec9c:	e0bffb17 	ldw	r2,-20(fp)
  80eca0:	1001703a 	wrctl	status,r2
}
  80eca4:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80eca8:	e0bffe17 	ldw	r2,-8(fp)
} 
  80ecac:	e037883a 	mov	sp,fp
  80ecb0:	df000017 	ldw	fp,0(sp)
  80ecb4:	dec00104 	addi	sp,sp,4
  80ecb8:	f800283a 	ret

0080ecbc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80ecbc:	defffa04 	addi	sp,sp,-24
  80ecc0:	df000515 	stw	fp,20(sp)
  80ecc4:	df000504 	addi	fp,sp,20
  80ecc8:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  80eccc:	0005303a 	rdctl	r2,status
  80ecd0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ecd4:	e0fffc17 	ldw	r3,-16(fp)
  80ecd8:	00bfff84 	movi	r2,-2
  80ecdc:	1884703a 	and	r2,r3,r2
  80ece0:	1001703a 	wrctl	status,r2
  return context;
  80ece4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80ece8:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  80ecec:	e0bffb17 	ldw	r2,-20(fp)
  80ecf0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80ecf4:	e0bffd17 	ldw	r2,-12(fp)
  80ecf8:	10800017 	ldw	r2,0(r2)
  80ecfc:	e0fffd17 	ldw	r3,-12(fp)
  80ed00:	18c00117 	ldw	r3,4(r3)
  80ed04:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80ed08:	e0bffd17 	ldw	r2,-12(fp)
  80ed0c:	10800117 	ldw	r2,4(r2)
  80ed10:	e0fffd17 	ldw	r3,-12(fp)
  80ed14:	18c00017 	ldw	r3,0(r3)
  80ed18:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80ed1c:	e0bffd17 	ldw	r2,-12(fp)
  80ed20:	e0fffd17 	ldw	r3,-12(fp)
  80ed24:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80ed28:	e0bffd17 	ldw	r2,-12(fp)
  80ed2c:	e0fffd17 	ldw	r3,-12(fp)
  80ed30:	10c00015 	stw	r3,0(r2)
} 
  80ed34:	0001883a 	nop
  80ed38:	e0bfff17 	ldw	r2,-4(fp)
  80ed3c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80ed40:	e0bffe17 	ldw	r2,-8(fp)
  80ed44:	1001703a 	wrctl	status,r2
}
  80ed48:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  80ed4c:	0001883a 	nop
  80ed50:	e037883a 	mov	sp,fp
  80ed54:	df000017 	ldw	fp,0(sp)
  80ed58:	dec00104 	addi	sp,sp,4
  80ed5c:	f800283a 	ret

0080ed60 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80ed60:	defffb04 	addi	sp,sp,-20
  80ed64:	dfc00415 	stw	ra,16(sp)
  80ed68:	df000315 	stw	fp,12(sp)
  80ed6c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80ed70:	d0a01017 	ldw	r2,-32704(gp)
  80ed74:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80ed78:	d0a71717 	ldw	r2,-25508(gp)
  80ed7c:	10800044 	addi	r2,r2,1
  80ed80:	d0a71715 	stw	r2,-25508(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80ed84:	00002e06 	br	80ee40 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80ed88:	e0bfff17 	ldw	r2,-4(fp)
  80ed8c:	10800017 	ldw	r2,0(r2)
  80ed90:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80ed94:	e0bfff17 	ldw	r2,-4(fp)
  80ed98:	10800403 	ldbu	r2,16(r2)
  80ed9c:	10803fcc 	andi	r2,r2,255
  80eda0:	10000426 	beq	r2,zero,80edb4 <alt_tick+0x54>
  80eda4:	d0a71717 	ldw	r2,-25508(gp)
  80eda8:	1000021e 	bne	r2,zero,80edb4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80edac:	e0bfff17 	ldw	r2,-4(fp)
  80edb0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80edb4:	e0bfff17 	ldw	r2,-4(fp)
  80edb8:	10800217 	ldw	r2,8(r2)
  80edbc:	d0e71717 	ldw	r3,-25508(gp)
  80edc0:	18801d36 	bltu	r3,r2,80ee38 <alt_tick+0xd8>
  80edc4:	e0bfff17 	ldw	r2,-4(fp)
  80edc8:	10800403 	ldbu	r2,16(r2)
  80edcc:	10803fcc 	andi	r2,r2,255
  80edd0:	1000191e 	bne	r2,zero,80ee38 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80edd4:	e0bfff17 	ldw	r2,-4(fp)
  80edd8:	10800317 	ldw	r2,12(r2)
  80eddc:	e0ffff17 	ldw	r3,-4(fp)
  80ede0:	18c00517 	ldw	r3,20(r3)
  80ede4:	1809883a 	mov	r4,r3
  80ede8:	103ee83a 	callr	r2
  80edec:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80edf0:	e0bffd17 	ldw	r2,-12(fp)
  80edf4:	1000031e 	bne	r2,zero,80ee04 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80edf8:	e13fff17 	ldw	r4,-4(fp)
  80edfc:	080ecbc0 	call	80ecbc <alt_alarm_stop>
  80ee00:	00000d06 	br	80ee38 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80ee04:	e0bfff17 	ldw	r2,-4(fp)
  80ee08:	10c00217 	ldw	r3,8(r2)
  80ee0c:	e0bffd17 	ldw	r2,-12(fp)
  80ee10:	1887883a 	add	r3,r3,r2
  80ee14:	e0bfff17 	ldw	r2,-4(fp)
  80ee18:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80ee1c:	e0bfff17 	ldw	r2,-4(fp)
  80ee20:	10c00217 	ldw	r3,8(r2)
  80ee24:	d0a71717 	ldw	r2,-25508(gp)
  80ee28:	1880032e 	bgeu	r3,r2,80ee38 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80ee2c:	e0bfff17 	ldw	r2,-4(fp)
  80ee30:	00c00044 	movi	r3,1
  80ee34:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80ee38:	e0bffe17 	ldw	r2,-8(fp)
  80ee3c:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  80ee40:	e0ffff17 	ldw	r3,-4(fp)
  80ee44:	d0a01004 	addi	r2,gp,-32704
  80ee48:	18bfcf1e 	bne	r3,r2,80ed88 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80ee4c:	0001883a 	nop
}
  80ee50:	0001883a 	nop
  80ee54:	e037883a 	mov	sp,fp
  80ee58:	dfc00117 	ldw	ra,4(sp)
  80ee5c:	df000017 	ldw	fp,0(sp)
  80ee60:	dec00204 	addi	sp,sp,8
  80ee64:	f800283a 	ret

0080ee68 <alt_get_errno>:
{
  80ee68:	defffe04 	addi	sp,sp,-8
  80ee6c:	dfc00115 	stw	ra,4(sp)
  80ee70:	df000015 	stw	fp,0(sp)
  80ee74:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ee78:	d0a00e17 	ldw	r2,-32712(gp)
  80ee7c:	10000326 	beq	r2,zero,80ee8c <alt_get_errno+0x24>
  80ee80:	d0a00e17 	ldw	r2,-32712(gp)
  80ee84:	103ee83a 	callr	r2
  80ee88:	00000106 	br	80ee90 <alt_get_errno+0x28>
  80ee8c:	d0a71104 	addi	r2,gp,-25532
}
  80ee90:	e037883a 	mov	sp,fp
  80ee94:	dfc00117 	ldw	ra,4(sp)
  80ee98:	df000017 	ldw	fp,0(sp)
  80ee9c:	dec00204 	addi	sp,sp,8
  80eea0:	f800283a 	ret

0080eea4 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80eea4:	defffc04 	addi	sp,sp,-16
  80eea8:	dfc00315 	stw	ra,12(sp)
  80eeac:	df000215 	stw	fp,8(sp)
  80eeb0:	df000204 	addi	fp,sp,8
  80eeb4:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80eeb8:	d0a71717 	ldw	r2,-25508(gp)
  clock_t ticks = alt_nticks(); 
  80eebc:	e0bfff15 	stw	r2,-4(fp)
  return _alt_tick_rate;
  80eec0:	d0a71617 	ldw	r2,-25512(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80eec4:	1000061e 	bne	r2,zero,80eee0 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80eec8:	080ee680 	call	80ee68 <alt_get_errno>
  80eecc:	1007883a 	mov	r3,r2
  80eed0:	00801604 	movi	r2,88
  80eed4:	18800015 	stw	r2,0(r3)
    return 0;
  80eed8:	0005883a 	mov	r2,zero
  80eedc:	00000a06 	br	80ef08 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80eee0:	e0bffe17 	ldw	r2,-8(fp)
  80eee4:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80eee8:	e0bffe17 	ldw	r2,-8(fp)
  80eeec:	e0ffff17 	ldw	r3,-4(fp)
  80eef0:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  80eef4:	e0bffe17 	ldw	r2,-8(fp)
  80eef8:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80eefc:	e0bffe17 	ldw	r2,-8(fp)
  80ef00:	10000315 	stw	zero,12(r2)

  return ticks;
  80ef04:	e0bfff17 	ldw	r2,-4(fp)
}
  80ef08:	e037883a 	mov	sp,fp
  80ef0c:	dfc00117 	ldw	ra,4(sp)
  80ef10:	df000017 	ldw	fp,0(sp)
  80ef14:	dec00204 	addi	sp,sp,8
  80ef18:	f800283a 	ret

0080ef1c <alt_get_errno>:
{
  80ef1c:	defffe04 	addi	sp,sp,-8
  80ef20:	dfc00115 	stw	ra,4(sp)
  80ef24:	df000015 	stw	fp,0(sp)
  80ef28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ef2c:	d0a00e17 	ldw	r2,-32712(gp)
  80ef30:	10000326 	beq	r2,zero,80ef40 <alt_get_errno+0x24>
  80ef34:	d0a00e17 	ldw	r2,-32712(gp)
  80ef38:	103ee83a 	callr	r2
  80ef3c:	00000106 	br	80ef44 <alt_get_errno+0x28>
  80ef40:	d0a71104 	addi	r2,gp,-25532
}
  80ef44:	e037883a 	mov	sp,fp
  80ef48:	dfc00117 	ldw	ra,4(sp)
  80ef4c:	df000017 	ldw	fp,0(sp)
  80ef50:	dec00204 	addi	sp,sp,8
  80ef54:	f800283a 	ret

0080ef58 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80ef58:	defff904 	addi	sp,sp,-28
  80ef5c:	dfc00615 	stw	ra,24(sp)
  80ef60:	df000515 	stw	fp,20(sp)
  80ef64:	df000504 	addi	fp,sp,20
  80ef68:	e13ffd15 	stw	r4,-12(fp)
  80ef6c:	e17ffc15 	stw	r5,-16(fp)
  80ef70:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ef74:	e0bffd17 	ldw	r2,-12(fp)
  80ef78:	10000916 	blt	r2,zero,80efa0 <write+0x48>
  80ef7c:	e0fffd17 	ldw	r3,-12(fp)
  80ef80:	1805883a 	mov	r2,r3
  80ef84:	1085883a 	add	r2,r2,r2
  80ef88:	10c5883a 	add	r2,r2,r3
  80ef8c:	100490ba 	slli	r2,r2,2
  80ef90:	00c02074 	movhi	r3,129
  80ef94:	18c73a04 	addi	r3,r3,7400
  80ef98:	10c5883a 	add	r2,r2,r3
  80ef9c:	00000106 	br	80efa4 <write+0x4c>
  80efa0:	0005883a 	mov	r2,zero
  80efa4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80efa8:	e0bfff17 	ldw	r2,-4(fp)
  80efac:	10002126 	beq	r2,zero,80f034 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80efb0:	e0bfff17 	ldw	r2,-4(fp)
  80efb4:	10800217 	ldw	r2,8(r2)
  80efb8:	108000cc 	andi	r2,r2,3
  80efbc:	10001826 	beq	r2,zero,80f020 <write+0xc8>
  80efc0:	e0bfff17 	ldw	r2,-4(fp)
  80efc4:	10800017 	ldw	r2,0(r2)
  80efc8:	10800617 	ldw	r2,24(r2)
  80efcc:	10001426 	beq	r2,zero,80f020 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80efd0:	e0bfff17 	ldw	r2,-4(fp)
  80efd4:	10800017 	ldw	r2,0(r2)
  80efd8:	10800617 	ldw	r2,24(r2)
  80efdc:	e0fffb17 	ldw	r3,-20(fp)
  80efe0:	180d883a 	mov	r6,r3
  80efe4:	e17ffc17 	ldw	r5,-16(fp)
  80efe8:	e13fff17 	ldw	r4,-4(fp)
  80efec:	103ee83a 	callr	r2
  80eff0:	e0bffe15 	stw	r2,-8(fp)
  80eff4:	e0bffe17 	ldw	r2,-8(fp)
  80eff8:	1000070e 	bge	r2,zero,80f018 <write+0xc0>
      {
        ALT_ERRNO = -rval;
  80effc:	080ef1c0 	call	80ef1c <alt_get_errno>
  80f000:	1007883a 	mov	r3,r2
  80f004:	e0bffe17 	ldw	r2,-8(fp)
  80f008:	0085c83a 	sub	r2,zero,r2
  80f00c:	18800015 	stw	r2,0(r3)
        return -1;
  80f010:	00bfffc4 	movi	r2,-1
  80f014:	00000c06 	br	80f048 <write+0xf0>
      }
      return rval;
  80f018:	e0bffe17 	ldw	r2,-8(fp)
  80f01c:	00000a06 	br	80f048 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80f020:	080ef1c0 	call	80ef1c <alt_get_errno>
  80f024:	1007883a 	mov	r3,r2
  80f028:	00800344 	movi	r2,13
  80f02c:	18800015 	stw	r2,0(r3)
  80f030:	00000406 	br	80f044 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80f034:	080ef1c0 	call	80ef1c <alt_get_errno>
  80f038:	1007883a 	mov	r3,r2
  80f03c:	00801444 	movi	r2,81
  80f040:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80f044:	00bfffc4 	movi	r2,-1
}
  80f048:	e037883a 	mov	sp,fp
  80f04c:	dfc00117 	ldw	ra,4(sp)
  80f050:	df000017 	ldw	fp,0(sp)
  80f054:	dec00204 	addi	sp,sp,8
  80f058:	f800283a 	ret

0080f05c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80f05c:	defffd04 	addi	sp,sp,-12
  80f060:	dfc00215 	stw	ra,8(sp)
  80f064:	df000115 	stw	fp,4(sp)
  80f068:	df000104 	addi	fp,sp,4
  80f06c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80f070:	d1600b04 	addi	r5,gp,-32724
  80f074:	e13fff17 	ldw	r4,-4(fp)
  80f078:	080fe600 	call	80fe60 <alt_dev_llist_insert>
}
  80f07c:	e037883a 	mov	sp,fp
  80f080:	dfc00117 	ldw	ra,4(sp)
  80f084:	df000017 	ldw	fp,0(sp)
  80f088:	dec00204 	addi	sp,sp,8
  80f08c:	f800283a 	ret

0080f090 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80f090:	defffd04 	addi	sp,sp,-12
  80f094:	dfc00215 	stw	ra,8(sp)
  80f098:	df000115 	stw	fp,4(sp)
  80f09c:	df000104 	addi	fp,sp,4
  80f0a0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80f0a4:	08106640 	call	810664 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80f0a8:	00800044 	movi	r2,1
  80f0ac:	1001703a 	wrctl	status,r2
}
  80f0b0:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  80f0b4:	0001883a 	nop
  80f0b8:	e037883a 	mov	sp,fp
  80f0bc:	dfc00117 	ldw	ra,4(sp)
  80f0c0:	df000017 	ldw	fp,0(sp)
  80f0c4:	dec00204 	addi	sp,sp,8
  80f0c8:	f800283a 	ret

0080f0cc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80f0cc:	defffe04 	addi	sp,sp,-8
  80f0d0:	dfc00115 	stw	ra,4(sp)
  80f0d4:	df000015 	stw	fp,0(sp)
  80f0d8:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80f0dc:	01c0fa04 	movi	r7,1000
  80f0e0:	01800044 	movi	r6,1
  80f0e4:	000b883a 	mov	r5,zero
  80f0e8:	01004034 	movhi	r4,256
  80f0ec:	21040004 	addi	r4,r4,4096
  80f0f0:	080fc200 	call	80fc20 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80f0f4:	01800404 	movi	r6,16
  80f0f8:	000b883a 	mov	r5,zero
  80f0fc:	01002074 	movhi	r4,129
  80f100:	2107a404 	addi	r4,r4,7824
  80f104:	080f2940 	call	80f294 <altera_avalon_jtag_uart_init>
  80f108:	01002074 	movhi	r4,129
  80f10c:	21079a04 	addi	r4,r4,7784
  80f110:	080f05c0 	call	80f05c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80f114:	0001883a 	nop
}
  80f118:	0001883a 	nop
  80f11c:	e037883a 	mov	sp,fp
  80f120:	dfc00117 	ldw	ra,4(sp)
  80f124:	df000017 	ldw	fp,0(sp)
  80f128:	dec00204 	addi	sp,sp,8
  80f12c:	f800283a 	ret

0080f130 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80f130:	defffa04 	addi	sp,sp,-24
  80f134:	dfc00515 	stw	ra,20(sp)
  80f138:	df000415 	stw	fp,16(sp)
  80f13c:	df000404 	addi	fp,sp,16
  80f140:	e13ffe15 	stw	r4,-8(fp)
  80f144:	e17ffd15 	stw	r5,-12(fp)
  80f148:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f14c:	e0bffe17 	ldw	r2,-8(fp)
  80f150:	10800017 	ldw	r2,0(r2)
  80f154:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80f158:	e0bfff17 	ldw	r2,-4(fp)
  80f15c:	10c00a04 	addi	r3,r2,40
  80f160:	e0bffe17 	ldw	r2,-8(fp)
  80f164:	10800217 	ldw	r2,8(r2)
  80f168:	100f883a 	mov	r7,r2
  80f16c:	e1bffc17 	ldw	r6,-16(fp)
  80f170:	e17ffd17 	ldw	r5,-12(fp)
  80f174:	1809883a 	mov	r4,r3
  80f178:	080f75c0 	call	80f75c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80f17c:	e037883a 	mov	sp,fp
  80f180:	dfc00117 	ldw	ra,4(sp)
  80f184:	df000017 	ldw	fp,0(sp)
  80f188:	dec00204 	addi	sp,sp,8
  80f18c:	f800283a 	ret

0080f190 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80f190:	defffa04 	addi	sp,sp,-24
  80f194:	dfc00515 	stw	ra,20(sp)
  80f198:	df000415 	stw	fp,16(sp)
  80f19c:	df000404 	addi	fp,sp,16
  80f1a0:	e13ffe15 	stw	r4,-8(fp)
  80f1a4:	e17ffd15 	stw	r5,-12(fp)
  80f1a8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f1ac:	e0bffe17 	ldw	r2,-8(fp)
  80f1b0:	10800017 	ldw	r2,0(r2)
  80f1b4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80f1b8:	e0bfff17 	ldw	r2,-4(fp)
  80f1bc:	10c00a04 	addi	r3,r2,40
  80f1c0:	e0bffe17 	ldw	r2,-8(fp)
  80f1c4:	10800217 	ldw	r2,8(r2)
  80f1c8:	100f883a 	mov	r7,r2
  80f1cc:	e1bffc17 	ldw	r6,-16(fp)
  80f1d0:	e17ffd17 	ldw	r5,-12(fp)
  80f1d4:	1809883a 	mov	r4,r3
  80f1d8:	080f97c0 	call	80f97c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80f1dc:	e037883a 	mov	sp,fp
  80f1e0:	dfc00117 	ldw	ra,4(sp)
  80f1e4:	df000017 	ldw	fp,0(sp)
  80f1e8:	dec00204 	addi	sp,sp,8
  80f1ec:	f800283a 	ret

0080f1f0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80f1f0:	defffc04 	addi	sp,sp,-16
  80f1f4:	dfc00315 	stw	ra,12(sp)
  80f1f8:	df000215 	stw	fp,8(sp)
  80f1fc:	df000204 	addi	fp,sp,8
  80f200:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f204:	e0bffe17 	ldw	r2,-8(fp)
  80f208:	10800017 	ldw	r2,0(r2)
  80f20c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80f210:	e0bfff17 	ldw	r2,-4(fp)
  80f214:	10c00a04 	addi	r3,r2,40
  80f218:	e0bffe17 	ldw	r2,-8(fp)
  80f21c:	10800217 	ldw	r2,8(r2)
  80f220:	100b883a 	mov	r5,r2
  80f224:	1809883a 	mov	r4,r3
  80f228:	080f6000 	call	80f600 <altera_avalon_jtag_uart_close>
}
  80f22c:	e037883a 	mov	sp,fp
  80f230:	dfc00117 	ldw	ra,4(sp)
  80f234:	df000017 	ldw	fp,0(sp)
  80f238:	dec00204 	addi	sp,sp,8
  80f23c:	f800283a 	ret

0080f240 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80f240:	defffa04 	addi	sp,sp,-24
  80f244:	dfc00515 	stw	ra,20(sp)
  80f248:	df000415 	stw	fp,16(sp)
  80f24c:	df000404 	addi	fp,sp,16
  80f250:	e13ffe15 	stw	r4,-8(fp)
  80f254:	e17ffd15 	stw	r5,-12(fp)
  80f258:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80f25c:	e0bffe17 	ldw	r2,-8(fp)
  80f260:	10800017 	ldw	r2,0(r2)
  80f264:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80f268:	e0bfff17 	ldw	r2,-4(fp)
  80f26c:	10800a04 	addi	r2,r2,40
  80f270:	e1bffc17 	ldw	r6,-16(fp)
  80f274:	e17ffd17 	ldw	r5,-12(fp)
  80f278:	1009883a 	mov	r4,r2
  80f27c:	080f6680 	call	80f668 <altera_avalon_jtag_uart_ioctl>
}
  80f280:	e037883a 	mov	sp,fp
  80f284:	dfc00117 	ldw	ra,4(sp)
  80f288:	df000017 	ldw	fp,0(sp)
  80f28c:	dec00204 	addi	sp,sp,8
  80f290:	f800283a 	ret

0080f294 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80f294:	defffa04 	addi	sp,sp,-24
  80f298:	dfc00515 	stw	ra,20(sp)
  80f29c:	df000415 	stw	fp,16(sp)
  80f2a0:	df000404 	addi	fp,sp,16
  80f2a4:	e13fff15 	stw	r4,-4(fp)
  80f2a8:	e17ffe15 	stw	r5,-8(fp)
  80f2ac:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f2b0:	e0bfff17 	ldw	r2,-4(fp)
  80f2b4:	00c00044 	movi	r3,1
  80f2b8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80f2bc:	e0bfff17 	ldw	r2,-4(fp)
  80f2c0:	10800017 	ldw	r2,0(r2)
  80f2c4:	10800104 	addi	r2,r2,4
  80f2c8:	1007883a 	mov	r3,r2
  80f2cc:	e0bfff17 	ldw	r2,-4(fp)
  80f2d0:	10800817 	ldw	r2,32(r2)
  80f2d4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80f2d8:	e0bffe17 	ldw	r2,-8(fp)
  80f2dc:	e0fffd17 	ldw	r3,-12(fp)
  80f2e0:	d8000015 	stw	zero,0(sp)
  80f2e4:	e1ffff17 	ldw	r7,-4(fp)
  80f2e8:	01802074 	movhi	r6,129
  80f2ec:	31bcd504 	addi	r6,r6,-3244
  80f2f0:	180b883a 	mov	r5,r3
  80f2f4:	1009883a 	mov	r4,r2
  80f2f8:	08100040 	call	810004 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80f2fc:	e0bfff17 	ldw	r2,-4(fp)
  80f300:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80f304:	e0bfff17 	ldw	r2,-4(fp)
  80f308:	10800204 	addi	r2,r2,8
  80f30c:	d0e71617 	ldw	r3,-25512(gp)
  80f310:	e1ffff17 	ldw	r7,-4(fp)
  80f314:	01802074 	movhi	r6,129
  80f318:	31bd5804 	addi	r6,r6,-2720
  80f31c:	180b883a 	mov	r5,r3
  80f320:	1009883a 	mov	r4,r2
  80f324:	080fca40 	call	80fca4 <alt_alarm_start>
  80f328:	1000040e 	bge	r2,zero,80f33c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80f32c:	e0ffff17 	ldw	r3,-4(fp)
  80f330:	00a00034 	movhi	r2,32768
  80f334:	10bfffc4 	addi	r2,r2,-1
  80f338:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80f33c:	0001883a 	nop
  80f340:	e037883a 	mov	sp,fp
  80f344:	dfc00117 	ldw	ra,4(sp)
  80f348:	df000017 	ldw	fp,0(sp)
  80f34c:	dec00204 	addi	sp,sp,8
  80f350:	f800283a 	ret

0080f354 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80f354:	defff804 	addi	sp,sp,-32
  80f358:	df000715 	stw	fp,28(sp)
  80f35c:	df000704 	addi	fp,sp,28
  80f360:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80f364:	e0bff917 	ldw	r2,-28(fp)
  80f368:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  80f36c:	e0bffd17 	ldw	r2,-12(fp)
  80f370:	10800017 	ldw	r2,0(r2)
  80f374:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f378:	e0bffc17 	ldw	r2,-16(fp)
  80f37c:	10800104 	addi	r2,r2,4
  80f380:	10800037 	ldwio	r2,0(r2)
  80f384:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80f388:	e0bffb17 	ldw	r2,-20(fp)
  80f38c:	1080c00c 	andi	r2,r2,768
  80f390:	10006d26 	beq	r2,zero,80f548 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80f394:	e0bffb17 	ldw	r2,-20(fp)
  80f398:	1080400c 	andi	r2,r2,256
  80f39c:	10003526 	beq	r2,zero,80f474 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80f3a0:	00800074 	movhi	r2,1
  80f3a4:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f3a8:	e0bffd17 	ldw	r2,-12(fp)
  80f3ac:	10800a17 	ldw	r2,40(r2)
  80f3b0:	10800044 	addi	r2,r2,1
  80f3b4:	1081ffcc 	andi	r2,r2,2047
  80f3b8:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80f3bc:	e0bffd17 	ldw	r2,-12(fp)
  80f3c0:	10800b17 	ldw	r2,44(r2)
  80f3c4:	e0fffa17 	ldw	r3,-24(fp)
  80f3c8:	18801526 	beq	r3,r2,80f420 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80f3cc:	e0bffc17 	ldw	r2,-16(fp)
  80f3d0:	10800037 	ldwio	r2,0(r2)
  80f3d4:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80f3d8:	e0bfff17 	ldw	r2,-4(fp)
  80f3dc:	10a0000c 	andi	r2,r2,32768
  80f3e0:	10001126 	beq	r2,zero,80f428 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80f3e4:	e0bffd17 	ldw	r2,-12(fp)
  80f3e8:	10800a17 	ldw	r2,40(r2)
  80f3ec:	e0ffff17 	ldw	r3,-4(fp)
  80f3f0:	1809883a 	mov	r4,r3
  80f3f4:	e0fffd17 	ldw	r3,-12(fp)
  80f3f8:	1885883a 	add	r2,r3,r2
  80f3fc:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f400:	e0bffd17 	ldw	r2,-12(fp)
  80f404:	10800a17 	ldw	r2,40(r2)
  80f408:	10800044 	addi	r2,r2,1
  80f40c:	10c1ffcc 	andi	r3,r2,2047
  80f410:	e0bffd17 	ldw	r2,-12(fp)
  80f414:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80f418:	0001883a 	nop
      {
  80f41c:	003fe206 	br	80f3a8 <altera_avalon_jtag_uart_irq+0x54>
          break;
  80f420:	0001883a 	nop
  80f424:	00000106 	br	80f42c <altera_avalon_jtag_uart_irq+0xd8>
          break;
  80f428:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80f42c:	e0bfff17 	ldw	r2,-4(fp)
  80f430:	10bfffec 	andhi	r2,r2,65535
  80f434:	10000f26 	beq	r2,zero,80f474 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f438:	e0bffd17 	ldw	r2,-12(fp)
  80f43c:	10c00817 	ldw	r3,32(r2)
  80f440:	00bfff84 	movi	r2,-2
  80f444:	1886703a 	and	r3,r3,r2
  80f448:	e0bffd17 	ldw	r2,-12(fp)
  80f44c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80f450:	e0bffc17 	ldw	r2,-16(fp)
  80f454:	10800104 	addi	r2,r2,4
  80f458:	1007883a 	mov	r3,r2
  80f45c:	e0bffd17 	ldw	r2,-12(fp)
  80f460:	10800817 	ldw	r2,32(r2)
  80f464:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f468:	e0bffc17 	ldw	r2,-16(fp)
  80f46c:	10800104 	addi	r2,r2,4
  80f470:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80f474:	e0bffb17 	ldw	r2,-20(fp)
  80f478:	1080800c 	andi	r2,r2,512
  80f47c:	103fbe26 	beq	r2,zero,80f378 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80f480:	e0bffb17 	ldw	r2,-20(fp)
  80f484:	1004d43a 	srli	r2,r2,16
  80f488:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f48c:	00001406 	br	80f4e0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80f490:	e0bffc17 	ldw	r2,-16(fp)
  80f494:	e0fffd17 	ldw	r3,-12(fp)
  80f498:	18c00d17 	ldw	r3,52(r3)
  80f49c:	e13ffd17 	ldw	r4,-12(fp)
  80f4a0:	20c7883a 	add	r3,r4,r3
  80f4a4:	18c20e03 	ldbu	r3,2104(r3)
  80f4a8:	18c03fcc 	andi	r3,r3,255
  80f4ac:	18c0201c 	xori	r3,r3,128
  80f4b0:	18ffe004 	addi	r3,r3,-128
  80f4b4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f4b8:	e0bffd17 	ldw	r2,-12(fp)
  80f4bc:	10800d17 	ldw	r2,52(r2)
  80f4c0:	10800044 	addi	r2,r2,1
  80f4c4:	10c1ffcc 	andi	r3,r2,2047
  80f4c8:	e0bffd17 	ldw	r2,-12(fp)
  80f4cc:	10c00d15 	stw	r3,52(r2)
  80f4d0:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80f4d4:	e0bffe17 	ldw	r2,-8(fp)
  80f4d8:	10bfffc4 	addi	r2,r2,-1
  80f4dc:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  80f4e0:	e0bffe17 	ldw	r2,-8(fp)
  80f4e4:	10000526 	beq	r2,zero,80f4fc <altera_avalon_jtag_uart_irq+0x1a8>
  80f4e8:	e0bffd17 	ldw	r2,-12(fp)
  80f4ec:	10c00d17 	ldw	r3,52(r2)
  80f4f0:	e0bffd17 	ldw	r2,-12(fp)
  80f4f4:	10800c17 	ldw	r2,48(r2)
  80f4f8:	18bfe51e 	bne	r3,r2,80f490 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
  80f4fc:	e0bffe17 	ldw	r2,-8(fp)
  80f500:	103f9d26 	beq	r2,zero,80f378 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f504:	e0bffd17 	ldw	r2,-12(fp)
  80f508:	10c00817 	ldw	r3,32(r2)
  80f50c:	00bfff44 	movi	r2,-3
  80f510:	1886703a 	and	r3,r3,r2
  80f514:	e0bffd17 	ldw	r2,-12(fp)
  80f518:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f51c:	e0bffd17 	ldw	r2,-12(fp)
  80f520:	10800017 	ldw	r2,0(r2)
  80f524:	10800104 	addi	r2,r2,4
  80f528:	1007883a 	mov	r3,r2
  80f52c:	e0bffd17 	ldw	r2,-12(fp)
  80f530:	10800817 	ldw	r2,32(r2)
  80f534:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f538:	e0bffc17 	ldw	r2,-16(fp)
  80f53c:	10800104 	addi	r2,r2,4
  80f540:	10800037 	ldwio	r2,0(r2)
  {
  80f544:	003f8c06 	br	80f378 <altera_avalon_jtag_uart_irq+0x24>
      break;
  80f548:	0001883a 	nop
      }
    }
  }
}
  80f54c:	0001883a 	nop
  80f550:	e037883a 	mov	sp,fp
  80f554:	df000017 	ldw	fp,0(sp)
  80f558:	dec00104 	addi	sp,sp,4
  80f55c:	f800283a 	ret

0080f560 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80f560:	defffc04 	addi	sp,sp,-16
  80f564:	df000315 	stw	fp,12(sp)
  80f568:	df000304 	addi	fp,sp,12
  80f56c:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80f570:	e0bffd17 	ldw	r2,-12(fp)
  80f574:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80f578:	e0bfff17 	ldw	r2,-4(fp)
  80f57c:	10800017 	ldw	r2,0(r2)
  80f580:	10800104 	addi	r2,r2,4
  80f584:	10800037 	ldwio	r2,0(r2)
  80f588:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80f58c:	e0bffe17 	ldw	r2,-8(fp)
  80f590:	1081000c 	andi	r2,r2,1024
  80f594:	10000b26 	beq	r2,zero,80f5c4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80f598:	e0bfff17 	ldw	r2,-4(fp)
  80f59c:	10800017 	ldw	r2,0(r2)
  80f5a0:	10800104 	addi	r2,r2,4
  80f5a4:	1007883a 	mov	r3,r2
  80f5a8:	e0bfff17 	ldw	r2,-4(fp)
  80f5ac:	10800817 	ldw	r2,32(r2)
  80f5b0:	10810014 	ori	r2,r2,1024
  80f5b4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80f5b8:	e0bfff17 	ldw	r2,-4(fp)
  80f5bc:	10000915 	stw	zero,36(r2)
  80f5c0:	00000a06 	br	80f5ec <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80f5c4:	e0bfff17 	ldw	r2,-4(fp)
  80f5c8:	10c00917 	ldw	r3,36(r2)
  80f5cc:	00a00034 	movhi	r2,32768
  80f5d0:	10bfff04 	addi	r2,r2,-4
  80f5d4:	10c00536 	bltu	r2,r3,80f5ec <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80f5d8:	e0bfff17 	ldw	r2,-4(fp)
  80f5dc:	10800917 	ldw	r2,36(r2)
  80f5e0:	10c00044 	addi	r3,r2,1
  80f5e4:	e0bfff17 	ldw	r2,-4(fp)
  80f5e8:	10c00915 	stw	r3,36(r2)
  80f5ec:	d0a71617 	ldw	r2,-25512(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80f5f0:	e037883a 	mov	sp,fp
  80f5f4:	df000017 	ldw	fp,0(sp)
  80f5f8:	dec00104 	addi	sp,sp,4
  80f5fc:	f800283a 	ret

0080f600 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80f600:	defffd04 	addi	sp,sp,-12
  80f604:	df000215 	stw	fp,8(sp)
  80f608:	df000204 	addi	fp,sp,8
  80f60c:	e13fff15 	stw	r4,-4(fp)
  80f610:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f614:	00000506 	br	80f62c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80f618:	e0bffe17 	ldw	r2,-8(fp)
  80f61c:	1090000c 	andi	r2,r2,16384
  80f620:	10000226 	beq	r2,zero,80f62c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80f624:	00bffd44 	movi	r2,-11
  80f628:	00000b06 	br	80f658 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f62c:	e0bfff17 	ldw	r2,-4(fp)
  80f630:	10c00d17 	ldw	r3,52(r2)
  80f634:	e0bfff17 	ldw	r2,-4(fp)
  80f638:	10800c17 	ldw	r2,48(r2)
  80f63c:	18800526 	beq	r3,r2,80f654 <altera_avalon_jtag_uart_close+0x54>
  80f640:	e0bfff17 	ldw	r2,-4(fp)
  80f644:	10c00917 	ldw	r3,36(r2)
  80f648:	e0bfff17 	ldw	r2,-4(fp)
  80f64c:	10800117 	ldw	r2,4(r2)
  80f650:	18bff136 	bltu	r3,r2,80f618 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  80f654:	0005883a 	mov	r2,zero
}
  80f658:	e037883a 	mov	sp,fp
  80f65c:	df000017 	ldw	fp,0(sp)
  80f660:	dec00104 	addi	sp,sp,4
  80f664:	f800283a 	ret

0080f668 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80f668:	defffa04 	addi	sp,sp,-24
  80f66c:	df000515 	stw	fp,20(sp)
  80f670:	df000504 	addi	fp,sp,20
  80f674:	e13ffd15 	stw	r4,-12(fp)
  80f678:	e17ffc15 	stw	r5,-16(fp)
  80f67c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  80f680:	00bff9c4 	movi	r2,-25
  80f684:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  80f688:	e0bffc17 	ldw	r2,-16(fp)
  80f68c:	109a8060 	cmpeqi	r2,r2,27137
  80f690:	1000041e 	bne	r2,zero,80f6a4 <altera_avalon_jtag_uart_ioctl+0x3c>
  80f694:	e0bffc17 	ldw	r2,-16(fp)
  80f698:	109a80a0 	cmpeqi	r2,r2,27138
  80f69c:	1000181e 	bne	r2,zero,80f700 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  80f6a0:	00002906 	br	80f748 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  80f6a4:	e0bffd17 	ldw	r2,-12(fp)
  80f6a8:	10c00117 	ldw	r3,4(r2)
  80f6ac:	00a00034 	movhi	r2,32768
  80f6b0:	10bfffc4 	addi	r2,r2,-1
  80f6b4:	18802126 	beq	r3,r2,80f73c <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  80f6b8:	e0bffb17 	ldw	r2,-20(fp)
  80f6bc:	10800017 	ldw	r2,0(r2)
  80f6c0:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80f6c4:	e0bffe17 	ldw	r2,-8(fp)
  80f6c8:	10800090 	cmplti	r2,r2,2
  80f6cc:	1000061e 	bne	r2,zero,80f6e8 <altera_avalon_jtag_uart_ioctl+0x80>
  80f6d0:	e0fffe17 	ldw	r3,-8(fp)
  80f6d4:	00a00034 	movhi	r2,32768
  80f6d8:	10bfffc4 	addi	r2,r2,-1
  80f6dc:	18800226 	beq	r3,r2,80f6e8 <altera_avalon_jtag_uart_ioctl+0x80>
  80f6e0:	e0bffe17 	ldw	r2,-8(fp)
  80f6e4:	00000206 	br	80f6f0 <altera_avalon_jtag_uart_ioctl+0x88>
  80f6e8:	00a00034 	movhi	r2,32768
  80f6ec:	10bfff84 	addi	r2,r2,-2
  80f6f0:	e0fffd17 	ldw	r3,-12(fp)
  80f6f4:	18800115 	stw	r2,4(r3)
      rc = 0;
  80f6f8:	e03fff15 	stw	zero,-4(fp)
    break;
  80f6fc:	00000f06 	br	80f73c <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  80f700:	e0bffd17 	ldw	r2,-12(fp)
  80f704:	10c00117 	ldw	r3,4(r2)
  80f708:	00a00034 	movhi	r2,32768
  80f70c:	10bfffc4 	addi	r2,r2,-1
  80f710:	18800c26 	beq	r3,r2,80f744 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80f714:	e0bffd17 	ldw	r2,-12(fp)
  80f718:	10c00917 	ldw	r3,36(r2)
  80f71c:	e0bffd17 	ldw	r2,-12(fp)
  80f720:	10800117 	ldw	r2,4(r2)
  80f724:	1885803a 	cmpltu	r2,r3,r2
  80f728:	10c03fcc 	andi	r3,r2,255
  80f72c:	e0bffb17 	ldw	r2,-20(fp)
  80f730:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80f734:	e03fff15 	stw	zero,-4(fp)
    break;
  80f738:	00000206 	br	80f744 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  80f73c:	0001883a 	nop
  80f740:	00000106 	br	80f748 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  80f744:	0001883a 	nop
  }

  return rc;
  80f748:	e0bfff17 	ldw	r2,-4(fp)
}
  80f74c:	e037883a 	mov	sp,fp
  80f750:	df000017 	ldw	fp,0(sp)
  80f754:	dec00104 	addi	sp,sp,4
  80f758:	f800283a 	ret

0080f75c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80f75c:	defff304 	addi	sp,sp,-52
  80f760:	dfc00c15 	stw	ra,48(sp)
  80f764:	df000b15 	stw	fp,44(sp)
  80f768:	df000b04 	addi	fp,sp,44
  80f76c:	e13ff815 	stw	r4,-32(fp)
  80f770:	e17ff715 	stw	r5,-36(fp)
  80f774:	e1bff615 	stw	r6,-40(fp)
  80f778:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  80f77c:	e0bff717 	ldw	r2,-36(fp)
  80f780:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80f784:	00004706 	br	80f8a4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80f788:	e0bff817 	ldw	r2,-32(fp)
  80f78c:	10800a17 	ldw	r2,40(r2)
  80f790:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  80f794:	e0bff817 	ldw	r2,-32(fp)
  80f798:	10800b17 	ldw	r2,44(r2)
  80f79c:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  80f7a0:	e0fffd17 	ldw	r3,-12(fp)
  80f7a4:	e0bffc17 	ldw	r2,-16(fp)
  80f7a8:	18800536 	bltu	r3,r2,80f7c0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80f7ac:	e0fffd17 	ldw	r3,-12(fp)
  80f7b0:	e0bffc17 	ldw	r2,-16(fp)
  80f7b4:	1885c83a 	sub	r2,r3,r2
  80f7b8:	e0bffe15 	stw	r2,-8(fp)
  80f7bc:	00000406 	br	80f7d0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80f7c0:	00c20004 	movi	r3,2048
  80f7c4:	e0bffc17 	ldw	r2,-16(fp)
  80f7c8:	1885c83a 	sub	r2,r3,r2
  80f7cc:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80f7d0:	e0bffe17 	ldw	r2,-8(fp)
  80f7d4:	10001e26 	beq	r2,zero,80f850 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80f7d8:	e0fff617 	ldw	r3,-40(fp)
  80f7dc:	e0bffe17 	ldw	r2,-8(fp)
  80f7e0:	1880022e 	bgeu	r3,r2,80f7ec <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80f7e4:	e0bff617 	ldw	r2,-40(fp)
  80f7e8:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80f7ec:	e0bff817 	ldw	r2,-32(fp)
  80f7f0:	10c00e04 	addi	r3,r2,56
  80f7f4:	e0bffc17 	ldw	r2,-16(fp)
  80f7f8:	1885883a 	add	r2,r3,r2
  80f7fc:	e1bffe17 	ldw	r6,-8(fp)
  80f800:	100b883a 	mov	r5,r2
  80f804:	e13fff17 	ldw	r4,-4(fp)
  80f808:	0806e780 	call	806e78 <memcpy>
      ptr   += n;
  80f80c:	e0ffff17 	ldw	r3,-4(fp)
  80f810:	e0bffe17 	ldw	r2,-8(fp)
  80f814:	1885883a 	add	r2,r3,r2
  80f818:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  80f81c:	e0fff617 	ldw	r3,-40(fp)
  80f820:	e0bffe17 	ldw	r2,-8(fp)
  80f824:	1885c83a 	sub	r2,r3,r2
  80f828:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f82c:	e0fffc17 	ldw	r3,-16(fp)
  80f830:	e0bffe17 	ldw	r2,-8(fp)
  80f834:	1885883a 	add	r2,r3,r2
  80f838:	10c1ffcc 	andi	r3,r2,2047
  80f83c:	e0bff817 	ldw	r2,-32(fp)
  80f840:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80f844:	e0bff617 	ldw	r2,-40(fp)
  80f848:	00bfcf16 	blt	zero,r2,80f788 <altera_avalon_jtag_uart_read+0x2c>
  80f84c:	00000106 	br	80f854 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  80f850:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  80f854:	e0ffff17 	ldw	r3,-4(fp)
  80f858:	e0bff717 	ldw	r2,-36(fp)
  80f85c:	1880141e 	bne	r3,r2,80f8b0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80f860:	e0bff517 	ldw	r2,-44(fp)
  80f864:	1090000c 	andi	r2,r2,16384
  80f868:	1000131e 	bne	r2,zero,80f8b8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80f86c:	0001883a 	nop
  80f870:	e0bff817 	ldw	r2,-32(fp)
  80f874:	10800a17 	ldw	r2,40(r2)
  80f878:	e0fffd17 	ldw	r3,-12(fp)
  80f87c:	1880051e 	bne	r3,r2,80f894 <altera_avalon_jtag_uart_read+0x138>
  80f880:	e0bff817 	ldw	r2,-32(fp)
  80f884:	10c00917 	ldw	r3,36(r2)
  80f888:	e0bff817 	ldw	r2,-32(fp)
  80f88c:	10800117 	ldw	r2,4(r2)
  80f890:	18bff736 	bltu	r3,r2,80f870 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80f894:	e0bff817 	ldw	r2,-32(fp)
  80f898:	10800a17 	ldw	r2,40(r2)
  80f89c:	e0fffd17 	ldw	r3,-12(fp)
  80f8a0:	18800726 	beq	r3,r2,80f8c0 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  80f8a4:	e0bff617 	ldw	r2,-40(fp)
  80f8a8:	00bfb716 	blt	zero,r2,80f788 <altera_avalon_jtag_uart_read+0x2c>
  80f8ac:	00000506 	br	80f8c4 <altera_avalon_jtag_uart_read+0x168>
      break;
  80f8b0:	0001883a 	nop
  80f8b4:	00000306 	br	80f8c4 <altera_avalon_jtag_uart_read+0x168>
      break;
  80f8b8:	0001883a 	nop
  80f8bc:	00000106 	br	80f8c4 <altera_avalon_jtag_uart_read+0x168>
      break;
  80f8c0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80f8c4:	e0ffff17 	ldw	r3,-4(fp)
  80f8c8:	e0bff717 	ldw	r2,-36(fp)
  80f8cc:	18801926 	beq	r3,r2,80f934 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  80f8d0:	0005303a 	rdctl	r2,status
  80f8d4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f8d8:	e0fff917 	ldw	r3,-28(fp)
  80f8dc:	00bfff84 	movi	r2,-2
  80f8e0:	1884703a 	and	r2,r3,r2
  80f8e4:	1001703a 	wrctl	status,r2
  return context;
  80f8e8:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80f8ec:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f8f0:	e0bff817 	ldw	r2,-32(fp)
  80f8f4:	10800817 	ldw	r2,32(r2)
  80f8f8:	10c00054 	ori	r3,r2,1
  80f8fc:	e0bff817 	ldw	r2,-32(fp)
  80f900:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f904:	e0bff817 	ldw	r2,-32(fp)
  80f908:	10800017 	ldw	r2,0(r2)
  80f90c:	10800104 	addi	r2,r2,4
  80f910:	1007883a 	mov	r3,r2
  80f914:	e0bff817 	ldw	r2,-32(fp)
  80f918:	10800817 	ldw	r2,32(r2)
  80f91c:	18800035 	stwio	r2,0(r3)
  80f920:	e0bffb17 	ldw	r2,-20(fp)
  80f924:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80f928:	e0bffa17 	ldw	r2,-24(fp)
  80f92c:	1001703a 	wrctl	status,r2
}
  80f930:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80f934:	e0ffff17 	ldw	r3,-4(fp)
  80f938:	e0bff717 	ldw	r2,-36(fp)
  80f93c:	18800426 	beq	r3,r2,80f950 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  80f940:	e0ffff17 	ldw	r3,-4(fp)
  80f944:	e0bff717 	ldw	r2,-36(fp)
  80f948:	1885c83a 	sub	r2,r3,r2
  80f94c:	00000606 	br	80f968 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80f950:	e0bff517 	ldw	r2,-44(fp)
  80f954:	1090000c 	andi	r2,r2,16384
  80f958:	10000226 	beq	r2,zero,80f964 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  80f95c:	00bffd44 	movi	r2,-11
  80f960:	00000106 	br	80f968 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80f964:	00bffec4 	movi	r2,-5
}
  80f968:	e037883a 	mov	sp,fp
  80f96c:	dfc00117 	ldw	ra,4(sp)
  80f970:	df000017 	ldw	fp,0(sp)
  80f974:	dec00204 	addi	sp,sp,8
  80f978:	f800283a 	ret

0080f97c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80f97c:	defff304 	addi	sp,sp,-52
  80f980:	dfc00c15 	stw	ra,48(sp)
  80f984:	df000b15 	stw	fp,44(sp)
  80f988:	df000b04 	addi	fp,sp,44
  80f98c:	e13ff815 	stw	r4,-32(fp)
  80f990:	e17ff715 	stw	r5,-36(fp)
  80f994:	e1bff615 	stw	r6,-40(fp)
  80f998:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80f99c:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80f9a0:	e0bff717 	ldw	r2,-36(fp)
  80f9a4:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f9a8:	00003706 	br	80fa88 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80f9ac:	e0bff817 	ldw	r2,-32(fp)
  80f9b0:	10800c17 	ldw	r2,48(r2)
  80f9b4:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  80f9b8:	e0bff817 	ldw	r2,-32(fp)
  80f9bc:	10800d17 	ldw	r2,52(r2)
  80f9c0:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  80f9c4:	e0fffc17 	ldw	r3,-16(fp)
  80f9c8:	e0bfff17 	ldw	r2,-4(fp)
  80f9cc:	1880062e 	bgeu	r3,r2,80f9e8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80f9d0:	e0ffff17 	ldw	r3,-4(fp)
  80f9d4:	e0bffc17 	ldw	r2,-16(fp)
  80f9d8:	1885c83a 	sub	r2,r3,r2
  80f9dc:	10bfffc4 	addi	r2,r2,-1
  80f9e0:	e0bffe15 	stw	r2,-8(fp)
  80f9e4:	00000b06 	br	80fa14 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80f9e8:	e0bfff17 	ldw	r2,-4(fp)
  80f9ec:	10000526 	beq	r2,zero,80fa04 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80f9f0:	00c20004 	movi	r3,2048
  80f9f4:	e0bffc17 	ldw	r2,-16(fp)
  80f9f8:	1885c83a 	sub	r2,r3,r2
  80f9fc:	e0bffe15 	stw	r2,-8(fp)
  80fa00:	00000406 	br	80fa14 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80fa04:	00c1ffc4 	movi	r3,2047
  80fa08:	e0bffc17 	ldw	r2,-16(fp)
  80fa0c:	1885c83a 	sub	r2,r3,r2
  80fa10:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80fa14:	e0bffe17 	ldw	r2,-8(fp)
  80fa18:	10001e26 	beq	r2,zero,80fa94 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80fa1c:	e0fff617 	ldw	r3,-40(fp)
  80fa20:	e0bffe17 	ldw	r2,-8(fp)
  80fa24:	1880022e 	bgeu	r3,r2,80fa30 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80fa28:	e0bff617 	ldw	r2,-40(fp)
  80fa2c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80fa30:	e0bff817 	ldw	r2,-32(fp)
  80fa34:	10c20e04 	addi	r3,r2,2104
  80fa38:	e0bffc17 	ldw	r2,-16(fp)
  80fa3c:	1885883a 	add	r2,r3,r2
  80fa40:	e1bffe17 	ldw	r6,-8(fp)
  80fa44:	e17ff717 	ldw	r5,-36(fp)
  80fa48:	1009883a 	mov	r4,r2
  80fa4c:	0806e780 	call	806e78 <memcpy>
      ptr   += n;
  80fa50:	e0fff717 	ldw	r3,-36(fp)
  80fa54:	e0bffe17 	ldw	r2,-8(fp)
  80fa58:	1885883a 	add	r2,r3,r2
  80fa5c:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  80fa60:	e0fff617 	ldw	r3,-40(fp)
  80fa64:	e0bffe17 	ldw	r2,-8(fp)
  80fa68:	1885c83a 	sub	r2,r3,r2
  80fa6c:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80fa70:	e0fffc17 	ldw	r3,-16(fp)
  80fa74:	e0bffe17 	ldw	r2,-8(fp)
  80fa78:	1885883a 	add	r2,r3,r2
  80fa7c:	10c1ffcc 	andi	r3,r2,2047
  80fa80:	e0bff817 	ldw	r2,-32(fp)
  80fa84:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  80fa88:	e0bff617 	ldw	r2,-40(fp)
  80fa8c:	00bfc716 	blt	zero,r2,80f9ac <altera_avalon_jtag_uart_write+0x30>
  80fa90:	00000106 	br	80fa98 <altera_avalon_jtag_uart_write+0x11c>
        break;
  80fa94:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  80fa98:	0005303a 	rdctl	r2,status
  80fa9c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80faa0:	e0fff917 	ldw	r3,-28(fp)
  80faa4:	00bfff84 	movi	r2,-2
  80faa8:	1884703a 	and	r2,r3,r2
  80faac:	1001703a 	wrctl	status,r2
  return context;
  80fab0:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80fab4:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80fab8:	e0bff817 	ldw	r2,-32(fp)
  80fabc:	10800817 	ldw	r2,32(r2)
  80fac0:	10c00094 	ori	r3,r2,2
  80fac4:	e0bff817 	ldw	r2,-32(fp)
  80fac8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80facc:	e0bff817 	ldw	r2,-32(fp)
  80fad0:	10800017 	ldw	r2,0(r2)
  80fad4:	10800104 	addi	r2,r2,4
  80fad8:	1007883a 	mov	r3,r2
  80fadc:	e0bff817 	ldw	r2,-32(fp)
  80fae0:	10800817 	ldw	r2,32(r2)
  80fae4:	18800035 	stwio	r2,0(r3)
  80fae8:	e0bffb17 	ldw	r2,-20(fp)
  80faec:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80faf0:	e0bffa17 	ldw	r2,-24(fp)
  80faf4:	1001703a 	wrctl	status,r2
}
  80faf8:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80fafc:	e0bff617 	ldw	r2,-40(fp)
  80fb00:	0080100e 	bge	zero,r2,80fb44 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  80fb04:	e0bff517 	ldw	r2,-44(fp)
  80fb08:	1090000c 	andi	r2,r2,16384
  80fb0c:	1000101e 	bne	r2,zero,80fb50 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80fb10:	0001883a 	nop
  80fb14:	e0bff817 	ldw	r2,-32(fp)
  80fb18:	10800d17 	ldw	r2,52(r2)
  80fb1c:	e0ffff17 	ldw	r3,-4(fp)
  80fb20:	1880051e 	bne	r3,r2,80fb38 <altera_avalon_jtag_uart_write+0x1bc>
  80fb24:	e0bff817 	ldw	r2,-32(fp)
  80fb28:	10c00917 	ldw	r3,36(r2)
  80fb2c:	e0bff817 	ldw	r2,-32(fp)
  80fb30:	10800117 	ldw	r2,4(r2)
  80fb34:	18bff736 	bltu	r3,r2,80fb14 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80fb38:	e0bff817 	ldw	r2,-32(fp)
  80fb3c:	10800917 	ldw	r2,36(r2)
  80fb40:	1000051e 	bne	r2,zero,80fb58 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  80fb44:	e0bff617 	ldw	r2,-40(fp)
  80fb48:	00bfcf16 	blt	zero,r2,80fa88 <altera_avalon_jtag_uart_write+0x10c>
  80fb4c:	00000306 	br	80fb5c <altera_avalon_jtag_uart_write+0x1e0>
        break;
  80fb50:	0001883a 	nop
  80fb54:	00000106 	br	80fb5c <altera_avalon_jtag_uart_write+0x1e0>
         break;
  80fb58:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80fb5c:	e0fff717 	ldw	r3,-36(fp)
  80fb60:	e0bffd17 	ldw	r2,-12(fp)
  80fb64:	18800426 	beq	r3,r2,80fb78 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  80fb68:	e0fff717 	ldw	r3,-36(fp)
  80fb6c:	e0bffd17 	ldw	r2,-12(fp)
  80fb70:	1885c83a 	sub	r2,r3,r2
  80fb74:	00000606 	br	80fb90 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  80fb78:	e0bff517 	ldw	r2,-44(fp)
  80fb7c:	1090000c 	andi	r2,r2,16384
  80fb80:	10000226 	beq	r2,zero,80fb8c <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  80fb84:	00bffd44 	movi	r2,-11
  80fb88:	00000106 	br	80fb90 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80fb8c:	00bffec4 	movi	r2,-5
}
  80fb90:	e037883a 	mov	sp,fp
  80fb94:	dfc00117 	ldw	ra,4(sp)
  80fb98:	df000017 	ldw	fp,0(sp)
  80fb9c:	dec00204 	addi	sp,sp,8
  80fba0:	f800283a 	ret

0080fba4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80fba4:	defffa04 	addi	sp,sp,-24
  80fba8:	dfc00515 	stw	ra,20(sp)
  80fbac:	df000415 	stw	fp,16(sp)
  80fbb0:	df000404 	addi	fp,sp,16
  80fbb4:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80fbb8:	0007883a 	mov	r3,zero
  80fbbc:	e0bffc17 	ldw	r2,-16(fp)
  80fbc0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80fbc4:	e0bffc17 	ldw	r2,-16(fp)
  80fbc8:	10800104 	addi	r2,r2,4
  80fbcc:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
  80fbd0:	0005303a 	rdctl	r2,status
  80fbd4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fbd8:	e0fffd17 	ldw	r3,-12(fp)
  80fbdc:	00bfff84 	movi	r2,-2
  80fbe0:	1884703a 	and	r2,r3,r2
  80fbe4:	1001703a 	wrctl	status,r2
  return context;
  80fbe8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80fbec:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
  80fbf0:	080ed600 	call	80ed60 <alt_tick>
  80fbf4:	e0bfff17 	ldw	r2,-4(fp)
  80fbf8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80fbfc:	e0bffe17 	ldw	r2,-8(fp)
  80fc00:	1001703a 	wrctl	status,r2
}
  80fc04:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
  80fc08:	0001883a 	nop
  80fc0c:	e037883a 	mov	sp,fp
  80fc10:	dfc00117 	ldw	ra,4(sp)
  80fc14:	df000017 	ldw	fp,0(sp)
  80fc18:	dec00204 	addi	sp,sp,8
  80fc1c:	f800283a 	ret

0080fc20 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80fc20:	defff804 	addi	sp,sp,-32
  80fc24:	dfc00715 	stw	ra,28(sp)
  80fc28:	df000615 	stw	fp,24(sp)
  80fc2c:	df000604 	addi	fp,sp,24
  80fc30:	e13ffe15 	stw	r4,-8(fp)
  80fc34:	e17ffd15 	stw	r5,-12(fp)
  80fc38:	e1bffc15 	stw	r6,-16(fp)
  80fc3c:	e1fffb15 	stw	r7,-20(fp)
  80fc40:	e0bffb17 	ldw	r2,-20(fp)
  80fc44:	e0bfff15 	stw	r2,-4(fp)
  if (! _alt_tick_rate)
  80fc48:	d0a71617 	ldw	r2,-25512(gp)
  80fc4c:	1000031e 	bne	r2,zero,80fc5c <alt_avalon_timer_sc_init+0x3c>
    _alt_tick_rate = nticks;
  80fc50:	e0bfff17 	ldw	r2,-4(fp)
  80fc54:	d0a71615 	stw	r2,-25512(gp)
    return 0;
  80fc58:	00000106 	br	80fc60 <alt_avalon_timer_sc_init+0x40>
    return -1;
  80fc5c:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80fc60:	e0bffe17 	ldw	r2,-8(fp)
  80fc64:	10800104 	addi	r2,r2,4
  80fc68:	00c001c4 	movi	r3,7
  80fc6c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80fc70:	d8000015 	stw	zero,0(sp)
  80fc74:	e1fffe17 	ldw	r7,-8(fp)
  80fc78:	01802074 	movhi	r6,129
  80fc7c:	31bee904 	addi	r6,r6,-1116
  80fc80:	e17ffc17 	ldw	r5,-16(fp)
  80fc84:	e13ffd17 	ldw	r4,-12(fp)
  80fc88:	08100040 	call	810004 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80fc8c:	0001883a 	nop
  80fc90:	e037883a 	mov	sp,fp
  80fc94:	dfc00117 	ldw	ra,4(sp)
  80fc98:	df000017 	ldw	fp,0(sp)
  80fc9c:	dec00204 	addi	sp,sp,8
  80fca0:	f800283a 	ret

0080fca4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80fca4:	defff504 	addi	sp,sp,-44
  80fca8:	df000a15 	stw	fp,40(sp)
  80fcac:	df000a04 	addi	fp,sp,40
  80fcb0:	e13ff915 	stw	r4,-28(fp)
  80fcb4:	e17ff815 	stw	r5,-32(fp)
  80fcb8:	e1bff715 	stw	r6,-36(fp)
  80fcbc:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80fcc0:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
  80fcc4:	d0a71617 	ldw	r2,-25512(gp)
  
  if (alt_ticks_per_second ())
  80fcc8:	10003e26 	beq	r2,zero,80fdc4 <alt_alarm_start+0x120>
  {
    if (alarm)
  80fccc:	e0bff917 	ldw	r2,-28(fp)
  80fcd0:	10003a26 	beq	r2,zero,80fdbc <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
  80fcd4:	e0bff917 	ldw	r2,-28(fp)
  80fcd8:	e0fff717 	ldw	r3,-36(fp)
  80fcdc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80fce0:	e0bff917 	ldw	r2,-28(fp)
  80fce4:	e0fff617 	ldw	r3,-40(fp)
  80fce8:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  80fcec:	0005303a 	rdctl	r2,status
  80fcf0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fcf4:	e0fffd17 	ldw	r3,-12(fp)
  80fcf8:	00bfff84 	movi	r2,-2
  80fcfc:	1884703a 	and	r2,r3,r2
  80fd00:	1001703a 	wrctl	status,r2
  return context;
  80fd04:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
  80fd08:	e0bffe15 	stw	r2,-8(fp)
  return _alt_nticks;
  80fd0c:	d0a71717 	ldw	r2,-25508(gp)
      
      current_nticks = alt_nticks();
  80fd10:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80fd14:	e0fff817 	ldw	r3,-32(fp)
  80fd18:	e0bfff17 	ldw	r2,-4(fp)
  80fd1c:	1885883a 	add	r2,r3,r2
  80fd20:	10c00044 	addi	r3,r2,1
  80fd24:	e0bff917 	ldw	r2,-28(fp)
  80fd28:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80fd2c:	e0bff917 	ldw	r2,-28(fp)
  80fd30:	10c00217 	ldw	r3,8(r2)
  80fd34:	e0bfff17 	ldw	r2,-4(fp)
  80fd38:	1880042e 	bgeu	r3,r2,80fd4c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80fd3c:	e0bff917 	ldw	r2,-28(fp)
  80fd40:	00c00044 	movi	r3,1
  80fd44:	10c00405 	stb	r3,16(r2)
  80fd48:	00000206 	br	80fd54 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80fd4c:	e0bff917 	ldw	r2,-28(fp)
  80fd50:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80fd54:	e0bff917 	ldw	r2,-28(fp)
  80fd58:	d0e01004 	addi	r3,gp,-32704
  80fd5c:	e0fffb15 	stw	r3,-20(fp)
  80fd60:	e0bffa15 	stw	r2,-24(fp)
  entry->previous = list;
  80fd64:	e0bffa17 	ldw	r2,-24(fp)
  80fd68:	e0fffb17 	ldw	r3,-20(fp)
  80fd6c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fd70:	e0bffb17 	ldw	r2,-20(fp)
  80fd74:	10c00017 	ldw	r3,0(r2)
  80fd78:	e0bffa17 	ldw	r2,-24(fp)
  80fd7c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80fd80:	e0bffb17 	ldw	r2,-20(fp)
  80fd84:	10800017 	ldw	r2,0(r2)
  80fd88:	e0fffa17 	ldw	r3,-24(fp)
  80fd8c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fd90:	e0bffb17 	ldw	r2,-20(fp)
  80fd94:	e0fffa17 	ldw	r3,-24(fp)
  80fd98:	10c00015 	stw	r3,0(r2)
}
  80fd9c:	0001883a 	nop
  80fda0:	e0bffe17 	ldw	r2,-8(fp)
  80fda4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80fda8:	e0bffc17 	ldw	r2,-16(fp)
  80fdac:	1001703a 	wrctl	status,r2
}
  80fdb0:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  80fdb4:	0005883a 	mov	r2,zero
  80fdb8:	00000306 	br	80fdc8 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
  80fdbc:	00bffa84 	movi	r2,-22
  80fdc0:	00000106 	br	80fdc8 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
  80fdc4:	00bfde84 	movi	r2,-134
  }
}
  80fdc8:	e037883a 	mov	sp,fp
  80fdcc:	df000017 	ldw	fp,0(sp)
  80fdd0:	dec00104 	addi	sp,sp,4
  80fdd4:	f800283a 	ret

0080fdd8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80fdd8:	defffe04 	addi	sp,sp,-8
  80fddc:	df000115 	stw	fp,4(sp)
  80fde0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fde4:	e03fff15 	stw	zero,-4(fp)
  80fde8:	00000506 	br	80fe00 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80fdec:	e0bfff17 	ldw	r2,-4(fp)
  80fdf0:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fdf4:	e0bfff17 	ldw	r2,-4(fp)
  80fdf8:	10800804 	addi	r2,r2,32
  80fdfc:	e0bfff15 	stw	r2,-4(fp)
  80fe00:	e0bfff17 	ldw	r2,-4(fp)
  80fe04:	10820030 	cmpltui	r2,r2,2048
  80fe08:	103ff81e 	bne	r2,zero,80fdec <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80fe0c:	0001883a 	nop
  80fe10:	0001883a 	nop
  80fe14:	e037883a 	mov	sp,fp
  80fe18:	df000017 	ldw	fp,0(sp)
  80fe1c:	dec00104 	addi	sp,sp,4
  80fe20:	f800283a 	ret

0080fe24 <alt_get_errno>:
{
  80fe24:	defffe04 	addi	sp,sp,-8
  80fe28:	dfc00115 	stw	ra,4(sp)
  80fe2c:	df000015 	stw	fp,0(sp)
  80fe30:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fe34:	d0a00e17 	ldw	r2,-32712(gp)
  80fe38:	10000326 	beq	r2,zero,80fe48 <alt_get_errno+0x24>
  80fe3c:	d0a00e17 	ldw	r2,-32712(gp)
  80fe40:	103ee83a 	callr	r2
  80fe44:	00000106 	br	80fe4c <alt_get_errno+0x28>
  80fe48:	d0a71104 	addi	r2,gp,-25532
}
  80fe4c:	e037883a 	mov	sp,fp
  80fe50:	dfc00117 	ldw	ra,4(sp)
  80fe54:	df000017 	ldw	fp,0(sp)
  80fe58:	dec00204 	addi	sp,sp,8
  80fe5c:	f800283a 	ret

0080fe60 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80fe60:	defffa04 	addi	sp,sp,-24
  80fe64:	dfc00515 	stw	ra,20(sp)
  80fe68:	df000415 	stw	fp,16(sp)
  80fe6c:	df000404 	addi	fp,sp,16
  80fe70:	e13ffd15 	stw	r4,-12(fp)
  80fe74:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80fe78:	e0bffd17 	ldw	r2,-12(fp)
  80fe7c:	10000326 	beq	r2,zero,80fe8c <alt_dev_llist_insert+0x2c>
  80fe80:	e0bffd17 	ldw	r2,-12(fp)
  80fe84:	10800217 	ldw	r2,8(r2)
  80fe88:	1000061e 	bne	r2,zero,80fea4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80fe8c:	080fe240 	call	80fe24 <alt_get_errno>
  80fe90:	1007883a 	mov	r3,r2
  80fe94:	00800584 	movi	r2,22
  80fe98:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80fe9c:	00bffa84 	movi	r2,-22
  80fea0:	00001406 	br	80fef4 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80fea4:	e0bffd17 	ldw	r2,-12(fp)
  80fea8:	e0fffc17 	ldw	r3,-16(fp)
  80feac:	e0ffff15 	stw	r3,-4(fp)
  80feb0:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  80feb4:	e0bffe17 	ldw	r2,-8(fp)
  80feb8:	e0ffff17 	ldw	r3,-4(fp)
  80febc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fec0:	e0bfff17 	ldw	r2,-4(fp)
  80fec4:	10c00017 	ldw	r3,0(r2)
  80fec8:	e0bffe17 	ldw	r2,-8(fp)
  80fecc:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80fed0:	e0bfff17 	ldw	r2,-4(fp)
  80fed4:	10800017 	ldw	r2,0(r2)
  80fed8:	e0fffe17 	ldw	r3,-8(fp)
  80fedc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fee0:	e0bfff17 	ldw	r2,-4(fp)
  80fee4:	e0fffe17 	ldw	r3,-8(fp)
  80fee8:	10c00015 	stw	r3,0(r2)
}
  80feec:	0001883a 	nop

  return 0;  
  80fef0:	0005883a 	mov	r2,zero
}
  80fef4:	e037883a 	mov	sp,fp
  80fef8:	dfc00117 	ldw	ra,4(sp)
  80fefc:	df000017 	ldw	fp,0(sp)
  80ff00:	dec00204 	addi	sp,sp,8
  80ff04:	f800283a 	ret

0080ff08 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80ff08:	defffd04 	addi	sp,sp,-12
  80ff0c:	dfc00215 	stw	ra,8(sp)
  80ff10:	df000115 	stw	fp,4(sp)
  80ff14:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ff18:	00802074 	movhi	r2,129
  80ff1c:	10831b04 	addi	r2,r2,3180
  80ff20:	e0bfff15 	stw	r2,-4(fp)
  80ff24:	00000606 	br	80ff40 <_do_ctors+0x38>
        (*ctor) (); 
  80ff28:	e0bfff17 	ldw	r2,-4(fp)
  80ff2c:	10800017 	ldw	r2,0(r2)
  80ff30:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ff34:	e0bfff17 	ldw	r2,-4(fp)
  80ff38:	10bfff04 	addi	r2,r2,-4
  80ff3c:	e0bfff15 	stw	r2,-4(fp)
  80ff40:	e0ffff17 	ldw	r3,-4(fp)
  80ff44:	00802074 	movhi	r2,129
  80ff48:	10831c04 	addi	r2,r2,3184
  80ff4c:	18bff62e 	bgeu	r3,r2,80ff28 <_do_ctors+0x20>
}
  80ff50:	0001883a 	nop
  80ff54:	0001883a 	nop
  80ff58:	e037883a 	mov	sp,fp
  80ff5c:	dfc00117 	ldw	ra,4(sp)
  80ff60:	df000017 	ldw	fp,0(sp)
  80ff64:	dec00204 	addi	sp,sp,8
  80ff68:	f800283a 	ret

0080ff6c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80ff6c:	defffd04 	addi	sp,sp,-12
  80ff70:	dfc00215 	stw	ra,8(sp)
  80ff74:	df000115 	stw	fp,4(sp)
  80ff78:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ff7c:	00802074 	movhi	r2,129
  80ff80:	10831b04 	addi	r2,r2,3180
  80ff84:	e0bfff15 	stw	r2,-4(fp)
  80ff88:	00000606 	br	80ffa4 <_do_dtors+0x38>
        (*dtor) (); 
  80ff8c:	e0bfff17 	ldw	r2,-4(fp)
  80ff90:	10800017 	ldw	r2,0(r2)
  80ff94:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ff98:	e0bfff17 	ldw	r2,-4(fp)
  80ff9c:	10bfff04 	addi	r2,r2,-4
  80ffa0:	e0bfff15 	stw	r2,-4(fp)
  80ffa4:	e0ffff17 	ldw	r3,-4(fp)
  80ffa8:	00802074 	movhi	r2,129
  80ffac:	10831c04 	addi	r2,r2,3184
  80ffb0:	18bff62e 	bgeu	r3,r2,80ff8c <_do_dtors+0x20>
}
  80ffb4:	0001883a 	nop
  80ffb8:	0001883a 	nop
  80ffbc:	e037883a 	mov	sp,fp
  80ffc0:	dfc00117 	ldw	ra,4(sp)
  80ffc4:	df000017 	ldw	fp,0(sp)
  80ffc8:	dec00204 	addi	sp,sp,8
  80ffcc:	f800283a 	ret

0080ffd0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80ffd0:	defffe04 	addi	sp,sp,-8
  80ffd4:	dfc00115 	stw	ra,4(sp)
  80ffd8:	df000015 	stw	fp,0(sp)
  80ffdc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ffe0:	01420004 	movi	r5,2048
  80ffe4:	0009883a 	mov	r4,zero
  80ffe8:	08108d80 	call	8108d8 <alt_icache_flush>
#endif
}
  80ffec:	0001883a 	nop
  80fff0:	e037883a 	mov	sp,fp
  80fff4:	dfc00117 	ldw	ra,4(sp)
  80fff8:	df000017 	ldw	fp,0(sp)
  80fffc:	dec00204 	addi	sp,sp,8
  810000:	f800283a 	ret

00810004 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  810004:	defff904 	addi	sp,sp,-28
  810008:	dfc00615 	stw	ra,24(sp)
  81000c:	df000515 	stw	fp,20(sp)
  810010:	df000504 	addi	fp,sp,20
  810014:	e13fff15 	stw	r4,-4(fp)
  810018:	e17ffe15 	stw	r5,-8(fp)
  81001c:	e1bffd15 	stw	r6,-12(fp)
  810020:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  810024:	e0800217 	ldw	r2,8(fp)
  810028:	d8800015 	stw	r2,0(sp)
  81002c:	e1fffc17 	ldw	r7,-16(fp)
  810030:	e1bffd17 	ldw	r6,-12(fp)
  810034:	e17ffe17 	ldw	r5,-8(fp)
  810038:	e13fff17 	ldw	r4,-4(fp)
  81003c:	08101b40 	call	8101b4 <alt_iic_isr_register>
}  
  810040:	e037883a 	mov	sp,fp
  810044:	dfc00117 	ldw	ra,4(sp)
  810048:	df000017 	ldw	fp,0(sp)
  81004c:	dec00204 	addi	sp,sp,8
  810050:	f800283a 	ret

00810054 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  810054:	defff904 	addi	sp,sp,-28
  810058:	df000615 	stw	fp,24(sp)
  81005c:	df000604 	addi	fp,sp,24
  810060:	e13ffb15 	stw	r4,-20(fp)
  810064:	e17ffa15 	stw	r5,-24(fp)
  810068:	e0bffa17 	ldw	r2,-24(fp)
  81006c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  810070:	0005303a 	rdctl	r2,status
  810074:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810078:	e0fffe17 	ldw	r3,-8(fp)
  81007c:	00bfff84 	movi	r2,-2
  810080:	1884703a 	and	r2,r3,r2
  810084:	1001703a 	wrctl	status,r2
  return context;
  810088:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81008c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  810090:	00c00044 	movi	r3,1
  810094:	e0bfff17 	ldw	r2,-4(fp)
  810098:	1884983a 	sll	r2,r3,r2
  81009c:	1007883a 	mov	r3,r2
  8100a0:	d0a71817 	ldw	r2,-25504(gp)
  8100a4:	1884b03a 	or	r2,r3,r2
  8100a8:	d0a71815 	stw	r2,-25504(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8100ac:	d0a71817 	ldw	r2,-25504(gp)
  8100b0:	100170fa 	wrctl	ienable,r2
  8100b4:	e0bffd17 	ldw	r2,-12(fp)
  8100b8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  8100bc:	e0bffc17 	ldw	r2,-16(fp)
  8100c0:	1001703a 	wrctl	status,r2
}
  8100c4:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  8100c8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  8100cc:	e037883a 	mov	sp,fp
  8100d0:	df000017 	ldw	fp,0(sp)
  8100d4:	dec00104 	addi	sp,sp,4
  8100d8:	f800283a 	ret

008100dc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  8100dc:	defff904 	addi	sp,sp,-28
  8100e0:	df000615 	stw	fp,24(sp)
  8100e4:	df000604 	addi	fp,sp,24
  8100e8:	e13ffb15 	stw	r4,-20(fp)
  8100ec:	e17ffa15 	stw	r5,-24(fp)
  8100f0:	e0bffa17 	ldw	r2,-24(fp)
  8100f4:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  8100f8:	0005303a 	rdctl	r2,status
  8100fc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810100:	e0fffe17 	ldw	r3,-8(fp)
  810104:	00bfff84 	movi	r2,-2
  810108:	1884703a 	and	r2,r3,r2
  81010c:	1001703a 	wrctl	status,r2
  return context;
  810110:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
  810114:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
  810118:	00c00044 	movi	r3,1
  81011c:	e0bfff17 	ldw	r2,-4(fp)
  810120:	1884983a 	sll	r2,r3,r2
  810124:	0084303a 	nor	r2,zero,r2
  810128:	1007883a 	mov	r3,r2
  81012c:	d0a71817 	ldw	r2,-25504(gp)
  810130:	1884703a 	and	r2,r3,r2
  810134:	d0a71815 	stw	r2,-25504(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  810138:	d0a71817 	ldw	r2,-25504(gp)
  81013c:	100170fa 	wrctl	ienable,r2
  810140:	e0bffd17 	ldw	r2,-12(fp)
  810144:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  810148:	e0bffc17 	ldw	r2,-16(fp)
  81014c:	1001703a 	wrctl	status,r2
}
  810150:	0001883a 	nop
  return 0;
  810154:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  810158:	e037883a 	mov	sp,fp
  81015c:	df000017 	ldw	fp,0(sp)
  810160:	dec00104 	addi	sp,sp,4
  810164:	f800283a 	ret

00810168 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  810168:	defffc04 	addi	sp,sp,-16
  81016c:	df000315 	stw	fp,12(sp)
  810170:	df000304 	addi	fp,sp,12
  810174:	e13ffe15 	stw	r4,-8(fp)
  810178:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  81017c:	000530fa 	rdctl	r2,ienable
  810180:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  810184:	00c00044 	movi	r3,1
  810188:	e0bffd17 	ldw	r2,-12(fp)
  81018c:	1884983a 	sll	r2,r3,r2
  810190:	1007883a 	mov	r3,r2
  810194:	e0bfff17 	ldw	r2,-4(fp)
  810198:	1884703a 	and	r2,r3,r2
  81019c:	1004c03a 	cmpne	r2,r2,zero
  8101a0:	10803fcc 	andi	r2,r2,255
}
  8101a4:	e037883a 	mov	sp,fp
  8101a8:	df000017 	ldw	fp,0(sp)
  8101ac:	dec00104 	addi	sp,sp,4
  8101b0:	f800283a 	ret

008101b4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  8101b4:	defff504 	addi	sp,sp,-44
  8101b8:	dfc00a15 	stw	ra,40(sp)
  8101bc:	df000915 	stw	fp,36(sp)
  8101c0:	df000904 	addi	fp,sp,36
  8101c4:	e13ffa15 	stw	r4,-24(fp)
  8101c8:	e17ff915 	stw	r5,-28(fp)
  8101cc:	e1bff815 	stw	r6,-32(fp)
  8101d0:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
  8101d4:	00bffa84 	movi	r2,-22
  8101d8:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  8101dc:	e0bff917 	ldw	r2,-28(fp)
  8101e0:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  8101e4:	e0bffe17 	ldw	r2,-8(fp)
  8101e8:	10800808 	cmpgei	r2,r2,32
  8101ec:	1000251e 	bne	r2,zero,810284 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
  8101f0:	0005303a 	rdctl	r2,status
  8101f4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8101f8:	e0fffc17 	ldw	r3,-16(fp)
  8101fc:	00bfff84 	movi	r2,-2
  810200:	1884703a 	and	r2,r3,r2
  810204:	1001703a 	wrctl	status,r2
  return context;
  810208:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  81020c:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
  810210:	e0bffe17 	ldw	r2,-8(fp)
  810214:	100890fa 	slli	r4,r2,3
  810218:	e0fff817 	ldw	r3,-32(fp)
  81021c:	00802074 	movhi	r2,129
  810220:	2085883a 	add	r2,r4,r2
  810224:	10d2d615 	stw	r3,19288(r2)
    alt_irq[id].context = isr_context;
  810228:	e0bffe17 	ldw	r2,-8(fp)
  81022c:	100890fa 	slli	r4,r2,3
  810230:	e0fff717 	ldw	r3,-36(fp)
  810234:	00802074 	movhi	r2,129
  810238:	2085883a 	add	r2,r4,r2
  81023c:	10d2d715 	stw	r3,19292(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  810240:	e0bff817 	ldw	r2,-32(fp)
  810244:	10000526 	beq	r2,zero,81025c <alt_iic_isr_register+0xa8>
  810248:	e0bffe17 	ldw	r2,-8(fp)
  81024c:	100b883a 	mov	r5,r2
  810250:	e13ffa17 	ldw	r4,-24(fp)
  810254:	08100540 	call	810054 <alt_ic_irq_enable>
  810258:	00000406 	br	81026c <alt_iic_isr_register+0xb8>
  81025c:	e0bffe17 	ldw	r2,-8(fp)
  810260:	100b883a 	mov	r5,r2
  810264:	e13ffa17 	ldw	r4,-24(fp)
  810268:	08100dc0 	call	8100dc <alt_ic_irq_disable>
  81026c:	e0bfff15 	stw	r2,-4(fp)
  810270:	e0bffd17 	ldw	r2,-12(fp)
  810274:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  810278:	e0bffb17 	ldw	r2,-20(fp)
  81027c:	1001703a 	wrctl	status,r2
}
  810280:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
  810284:	e0bfff17 	ldw	r2,-4(fp)
}
  810288:	e037883a 	mov	sp,fp
  81028c:	dfc00117 	ldw	ra,4(sp)
  810290:	df000017 	ldw	fp,0(sp)
  810294:	dec00204 	addi	sp,sp,8
  810298:	f800283a 	ret

0081029c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  81029c:	defff904 	addi	sp,sp,-28
  8102a0:	dfc00615 	stw	ra,24(sp)
  8102a4:	df000515 	stw	fp,20(sp)
  8102a8:	df000504 	addi	fp,sp,20
  8102ac:	e13ffe15 	stw	r4,-8(fp)
  8102b0:	e17ffd15 	stw	r5,-12(fp)
  8102b4:	e1bffc15 	stw	r6,-16(fp)
  8102b8:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  8102bc:	e1bffb17 	ldw	r6,-20(fp)
  8102c0:	e17ffc17 	ldw	r5,-16(fp)
  8102c4:	e13ffd17 	ldw	r4,-12(fp)
  8102c8:	08105040 	call	810504 <open>
  8102cc:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  8102d0:	e0bfff17 	ldw	r2,-4(fp)
  8102d4:	10002016 	blt	r2,zero,810358 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
  8102d8:	e0ffff17 	ldw	r3,-4(fp)
  8102dc:	1805883a 	mov	r2,r3
  8102e0:	1085883a 	add	r2,r2,r2
  8102e4:	10c5883a 	add	r2,r2,r3
  8102e8:	100490ba 	slli	r2,r2,2
  8102ec:	00c02074 	movhi	r3,129
  8102f0:	10c7883a 	add	r3,r2,r3
  8102f4:	18c73a17 	ldw	r3,7400(r3)
  8102f8:	e0bffe17 	ldw	r2,-8(fp)
  8102fc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  810300:	e0ffff17 	ldw	r3,-4(fp)
  810304:	1805883a 	mov	r2,r3
  810308:	1085883a 	add	r2,r2,r2
  81030c:	10c5883a 	add	r2,r2,r3
  810310:	100490ba 	slli	r2,r2,2
  810314:	00c02074 	movhi	r3,129
  810318:	10c7883a 	add	r3,r2,r3
  81031c:	18c73b17 	ldw	r3,7404(r3)
  810320:	e0bffe17 	ldw	r2,-8(fp)
  810324:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  810328:	e0ffff17 	ldw	r3,-4(fp)
  81032c:	1805883a 	mov	r2,r3
  810330:	1085883a 	add	r2,r2,r2
  810334:	10c5883a 	add	r2,r2,r3
  810338:	100490ba 	slli	r2,r2,2
  81033c:	00c02074 	movhi	r3,129
  810340:	10c7883a 	add	r3,r2,r3
  810344:	18c73c17 	ldw	r3,7408(r3)
  810348:	e0bffe17 	ldw	r2,-8(fp)
  81034c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  810350:	e13fff17 	ldw	r4,-4(fp)
  810354:	080eb940 	call	80eb94 <alt_release_fd>
  }
} 
  810358:	0001883a 	nop
  81035c:	e037883a 	mov	sp,fp
  810360:	dfc00117 	ldw	ra,4(sp)
  810364:	df000017 	ldw	fp,0(sp)
  810368:	dec00204 	addi	sp,sp,8
  81036c:	f800283a 	ret

00810370 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  810370:	defffb04 	addi	sp,sp,-20
  810374:	dfc00415 	stw	ra,16(sp)
  810378:	df000315 	stw	fp,12(sp)
  81037c:	df000304 	addi	fp,sp,12
  810380:	e13fff15 	stw	r4,-4(fp)
  810384:	e17ffe15 	stw	r5,-8(fp)
  810388:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  81038c:	01c07fc4 	movi	r7,511
  810390:	01800044 	movi	r6,1
  810394:	e17fff17 	ldw	r5,-4(fp)
  810398:	01002074 	movhi	r4,129
  81039c:	21073d04 	addi	r4,r4,7412
  8103a0:	081029c0 	call	81029c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  8103a4:	01c07fc4 	movi	r7,511
  8103a8:	000d883a 	mov	r6,zero
  8103ac:	e17ffe17 	ldw	r5,-8(fp)
  8103b0:	01002074 	movhi	r4,129
  8103b4:	21073a04 	addi	r4,r4,7400
  8103b8:	081029c0 	call	81029c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  8103bc:	01c07fc4 	movi	r7,511
  8103c0:	01800044 	movi	r6,1
  8103c4:	e17ffd17 	ldw	r5,-12(fp)
  8103c8:	01002074 	movhi	r4,129
  8103cc:	21074004 	addi	r4,r4,7424
  8103d0:	081029c0 	call	81029c <alt_open_fd>
}  
  8103d4:	0001883a 	nop
  8103d8:	e037883a 	mov	sp,fp
  8103dc:	dfc00117 	ldw	ra,4(sp)
  8103e0:	df000017 	ldw	fp,0(sp)
  8103e4:	dec00204 	addi	sp,sp,8
  8103e8:	f800283a 	ret

008103ec <alt_get_errno>:
{
  8103ec:	defffe04 	addi	sp,sp,-8
  8103f0:	dfc00115 	stw	ra,4(sp)
  8103f4:	df000015 	stw	fp,0(sp)
  8103f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8103fc:	d0a00e17 	ldw	r2,-32712(gp)
  810400:	10000326 	beq	r2,zero,810410 <alt_get_errno+0x24>
  810404:	d0a00e17 	ldw	r2,-32712(gp)
  810408:	103ee83a 	callr	r2
  81040c:	00000106 	br	810414 <alt_get_errno+0x28>
  810410:	d0a71104 	addi	r2,gp,-25532
}
  810414:	e037883a 	mov	sp,fp
  810418:	dfc00117 	ldw	ra,4(sp)
  81041c:	df000017 	ldw	fp,0(sp)
  810420:	dec00204 	addi	sp,sp,8
  810424:	f800283a 	ret

00810428 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  810428:	defffd04 	addi	sp,sp,-12
  81042c:	df000215 	stw	fp,8(sp)
  810430:	df000204 	addi	fp,sp,8
  810434:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  810438:	e0bffe17 	ldw	r2,-8(fp)
  81043c:	10800217 	ldw	r2,8(r2)
  810440:	10d00034 	orhi	r3,r2,16384
  810444:	e0bffe17 	ldw	r2,-8(fp)
  810448:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  81044c:	e03fff15 	stw	zero,-4(fp)
  810450:	00002306 	br	8104e0 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  810454:	e0ffff17 	ldw	r3,-4(fp)
  810458:	1805883a 	mov	r2,r3
  81045c:	1085883a 	add	r2,r2,r2
  810460:	10c5883a 	add	r2,r2,r3
  810464:	100490ba 	slli	r2,r2,2
  810468:	00c02074 	movhi	r3,129
  81046c:	10c7883a 	add	r3,r2,r3
  810470:	18c73a17 	ldw	r3,7400(r3)
  810474:	e0bffe17 	ldw	r2,-8(fp)
  810478:	10800017 	ldw	r2,0(r2)
  81047c:	1880151e 	bne	r3,r2,8104d4 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  810480:	e0ffff17 	ldw	r3,-4(fp)
  810484:	1805883a 	mov	r2,r3
  810488:	1085883a 	add	r2,r2,r2
  81048c:	10c5883a 	add	r2,r2,r3
  810490:	100490ba 	slli	r2,r2,2
  810494:	00c02074 	movhi	r3,129
  810498:	10c7883a 	add	r3,r2,r3
  81049c:	18873c17 	ldw	r2,7408(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
  8104a0:	10000c0e 	bge	r2,zero,8104d4 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
  8104a4:	e0ffff17 	ldw	r3,-4(fp)
  8104a8:	1805883a 	mov	r2,r3
  8104ac:	1085883a 	add	r2,r2,r2
  8104b0:	10c5883a 	add	r2,r2,r3
  8104b4:	100490ba 	slli	r2,r2,2
  8104b8:	00c02074 	movhi	r3,129
  8104bc:	18c73a04 	addi	r3,r3,7400
  8104c0:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  8104c4:	e0fffe17 	ldw	r3,-8(fp)
  8104c8:	18800226 	beq	r3,r2,8104d4 <alt_file_locked+0xac>
    {
      return -EACCES;
  8104cc:	00bffcc4 	movi	r2,-13
  8104d0:	00000806 	br	8104f4 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
  8104d4:	e0bfff17 	ldw	r2,-4(fp)
  8104d8:	10800044 	addi	r2,r2,1
  8104dc:	e0bfff15 	stw	r2,-4(fp)
  8104e0:	d0a00d17 	ldw	r2,-32716(gp)
  8104e4:	1007883a 	mov	r3,r2
  8104e8:	e0bfff17 	ldw	r2,-4(fp)
  8104ec:	18bfd92e 	bgeu	r3,r2,810454 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  8104f0:	0005883a 	mov	r2,zero
}
  8104f4:	e037883a 	mov	sp,fp
  8104f8:	df000017 	ldw	fp,0(sp)
  8104fc:	dec00104 	addi	sp,sp,4
  810500:	f800283a 	ret

00810504 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  810504:	defff604 	addi	sp,sp,-40
  810508:	dfc00915 	stw	ra,36(sp)
  81050c:	df000815 	stw	fp,32(sp)
  810510:	df000804 	addi	fp,sp,32
  810514:	e13ffa15 	stw	r4,-24(fp)
  810518:	e17ff915 	stw	r5,-28(fp)
  81051c:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  810520:	00bfffc4 	movi	r2,-1
  810524:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  810528:	00bffb44 	movi	r2,-19
  81052c:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  810530:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  810534:	d1600b04 	addi	r5,gp,-32724
  810538:	e13ffa17 	ldw	r4,-24(fp)
  81053c:	08106880 	call	810688 <alt_find_dev>
  810540:	e0bfff15 	stw	r2,-4(fp)
  810544:	e0bfff17 	ldw	r2,-4(fp)
  810548:	1000051e 	bne	r2,zero,810560 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  81054c:	e13ffa17 	ldw	r4,-24(fp)
  810550:	08107180 	call	810718 <alt_find_file>
  810554:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  810558:	00800044 	movi	r2,1
  81055c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  810560:	e0bfff17 	ldw	r2,-4(fp)
  810564:	10002c26 	beq	r2,zero,810618 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  810568:	e13fff17 	ldw	r4,-4(fp)
  81056c:	08108200 	call	810820 <alt_get_fd>
  810570:	e0bffe15 	stw	r2,-8(fp)
  810574:	e0bffe17 	ldw	r2,-8(fp)
  810578:	1000030e 	bge	r2,zero,810588 <open+0x84>
    {
      status = index;
  81057c:	e0bffe17 	ldw	r2,-8(fp)
  810580:	e0bffd15 	stw	r2,-12(fp)
  810584:	00002606 	br	810620 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  810588:	e0fffe17 	ldw	r3,-8(fp)
  81058c:	1805883a 	mov	r2,r3
  810590:	1085883a 	add	r2,r2,r2
  810594:	10c5883a 	add	r2,r2,r3
  810598:	100490ba 	slli	r2,r2,2
  81059c:	00c02074 	movhi	r3,129
  8105a0:	18c73a04 	addi	r3,r3,7400
  8105a4:	10c5883a 	add	r2,r2,r3
  8105a8:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  8105ac:	e0fff917 	ldw	r3,-28(fp)
  8105b0:	00900034 	movhi	r2,16384
  8105b4:	10bfffc4 	addi	r2,r2,-1
  8105b8:	1886703a 	and	r3,r3,r2
  8105bc:	e0bffb17 	ldw	r2,-20(fp)
  8105c0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  8105c4:	e0bffc17 	ldw	r2,-16(fp)
  8105c8:	1000051e 	bne	r2,zero,8105e0 <open+0xdc>
  8105cc:	e13ffb17 	ldw	r4,-20(fp)
  8105d0:	08104280 	call	810428 <alt_file_locked>
  8105d4:	e0bffd15 	stw	r2,-12(fp)
  8105d8:	e0bffd17 	ldw	r2,-12(fp)
  8105dc:	10001016 	blt	r2,zero,810620 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  8105e0:	e0bfff17 	ldw	r2,-4(fp)
  8105e4:	10800317 	ldw	r2,12(r2)
  8105e8:	10000826 	beq	r2,zero,81060c <open+0x108>
  8105ec:	e0bfff17 	ldw	r2,-4(fp)
  8105f0:	10800317 	ldw	r2,12(r2)
  8105f4:	e1fff817 	ldw	r7,-32(fp)
  8105f8:	e1bff917 	ldw	r6,-28(fp)
  8105fc:	e17ffa17 	ldw	r5,-24(fp)
  810600:	e13ffb17 	ldw	r4,-20(fp)
  810604:	103ee83a 	callr	r2
  810608:	00000106 	br	810610 <open+0x10c>
  81060c:	0005883a 	mov	r2,zero
  810610:	e0bffd15 	stw	r2,-12(fp)
  810614:	00000206 	br	810620 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  810618:	00bffb44 	movi	r2,-19
  81061c:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  810620:	e0bffd17 	ldw	r2,-12(fp)
  810624:	1000090e 	bge	r2,zero,81064c <open+0x148>
  {
    alt_release_fd (index);  
  810628:	e13ffe17 	ldw	r4,-8(fp)
  81062c:	080eb940 	call	80eb94 <alt_release_fd>
    ALT_ERRNO = -status;
  810630:	08103ec0 	call	8103ec <alt_get_errno>
  810634:	1007883a 	mov	r3,r2
  810638:	e0bffd17 	ldw	r2,-12(fp)
  81063c:	0085c83a 	sub	r2,zero,r2
  810640:	18800015 	stw	r2,0(r3)
    return -1;
  810644:	00bfffc4 	movi	r2,-1
  810648:	00000106 	br	810650 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  81064c:	e0bffe17 	ldw	r2,-8(fp)
}
  810650:	e037883a 	mov	sp,fp
  810654:	dfc00117 	ldw	ra,4(sp)
  810658:	df000017 	ldw	fp,0(sp)
  81065c:	dec00204 	addi	sp,sp,8
  810660:	f800283a 	ret

00810664 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  810664:	deffff04 	addi	sp,sp,-4
  810668:	df000015 	stw	fp,0(sp)
  81066c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  810670:	000170fa 	wrctl	ienable,zero
}
  810674:	0001883a 	nop
  810678:	e037883a 	mov	sp,fp
  81067c:	df000017 	ldw	fp,0(sp)
  810680:	dec00104 	addi	sp,sp,4
  810684:	f800283a 	ret

00810688 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  810688:	defffa04 	addi	sp,sp,-24
  81068c:	dfc00515 	stw	ra,20(sp)
  810690:	df000415 	stw	fp,16(sp)
  810694:	df000404 	addi	fp,sp,16
  810698:	e13ffd15 	stw	r4,-12(fp)
  81069c:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  8106a0:	e0bffc17 	ldw	r2,-16(fp)
  8106a4:	10800017 	ldw	r2,0(r2)
  8106a8:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  8106ac:	e13ffd17 	ldw	r4,-12(fp)
  8106b0:	08016780 	call	801678 <strlen>
  8106b4:	10800044 	addi	r2,r2,1
  8106b8:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  8106bc:	00000d06 	br	8106f4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  8106c0:	e0bfff17 	ldw	r2,-4(fp)
  8106c4:	10800217 	ldw	r2,8(r2)
  8106c8:	e0fffe17 	ldw	r3,-8(fp)
  8106cc:	180d883a 	mov	r6,r3
  8106d0:	e17ffd17 	ldw	r5,-12(fp)
  8106d4:	1009883a 	mov	r4,r2
  8106d8:	0810a480 	call	810a48 <memcmp>
  8106dc:	1000021e 	bne	r2,zero,8106e8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  8106e0:	e0bfff17 	ldw	r2,-4(fp)
  8106e4:	00000706 	br	810704 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  8106e8:	e0bfff17 	ldw	r2,-4(fp)
  8106ec:	10800017 	ldw	r2,0(r2)
  8106f0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  8106f4:	e0ffff17 	ldw	r3,-4(fp)
  8106f8:	e0bffc17 	ldw	r2,-16(fp)
  8106fc:	18bff01e 	bne	r3,r2,8106c0 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  810700:	0005883a 	mov	r2,zero
}
  810704:	e037883a 	mov	sp,fp
  810708:	dfc00117 	ldw	ra,4(sp)
  81070c:	df000017 	ldw	fp,0(sp)
  810710:	dec00204 	addi	sp,sp,8
  810714:	f800283a 	ret

00810718 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  810718:	defffb04 	addi	sp,sp,-20
  81071c:	dfc00415 	stw	ra,16(sp)
  810720:	df000315 	stw	fp,12(sp)
  810724:	df000304 	addi	fp,sp,12
  810728:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  81072c:	d0a00917 	ldw	r2,-32732(gp)
  810730:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  810734:	00003106 	br	8107fc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  810738:	e0bfff17 	ldw	r2,-4(fp)
  81073c:	10800217 	ldw	r2,8(r2)
  810740:	1009883a 	mov	r4,r2
  810744:	08016780 	call	801678 <strlen>
  810748:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  81074c:	e0bfff17 	ldw	r2,-4(fp)
  810750:	10c00217 	ldw	r3,8(r2)
  810754:	e0bffe17 	ldw	r2,-8(fp)
  810758:	10bfffc4 	addi	r2,r2,-1
  81075c:	1885883a 	add	r2,r3,r2
  810760:	10800003 	ldbu	r2,0(r2)
  810764:	10803fcc 	andi	r2,r2,255
  810768:	1080201c 	xori	r2,r2,128
  81076c:	10bfe004 	addi	r2,r2,-128
  810770:	10800bd8 	cmpnei	r2,r2,47
  810774:	1000031e 	bne	r2,zero,810784 <alt_find_file+0x6c>
    {
      len -= 1;
  810778:	e0bffe17 	ldw	r2,-8(fp)
  81077c:	10bfffc4 	addi	r2,r2,-1
  810780:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  810784:	e0bffe17 	ldw	r2,-8(fp)
  810788:	e0fffd17 	ldw	r3,-12(fp)
  81078c:	1885883a 	add	r2,r3,r2
  810790:	10800003 	ldbu	r2,0(r2)
  810794:	10803fcc 	andi	r2,r2,255
  810798:	1080201c 	xori	r2,r2,128
  81079c:	10bfe004 	addi	r2,r2,-128
  8107a0:	10800be0 	cmpeqi	r2,r2,47
  8107a4:	1000081e 	bne	r2,zero,8107c8 <alt_find_file+0xb0>
  8107a8:	e0bffe17 	ldw	r2,-8(fp)
  8107ac:	e0fffd17 	ldw	r3,-12(fp)
  8107b0:	1885883a 	add	r2,r3,r2
  8107b4:	10800003 	ldbu	r2,0(r2)
  8107b8:	10803fcc 	andi	r2,r2,255
  8107bc:	1080201c 	xori	r2,r2,128
  8107c0:	10bfe004 	addi	r2,r2,-128
  8107c4:	10000a1e 	bne	r2,zero,8107f0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  8107c8:	e0bfff17 	ldw	r2,-4(fp)
  8107cc:	10800217 	ldw	r2,8(r2)
  8107d0:	e0fffe17 	ldw	r3,-8(fp)
  8107d4:	180d883a 	mov	r6,r3
  8107d8:	e17ffd17 	ldw	r5,-12(fp)
  8107dc:	1009883a 	mov	r4,r2
  8107e0:	0810a480 	call	810a48 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  8107e4:	1000021e 	bne	r2,zero,8107f0 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  8107e8:	e0bfff17 	ldw	r2,-4(fp)
  8107ec:	00000706 	br	81080c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  8107f0:	e0bfff17 	ldw	r2,-4(fp)
  8107f4:	10800017 	ldw	r2,0(r2)
  8107f8:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  8107fc:	e0ffff17 	ldw	r3,-4(fp)
  810800:	d0a00904 	addi	r2,gp,-32732
  810804:	18bfcc1e 	bne	r3,r2,810738 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  810808:	0005883a 	mov	r2,zero
}
  81080c:	e037883a 	mov	sp,fp
  810810:	dfc00117 	ldw	ra,4(sp)
  810814:	df000017 	ldw	fp,0(sp)
  810818:	dec00204 	addi	sp,sp,8
  81081c:	f800283a 	ret

00810820 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  810820:	defffc04 	addi	sp,sp,-16
  810824:	df000315 	stw	fp,12(sp)
  810828:	df000304 	addi	fp,sp,12
  81082c:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  810830:	00bffa04 	movi	r2,-24
  810834:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  810838:	e03fff15 	stw	zero,-4(fp)
  81083c:	00001d06 	br	8108b4 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  810840:	e0ffff17 	ldw	r3,-4(fp)
  810844:	1805883a 	mov	r2,r3
  810848:	1085883a 	add	r2,r2,r2
  81084c:	10c5883a 	add	r2,r2,r3
  810850:	100490ba 	slli	r2,r2,2
  810854:	00c02074 	movhi	r3,129
  810858:	10c7883a 	add	r3,r2,r3
  81085c:	18873a17 	ldw	r2,7400(r3)
  810860:	1000111e 	bne	r2,zero,8108a8 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  810864:	e0ffff17 	ldw	r3,-4(fp)
  810868:	1805883a 	mov	r2,r3
  81086c:	1085883a 	add	r2,r2,r2
  810870:	10c5883a 	add	r2,r2,r3
  810874:	100490ba 	slli	r2,r2,2
  810878:	e13ffd17 	ldw	r4,-12(fp)
  81087c:	00c02074 	movhi	r3,129
  810880:	10c7883a 	add	r3,r2,r3
  810884:	19073a15 	stw	r4,7400(r3)
      if (i > alt_max_fd)
  810888:	d0e00d17 	ldw	r3,-32716(gp)
  81088c:	e0bfff17 	ldw	r2,-4(fp)
  810890:	1880020e 	bge	r3,r2,81089c <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  810894:	e0bfff17 	ldw	r2,-4(fp)
  810898:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
  81089c:	e0bfff17 	ldw	r2,-4(fp)
  8108a0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  8108a4:	00000706 	br	8108c4 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
  8108a8:	e0bfff17 	ldw	r2,-4(fp)
  8108ac:	10800044 	addi	r2,r2,1
  8108b0:	e0bfff15 	stw	r2,-4(fp)
  8108b4:	e0bfff17 	ldw	r2,-4(fp)
  8108b8:	10800810 	cmplti	r2,r2,32
  8108bc:	103fe01e 	bne	r2,zero,810840 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  8108c0:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  8108c4:	e0bffe17 	ldw	r2,-8(fp)
}
  8108c8:	e037883a 	mov	sp,fp
  8108cc:	df000017 	ldw	fp,0(sp)
  8108d0:	dec00104 	addi	sp,sp,4
  8108d4:	f800283a 	ret

008108d8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  8108d8:	defffb04 	addi	sp,sp,-20
  8108dc:	df000415 	stw	fp,16(sp)
  8108e0:	df000404 	addi	fp,sp,16
  8108e4:	e13ffd15 	stw	r4,-12(fp)
  8108e8:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  8108ec:	e0bffc17 	ldw	r2,-16(fp)
  8108f0:	10820070 	cmpltui	r2,r2,2049
  8108f4:	1000021e 	bne	r2,zero,810900 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  8108f8:	00820004 	movi	r2,2048
  8108fc:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
  810900:	e0fffd17 	ldw	r3,-12(fp)
  810904:	e0bffc17 	ldw	r2,-16(fp)
  810908:	1885883a 	add	r2,r3,r2
  81090c:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810910:	e0bffd17 	ldw	r2,-12(fp)
  810914:	e0bfff15 	stw	r2,-4(fp)
  810918:	00000506 	br	810930 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  81091c:	e0bfff17 	ldw	r2,-4(fp)
  810920:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810924:	e0bfff17 	ldw	r2,-4(fp)
  810928:	10800804 	addi	r2,r2,32
  81092c:	e0bfff15 	stw	r2,-4(fp)
  810930:	e0ffff17 	ldw	r3,-4(fp)
  810934:	e0bffe17 	ldw	r2,-8(fp)
  810938:	18bff836 	bltu	r3,r2,81091c <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  81093c:	e0bffd17 	ldw	r2,-12(fp)
  810940:	108007cc 	andi	r2,r2,31
  810944:	10000226 	beq	r2,zero,810950 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  810948:	e0bfff17 	ldw	r2,-4(fp)
  81094c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  810950:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  810954:	0001883a 	nop
  810958:	e037883a 	mov	sp,fp
  81095c:	df000017 	ldw	fp,0(sp)
  810960:	dec00104 	addi	sp,sp,4
  810964:	f800283a 	ret

00810968 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  810968:	defffe04 	addi	sp,sp,-8
  81096c:	df000115 	stw	fp,4(sp)
  810970:	df000104 	addi	fp,sp,4
  810974:	e13fff15 	stw	r4,-4(fp)
  810978:	e0bfff17 	ldw	r2,-4(fp)
  81097c:	10bffe84 	addi	r2,r2,-6
  810980:	10c00428 	cmpgeui	r3,r2,16
  810984:	1800191e 	bne	r3,zero,8109ec <alt_exception_cause_generated_bad_addr+0x84>
  810988:	100690ba 	slli	r3,r2,2
  81098c:	00802074 	movhi	r2,129
  810990:	1885883a 	add	r2,r3,r2
  810994:	10826717 	ldw	r2,2460(r2)
  810998:	1000683a 	jmp	r2
  81099c:	008109dc 	xori	r2,zero,1063
  8109a0:	008109dc 	xori	r2,zero,1063
  8109a4:	008109ec 	andhi	r2,zero,1063
  8109a8:	008109ec 	andhi	r2,zero,1063
  8109ac:	008109ec 	andhi	r2,zero,1063
  8109b0:	008109dc 	xori	r2,zero,1063
  8109b4:	008109e4 	muli	r2,zero,1063
  8109b8:	008109ec 	andhi	r2,zero,1063
  8109bc:	008109dc 	xori	r2,zero,1063
  8109c0:	008109dc 	xori	r2,zero,1063
  8109c4:	008109ec 	andhi	r2,zero,1063
  8109c8:	008109dc 	xori	r2,zero,1063
  8109cc:	008109e4 	muli	r2,zero,1063
  8109d0:	008109ec 	andhi	r2,zero,1063
  8109d4:	008109ec 	andhi	r2,zero,1063
  8109d8:	008109dc 	xori	r2,zero,1063
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  8109dc:	00800044 	movi	r2,1
  8109e0:	00000306 	br	8109f0 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  8109e4:	0005883a 	mov	r2,zero
  8109e8:	00000106 	br	8109f0 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  8109ec:	0005883a 	mov	r2,zero
  }
}
  8109f0:	e037883a 	mov	sp,fp
  8109f4:	df000017 	ldw	fp,0(sp)
  8109f8:	dec00104 	addi	sp,sp,4
  8109fc:	f800283a 	ret

00810a00 <atexit>:
  810a00:	200b883a 	mov	r5,r4
  810a04:	000f883a 	mov	r7,zero
  810a08:	000d883a 	mov	r6,zero
  810a0c:	0009883a 	mov	r4,zero
  810a10:	0810ac01 	jmpi	810ac0 <__register_exitproc>

00810a14 <exit>:
  810a14:	defffe04 	addi	sp,sp,-8
  810a18:	000b883a 	mov	r5,zero
  810a1c:	dc000015 	stw	r16,0(sp)
  810a20:	dfc00115 	stw	ra,4(sp)
  810a24:	2021883a 	mov	r16,r4
  810a28:	0810b500 	call	810b50 <__call_exitprocs>
  810a2c:	00802074 	movhi	r2,129
  810a30:	110bb717 	ldw	r4,11996(r2)
  810a34:	20800f17 	ldw	r2,60(r4)
  810a38:	10000126 	beq	r2,zero,810a40 <exit+0x2c>
  810a3c:	103ee83a 	callr	r2
  810a40:	8009883a 	mov	r4,r16
  810a44:	080e3e00 	call	80e3e0 <_exit>

00810a48 <memcmp>:
  810a48:	30800130 	cmpltui	r2,r6,4
  810a4c:	10000b1e 	bne	r2,zero,810a7c <memcmp+0x34>
  810a50:	2144b03a 	or	r2,r4,r5
  810a54:	108000cc 	andi	r2,r2,3
  810a58:	1000171e 	bne	r2,zero,810ab8 <memcmp+0x70>
  810a5c:	20c00017 	ldw	r3,0(r4)
  810a60:	28800017 	ldw	r2,0(r5)
  810a64:	1880141e 	bne	r3,r2,810ab8 <memcmp+0x70>
  810a68:	31bfff04 	addi	r6,r6,-4
  810a6c:	30800128 	cmpgeui	r2,r6,4
  810a70:	21000104 	addi	r4,r4,4
  810a74:	29400104 	addi	r5,r5,4
  810a78:	103ff81e 	bne	r2,zero,810a5c <memcmp+0x14>
  810a7c:	30bfffc4 	addi	r2,r6,-1
  810a80:	30000b26 	beq	r6,zero,810ab0 <memcmp+0x68>
  810a84:	11800044 	addi	r6,r2,1
  810a88:	298d883a 	add	r6,r5,r6
  810a8c:	00000106 	br	810a94 <memcmp+0x4c>
  810a90:	29800726 	beq	r5,r6,810ab0 <memcmp+0x68>
  810a94:	20800003 	ldbu	r2,0(r4)
  810a98:	28c00003 	ldbu	r3,0(r5)
  810a9c:	21000044 	addi	r4,r4,1
  810aa0:	29400044 	addi	r5,r5,1
  810aa4:	10fffa26 	beq	r2,r3,810a90 <memcmp+0x48>
  810aa8:	10c5c83a 	sub	r2,r2,r3
  810aac:	f800283a 	ret
  810ab0:	0005883a 	mov	r2,zero
  810ab4:	f800283a 	ret
  810ab8:	30bfffc4 	addi	r2,r6,-1
  810abc:	003ff106 	br	810a84 <memcmp+0x3c>

00810ac0 <__register_exitproc>:
  810ac0:	00802074 	movhi	r2,129
  810ac4:	10cbb717 	ldw	r3,11996(r2)
  810ac8:	18805217 	ldw	r2,328(r3)
  810acc:	10001726 	beq	r2,zero,810b2c <__register_exitproc+0x6c>
  810ad0:	10c00117 	ldw	r3,4(r2)
  810ad4:	1a000808 	cmpgei	r8,r3,32
  810ad8:	40001b1e 	bne	r8,zero,810b48 <__register_exitproc+0x88>
  810adc:	20000b26 	beq	r4,zero,810b0c <__register_exitproc+0x4c>
  810ae0:	181090ba 	slli	r8,r3,2
  810ae4:	02400044 	movi	r9,1
  810ae8:	48d2983a 	sll	r9,r9,r3
  810aec:	1211883a 	add	r8,r2,r8
  810af0:	41802215 	stw	r6,136(r8)
  810af4:	11806217 	ldw	r6,392(r2)
  810af8:	21000098 	cmpnei	r4,r4,2
  810afc:	324cb03a 	or	r6,r6,r9
  810b00:	11806215 	stw	r6,392(r2)
  810b04:	41c04215 	stw	r7,264(r8)
  810b08:	20000b26 	beq	r4,zero,810b38 <__register_exitproc+0x78>
  810b0c:	19000084 	addi	r4,r3,2
  810b10:	200890ba 	slli	r4,r4,2
  810b14:	18c00044 	addi	r3,r3,1
  810b18:	10c00115 	stw	r3,4(r2)
  810b1c:	1105883a 	add	r2,r2,r4
  810b20:	11400015 	stw	r5,0(r2)
  810b24:	0005883a 	mov	r2,zero
  810b28:	f800283a 	ret
  810b2c:	18805304 	addi	r2,r3,332
  810b30:	18805215 	stw	r2,328(r3)
  810b34:	003fe606 	br	810ad0 <__register_exitproc+0x10>
  810b38:	11006317 	ldw	r4,396(r2)
  810b3c:	2252b03a 	or	r9,r4,r9
  810b40:	12406315 	stw	r9,396(r2)
  810b44:	003ff106 	br	810b0c <__register_exitproc+0x4c>
  810b48:	00bfffc4 	movi	r2,-1
  810b4c:	f800283a 	ret

00810b50 <__call_exitprocs>:
  810b50:	defff704 	addi	sp,sp,-36
  810b54:	00802074 	movhi	r2,129
  810b58:	dcc00315 	stw	r19,12(sp)
  810b5c:	14cbb717 	ldw	r19,11996(r2)
  810b60:	dc800215 	stw	r18,8(sp)
  810b64:	dfc00815 	stw	ra,32(sp)
  810b68:	9c805217 	ldw	r18,328(r19)
  810b6c:	ddc00715 	stw	r23,28(sp)
  810b70:	dd800615 	stw	r22,24(sp)
  810b74:	dd400515 	stw	r21,20(sp)
  810b78:	dd000415 	stw	r20,16(sp)
  810b7c:	dc400115 	stw	r17,4(sp)
  810b80:	dc000015 	stw	r16,0(sp)
  810b84:	90001026 	beq	r18,zero,810bc8 <__call_exitprocs+0x78>
  810b88:	202b883a 	mov	r21,r4
  810b8c:	282d883a 	mov	r22,r5
  810b90:	05000044 	movi	r20,1
  810b94:	94000117 	ldw	r16,4(r18)
  810b98:	847fffc4 	addi	r17,r16,-1
  810b9c:	88000a16 	blt	r17,zero,810bc8 <__call_exitprocs+0x78>
  810ba0:	84000044 	addi	r16,r16,1
  810ba4:	802090ba 	slli	r16,r16,2
  810ba8:	9421883a 	add	r16,r18,r16
  810bac:	b0001126 	beq	r22,zero,810bf4 <__call_exitprocs+0xa4>
  810bb0:	80804017 	ldw	r2,256(r16)
  810bb4:	15800f26 	beq	r2,r22,810bf4 <__call_exitprocs+0xa4>
  810bb8:	8c7fffc4 	addi	r17,r17,-1
  810bbc:	88bfffd8 	cmpnei	r2,r17,-1
  810bc0:	843fff04 	addi	r16,r16,-4
  810bc4:	103ff91e 	bne	r2,zero,810bac <__call_exitprocs+0x5c>
  810bc8:	dfc00817 	ldw	ra,32(sp)
  810bcc:	ddc00717 	ldw	r23,28(sp)
  810bd0:	dd800617 	ldw	r22,24(sp)
  810bd4:	dd400517 	ldw	r21,20(sp)
  810bd8:	dd000417 	ldw	r20,16(sp)
  810bdc:	dcc00317 	ldw	r19,12(sp)
  810be0:	dc800217 	ldw	r18,8(sp)
  810be4:	dc400117 	ldw	r17,4(sp)
  810be8:	dc000017 	ldw	r16,0(sp)
  810bec:	dec00904 	addi	sp,sp,36
  810bf0:	f800283a 	ret
  810bf4:	90800117 	ldw	r2,4(r18)
  810bf8:	81800017 	ldw	r6,0(r16)
  810bfc:	10bfffc4 	addi	r2,r2,-1
  810c00:	14401726 	beq	r2,r17,810c60 <__call_exitprocs+0x110>
  810c04:	80000015 	stw	zero,0(r16)
  810c08:	303feb26 	beq	r6,zero,810bb8 <__call_exitprocs+0x68>
  810c0c:	a446983a 	sll	r3,r20,r17
  810c10:	90806217 	ldw	r2,392(r18)
  810c14:	95c00117 	ldw	r23,4(r18)
  810c18:	1884703a 	and	r2,r3,r2
  810c1c:	1000081e 	bne	r2,zero,810c40 <__call_exitprocs+0xf0>
  810c20:	303ee83a 	callr	r6
  810c24:	90c00117 	ldw	r3,4(r18)
  810c28:	98805217 	ldw	r2,328(r19)
  810c2c:	1dc0011e 	bne	r3,r23,810c34 <__call_exitprocs+0xe4>
  810c30:	90bfe126 	beq	r18,r2,810bb8 <__call_exitprocs+0x68>
  810c34:	103fe426 	beq	r2,zero,810bc8 <__call_exitprocs+0x78>
  810c38:	1025883a 	mov	r18,r2
  810c3c:	003fd506 	br	810b94 <__call_exitprocs+0x44>
  810c40:	90806317 	ldw	r2,396(r18)
  810c44:	81002017 	ldw	r4,128(r16)
  810c48:	1886703a 	and	r3,r3,r2
  810c4c:	1800061e 	bne	r3,zero,810c68 <__call_exitprocs+0x118>
  810c50:	200b883a 	mov	r5,r4
  810c54:	a809883a 	mov	r4,r21
  810c58:	303ee83a 	callr	r6
  810c5c:	003ff106 	br	810c24 <__call_exitprocs+0xd4>
  810c60:	94400115 	stw	r17,4(r18)
  810c64:	003fe806 	br	810c08 <__call_exitprocs+0xb8>
  810c68:	303ee83a 	callr	r6
  810c6c:	003fed06 	br	810c24 <__call_exitprocs+0xd4>
