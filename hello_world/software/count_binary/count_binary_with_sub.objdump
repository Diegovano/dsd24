
count_binary.elf:     file format elf32-littlenios2
count_binary.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800238

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00011300 memsz 0x00011300 flags r-x
    LOAD off    0x00012320 vaddr 0x00811320 paddr 0x00812f0c align 2**12
         filesz 0x00001bec memsz 0x00001bec flags rw-
    LOAD off    0x00014af8 vaddr 0x00814af8 paddr 0x00814af8 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010a30  00800238  00800238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006b8  00810c68  00810c68  00011c68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bec  00811320  00812f0c  00012320  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00814af8  00814af8  00014af8  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00814c50  00814c50  00013f0c  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  00013f0c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001128  00000000  00000000  00013f38  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0004eac9  00000000  00000000  00015060  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00010342  00000000  00000000  00063b29  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001bc9d  00000000  00000000  00073e6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002554  00000000  00000000  0008fb08  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000453a  00000000  00000000  0009205c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00020423  00000000  00000000  00096596  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000b69bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00002290  00000000  00000000  000b69f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000bc202  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000bc205  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000bc208  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000bc209  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000bc20a  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000bc20e  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000bc212  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000bc216  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000bc21f  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000bc228  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  000bc231  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003e  00000000  00000000  000bc243  2**0
                  CONTENTS, READONLY
 29 .jdi          00005099  00000000  00000000  000bc281  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003b0ff  00000000  00000000  000c131a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800238 l    d  .text	00000000 .text
00810c68 l    d  .rodata	00000000 .rodata
00811320 l    d  .rwdata	00000000 .rwdata
00814af8 l    d  .bss	00000000 .bss
00814c50 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../count_binary_bsp//obj/HAL/src/crt0.o
00800280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 count_binary.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00803810 l     F .text	000000c0 __sbprintf
00810e28 l     O .rodata	00000010 blanks.5176
00810e18 l     O .rodata	00000010 zeroes.5177
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00803a2c l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0080564c l     F .text	00000008 __fp_lock
00805660 l     F .text	00000168 __sinit.part.0
008057c8 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00811320 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810edc l     O .rodata	0000000c p05.3991
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
008089c0 l     F .text	000000f4 __sprint_r.part.0
00809dfc l     F .text	000000c0 __sbprintf
00811010 l     O .rodata	00000010 blanks.5153
00811000 l     O .rodata	00000010 zeroes.5154
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
0080a9e0 l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080e294 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080e3ac l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080e410 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0080e528 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0080e614 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080e77c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080e868 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080ea48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00812efc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_times.c
0080ee60 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080ef14 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080f054 l     F .text	00000034 alt_dev_reg
00811e60 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080f34c l     F .text	0000020c altera_avalon_jtag_uart_irq
0080f558 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080fb9c l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080fe1c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00810294 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
008103e4 l     F .text	0000003c alt_get_errno
00810420 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00814b24 g     O .bss	00000004 alt_instruction_exception_handler
00808188 g     F .text	00000070 _mprec_log10
00808264 g     F .text	00000060 __any_on
0080a474 g     F .text	00000058 _isatty_r
00810ee8 g     O .rodata	00000028 __mprec_tinytens
0080e984 g     F .text	0000007c alt_main
00801594 g     F .text	000000cc _puts_r
00814b50 g     O .bss	00000100 alt_irq
0080a564 g     F .text	00000064 _lseek_r
00812f0c g       *ABS*	00000000 __flash_rwdata_start
0080cd38 g     F .text	00000080 .hidden __eqdf2
00814c50 g       *ABS*	00000000 __alt_heap_start
00812ec8 g     O .rwdata	00000004 c_term1
0080ac94 g     F .text	00000060 _kill_r
0080155c g     F .text	00000038 printf
0080a898 g     F .text	0000006c _wcrtomb_r
0080aa40 g     F .text	00000084 _signal_r
0080895c g     F .text	0000005c __sseek
00805958 g     F .text	00000010 __sinit
0080a738 g     F .text	00000148 __swbuf_r
0080a4cc g     F .text	00000074 _setlocale_r
008057d0 g     F .text	00000078 __sfmoreglue
0080ea24 g     F .text	00000024 __malloc_unlock
00806f70 g     F .text	0000012c memmove
00805944 g     F .text	00000014 _cleanup
0080718c g     F .text	000000a4 _Balloc
0080cdb8 g     F .text	000000f0 .hidden __gtdf2
0081065c g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0080ee9c g     F .text	00000078 times
008063c4 g     F .text	00000008 __localeconv_l
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080a414 g     F .text	00000060 _fstat_r
00814b04 g     O .bss	00000004 errno
008088d4 g     F .text	00000008 __seofread
00814b10 g     O .bss	00000004 alt_argv
0081aec0 g       *ABS*	00000000 _gp
00800f30 g     F .text	00000484 .hidden __subsf3
0080e508 g     F .text	00000020 getpid
00811ce0 g     O .rwdata	00000180 alt_fd_list
00810680 g     F .text	00000090 alt_find_dev
00806e70 g     F .text	00000100 memcpy
00805654 g     F .text	0000000c _cleanup_r
0080e148 g     F .text	000000bc .hidden __floatsidf
00810368 g     F .text	0000007c alt_io_redirect
0080cea8 g     F .text	000000f0 .hidden __ltdf2
00810c68 g       *ABS*	00000000 __DTOR_END__
00801660 g     F .text	00000010 puts
00810960 g     F .text	00000098 alt_exception_cause_generated_bad_addr
008080e4 g     F .text	000000a4 __ratio
00809de0 g     F .text	0000001c __vfiprintf_internal
0080f754 g     F .text	00000220 altera_avalon_jtag_uart_read
0080152c g     F .text	00000030 _printf_r
0080b9cc g     F .text	00000064 .hidden __udivsi3
0080e564 g     F .text	000000b0 isatty
0080aac4 g     F .text	000000c4 _raise_r
00809f78 g     F .text	00000064 __assert_func
00810f38 g     O .rodata	000000c8 __mprec_tens
008108d0 g     F .text	00000090 alt_icache_flush
00814b00 g     O .bss	00000004 __malloc_top_pad
0080acf4 g     F .text	00000004 _getpid_r
008063cc g     F .text	0000000c _localeconv_r
008075fc g     F .text	00000054 __i2b
00805db8 g     F .text	000004cc __sfvwrite_r
0080ab88 g     F .text	000000b8 __sigtramp_r
00808828 g     F .text	00000058 _sbrk_r
0080a618 g     F .text	00000064 _read_r
00812ef4 g     O .rwdata	00000004 alt_max_fd
0080a0b4 g     F .text	000000f8 _fclose_r
00805624 g     F .text	00000028 fflush
00814afc g     O .bss	00000004 __malloc_max_sbrked_mem
008013b4 g     F .text	000000fc .hidden __extendsfdf2
0080ba8c g     F .text	00000978 .hidden __adddf3
00807e7c g     F .text	00000104 __b2d
0080b314 g     F .text	000005c4 .hidden __umoddi3
0080e8a4 g     F .text	000000e0 lseek
00812ed4 g     O .rwdata	00000004 _global_impure_ptr
008082c4 g     F .text	00000564 _realloc_r
00814c50 g       *ABS*	00000000 __bss_end
008101ac g     F .text	000000e8 alt_iic_isr_register
0080ed58 g     F .text	00000108 alt_tick
0080acf8 g     F .text	0000061c .hidden __udivdi3
0080a378 g     F .text	00000024 _fputwc_r
00810f10 g     O .rodata	00000028 __mprec_bigtens
008073b0 g     F .text	00000138 __s2b
0080a9c8 g     F .text	00000018 abort
0080e204 g     F .text	00000090 .hidden __floatunsidf
00807b9c g     F .text	00000058 __mcmp
00805978 g     F .text	00000014 __fp_lock_all
00810160 g     F .text	0000004c alt_ic_irq_enabled
0080ecb4 g     F .text	000000a4 alt_alarm_stop
00814b20 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000c8 alt_irq_handler
00811cb8 g     O .rwdata	00000028 alt_dev_null
0080fdd0 g     F .text	0000004c alt_dcache_flush_all
008074e8 g     F .text	00000064 __hi0bits
0080e0c8 g     F .text	00000080 .hidden __fixdfsi
00812f0c g       *ABS*	00000000 __ram_rwdata_end
00812eec g     O .rwdata	00000008 alt_dev_list
0080ef50 g     F .text	00000104 write
00811320 g       *ABS*	00000000 __ram_rodata_end
0080e44c g     F .text	000000bc fstat
0080e650 g     F .text	0000012c kill
0080cea8 g     F .text	000000f0 .hidden __ledf2
00800358 g     F .text	0000015c theFunction
008078fc g     F .text	00000118 __pow5mult
00808acc g     F .text	00001314 ___vfiprintf_internal_r
0080ba30 g     F .text	0000005c .hidden __umodsi3
00814c50 g       *ABS*	00000000 end
0080f28c g     F .text	000000c0 altera_avalon_jtag_uart_init
008001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
00810c68 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080fc18 g     F .text	00000084 alt_avalon_timer_sc_init
008014b0 g     F .text	00000054 .hidden __clzsi2
0080f974 g     F .text	00000228 altera_avalon_jtag_uart_write
00805968 g     F .text	00000004 __sfp_lock_acquire
00806d9c g     F .text	000000d4 memchr
00801708 g     F .text	000020ec ___vfprintf_internal_r
00805abc g     F .text	000002fc _free_r
00811174 g     O .rodata	00000180 _ctype_b
0080a540 g     F .text	0000000c __locale_mb_cur_max
00810b48 g     F .text	00000120 __call_exitprocs
00812edc g     O .rwdata	00000004 __malloc_sbrk_base
00800238 g     F .text	0000004c _start
00814b18 g     O .bss	00000004 _alt_tick_rate
00807a14 g     F .text	00000188 __lshift
00814b1c g     O .bss	00000004 _alt_nticks
0080ac50 g     F .text	00000018 signal
0080ea84 g     F .text	00000108 read
0080f0c4 g     F .text	00000064 alt_sys_init
00810ab8 g     F .text	00000090 __register_exitproc
00807650 g     F .text	000002ac __multiply
0080f5f8 g     F .text	00000068 altera_avalon_jtag_uart_close
00801504 g     F .text	00000028 .hidden __mulsi3
00811320 g       *ABS*	00000000 __ram_rwdata_start
00810c68 g       *ABS*	00000000 __ram_rodata_start
00814b28 g     O .bss	00000028 __malloc_current_mallinfo
00807f80 g     F .text	00000164 __d2b
00812ec4 g     O .rwdata	00000004 c_term2
0080f128 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00810818 g     F .text	000000b8 alt_get_fd
00809f20 g     F .text	00000058 _close_r
00800284 g     F .text	0000004c generateVector
00810a40 g     F .text	00000078 memcmp
0080f1e8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00814c50 g       *ABS*	00000000 __alt_stack_base
0080f238 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
008038d0 g     F .text	0000015c __swsetup_r
0080c404 g     F .text	00000934 .hidden __divdf3
00805848 g     F .text	000000fc __sfp
008081f8 g     F .text	0000006c __copybits
00811744 g     O .rwdata	00000408 __malloc_av_
00805974 g     F .text	00000004 __sinit_lock_release
0080cf98 g     F .text	000007a8 .hidden __muldf3
00808880 g     F .text	00000054 __sread
00810710 g     F .text	00000108 alt_find_file
0080fe58 g     F .text	000000a8 alt_dev_llist_insert
0080ea00 g     F .text	00000024 __malloc_lock
0080ebfc g     F .text	000000b8 sbrk
008055c4 g     F .text	00000060 _fflush_r
00809ff0 g     F .text	000000c4 _calloc_r
00814af8 g       *ABS*	00000000 __bss_start
0080709c g     F .text	000000f0 memset
008004b4 g     F .text	00000224 main
00814b14 g     O .bss	00000004 alt_envp
00814af8 g     O .bss	00000004 __malloc_max_total_mem
0080f188 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080a880 g     F .text	00000018 __swbuf
008089b8 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080a1ac g     F .text	00000010 fclose
00803c4c g     F .text	00001750 _dtoa_r
008065bc g     F .text	000007e0 _malloc_r
0080a998 g     F .text	00000030 __ascii_wctomb
00812ef8 g     O .rwdata	00000004 alt_errno
0080a1bc g     F .text	00000020 _fiprintf_r
0080ac68 g     F .text	0000001c _init_signal
00806284 g     F .text	00000098 _fwalk
0080a5c8 g     F .text	0000000c _mbtowc_r
0080b8d8 g     F .text	00000080 .hidden __divsi3
008059a0 g     F .text	0000011c _malloc_trim_r
00810c68 g       *ABS*	00000000 __CTOR_END__
00800b34 g     F .text	000003fc .hidden __mulsf3
0080a67c g     F .text	000000b8 strcmp
00810c68 g       *ABS*	00000000 __flash_rodata_start
00810c68 g       *ABS*	00000000 __DTOR_LIST__
0080cd38 g     F .text	00000080 .hidden __nedf2
0080f088 g     F .text	0000003c alt_irq_init
0080eb8c g     F .text	00000070 alt_release_fd
00810cd4 g     O .rodata	00000100 .hidden __clz_tab
00814b08 g     O .bss	00000004 _PathLocale
008109f8 g     F .text	00000014 atexit
008002d0 g     F .text	00000088 sumVector
00809ebc g     F .text	00000064 _write_r
00812ecc g     O .rwdata	00000004 coeff2
0080a54c g     F .text	00000018 setlocale
00812ed8 g     O .rwdata	00000004 _impure_ptr
00814b0c g     O .bss	00000004 alt_argc
0080539c g     F .text	00000228 __sflush_r
0080ff64 g     F .text	00000064 _do_dtors
00812ec0 g     O .rwdata	00000004 c_term3
00800020 g       .exceptions	00000000 alt_irq_entry
0080a5d4 g     F .text	00000044 __ascii_mbtowc
00807e20 g     F .text	0000005c __ulp
0080598c g     F .text	00000014 __fp_unlock_all
00812ee4 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
008063d8 g     F .text	0000000c localeconv
008063e4 g     F .text	00000098 __swhatbuf_r
0080fffc g     F .text	00000050 alt_ic_isr_register
00812f0c g       *ABS*	00000000 _edata
00814c50 g       *ABS*	00000000 _end
0080a214 g     F .text	00000164 __fputwc
00800238 g       *ABS*	00000000 __ram_exceptions_end
0080f660 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
008100d4 g     F .text	0000008c alt_ic_irq_disable
008088dc g     F .text	00000080 __swrite
00812ee0 g     O .rwdata	00000004 __malloc_trim_threshold
00810a0c g     F .text	00000034 exit
0080a1dc g     F .text	00000038 fiprintf
0080a734 g     F .text	00000004 _vfiprintf_r
0080631c g     F .text	000000a8 _fwalk_reent
00807bf4 g     F .text	0000022c __mdiff
0080b958 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
0080596c g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00811070 g     O .rodata	00000101 _ctype_
0080e074 g     F .text	00000054 .hidden __unorddf2
0080e3d8 g     F .text	00000038 _exit
0080fc9c g     F .text	00000134 alt_alarm_start
0080647c g     F .text	00000140 __smakebuf_r
00801670 g     F .text	00000098 strlen
0080aa2c g     F .text	00000014 _init_signal_r
008104fc g     F .text	00000160 open
0080cdb8 g     F .text	000000f0 .hidden __gedf2
00809fdc g     F .text	00000014 __assert
00808ab4 g     F .text	00000018 __sprint_r
0080ffc8 g     F .text	00000034 alt_icache_flush_all
00812f08 g     O .rwdata	00000004 alt_priority_mask
0081004c g     F .text	00000088 alt_ic_irq_enable
008037f4 g     F .text	0000001c __vfprintf_internal
0080a98c g     F .text	0000000c _wctomb_r
0080d740 g     F .text	00000934 .hidden __subdf3
0080754c g     F .text	000000b0 __lo0bits
00812f00 g     O .rwdata	00000008 alt_alarm_list
0080ff00 g     F .text	00000064 _do_ctors
0080ac84 g     F .text	00000010 __sigtramp
0080a904 g     F .text	00000088 wcrtomb
00812ed0 g     O .rwdata	00000004 coeff1
0080e2d0 g     F .text	000000dc close
008006d8 g     F .text	0000045c .hidden __addsf3
00811b4c g     O .rwdata	0000016c __global_locale
0080e7e4 g     F .text	00000084 alt_load
0080a39c g     F .text	00000078 fputwc
0080ac40 g     F .text	00000010 raise
00805970 g     F .text	00000004 __sinit_lock_acquire
00807254 g     F .text	0000015c __multadd
00807230 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08408e14 	ori	at,at,568
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001c40 	call	8001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0ffff17 	ldw	r3,-4(fp)
  800130:	e0bffe17 	ldw	r2,-8(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001126 	beq	r2,zero,800180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	e0bffd17 	ldw	r2,-12(fp)
  800140:	100690fa 	slli	r3,r2,3
  800144:	00802074 	movhi	r2,129
  800148:	1885883a 	add	r2,r3,r2
  80014c:	10d2d417 	ldw	r3,19280(r2)
  800150:	e0bffd17 	ldw	r2,-12(fp)
  800154:	100890fa 	slli	r4,r2,3
  800158:	00802074 	movhi	r2,129
  80015c:	2085883a 	add	r2,r4,r2
  800160:	1092d517 	ldw	r2,19284(r2)
  800164:	1009883a 	mov	r4,r2
  800168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  80016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  800170:	0005313a 	rdctl	r2,ipending
  800174:	e0bffb15 	stw	r2,-20(fp)
  return active;
  800178:	e0bffb17 	ldw	r2,-20(fp)
  80017c:	00000706 	br	80019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
  800180:	e0bffe17 	ldw	r2,-8(fp)
  800184:	1085883a 	add	r2,r2,r2
  800188:	e0bffe15 	stw	r2,-8(fp)
      i++;
  80018c:	e0bffd17 	ldw	r2,-12(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  800198:	003fe406 	br	80012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  80019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  8001a0:	e0bfff17 	ldw	r2,-4(fp)
  8001a4:	103fde1e 	bne	r2,zero,800120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a8:	0001883a 	nop
}
  8001ac:	0001883a 	nop
  8001b0:	e037883a 	mov	sp,fp
  8001b4:	dfc00117 	ldw	ra,4(sp)
  8001b8:	df000017 	ldw	fp,0(sp)
  8001bc:	dec00204 	addi	sp,sp,8
  8001c0:	f800283a 	ret

008001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001c4:	defffb04 	addi	sp,sp,-20
  8001c8:	dfc00415 	stw	ra,16(sp)
  8001cc:	df000315 	stw	fp,12(sp)
  8001d0:	df000304 	addi	fp,sp,12
  8001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001d8:	000531fa 	rdctl	r2,exception
  8001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001e0:	e0bfff17 	ldw	r2,-4(fp)
  8001e4:	1004d0ba 	srli	r2,r2,2
  8001e8:	108007cc 	andi	r2,r2,31
  8001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001f0:	0005333a 	rdctl	r2,badaddr
  8001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001f8:	d0a71917 	ldw	r2,-25500(gp)
  8001fc:	10000726 	beq	r2,zero,80021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800200:	d0a71917 	ldw	r2,-25500(gp)
  800204:	e0ffff17 	ldw	r3,-4(fp)
  800208:	e1bffe17 	ldw	r6,-8(fp)
  80020c:	e17ffd17 	ldw	r5,-12(fp)
  800210:	1809883a 	mov	r4,r3
  800214:	103ee83a 	callr	r2
  800218:	00000206 	br	800224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  80021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800220:	0005883a 	mov	r2,zero
}
  800224:	e037883a 	mov	sp,fp
  800228:	dfc00117 	ldw	ra,4(sp)
  80022c:	df000017 	ldw	fp,0(sp)
  800230:	dec00204 	addi	sp,sp,8
  800234:	f800283a 	ret

Disassembly of section .text:

00800238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  80023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800244:	00bffd16 	blt	zero,r2,80023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800248:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  80024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800250:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800254:	d6abb014 	ori	gp,gp,44736
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800258:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  80025c:	1092be14 	ori	r2,r2,19192

    movhi r3, %hi(__bss_end)
  800260:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800264:	18d31414 	ori	r3,r3,19536

    beq r2, r3, 1f
  800268:	10c00326 	beq	r2,r3,800278 <_start+0x40>

0:
    stw zero, (r2)
  80026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800274:	10fffd36 	bltu	r2,r3,80026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800278:	080e7e40 	call	80e7e4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  80027c:	080e9840 	call	80e984 <alt_main>

00800280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800280:	003fff06 	br	800280 <alt_after_alt_main>

00800284 <generateVector>:

#else

// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
  800284:	defffd04 	addi	sp,sp,-12
  800288:	dc400115 	stw	r17,4(sp)
  80028c:	dc000015 	stw	r16,0(sp)
  800290:	dfc00215 	stw	ra,8(sp)
  int i;
  x[0] = 0;
  800294:	20000015 	stw	zero,0(r4)
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  800298:	24000104 	addi	r16,r4,4
  80029c:	2447f904 	addi	r17,r4,8164
  x[0] = 0;
  8002a0:	0005883a 	mov	r2,zero
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  8002a4:	1009883a 	mov	r4,r2
  8002a8:	014f8034 	movhi	r5,15872
  8002ac:	08006d80 	call	8006d8 <__addsf3>
  8002b0:	80800015 	stw	r2,0(r16)
  8002b4:	84000104 	addi	r16,r16,4
  8002b8:	847ffa1e 	bne	r16,r17,8002a4 <generateVector+0x20>
}
  8002bc:	dfc00217 	ldw	ra,8(sp)
  8002c0:	dc400117 	ldw	r17,4(sp)
  8002c4:	dc000017 	ldw	r16,0(sp)
  8002c8:	dec00304 	addi	sp,sp,12
  8002cc:	f800283a 	ret

008002d0 <sumVector>:

#endif

float sumVector(float x[0], int M)
{
  8002d0:	defffb04 	addi	sp,sp,-20
  8002d4:	dfc00415 	stw	ra,16(sp)
  8002d8:	dcc00315 	stw	r19,12(sp)
  8002dc:	dc800215 	stw	r18,8(sp)
  8002e0:	dc400115 	stw	r17,4(sp)
  8002e4:	dc000015 	stw	r16,0(sp)
  float sum = 0;
  int i = 0;
  for (; i < M; i++) 
  8002e8:	0140190e 	bge	zero,r5,800350 <sumVector+0x80>
  8002ec:	280a90ba 	slli	r5,r5,2
  8002f0:	2021883a 	mov	r16,r4
  float sum = 0;
  8002f4:	0023883a 	mov	r17,zero
  8002f8:	2167883a 	add	r19,r4,r5
  {
    sum += (x[i] + x[i] * x[i]);
  8002fc:	84800017 	ldw	r18,0(r16)
  800300:	014fe034 	movhi	r5,16256
  800304:	84000104 	addi	r16,r16,4
  800308:	9009883a 	mov	r4,r18
  80030c:	08006d80 	call	8006d8 <__addsf3>
  800310:	900b883a 	mov	r5,r18
  800314:	1009883a 	mov	r4,r2
  800318:	0800b340 	call	800b34 <__mulsf3>
  80031c:	8809883a 	mov	r4,r17
  800320:	100b883a 	mov	r5,r2
  800324:	08006d80 	call	8006d8 <__addsf3>
  800328:	1023883a 	mov	r17,r2
  for (; i < M; i++) 
  80032c:	9c3ff31e 	bne	r19,r16,8002fc <sumVector+0x2c>
  }

  return sum;
}
  800330:	8805883a 	mov	r2,r17
  800334:	dfc00417 	ldw	ra,16(sp)
  800338:	dcc00317 	ldw	r19,12(sp)
  80033c:	dc800217 	ldw	r18,8(sp)
  800340:	dc400117 	ldw	r17,4(sp)
  800344:	dc000017 	ldw	r16,0(sp)
  800348:	dec00504 	addi	sp,sp,20
  80034c:	f800283a 	ret
  float sum = 0;
  800350:	0023883a 	mov	r17,zero
  return sum;
  800354:	003ff606 	br	800330 <sumVector+0x60>

00800358 <theFunction>:
// constant coefficient division
const float coeff1 = 0.5, coeff2 = 1 / 128.0f;
// taylor series terms 
const float c_term1 = 1/2.0, c_term2 = 1 / 24.0f, c_term3 = 1/40320.0;

float theFunction(float x[0], int M) {
  800358:	defff704 	addi	sp,sp,-36
  80035c:	dfc00815 	stw	ra,32(sp)
  800360:	ddc00715 	stw	r23,28(sp)
  800364:	dd800615 	stw	r22,24(sp)
  800368:	dd400515 	stw	r21,20(sp)
  80036c:	dd000415 	stw	r20,16(sp)
  800370:	dcc00315 	stw	r19,12(sp)
  800374:	dc800215 	stw	r18,8(sp)
  800378:	dc400115 	stw	r17,4(sp)
  80037c:	dc000015 	stw	r16,0(sp)
  float sum = 0;
  int i = 0;
  for (; i < M; i++) 
  800380:	01403b0e 	bge	zero,r5,800470 <theFunction+0x118>
  800384:	280a90ba 	slli	r5,r5,2
  {
    const float diff = x[i] + -128.0f;

    // const __uint32_t float_int = *(int*)&diff;
    // const __uint32_t new_exp = ((*(int*)&diff >> 23) & 0xff) - 7;
    const __uint32_t new_float = DividePow2(diff, 7);
  800388:	05202034 	movhi	r20,32896
  80038c:	054f4af4 	movhi	r21,15659
  800390:	2021883a 	mov	r16,r4
  800394:	2167883a 	add	r19,r4,r5
  float sum = 0;
  800398:	0023883a 	mov	r17,zero
    const __uint32_t new_float = DividePow2(diff, 7);
  80039c:	a53fffc4 	addi	r20,r20,-1
  8003a0:	ad6aaac4 	addi	r21,r21,-21845
  8003a4:	00002906 	br	80044c <theFunction+0xf4>
  8003a8:	19403fcc 	andi	r5,r3,255
  8003ac:	297ffe44 	addi	r5,r5,-7
  8003b0:	280a95fa 	slli	r5,r5,23
  8003b4:	290ab03a 	or	r5,r5,r4
  //     printf("original n: %x %f\n", float_int, diff );
  //     printf("custom div: %x %f exp: %u %u \n", new_float, cos_term, new_exp, (float_int >> 23) & 0xff);
  //     printf("real div:   %x %f exp: %u \n", *(int*)&actual_cos, actual_cos,  ((*(int*)&actual_cos) >> 23) & 0xff);
  // }
    // const float cos_term = diff * coeff2;
    const float cos_2 = cos_term * cos_term;
  8003b8:	2809883a 	mov	r4,r5
  8003bc:	0800b340 	call	800b34 <__mulsf3>
    const float cos_4 = cos_2 * cos_2;
  8003c0:	100b883a 	mov	r5,r2
  8003c4:	1009883a 	mov	r4,r2
    const float cos_2 = cos_term * cos_term;
  8003c8:	102d883a 	mov	r22,r2
    const float cos_4 = cos_2 * cos_2;
  8003cc:	0800b340 	call	800b34 <__mulsf3>
  8003d0:	a80b883a 	mov	r5,r21
  8003d4:	1009883a 	mov	r4,r2
  8003d8:	0800b340 	call	800b34 <__mulsf3>
  8003dc:	1009883a 	mov	r4,r2
  8003e0:	014fe034 	movhi	r5,16256
  8003e4:	08006d80 	call	8006d8 <__addsf3>
    // const float cos_6 = cos_4 * cos_2;

     __uint32_t term1_int =  DividePow2(cos_2, 1);
  8003e8:	b00bd5fa 	srai	r5,r22,23
  8003ec:	b02f883a 	mov	r23,r22
  8003f0:	1009883a 	mov	r4,r2
  8003f4:	29403fcc 	andi	r5,r5,255
  8003f8:	297fffc4 	addi	r5,r5,-1
  8003fc:	280a95fa 	slli	r5,r5,23
  800400:	a5ac703a 	and	r22,r20,r22
  800404:	b8002726 	beq	r23,zero,8004a4 <theFunction+0x14c>
  800408:	2d8ab03a 	or	r5,r5,r22
  80040c:	0800f300 	call	800f30 <__subsf3>
  800410:	1009883a 	mov	r4,r2
  800414:	900b883a 	mov	r5,r18
  800418:	0800b340 	call	800b34 <__mulsf3>
  80041c:	1009883a 	mov	r4,r2
    //  term1_int |= 0x80000000;
    const float term1 =  *(float*)&term1_int;

    const float cosine = 1 - term1  + cos_4 * c_term2;
    
    sum += (coeff1 * x[i] + (x[i] * x[i]) * cosine);
  800420:	014fc034 	movhi	r5,16128
  800424:	08006d80 	call	8006d8 <__addsf3>
  800428:	900b883a 	mov	r5,r18
  80042c:	1009883a 	mov	r4,r2
  800430:	0800b340 	call	800b34 <__mulsf3>
  800434:	8809883a 	mov	r4,r17
  800438:	100b883a 	mov	r5,r2
  80043c:	08006d80 	call	8006d8 <__addsf3>
  800440:	84000104 	addi	r16,r16,4
  800444:	1023883a 	mov	r17,r2
  for (; i < M; i++) 
  800448:	9c000a26 	beq	r19,r16,800474 <theFunction+0x11c>
    const float diff = x[i] + -128.0f;
  80044c:	84800017 	ldw	r18,0(r16)
  800450:	0150c034 	movhi	r5,17152
  800454:	9009883a 	mov	r4,r18
  800458:	0800f300 	call	800f30 <__subsf3>
    const __uint32_t new_float = DividePow2(diff, 7);
  80045c:	1007d5fa 	srai	r3,r2,23
  800460:	a088703a 	and	r4,r20,r2
  800464:	103fd01e 	bne	r2,zero,8003a8 <theFunction+0x50>
    const float diff = x[i] + -128.0f;
  800468:	9009883a 	mov	r4,r18
  80046c:	003fec06 	br	800420 <theFunction+0xc8>
  float sum = 0;
  800470:	0023883a 	mov	r17,zero
  }

  return sum;
}
  800474:	8805883a 	mov	r2,r17
  800478:	dfc00817 	ldw	ra,32(sp)
  80047c:	ddc00717 	ldw	r23,28(sp)
  800480:	dd800617 	ldw	r22,24(sp)
  800484:	dd400517 	ldw	r21,20(sp)
  800488:	dd000417 	ldw	r20,16(sp)
  80048c:	dcc00317 	ldw	r19,12(sp)
  800490:	dc800217 	ldw	r18,8(sp)
  800494:	dc400117 	ldw	r17,4(sp)
  800498:	dc000017 	ldw	r16,0(sp)
  80049c:	dec00904 	addi	sp,sp,36
  8004a0:	f800283a 	ret
  8004a4:	900b883a 	mov	r5,r18
  8004a8:	0800b340 	call	800b34 <__mulsf3>
  8004ac:	1009883a 	mov	r4,r2
  8004b0:	003fdb06 	br	800420 <theFunction+0xc8>

008004b4 <main>:

int main(int argc, char* argv[])
{
  const int numIterations = NUM_CASES;
  printf("Task 3!\n");
  8004b4:	01002074 	movhi	r4,129
{
  8004b8:	def7f904 	addi	sp,sp,-8220
  printf("Task 3!\n");
  8004bc:	21031a04 	addi	r4,r4,3176
{
  8004c0:	dfc80615 	stw	ra,8216(sp)
  8004c4:	dc87ff15 	stw	r18,8188(sp)
  8004c8:	dc07fd15 	stw	r16,8180(sp)
  8004cc:	df080515 	stw	fp,8212(sp)
  8004d0:	ddc80415 	stw	r23,8208(sp)
  8004d4:	dd880315 	stw	r22,8204(sp)
  8004d8:	dd480215 	stw	r21,8200(sp)
  8004dc:	dd080115 	stw	r20,8196(sp)
  8004e0:	dcc80015 	stw	r19,8192(sp)
  8004e4:	dc47fe15 	stw	r17,8184(sp)
  printf("Task 3!\n");
  8004e8:	08016600 	call	801660 <puts>
  printf("Ticks per second: %ld\n", alt_ticks_per_second());
  8004ec:	d1671617 	ldw	r5,-25512(gp)
  8004f0:	01002074 	movhi	r4,129
  8004f4:	21031c04 	addi	r4,r4,3184
  8004f8:	080155c0 	call	80155c <printf>
  printf("Running %d tests\n", numIterations);
  8004fc:	01002074 	movhi	r4,129
  800500:	01400284 	movi	r5,10
  800504:	21032204 	addi	r4,r4,3208
  800508:	080155c0 	call	80155c <printf>
  x[0] = 0;
  80050c:	dc000504 	addi	r16,sp,20
  800510:	d8000415 	stw	zero,16(sp)
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  800514:	dc87fd04 	addi	r18,sp,8180
  x[0] = 0;
  800518:	0005883a 	mov	r2,zero
  for (i = 1; i < N; i++) x[i] = x[i-1] + step;
  80051c:	1009883a 	mov	r4,r2
  800520:	014f8034 	movhi	r5,15872
  800524:	08006d80 	call	8006d8 <__addsf3>
  800528:	80800015 	stw	r2,0(r16)
  80052c:	84000104 	addi	r16,r16,4
  800530:	943ffa1e 	bne	r18,r16,80051c <main+0x68>

  volatile clock_t exec_t1, exec_t2;

  // const int numIterations = 1 << TEST_REPEAT;

  exec_t1 = times(NULL);
  800534:	0009883a 	mov	r4,zero
  800538:	080ee9c0 	call	80ee9c <times>
    const __uint32_t new_float = DividePow2(diff, 7);
  80053c:	05202034 	movhi	r20,32896
  800540:	054f4af4 	movhi	r21,15659
  exec_t1 = times(NULL);
  800544:	d8800115 	stw	r2,4(sp)
  800548:	05800284 	movi	r22,10
    const __uint32_t new_float = DividePow2(diff, 7);
  80054c:	a53fffc4 	addi	r20,r20,-1
  800550:	ad6aaac4 	addi	r21,r21,-21845
  exec_t1 = times(NULL);
  800554:	dc000404 	addi	r16,sp,16
  float sum = 0;
  800558:	0027883a 	mov	r19,zero
  80055c:	00002906 	br	800604 <main+0x150>
    const __uint32_t new_float = DividePow2(diff, 7);
  800560:	19403fcc 	andi	r5,r3,255
  800564:	297ffe44 	addi	r5,r5,-7
  800568:	280a95fa 	slli	r5,r5,23
  80056c:	290ab03a 	or	r5,r5,r4
    const float cos_2 = cos_term * cos_term;
  800570:	2809883a 	mov	r4,r5
  800574:	0800b340 	call	800b34 <__mulsf3>
    const float cos_4 = cos_2 * cos_2;
  800578:	100b883a 	mov	r5,r2
  80057c:	1009883a 	mov	r4,r2
    const float cos_2 = cos_term * cos_term;
  800580:	102f883a 	mov	r23,r2
    const float cos_4 = cos_2 * cos_2;
  800584:	0800b340 	call	800b34 <__mulsf3>
  800588:	a80b883a 	mov	r5,r21
  80058c:	1009883a 	mov	r4,r2
  800590:	0800b340 	call	800b34 <__mulsf3>
  800594:	1009883a 	mov	r4,r2
  800598:	014fe034 	movhi	r5,16256
  80059c:	08006d80 	call	8006d8 <__addsf3>
     __uint32_t term1_int =  DividePow2(cos_2, 1);
  8005a0:	b80bd5fa 	srai	r5,r23,23
  8005a4:	b839883a 	mov	fp,r23
  8005a8:	1009883a 	mov	r4,r2
  8005ac:	29403fcc 	andi	r5,r5,255
  8005b0:	297fffc4 	addi	r5,r5,-1
  8005b4:	280a95fa 	slli	r5,r5,23
  8005b8:	a5ee703a 	and	r23,r20,r23
  8005bc:	e0004126 	beq	fp,zero,8006c4 <main+0x210>
  8005c0:	2dcab03a 	or	r5,r5,r23
  8005c4:	0800f300 	call	800f30 <__subsf3>
  8005c8:	1009883a 	mov	r4,r2
  8005cc:	880b883a 	mov	r5,r17
  8005d0:	0800b340 	call	800b34 <__mulsf3>
  8005d4:	1009883a 	mov	r4,r2
    sum += (coeff1 * x[i] + (x[i] * x[i]) * cosine);
  8005d8:	014fc034 	movhi	r5,16128
  8005dc:	08006d80 	call	8006d8 <__addsf3>
  8005e0:	880b883a 	mov	r5,r17
  8005e4:	1009883a 	mov	r4,r2
  8005e8:	0800b340 	call	800b34 <__mulsf3>
  8005ec:	9809883a 	mov	r4,r19
  8005f0:	100b883a 	mov	r5,r2
  8005f4:	08006d80 	call	8006d8 <__addsf3>
  8005f8:	84000104 	addi	r16,r16,4
  8005fc:	1027883a 	mov	r19,r2
  for (; i < M; i++) 
  800600:	84800926 	beq	r16,r18,800628 <main+0x174>
    const float diff = x[i] + -128.0f;
  800604:	84400017 	ldw	r17,0(r16)
  800608:	0150c034 	movhi	r5,17152
  80060c:	8809883a 	mov	r4,r17
  800610:	0800f300 	call	800f30 <__subsf3>
    const __uint32_t new_float = DividePow2(diff, 7);
  800614:	1007d5fa 	srai	r3,r2,23
  800618:	a088703a 	and	r4,r20,r2
  80061c:	103fd01e 	bne	r2,zero,800560 <main+0xac>
    const float diff = x[i] + -128.0f;
  800620:	8809883a 	mov	r4,r17
  800624:	003fec06 	br	8005d8 <main+0x124>
  int y1 = 0;
  // The code that you want to time goes here
  // for (int i = 0; i < (1 << TEST_REPEAT); i++) y = sumVector(x, N);
  for (int i = 0; i < numIterations; i++) {
    // if ((y = sumVector(x, N)) > 0) y1++;
    y = theFunction(x, N);
  800628:	d8800015 	stw	r2,0(sp)
  for (int i = 0; i < numIterations; i++) {
  80062c:	b5bfffc4 	addi	r22,r22,-1
  800630:	b03fc81e 	bne	r22,zero,800554 <main+0xa0>
  }

  // till here
  exec_t2 = times(NULL);
  800634:	0009883a 	mov	r4,zero
  800638:	080ee9c0 	call	80ee9c <times>
  80063c:	d8800215 	stw	r2,8(sp)

  volatile int elapsedTicks = (int)(exec_t2 - exec_t1);
  800640:	d8800217 	ldw	r2,8(sp)
  800644:	d8c00117 	ldw	r3,4(sp)
  printf("ElpasedTicks: %d\n", elapsedTicks);
  800648:	01002074 	movhi	r4,129
  80064c:	21032704 	addi	r4,r4,3228
  volatile int elapsedTicks = (int)(exec_t2 - exec_t1);
  800650:	10c5c83a 	sub	r2,r2,r3
  800654:	d8800315 	stw	r2,12(sp)
  printf("ElpasedTicks: %d\n", elapsedTicks);
  800658:	d9400317 	ldw	r5,12(sp)
  80065c:	080155c0 	call	80155c <printf>
  printf("RESULT: %f, %x\n", y, *(int*)(&y));
  800660:	d9000017 	ldw	r4,0(sp)
  800664:	08013b40 	call	8013b4 <__extendsfdf2>
  800668:	d9c00017 	ldw	r7,0(sp)
  80066c:	01002074 	movhi	r4,129
  800670:	180d883a 	mov	r6,r3
  800674:	100b883a 	mov	r5,r2
  800678:	21032c04 	addi	r4,r4,3248
  80067c:	080155c0 	call	80155c <printf>
  printf("Num Iterations: %d\n", y1);
  800680:	01002074 	movhi	r4,129
  800684:	000b883a 	mov	r5,zero
  800688:	21033004 	addi	r4,r4,3264
  80068c:	080155c0 	call	80155c <printf>
  // printf("Total ticks %d for %d iters\n", elapsedTicks , numIterations);
  // printf("Time Taken: %f\n",(float) elapsedTicks/numIterations);


  return 0;
}
  800690:	0005883a 	mov	r2,zero
  800694:	dfc80617 	ldw	ra,8216(sp)
  800698:	df080517 	ldw	fp,8212(sp)
  80069c:	ddc80417 	ldw	r23,8208(sp)
  8006a0:	dd880317 	ldw	r22,8204(sp)
  8006a4:	dd480217 	ldw	r21,8200(sp)
  8006a8:	dd080117 	ldw	r20,8196(sp)
  8006ac:	dcc80017 	ldw	r19,8192(sp)
  8006b0:	dc87ff17 	ldw	r18,8188(sp)
  8006b4:	dc47fe17 	ldw	r17,8184(sp)
  8006b8:	dc07fd17 	ldw	r16,8180(sp)
  8006bc:	dec80704 	addi	sp,sp,8220
  8006c0:	f800283a 	ret
  8006c4:	8809883a 	mov	r4,r17
  8006c8:	100b883a 	mov	r5,r2
  8006cc:	0800b340 	call	800b34 <__mulsf3>
  8006d0:	1009883a 	mov	r4,r2
  8006d4:	003fc006 	br	8005d8 <main+0x124>

008006d8 <__addsf3>:
  8006d8:	280cd5fa 	srli	r6,r5,23
  8006dc:	2006d5fa 	srli	r3,r4,23
  8006e0:	2010d7fa 	srli	r8,r4,31
  8006e4:	01c02034 	movhi	r7,128
  8006e8:	2818d7fa 	srli	r12,r5,31
  8006ec:	defffc04 	addi	sp,sp,-16
  8006f0:	39ffffc4 	addi	r7,r7,-1
  8006f4:	3914703a 	and	r10,r7,r4
  8006f8:	32403fcc 	andi	r9,r6,255
  8006fc:	dc800215 	stw	r18,8(sp)
  800700:	dc400115 	stw	r17,4(sp)
  800704:	395a703a 	and	r13,r7,r5
  800708:	1c403fcc 	andi	r17,r3,255
  80070c:	dfc00315 	stw	ra,12(sp)
  800710:	dc000015 	stw	r16,0(sp)
  800714:	501c90fa 	slli	r14,r10,3
  800718:	681690fa 	slli	r11,r13,3
  80071c:	500d883a 	mov	r6,r10
  800720:	4025883a 	mov	r18,r8
  800724:	8a45c83a 	sub	r2,r17,r9
  800728:	43004b26 	beq	r8,r12,800858 <__addsf3+0x180>
  80072c:	0080390e 	bge	zero,r2,800814 <__addsf3+0x13c>
  800730:	48006326 	beq	r9,zero,8008c0 <__addsf3+0x1e8>
  800734:	88c03fe0 	cmpeqi	r3,r17,255
  800738:	1800401e 	bne	r3,zero,80083c <__addsf3+0x164>
  80073c:	5ac10034 	orhi	r11,r11,1024
  800740:	10c00708 	cmpgei	r3,r2,28
  800744:	1800ab1e 	bne	r3,zero,8009f4 <__addsf3+0x31c>
  800748:	01000804 	movi	r4,32
  80074c:	2089c83a 	sub	r4,r4,r2
  800750:	5908983a 	sll	r4,r11,r4
  800754:	5884d83a 	srl	r2,r11,r2
  800758:	2008c03a 	cmpne	r4,r4,zero
  80075c:	1104b03a 	or	r2,r2,r4
  800760:	7085c83a 	sub	r2,r14,r2
  800764:	10c1002c 	andhi	r3,r2,1024
  800768:	18008526 	beq	r3,zero,800980 <__addsf3+0x2a8>
  80076c:	04010034 	movhi	r16,1024
  800770:	843fffc4 	addi	r16,r16,-1
  800774:	1420703a 	and	r16,r2,r16
  800778:	8009883a 	mov	r4,r16
  80077c:	08014b00 	call	8014b0 <__clzsi2>
  800780:	10fffec4 	addi	r3,r2,-5
  800784:	80c4983a 	sll	r2,r16,r3
  800788:	1c409516 	blt	r3,r17,8009e0 <__addsf3+0x308>
  80078c:	1c47c83a 	sub	r3,r3,r17
  800790:	1c000044 	addi	r16,r3,1
  800794:	01000804 	movi	r4,32
  800798:	2409c83a 	sub	r4,r4,r16
  80079c:	1108983a 	sll	r4,r2,r4
  8007a0:	1404d83a 	srl	r2,r2,r16
  8007a4:	0023883a 	mov	r17,zero
  8007a8:	2008c03a 	cmpne	r4,r4,zero
  8007ac:	1104b03a 	or	r2,r2,r4
  8007b0:	10c001cc 	andi	r3,r2,7
  8007b4:	18000426 	beq	r3,zero,8007c8 <__addsf3+0xf0>
  8007b8:	10c003cc 	andi	r3,r2,15
  8007bc:	18c00120 	cmpeqi	r3,r3,4
  8007c0:	1800011e 	bne	r3,zero,8007c8 <__addsf3+0xf0>
  8007c4:	10800104 	addi	r2,r2,4
  8007c8:	10c1002c 	andhi	r3,r2,1024
  8007cc:	18006e26 	beq	r3,zero,800988 <__addsf3+0x2b0>
  8007d0:	88c00044 	addi	r3,r17,1
  8007d4:	19003fe0 	cmpeqi	r4,r3,255
  8007d8:	20006d1e 	bne	r4,zero,800990 <__addsf3+0x2b8>
  8007dc:	100491ba 	slli	r2,r2,6
  8007e0:	100cd27a 	srli	r6,r2,9
  8007e4:	18803fcc 	andi	r2,r3,255
  8007e8:	100495fa 	slli	r2,r2,23
  8007ec:	94803fcc 	andi	r18,r18,255
  8007f0:	902497fa 	slli	r18,r18,31
  8007f4:	1184b03a 	or	r2,r2,r6
  8007f8:	1484b03a 	or	r2,r2,r18
  8007fc:	dfc00317 	ldw	ra,12(sp)
  800800:	dc800217 	ldw	r18,8(sp)
  800804:	dc400117 	ldw	r17,4(sp)
  800808:	dc000017 	ldw	r16,0(sp)
  80080c:	dec00404 	addi	sp,sp,16
  800810:	f800283a 	ret
  800814:	10003026 	beq	r2,zero,8008d8 <__addsf3+0x200>
  800818:	4c49c83a 	sub	r4,r9,r17
  80081c:	88007f1e 	bne	r17,zero,800a1c <__addsf3+0x344>
  800820:	70003f26 	beq	r14,zero,800920 <__addsf3+0x248>
  800824:	213fffc4 	addi	r4,r4,-1
  800828:	2000b326 	beq	r4,zero,800af8 <__addsf3+0x420>
  80082c:	48803fe0 	cmpeqi	r2,r9,255
  800830:	10007d26 	beq	r2,zero,800a28 <__addsf3+0x350>
  800834:	6025883a 	mov	r18,r12
  800838:	6815883a 	mov	r10,r13
  80083c:	50005426 	beq	r10,zero,800990 <__addsf3+0x2b8>
  800840:	00802034 	movhi	r2,128
  800844:	51801034 	orhi	r6,r10,64
  800848:	10bfffc4 	addi	r2,r2,-1
  80084c:	308c703a 	and	r6,r6,r2
  800850:	00ffffc4 	movi	r3,-1
  800854:	003fe306 	br	8007e4 <__addsf3+0x10c>
  800858:	0080500e 	bge	zero,r2,80099c <__addsf3+0x2c4>
  80085c:	48002a26 	beq	r9,zero,800908 <__addsf3+0x230>
  800860:	88c03fe0 	cmpeqi	r3,r17,255
  800864:	183ff51e 	bne	r3,zero,80083c <__addsf3+0x164>
  800868:	5ac10034 	orhi	r11,r11,1024
  80086c:	10c00708 	cmpgei	r3,r2,28
  800870:	1800741e 	bne	r3,zero,800a44 <__addsf3+0x36c>
  800874:	00c00804 	movi	r3,32
  800878:	1887c83a 	sub	r3,r3,r2
  80087c:	58c6983a 	sll	r3,r11,r3
  800880:	5884d83a 	srl	r2,r11,r2
  800884:	1806c03a 	cmpne	r3,r3,zero
  800888:	10c4b03a 	or	r2,r2,r3
  80088c:	1385883a 	add	r2,r2,r14
  800890:	10c1002c 	andhi	r3,r2,1024
  800894:	18003a26 	beq	r3,zero,800980 <__addsf3+0x2a8>
  800898:	8c400044 	addi	r17,r17,1
  80089c:	88c03fe0 	cmpeqi	r3,r17,255
  8008a0:	18003b1e 	bne	r3,zero,800990 <__addsf3+0x2b8>
  8008a4:	1008d07a 	srli	r4,r2,1
  8008a8:	00df8034 	movhi	r3,32256
  8008ac:	18ffffc4 	addi	r3,r3,-1
  8008b0:	1080004c 	andi	r2,r2,1
  8008b4:	20c8703a 	and	r4,r4,r3
  8008b8:	2084b03a 	or	r2,r4,r2
  8008bc:	003fbc06 	br	8007b0 <__addsf3+0xd8>
  8008c0:	58001a26 	beq	r11,zero,80092c <__addsf3+0x254>
  8008c4:	10bfffc4 	addi	r2,r2,-1
  8008c8:	10007c26 	beq	r2,zero,800abc <__addsf3+0x3e4>
  8008cc:	88c03fe0 	cmpeqi	r3,r17,255
  8008d0:	183f9b26 	beq	r3,zero,800740 <__addsf3+0x68>
  8008d4:	003fd906 	br	80083c <__addsf3+0x164>
  8008d8:	88800044 	addi	r2,r17,1
  8008dc:	10803f8c 	andi	r2,r2,254
  8008e0:	1000461e 	bne	r2,zero,8009fc <__addsf3+0x324>
  8008e4:	88006e1e 	bne	r17,zero,800aa0 <__addsf3+0x3c8>
  8008e8:	70007f26 	beq	r14,zero,800ae8 <__addsf3+0x410>
  8008ec:	583fbd26 	beq	r11,zero,8007e4 <__addsf3+0x10c>
  8008f0:	72c5c83a 	sub	r2,r14,r11
  8008f4:	1101002c 	andhi	r4,r2,1024
  8008f8:	20008326 	beq	r4,zero,800b08 <__addsf3+0x430>
  8008fc:	5b85c83a 	sub	r2,r11,r14
  800900:	6025883a 	mov	r18,r12
  800904:	003faa06 	br	8007b0 <__addsf3+0xd8>
  800908:	58000826 	beq	r11,zero,80092c <__addsf3+0x254>
  80090c:	10bfffc4 	addi	r2,r2,-1
  800910:	10006826 	beq	r2,zero,800ab4 <__addsf3+0x3dc>
  800914:	88c03fe0 	cmpeqi	r3,r17,255
  800918:	183fd426 	beq	r3,zero,80086c <__addsf3+0x194>
  80091c:	003fc706 	br	80083c <__addsf3+0x164>
  800920:	6025883a 	mov	r18,r12
  800924:	6815883a 	mov	r10,r13
  800928:	4823883a 	mov	r17,r9
  80092c:	88803fe0 	cmpeqi	r2,r17,255
  800930:	103fc21e 	bne	r2,zero,80083c <__addsf3+0x164>
  800934:	00802034 	movhi	r2,128
  800938:	10bfffc4 	addi	r2,r2,-1
  80093c:	508c703a 	and	r6,r10,r2
  800940:	8807883a 	mov	r3,r17
  800944:	003fa706 	br	8007e4 <__addsf3+0x10c>
  800948:	881f883a 	mov	r15,r17
  80094c:	8c400044 	addi	r17,r17,1
  800950:	88803f8c 	andi	r2,r17,254
  800954:	10004a1e 	bne	r2,zero,800a80 <__addsf3+0x3a8>
  800958:	78005a1e 	bne	r15,zero,800ac4 <__addsf3+0x3ec>
  80095c:	70006e26 	beq	r14,zero,800b18 <__addsf3+0x440>
  800960:	583fa026 	beq	r11,zero,8007e4 <__addsf3+0x10c>
  800964:	72c5883a 	add	r2,r14,r11
  800968:	10c1002c 	andhi	r3,r2,1024
  80096c:	18006f26 	beq	r3,zero,800b2c <__addsf3+0x454>
  800970:	00ff0034 	movhi	r3,64512
  800974:	18ffffc4 	addi	r3,r3,-1
  800978:	10c4703a 	and	r2,r2,r3
  80097c:	04400044 	movi	r17,1
  800980:	10c001cc 	andi	r3,r2,7
  800984:	183f8c1e 	bne	r3,zero,8007b8 <__addsf3+0xe0>
  800988:	1014d0fa 	srli	r10,r2,3
  80098c:	003fe706 	br	80092c <__addsf3+0x254>
  800990:	00ffffc4 	movi	r3,-1
  800994:	000d883a 	mov	r6,zero
  800998:	003f9206 	br	8007e4 <__addsf3+0x10c>
  80099c:	103fea26 	beq	r2,zero,800948 <__addsf3+0x270>
  8009a0:	4c49c83a 	sub	r4,r9,r17
  8009a4:	88003026 	beq	r17,zero,800a68 <__addsf3+0x390>
  8009a8:	48803fe0 	cmpeqi	r2,r9,255
  8009ac:	103fa21e 	bne	r2,zero,800838 <__addsf3+0x160>
  8009b0:	73810034 	orhi	r14,r14,1024
  8009b4:	20800708 	cmpgei	r2,r4,28
  8009b8:	1000491e 	bne	r2,zero,800ae0 <__addsf3+0x408>
  8009bc:	00800804 	movi	r2,32
  8009c0:	1105c83a 	sub	r2,r2,r4
  8009c4:	7084983a 	sll	r2,r14,r2
  8009c8:	7108d83a 	srl	r4,r14,r4
  8009cc:	1004c03a 	cmpne	r2,r2,zero
  8009d0:	2088b03a 	or	r4,r4,r2
  8009d4:	22c5883a 	add	r2,r4,r11
  8009d8:	4823883a 	mov	r17,r9
  8009dc:	003fac06 	br	800890 <__addsf3+0x1b8>
  8009e0:	013f0034 	movhi	r4,64512
  8009e4:	213fffc4 	addi	r4,r4,-1
  8009e8:	88e3c83a 	sub	r17,r17,r3
  8009ec:	1104703a 	and	r2,r2,r4
  8009f0:	003f6f06 	br	8007b0 <__addsf3+0xd8>
  8009f4:	00800044 	movi	r2,1
  8009f8:	003f5906 	br	800760 <__addsf3+0x88>
  8009fc:	72e1c83a 	sub	r16,r14,r11
  800a00:	8081002c 	andhi	r2,r16,1024
  800a04:	1000231e 	bne	r2,zero,800a94 <__addsf3+0x3bc>
  800a08:	803f5b1e 	bne	r16,zero,800778 <__addsf3+0xa0>
  800a0c:	0025883a 	mov	r18,zero
  800a10:	0007883a 	mov	r3,zero
  800a14:	000d883a 	mov	r6,zero
  800a18:	003f7206 	br	8007e4 <__addsf3+0x10c>
  800a1c:	48803fe0 	cmpeqi	r2,r9,255
  800a20:	103f841e 	bne	r2,zero,800834 <__addsf3+0x15c>
  800a24:	73810034 	orhi	r14,r14,1024
  800a28:	20800708 	cmpgei	r2,r4,28
  800a2c:	10000726 	beq	r2,zero,800a4c <__addsf3+0x374>
  800a30:	01000044 	movi	r4,1
  800a34:	5905c83a 	sub	r2,r11,r4
  800a38:	6025883a 	mov	r18,r12
  800a3c:	4823883a 	mov	r17,r9
  800a40:	003f4806 	br	800764 <__addsf3+0x8c>
  800a44:	00800044 	movi	r2,1
  800a48:	003f9006 	br	80088c <__addsf3+0x1b4>
  800a4c:	00800804 	movi	r2,32
  800a50:	1105c83a 	sub	r2,r2,r4
  800a54:	7084983a 	sll	r2,r14,r2
  800a58:	7108d83a 	srl	r4,r14,r4
  800a5c:	1004c03a 	cmpne	r2,r2,zero
  800a60:	2088b03a 	or	r4,r4,r2
  800a64:	003ff306 	br	800a34 <__addsf3+0x35c>
  800a68:	703fae26 	beq	r14,zero,800924 <__addsf3+0x24c>
  800a6c:	213fffc4 	addi	r4,r4,-1
  800a70:	20002b26 	beq	r4,zero,800b20 <__addsf3+0x448>
  800a74:	48803fe0 	cmpeqi	r2,r9,255
  800a78:	103fce26 	beq	r2,zero,8009b4 <__addsf3+0x2dc>
  800a7c:	003f6e06 	br	800838 <__addsf3+0x160>
  800a80:	88803fe0 	cmpeqi	r2,r17,255
  800a84:	103fc21e 	bne	r2,zero,800990 <__addsf3+0x2b8>
  800a88:	72c5883a 	add	r2,r14,r11
  800a8c:	1004d07a 	srli	r2,r2,1
  800a90:	003fbb06 	br	800980 <__addsf3+0x2a8>
  800a94:	5ba1c83a 	sub	r16,r11,r14
  800a98:	6025883a 	mov	r18,r12
  800a9c:	003f3606 	br	800778 <__addsf3+0xa0>
  800aa0:	7000091e 	bne	r14,zero,800ac8 <__addsf3+0x3f0>
  800aa4:	583f631e 	bne	r11,zero,800834 <__addsf3+0x15c>
  800aa8:	0025883a 	mov	r18,zero
  800aac:	380d883a 	mov	r6,r7
  800ab0:	003f6706 	br	800850 <__addsf3+0x178>
  800ab4:	72c5883a 	add	r2,r14,r11
  800ab8:	003f7506 	br	800890 <__addsf3+0x1b8>
  800abc:	72c5c83a 	sub	r2,r14,r11
  800ac0:	003f2806 	br	800764 <__addsf3+0x8c>
  800ac4:	703f5c26 	beq	r14,zero,800838 <__addsf3+0x160>
  800ac8:	583f5c26 	beq	r11,zero,80083c <__addsf3+0x164>
  800acc:	20c0102c 	andhi	r3,r4,64
  800ad0:	183f5a26 	beq	r3,zero,80083c <__addsf3+0x164>
  800ad4:	2940102c 	andhi	r5,r5,64
  800ad8:	283f581e 	bne	r5,zero,80083c <__addsf3+0x164>
  800adc:	003f5506 	br	800834 <__addsf3+0x15c>
  800ae0:	01000044 	movi	r4,1
  800ae4:	003fbb06 	br	8009d4 <__addsf3+0x2fc>
  800ae8:	58000826 	beq	r11,zero,800b0c <__addsf3+0x434>
  800aec:	6025883a 	mov	r18,r12
  800af0:	680d883a 	mov	r6,r13
  800af4:	003f3b06 	br	8007e4 <__addsf3+0x10c>
  800af8:	5b85c83a 	sub	r2,r11,r14
  800afc:	6025883a 	mov	r18,r12
  800b00:	4823883a 	mov	r17,r9
  800b04:	003f1706 	br	800764 <__addsf3+0x8c>
  800b08:	103f9d1e 	bne	r2,zero,800980 <__addsf3+0x2a8>
  800b0c:	0025883a 	mov	r18,zero
  800b10:	000d883a 	mov	r6,zero
  800b14:	003f3306 	br	8007e4 <__addsf3+0x10c>
  800b18:	680d883a 	mov	r6,r13
  800b1c:	003f3106 	br	8007e4 <__addsf3+0x10c>
  800b20:	72c5883a 	add	r2,r14,r11
  800b24:	4823883a 	mov	r17,r9
  800b28:	003f5906 	br	800890 <__addsf3+0x1b8>
  800b2c:	0023883a 	mov	r17,zero
  800b30:	003f9306 	br	800980 <__addsf3+0x2a8>

00800b34 <__mulsf3>:
  800b34:	defff504 	addi	sp,sp,-44
  800b38:	dc400215 	stw	r17,8(sp)
  800b3c:	2022d5fa 	srli	r17,r4,23
  800b40:	dc000115 	stw	r16,4(sp)
  800b44:	04002034 	movhi	r16,128
  800b48:	dd800715 	stw	r22,28(sp)
  800b4c:	843fffc4 	addi	r16,r16,-1
  800b50:	dfc00a15 	stw	ra,40(sp)
  800b54:	df000915 	stw	fp,36(sp)
  800b58:	ddc00815 	stw	r23,32(sp)
  800b5c:	dd400615 	stw	r21,24(sp)
  800b60:	dd000515 	stw	r20,20(sp)
  800b64:	dcc00415 	stw	r19,16(sp)
  800b68:	dc800315 	stw	r18,12(sp)
  800b6c:	8c403fcc 	andi	r17,r17,255
  800b70:	202cd7fa 	srli	r22,r4,31
  800b74:	8120703a 	and	r16,r16,r4
  800b78:	88005026 	beq	r17,zero,800cbc <__mulsf3+0x188>
  800b7c:	88803fe0 	cmpeqi	r2,r17,255
  800b80:	1000531e 	bne	r2,zero,800cd0 <__mulsf3+0x19c>
  800b84:	802090fa 	slli	r16,r16,3
  800b88:	8c7fe044 	addi	r17,r17,-127
  800b8c:	0025883a 	mov	r18,zero
  800b90:	84010034 	orhi	r16,r16,1024
  800b94:	0029883a 	mov	r20,zero
  800b98:	2804d5fa 	srli	r2,r5,23
  800b9c:	01002034 	movhi	r4,128
  800ba0:	213fffc4 	addi	r4,r4,-1
  800ba4:	10803fcc 	andi	r2,r2,255
  800ba8:	282ed7fa 	srli	r23,r5,31
  800bac:	2166703a 	and	r19,r4,r5
  800bb0:	10004c26 	beq	r2,zero,800ce4 <__mulsf3+0x1b0>
  800bb4:	10c03fe0 	cmpeqi	r3,r2,255
  800bb8:	18001e1e 	bne	r3,zero,800c34 <__mulsf3+0x100>
  800bbc:	980890fa 	slli	r4,r19,3
  800bc0:	10bfe044 	addi	r2,r2,-127
  800bc4:	88a3883a 	add	r17,r17,r2
  800bc8:	24c10034 	orhi	r19,r4,1024
  800bcc:	0007883a 	mov	r3,zero
  800bd0:	90800428 	cmpgeui	r2,r18,16
  800bd4:	b5eaf03a 	xor	r21,r22,r23
  800bd8:	8f000044 	addi	fp,r17,1
  800bdc:	1000481e 	bne	r2,zero,800d00 <__mulsf3+0x1cc>
  800be0:	902490ba 	slli	r18,r18,2
  800be4:	00802034 	movhi	r2,128
  800be8:	9085883a 	add	r2,r18,r2
  800bec:	1082fd17 	ldw	r2,3060(r2)
  800bf0:	1000683a 	jmp	r2
  800bf4:	00800d00 	call	800d0 <__alt_mem_sdram-0x77ff30>
  800bf8:	00800c4c 	andi	r2,zero,49
  800bfc:	00800c4c 	andi	r2,zero,49
  800c00:	00800c48 	cmpgei	r2,zero,49
  800c04:	00800c54 	movui	r2,49
  800c08:	00800c54 	movui	r2,49
  800c0c:	00800e60 	cmpeqi	r2,zero,57
  800c10:	00800c48 	cmpgei	r2,zero,49
  800c14:	00800c54 	movui	r2,49
  800c18:	00800e60 	cmpeqi	r2,zero,57
  800c1c:	00800c54 	movui	r2,49
  800c20:	00800c48 	cmpgei	r2,zero,49
  800c24:	00800df0 	cmpltui	r2,zero,55
  800c28:	00800df0 	cmpltui	r2,zero,55
  800c2c:	00800df0 	cmpltui	r2,zero,55
  800c30:	00800ec4 	movi	r2,59
  800c34:	8c403fc4 	addi	r17,r17,255
  800c38:	98006f1e 	bne	r19,zero,800df8 <__mulsf3+0x2c4>
  800c3c:	94800094 	ori	r18,r18,2
  800c40:	00c00084 	movi	r3,2
  800c44:	003fe206 	br	800bd0 <__mulsf3+0x9c>
  800c48:	b82b883a 	mov	r21,r23
  800c4c:	9821883a 	mov	r16,r19
  800c50:	1829883a 	mov	r20,r3
  800c54:	a08000a0 	cmpeqi	r2,r20,2
  800c58:	1000261e 	bne	r2,zero,800cf4 <__mulsf3+0x1c0>
  800c5c:	a08000e0 	cmpeqi	r2,r20,3
  800c60:	1000ae1e 	bne	r2,zero,800f1c <__mulsf3+0x3e8>
  800c64:	a0800060 	cmpeqi	r2,r20,1
  800c68:	10004e26 	beq	r2,zero,800da4 <__mulsf3+0x270>
  800c6c:	0007883a 	mov	r3,zero
  800c70:	0009883a 	mov	r4,zero
  800c74:	1c003fcc 	andi	r16,r3,255
  800c78:	a8803fcc 	andi	r2,r21,255
  800c7c:	802095fa 	slli	r16,r16,23
  800c80:	100497fa 	slli	r2,r2,31
  800c84:	8120b03a 	or	r16,r16,r4
  800c88:	8084b03a 	or	r2,r16,r2
  800c8c:	dfc00a17 	ldw	ra,40(sp)
  800c90:	df000917 	ldw	fp,36(sp)
  800c94:	ddc00817 	ldw	r23,32(sp)
  800c98:	dd800717 	ldw	r22,28(sp)
  800c9c:	dd400617 	ldw	r21,24(sp)
  800ca0:	dd000517 	ldw	r20,20(sp)
  800ca4:	dcc00417 	ldw	r19,16(sp)
  800ca8:	dc800317 	ldw	r18,12(sp)
  800cac:	dc400217 	ldw	r17,8(sp)
  800cb0:	dc000117 	ldw	r16,4(sp)
  800cb4:	dec00b04 	addi	sp,sp,44
  800cb8:	f800283a 	ret
  800cbc:	80005d1e 	bne	r16,zero,800e34 <__mulsf3+0x300>
  800cc0:	04800104 	movi	r18,4
  800cc4:	0023883a 	mov	r17,zero
  800cc8:	05000044 	movi	r20,1
  800ccc:	003fb206 	br	800b98 <__mulsf3+0x64>
  800cd0:	8000541e 	bne	r16,zero,800e24 <__mulsf3+0x2f0>
  800cd4:	04800204 	movi	r18,8
  800cd8:	04403fc4 	movi	r17,255
  800cdc:	05000084 	movi	r20,2
  800ce0:	003fad06 	br	800b98 <__mulsf3+0x64>
  800ce4:	9800471e 	bne	r19,zero,800e04 <__mulsf3+0x2d0>
  800ce8:	94800054 	ori	r18,r18,1
  800cec:	00c00044 	movi	r3,1
  800cf0:	003fb706 	br	800bd0 <__mulsf3+0x9c>
  800cf4:	00ffffc4 	movi	r3,-1
  800cf8:	0009883a 	mov	r4,zero
  800cfc:	003fdd06 	br	800c74 <__mulsf3+0x140>
  800d00:	8028d43a 	srli	r20,r16,16
  800d04:	9cbfffcc 	andi	r18,r19,65535
  800d08:	843fffcc 	andi	r16,r16,65535
  800d0c:	900b883a 	mov	r5,r18
  800d10:	8009883a 	mov	r4,r16
  800d14:	08015040 	call	801504 <__mulsi3>
  800d18:	9826d43a 	srli	r19,r19,16
  800d1c:	900b883a 	mov	r5,r18
  800d20:	a009883a 	mov	r4,r20
  800d24:	1025883a 	mov	r18,r2
  800d28:	08015040 	call	801504 <__mulsi3>
  800d2c:	980b883a 	mov	r5,r19
  800d30:	a009883a 	mov	r4,r20
  800d34:	1029883a 	mov	r20,r2
  800d38:	08015040 	call	801504 <__mulsi3>
  800d3c:	9809883a 	mov	r4,r19
  800d40:	800b883a 	mov	r5,r16
  800d44:	1027883a 	mov	r19,r2
  800d48:	08015040 	call	801504 <__mulsi3>
  800d4c:	9006d43a 	srli	r3,r18,16
  800d50:	1505883a 	add	r2,r2,r20
  800d54:	1887883a 	add	r3,r3,r2
  800d58:	1d00022e 	bgeu	r3,r20,800d64 <__mulsf3+0x230>
  800d5c:	00800074 	movhi	r2,1
  800d60:	98a7883a 	add	r19,r19,r2
  800d64:	1808943a 	slli	r4,r3,16
  800d68:	1820d43a 	srli	r16,r3,16
  800d6c:	94bfffcc 	andi	r18,r18,65535
  800d70:	2489883a 	add	r4,r4,r18
  800d74:	200a91ba 	slli	r5,r4,6
  800d78:	84e1883a 	add	r16,r16,r19
  800d7c:	802091ba 	slli	r16,r16,6
  800d80:	2008d6ba 	srli	r4,r4,26
  800d84:	2804c03a 	cmpne	r2,r5,zero
  800d88:	80c2002c 	andhi	r3,r16,2048
  800d8c:	1108b03a 	or	r4,r2,r4
  800d90:	8120b03a 	or	r16,r16,r4
  800d94:	18005b26 	beq	r3,zero,800f04 <__mulsf3+0x3d0>
  800d98:	8004d07a 	srli	r2,r16,1
  800d9c:	8400004c 	andi	r16,r16,1
  800da0:	1420b03a 	or	r16,r2,r16
  800da4:	e0c01fc4 	addi	r3,fp,127
  800da8:	00c0320e 	bge	zero,r3,800e74 <__mulsf3+0x340>
  800dac:	808001cc 	andi	r2,r16,7
  800db0:	10000426 	beq	r2,zero,800dc4 <__mulsf3+0x290>
  800db4:	808003cc 	andi	r2,r16,15
  800db8:	10800120 	cmpeqi	r2,r2,4
  800dbc:	1000011e 	bne	r2,zero,800dc4 <__mulsf3+0x290>
  800dc0:	84000104 	addi	r16,r16,4
  800dc4:	8082002c 	andhi	r2,r16,2048
  800dc8:	10000426 	beq	r2,zero,800ddc <__mulsf3+0x2a8>
  800dcc:	00be0034 	movhi	r2,63488
  800dd0:	10bfffc4 	addi	r2,r2,-1
  800dd4:	80a0703a 	and	r16,r16,r2
  800dd8:	e0c02004 	addi	r3,fp,128
  800ddc:	18803fc8 	cmpgei	r2,r3,255
  800de0:	103fc41e 	bne	r2,zero,800cf4 <__mulsf3+0x1c0>
  800de4:	802091ba 	slli	r16,r16,6
  800de8:	8008d27a 	srli	r4,r16,9
  800dec:	003fa106 	br	800c74 <__mulsf3+0x140>
  800df0:	b02b883a 	mov	r21,r22
  800df4:	003f9706 	br	800c54 <__mulsf3+0x120>
  800df8:	948000d4 	ori	r18,r18,3
  800dfc:	00c000c4 	movi	r3,3
  800e00:	003f7306 	br	800bd0 <__mulsf3+0x9c>
  800e04:	9809883a 	mov	r4,r19
  800e08:	08014b00 	call	8014b0 <__clzsi2>
  800e0c:	10fffec4 	addi	r3,r2,-5
  800e10:	88a3c83a 	sub	r17,r17,r2
  800e14:	98e6983a 	sll	r19,r19,r3
  800e18:	8c7fe284 	addi	r17,r17,-118
  800e1c:	0007883a 	mov	r3,zero
  800e20:	003f6b06 	br	800bd0 <__mulsf3+0x9c>
  800e24:	04800304 	movi	r18,12
  800e28:	04403fc4 	movi	r17,255
  800e2c:	050000c4 	movi	r20,3
  800e30:	003f5906 	br	800b98 <__mulsf3+0x64>
  800e34:	8009883a 	mov	r4,r16
  800e38:	d9400015 	stw	r5,0(sp)
  800e3c:	08014b00 	call	8014b0 <__clzsi2>
  800e40:	10fffec4 	addi	r3,r2,-5
  800e44:	047fe284 	movi	r17,-118
  800e48:	80e0983a 	sll	r16,r16,r3
  800e4c:	d9400017 	ldw	r5,0(sp)
  800e50:	88a3c83a 	sub	r17,r17,r2
  800e54:	0025883a 	mov	r18,zero
  800e58:	0029883a 	mov	r20,zero
  800e5c:	003f4e06 	br	800b98 <__mulsf3+0x64>
  800e60:	01002034 	movhi	r4,128
  800e64:	002b883a 	mov	r21,zero
  800e68:	213fffc4 	addi	r4,r4,-1
  800e6c:	00ffffc4 	movi	r3,-1
  800e70:	003f8006 	br	800c74 <__mulsf3+0x140>
  800e74:	00800044 	movi	r2,1
  800e78:	10c7c83a 	sub	r3,r2,r3
  800e7c:	18800708 	cmpgei	r2,r3,28
  800e80:	103f7a1e 	bne	r2,zero,800c6c <__mulsf3+0x138>
  800e84:	e1002784 	addi	r4,fp,158
  800e88:	8108983a 	sll	r4,r16,r4
  800e8c:	80e0d83a 	srl	r16,r16,r3
  800e90:	2008c03a 	cmpne	r4,r4,zero
  800e94:	8120b03a 	or	r16,r16,r4
  800e98:	808001cc 	andi	r2,r16,7
  800e9c:	10000426 	beq	r2,zero,800eb0 <__mulsf3+0x37c>
  800ea0:	808003cc 	andi	r2,r16,15
  800ea4:	10800120 	cmpeqi	r2,r2,4
  800ea8:	1000011e 	bne	r2,zero,800eb0 <__mulsf3+0x37c>
  800eac:	84000104 	addi	r16,r16,4
  800eb0:	8081002c 	andhi	r2,r16,1024
  800eb4:	10001526 	beq	r2,zero,800f0c <__mulsf3+0x3d8>
  800eb8:	00c00044 	movi	r3,1
  800ebc:	0009883a 	mov	r4,zero
  800ec0:	003f6c06 	br	800c74 <__mulsf3+0x140>
  800ec4:	8080102c 	andhi	r2,r16,64
  800ec8:	10000826 	beq	r2,zero,800eec <__mulsf3+0x3b8>
  800ecc:	9880102c 	andhi	r2,r19,64
  800ed0:	1000061e 	bne	r2,zero,800eec <__mulsf3+0x3b8>
  800ed4:	00802034 	movhi	r2,128
  800ed8:	99001034 	orhi	r4,r19,64
  800edc:	10bfffc4 	addi	r2,r2,-1
  800ee0:	2088703a 	and	r4,r4,r2
  800ee4:	b82b883a 	mov	r21,r23
  800ee8:	003fe006 	br	800e6c <__mulsf3+0x338>
  800eec:	00802034 	movhi	r2,128
  800ef0:	81001034 	orhi	r4,r16,64
  800ef4:	10bfffc4 	addi	r2,r2,-1
  800ef8:	2088703a 	and	r4,r4,r2
  800efc:	b02b883a 	mov	r21,r22
  800f00:	003fda06 	br	800e6c <__mulsf3+0x338>
  800f04:	8839883a 	mov	fp,r17
  800f08:	003fa606 	br	800da4 <__mulsf3+0x270>
  800f0c:	802091ba 	slli	r16,r16,6
  800f10:	0007883a 	mov	r3,zero
  800f14:	8008d27a 	srli	r4,r16,9
  800f18:	003f5606 	br	800c74 <__mulsf3+0x140>
  800f1c:	00802034 	movhi	r2,128
  800f20:	81001034 	orhi	r4,r16,64
  800f24:	10bfffc4 	addi	r2,r2,-1
  800f28:	2088703a 	and	r4,r4,r2
  800f2c:	003fcf06 	br	800e6c <__mulsf3+0x338>

00800f30 <__subsf3>:
  800f30:	2818d5fa 	srli	r12,r5,23
  800f34:	2006d5fa 	srli	r3,r4,23
  800f38:	200ed7fa 	srli	r7,r4,31
  800f3c:	01802034 	movhi	r6,128
  800f40:	defffc04 	addi	sp,sp,-16
  800f44:	31bfffc4 	addi	r6,r6,-1
  800f48:	63003fcc 	andi	r12,r12,255
  800f4c:	3108703a 	and	r4,r6,r4
  800f50:	3150703a 	and	r8,r6,r5
  800f54:	1a403fcc 	andi	r9,r3,255
  800f58:	dc800215 	stw	r18,8(sp)
  800f5c:	dc400115 	stw	r17,4(sp)
  800f60:	dfc00315 	stw	ra,12(sp)
  800f64:	dc000015 	stw	r16,0(sp)
  800f68:	63403fd8 	cmpnei	r13,r12,255
  800f6c:	3823883a 	mov	r17,r7
  800f70:	201490fa 	slli	r10,r4,3
  800f74:	280ad7fa 	srli	r5,r5,31
  800f78:	401690fa 	slli	r11,r8,3
  800f7c:	201d883a 	mov	r14,r4
  800f80:	4825883a 	mov	r18,r9
  800f84:	39c03fcc 	andi	r7,r7,255
  800f88:	4b0dc83a 	sub	r6,r9,r12
  800f8c:	68004f26 	beq	r13,zero,8010cc <__subsf3+0x19c>
  800f90:	2b40005c 	xori	r13,r5,1
  800f94:	3b405826 	beq	r7,r13,8010f8 <__subsf3+0x1c8>
  800f98:	01803b0e 	bge	zero,r6,801088 <__subsf3+0x158>
  800f9c:	60004f1e 	bne	r12,zero,8010dc <__subsf3+0x1ac>
  800fa0:	58009226 	beq	r11,zero,8011ec <__subsf3+0x2bc>
  800fa4:	31bfffc4 	addi	r6,r6,-1
  800fa8:	3000e326 	beq	r6,zero,801338 <__subsf3+0x408>
  800fac:	4a403fe0 	cmpeqi	r9,r9,255
  800fb0:	48003f1e 	bne	r9,zero,8010b0 <__subsf3+0x180>
  800fb4:	30800708 	cmpgei	r2,r6,28
  800fb8:	10004d1e 	bne	r2,zero,8010f0 <__subsf3+0x1c0>
  800fbc:	00c00804 	movi	r3,32
  800fc0:	1987c83a 	sub	r3,r3,r6
  800fc4:	58c6983a 	sll	r3,r11,r3
  800fc8:	5984d83a 	srl	r2,r11,r6
  800fcc:	180cc03a 	cmpne	r6,r3,zero
  800fd0:	1184b03a 	or	r2,r2,r6
  800fd4:	5085c83a 	sub	r2,r10,r2
  800fd8:	10c1002c 	andhi	r3,r2,1024
  800fdc:	18008026 	beq	r3,zero,8011e0 <__subsf3+0x2b0>
  800fe0:	04010034 	movhi	r16,1024
  800fe4:	843fffc4 	addi	r16,r16,-1
  800fe8:	1420703a 	and	r16,r2,r16
  800fec:	8009883a 	mov	r4,r16
  800ff0:	08014b00 	call	8014b0 <__clzsi2>
  800ff4:	10fffec4 	addi	r3,r2,-5
  800ff8:	80c4983a 	sll	r2,r16,r3
  800ffc:	1c809616 	blt	r3,r18,801258 <__subsf3+0x328>
  801000:	1c87c83a 	sub	r3,r3,r18
  801004:	1c000044 	addi	r16,r3,1
  801008:	01000804 	movi	r4,32
  80100c:	2409c83a 	sub	r4,r4,r16
  801010:	1108983a 	sll	r4,r2,r4
  801014:	1404d83a 	srl	r2,r2,r16
  801018:	0025883a 	mov	r18,zero
  80101c:	2008c03a 	cmpne	r4,r4,zero
  801020:	1104b03a 	or	r2,r2,r4
  801024:	10c001cc 	andi	r3,r2,7
  801028:	18000426 	beq	r3,zero,80103c <__subsf3+0x10c>
  80102c:	10c003cc 	andi	r3,r2,15
  801030:	18c00120 	cmpeqi	r3,r3,4
  801034:	1800011e 	bne	r3,zero,80103c <__subsf3+0x10c>
  801038:	10800104 	addi	r2,r2,4
  80103c:	10c1002c 	andhi	r3,r2,1024
  801040:	18006926 	beq	r3,zero,8011e8 <__subsf3+0x2b8>
  801044:	90c00044 	addi	r3,r18,1
  801048:	19003fe0 	cmpeqi	r4,r3,255
  80104c:	20006e1e 	bne	r4,zero,801208 <__subsf3+0x2d8>
  801050:	100491ba 	slli	r2,r2,6
  801054:	1008d27a 	srli	r4,r2,9
  801058:	18803fcc 	andi	r2,r3,255
  80105c:	100495fa 	slli	r2,r2,23
  801060:	8c403fcc 	andi	r17,r17,255
  801064:	882297fa 	slli	r17,r17,31
  801068:	1104b03a 	or	r2,r2,r4
  80106c:	1444b03a 	or	r2,r2,r17
  801070:	dfc00317 	ldw	ra,12(sp)
  801074:	dc800217 	ldw	r18,8(sp)
  801078:	dc400117 	ldw	r17,4(sp)
  80107c:	dc000017 	ldw	r16,0(sp)
  801080:	dec00404 	addi	sp,sp,16
  801084:	f800283a 	ret
  801088:	30003526 	beq	r6,zero,801160 <__subsf3+0x230>
  80108c:	6247c83a 	sub	r3,r12,r9
  801090:	6823883a 	mov	r17,r13
  801094:	48007d1e 	bne	r9,zero,80128c <__subsf3+0x35c>
  801098:	50009926 	beq	r10,zero,801300 <__subsf3+0x3d0>
  80109c:	18ffffc4 	addi	r3,r3,-1
  8010a0:	1800b226 	beq	r3,zero,80136c <__subsf3+0x43c>
  8010a4:	60803fe0 	cmpeqi	r2,r12,255
  8010a8:	10007b26 	beq	r2,zero,801298 <__subsf3+0x368>
  8010ac:	401d883a 	mov	r14,r8
  8010b0:	70005526 	beq	r14,zero,801208 <__subsf3+0x2d8>
  8010b4:	00802034 	movhi	r2,128
  8010b8:	71001034 	orhi	r4,r14,64
  8010bc:	10bfffc4 	addi	r2,r2,-1
  8010c0:	2088703a 	and	r4,r4,r2
  8010c4:	00ffffc4 	movi	r3,-1
  8010c8:	003fe306 	br	801058 <__subsf3+0x128>
  8010cc:	583fb026 	beq	r11,zero,800f90 <__subsf3+0x60>
  8010d0:	2b403fcc 	andi	r13,r5,255
  8010d4:	39404f26 	beq	r7,r5,801214 <__subsf3+0x2e4>
  8010d8:	01bfeb0e 	bge	zero,r6,801088 <__subsf3+0x158>
  8010dc:	4a403fe0 	cmpeqi	r9,r9,255
  8010e0:	483ff31e 	bne	r9,zero,8010b0 <__subsf3+0x180>
  8010e4:	30800708 	cmpgei	r2,r6,28
  8010e8:	5ac10034 	orhi	r11,r11,1024
  8010ec:	103fb326 	beq	r2,zero,800fbc <__subsf3+0x8c>
  8010f0:	00800044 	movi	r2,1
  8010f4:	003fb706 	br	800fd4 <__subsf3+0xa4>
  8010f8:	0180460e 	bge	zero,r6,801214 <__subsf3+0x2e4>
  8010fc:	60002526 	beq	r12,zero,801194 <__subsf3+0x264>
  801100:	4a403fe0 	cmpeqi	r9,r9,255
  801104:	483fea1e 	bne	r9,zero,8010b0 <__subsf3+0x180>
  801108:	5ac10034 	orhi	r11,r11,1024
  80110c:	30800708 	cmpgei	r2,r6,28
  801110:	1000671e 	bne	r2,zero,8012b0 <__subsf3+0x380>
  801114:	00c00804 	movi	r3,32
  801118:	1987c83a 	sub	r3,r3,r6
  80111c:	58c6983a 	sll	r3,r11,r3
  801120:	5984d83a 	srl	r2,r11,r6
  801124:	180cc03a 	cmpne	r6,r3,zero
  801128:	1184b03a 	or	r2,r2,r6
  80112c:	1285883a 	add	r2,r2,r10
  801130:	10c1002c 	andhi	r3,r2,1024
  801134:	18002a26 	beq	r3,zero,8011e0 <__subsf3+0x2b0>
  801138:	94800044 	addi	r18,r18,1
  80113c:	90c03fe0 	cmpeqi	r3,r18,255
  801140:	1800311e 	bne	r3,zero,801208 <__subsf3+0x2d8>
  801144:	1008d07a 	srli	r4,r2,1
  801148:	00df8034 	movhi	r3,32256
  80114c:	18ffffc4 	addi	r3,r3,-1
  801150:	1080004c 	andi	r2,r2,1
  801154:	20c8703a 	and	r4,r4,r3
  801158:	2084b03a 	or	r2,r4,r2
  80115c:	003fb106 	br	801024 <__subsf3+0xf4>
  801160:	48800044 	addi	r2,r9,1
  801164:	10803f8c 	andi	r2,r2,254
  801168:	1000401e 	bne	r2,zero,80126c <__subsf3+0x33c>
  80116c:	48006a1e 	bne	r9,zero,801318 <__subsf3+0x3e8>
  801170:	50008126 	beq	r10,zero,801378 <__subsf3+0x448>
  801174:	583fb826 	beq	r11,zero,801058 <__subsf3+0x128>
  801178:	52c5c83a 	sub	r2,r10,r11
  80117c:	1101002c 	andhi	r4,r2,1024
  801180:	20008126 	beq	r4,zero,801388 <__subsf3+0x458>
  801184:	5a85c83a 	sub	r2,r11,r10
  801188:	6823883a 	mov	r17,r13
  80118c:	0025883a 	mov	r18,zero
  801190:	003fa406 	br	801024 <__subsf3+0xf4>
  801194:	58001526 	beq	r11,zero,8011ec <__subsf3+0x2bc>
  801198:	31bfffc4 	addi	r6,r6,-1
  80119c:	30006426 	beq	r6,zero,801330 <__subsf3+0x400>
  8011a0:	4a403fe0 	cmpeqi	r9,r9,255
  8011a4:	483fd926 	beq	r9,zero,80110c <__subsf3+0x1dc>
  8011a8:	003fc106 	br	8010b0 <__subsf3+0x180>
  8011ac:	4c800044 	addi	r18,r9,1
  8011b0:	90803f8c 	andi	r2,r18,254
  8011b4:	10004d1e 	bne	r2,zero,8012ec <__subsf3+0x3bc>
  8011b8:	4800611e 	bne	r9,zero,801340 <__subsf3+0x410>
  8011bc:	50007626 	beq	r10,zero,801398 <__subsf3+0x468>
  8011c0:	583fa526 	beq	r11,zero,801058 <__subsf3+0x128>
  8011c4:	52c5883a 	add	r2,r10,r11
  8011c8:	10c1002c 	andhi	r3,r2,1024
  8011cc:	18007426 	beq	r3,zero,8013a0 <__subsf3+0x470>
  8011d0:	00ff0034 	movhi	r3,64512
  8011d4:	18ffffc4 	addi	r3,r3,-1
  8011d8:	10c4703a 	and	r2,r2,r3
  8011dc:	04800044 	movi	r18,1
  8011e0:	10c001cc 	andi	r3,r2,7
  8011e4:	183f911e 	bne	r3,zero,80102c <__subsf3+0xfc>
  8011e8:	101cd0fa 	srli	r14,r2,3
  8011ec:	90803fe0 	cmpeqi	r2,r18,255
  8011f0:	103faf1e 	bne	r2,zero,8010b0 <__subsf3+0x180>
  8011f4:	00802034 	movhi	r2,128
  8011f8:	10bfffc4 	addi	r2,r2,-1
  8011fc:	7088703a 	and	r4,r14,r2
  801200:	9007883a 	mov	r3,r18
  801204:	003f9406 	br	801058 <__subsf3+0x128>
  801208:	00ffffc4 	movi	r3,-1
  80120c:	0009883a 	mov	r4,zero
  801210:	003f9106 	br	801058 <__subsf3+0x128>
  801214:	303fe526 	beq	r6,zero,8011ac <__subsf3+0x27c>
  801218:	6247c83a 	sub	r3,r12,r9
  80121c:	48002d26 	beq	r9,zero,8012d4 <__subsf3+0x3a4>
  801220:	60803fe0 	cmpeqi	r2,r12,255
  801224:	103fa11e 	bne	r2,zero,8010ac <__subsf3+0x17c>
  801228:	52810034 	orhi	r10,r10,1024
  80122c:	18800708 	cmpgei	r2,r3,28
  801230:	10004c1e 	bne	r2,zero,801364 <__subsf3+0x434>
  801234:	00800804 	movi	r2,32
  801238:	10c5c83a 	sub	r2,r2,r3
  80123c:	5084983a 	sll	r2,r10,r2
  801240:	50c6d83a 	srl	r3,r10,r3
  801244:	1004c03a 	cmpne	r2,r2,zero
  801248:	1888b03a 	or	r4,r3,r2
  80124c:	22c5883a 	add	r2,r4,r11
  801250:	6025883a 	mov	r18,r12
  801254:	003fb606 	br	801130 <__subsf3+0x200>
  801258:	013f0034 	movhi	r4,64512
  80125c:	213fffc4 	addi	r4,r4,-1
  801260:	90e5c83a 	sub	r18,r18,r3
  801264:	1104703a 	and	r2,r2,r4
  801268:	003f6e06 	br	801024 <__subsf3+0xf4>
  80126c:	52e1c83a 	sub	r16,r10,r11
  801270:	8081002c 	andhi	r2,r16,1024
  801274:	1000251e 	bne	r2,zero,80130c <__subsf3+0x3dc>
  801278:	803f5c1e 	bne	r16,zero,800fec <__subsf3+0xbc>
  80127c:	0023883a 	mov	r17,zero
  801280:	0007883a 	mov	r3,zero
  801284:	0009883a 	mov	r4,zero
  801288:	003f7306 	br	801058 <__subsf3+0x128>
  80128c:	60803fe0 	cmpeqi	r2,r12,255
  801290:	103f861e 	bne	r2,zero,8010ac <__subsf3+0x17c>
  801294:	52810034 	orhi	r10,r10,1024
  801298:	18800708 	cmpgei	r2,r3,28
  80129c:	10000626 	beq	r2,zero,8012b8 <__subsf3+0x388>
  8012a0:	01000044 	movi	r4,1
  8012a4:	5905c83a 	sub	r2,r11,r4
  8012a8:	6025883a 	mov	r18,r12
  8012ac:	003f4a06 	br	800fd8 <__subsf3+0xa8>
  8012b0:	00800044 	movi	r2,1
  8012b4:	003f9d06 	br	80112c <__subsf3+0x1fc>
  8012b8:	00800804 	movi	r2,32
  8012bc:	10c5c83a 	sub	r2,r2,r3
  8012c0:	5084983a 	sll	r2,r10,r2
  8012c4:	50c6d83a 	srl	r3,r10,r3
  8012c8:	1004c03a 	cmpne	r2,r2,zero
  8012cc:	1888b03a 	or	r4,r3,r2
  8012d0:	003ff406 	br	8012a4 <__subsf3+0x374>
  8012d4:	50000a26 	beq	r10,zero,801300 <__subsf3+0x3d0>
  8012d8:	18ffffc4 	addi	r3,r3,-1
  8012dc:	18003226 	beq	r3,zero,8013a8 <__subsf3+0x478>
  8012e0:	60803fe0 	cmpeqi	r2,r12,255
  8012e4:	103fd126 	beq	r2,zero,80122c <__subsf3+0x2fc>
  8012e8:	003f7006 	br	8010ac <__subsf3+0x17c>
  8012ec:	90803fe0 	cmpeqi	r2,r18,255
  8012f0:	103fc51e 	bne	r2,zero,801208 <__subsf3+0x2d8>
  8012f4:	52c5883a 	add	r2,r10,r11
  8012f8:	1004d07a 	srli	r2,r2,1
  8012fc:	003fb806 	br	8011e0 <__subsf3+0x2b0>
  801300:	401d883a 	mov	r14,r8
  801304:	6025883a 	mov	r18,r12
  801308:	003fb806 	br	8011ec <__subsf3+0x2bc>
  80130c:	5aa1c83a 	sub	r16,r11,r10
  801310:	6823883a 	mov	r17,r13
  801314:	003f3506 	br	800fec <__subsf3+0xbc>
  801318:	50000a1e 	bne	r10,zero,801344 <__subsf3+0x414>
  80131c:	58000e1e 	bne	r11,zero,801358 <__subsf3+0x428>
  801320:	01002034 	movhi	r4,128
  801324:	0023883a 	mov	r17,zero
  801328:	213fffc4 	addi	r4,r4,-1
  80132c:	003f6506 	br	8010c4 <__subsf3+0x194>
  801330:	52c5883a 	add	r2,r10,r11
  801334:	003f7e06 	br	801130 <__subsf3+0x200>
  801338:	52c5c83a 	sub	r2,r10,r11
  80133c:	003f2606 	br	800fd8 <__subsf3+0xa8>
  801340:	503f5a26 	beq	r10,zero,8010ac <__subsf3+0x17c>
  801344:	583f5a26 	beq	r11,zero,8010b0 <__subsf3+0x180>
  801348:	2080102c 	andhi	r2,r4,64
  80134c:	103f5826 	beq	r2,zero,8010b0 <__subsf3+0x180>
  801350:	4080102c 	andhi	r2,r8,64
  801354:	103f561e 	bne	r2,zero,8010b0 <__subsf3+0x180>
  801358:	6823883a 	mov	r17,r13
  80135c:	401d883a 	mov	r14,r8
  801360:	003f5306 	br	8010b0 <__subsf3+0x180>
  801364:	01000044 	movi	r4,1
  801368:	003fb806 	br	80124c <__subsf3+0x31c>
  80136c:	5a85c83a 	sub	r2,r11,r10
  801370:	6025883a 	mov	r18,r12
  801374:	003f1806 	br	800fd8 <__subsf3+0xa8>
  801378:	58000426 	beq	r11,zero,80138c <__subsf3+0x45c>
  80137c:	6823883a 	mov	r17,r13
  801380:	4009883a 	mov	r4,r8
  801384:	003f3406 	br	801058 <__subsf3+0x128>
  801388:	1000051e 	bne	r2,zero,8013a0 <__subsf3+0x470>
  80138c:	0023883a 	mov	r17,zero
  801390:	0009883a 	mov	r4,zero
  801394:	003f3006 	br	801058 <__subsf3+0x128>
  801398:	4009883a 	mov	r4,r8
  80139c:	003f2e06 	br	801058 <__subsf3+0x128>
  8013a0:	0025883a 	mov	r18,zero
  8013a4:	003f8e06 	br	8011e0 <__subsf3+0x2b0>
  8013a8:	52c5883a 	add	r2,r10,r11
  8013ac:	6025883a 	mov	r18,r12
  8013b0:	003f5f06 	br	801130 <__subsf3+0x200>

008013b4 <__extendsfdf2>:
  8013b4:	200ad5fa 	srli	r5,r4,23
  8013b8:	defffd04 	addi	sp,sp,-12
  8013bc:	dc000015 	stw	r16,0(sp)
  8013c0:	29403fcc 	andi	r5,r5,255
  8013c4:	04002034 	movhi	r16,128
  8013c8:	28800044 	addi	r2,r5,1
  8013cc:	dc400115 	stw	r17,4(sp)
  8013d0:	843fffc4 	addi	r16,r16,-1
  8013d4:	dfc00215 	stw	ra,8(sp)
  8013d8:	10803f8c 	andi	r2,r2,254
  8013dc:	2022d7fa 	srli	r17,r4,31
  8013e0:	8120703a 	and	r16,r16,r4
  8013e4:	10000d26 	beq	r2,zero,80141c <__extendsfdf2+0x68>
  8013e8:	8008d0fa 	srli	r4,r16,3
  8013ec:	8020977a 	slli	r16,r16,29
  8013f0:	28c0e004 	addi	r3,r5,896
  8013f4:	180a953a 	slli	r5,r3,20
  8013f8:	880697fa 	slli	r3,r17,31
  8013fc:	8005883a 	mov	r2,r16
  801400:	290ab03a 	or	r5,r5,r4
  801404:	28c6b03a 	or	r3,r5,r3
  801408:	dfc00217 	ldw	ra,8(sp)
  80140c:	dc400117 	ldw	r17,4(sp)
  801410:	dc000017 	ldw	r16,0(sp)
  801414:	dec00304 	addi	sp,sp,12
  801418:	f800283a 	ret
  80141c:	2800111e 	bne	r5,zero,801464 <__extendsfdf2+0xb0>
  801420:	80001926 	beq	r16,zero,801488 <__extendsfdf2+0xd4>
  801424:	8009883a 	mov	r4,r16
  801428:	08014b00 	call	8014b0 <__clzsi2>
  80142c:	10c002c8 	cmpgei	r3,r2,11
  801430:	18001b1e 	bne	r3,zero,8014a0 <__extendsfdf2+0xec>
  801434:	010002c4 	movi	r4,11
  801438:	2089c83a 	sub	r4,r4,r2
  80143c:	10c00544 	addi	r3,r2,21
  801440:	810ad83a 	srl	r5,r16,r4
  801444:	80e0983a 	sll	r16,r16,r3
  801448:	00c0e244 	movi	r3,905
  80144c:	01000434 	movhi	r4,16
  801450:	213fffc4 	addi	r4,r4,-1
  801454:	1885c83a 	sub	r2,r3,r2
  801458:	2908703a 	and	r4,r5,r4
  80145c:	10c1ffcc 	andi	r3,r2,2047
  801460:	003fe406 	br	8013f4 <__extendsfdf2+0x40>
  801464:	80000b26 	beq	r16,zero,801494 <__extendsfdf2+0xe0>
  801468:	800ad0fa 	srli	r5,r16,3
  80146c:	00800434 	movhi	r2,16
  801470:	10bfffc4 	addi	r2,r2,-1
  801474:	29000234 	orhi	r4,r5,8
  801478:	8020977a 	slli	r16,r16,29
  80147c:	2088703a 	and	r4,r4,r2
  801480:	00c1ffc4 	movi	r3,2047
  801484:	003fdb06 	br	8013f4 <__extendsfdf2+0x40>
  801488:	0007883a 	mov	r3,zero
  80148c:	0009883a 	mov	r4,zero
  801490:	003fd806 	br	8013f4 <__extendsfdf2+0x40>
  801494:	00c1ffc4 	movi	r3,2047
  801498:	0009883a 	mov	r4,zero
  80149c:	003fd506 	br	8013f4 <__extendsfdf2+0x40>
  8014a0:	113ffd44 	addi	r4,r2,-11
  8014a4:	810a983a 	sll	r5,r16,r4
  8014a8:	0021883a 	mov	r16,zero
  8014ac:	003fe606 	br	801448 <__extendsfdf2+0x94>

008014b0 <__clzsi2>:
  8014b0:	00bfffd4 	movui	r2,65535
  8014b4:	11000436 	bltu	r2,r4,8014c8 <__clzsi2+0x18>
  8014b8:	20804030 	cmpltui	r2,r4,256
  8014bc:	10000e26 	beq	r2,zero,8014f8 <__clzsi2+0x48>
  8014c0:	01400804 	movi	r5,32
  8014c4:	00000406 	br	8014d8 <__clzsi2+0x28>
  8014c8:	00804034 	movhi	r2,256
  8014cc:	20800736 	bltu	r4,r2,8014ec <__clzsi2+0x3c>
  8014d0:	2008d63a 	srli	r4,r4,24
  8014d4:	01400204 	movi	r5,8
  8014d8:	00c02074 	movhi	r3,129
  8014dc:	20c7883a 	add	r3,r4,r3
  8014e0:	18833503 	ldbu	r2,3284(r3)
  8014e4:	2885c83a 	sub	r2,r5,r2
  8014e8:	f800283a 	ret
  8014ec:	2008d43a 	srli	r4,r4,16
  8014f0:	01400404 	movi	r5,16
  8014f4:	003ff806 	br	8014d8 <__clzsi2+0x28>
  8014f8:	2008d23a 	srli	r4,r4,8
  8014fc:	01400604 	movi	r5,24
  801500:	003ff506 	br	8014d8 <__clzsi2+0x28>

00801504 <__mulsi3>:
  801504:	0005883a 	mov	r2,zero
  801508:	20000726 	beq	r4,zero,801528 <__mulsi3+0x24>
  80150c:	20c0004c 	andi	r3,r4,1
  801510:	2008d07a 	srli	r4,r4,1
  801514:	18000126 	beq	r3,zero,80151c <__mulsi3+0x18>
  801518:	1145883a 	add	r2,r2,r5
  80151c:	294b883a 	add	r5,r5,r5
  801520:	203ffa1e 	bne	r4,zero,80150c <__mulsi3+0x8>
  801524:	f800283a 	ret
  801528:	f800283a 	ret

0080152c <_printf_r>:
  80152c:	defffd04 	addi	sp,sp,-12
  801530:	2805883a 	mov	r2,r5
  801534:	dfc00015 	stw	ra,0(sp)
  801538:	d9800115 	stw	r6,4(sp)
  80153c:	d9c00215 	stw	r7,8(sp)
  801540:	21400217 	ldw	r5,8(r4)
  801544:	d9c00104 	addi	r7,sp,4
  801548:	100d883a 	mov	r6,r2
  80154c:	08017080 	call	801708 <___vfprintf_internal_r>
  801550:	dfc00017 	ldw	ra,0(sp)
  801554:	dec00304 	addi	sp,sp,12
  801558:	f800283a 	ret

0080155c <printf>:
  80155c:	defffc04 	addi	sp,sp,-16
  801560:	dfc00015 	stw	ra,0(sp)
  801564:	d9400115 	stw	r5,4(sp)
  801568:	d9800215 	stw	r6,8(sp)
  80156c:	d9c00315 	stw	r7,12(sp)
  801570:	00802074 	movhi	r2,129
  801574:	108bb617 	ldw	r2,11992(r2)
  801578:	200b883a 	mov	r5,r4
  80157c:	d9800104 	addi	r6,sp,4
  801580:	11000217 	ldw	r4,8(r2)
  801584:	08037f40 	call	8037f4 <__vfprintf_internal>
  801588:	dfc00017 	ldw	ra,0(sp)
  80158c:	dec00404 	addi	sp,sp,16
  801590:	f800283a 	ret

00801594 <_puts_r>:
  801594:	defff504 	addi	sp,sp,-44
  801598:	dc000815 	stw	r16,32(sp)
  80159c:	2021883a 	mov	r16,r4
  8015a0:	2809883a 	mov	r4,r5
  8015a4:	dc400915 	stw	r17,36(sp)
  8015a8:	dfc00a15 	stw	ra,40(sp)
  8015ac:	2823883a 	mov	r17,r5
  8015b0:	08016700 	call	801670 <strlen>
  8015b4:	11000044 	addi	r4,r2,1
  8015b8:	d8800515 	stw	r2,20(sp)
  8015bc:	00800044 	movi	r2,1
  8015c0:	00c02074 	movhi	r3,129
  8015c4:	d8800715 	stw	r2,28(sp)
  8015c8:	d8800404 	addi	r2,sp,16
  8015cc:	18c32b04 	addi	r3,r3,3244
  8015d0:	d8800115 	stw	r2,4(sp)
  8015d4:	00800084 	movi	r2,2
  8015d8:	dc400415 	stw	r17,16(sp)
  8015dc:	d8c00615 	stw	r3,24(sp)
  8015e0:	d9000315 	stw	r4,12(sp)
  8015e4:	d8800215 	stw	r2,8(sp)
  8015e8:	81400217 	ldw	r5,8(r16)
  8015ec:	80000226 	beq	r16,zero,8015f8 <_puts_r+0x64>
  8015f0:	80800e17 	ldw	r2,56(r16)
  8015f4:	10001326 	beq	r2,zero,801644 <_puts_r+0xb0>
  8015f8:	2880030b 	ldhu	r2,12(r5)
  8015fc:	10c8000c 	andi	r3,r2,8192
  801600:	1800061e 	bne	r3,zero,80161c <_puts_r+0x88>
  801604:	28c01917 	ldw	r3,100(r5)
  801608:	0137ffc4 	movi	r4,-8193
  80160c:	10880014 	ori	r2,r2,8192
  801610:	1906703a 	and	r3,r3,r4
  801614:	2880030d 	sth	r2,12(r5)
  801618:	28c01915 	stw	r3,100(r5)
  80161c:	d9800104 	addi	r6,sp,4
  801620:	8009883a 	mov	r4,r16
  801624:	0805db80 	call	805db8 <__sfvwrite_r>
  801628:	10000b1e 	bne	r2,zero,801658 <_puts_r+0xc4>
  80162c:	00800284 	movi	r2,10
  801630:	dfc00a17 	ldw	ra,40(sp)
  801634:	dc400917 	ldw	r17,36(sp)
  801638:	dc000817 	ldw	r16,32(sp)
  80163c:	dec00b04 	addi	sp,sp,44
  801640:	f800283a 	ret
  801644:	8009883a 	mov	r4,r16
  801648:	d9400015 	stw	r5,0(sp)
  80164c:	08059580 	call	805958 <__sinit>
  801650:	d9400017 	ldw	r5,0(sp)
  801654:	003fe806 	br	8015f8 <_puts_r+0x64>
  801658:	00bfffc4 	movi	r2,-1
  80165c:	003ff406 	br	801630 <_puts_r+0x9c>

00801660 <puts>:
  801660:	00802074 	movhi	r2,129
  801664:	200b883a 	mov	r5,r4
  801668:	110bb617 	ldw	r4,11992(r2)
  80166c:	08015941 	jmpi	801594 <_puts_r>

00801670 <strlen>:
  801670:	208000cc 	andi	r2,r4,3
  801674:	10000926 	beq	r2,zero,80169c <strlen+0x2c>
  801678:	2005883a 	mov	r2,r4
  80167c:	00000306 	br	80168c <strlen+0x1c>
  801680:	10800044 	addi	r2,r2,1
  801684:	10c000cc 	andi	r3,r2,3
  801688:	18000526 	beq	r3,zero,8016a0 <strlen+0x30>
  80168c:	10c00007 	ldb	r3,0(r2)
  801690:	183ffb1e 	bne	r3,zero,801680 <strlen+0x10>
  801694:	1105c83a 	sub	r2,r2,r4
  801698:	f800283a 	ret
  80169c:	2005883a 	mov	r2,r4
  8016a0:	11400017 	ldw	r5,0(r2)
  8016a4:	01ffbff4 	movhi	r7,65279
  8016a8:	39ffbfc4 	addi	r7,r7,-257
  8016ac:	29c7883a 	add	r3,r5,r7
  8016b0:	01a02074 	movhi	r6,32897
  8016b4:	014a303a 	nor	r5,zero,r5
  8016b8:	1946703a 	and	r3,r3,r5
  8016bc:	31a02004 	addi	r6,r6,-32640
  8016c0:	1986703a 	and	r3,r3,r6
  8016c4:	1800071e 	bne	r3,zero,8016e4 <strlen+0x74>
  8016c8:	11400117 	ldw	r5,4(r2)
  8016cc:	10800104 	addi	r2,r2,4
  8016d0:	29c7883a 	add	r3,r5,r7
  8016d4:	014a303a 	nor	r5,zero,r5
  8016d8:	1946703a 	and	r3,r3,r5
  8016dc:	1986703a 	and	r3,r3,r6
  8016e0:	183ff926 	beq	r3,zero,8016c8 <strlen+0x58>
  8016e4:	10c00007 	ldb	r3,0(r2)
  8016e8:	183fea26 	beq	r3,zero,801694 <strlen+0x24>
  8016ec:	10c00047 	ldb	r3,1(r2)
  8016f0:	10800044 	addi	r2,r2,1
  8016f4:	183fe726 	beq	r3,zero,801694 <strlen+0x24>
  8016f8:	10c00047 	ldb	r3,1(r2)
  8016fc:	10800044 	addi	r2,r2,1
  801700:	183ffa1e 	bne	r3,zero,8016ec <strlen+0x7c>
  801704:	003fe306 	br	801694 <strlen+0x24>

00801708 <___vfprintf_internal_r>:
  801708:	deffbf04 	addi	sp,sp,-260
  80170c:	dfc04015 	stw	ra,256(sp)
  801710:	dd803d15 	stw	r22,244(sp)
  801714:	dcc03a15 	stw	r19,232(sp)
  801718:	dc803915 	stw	r18,228(sp)
  80171c:	2027883a 	mov	r19,r4
  801720:	2825883a 	mov	r18,r5
  801724:	302d883a 	mov	r22,r6
  801728:	d9c00615 	stw	r7,24(sp)
  80172c:	df003f15 	stw	fp,252(sp)
  801730:	ddc03e15 	stw	r23,248(sp)
  801734:	dd403c15 	stw	r21,240(sp)
  801738:	dd003b15 	stw	r20,236(sp)
  80173c:	dc403815 	stw	r17,224(sp)
  801740:	dc003715 	stw	r16,220(sp)
  801744:	08063cc0 	call	8063cc <_localeconv_r>
  801748:	10800017 	ldw	r2,0(r2)
  80174c:	1009883a 	mov	r4,r2
  801750:	d8800d15 	stw	r2,52(sp)
  801754:	08016700 	call	801670 <strlen>
  801758:	d8800b15 	stw	r2,44(sp)
  80175c:	98000226 	beq	r19,zero,801768 <___vfprintf_internal_r+0x60>
  801760:	98800e17 	ldw	r2,56(r19)
  801764:	1001d726 	beq	r2,zero,801ec4 <___vfprintf_internal_r+0x7bc>
  801768:	9080030b 	ldhu	r2,12(r18)
  80176c:	10c8000c 	andi	r3,r2,8192
  801770:	1800061e 	bne	r3,zero,80178c <___vfprintf_internal_r+0x84>
  801774:	90c01917 	ldw	r3,100(r18)
  801778:	0137ffc4 	movi	r4,-8193
  80177c:	10880014 	ori	r2,r2,8192
  801780:	1906703a 	and	r3,r3,r4
  801784:	9080030d 	sth	r2,12(r18)
  801788:	90c01915 	stw	r3,100(r18)
  80178c:	10c0020c 	andi	r3,r2,8
  801790:	1800fc26 	beq	r3,zero,801b84 <___vfprintf_internal_r+0x47c>
  801794:	90c00417 	ldw	r3,16(r18)
  801798:	1800fa26 	beq	r3,zero,801b84 <___vfprintf_internal_r+0x47c>
  80179c:	1080068c 	andi	r2,r2,26
  8017a0:	10800298 	cmpnei	r2,r2,10
  8017a4:	1000ff26 	beq	r2,zero,801ba4 <___vfprintf_internal_r+0x49c>
  8017a8:	d8802704 	addi	r2,sp,156
  8017ac:	b02f883a 	mov	r23,r22
  8017b0:	d8801a15 	stw	r2,104(sp)
  8017b4:	d8001c15 	stw	zero,112(sp)
  8017b8:	d8001b15 	stw	zero,108(sp)
  8017bc:	d8000815 	stw	zero,32(sp)
  8017c0:	d8000915 	stw	zero,36(sp)
  8017c4:	d8000a15 	stw	zero,40(sp)
  8017c8:	d8000c15 	stw	zero,48(sp)
  8017cc:	d8001015 	stw	zero,64(sp)
  8017d0:	d8000515 	stw	zero,20(sp)
  8017d4:	102d883a 	mov	r22,r2
  8017d8:	b8800007 	ldb	r2,0(r23)
  8017dc:	1000d726 	beq	r2,zero,801b3c <___vfprintf_internal_r+0x434>
  8017e0:	b821883a 	mov	r16,r23
  8017e4:	00000306 	br	8017f4 <___vfprintf_internal_r+0xec>
  8017e8:	80800047 	ldb	r2,1(r16)
  8017ec:	84000044 	addi	r16,r16,1
  8017f0:	10011926 	beq	r2,zero,801c58 <___vfprintf_internal_r+0x550>
  8017f4:	10800958 	cmpnei	r2,r2,37
  8017f8:	103ffb1e 	bne	r2,zero,8017e8 <___vfprintf_internal_r+0xe0>
  8017fc:	85e3c83a 	sub	r17,r16,r23
  801800:	85c1171e 	bne	r16,r23,801c60 <___vfprintf_internal_r+0x558>
  801804:	80800003 	ldbu	r2,0(r16)
  801808:	10803fcc 	andi	r2,r2,255
  80180c:	1080201c 	xori	r2,r2,128
  801810:	10bfe004 	addi	r2,r2,-128
  801814:	1000c926 	beq	r2,zero,801b3c <___vfprintf_internal_r+0x434>
  801818:	82c00047 	ldb	r11,1(r16)
  80181c:	85c00044 	addi	r23,r16,1
  801820:	d8001345 	stb	zero,77(sp)
  801824:	0009883a 	mov	r4,zero
  801828:	000b883a 	mov	r5,zero
  80182c:	023fffc4 	movi	r8,-1
  801830:	0021883a 	mov	r16,zero
  801834:	0019883a 	mov	r12,zero
  801838:	bdc00044 	addi	r23,r23,1
  80183c:	5839883a 	mov	fp,r11
  801840:	e0bff804 	addi	r2,fp,-32
  801844:	10c01668 	cmpgeui	r3,r2,89
  801848:	18006c1e 	bne	r3,zero,8019fc <___vfprintf_internal_r+0x2f4>
  80184c:	100490ba 	slli	r2,r2,2
  801850:	00c02034 	movhi	r3,128
  801854:	10c7883a 	add	r3,r2,r3
  801858:	18861817 	ldw	r2,6240(r3)
  80185c:	1000683a 	jmp	r2
  801860:	0080224c 	andi	r2,zero,137
  801864:	008019fc 	xorhi	r2,zero,103
  801868:	008019fc 	xorhi	r2,zero,103
  80186c:	00802240 	call	80224 <__alt_mem_sdram-0x77fddc>
  801870:	008019fc 	xorhi	r2,zero,103
  801874:	008019fc 	xorhi	r2,zero,103
  801878:	008019fc 	xorhi	r2,zero,103
  80187c:	008019fc 	xorhi	r2,zero,103
  801880:	008019fc 	xorhi	r2,zero,103
  801884:	008019fc 	xorhi	r2,zero,103
  801888:	00802218 	cmpnei	r2,zero,136
  80188c:	00802208 	cmpgei	r2,zero,136
  801890:	008019fc 	xorhi	r2,zero,103
  801894:	008021f0 	cmpltui	r2,zero,135
  801898:	008021a4 	muli	r2,zero,134
  80189c:	008019fc 	xorhi	r2,zero,103
  8018a0:	00802198 	cmpnei	r2,zero,134
  8018a4:	008019c4 	movi	r2,103
  8018a8:	008019c4 	movi	r2,103
  8018ac:	008019c4 	movi	r2,103
  8018b0:	008019c4 	movi	r2,103
  8018b4:	008019c4 	movi	r2,103
  8018b8:	008019c4 	movi	r2,103
  8018bc:	008019c4 	movi	r2,103
  8018c0:	008019c4 	movi	r2,103
  8018c4:	008019c4 	movi	r2,103
  8018c8:	008019fc 	xorhi	r2,zero,103
  8018cc:	008019fc 	xorhi	r2,zero,103
  8018d0:	008019fc 	xorhi	r2,zero,103
  8018d4:	008019fc 	xorhi	r2,zero,103
  8018d8:	008019fc 	xorhi	r2,zero,103
  8018dc:	008019fc 	xorhi	r2,zero,103
  8018e0:	008019fc 	xorhi	r2,zero,103
  8018e4:	008019fc 	xorhi	r2,zero,103
  8018e8:	008019fc 	xorhi	r2,zero,103
  8018ec:	008019fc 	xorhi	r2,zero,103
  8018f0:	0080208c 	andi	r2,zero,130
  8018f4:	00801cbc 	xorhi	r2,zero,114
  8018f8:	008019fc 	xorhi	r2,zero,103
  8018fc:	00801cbc 	xorhi	r2,zero,114
  801900:	008019fc 	xorhi	r2,zero,103
  801904:	008019fc 	xorhi	r2,zero,103
  801908:	008019fc 	xorhi	r2,zero,103
  80190c:	008019fc 	xorhi	r2,zero,103
  801910:	00802278 	rdprs	r2,zero,137
  801914:	008019fc 	xorhi	r2,zero,103
  801918:	008019fc 	xorhi	r2,zero,103
  80191c:	00801bf0 	cmpltui	r2,zero,111
  801920:	008019fc 	xorhi	r2,zero,103
  801924:	008019fc 	xorhi	r2,zero,103
  801928:	008019fc 	xorhi	r2,zero,103
  80192c:	008019fc 	xorhi	r2,zero,103
  801930:	008019fc 	xorhi	r2,zero,103
  801934:	00801bc8 	cmpgei	r2,zero,111
  801938:	008019fc 	xorhi	r2,zero,103
  80193c:	008019fc 	xorhi	r2,zero,103
  801940:	008022ac 	andhi	r2,zero,138
  801944:	008019fc 	xorhi	r2,zero,103
  801948:	008019fc 	xorhi	r2,zero,103
  80194c:	008019fc 	xorhi	r2,zero,103
  801950:	008019fc 	xorhi	r2,zero,103
  801954:	008019fc 	xorhi	r2,zero,103
  801958:	008019fc 	xorhi	r2,zero,103
  80195c:	008019fc 	xorhi	r2,zero,103
  801960:	008019fc 	xorhi	r2,zero,103
  801964:	008019fc 	xorhi	r2,zero,103
  801968:	008019fc 	xorhi	r2,zero,103
  80196c:	00802284 	movi	r2,138
  801970:	00801ed0 	cmplti	r2,zero,123
  801974:	00801cbc 	xorhi	r2,zero,114
  801978:	00801cbc 	xorhi	r2,zero,114
  80197c:	00801cbc 	xorhi	r2,zero,114
  801980:	00801f44 	movi	r2,125
  801984:	00801ed0 	cmplti	r2,zero,123
  801988:	008019fc 	xorhi	r2,zero,103
  80198c:	008019fc 	xorhi	r2,zero,103
  801990:	00802078 	rdprs	r2,zero,129
  801994:	008019fc 	xorhi	r2,zero,103
  801998:	0080203c 	xorhi	r2,zero,128
  80199c:	00801bf4 	movhi	r2,111
  8019a0:	00801ffc 	xorhi	r2,zero,127
  8019a4:	00801ff0 	cmpltui	r2,zero,127
  8019a8:	008019fc 	xorhi	r2,zero,103
  8019ac:	00801f98 	cmpnei	r2,zero,126
  8019b0:	008019fc 	xorhi	r2,zero,103
  8019b4:	00801bcc 	andi	r2,zero,111
  8019b8:	008019fc 	xorhi	r2,zero,103
  8019bc:	008019fc 	xorhi	r2,zero,103
  8019c0:	00801f50 	cmplti	r2,zero,125
  8019c4:	0021883a 	mov	r16,zero
  8019c8:	e0fff404 	addi	r3,fp,-48
  8019cc:	800490ba 	slli	r2,r16,2
  8019d0:	bf000007 	ldb	fp,0(r23)
  8019d4:	bdc00044 	addi	r23,r23,1
  8019d8:	1421883a 	add	r16,r2,r16
  8019dc:	8421883a 	add	r16,r16,r16
  8019e0:	1c21883a 	add	r16,r3,r16
  8019e4:	e0fff404 	addi	r3,fp,-48
  8019e8:	188002b0 	cmpltui	r2,r3,10
  8019ec:	103ff71e 	bne	r2,zero,8019cc <___vfprintf_internal_r+0x2c4>
  8019f0:	e0bff804 	addi	r2,fp,-32
  8019f4:	10c01668 	cmpgeui	r3,r2,89
  8019f8:	183f9426 	beq	r3,zero,80184c <___vfprintf_internal_r+0x144>
  8019fc:	21003fcc 	andi	r4,r4,255
  801a00:	20068f1e 	bne	r4,zero,803440 <___vfprintf_internal_r+0x1d38>
  801a04:	e0004d26 	beq	fp,zero,801b3c <___vfprintf_internal_r+0x434>
  801a08:	df001d05 	stb	fp,116(sp)
  801a0c:	d8001345 	stb	zero,77(sp)
  801a10:	05000044 	movi	r20,1
  801a14:	05400044 	movi	r21,1
  801a18:	dc401d04 	addi	r17,sp,116
  801a1c:	db000415 	stw	r12,16(sp)
  801a20:	0011883a 	mov	r8,zero
  801a24:	d8000715 	stw	zero,28(sp)
  801a28:	d8800417 	ldw	r2,16(sp)
  801a2c:	1380008c 	andi	r14,r2,2
  801a30:	70000126 	beq	r14,zero,801a38 <___vfprintf_internal_r+0x330>
  801a34:	a5000084 	addi	r20,r20,2
  801a38:	d8800417 	ldw	r2,16(sp)
  801a3c:	d8c01c17 	ldw	r3,112(sp)
  801a40:	1340210c 	andi	r13,r2,132
  801a44:	6800021e 	bne	r13,zero,801a50 <___vfprintf_internal_r+0x348>
  801a48:	850fc83a 	sub	r7,r16,r20
  801a4c:	01c36016 	blt	zero,r7,8027d0 <___vfprintf_internal_r+0x10c8>
  801a50:	d8801347 	ldb	r2,77(sp)
  801a54:	10000c26 	beq	r2,zero,801a88 <___vfprintf_internal_r+0x380>
  801a58:	d8801b17 	ldw	r2,108(sp)
  801a5c:	d9001344 	addi	r4,sp,77
  801a60:	18c00044 	addi	r3,r3,1
  801a64:	10800044 	addi	r2,r2,1
  801a68:	b1000015 	stw	r4,0(r22)
  801a6c:	01000044 	movi	r4,1
  801a70:	d8801b15 	stw	r2,108(sp)
  801a74:	b1000115 	stw	r4,4(r22)
  801a78:	d8c01c15 	stw	r3,112(sp)
  801a7c:	10800208 	cmpgei	r2,r2,8
  801a80:	1003a01e 	bne	r2,zero,802904 <___vfprintf_internal_r+0x11fc>
  801a84:	b5800204 	addi	r22,r22,8
  801a88:	70000c26 	beq	r14,zero,801abc <___vfprintf_internal_r+0x3b4>
  801a8c:	d8801b17 	ldw	r2,108(sp)
  801a90:	d9001384 	addi	r4,sp,78
  801a94:	18c00084 	addi	r3,r3,2
  801a98:	10800044 	addi	r2,r2,1
  801a9c:	b1000015 	stw	r4,0(r22)
  801aa0:	01000084 	movi	r4,2
  801aa4:	d8801b15 	stw	r2,108(sp)
  801aa8:	b1000115 	stw	r4,4(r22)
  801aac:	d8c01c15 	stw	r3,112(sp)
  801ab0:	10800208 	cmpgei	r2,r2,8
  801ab4:	1003871e 	bne	r2,zero,8028d4 <___vfprintf_internal_r+0x11cc>
  801ab8:	b5800204 	addi	r22,r22,8
  801abc:	6b402018 	cmpnei	r13,r13,128
  801ac0:	68025226 	beq	r13,zero,80240c <___vfprintf_internal_r+0xd04>
  801ac4:	4551c83a 	sub	r8,r8,r21
  801ac8:	02028a16 	blt	zero,r8,8024f4 <___vfprintf_internal_r+0xdec>
  801acc:	d8800417 	ldw	r2,16(sp)
  801ad0:	1080400c 	andi	r2,r2,256
  801ad4:	1002071e 	bne	r2,zero,8022f4 <___vfprintf_internal_r+0xbec>
  801ad8:	d8801b17 	ldw	r2,108(sp)
  801adc:	1d47883a 	add	r3,r3,r21
  801ae0:	b4400015 	stw	r17,0(r22)
  801ae4:	10800044 	addi	r2,r2,1
  801ae8:	b5400115 	stw	r21,4(r22)
  801aec:	d8801b15 	stw	r2,108(sp)
  801af0:	d8c01c15 	stw	r3,112(sp)
  801af4:	10800208 	cmpgei	r2,r2,8
  801af8:	1002ee1e 	bne	r2,zero,8026b4 <___vfprintf_internal_r+0xfac>
  801afc:	b5800204 	addi	r22,r22,8
  801b00:	d8800417 	ldw	r2,16(sp)
  801b04:	1440010c 	andi	r17,r2,4
  801b08:	88000226 	beq	r17,zero,801b14 <___vfprintf_internal_r+0x40c>
  801b0c:	8523c83a 	sub	r17,r16,r20
  801b10:	0440bd16 	blt	zero,r17,801e08 <___vfprintf_internal_r+0x700>
  801b14:	8500010e 	bge	r16,r20,801b1c <___vfprintf_internal_r+0x414>
  801b18:	a021883a 	mov	r16,r20
  801b1c:	d8800517 	ldw	r2,20(sp)
  801b20:	1405883a 	add	r2,r2,r16
  801b24:	d8800515 	stw	r2,20(sp)
  801b28:	1802b91e 	bne	r3,zero,802610 <___vfprintf_internal_r+0xf08>
  801b2c:	b8800007 	ldb	r2,0(r23)
  801b30:	d8001b15 	stw	zero,108(sp)
  801b34:	dd802704 	addi	r22,sp,156
  801b38:	103f291e 	bne	r2,zero,8017e0 <___vfprintf_internal_r+0xd8>
  801b3c:	d8801c17 	ldw	r2,112(sp)
  801b40:	10063a1e 	bne	r2,zero,80342c <___vfprintf_internal_r+0x1d24>
  801b44:	9080030b 	ldhu	r2,12(r18)
  801b48:	1080100c 	andi	r2,r2,64
  801b4c:	1006c91e 	bne	r2,zero,803674 <___vfprintf_internal_r+0x1f6c>
  801b50:	d8800517 	ldw	r2,20(sp)
  801b54:	dfc04017 	ldw	ra,256(sp)
  801b58:	df003f17 	ldw	fp,252(sp)
  801b5c:	ddc03e17 	ldw	r23,248(sp)
  801b60:	dd803d17 	ldw	r22,244(sp)
  801b64:	dd403c17 	ldw	r21,240(sp)
  801b68:	dd003b17 	ldw	r20,236(sp)
  801b6c:	dcc03a17 	ldw	r19,232(sp)
  801b70:	dc803917 	ldw	r18,228(sp)
  801b74:	dc403817 	ldw	r17,224(sp)
  801b78:	dc003717 	ldw	r16,220(sp)
  801b7c:	dec04104 	addi	sp,sp,260
  801b80:	f800283a 	ret
  801b84:	900b883a 	mov	r5,r18
  801b88:	9809883a 	mov	r4,r19
  801b8c:	08038d00 	call	8038d0 <__swsetup_r>
  801b90:	1006b81e 	bne	r2,zero,803674 <___vfprintf_internal_r+0x1f6c>
  801b94:	9080030b 	ldhu	r2,12(r18)
  801b98:	1080068c 	andi	r2,r2,26
  801b9c:	10800298 	cmpnei	r2,r2,10
  801ba0:	103f011e 	bne	r2,zero,8017a8 <___vfprintf_internal_r+0xa0>
  801ba4:	9080038f 	ldh	r2,14(r18)
  801ba8:	103eff16 	blt	r2,zero,8017a8 <___vfprintf_internal_r+0xa0>
  801bac:	d9c00617 	ldw	r7,24(sp)
  801bb0:	b00d883a 	mov	r6,r22
  801bb4:	900b883a 	mov	r5,r18
  801bb8:	9809883a 	mov	r4,r19
  801bbc:	08038100 	call	803810 <__sbprintf>
  801bc0:	d8800515 	stw	r2,20(sp)
  801bc4:	003fe206 	br	801b50 <___vfprintf_internal_r+0x448>
  801bc8:	63000414 	ori	r12,r12,16
  801bcc:	6080080c 	andi	r2,r12,32
  801bd0:	10008126 	beq	r2,zero,801dd8 <___vfprintf_internal_r+0x6d0>
  801bd4:	d8c00617 	ldw	r3,24(sp)
  801bd8:	00800044 	movi	r2,1
  801bdc:	1d000017 	ldw	r20,0(r3)
  801be0:	1d400117 	ldw	r21,4(r3)
  801be4:	18c00204 	addi	r3,r3,8
  801be8:	d8c00615 	stw	r3,24(sp)
  801bec:	00000906 	br	801c14 <___vfprintf_internal_r+0x50c>
  801bf0:	63000414 	ori	r12,r12,16
  801bf4:	6080080c 	andi	r2,r12,32
  801bf8:	10006b26 	beq	r2,zero,801da8 <___vfprintf_internal_r+0x6a0>
  801bfc:	d8c00617 	ldw	r3,24(sp)
  801c00:	0005883a 	mov	r2,zero
  801c04:	1d000017 	ldw	r20,0(r3)
  801c08:	1d400117 	ldw	r21,4(r3)
  801c0c:	18c00204 	addi	r3,r3,8
  801c10:	d8c00615 	stw	r3,24(sp)
  801c14:	d8001345 	stb	zero,77(sp)
  801c18:	40ffffe0 	cmpeqi	r3,r8,-1
  801c1c:	001b883a 	mov	r13,zero
  801c20:	1801351e 	bne	r3,zero,8020f8 <___vfprintf_internal_r+0x9f0>
  801c24:	047fdfc4 	movi	r17,-129
  801c28:	6448703a 	and	r4,r12,r17
  801c2c:	a546b03a 	or	r3,r20,r21
  801c30:	d9000415 	stw	r4,16(sp)
  801c34:	1802e41e 	bne	r3,zero,8027c8 <___vfprintf_internal_r+0x10c0>
  801c38:	40025f1e 	bne	r8,zero,8025b8 <___vfprintf_internal_r+0xeb0>
  801c3c:	1003a61e 	bne	r2,zero,802ad8 <___vfprintf_internal_r+0x13d0>
  801c40:	6540004c 	andi	r21,r12,1
  801c44:	a803d426 	beq	r21,zero,802b98 <___vfprintf_internal_r+0x1490>
  801c48:	00800c04 	movi	r2,48
  801c4c:	d88026c5 	stb	r2,155(sp)
  801c50:	dc4026c4 	addi	r17,sp,155
  801c54:	00014606 	br	802170 <___vfprintf_internal_r+0xa68>
  801c58:	85e3c83a 	sub	r17,r16,r23
  801c5c:	85ffb726 	beq	r16,r23,801b3c <___vfprintf_internal_r+0x434>
  801c60:	d8c01c17 	ldw	r3,112(sp)
  801c64:	d8801b17 	ldw	r2,108(sp)
  801c68:	b5c00015 	stw	r23,0(r22)
  801c6c:	1c47883a 	add	r3,r3,r17
  801c70:	10800044 	addi	r2,r2,1
  801c74:	d8801b15 	stw	r2,108(sp)
  801c78:	b4400115 	stw	r17,4(r22)
  801c7c:	d8c01c15 	stw	r3,112(sp)
  801c80:	10800208 	cmpgei	r2,r2,8
  801c84:	1000061e 	bne	r2,zero,801ca0 <___vfprintf_internal_r+0x598>
  801c88:	b5800204 	addi	r22,r22,8
  801c8c:	d8c00517 	ldw	r3,20(sp)
  801c90:	80800003 	ldbu	r2,0(r16)
  801c94:	1c47883a 	add	r3,r3,r17
  801c98:	d8c00515 	stw	r3,20(sp)
  801c9c:	003eda06 	br	801808 <___vfprintf_internal_r+0x100>
  801ca0:	d9801a04 	addi	r6,sp,104
  801ca4:	900b883a 	mov	r5,r18
  801ca8:	9809883a 	mov	r4,r19
  801cac:	0808ab40 	call	808ab4 <__sprint_r>
  801cb0:	103fa41e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  801cb4:	dd802704 	addi	r22,sp,156
  801cb8:	003ff406 	br	801c8c <___vfprintf_internal_r+0x584>
  801cbc:	21003fcc 	andi	r4,r4,255
  801cc0:	20066a1e 	bne	r4,zero,80366c <___vfprintf_internal_r+0x1f64>
  801cc4:	d8c00617 	ldw	r3,24(sp)
  801cc8:	6080020c 	andi	r2,r12,8
  801ccc:	19000204 	addi	r4,r3,8
  801cd0:	d9000e15 	stw	r4,56(sp)
  801cd4:	1003d01e 	bne	r2,zero,802c18 <___vfprintf_internal_r+0x1510>
  801cd8:	d8800617 	ldw	r2,24(sp)
  801cdc:	10c00017 	ldw	r3,0(r2)
  801ce0:	10800117 	ldw	r2,4(r2)
  801ce4:	d8c00915 	stw	r3,36(sp)
  801ce8:	d8800a15 	stw	r2,40(sp)
  801cec:	dd400a17 	ldw	r21,40(sp)
  801cf0:	dd000917 	ldw	r20,36(sp)
  801cf4:	00a00034 	movhi	r2,32768
  801cf8:	10bfffc4 	addi	r2,r2,-1
  801cfc:	a8a2703a 	and	r17,r21,r2
  801d00:	01dffc34 	movhi	r7,32752
  801d04:	01bfffc4 	movi	r6,-1
  801d08:	39ffffc4 	addi	r7,r7,-1
  801d0c:	a009883a 	mov	r4,r20
  801d10:	880b883a 	mov	r5,r17
  801d14:	da000615 	stw	r8,24(sp)
  801d18:	db000415 	stw	r12,16(sp)
  801d1c:	080e0740 	call	80e074 <__unorddf2>
  801d20:	db000417 	ldw	r12,16(sp)
  801d24:	da000617 	ldw	r8,24(sp)
  801d28:	1004701e 	bne	r2,zero,802eec <___vfprintf_internal_r+0x17e4>
  801d2c:	01dffc34 	movhi	r7,32752
  801d30:	01bfffc4 	movi	r6,-1
  801d34:	39ffffc4 	addi	r7,r7,-1
  801d38:	a009883a 	mov	r4,r20
  801d3c:	880b883a 	mov	r5,r17
  801d40:	080cea80 	call	80cea8 <__ledf2>
  801d44:	db000417 	ldw	r12,16(sp)
  801d48:	da000617 	ldw	r8,24(sp)
  801d4c:	0084670e 	bge	zero,r2,802eec <___vfprintf_internal_r+0x17e4>
  801d50:	000d883a 	mov	r6,zero
  801d54:	000f883a 	mov	r7,zero
  801d58:	a009883a 	mov	r4,r20
  801d5c:	a80b883a 	mov	r5,r21
  801d60:	080cea80 	call	80cea8 <__ledf2>
  801d64:	db000417 	ldw	r12,16(sp)
  801d68:	10059d16 	blt	r2,zero,8033e0 <___vfprintf_internal_r+0x1cd8>
  801d6c:	db401343 	ldbu	r13,77(sp)
  801d70:	e0801210 	cmplti	r2,fp,72
  801d74:	1005741e 	bne	r2,zero,803348 <___vfprintf_internal_r+0x1c40>
  801d78:	04402074 	movhi	r17,129
  801d7c:	8c437604 	addi	r17,r17,3544
  801d80:	00bfdfc4 	movi	r2,-129
  801d84:	6084703a 	and	r2,r12,r2
  801d88:	d8800415 	stw	r2,16(sp)
  801d8c:	d8800e17 	ldw	r2,56(sp)
  801d90:	050000c4 	movi	r20,3
  801d94:	054000c4 	movi	r21,3
  801d98:	d8800615 	stw	r2,24(sp)
  801d9c:	0011883a 	mov	r8,zero
  801da0:	d8000715 	stw	zero,28(sp)
  801da4:	0000f606 	br	802180 <___vfprintf_internal_r+0xa78>
  801da8:	d9000617 	ldw	r4,24(sp)
  801dac:	6080040c 	andi	r2,r12,16
  801db0:	20c00104 	addi	r3,r4,4
  801db4:	1003891e 	bne	r2,zero,802bdc <___vfprintf_internal_r+0x14d4>
  801db8:	6080100c 	andi	r2,r12,64
  801dbc:	10056b26 	beq	r2,zero,80336c <___vfprintf_internal_r+0x1c64>
  801dc0:	d8800617 	ldw	r2,24(sp)
  801dc4:	002b883a 	mov	r21,zero
  801dc8:	d8c00615 	stw	r3,24(sp)
  801dcc:	1500000b 	ldhu	r20,0(r2)
  801dd0:	0005883a 	mov	r2,zero
  801dd4:	003f8f06 	br	801c14 <___vfprintf_internal_r+0x50c>
  801dd8:	d9000617 	ldw	r4,24(sp)
  801ddc:	6080040c 	andi	r2,r12,16
  801de0:	20c00104 	addi	r3,r4,4
  801de4:	1003821e 	bne	r2,zero,802bf0 <___vfprintf_internal_r+0x14e8>
  801de8:	6080100c 	andi	r2,r12,64
  801dec:	10056526 	beq	r2,zero,803384 <___vfprintf_internal_r+0x1c7c>
  801df0:	d8800617 	ldw	r2,24(sp)
  801df4:	002b883a 	mov	r21,zero
  801df8:	d8c00615 	stw	r3,24(sp)
  801dfc:	1500000b 	ldhu	r20,0(r2)
  801e00:	00800044 	movi	r2,1
  801e04:	003f8306 	br	801c14 <___vfprintf_internal_r+0x50c>
  801e08:	03002074 	movhi	r12,129
  801e0c:	89000450 	cmplti	r4,r17,17
  801e10:	d8801b17 	ldw	r2,108(sp)
  801e14:	63038a04 	addi	r12,r12,3624
  801e18:	20001b1e 	bne	r4,zero,801e88 <___vfprintf_internal_r+0x780>
  801e1c:	05400404 	movi	r21,16
  801e20:	6039883a 	mov	fp,r12
  801e24:	00000406 	br	801e38 <___vfprintf_internal_r+0x730>
  801e28:	8c7ffc04 	addi	r17,r17,-16
  801e2c:	89000448 	cmpgei	r4,r17,17
  801e30:	b5800204 	addi	r22,r22,8
  801e34:	20001326 	beq	r4,zero,801e84 <___vfprintf_internal_r+0x77c>
  801e38:	10800044 	addi	r2,r2,1
  801e3c:	18c00404 	addi	r3,r3,16
  801e40:	b7000015 	stw	fp,0(r22)
  801e44:	b5400115 	stw	r21,4(r22)
  801e48:	d8c01c15 	stw	r3,112(sp)
  801e4c:	d8801b15 	stw	r2,108(sp)
  801e50:	11000208 	cmpgei	r4,r2,8
  801e54:	203ff426 	beq	r4,zero,801e28 <___vfprintf_internal_r+0x720>
  801e58:	d9801a04 	addi	r6,sp,104
  801e5c:	900b883a 	mov	r5,r18
  801e60:	9809883a 	mov	r4,r19
  801e64:	0808ab40 	call	808ab4 <__sprint_r>
  801e68:	103f361e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  801e6c:	8c7ffc04 	addi	r17,r17,-16
  801e70:	89000448 	cmpgei	r4,r17,17
  801e74:	d8c01c17 	ldw	r3,112(sp)
  801e78:	d8801b17 	ldw	r2,108(sp)
  801e7c:	dd802704 	addi	r22,sp,156
  801e80:	203fed1e 	bne	r4,zero,801e38 <___vfprintf_internal_r+0x730>
  801e84:	e019883a 	mov	r12,fp
  801e88:	10800044 	addi	r2,r2,1
  801e8c:	1c47883a 	add	r3,r3,r17
  801e90:	d8801b15 	stw	r2,108(sp)
  801e94:	b3000015 	stw	r12,0(r22)
  801e98:	b4400115 	stw	r17,4(r22)
  801e9c:	d8c01c15 	stw	r3,112(sp)
  801ea0:	10800210 	cmplti	r2,r2,8
  801ea4:	103f1b1e 	bne	r2,zero,801b14 <___vfprintf_internal_r+0x40c>
  801ea8:	d9801a04 	addi	r6,sp,104
  801eac:	900b883a 	mov	r5,r18
  801eb0:	9809883a 	mov	r4,r19
  801eb4:	0808ab40 	call	808ab4 <__sprint_r>
  801eb8:	103f221e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  801ebc:	d8c01c17 	ldw	r3,112(sp)
  801ec0:	003f1406 	br	801b14 <___vfprintf_internal_r+0x40c>
  801ec4:	9809883a 	mov	r4,r19
  801ec8:	08059580 	call	805958 <__sinit>
  801ecc:	003e2606 	br	801768 <___vfprintf_internal_r+0x60>
  801ed0:	21003fcc 	andi	r4,r4,255
  801ed4:	2005db1e 	bne	r4,zero,803644 <___vfprintf_internal_r+0x1f3c>
  801ed8:	6080080c 	andi	r2,r12,32
  801edc:	10007026 	beq	r2,zero,8020a0 <___vfprintf_internal_r+0x998>
  801ee0:	d8c00617 	ldw	r3,24(sp)
  801ee4:	18800117 	ldw	r2,4(r3)
  801ee8:	1d000017 	ldw	r20,0(r3)
  801eec:	18c00204 	addi	r3,r3,8
  801ef0:	d8c00615 	stw	r3,24(sp)
  801ef4:	102b883a 	mov	r21,r2
  801ef8:	10007516 	blt	r2,zero,8020d0 <___vfprintf_internal_r+0x9c8>
  801efc:	40bfffd8 	cmpnei	r2,r8,-1
  801f00:	10034a26 	beq	r2,zero,802c2c <___vfprintf_internal_r+0x1524>
  801f04:	047fdfc4 	movi	r17,-129
  801f08:	6446703a 	and	r3,r12,r17
  801f0c:	a544b03a 	or	r2,r20,r21
  801f10:	d8c00415 	stw	r3,16(sp)
  801f14:	db401343 	ldbu	r13,77(sp)
  801f18:	1002ee26 	beq	r2,zero,802ad4 <___vfprintf_internal_r+0x13cc>
  801f1c:	db000417 	ldw	r12,16(sp)
  801f20:	a803441e 	bne	r21,zero,802c34 <___vfprintf_internal_r+0x152c>
  801f24:	a08002a8 	cmpgeui	r2,r20,10
  801f28:	1003421e 	bne	r2,zero,802c34 <___vfprintf_internal_r+0x152c>
  801f2c:	a5000c04 	addi	r20,r20,48
  801f30:	dd0026c5 	stb	r20,155(sp)
  801f34:	db000415 	stw	r12,16(sp)
  801f38:	05400044 	movi	r21,1
  801f3c:	dc4026c4 	addi	r17,sp,155
  801f40:	00008b06 	br	802170 <___vfprintf_internal_r+0xa68>
  801f44:	bac00007 	ldb	r11,0(r23)
  801f48:	63001014 	ori	r12,r12,64
  801f4c:	003e3a06 	br	801838 <___vfprintf_internal_r+0x130>
  801f50:	21003fcc 	andi	r4,r4,255
  801f54:	2005c11e 	bne	r4,zero,80365c <___vfprintf_internal_r+0x1f54>
  801f58:	00802074 	movhi	r2,129
  801f5c:	10837e04 	addi	r2,r2,3576
  801f60:	d8800c15 	stw	r2,48(sp)
  801f64:	6080080c 	andi	r2,r12,32
  801f68:	1000d726 	beq	r2,zero,8022c8 <___vfprintf_internal_r+0xbc0>
  801f6c:	d8800617 	ldw	r2,24(sp)
  801f70:	15000017 	ldw	r20,0(r2)
  801f74:	15400117 	ldw	r21,4(r2)
  801f78:	10800204 	addi	r2,r2,8
  801f7c:	d8800615 	stw	r2,24(sp)
  801f80:	6080004c 	andi	r2,r12,1
  801f84:	10000226 	beq	r2,zero,801f90 <___vfprintf_internal_r+0x888>
  801f88:	a544b03a 	or	r2,r20,r21
  801f8c:	1003091e 	bne	r2,zero,802bb4 <___vfprintf_internal_r+0x14ac>
  801f90:	00800084 	movi	r2,2
  801f94:	003f1f06 	br	801c14 <___vfprintf_internal_r+0x50c>
  801f98:	d8800617 	ldw	r2,24(sp)
  801f9c:	d8001345 	stb	zero,77(sp)
  801fa0:	14400017 	ldw	r17,0(r2)
  801fa4:	10c00104 	addi	r3,r2,4
  801fa8:	88037726 	beq	r17,zero,802d88 <___vfprintf_internal_r+0x1680>
  801fac:	40bfffe0 	cmpeqi	r2,r8,-1
  801fb0:	1004661e 	bne	r2,zero,80314c <___vfprintf_internal_r+0x1a44>
  801fb4:	400d883a 	mov	r6,r8
  801fb8:	000b883a 	mov	r5,zero
  801fbc:	8809883a 	mov	r4,r17
  801fc0:	d8c00715 	stw	r3,28(sp)
  801fc4:	db000615 	stw	r12,24(sp)
  801fc8:	da000415 	stw	r8,16(sp)
  801fcc:	0806d9c0 	call	806d9c <memchr>
  801fd0:	da000417 	ldw	r8,16(sp)
  801fd4:	db000617 	ldw	r12,24(sp)
  801fd8:	d8c00717 	ldw	r3,28(sp)
  801fdc:	10058926 	beq	r2,zero,803604 <___vfprintf_internal_r+0x1efc>
  801fe0:	146bc83a 	sub	r21,r2,r17
  801fe4:	a829883a 	mov	r20,r21
  801fe8:	d8c00615 	stw	r3,24(sp)
  801fec:	003e8b06 	br	801a1c <___vfprintf_internal_r+0x314>
  801ff0:	bac00007 	ldb	r11,0(r23)
  801ff4:	63000814 	ori	r12,r12,32
  801ff8:	003e0f06 	br	801838 <___vfprintf_internal_r+0x130>
  801ffc:	d8c00617 	ldw	r3,24(sp)
  802000:	00800c04 	movi	r2,48
  802004:	d8801385 	stb	r2,78(sp)
  802008:	00801e04 	movi	r2,120
  80200c:	01002074 	movhi	r4,129
  802010:	d88013c5 	stb	r2,79(sp)
  802014:	18800104 	addi	r2,r3,4
  802018:	d8800615 	stw	r2,24(sp)
  80201c:	20837e04 	addi	r2,r4,3576
  802020:	d8800c15 	stw	r2,48(sp)
  802024:	1d000017 	ldw	r20,0(r3)
  802028:	002b883a 	mov	r21,zero
  80202c:	63000094 	ori	r12,r12,2
  802030:	00800084 	movi	r2,2
  802034:	07001e04 	movi	fp,120
  802038:	003ef606 	br	801c14 <___vfprintf_internal_r+0x50c>
  80203c:	21003fcc 	andi	r4,r4,255
  802040:	2005881e 	bne	r4,zero,803664 <___vfprintf_internal_r+0x1f5c>
  802044:	d9000617 	ldw	r4,24(sp)
  802048:	6080080c 	andi	r2,r12,32
  80204c:	20c00017 	ldw	r3,0(r4)
  802050:	21000104 	addi	r4,r4,4
  802054:	d9000615 	stw	r4,24(sp)
  802058:	1002d11e 	bne	r2,zero,802ba0 <___vfprintf_internal_r+0x1498>
  80205c:	6080040c 	andi	r2,r12,16
  802060:	10036f1e 	bne	r2,zero,802e20 <___vfprintf_internal_r+0x1718>
  802064:	6300100c 	andi	r12,r12,64
  802068:	60036d26 	beq	r12,zero,802e20 <___vfprintf_internal_r+0x1718>
  80206c:	d8800517 	ldw	r2,20(sp)
  802070:	1880000d 	sth	r2,0(r3)
  802074:	003dd806 	br	8017d8 <___vfprintf_internal_r+0xd0>
  802078:	bac00007 	ldb	r11,0(r23)
  80207c:	58801b18 	cmpnei	r2,r11,108
  802080:	10033026 	beq	r2,zero,802d44 <___vfprintf_internal_r+0x163c>
  802084:	63000414 	ori	r12,r12,16
  802088:	003deb06 	br	801838 <___vfprintf_internal_r+0x130>
  80208c:	21003fcc 	andi	r4,r4,255
  802090:	2005701e 	bne	r4,zero,803654 <___vfprintf_internal_r+0x1f4c>
  802094:	63000414 	ori	r12,r12,16
  802098:	6080080c 	andi	r2,r12,32
  80209c:	103f901e 	bne	r2,zero,801ee0 <___vfprintf_internal_r+0x7d8>
  8020a0:	d9000617 	ldw	r4,24(sp)
  8020a4:	6080040c 	andi	r2,r12,16
  8020a8:	20c00104 	addi	r3,r4,4
  8020ac:	1002d51e 	bne	r2,zero,802c04 <___vfprintf_internal_r+0x14fc>
  8020b0:	6080100c 	andi	r2,r12,64
  8020b4:	1004a726 	beq	r2,zero,803354 <___vfprintf_internal_r+0x1c4c>
  8020b8:	d8800617 	ldw	r2,24(sp)
  8020bc:	d8c00615 	stw	r3,24(sp)
  8020c0:	1500000f 	ldh	r20,0(r2)
  8020c4:	a02bd7fa 	srai	r21,r20,31
  8020c8:	a805883a 	mov	r2,r21
  8020cc:	103f8b0e 	bge	r2,zero,801efc <___vfprintf_internal_r+0x7f4>
  8020d0:	a004c03a 	cmpne	r2,r20,zero
  8020d4:	056bc83a 	sub	r21,zero,r21
  8020d8:	a8abc83a 	sub	r21,r21,r2
  8020dc:	00800b44 	movi	r2,45
  8020e0:	d8801345 	stb	r2,77(sp)
  8020e4:	40ffffe0 	cmpeqi	r3,r8,-1
  8020e8:	0529c83a 	sub	r20,zero,r20
  8020ec:	03400b44 	movi	r13,45
  8020f0:	00800044 	movi	r2,1
  8020f4:	183ecb26 	beq	r3,zero,801c24 <___vfprintf_internal_r+0x51c>
  8020f8:	10c00060 	cmpeqi	r3,r2,1
  8020fc:	183f881e 	bne	r3,zero,801f20 <___vfprintf_internal_r+0x818>
  802100:	108000a0 	cmpeqi	r2,r2,2
  802104:	1001311e 	bne	r2,zero,8025cc <___vfprintf_internal_r+0xec4>
  802108:	dc402704 	addi	r17,sp,156
  80210c:	a004d0fa 	srli	r2,r20,3
  802110:	a806977a 	slli	r3,r21,29
  802114:	a82ad0fa 	srli	r21,r21,3
  802118:	a50001cc 	andi	r20,r20,7
  80211c:	a1000c04 	addi	r4,r20,48
  802120:	18a8b03a 	or	r20,r3,r2
  802124:	893fffc5 	stb	r4,-1(r17)
  802128:	a544b03a 	or	r2,r20,r21
  80212c:	880b883a 	mov	r5,r17
  802130:	8c7fffc4 	addi	r17,r17,-1
  802134:	103ff51e 	bne	r2,zero,80210c <___vfprintf_internal_r+0xa04>
  802138:	6080004c 	andi	r2,r12,1
  80213c:	10013026 	beq	r2,zero,802600 <___vfprintf_internal_r+0xef8>
  802140:	21003fcc 	andi	r4,r4,255
  802144:	2100201c 	xori	r4,r4,128
  802148:	213fe004 	addi	r4,r4,-128
  80214c:	20800c18 	cmpnei	r2,r4,48
  802150:	10012b26 	beq	r2,zero,802600 <___vfprintf_internal_r+0xef8>
  802154:	00800c04 	movi	r2,48
  802158:	297fff84 	addi	r5,r5,-2
  80215c:	88bfffc5 	stb	r2,-1(r17)
  802160:	d8802704 	addi	r2,sp,156
  802164:	116bc83a 	sub	r21,r2,r5
  802168:	db000415 	stw	r12,16(sp)
  80216c:	2823883a 	mov	r17,r5
  802170:	4029883a 	mov	r20,r8
  802174:	4540010e 	bge	r8,r21,80217c <___vfprintf_internal_r+0xa74>
  802178:	a829883a 	mov	r20,r21
  80217c:	d8000715 	stw	zero,28(sp)
  802180:	6b403fcc 	andi	r13,r13,255
  802184:	6b40201c 	xori	r13,r13,128
  802188:	6b7fe004 	addi	r13,r13,-128
  80218c:	683e2626 	beq	r13,zero,801a28 <___vfprintf_internal_r+0x320>
  802190:	a5000044 	addi	r20,r20,1
  802194:	003e2406 	br	801a28 <___vfprintf_internal_r+0x320>
  802198:	bac00007 	ldb	r11,0(r23)
  80219c:	63002014 	ori	r12,r12,128
  8021a0:	003da506 	br	801838 <___vfprintf_internal_r+0x130>
  8021a4:	bf000007 	ldb	fp,0(r23)
  8021a8:	b8800044 	addi	r2,r23,1
  8021ac:	e0c00aa0 	cmpeqi	r3,fp,42
  8021b0:	1805841e 	bne	r3,zero,8037c4 <___vfprintf_internal_r+0x20bc>
  8021b4:	e0fff404 	addi	r3,fp,-48
  8021b8:	198002b0 	cmpltui	r6,r3,10
  8021bc:	102f883a 	mov	r23,r2
  8021c0:	0011883a 	mov	r8,zero
  8021c4:	303d9e26 	beq	r6,zero,801840 <___vfprintf_internal_r+0x138>
  8021c8:	400490ba 	slli	r2,r8,2
  8021cc:	bf000007 	ldb	fp,0(r23)
  8021d0:	bdc00044 	addi	r23,r23,1
  8021d4:	1211883a 	add	r8,r2,r8
  8021d8:	4211883a 	add	r8,r8,r8
  8021dc:	40d1883a 	add	r8,r8,r3
  8021e0:	e0fff404 	addi	r3,fp,-48
  8021e4:	188002b0 	cmpltui	r2,r3,10
  8021e8:	103ff71e 	bne	r2,zero,8021c8 <___vfprintf_internal_r+0xac0>
  8021ec:	003d9406 	br	801840 <___vfprintf_internal_r+0x138>
  8021f0:	bf000003 	ldbu	fp,0(r23)
  8021f4:	e2c03fcc 	andi	r11,fp,255
  8021f8:	5ac0201c 	xori	r11,r11,128
  8021fc:	63000114 	ori	r12,r12,4
  802200:	5affe004 	addi	r11,r11,-128
  802204:	003d8c06 	br	801838 <___vfprintf_internal_r+0x130>
  802208:	bac00007 	ldb	r11,0(r23)
  80220c:	01000044 	movi	r4,1
  802210:	01400ac4 	movi	r5,43
  802214:	003d8806 	br	801838 <___vfprintf_internal_r+0x130>
  802218:	d8800617 	ldw	r2,24(sp)
  80221c:	bf000003 	ldbu	fp,0(r23)
  802220:	14000017 	ldw	r16,0(r2)
  802224:	10800104 	addi	r2,r2,4
  802228:	8002aa16 	blt	r16,zero,802cd4 <___vfprintf_internal_r+0x15cc>
  80222c:	d8800615 	stw	r2,24(sp)
  802230:	e2c03fcc 	andi	r11,fp,255
  802234:	5ac0201c 	xori	r11,r11,128
  802238:	5affe004 	addi	r11,r11,-128
  80223c:	003d7e06 	br	801838 <___vfprintf_internal_r+0x130>
  802240:	bac00007 	ldb	r11,0(r23)
  802244:	63000054 	ori	r12,r12,1
  802248:	003d7b06 	br	801838 <___vfprintf_internal_r+0x130>
  80224c:	28803fcc 	andi	r2,r5,255
  802250:	1080201c 	xori	r2,r2,128
  802254:	10bfe004 	addi	r2,r2,-128
  802258:	bf000003 	ldbu	fp,0(r23)
  80225c:	103ff41e 	bne	r2,zero,802230 <___vfprintf_internal_r+0xb28>
  802260:	e2c03fcc 	andi	r11,fp,255
  802264:	5ac0201c 	xori	r11,r11,128
  802268:	01000044 	movi	r4,1
  80226c:	01400804 	movi	r5,32
  802270:	5affe004 	addi	r11,r11,-128
  802274:	003d7006 	br	801838 <___vfprintf_internal_r+0x130>
  802278:	bac00007 	ldb	r11,0(r23)
  80227c:	63000214 	ori	r12,r12,8
  802280:	003d6d06 	br	801838 <___vfprintf_internal_r+0x130>
  802284:	d8c00617 	ldw	r3,24(sp)
  802288:	d8001345 	stb	zero,77(sp)
  80228c:	05000044 	movi	r20,1
  802290:	18800017 	ldw	r2,0(r3)
  802294:	18c00104 	addi	r3,r3,4
  802298:	d8c00615 	stw	r3,24(sp)
  80229c:	d8801d05 	stb	r2,116(sp)
  8022a0:	05400044 	movi	r21,1
  8022a4:	dc401d04 	addi	r17,sp,116
  8022a8:	003ddc06 	br	801a1c <___vfprintf_internal_r+0x314>
  8022ac:	21003fcc 	andi	r4,r4,255
  8022b0:	2004e61e 	bne	r4,zero,80364c <___vfprintf_internal_r+0x1f44>
  8022b4:	00802074 	movhi	r2,129
  8022b8:	10837904 	addi	r2,r2,3556
  8022bc:	d8800c15 	stw	r2,48(sp)
  8022c0:	6080080c 	andi	r2,r12,32
  8022c4:	103f291e 	bne	r2,zero,801f6c <___vfprintf_internal_r+0x864>
  8022c8:	d9000617 	ldw	r4,24(sp)
  8022cc:	6080040c 	andi	r2,r12,16
  8022d0:	20c00104 	addi	r3,r4,4
  8022d4:	10023d1e 	bne	r2,zero,802bcc <___vfprintf_internal_r+0x14c4>
  8022d8:	6080100c 	andi	r2,r12,64
  8022dc:	10042f26 	beq	r2,zero,80339c <___vfprintf_internal_r+0x1c94>
  8022e0:	d8800617 	ldw	r2,24(sp)
  8022e4:	002b883a 	mov	r21,zero
  8022e8:	d8c00615 	stw	r3,24(sp)
  8022ec:	1500000b 	ldhu	r20,0(r2)
  8022f0:	003f2306 	br	801f80 <___vfprintf_internal_r+0x878>
  8022f4:	e2c01990 	cmplti	r11,fp,102
  8022f8:	5800f61e 	bne	r11,zero,8026d4 <___vfprintf_internal_r+0xfcc>
  8022fc:	d9000917 	ldw	r4,36(sp)
  802300:	d9400a17 	ldw	r5,40(sp)
  802304:	000d883a 	mov	r6,zero
  802308:	000f883a 	mov	r7,zero
  80230c:	d8c00e15 	stw	r3,56(sp)
  802310:	080cd380 	call	80cd38 <__eqdf2>
  802314:	d8c00e17 	ldw	r3,56(sp)
  802318:	1001881e 	bne	r2,zero,80293c <___vfprintf_internal_r+0x1234>
  80231c:	d8801b17 	ldw	r2,108(sp)
  802320:	01002074 	movhi	r4,129
  802324:	21038504 	addi	r4,r4,3604
  802328:	10800044 	addi	r2,r2,1
  80232c:	18c00044 	addi	r3,r3,1
  802330:	b1000015 	stw	r4,0(r22)
  802334:	01000044 	movi	r4,1
  802338:	d8801b15 	stw	r2,108(sp)
  80233c:	b1000115 	stw	r4,4(r22)
  802340:	d8c01c15 	stw	r3,112(sp)
  802344:	10800208 	cmpgei	r2,r2,8
  802348:	10036e1e 	bne	r2,zero,803104 <___vfprintf_internal_r+0x19fc>
  80234c:	b5800204 	addi	r22,r22,8
  802350:	d8801417 	ldw	r2,80(sp)
  802354:	d9000817 	ldw	r4,32(sp)
  802358:	11020b0e 	bge	r2,r4,802b88 <___vfprintf_internal_r+0x1480>
  80235c:	d8800d17 	ldw	r2,52(sp)
  802360:	d9000b17 	ldw	r4,44(sp)
  802364:	b0800015 	stw	r2,0(r22)
  802368:	d8801b17 	ldw	r2,108(sp)
  80236c:	1907883a 	add	r3,r3,r4
  802370:	b1000115 	stw	r4,4(r22)
  802374:	10800044 	addi	r2,r2,1
  802378:	d8801b15 	stw	r2,108(sp)
  80237c:	d8c01c15 	stw	r3,112(sp)
  802380:	10800208 	cmpgei	r2,r2,8
  802384:	1002761e 	bne	r2,zero,802d60 <___vfprintf_internal_r+0x1658>
  802388:	b5800204 	addi	r22,r22,8
  80238c:	d8800817 	ldw	r2,32(sp)
  802390:	157fffc4 	addi	r21,r2,-1
  802394:	057dda0e 	bge	zero,r21,801b00 <___vfprintf_internal_r+0x3f8>
  802398:	01c02074 	movhi	r7,129
  80239c:	a9000450 	cmplti	r4,r21,17
  8023a0:	d8801b17 	ldw	r2,108(sp)
  8023a4:	39c38604 	addi	r7,r7,3608
  8023a8:	2003521e 	bne	r4,zero,8030f4 <___vfprintf_internal_r+0x19ec>
  8023ac:	07000404 	movi	fp,16
  8023b0:	3823883a 	mov	r17,r7
  8023b4:	00000406 	br	8023c8 <___vfprintf_internal_r+0xcc0>
  8023b8:	b5800204 	addi	r22,r22,8
  8023bc:	ad7ffc04 	addi	r21,r21,-16
  8023c0:	a9000448 	cmpgei	r4,r21,17
  8023c4:	20034a26 	beq	r4,zero,8030f0 <___vfprintf_internal_r+0x19e8>
  8023c8:	10800044 	addi	r2,r2,1
  8023cc:	18c00404 	addi	r3,r3,16
  8023d0:	b4400015 	stw	r17,0(r22)
  8023d4:	b7000115 	stw	fp,4(r22)
  8023d8:	d8c01c15 	stw	r3,112(sp)
  8023dc:	d8801b15 	stw	r2,108(sp)
  8023e0:	11000208 	cmpgei	r4,r2,8
  8023e4:	203ff426 	beq	r4,zero,8023b8 <___vfprintf_internal_r+0xcb0>
  8023e8:	d9801a04 	addi	r6,sp,104
  8023ec:	900b883a 	mov	r5,r18
  8023f0:	9809883a 	mov	r4,r19
  8023f4:	0808ab40 	call	808ab4 <__sprint_r>
  8023f8:	103dd21e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8023fc:	d8c01c17 	ldw	r3,112(sp)
  802400:	d8801b17 	ldw	r2,108(sp)
  802404:	dd802704 	addi	r22,sp,156
  802408:	003fec06 	br	8023bc <___vfprintf_internal_r+0xcb4>
  80240c:	8519c83a 	sub	r12,r16,r20
  802410:	033dac0e 	bge	zero,r12,801ac4 <___vfprintf_internal_r+0x3bc>
  802414:	01c02074 	movhi	r7,129
  802418:	61000450 	cmplti	r4,r12,17
  80241c:	d8801b17 	ldw	r2,108(sp)
  802420:	39c38604 	addi	r7,r7,3608
  802424:	2000281e 	bne	r4,zero,8024c8 <___vfprintf_internal_r+0xdc0>
  802428:	dc400e15 	stw	r17,56(sp)
  80242c:	dc000f15 	stw	r16,60(sp)
  802430:	b009883a 	mov	r4,r22
  802434:	03400404 	movi	r13,16
  802438:	a02d883a 	mov	r22,r20
  80243c:	6021883a 	mov	r16,r12
  802440:	4029883a 	mov	r20,r8
  802444:	3823883a 	mov	r17,r7
  802448:	00000406 	br	80245c <___vfprintf_internal_r+0xd54>
  80244c:	843ffc04 	addi	r16,r16,-16
  802450:	81400448 	cmpgei	r5,r16,17
  802454:	21000204 	addi	r4,r4,8
  802458:	28001426 	beq	r5,zero,8024ac <___vfprintf_internal_r+0xda4>
  80245c:	10800044 	addi	r2,r2,1
  802460:	18c00404 	addi	r3,r3,16
  802464:	24400015 	stw	r17,0(r4)
  802468:	23400115 	stw	r13,4(r4)
  80246c:	d8c01c15 	stw	r3,112(sp)
  802470:	d8801b15 	stw	r2,108(sp)
  802474:	11400208 	cmpgei	r5,r2,8
  802478:	283ff426 	beq	r5,zero,80244c <___vfprintf_internal_r+0xd44>
  80247c:	d9801a04 	addi	r6,sp,104
  802480:	900b883a 	mov	r5,r18
  802484:	9809883a 	mov	r4,r19
  802488:	0808ab40 	call	808ab4 <__sprint_r>
  80248c:	103dad1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802490:	843ffc04 	addi	r16,r16,-16
  802494:	81400448 	cmpgei	r5,r16,17
  802498:	d8c01c17 	ldw	r3,112(sp)
  80249c:	d8801b17 	ldw	r2,108(sp)
  8024a0:	d9002704 	addi	r4,sp,156
  8024a4:	03400404 	movi	r13,16
  8024a8:	283fec1e 	bne	r5,zero,80245c <___vfprintf_internal_r+0xd54>
  8024ac:	8019883a 	mov	r12,r16
  8024b0:	880f883a 	mov	r7,r17
  8024b4:	dc000f17 	ldw	r16,60(sp)
  8024b8:	dc400e17 	ldw	r17,56(sp)
  8024bc:	a011883a 	mov	r8,r20
  8024c0:	b029883a 	mov	r20,r22
  8024c4:	202d883a 	mov	r22,r4
  8024c8:	10800044 	addi	r2,r2,1
  8024cc:	1b07883a 	add	r3,r3,r12
  8024d0:	d8801b15 	stw	r2,108(sp)
  8024d4:	b1c00015 	stw	r7,0(r22)
  8024d8:	b3000115 	stw	r12,4(r22)
  8024dc:	d8c01c15 	stw	r3,112(sp)
  8024e0:	10800208 	cmpgei	r2,r2,8
  8024e4:	10030f1e 	bne	r2,zero,803124 <___vfprintf_internal_r+0x1a1c>
  8024e8:	4551c83a 	sub	r8,r8,r21
  8024ec:	b5800204 	addi	r22,r22,8
  8024f0:	023d760e 	bge	zero,r8,801acc <___vfprintf_internal_r+0x3c4>
  8024f4:	01c02074 	movhi	r7,129
  8024f8:	41000450 	cmplti	r4,r8,17
  8024fc:	d8801b17 	ldw	r2,108(sp)
  802500:	39c38604 	addi	r7,r7,3608
  802504:	2000221e 	bne	r4,zero,802590 <___vfprintf_internal_r+0xe88>
  802508:	dc400e15 	stw	r17,56(sp)
  80250c:	dc000f15 	stw	r16,60(sp)
  802510:	03000404 	movi	r12,16
  802514:	4021883a 	mov	r16,r8
  802518:	3823883a 	mov	r17,r7
  80251c:	00000406 	br	802530 <___vfprintf_internal_r+0xe28>
  802520:	843ffc04 	addi	r16,r16,-16
  802524:	81000448 	cmpgei	r4,r16,17
  802528:	b5800204 	addi	r22,r22,8
  80252c:	20001426 	beq	r4,zero,802580 <___vfprintf_internal_r+0xe78>
  802530:	10800044 	addi	r2,r2,1
  802534:	18c00404 	addi	r3,r3,16
  802538:	b4400015 	stw	r17,0(r22)
  80253c:	b3000115 	stw	r12,4(r22)
  802540:	d8c01c15 	stw	r3,112(sp)
  802544:	d8801b15 	stw	r2,108(sp)
  802548:	11000208 	cmpgei	r4,r2,8
  80254c:	203ff426 	beq	r4,zero,802520 <___vfprintf_internal_r+0xe18>
  802550:	d9801a04 	addi	r6,sp,104
  802554:	900b883a 	mov	r5,r18
  802558:	9809883a 	mov	r4,r19
  80255c:	0808ab40 	call	808ab4 <__sprint_r>
  802560:	103d781e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802564:	843ffc04 	addi	r16,r16,-16
  802568:	81000448 	cmpgei	r4,r16,17
  80256c:	d8c01c17 	ldw	r3,112(sp)
  802570:	d8801b17 	ldw	r2,108(sp)
  802574:	dd802704 	addi	r22,sp,156
  802578:	03000404 	movi	r12,16
  80257c:	203fec1e 	bne	r4,zero,802530 <___vfprintf_internal_r+0xe28>
  802580:	8011883a 	mov	r8,r16
  802584:	880f883a 	mov	r7,r17
  802588:	dc000f17 	ldw	r16,60(sp)
  80258c:	dc400e17 	ldw	r17,56(sp)
  802590:	10800044 	addi	r2,r2,1
  802594:	1a07883a 	add	r3,r3,r8
  802598:	d8801b15 	stw	r2,108(sp)
  80259c:	b1c00015 	stw	r7,0(r22)
  8025a0:	b2000115 	stw	r8,4(r22)
  8025a4:	d8c01c15 	stw	r3,112(sp)
  8025a8:	10800208 	cmpgei	r2,r2,8
  8025ac:	10016e1e 	bne	r2,zero,802b68 <___vfprintf_internal_r+0x1460>
  8025b0:	b5800204 	addi	r22,r22,8
  8025b4:	003d4506 	br	801acc <___vfprintf_internal_r+0x3c4>
  8025b8:	10c00060 	cmpeqi	r3,r2,1
  8025bc:	1803c81e 	bne	r3,zero,8034e0 <___vfprintf_internal_r+0x1dd8>
  8025c0:	108000a0 	cmpeqi	r2,r2,2
  8025c4:	db000417 	ldw	r12,16(sp)
  8025c8:	103ecf26 	beq	r2,zero,802108 <___vfprintf_internal_r+0xa00>
  8025cc:	d9000c17 	ldw	r4,48(sp)
  8025d0:	dc402704 	addi	r17,sp,156
  8025d4:	a08003cc 	andi	r2,r20,15
  8025d8:	a806973a 	slli	r3,r21,28
  8025dc:	a028d13a 	srli	r20,r20,4
  8025e0:	2085883a 	add	r2,r4,r2
  8025e4:	10800003 	ldbu	r2,0(r2)
  8025e8:	a82ad13a 	srli	r21,r21,4
  8025ec:	1d28b03a 	or	r20,r3,r20
  8025f0:	88bfffc5 	stb	r2,-1(r17)
  8025f4:	a544b03a 	or	r2,r20,r21
  8025f8:	8c7fffc4 	addi	r17,r17,-1
  8025fc:	103ff51e 	bne	r2,zero,8025d4 <___vfprintf_internal_r+0xecc>
  802600:	d8802704 	addi	r2,sp,156
  802604:	146bc83a 	sub	r21,r2,r17
  802608:	db000415 	stw	r12,16(sp)
  80260c:	003ed806 	br	802170 <___vfprintf_internal_r+0xa68>
  802610:	d9801a04 	addi	r6,sp,104
  802614:	900b883a 	mov	r5,r18
  802618:	9809883a 	mov	r4,r19
  80261c:	0808ab40 	call	808ab4 <__sprint_r>
  802620:	103d4226 	beq	r2,zero,801b2c <___vfprintf_internal_r+0x424>
  802624:	003d4706 	br	801b44 <___vfprintf_internal_r+0x43c>
  802628:	d9801a04 	addi	r6,sp,104
  80262c:	900b883a 	mov	r5,r18
  802630:	9809883a 	mov	r4,r19
  802634:	0808ab40 	call	808ab4 <__sprint_r>
  802638:	103d421e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  80263c:	d9401417 	ldw	r5,80(sp)
  802640:	d8c01c17 	ldw	r3,112(sp)
  802644:	dd802704 	addi	r22,sp,156
  802648:	2802c81e 	bne	r5,zero,80316c <___vfprintf_internal_r+0x1a64>
  80264c:	d8800417 	ldw	r2,16(sp)
  802650:	d9000817 	ldw	r4,32(sp)
  802654:	1080004c 	andi	r2,r2,1
  802658:	1104b03a 	or	r2,r2,r4
  80265c:	103d2826 	beq	r2,zero,801b00 <___vfprintf_internal_r+0x3f8>
  802660:	d8800d17 	ldw	r2,52(sp)
  802664:	d9000b17 	ldw	r4,44(sp)
  802668:	b0800015 	stw	r2,0(r22)
  80266c:	d8801b17 	ldw	r2,108(sp)
  802670:	20c7883a 	add	r3,r4,r3
  802674:	b1000115 	stw	r4,4(r22)
  802678:	10800044 	addi	r2,r2,1
  80267c:	d8c01c15 	stw	r3,112(sp)
  802680:	d8801b15 	stw	r2,108(sp)
  802684:	11000208 	cmpgei	r4,r2,8
  802688:	2003821e 	bne	r4,zero,803494 <___vfprintf_internal_r+0x1d8c>
  80268c:	b5800204 	addi	r22,r22,8
  802690:	d9000817 	ldw	r4,32(sp)
  802694:	10800044 	addi	r2,r2,1
  802698:	d8801b15 	stw	r2,108(sp)
  80269c:	20c7883a 	add	r3,r4,r3
  8026a0:	b4400015 	stw	r17,0(r22)
  8026a4:	b1000115 	stw	r4,4(r22)
  8026a8:	d8c01c15 	stw	r3,112(sp)
  8026ac:	10800208 	cmpgei	r2,r2,8
  8026b0:	103d1226 	beq	r2,zero,801afc <___vfprintf_internal_r+0x3f4>
  8026b4:	d9801a04 	addi	r6,sp,104
  8026b8:	900b883a 	mov	r5,r18
  8026bc:	9809883a 	mov	r4,r19
  8026c0:	0808ab40 	call	808ab4 <__sprint_r>
  8026c4:	103d1f1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8026c8:	d8c01c17 	ldw	r3,112(sp)
  8026cc:	dd802704 	addi	r22,sp,156
  8026d0:	003d0b06 	br	801b00 <___vfprintf_internal_r+0x3f8>
  8026d4:	d8800817 	ldw	r2,32(sp)
  8026d8:	da001b17 	ldw	r8,108(sp)
  8026dc:	18c00044 	addi	r3,r3,1
  8026e0:	10800088 	cmpgei	r2,r2,2
  8026e4:	45400044 	addi	r21,r8,1
  8026e8:	b7000204 	addi	fp,r22,8
  8026ec:	1000ec26 	beq	r2,zero,802aa0 <___vfprintf_internal_r+0x1398>
  8026f0:	00800044 	movi	r2,1
  8026f4:	b0800115 	stw	r2,4(r22)
  8026f8:	b4400015 	stw	r17,0(r22)
  8026fc:	d8c01c15 	stw	r3,112(sp)
  802700:	dd401b15 	stw	r21,108(sp)
  802704:	a8800210 	cmplti	r2,r21,8
  802708:	1001d126 	beq	r2,zero,802e50 <___vfprintf_internal_r+0x1748>
  80270c:	d8800b17 	ldw	r2,44(sp)
  802710:	d9000d17 	ldw	r4,52(sp)
  802714:	ad400044 	addi	r21,r21,1
  802718:	1887883a 	add	r3,r3,r2
  80271c:	e0800115 	stw	r2,4(fp)
  802720:	e1000015 	stw	r4,0(fp)
  802724:	d8c01c15 	stw	r3,112(sp)
  802728:	dd401b15 	stw	r21,108(sp)
  80272c:	a8800208 	cmpgei	r2,r21,8
  802730:	1001be1e 	bne	r2,zero,802e2c <___vfprintf_internal_r+0x1724>
  802734:	e7000204 	addi	fp,fp,8
  802738:	d9000917 	ldw	r4,36(sp)
  80273c:	d9400a17 	ldw	r5,40(sp)
  802740:	aa000044 	addi	r8,r21,1
  802744:	000d883a 	mov	r6,zero
  802748:	000f883a 	mov	r7,zero
  80274c:	d8c00e15 	stw	r3,56(sp)
  802750:	da000715 	stw	r8,28(sp)
  802754:	080cd380 	call	80cd38 <__eqdf2>
  802758:	d8c00817 	ldw	r3,32(sp)
  80275c:	da000717 	ldw	r8,28(sp)
  802760:	e5800204 	addi	r22,fp,8
  802764:	1affffc4 	addi	r11,r3,-1
  802768:	d8c00e17 	ldw	r3,56(sp)
  80276c:	1000de26 	beq	r2,zero,802ae8 <___vfprintf_internal_r+0x13e0>
  802770:	8a400044 	addi	r9,r17,1
  802774:	1ac7883a 	add	r3,r3,r11
  802778:	da001b15 	stw	r8,108(sp)
  80277c:	e2400015 	stw	r9,0(fp)
  802780:	e2c00115 	stw	r11,4(fp)
  802784:	d8c01c15 	stw	r3,112(sp)
  802788:	42000208 	cmpgei	r8,r8,8
  80278c:	4001621e 	bne	r8,zero,802d18 <___vfprintf_internal_r+0x1610>
  802790:	e0800404 	addi	r2,fp,16
  802794:	aa000084 	addi	r8,r21,2
  802798:	b039883a 	mov	fp,r22
  80279c:	102d883a 	mov	r22,r2
  8027a0:	d9001017 	ldw	r4,64(sp)
  8027a4:	d8801644 	addi	r2,sp,89
  8027a8:	da001b15 	stw	r8,108(sp)
  8027ac:	20c7883a 	add	r3,r4,r3
  8027b0:	e0800015 	stw	r2,0(fp)
  8027b4:	e1000115 	stw	r4,4(fp)
  8027b8:	d8c01c15 	stw	r3,112(sp)
  8027bc:	42000210 	cmplti	r8,r8,8
  8027c0:	403ccf1e 	bne	r8,zero,801b00 <___vfprintf_internal_r+0x3f8>
  8027c4:	003fbb06 	br	8026b4 <___vfprintf_internal_r+0xfac>
  8027c8:	db000417 	ldw	r12,16(sp)
  8027cc:	003e4a06 	br	8020f8 <___vfprintf_internal_r+0x9f0>
  8027d0:	03002074 	movhi	r12,129
  8027d4:	39000450 	cmplti	r4,r7,17
  8027d8:	d8801b17 	ldw	r2,108(sp)
  8027dc:	63038a04 	addi	r12,r12,3624
  8027e0:	2000321e 	bne	r4,zero,8028ac <___vfprintf_internal_r+0x11a4>
  8027e4:	dc401115 	stw	r17,68(sp)
  8027e8:	b009883a 	mov	r4,r22
  8027ec:	9023883a 	mov	r17,r18
  8027f0:	a82d883a 	mov	r22,r21
  8027f4:	ddc01215 	stw	r23,72(sp)
  8027f8:	03c00404 	movi	r15,16
  8027fc:	a02f883a 	mov	r23,r20
  802800:	db800e15 	stw	r14,56(sp)
  802804:	8029883a 	mov	r20,r16
  802808:	db400f15 	stw	r13,60(sp)
  80280c:	402b883a 	mov	r21,r8
  802810:	3821883a 	mov	r16,r7
  802814:	6025883a 	mov	r18,r12
  802818:	00000406 	br	80282c <___vfprintf_internal_r+0x1124>
  80281c:	843ffc04 	addi	r16,r16,-16
  802820:	81800448 	cmpgei	r6,r16,17
  802824:	21000204 	addi	r4,r4,8
  802828:	30001426 	beq	r6,zero,80287c <___vfprintf_internal_r+0x1174>
  80282c:	10800044 	addi	r2,r2,1
  802830:	18c00404 	addi	r3,r3,16
  802834:	24800015 	stw	r18,0(r4)
  802838:	23c00115 	stw	r15,4(r4)
  80283c:	d8c01c15 	stw	r3,112(sp)
  802840:	d8801b15 	stw	r2,108(sp)
  802844:	11800208 	cmpgei	r6,r2,8
  802848:	303ff426 	beq	r6,zero,80281c <___vfprintf_internal_r+0x1114>
  80284c:	d9801a04 	addi	r6,sp,104
  802850:	880b883a 	mov	r5,r17
  802854:	9809883a 	mov	r4,r19
  802858:	0808ab40 	call	808ab4 <__sprint_r>
  80285c:	1001a11e 	bne	r2,zero,802ee4 <___vfprintf_internal_r+0x17dc>
  802860:	843ffc04 	addi	r16,r16,-16
  802864:	81800448 	cmpgei	r6,r16,17
  802868:	d8c01c17 	ldw	r3,112(sp)
  80286c:	d8801b17 	ldw	r2,108(sp)
  802870:	d9002704 	addi	r4,sp,156
  802874:	03c00404 	movi	r15,16
  802878:	303fec1e 	bne	r6,zero,80282c <___vfprintf_internal_r+0x1124>
  80287c:	800f883a 	mov	r7,r16
  802880:	9019883a 	mov	r12,r18
  802884:	a021883a 	mov	r16,r20
  802888:	8825883a 	mov	r18,r17
  80288c:	b829883a 	mov	r20,r23
  802890:	db800e17 	ldw	r14,56(sp)
  802894:	db400f17 	ldw	r13,60(sp)
  802898:	ddc01217 	ldw	r23,72(sp)
  80289c:	dc401117 	ldw	r17,68(sp)
  8028a0:	a811883a 	mov	r8,r21
  8028a4:	b02b883a 	mov	r21,r22
  8028a8:	202d883a 	mov	r22,r4
  8028ac:	10800044 	addi	r2,r2,1
  8028b0:	19c7883a 	add	r3,r3,r7
  8028b4:	d8801b15 	stw	r2,108(sp)
  8028b8:	b3000015 	stw	r12,0(r22)
  8028bc:	b1c00115 	stw	r7,4(r22)
  8028c0:	d8c01c15 	stw	r3,112(sp)
  8028c4:	10800208 	cmpgei	r2,r2,8
  8028c8:	1001781e 	bne	r2,zero,802eac <___vfprintf_internal_r+0x17a4>
  8028cc:	b5800204 	addi	r22,r22,8
  8028d0:	003c5f06 	br	801a50 <___vfprintf_internal_r+0x348>
  8028d4:	d9801a04 	addi	r6,sp,104
  8028d8:	900b883a 	mov	r5,r18
  8028dc:	9809883a 	mov	r4,r19
  8028e0:	da000f15 	stw	r8,60(sp)
  8028e4:	db400e15 	stw	r13,56(sp)
  8028e8:	0808ab40 	call	808ab4 <__sprint_r>
  8028ec:	103c951e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8028f0:	d8c01c17 	ldw	r3,112(sp)
  8028f4:	da000f17 	ldw	r8,60(sp)
  8028f8:	db400e17 	ldw	r13,56(sp)
  8028fc:	dd802704 	addi	r22,sp,156
  802900:	003c6e06 	br	801abc <___vfprintf_internal_r+0x3b4>
  802904:	d9801a04 	addi	r6,sp,104
  802908:	900b883a 	mov	r5,r18
  80290c:	9809883a 	mov	r4,r19
  802910:	da001115 	stw	r8,68(sp)
  802914:	db400f15 	stw	r13,60(sp)
  802918:	db800e15 	stw	r14,56(sp)
  80291c:	0808ab40 	call	808ab4 <__sprint_r>
  802920:	103c881e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802924:	d8c01c17 	ldw	r3,112(sp)
  802928:	da001117 	ldw	r8,68(sp)
  80292c:	db400f17 	ldw	r13,60(sp)
  802930:	db800e17 	ldw	r14,56(sp)
  802934:	dd802704 	addi	r22,sp,156
  802938:	003c5306 	br	801a88 <___vfprintf_internal_r+0x380>
  80293c:	d9401417 	ldw	r5,80(sp)
  802940:	01414c0e 	bge	zero,r5,802e74 <___vfprintf_internal_r+0x176c>
  802944:	d8800717 	ldw	r2,28(sp)
  802948:	d9000817 	ldw	r4,32(sp)
  80294c:	102b883a 	mov	r21,r2
  802950:	2080e316 	blt	r4,r2,802ce0 <___vfprintf_internal_r+0x15d8>
  802954:	05400a0e 	bge	zero,r21,802980 <___vfprintf_internal_r+0x1278>
  802958:	d8801b17 	ldw	r2,108(sp)
  80295c:	1d47883a 	add	r3,r3,r21
  802960:	b4400015 	stw	r17,0(r22)
  802964:	10800044 	addi	r2,r2,1
  802968:	d8801b15 	stw	r2,108(sp)
  80296c:	b5400115 	stw	r21,4(r22)
  802970:	d8c01c15 	stw	r3,112(sp)
  802974:	10800208 	cmpgei	r2,r2,8
  802978:	10030c1e 	bne	r2,zero,8035ac <___vfprintf_internal_r+0x1ea4>
  80297c:	b5800204 	addi	r22,r22,8
  802980:	a800ff16 	blt	r21,zero,802d80 <___vfprintf_internal_r+0x1678>
  802984:	d8800717 	ldw	r2,28(sp)
  802988:	156bc83a 	sub	r21,r2,r21
  80298c:	05410616 	blt	zero,r21,802da8 <___vfprintf_internal_r+0x16a0>
  802990:	dd401417 	ldw	r21,80(sp)
  802994:	d8800817 	ldw	r2,32(sp)
  802998:	a880d40e 	bge	r21,r2,802cec <___vfprintf_internal_r+0x15e4>
  80299c:	d8800d17 	ldw	r2,52(sp)
  8029a0:	d9000b17 	ldw	r4,44(sp)
  8029a4:	b0800015 	stw	r2,0(r22)
  8029a8:	d8801b17 	ldw	r2,108(sp)
  8029ac:	1907883a 	add	r3,r3,r4
  8029b0:	b1000115 	stw	r4,4(r22)
  8029b4:	10800044 	addi	r2,r2,1
  8029b8:	d8801b15 	stw	r2,108(sp)
  8029bc:	d8c01c15 	stw	r3,112(sp)
  8029c0:	10800208 	cmpgei	r2,r2,8
  8029c4:	10028e1e 	bne	r2,zero,803400 <___vfprintf_internal_r+0x1cf8>
  8029c8:	b5800204 	addi	r22,r22,8
  8029cc:	d9000817 	ldw	r4,32(sp)
  8029d0:	d9400717 	ldw	r5,28(sp)
  8029d4:	2545c83a 	sub	r2,r4,r21
  8029d8:	2149c83a 	sub	r4,r4,r5
  8029dc:	102b883a 	mov	r21,r2
  8029e0:	2080010e 	bge	r4,r2,8029e8 <___vfprintf_internal_r+0x12e0>
  8029e4:	202b883a 	mov	r21,r4
  8029e8:	05400c0e 	bge	zero,r21,802a1c <___vfprintf_internal_r+0x1314>
  8029ec:	d9000717 	ldw	r4,28(sp)
  8029f0:	1d47883a 	add	r3,r3,r21
  8029f4:	b5400115 	stw	r21,4(r22)
  8029f8:	8913883a 	add	r9,r17,r4
  8029fc:	d9001b17 	ldw	r4,108(sp)
  802a00:	b2400015 	stw	r9,0(r22)
  802a04:	d8c01c15 	stw	r3,112(sp)
  802a08:	21000044 	addi	r4,r4,1
  802a0c:	d9001b15 	stw	r4,108(sp)
  802a10:	21000208 	cmpgei	r4,r4,8
  802a14:	2002f01e 	bne	r4,zero,8035d8 <___vfprintf_internal_r+0x1ed0>
  802a18:	b5800204 	addi	r22,r22,8
  802a1c:	a800010e 	bge	r21,zero,802a24 <___vfprintf_internal_r+0x131c>
  802a20:	002b883a 	mov	r21,zero
  802a24:	156bc83a 	sub	r21,r2,r21
  802a28:	057c350e 	bge	zero,r21,801b00 <___vfprintf_internal_r+0x3f8>
  802a2c:	01c02074 	movhi	r7,129
  802a30:	a9000450 	cmplti	r4,r21,17
  802a34:	d8801b17 	ldw	r2,108(sp)
  802a38:	39c38604 	addi	r7,r7,3608
  802a3c:	2001ad1e 	bne	r4,zero,8030f4 <___vfprintf_internal_r+0x19ec>
  802a40:	07000404 	movi	fp,16
  802a44:	3823883a 	mov	r17,r7
  802a48:	00000406 	br	802a5c <___vfprintf_internal_r+0x1354>
  802a4c:	b5800204 	addi	r22,r22,8
  802a50:	ad7ffc04 	addi	r21,r21,-16
  802a54:	a9000448 	cmpgei	r4,r21,17
  802a58:	2001a526 	beq	r4,zero,8030f0 <___vfprintf_internal_r+0x19e8>
  802a5c:	10800044 	addi	r2,r2,1
  802a60:	18c00404 	addi	r3,r3,16
  802a64:	b4400015 	stw	r17,0(r22)
  802a68:	b7000115 	stw	fp,4(r22)
  802a6c:	d8c01c15 	stw	r3,112(sp)
  802a70:	d8801b15 	stw	r2,108(sp)
  802a74:	11000208 	cmpgei	r4,r2,8
  802a78:	203ff426 	beq	r4,zero,802a4c <___vfprintf_internal_r+0x1344>
  802a7c:	d9801a04 	addi	r6,sp,104
  802a80:	900b883a 	mov	r5,r18
  802a84:	9809883a 	mov	r4,r19
  802a88:	0808ab40 	call	808ab4 <__sprint_r>
  802a8c:	103c2d1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802a90:	d8c01c17 	ldw	r3,112(sp)
  802a94:	d8801b17 	ldw	r2,108(sp)
  802a98:	dd802704 	addi	r22,sp,156
  802a9c:	003fec06 	br	802a50 <___vfprintf_internal_r+0x1348>
  802aa0:	d8800417 	ldw	r2,16(sp)
  802aa4:	1080004c 	andi	r2,r2,1
  802aa8:	103f111e 	bne	r2,zero,8026f0 <___vfprintf_internal_r+0xfe8>
  802aac:	00800044 	movi	r2,1
  802ab0:	dd401b15 	stw	r21,108(sp)
  802ab4:	b4400015 	stw	r17,0(r22)
  802ab8:	b0800115 	stw	r2,4(r22)
  802abc:	d8c01c15 	stw	r3,112(sp)
  802ac0:	ad400208 	cmpgei	r21,r21,8
  802ac4:	a800941e 	bne	r21,zero,802d18 <___vfprintf_internal_r+0x1610>
  802ac8:	42000084 	addi	r8,r8,2
  802acc:	b5800404 	addi	r22,r22,16
  802ad0:	003f3306 	br	8027a0 <___vfprintf_internal_r+0x1098>
  802ad4:	4002821e 	bne	r8,zero,8034e0 <___vfprintf_internal_r+0x1dd8>
  802ad8:	0011883a 	mov	r8,zero
  802adc:	002b883a 	mov	r21,zero
  802ae0:	dc402704 	addi	r17,sp,156
  802ae4:	003da206 	br	802170 <___vfprintf_internal_r+0xa68>
  802ae8:	02ff2d0e 	bge	zero,r11,8027a0 <___vfprintf_internal_r+0x1098>
  802aec:	58800450 	cmplti	r2,r11,17
  802af0:	01c02074 	movhi	r7,129
  802af4:	1003261e 	bne	r2,zero,803790 <___vfprintf_internal_r+0x2088>
  802af8:	39c38604 	addi	r7,r7,3608
  802afc:	dc000715 	stw	r16,28(sp)
  802b00:	05800404 	movi	r22,16
  802b04:	5823883a 	mov	r17,r11
  802b08:	402b883a 	mov	r21,r8
  802b0c:	3821883a 	mov	r16,r7
  802b10:	00000506 	br	802b28 <___vfprintf_internal_r+0x1420>
  802b14:	e7000204 	addi	fp,fp,8
  802b18:	8c7ffc04 	addi	r17,r17,-16
  802b1c:	88800448 	cmpgei	r2,r17,17
  802b20:	1001be26 	beq	r2,zero,80321c <___vfprintf_internal_r+0x1b14>
  802b24:	ad400044 	addi	r21,r21,1
  802b28:	18c00404 	addi	r3,r3,16
  802b2c:	e4000015 	stw	r16,0(fp)
  802b30:	e5800115 	stw	r22,4(fp)
  802b34:	d8c01c15 	stw	r3,112(sp)
  802b38:	dd401b15 	stw	r21,108(sp)
  802b3c:	a8800208 	cmpgei	r2,r21,8
  802b40:	103ff426 	beq	r2,zero,802b14 <___vfprintf_internal_r+0x140c>
  802b44:	d9801a04 	addi	r6,sp,104
  802b48:	900b883a 	mov	r5,r18
  802b4c:	9809883a 	mov	r4,r19
  802b50:	0808ab40 	call	808ab4 <__sprint_r>
  802b54:	103bfb1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802b58:	dd401b17 	ldw	r21,108(sp)
  802b5c:	d8c01c17 	ldw	r3,112(sp)
  802b60:	df002704 	addi	fp,sp,156
  802b64:	003fec06 	br	802b18 <___vfprintf_internal_r+0x1410>
  802b68:	d9801a04 	addi	r6,sp,104
  802b6c:	900b883a 	mov	r5,r18
  802b70:	9809883a 	mov	r4,r19
  802b74:	0808ab40 	call	808ab4 <__sprint_r>
  802b78:	103bf21e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802b7c:	d8c01c17 	ldw	r3,112(sp)
  802b80:	dd802704 	addi	r22,sp,156
  802b84:	003bd106 	br	801acc <___vfprintf_internal_r+0x3c4>
  802b88:	d8800417 	ldw	r2,16(sp)
  802b8c:	1080004c 	andi	r2,r2,1
  802b90:	103bdb26 	beq	r2,zero,801b00 <___vfprintf_internal_r+0x3f8>
  802b94:	003df106 	br	80235c <___vfprintf_internal_r+0xc54>
  802b98:	dc402704 	addi	r17,sp,156
  802b9c:	003d7406 	br	802170 <___vfprintf_internal_r+0xa68>
  802ba0:	d9000517 	ldw	r4,20(sp)
  802ba4:	2005d7fa 	srai	r2,r4,31
  802ba8:	19000015 	stw	r4,0(r3)
  802bac:	18800115 	stw	r2,4(r3)
  802bb0:	003b0906 	br	8017d8 <___vfprintf_internal_r+0xd0>
  802bb4:	00800c04 	movi	r2,48
  802bb8:	d8801385 	stb	r2,78(sp)
  802bbc:	df0013c5 	stb	fp,79(sp)
  802bc0:	63000094 	ori	r12,r12,2
  802bc4:	00800084 	movi	r2,2
  802bc8:	003c1206 	br	801c14 <___vfprintf_internal_r+0x50c>
  802bcc:	25000017 	ldw	r20,0(r4)
  802bd0:	002b883a 	mov	r21,zero
  802bd4:	d8c00615 	stw	r3,24(sp)
  802bd8:	003ce906 	br	801f80 <___vfprintf_internal_r+0x878>
  802bdc:	25000017 	ldw	r20,0(r4)
  802be0:	002b883a 	mov	r21,zero
  802be4:	d8c00615 	stw	r3,24(sp)
  802be8:	0005883a 	mov	r2,zero
  802bec:	003c0906 	br	801c14 <___vfprintf_internal_r+0x50c>
  802bf0:	25000017 	ldw	r20,0(r4)
  802bf4:	002b883a 	mov	r21,zero
  802bf8:	d8c00615 	stw	r3,24(sp)
  802bfc:	00800044 	movi	r2,1
  802c00:	003c0406 	br	801c14 <___vfprintf_internal_r+0x50c>
  802c04:	25000017 	ldw	r20,0(r4)
  802c08:	d8c00615 	stw	r3,24(sp)
  802c0c:	a02bd7fa 	srai	r21,r20,31
  802c10:	a805883a 	mov	r2,r21
  802c14:	003cb806 	br	801ef8 <___vfprintf_internal_r+0x7f0>
  802c18:	18800017 	ldw	r2,0(r3)
  802c1c:	d8800915 	stw	r2,36(sp)
  802c20:	18800117 	ldw	r2,4(r3)
  802c24:	d8800a15 	stw	r2,40(sp)
  802c28:	003c3006 	br	801cec <___vfprintf_internal_r+0x5e4>
  802c2c:	db401343 	ldbu	r13,77(sp)
  802c30:	a83cbc26 	beq	r21,zero,801f24 <___vfprintf_internal_r+0x81c>
  802c34:	dc402704 	addi	r17,sp,156
  802c38:	a805883a 	mov	r2,r21
  802c3c:	dc000715 	stw	r16,28(sp)
  802c40:	902b883a 	mov	r21,r18
  802c44:	8821883a 	mov	r16,r17
  802c48:	db000415 	stw	r12,16(sp)
  802c4c:	a023883a 	mov	r17,r20
  802c50:	da000e15 	stw	r8,56(sp)
  802c54:	9829883a 	mov	r20,r19
  802c58:	1025883a 	mov	r18,r2
  802c5c:	6827883a 	mov	r19,r13
  802c60:	8809883a 	mov	r4,r17
  802c64:	900b883a 	mov	r5,r18
  802c68:	01800284 	movi	r6,10
  802c6c:	000f883a 	mov	r7,zero
  802c70:	080b3140 	call	80b314 <__umoddi3>
  802c74:	10800c04 	addi	r2,r2,48
  802c78:	8809883a 	mov	r4,r17
  802c7c:	900b883a 	mov	r5,r18
  802c80:	01800284 	movi	r6,10
  802c84:	000f883a 	mov	r7,zero
  802c88:	80bfffc5 	stb	r2,-1(r16)
  802c8c:	080acf80 	call	80acf8 <__udivdi3>
  802c90:	900d883a 	mov	r6,r18
  802c94:	880f883a 	mov	r7,r17
  802c98:	843fffc4 	addi	r16,r16,-1
  802c9c:	1023883a 	mov	r17,r2
  802ca0:	1825883a 	mov	r18,r3
  802ca4:	303fee1e 	bne	r6,zero,802c60 <___vfprintf_internal_r+0x1558>
  802ca8:	39c002a8 	cmpgeui	r7,r7,10
  802cac:	383fec1e 	bne	r7,zero,802c60 <___vfprintf_internal_r+0x1558>
  802cb0:	8023883a 	mov	r17,r16
  802cb4:	d8802704 	addi	r2,sp,156
  802cb8:	981b883a 	mov	r13,r19
  802cbc:	a825883a 	mov	r18,r21
  802cc0:	dc000717 	ldw	r16,28(sp)
  802cc4:	da000e17 	ldw	r8,56(sp)
  802cc8:	a027883a 	mov	r19,r20
  802ccc:	146bc83a 	sub	r21,r2,r17
  802cd0:	003d2706 	br	802170 <___vfprintf_internal_r+0xa68>
  802cd4:	0421c83a 	sub	r16,zero,r16
  802cd8:	d8800615 	stw	r2,24(sp)
  802cdc:	003d4506 	br	8021f4 <___vfprintf_internal_r+0xaec>
  802ce0:	202b883a 	mov	r21,r4
  802ce4:	057f1c16 	blt	zero,r21,802958 <___vfprintf_internal_r+0x1250>
  802ce8:	003f2506 	br	802980 <___vfprintf_internal_r+0x1278>
  802cec:	d8800417 	ldw	r2,16(sp)
  802cf0:	1080004c 	andi	r2,r2,1
  802cf4:	103f291e 	bne	r2,zero,80299c <___vfprintf_internal_r+0x1294>
  802cf8:	d9000817 	ldw	r4,32(sp)
  802cfc:	d9400717 	ldw	r5,28(sp)
  802d00:	2545c83a 	sub	r2,r4,r21
  802d04:	2179c83a 	sub	fp,r4,r5
  802d08:	102b883a 	mov	r21,r2
  802d0c:	e0bf430e 	bge	fp,r2,802a1c <___vfprintf_internal_r+0x1314>
  802d10:	e02b883a 	mov	r21,fp
  802d14:	003f4106 	br	802a1c <___vfprintf_internal_r+0x1314>
  802d18:	d9801a04 	addi	r6,sp,104
  802d1c:	900b883a 	mov	r5,r18
  802d20:	9809883a 	mov	r4,r19
  802d24:	0808ab40 	call	808ab4 <__sprint_r>
  802d28:	103b861e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802d2c:	da001b17 	ldw	r8,108(sp)
  802d30:	d8c01c17 	ldw	r3,112(sp)
  802d34:	dd802904 	addi	r22,sp,164
  802d38:	42000044 	addi	r8,r8,1
  802d3c:	df002704 	addi	fp,sp,156
  802d40:	003e9706 	br	8027a0 <___vfprintf_internal_r+0x1098>
  802d44:	bf000043 	ldbu	fp,1(r23)
  802d48:	63000814 	ori	r12,r12,32
  802d4c:	bdc00044 	addi	r23,r23,1
  802d50:	e2c03fcc 	andi	r11,fp,255
  802d54:	5ac0201c 	xori	r11,r11,128
  802d58:	5affe004 	addi	r11,r11,-128
  802d5c:	003ab606 	br	801838 <___vfprintf_internal_r+0x130>
  802d60:	d9801a04 	addi	r6,sp,104
  802d64:	900b883a 	mov	r5,r18
  802d68:	9809883a 	mov	r4,r19
  802d6c:	0808ab40 	call	808ab4 <__sprint_r>
  802d70:	103b741e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802d74:	d8c01c17 	ldw	r3,112(sp)
  802d78:	dd802704 	addi	r22,sp,156
  802d7c:	003d8306 	br	80238c <___vfprintf_internal_r+0xc84>
  802d80:	002b883a 	mov	r21,zero
  802d84:	003eff06 	br	802984 <___vfprintf_internal_r+0x127c>
  802d88:	408001f0 	cmpltui	r2,r8,7
  802d8c:	402b883a 	mov	r21,r8
  802d90:	1001a426 	beq	r2,zero,803424 <___vfprintf_internal_r+0x1d1c>
  802d94:	04402074 	movhi	r17,129
  802d98:	a829883a 	mov	r20,r21
  802d9c:	d8c00615 	stw	r3,24(sp)
  802da0:	8c438304 	addi	r17,r17,3596
  802da4:	003b1d06 	br	801a1c <___vfprintf_internal_r+0x314>
  802da8:	01c02074 	movhi	r7,129
  802dac:	a9000450 	cmplti	r4,r21,17
  802db0:	d8801b17 	ldw	r2,108(sp)
  802db4:	39c38604 	addi	r7,r7,3608
  802db8:	20017f1e 	bne	r4,zero,8033b8 <___vfprintf_internal_r+0x1cb0>
  802dbc:	dc000e15 	stw	r16,56(sp)
  802dc0:	07000404 	movi	fp,16
  802dc4:	3821883a 	mov	r16,r7
  802dc8:	00000406 	br	802ddc <___vfprintf_internal_r+0x16d4>
  802dcc:	b5800204 	addi	r22,r22,8
  802dd0:	ad7ffc04 	addi	r21,r21,-16
  802dd4:	a9000448 	cmpgei	r4,r21,17
  802dd8:	20017526 	beq	r4,zero,8033b0 <___vfprintf_internal_r+0x1ca8>
  802ddc:	10800044 	addi	r2,r2,1
  802de0:	18c00404 	addi	r3,r3,16
  802de4:	b4000015 	stw	r16,0(r22)
  802de8:	b7000115 	stw	fp,4(r22)
  802dec:	d8c01c15 	stw	r3,112(sp)
  802df0:	d8801b15 	stw	r2,108(sp)
  802df4:	11000208 	cmpgei	r4,r2,8
  802df8:	203ff426 	beq	r4,zero,802dcc <___vfprintf_internal_r+0x16c4>
  802dfc:	d9801a04 	addi	r6,sp,104
  802e00:	900b883a 	mov	r5,r18
  802e04:	9809883a 	mov	r4,r19
  802e08:	0808ab40 	call	808ab4 <__sprint_r>
  802e0c:	103b4d1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802e10:	d8c01c17 	ldw	r3,112(sp)
  802e14:	d8801b17 	ldw	r2,108(sp)
  802e18:	dd802704 	addi	r22,sp,156
  802e1c:	003fec06 	br	802dd0 <___vfprintf_internal_r+0x16c8>
  802e20:	d8800517 	ldw	r2,20(sp)
  802e24:	18800015 	stw	r2,0(r3)
  802e28:	003a6b06 	br	8017d8 <___vfprintf_internal_r+0xd0>
  802e2c:	d9801a04 	addi	r6,sp,104
  802e30:	900b883a 	mov	r5,r18
  802e34:	9809883a 	mov	r4,r19
  802e38:	0808ab40 	call	808ab4 <__sprint_r>
  802e3c:	103b411e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802e40:	d8c01c17 	ldw	r3,112(sp)
  802e44:	dd401b17 	ldw	r21,108(sp)
  802e48:	df002704 	addi	fp,sp,156
  802e4c:	003e3a06 	br	802738 <___vfprintf_internal_r+0x1030>
  802e50:	d9801a04 	addi	r6,sp,104
  802e54:	900b883a 	mov	r5,r18
  802e58:	9809883a 	mov	r4,r19
  802e5c:	0808ab40 	call	808ab4 <__sprint_r>
  802e60:	103b381e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802e64:	d8c01c17 	ldw	r3,112(sp)
  802e68:	dd401b17 	ldw	r21,108(sp)
  802e6c:	df002704 	addi	fp,sp,156
  802e70:	003e2606 	br	80270c <___vfprintf_internal_r+0x1004>
  802e74:	d8801b17 	ldw	r2,108(sp)
  802e78:	01002074 	movhi	r4,129
  802e7c:	21038504 	addi	r4,r4,3604
  802e80:	10800044 	addi	r2,r2,1
  802e84:	18c00044 	addi	r3,r3,1
  802e88:	b1000015 	stw	r4,0(r22)
  802e8c:	01000044 	movi	r4,1
  802e90:	d8801b15 	stw	r2,108(sp)
  802e94:	b1000115 	stw	r4,4(r22)
  802e98:	d8c01c15 	stw	r3,112(sp)
  802e9c:	10800208 	cmpgei	r2,r2,8
  802ea0:	103de11e 	bne	r2,zero,802628 <___vfprintf_internal_r+0xf20>
  802ea4:	b5800204 	addi	r22,r22,8
  802ea8:	003de706 	br	802648 <___vfprintf_internal_r+0xf40>
  802eac:	d9801a04 	addi	r6,sp,104
  802eb0:	900b883a 	mov	r5,r18
  802eb4:	9809883a 	mov	r4,r19
  802eb8:	da001115 	stw	r8,68(sp)
  802ebc:	db400f15 	stw	r13,60(sp)
  802ec0:	db800e15 	stw	r14,56(sp)
  802ec4:	0808ab40 	call	808ab4 <__sprint_r>
  802ec8:	103b1e1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  802ecc:	d8c01c17 	ldw	r3,112(sp)
  802ed0:	da001117 	ldw	r8,68(sp)
  802ed4:	db400f17 	ldw	r13,60(sp)
  802ed8:	db800e17 	ldw	r14,56(sp)
  802edc:	dd802704 	addi	r22,sp,156
  802ee0:	003adb06 	br	801a50 <___vfprintf_internal_r+0x348>
  802ee4:	8825883a 	mov	r18,r17
  802ee8:	003b1606 	br	801b44 <___vfprintf_internal_r+0x43c>
  802eec:	d9000917 	ldw	r4,36(sp)
  802ef0:	d9400a17 	ldw	r5,40(sp)
  802ef4:	da000615 	stw	r8,24(sp)
  802ef8:	200d883a 	mov	r6,r4
  802efc:	280f883a 	mov	r7,r5
  802f00:	db000415 	stw	r12,16(sp)
  802f04:	080e0740 	call	80e074 <__unorddf2>
  802f08:	db000417 	ldw	r12,16(sp)
  802f0c:	da000617 	ldw	r8,24(sp)
  802f10:	1002091e 	bne	r2,zero,803738 <___vfprintf_internal_r+0x2030>
  802f14:	057ff7c4 	movi	r21,-33
  802f18:	40bfffe0 	cmpeqi	r2,r8,-1
  802f1c:	e56a703a 	and	r21,fp,r21
  802f20:	1001ab1e 	bne	r2,zero,8035d0 <___vfprintf_internal_r+0x1ec8>
  802f24:	a88011d8 	cmpnei	r2,r21,71
  802f28:	10015726 	beq	r2,zero,803488 <___vfprintf_internal_r+0x1d80>
  802f2c:	60804014 	ori	r2,r12,256
  802f30:	d8800415 	stw	r2,16(sp)
  802f34:	d8800a17 	ldw	r2,40(sp)
  802f38:	10012d16 	blt	r2,zero,8033f0 <___vfprintf_internal_r+0x1ce8>
  802f3c:	dd000a17 	ldw	r20,40(sp)
  802f40:	d8000605 	stb	zero,24(sp)
  802f44:	e08019a0 	cmpeqi	r2,fp,102
  802f48:	d8800f15 	stw	r2,60(sp)
  802f4c:	1000c31e 	bne	r2,zero,80325c <___vfprintf_internal_r+0x1b54>
  802f50:	e08011a0 	cmpeqi	r2,fp,70
  802f54:	1000c11e 	bne	r2,zero,80325c <___vfprintf_internal_r+0x1b54>
  802f58:	a8801158 	cmpnei	r2,r21,69
  802f5c:	10016226 	beq	r2,zero,8034e8 <___vfprintf_internal_r+0x1de0>
  802f60:	d8801804 	addi	r2,sp,96
  802f64:	d8800315 	stw	r2,12(sp)
  802f68:	d9400917 	ldw	r5,36(sp)
  802f6c:	d8801504 	addi	r2,sp,84
  802f70:	d8800215 	stw	r2,8(sp)
  802f74:	d8801404 	addi	r2,sp,80
  802f78:	da000015 	stw	r8,0(sp)
  802f7c:	9809883a 	mov	r4,r19
  802f80:	d8800115 	stw	r2,4(sp)
  802f84:	01c00084 	movi	r7,2
  802f88:	a00d883a 	mov	r6,r20
  802f8c:	db000815 	stw	r12,32(sp)
  802f90:	da000715 	stw	r8,28(sp)
  802f94:	0803c4c0 	call	803c4c <_dtoa_r>
  802f98:	da000717 	ldw	r8,28(sp)
  802f9c:	e10019d8 	cmpnei	r4,fp,103
  802fa0:	db000817 	ldw	r12,32(sp)
  802fa4:	1023883a 	mov	r17,r2
  802fa8:	4007883a 	mov	r3,r8
  802fac:	2001621e 	bne	r4,zero,803538 <___vfprintf_internal_r+0x1e30>
  802fb0:	6080004c 	andi	r2,r12,1
  802fb4:	1001621e 	bne	r2,zero,803540 <___vfprintf_internal_r+0x1e38>
  802fb8:	d8801417 	ldw	r2,80(sp)
  802fbc:	ad4011e0 	cmpeqi	r21,r21,71
  802fc0:	d8800715 	stw	r2,28(sp)
  802fc4:	d8801817 	ldw	r2,96(sp)
  802fc8:	1445c83a 	sub	r2,r2,r17
  802fcc:	d8800815 	stw	r2,32(sp)
  802fd0:	a8000526 	beq	r21,zero,802fe8 <___vfprintf_internal_r+0x18e0>
  802fd4:	d8c00717 	ldw	r3,28(sp)
  802fd8:	18bfff50 	cmplti	r2,r3,-3
  802fdc:	1000011e 	bne	r2,zero,802fe4 <___vfprintf_internal_r+0x18dc>
  802fe0:	40c1670e 	bge	r8,r3,803580 <___vfprintf_internal_r+0x1e78>
  802fe4:	e73fff84 	addi	fp,fp,-2
  802fe8:	d8800717 	ldw	r2,28(sp)
  802fec:	df001645 	stb	fp,89(sp)
  802ff0:	157fffc4 	addi	r21,r2,-1
  802ff4:	dd401415 	stw	r21,80(sp)
  802ff8:	a801c316 	blt	r21,zero,803708 <___vfprintf_internal_r+0x2000>
  802ffc:	00800ac4 	movi	r2,43
  803000:	d8801685 	stb	r2,90(sp)
  803004:	a8800290 	cmplti	r2,r21,10
  803008:	1001b81e 	bne	r2,zero,8036ec <___vfprintf_internal_r+0x1fe4>
  80300c:	d98019c4 	addi	r6,sp,103
  803010:	9029883a 	mov	r20,r18
  803014:	dc400715 	stw	r17,28(sp)
  803018:	8025883a 	mov	r18,r16
  80301c:	db000f15 	stw	r12,60(sp)
  803020:	3021883a 	mov	r16,r6
  803024:	a809883a 	mov	r4,r21
  803028:	01400284 	movi	r5,10
  80302c:	080b9580 	call	80b958 <__modsi3>
  803030:	10800c04 	addi	r2,r2,48
  803034:	a809883a 	mov	r4,r21
  803038:	80bfffc5 	stb	r2,-1(r16)
  80303c:	01400284 	movi	r5,10
  803040:	080b8d80 	call	80b8d8 <__divsi3>
  803044:	a9001908 	cmpgei	r4,r21,100
  803048:	8023883a 	mov	r17,r16
  80304c:	102b883a 	mov	r21,r2
  803050:	843fffc4 	addi	r16,r16,-1
  803054:	203ff31e 	bne	r4,zero,803024 <___vfprintf_internal_r+0x191c>
  803058:	800d883a 	mov	r6,r16
  80305c:	11000c04 	addi	r4,r2,48
  803060:	9021883a 	mov	r16,r18
  803064:	a025883a 	mov	r18,r20
  803068:	8829883a 	mov	r20,r17
  80306c:	a0bfff84 	addi	r2,r20,-2
  803070:	313fffc5 	stb	r4,-1(r6)
  803074:	d8c019c4 	addi	r3,sp,103
  803078:	db000f17 	ldw	r12,60(sp)
  80307c:	dc400717 	ldw	r17,28(sp)
  803080:	10c1cd2e 	bgeu	r2,r3,8037b8 <___vfprintf_internal_r+0x20b0>
  803084:	d8c016c4 	addi	r3,sp,91
  803088:	00000106 	br	803090 <___vfprintf_internal_r+0x1988>
  80308c:	11000003 	ldbu	r4,0(r2)
  803090:	19000005 	stb	r4,0(r3)
  803094:	10800044 	addi	r2,r2,1
  803098:	d90019c4 	addi	r4,sp,103
  80309c:	18c00044 	addi	r3,r3,1
  8030a0:	113ffa1e 	bne	r2,r4,80308c <___vfprintf_internal_r+0x1984>
  8030a4:	d8801a44 	addi	r2,sp,105
  8030a8:	d8c016c4 	addi	r3,sp,91
  8030ac:	1505c83a 	sub	r2,r2,r20
  8030b0:	1885883a 	add	r2,r3,r2
  8030b4:	d8c01644 	addi	r3,sp,89
  8030b8:	10c5c83a 	sub	r2,r2,r3
  8030bc:	d8801015 	stw	r2,64(sp)
  8030c0:	d8c00817 	ldw	r3,32(sp)
  8030c4:	d9001017 	ldw	r4,64(sp)
  8030c8:	18800088 	cmpgei	r2,r3,2
  8030cc:	20eb883a 	add	r21,r4,r3
  8030d0:	10019226 	beq	r2,zero,80371c <___vfprintf_internal_r+0x2014>
  8030d4:	d8800b17 	ldw	r2,44(sp)
  8030d8:	a8ab883a 	add	r21,r21,r2
  8030dc:	a829883a 	mov	r20,r21
  8030e0:	a800010e 	bge	r21,zero,8030e8 <___vfprintf_internal_r+0x19e0>
  8030e4:	0029883a 	mov	r20,zero
  8030e8:	d8000715 	stw	zero,28(sp)
  8030ec:	00008e06 	br	803328 <___vfprintf_internal_r+0x1c20>
  8030f0:	880f883a 	mov	r7,r17
  8030f4:	10800044 	addi	r2,r2,1
  8030f8:	1d47883a 	add	r3,r3,r21
  8030fc:	b1c00015 	stw	r7,0(r22)
  803100:	003a7906 	br	801ae8 <___vfprintf_internal_r+0x3e0>
  803104:	d9801a04 	addi	r6,sp,104
  803108:	900b883a 	mov	r5,r18
  80310c:	9809883a 	mov	r4,r19
  803110:	0808ab40 	call	808ab4 <__sprint_r>
  803114:	103a8b1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  803118:	d8c01c17 	ldw	r3,112(sp)
  80311c:	dd802704 	addi	r22,sp,156
  803120:	003c8b06 	br	802350 <___vfprintf_internal_r+0xc48>
  803124:	d9801a04 	addi	r6,sp,104
  803128:	900b883a 	mov	r5,r18
  80312c:	9809883a 	mov	r4,r19
  803130:	da000e15 	stw	r8,56(sp)
  803134:	0808ab40 	call	808ab4 <__sprint_r>
  803138:	103a821e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  80313c:	d8c01c17 	ldw	r3,112(sp)
  803140:	da000e17 	ldw	r8,56(sp)
  803144:	dd802704 	addi	r22,sp,156
  803148:	003a5e06 	br	801ac4 <___vfprintf_internal_r+0x3bc>
  80314c:	8809883a 	mov	r4,r17
  803150:	db000415 	stw	r12,16(sp)
  803154:	d8c00615 	stw	r3,24(sp)
  803158:	08016700 	call	801670 <strlen>
  80315c:	db000417 	ldw	r12,16(sp)
  803160:	102b883a 	mov	r21,r2
  803164:	1029883a 	mov	r20,r2
  803168:	003a2c06 	br	801a1c <___vfprintf_internal_r+0x314>
  80316c:	d8800d17 	ldw	r2,52(sp)
  803170:	d9000b17 	ldw	r4,44(sp)
  803174:	b0800015 	stw	r2,0(r22)
  803178:	d8801b17 	ldw	r2,108(sp)
  80317c:	20c7883a 	add	r3,r4,r3
  803180:	b1000115 	stw	r4,4(r22)
  803184:	10800044 	addi	r2,r2,1
  803188:	d8c01c15 	stw	r3,112(sp)
  80318c:	d8801b15 	stw	r2,108(sp)
  803190:	11000208 	cmpgei	r4,r2,8
  803194:	2000bf1e 	bne	r4,zero,803494 <___vfprintf_internal_r+0x1d8c>
  803198:	b5800204 	addi	r22,r22,8
  80319c:	283d3c0e 	bge	r5,zero,802690 <___vfprintf_internal_r+0xf88>
  8031a0:	01c02074 	movhi	r7,129
  8031a4:	293ffc08 	cmpgei	r4,r5,-16
  8031a8:	39c38604 	addi	r7,r7,3608
  8031ac:	0179c83a 	sub	fp,zero,r5
  8031b0:	2001361e 	bne	r4,zero,80368c <___vfprintf_internal_r+0x1f84>
  8031b4:	dc000715 	stw	r16,28(sp)
  8031b8:	05400404 	movi	r21,16
  8031bc:	9021883a 	mov	r16,r18
  8031c0:	3825883a 	mov	r18,r7
  8031c4:	00000406 	br	8031d8 <___vfprintf_internal_r+0x1ad0>
  8031c8:	b5800204 	addi	r22,r22,8
  8031cc:	e73ffc04 	addi	fp,fp,-16
  8031d0:	e1800448 	cmpgei	r6,fp,17
  8031d4:	30012a26 	beq	r6,zero,803680 <___vfprintf_internal_r+0x1f78>
  8031d8:	10800044 	addi	r2,r2,1
  8031dc:	18c00404 	addi	r3,r3,16
  8031e0:	b4800015 	stw	r18,0(r22)
  8031e4:	b5400115 	stw	r21,4(r22)
  8031e8:	d8c01c15 	stw	r3,112(sp)
  8031ec:	d8801b15 	stw	r2,108(sp)
  8031f0:	11800208 	cmpgei	r6,r2,8
  8031f4:	303ff426 	beq	r6,zero,8031c8 <___vfprintf_internal_r+0x1ac0>
  8031f8:	d9801a04 	addi	r6,sp,104
  8031fc:	800b883a 	mov	r5,r16
  803200:	9809883a 	mov	r4,r19
  803204:	0808ab40 	call	808ab4 <__sprint_r>
  803208:	10015f1e 	bne	r2,zero,803788 <___vfprintf_internal_r+0x2080>
  80320c:	d8c01c17 	ldw	r3,112(sp)
  803210:	d8801b17 	ldw	r2,108(sp)
  803214:	dd802704 	addi	r22,sp,156
  803218:	003fec06 	br	8031cc <___vfprintf_internal_r+0x1ac4>
  80321c:	800f883a 	mov	r7,r16
  803220:	dc000717 	ldw	r16,28(sp)
  803224:	8817883a 	mov	r11,r17
  803228:	aa000044 	addi	r8,r21,1
  80322c:	e0800204 	addi	r2,fp,8
  803230:	1ac7883a 	add	r3,r3,r11
  803234:	e1c00015 	stw	r7,0(fp)
  803238:	e2c00115 	stw	r11,4(fp)
  80323c:	d8c01c15 	stw	r3,112(sp)
  803240:	da001b15 	stw	r8,108(sp)
  803244:	41000208 	cmpgei	r4,r8,8
  803248:	203eb31e 	bne	r4,zero,802d18 <___vfprintf_internal_r+0x1610>
  80324c:	42000044 	addi	r8,r8,1
  803250:	15800204 	addi	r22,r2,8
  803254:	1039883a 	mov	fp,r2
  803258:	003d5106 	br	8027a0 <___vfprintf_internal_r+0x1098>
  80325c:	d8801804 	addi	r2,sp,96
  803260:	d8800315 	stw	r2,12(sp)
  803264:	d9400917 	ldw	r5,36(sp)
  803268:	d8801504 	addi	r2,sp,84
  80326c:	d8800215 	stw	r2,8(sp)
  803270:	d8801404 	addi	r2,sp,80
  803274:	da000015 	stw	r8,0(sp)
  803278:	d8800115 	stw	r2,4(sp)
  80327c:	01c000c4 	movi	r7,3
  803280:	a00d883a 	mov	r6,r20
  803284:	9809883a 	mov	r4,r19
  803288:	db000815 	stw	r12,32(sp)
  80328c:	da000715 	stw	r8,28(sp)
  803290:	0803c4c0 	call	803c4c <_dtoa_r>
  803294:	da000717 	ldw	r8,28(sp)
  803298:	1023883a 	mov	r17,r2
  80329c:	db000817 	ldw	r12,32(sp)
  8032a0:	1207883a 	add	r3,r2,r8
  8032a4:	88800007 	ldb	r2,0(r17)
  8032a8:	10800c20 	cmpeqi	r2,r2,48
  8032ac:	1000661e 	bne	r2,zero,803448 <___vfprintf_internal_r+0x1d40>
  8032b0:	d8801417 	ldw	r2,80(sp)
  8032b4:	1893883a 	add	r9,r3,r2
  8032b8:	d9000917 	ldw	r4,36(sp)
  8032bc:	000d883a 	mov	r6,zero
  8032c0:	000f883a 	mov	r7,zero
  8032c4:	a00b883a 	mov	r5,r20
  8032c8:	da401115 	stw	r9,68(sp)
  8032cc:	da000815 	stw	r8,32(sp)
  8032d0:	db000715 	stw	r12,28(sp)
  8032d4:	080cd380 	call	80cd38 <__eqdf2>
  8032d8:	db000717 	ldw	r12,28(sp)
  8032dc:	da000817 	ldw	r8,32(sp)
  8032e0:	da401117 	ldw	r9,68(sp)
  8032e4:	1000981e 	bne	r2,zero,803548 <___vfprintf_internal_r+0x1e40>
  8032e8:	4805883a 	mov	r2,r9
  8032ec:	d8c01417 	ldw	r3,80(sp)
  8032f0:	1445c83a 	sub	r2,r2,r17
  8032f4:	ad4011d8 	cmpnei	r21,r21,71
  8032f8:	d8c00715 	stw	r3,28(sp)
  8032fc:	d8800815 	stw	r2,32(sp)
  803300:	a83f3426 	beq	r21,zero,802fd4 <___vfprintf_internal_r+0x18cc>
  803304:	d8800f17 	ldw	r2,60(sp)
  803308:	103f3726 	beq	r2,zero,802fe8 <___vfprintf_internal_r+0x18e0>
  80330c:	d8c00717 	ldw	r3,28(sp)
  803310:	6080004c 	andi	r2,r12,1
  803314:	1204b03a 	or	r2,r2,r8
  803318:	00c1130e 	bge	zero,r3,803768 <___vfprintf_internal_r+0x2060>
  80331c:	10010e1e 	bne	r2,zero,803758 <___vfprintf_internal_r+0x2050>
  803320:	dd400717 	ldw	r21,28(sp)
  803324:	a829883a 	mov	r20,r21
  803328:	d8800607 	ldb	r2,24(sp)
  80332c:	10008f26 	beq	r2,zero,80356c <___vfprintf_internal_r+0x1e64>
  803330:	00800b44 	movi	r2,45
  803334:	d8801345 	stb	r2,77(sp)
  803338:	d8800e17 	ldw	r2,56(sp)
  80333c:	0011883a 	mov	r8,zero
  803340:	d8800615 	stw	r2,24(sp)
  803344:	003b9206 	br	802190 <___vfprintf_internal_r+0xa88>
  803348:	04402074 	movhi	r17,129
  80334c:	8c437504 	addi	r17,r17,3540
  803350:	003a8b06 	br	801d80 <___vfprintf_internal_r+0x678>
  803354:	d8800617 	ldw	r2,24(sp)
  803358:	d8c00615 	stw	r3,24(sp)
  80335c:	15000017 	ldw	r20,0(r2)
  803360:	a02bd7fa 	srai	r21,r20,31
  803364:	a805883a 	mov	r2,r21
  803368:	003ae306 	br	801ef8 <___vfprintf_internal_r+0x7f0>
  80336c:	d8800617 	ldw	r2,24(sp)
  803370:	002b883a 	mov	r21,zero
  803374:	d8c00615 	stw	r3,24(sp)
  803378:	15000017 	ldw	r20,0(r2)
  80337c:	0005883a 	mov	r2,zero
  803380:	003a2406 	br	801c14 <___vfprintf_internal_r+0x50c>
  803384:	d8800617 	ldw	r2,24(sp)
  803388:	002b883a 	mov	r21,zero
  80338c:	d8c00615 	stw	r3,24(sp)
  803390:	15000017 	ldw	r20,0(r2)
  803394:	00800044 	movi	r2,1
  803398:	003a1e06 	br	801c14 <___vfprintf_internal_r+0x50c>
  80339c:	d8800617 	ldw	r2,24(sp)
  8033a0:	002b883a 	mov	r21,zero
  8033a4:	d8c00615 	stw	r3,24(sp)
  8033a8:	15000017 	ldw	r20,0(r2)
  8033ac:	003af406 	br	801f80 <___vfprintf_internal_r+0x878>
  8033b0:	800f883a 	mov	r7,r16
  8033b4:	dc000e17 	ldw	r16,56(sp)
  8033b8:	10800044 	addi	r2,r2,1
  8033bc:	1d47883a 	add	r3,r3,r21
  8033c0:	d8801b15 	stw	r2,108(sp)
  8033c4:	b1c00015 	stw	r7,0(r22)
  8033c8:	b5400115 	stw	r21,4(r22)
  8033cc:	d8c01c15 	stw	r3,112(sp)
  8033d0:	10800208 	cmpgei	r2,r2,8
  8033d4:	10003a1e 	bne	r2,zero,8034c0 <___vfprintf_internal_r+0x1db8>
  8033d8:	b5800204 	addi	r22,r22,8
  8033dc:	003d6c06 	br	802990 <___vfprintf_internal_r+0x1288>
  8033e0:	00800b44 	movi	r2,45
  8033e4:	d8801345 	stb	r2,77(sp)
  8033e8:	03400b44 	movi	r13,45
  8033ec:	003a6006 	br	801d70 <___vfprintf_internal_r+0x668>
  8033f0:	1520003c 	xorhi	r20,r2,32768
  8033f4:	00800b44 	movi	r2,45
  8033f8:	d8800605 	stb	r2,24(sp)
  8033fc:	003ed106 	br	802f44 <___vfprintf_internal_r+0x183c>
  803400:	d9801a04 	addi	r6,sp,104
  803404:	900b883a 	mov	r5,r18
  803408:	9809883a 	mov	r4,r19
  80340c:	0808ab40 	call	808ab4 <__sprint_r>
  803410:	1039cc1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  803414:	dd401417 	ldw	r21,80(sp)
  803418:	d8c01c17 	ldw	r3,112(sp)
  80341c:	dd802704 	addi	r22,sp,156
  803420:	003d6a06 	br	8029cc <___vfprintf_internal_r+0x12c4>
  803424:	05400184 	movi	r21,6
  803428:	003e5a06 	br	802d94 <___vfprintf_internal_r+0x168c>
  80342c:	d9801a04 	addi	r6,sp,104
  803430:	900b883a 	mov	r5,r18
  803434:	9809883a 	mov	r4,r19
  803438:	0808ab40 	call	808ab4 <__sprint_r>
  80343c:	0039c106 	br	801b44 <___vfprintf_internal_r+0x43c>
  803440:	d9401345 	stb	r5,77(sp)
  803444:	00396f06 	br	801a04 <___vfprintf_internal_r+0x2fc>
  803448:	d9000917 	ldw	r4,36(sp)
  80344c:	000d883a 	mov	r6,zero
  803450:	000f883a 	mov	r7,zero
  803454:	a00b883a 	mov	r5,r20
  803458:	d8c01115 	stw	r3,68(sp)
  80345c:	da000815 	stw	r8,32(sp)
  803460:	db000715 	stw	r12,28(sp)
  803464:	080cd380 	call	80cd38 <__eqdf2>
  803468:	db000717 	ldw	r12,28(sp)
  80346c:	da000817 	ldw	r8,32(sp)
  803470:	d8c01117 	ldw	r3,68(sp)
  803474:	103f8e26 	beq	r2,zero,8032b0 <___vfprintf_internal_r+0x1ba8>
  803478:	00800044 	movi	r2,1
  80347c:	1205c83a 	sub	r2,r2,r8
  803480:	d8801415 	stw	r2,80(sp)
  803484:	003f8b06 	br	8032b4 <___vfprintf_internal_r+0x1bac>
  803488:	403ea81e 	bne	r8,zero,802f2c <___vfprintf_internal_r+0x1824>
  80348c:	02000044 	movi	r8,1
  803490:	003ea606 	br	802f2c <___vfprintf_internal_r+0x1824>
  803494:	d9801a04 	addi	r6,sp,104
  803498:	900b883a 	mov	r5,r18
  80349c:	9809883a 	mov	r4,r19
  8034a0:	0808ab40 	call	808ab4 <__sprint_r>
  8034a4:	1039a71e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8034a8:	d9401417 	ldw	r5,80(sp)
  8034ac:	d8c01c17 	ldw	r3,112(sp)
  8034b0:	d8801b17 	ldw	r2,108(sp)
  8034b4:	dd802704 	addi	r22,sp,156
  8034b8:	283c750e 	bge	r5,zero,802690 <___vfprintf_internal_r+0xf88>
  8034bc:	003f3806 	br	8031a0 <___vfprintf_internal_r+0x1a98>
  8034c0:	d9801a04 	addi	r6,sp,104
  8034c4:	900b883a 	mov	r5,r18
  8034c8:	9809883a 	mov	r4,r19
  8034cc:	0808ab40 	call	808ab4 <__sprint_r>
  8034d0:	10399c1e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8034d4:	d8c01c17 	ldw	r3,112(sp)
  8034d8:	dd802704 	addi	r22,sp,156
  8034dc:	003d2c06 	br	802990 <___vfprintf_internal_r+0x1288>
  8034e0:	db000417 	ldw	r12,16(sp)
  8034e4:	003a9106 	br	801f2c <___vfprintf_internal_r+0x824>
  8034e8:	d8801804 	addi	r2,sp,96
  8034ec:	d8800315 	stw	r2,12(sp)
  8034f0:	d9400917 	ldw	r5,36(sp)
  8034f4:	d8801504 	addi	r2,sp,84
  8034f8:	40c00044 	addi	r3,r8,1
  8034fc:	d8800215 	stw	r2,8(sp)
  803500:	d8801404 	addi	r2,sp,80
  803504:	d8c00015 	stw	r3,0(sp)
  803508:	d8800115 	stw	r2,4(sp)
  80350c:	01c00084 	movi	r7,2
  803510:	a00d883a 	mov	r6,r20
  803514:	9809883a 	mov	r4,r19
  803518:	db001115 	stw	r12,68(sp)
  80351c:	da000815 	stw	r8,32(sp)
  803520:	d8c00715 	stw	r3,28(sp)
  803524:	0803c4c0 	call	803c4c <_dtoa_r>
  803528:	d8c00717 	ldw	r3,28(sp)
  80352c:	da000817 	ldw	r8,32(sp)
  803530:	db001117 	ldw	r12,68(sp)
  803534:	1023883a 	mov	r17,r2
  803538:	e08011d8 	cmpnei	r2,fp,71
  80353c:	103e9c26 	beq	r2,zero,802fb0 <___vfprintf_internal_r+0x18a8>
  803540:	88d3883a 	add	r9,r17,r3
  803544:	003f5c06 	br	8032b8 <___vfprintf_internal_r+0x1bb0>
  803548:	d8801817 	ldw	r2,96(sp)
  80354c:	127f672e 	bgeu	r2,r9,8032ec <___vfprintf_internal_r+0x1be4>
  803550:	01000c04 	movi	r4,48
  803554:	10c00044 	addi	r3,r2,1
  803558:	d8c01815 	stw	r3,96(sp)
  80355c:	11000005 	stb	r4,0(r2)
  803560:	d8801817 	ldw	r2,96(sp)
  803564:	127ffb36 	bltu	r2,r9,803554 <___vfprintf_internal_r+0x1e4c>
  803568:	003f6006 	br	8032ec <___vfprintf_internal_r+0x1be4>
  80356c:	d8800e17 	ldw	r2,56(sp)
  803570:	db401343 	ldbu	r13,77(sp)
  803574:	0011883a 	mov	r8,zero
  803578:	d8800615 	stw	r2,24(sp)
  80357c:	003b0006 	br	802180 <___vfprintf_internal_r+0xa78>
  803580:	d8800717 	ldw	r2,28(sp)
  803584:	d8c00817 	ldw	r3,32(sp)
  803588:	10c02216 	blt	r2,r3,803614 <___vfprintf_internal_r+0x1f0c>
  80358c:	6300004c 	andi	r12,r12,1
  803590:	60004f1e 	bne	r12,zero,8036d0 <___vfprintf_internal_r+0x1fc8>
  803594:	1029883a 	mov	r20,r2
  803598:	1000010e 	bge	r2,zero,8035a0 <___vfprintf_internal_r+0x1e98>
  80359c:	0029883a 	mov	r20,zero
  8035a0:	dd400717 	ldw	r21,28(sp)
  8035a4:	070019c4 	movi	fp,103
  8035a8:	003f5f06 	br	803328 <___vfprintf_internal_r+0x1c20>
  8035ac:	d9801a04 	addi	r6,sp,104
  8035b0:	900b883a 	mov	r5,r18
  8035b4:	9809883a 	mov	r4,r19
  8035b8:	0808ab40 	call	808ab4 <__sprint_r>
  8035bc:	1039611e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8035c0:	d8c01c17 	ldw	r3,112(sp)
  8035c4:	dd802704 	addi	r22,sp,156
  8035c8:	a83cee0e 	bge	r21,zero,802984 <___vfprintf_internal_r+0x127c>
  8035cc:	003dec06 	br	802d80 <___vfprintf_internal_r+0x1678>
  8035d0:	02000184 	movi	r8,6
  8035d4:	003e5506 	br	802f2c <___vfprintf_internal_r+0x1824>
  8035d8:	d9801a04 	addi	r6,sp,104
  8035dc:	900b883a 	mov	r5,r18
  8035e0:	9809883a 	mov	r4,r19
  8035e4:	0808ab40 	call	808ab4 <__sprint_r>
  8035e8:	1039561e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8035ec:	d8801417 	ldw	r2,80(sp)
  8035f0:	d9000817 	ldw	r4,32(sp)
  8035f4:	d8c01c17 	ldw	r3,112(sp)
  8035f8:	dd802704 	addi	r22,sp,156
  8035fc:	2085c83a 	sub	r2,r4,r2
  803600:	003d0606 	br	802a1c <___vfprintf_internal_r+0x1314>
  803604:	4029883a 	mov	r20,r8
  803608:	d8c00615 	stw	r3,24(sp)
  80360c:	402b883a 	mov	r21,r8
  803610:	00390206 	br	801a1c <___vfprintf_internal_r+0x314>
  803614:	d8800817 	ldw	r2,32(sp)
  803618:	d8c00b17 	ldw	r3,44(sp)
  80361c:	10eb883a 	add	r21,r2,r3
  803620:	d8800717 	ldw	r2,28(sp)
  803624:	00800316 	blt	zero,r2,803634 <___vfprintf_internal_r+0x1f2c>
  803628:	d8800717 	ldw	r2,28(sp)
  80362c:	a8abc83a 	sub	r21,r21,r2
  803630:	ad400044 	addi	r21,r21,1
  803634:	a829883a 	mov	r20,r21
  803638:	a8002a16 	blt	r21,zero,8036e4 <___vfprintf_internal_r+0x1fdc>
  80363c:	070019c4 	movi	fp,103
  803640:	003f3906 	br	803328 <___vfprintf_internal_r+0x1c20>
  803644:	d9401345 	stb	r5,77(sp)
  803648:	003a2306 	br	801ed8 <___vfprintf_internal_r+0x7d0>
  80364c:	d9401345 	stb	r5,77(sp)
  803650:	003b1806 	br	8022b4 <___vfprintf_internal_r+0xbac>
  803654:	d9401345 	stb	r5,77(sp)
  803658:	003a8e06 	br	802094 <___vfprintf_internal_r+0x98c>
  80365c:	d9401345 	stb	r5,77(sp)
  803660:	003a3d06 	br	801f58 <___vfprintf_internal_r+0x850>
  803664:	d9401345 	stb	r5,77(sp)
  803668:	003a7606 	br	802044 <___vfprintf_internal_r+0x93c>
  80366c:	d9401345 	stb	r5,77(sp)
  803670:	00399406 	br	801cc4 <___vfprintf_internal_r+0x5bc>
  803674:	00bfffc4 	movi	r2,-1
  803678:	d8800515 	stw	r2,20(sp)
  80367c:	00393406 	br	801b50 <___vfprintf_internal_r+0x448>
  803680:	900f883a 	mov	r7,r18
  803684:	8025883a 	mov	r18,r16
  803688:	dc000717 	ldw	r16,28(sp)
  80368c:	10800044 	addi	r2,r2,1
  803690:	1f07883a 	add	r3,r3,fp
  803694:	b1c00015 	stw	r7,0(r22)
  803698:	b7000115 	stw	fp,4(r22)
  80369c:	d8c01c15 	stw	r3,112(sp)
  8036a0:	d8801b15 	stw	r2,108(sp)
  8036a4:	11000208 	cmpgei	r4,r2,8
  8036a8:	203bf826 	beq	r4,zero,80268c <___vfprintf_internal_r+0xf84>
  8036ac:	d9801a04 	addi	r6,sp,104
  8036b0:	900b883a 	mov	r5,r18
  8036b4:	9809883a 	mov	r4,r19
  8036b8:	0808ab40 	call	808ab4 <__sprint_r>
  8036bc:	1039211e 	bne	r2,zero,801b44 <___vfprintf_internal_r+0x43c>
  8036c0:	d8c01c17 	ldw	r3,112(sp)
  8036c4:	d8801b17 	ldw	r2,108(sp)
  8036c8:	dd802704 	addi	r22,sp,156
  8036cc:	003bf006 	br	802690 <___vfprintf_internal_r+0xf88>
  8036d0:	d8800717 	ldw	r2,28(sp)
  8036d4:	d8c00b17 	ldw	r3,44(sp)
  8036d8:	10eb883a 	add	r21,r2,r3
  8036dc:	a829883a 	mov	r20,r21
  8036e0:	a83fd60e 	bge	r21,zero,80363c <___vfprintf_internal_r+0x1f34>
  8036e4:	0029883a 	mov	r20,zero
  8036e8:	003fd406 	br	80363c <___vfprintf_internal_r+0x1f34>
  8036ec:	00800c04 	movi	r2,48
  8036f0:	ad400c04 	addi	r21,r21,48
  8036f4:	d88016c5 	stb	r2,91(sp)
  8036f8:	00800104 	movi	r2,4
  8036fc:	dd401705 	stb	r21,92(sp)
  803700:	d8801015 	stw	r2,64(sp)
  803704:	003e6e06 	br	8030c0 <___vfprintf_internal_r+0x19b8>
  803708:	05400044 	movi	r21,1
  80370c:	a8abc83a 	sub	r21,r21,r2
  803710:	00800b44 	movi	r2,45
  803714:	d8801685 	stb	r2,90(sp)
  803718:	003e3a06 	br	803004 <___vfprintf_internal_r+0x18fc>
  80371c:	6080004c 	andi	r2,r12,1
  803720:	d8800715 	stw	r2,28(sp)
  803724:	103e6b1e 	bne	r2,zero,8030d4 <___vfprintf_internal_r+0x19cc>
  803728:	a829883a 	mov	r20,r21
  80372c:	a83efe0e 	bge	r21,zero,803328 <___vfprintf_internal_r+0x1c20>
  803730:	0029883a 	mov	r20,zero
  803734:	003efc06 	br	803328 <___vfprintf_internal_r+0x1c20>
  803738:	d8800a17 	ldw	r2,40(sp)
  80373c:	10001a16 	blt	r2,zero,8037a8 <___vfprintf_internal_r+0x20a0>
  803740:	db401343 	ldbu	r13,77(sp)
  803744:	e0801210 	cmplti	r2,fp,72
  803748:	1000141e 	bne	r2,zero,80379c <___vfprintf_internal_r+0x2094>
  80374c:	04402074 	movhi	r17,129
  803750:	8c437804 	addi	r17,r17,3552
  803754:	00398a06 	br	801d80 <___vfprintf_internal_r+0x678>
  803758:	d8800b17 	ldw	r2,44(sp)
  80375c:	18ab883a 	add	r21,r3,r2
  803760:	aa2b883a 	add	r21,r21,r8
  803764:	003ff006 	br	803728 <___vfprintf_internal_r+0x2020>
  803768:	1000031e 	bne	r2,zero,803778 <___vfprintf_internal_r+0x2070>
  80376c:	05000044 	movi	r20,1
  803770:	05400044 	movi	r21,1
  803774:	003eec06 	br	803328 <___vfprintf_internal_r+0x1c20>
  803778:	d8800b17 	ldw	r2,44(sp)
  80377c:	15400044 	addi	r21,r2,1
  803780:	aa2b883a 	add	r21,r21,r8
  803784:	003fe806 	br	803728 <___vfprintf_internal_r+0x2020>
  803788:	8025883a 	mov	r18,r16
  80378c:	0038ed06 	br	801b44 <___vfprintf_internal_r+0x43c>
  803790:	b005883a 	mov	r2,r22
  803794:	39c38604 	addi	r7,r7,3608
  803798:	003ea506 	br	803230 <___vfprintf_internal_r+0x1b28>
  80379c:	04402074 	movhi	r17,129
  8037a0:	8c437704 	addi	r17,r17,3548
  8037a4:	00397606 	br	801d80 <___vfprintf_internal_r+0x678>
  8037a8:	00800b44 	movi	r2,45
  8037ac:	d8801345 	stb	r2,77(sp)
  8037b0:	03400b44 	movi	r13,45
  8037b4:	003fe306 	br	803744 <___vfprintf_internal_r+0x203c>
  8037b8:	00800084 	movi	r2,2
  8037bc:	d8801015 	stw	r2,64(sp)
  8037c0:	003e3f06 	br	8030c0 <___vfprintf_internal_r+0x19b8>
  8037c4:	d8c00617 	ldw	r3,24(sp)
  8037c8:	1a000017 	ldw	r8,0(r3)
  8037cc:	18c00104 	addi	r3,r3,4
  8037d0:	4000010e 	bge	r8,zero,8037d8 <___vfprintf_internal_r+0x20d0>
  8037d4:	023fffc4 	movi	r8,-1
  8037d8:	bf000043 	ldbu	fp,1(r23)
  8037dc:	d8c00615 	stw	r3,24(sp)
  8037e0:	102f883a 	mov	r23,r2
  8037e4:	e2c03fcc 	andi	r11,fp,255
  8037e8:	5ac0201c 	xori	r11,r11,128
  8037ec:	5affe004 	addi	r11,r11,-128
  8037f0:	00381106 	br	801838 <___vfprintf_internal_r+0x130>

008037f4 <__vfprintf_internal>:
  8037f4:	00c02074 	movhi	r3,129
  8037f8:	2005883a 	mov	r2,r4
  8037fc:	190bb617 	ldw	r4,11992(r3)
  803800:	300f883a 	mov	r7,r6
  803804:	280d883a 	mov	r6,r5
  803808:	100b883a 	mov	r5,r2
  80380c:	08017081 	jmpi	801708 <___vfprintf_internal_r>

00803810 <__sbprintf>:
  803810:	2880030b 	ldhu	r2,12(r5)
  803814:	2b001917 	ldw	r12,100(r5)
  803818:	2ac0038b 	ldhu	r11,14(r5)
  80381c:	2a800717 	ldw	r10,28(r5)
  803820:	2a400917 	ldw	r9,36(r5)
  803824:	defee204 	addi	sp,sp,-1144
  803828:	da001a04 	addi	r8,sp,104
  80382c:	00c10004 	movi	r3,1024
  803830:	dc011a15 	stw	r16,1128(sp)
  803834:	10bfff4c 	andi	r2,r2,65533
  803838:	2821883a 	mov	r16,r5
  80383c:	d80b883a 	mov	r5,sp
  803840:	dc811c15 	stw	r18,1136(sp)
  803844:	dc411b15 	stw	r17,1132(sp)
  803848:	dfc11d15 	stw	ra,1140(sp)
  80384c:	2025883a 	mov	r18,r4
  803850:	d880030d 	sth	r2,12(sp)
  803854:	db001915 	stw	r12,100(sp)
  803858:	dac0038d 	sth	r11,14(sp)
  80385c:	da800715 	stw	r10,28(sp)
  803860:	da400915 	stw	r9,36(sp)
  803864:	da000015 	stw	r8,0(sp)
  803868:	da000415 	stw	r8,16(sp)
  80386c:	d8c00215 	stw	r3,8(sp)
  803870:	d8c00515 	stw	r3,20(sp)
  803874:	d8000615 	stw	zero,24(sp)
  803878:	08017080 	call	801708 <___vfprintf_internal_r>
  80387c:	1023883a 	mov	r17,r2
  803880:	10000d0e 	bge	r2,zero,8038b8 <__sbprintf+0xa8>
  803884:	d880030b 	ldhu	r2,12(sp)
  803888:	1080100c 	andi	r2,r2,64
  80388c:	10000326 	beq	r2,zero,80389c <__sbprintf+0x8c>
  803890:	8080030b 	ldhu	r2,12(r16)
  803894:	10801014 	ori	r2,r2,64
  803898:	8080030d 	sth	r2,12(r16)
  80389c:	8805883a 	mov	r2,r17
  8038a0:	dfc11d17 	ldw	ra,1140(sp)
  8038a4:	dc811c17 	ldw	r18,1136(sp)
  8038a8:	dc411b17 	ldw	r17,1132(sp)
  8038ac:	dc011a17 	ldw	r16,1128(sp)
  8038b0:	dec11e04 	addi	sp,sp,1144
  8038b4:	f800283a 	ret
  8038b8:	d80b883a 	mov	r5,sp
  8038bc:	9009883a 	mov	r4,r18
  8038c0:	08055c40 	call	8055c4 <_fflush_r>
  8038c4:	103fef26 	beq	r2,zero,803884 <__sbprintf+0x74>
  8038c8:	047fffc4 	movi	r17,-1
  8038cc:	003fed06 	br	803884 <__sbprintf+0x74>

008038d0 <__swsetup_r>:
  8038d0:	00802074 	movhi	r2,129
  8038d4:	108bb617 	ldw	r2,11992(r2)
  8038d8:	defffd04 	addi	sp,sp,-12
  8038dc:	dc400115 	stw	r17,4(sp)
  8038e0:	dc000015 	stw	r16,0(sp)
  8038e4:	dfc00215 	stw	ra,8(sp)
  8038e8:	2023883a 	mov	r17,r4
  8038ec:	2821883a 	mov	r16,r5
  8038f0:	10000226 	beq	r2,zero,8038fc <__swsetup_r+0x2c>
  8038f4:	10c00e17 	ldw	r3,56(r2)
  8038f8:	18003326 	beq	r3,zero,8039c8 <__swsetup_r+0xf8>
  8038fc:	8180030b 	ldhu	r6,12(r16)
  803900:	30c0020c 	andi	r3,r6,8
  803904:	3005883a 	mov	r2,r6
  803908:	18000f26 	beq	r3,zero,803948 <__swsetup_r+0x78>
  80390c:	80c00417 	ldw	r3,16(r16)
  803910:	18001626 	beq	r3,zero,80396c <__swsetup_r+0x9c>
  803914:	1100004c 	andi	r4,r2,1
  803918:	20001f1e 	bne	r4,zero,803998 <__swsetup_r+0xc8>
  80391c:	1100008c 	andi	r4,r2,2
  803920:	20002c1e 	bne	r4,zero,8039d4 <__swsetup_r+0x104>
  803924:	81000517 	ldw	r4,20(r16)
  803928:	81000215 	stw	r4,8(r16)
  80392c:	18001f26 	beq	r3,zero,8039ac <__swsetup_r+0xdc>
  803930:	0005883a 	mov	r2,zero
  803934:	dfc00217 	ldw	ra,8(sp)
  803938:	dc400117 	ldw	r17,4(sp)
  80393c:	dc000017 	ldw	r16,0(sp)
  803940:	dec00304 	addi	sp,sp,12
  803944:	f800283a 	ret
  803948:	3080040c 	andi	r2,r6,16
  80394c:	10003126 	beq	r2,zero,803a14 <__swsetup_r+0x144>
  803950:	3080010c 	andi	r2,r6,4
  803954:	1000211e 	bne	r2,zero,8039dc <__swsetup_r+0x10c>
  803958:	80c00417 	ldw	r3,16(r16)
  80395c:	30800214 	ori	r2,r6,8
  803960:	8080030d 	sth	r2,12(r16)
  803964:	100d883a 	mov	r6,r2
  803968:	183fea1e 	bne	r3,zero,803914 <__swsetup_r+0x44>
  80396c:	1100a00c 	andi	r4,r2,640
  803970:	21008020 	cmpeqi	r4,r4,512
  803974:	203fe71e 	bne	r4,zero,803914 <__swsetup_r+0x44>
  803978:	8809883a 	mov	r4,r17
  80397c:	800b883a 	mov	r5,r16
  803980:	080647c0 	call	80647c <__smakebuf_r>
  803984:	8180030b 	ldhu	r6,12(r16)
  803988:	80c00417 	ldw	r3,16(r16)
  80398c:	3005883a 	mov	r2,r6
  803990:	1100004c 	andi	r4,r2,1
  803994:	203fe126 	beq	r4,zero,80391c <__swsetup_r+0x4c>
  803998:	81000517 	ldw	r4,20(r16)
  80399c:	80000215 	stw	zero,8(r16)
  8039a0:	0109c83a 	sub	r4,zero,r4
  8039a4:	81000615 	stw	r4,24(r16)
  8039a8:	183fe11e 	bne	r3,zero,803930 <__swsetup_r+0x60>
  8039ac:	10c0200c 	andi	r3,r2,128
  8039b0:	0005883a 	mov	r2,zero
  8039b4:	183fdf26 	beq	r3,zero,803934 <__swsetup_r+0x64>
  8039b8:	31801014 	ori	r6,r6,64
  8039bc:	8180030d 	sth	r6,12(r16)
  8039c0:	00bfffc4 	movi	r2,-1
  8039c4:	003fdb06 	br	803934 <__swsetup_r+0x64>
  8039c8:	1009883a 	mov	r4,r2
  8039cc:	08059580 	call	805958 <__sinit>
  8039d0:	003fca06 	br	8038fc <__swsetup_r+0x2c>
  8039d4:	0009883a 	mov	r4,zero
  8039d8:	003fd306 	br	803928 <__swsetup_r+0x58>
  8039dc:	81400c17 	ldw	r5,48(r16)
  8039e0:	28000626 	beq	r5,zero,8039fc <__swsetup_r+0x12c>
  8039e4:	80801004 	addi	r2,r16,64
  8039e8:	28800326 	beq	r5,r2,8039f8 <__swsetup_r+0x128>
  8039ec:	8809883a 	mov	r4,r17
  8039f0:	0805abc0 	call	805abc <_free_r>
  8039f4:	8180030b 	ldhu	r6,12(r16)
  8039f8:	80000c15 	stw	zero,48(r16)
  8039fc:	80c00417 	ldw	r3,16(r16)
  803a00:	00bff6c4 	movi	r2,-37
  803a04:	118c703a 	and	r6,r2,r6
  803a08:	80000115 	stw	zero,4(r16)
  803a0c:	80c00015 	stw	r3,0(r16)
  803a10:	003fd206 	br	80395c <__swsetup_r+0x8c>
  803a14:	00800244 	movi	r2,9
  803a18:	88800015 	stw	r2,0(r17)
  803a1c:	31801014 	ori	r6,r6,64
  803a20:	8180030d 	sth	r6,12(r16)
  803a24:	00bfffc4 	movi	r2,-1
  803a28:	003fc206 	br	803934 <__swsetup_r+0x64>

00803a2c <quorem>:
  803a2c:	defff204 	addi	sp,sp,-56
  803a30:	dc400515 	stw	r17,20(sp)
  803a34:	20800417 	ldw	r2,16(r4)
  803a38:	2c400417 	ldw	r17,16(r5)
  803a3c:	dfc00d15 	stw	ra,52(sp)
  803a40:	df000c15 	stw	fp,48(sp)
  803a44:	ddc00b15 	stw	r23,44(sp)
  803a48:	dd800a15 	stw	r22,40(sp)
  803a4c:	dd400915 	stw	r21,36(sp)
  803a50:	dd000815 	stw	r20,32(sp)
  803a54:	dcc00715 	stw	r19,28(sp)
  803a58:	dc800615 	stw	r18,24(sp)
  803a5c:	dc000415 	stw	r16,16(sp)
  803a60:	d9000115 	stw	r4,4(sp)
  803a64:	d9400215 	stw	r5,8(sp)
  803a68:	14407616 	blt	r2,r17,803c44 <quorem+0x218>
  803a6c:	8c7fffc4 	addi	r17,r17,-1
  803a70:	882a90ba 	slli	r21,r17,2
  803a74:	2f000504 	addi	fp,r5,20
  803a78:	25800504 	addi	r22,r4,20
  803a7c:	e565883a 	add	r18,fp,r21
  803a80:	b545883a 	add	r2,r22,r21
  803a84:	95c00017 	ldw	r23,0(r18)
  803a88:	15000017 	ldw	r20,0(r2)
  803a8c:	dd800015 	stw	r22,0(sp)
  803a90:	bdc00044 	addi	r23,r23,1
  803a94:	b80b883a 	mov	r5,r23
  803a98:	a009883a 	mov	r4,r20
  803a9c:	d8800315 	stw	r2,12(sp)
  803aa0:	080b9cc0 	call	80b9cc <__udivsi3>
  803aa4:	1021883a 	mov	r16,r2
  803aa8:	a5c02f36 	bltu	r20,r23,803b68 <quorem+0x13c>
  803aac:	e029883a 	mov	r20,fp
  803ab0:	002b883a 	mov	r21,zero
  803ab4:	002f883a 	mov	r23,zero
  803ab8:	a4c00017 	ldw	r19,0(r20)
  803abc:	800b883a 	mov	r5,r16
  803ac0:	b5800104 	addi	r22,r22,4
  803ac4:	993fffcc 	andi	r4,r19,65535
  803ac8:	08015040 	call	801504 <__mulsi3>
  803acc:	9808d43a 	srli	r4,r19,16
  803ad0:	800b883a 	mov	r5,r16
  803ad4:	156b883a 	add	r21,r2,r21
  803ad8:	08015040 	call	801504 <__mulsi3>
  803adc:	b0ffff17 	ldw	r3,-4(r22)
  803ae0:	a80ad43a 	srli	r5,r21,16
  803ae4:	a93fffcc 	andi	r4,r21,65535
  803ae8:	19bfffcc 	andi	r6,r3,65535
  803aec:	b909c83a 	sub	r4,r23,r4
  803af0:	2189883a 	add	r4,r4,r6
  803af4:	1806d43a 	srli	r3,r3,16
  803af8:	1145883a 	add	r2,r2,r5
  803afc:	200bd43a 	srai	r5,r4,16
  803b00:	11bfffcc 	andi	r6,r2,65535
  803b04:	1987c83a 	sub	r3,r3,r6
  803b08:	1947883a 	add	r3,r3,r5
  803b0c:	180a943a 	slli	r5,r3,16
  803b10:	213fffcc 	andi	r4,r4,65535
  803b14:	a5000104 	addi	r20,r20,4
  803b18:	2908b03a 	or	r4,r5,r4
  803b1c:	b13fff15 	stw	r4,-4(r22)
  803b20:	102ad43a 	srli	r21,r2,16
  803b24:	182fd43a 	srai	r23,r3,16
  803b28:	953fe32e 	bgeu	r18,r20,803ab8 <quorem+0x8c>
  803b2c:	d8c00317 	ldw	r3,12(sp)
  803b30:	18800017 	ldw	r2,0(r3)
  803b34:	10000c1e 	bne	r2,zero,803b68 <quorem+0x13c>
  803b38:	d8800017 	ldw	r2,0(sp)
  803b3c:	1d7fff04 	addi	r21,r3,-4
  803b40:	15400436 	bltu	r2,r21,803b54 <quorem+0x128>
  803b44:	00000606 	br	803b60 <quorem+0x134>
  803b48:	d8800017 	ldw	r2,0(sp)
  803b4c:	8c7fffc4 	addi	r17,r17,-1
  803b50:	1540032e 	bgeu	r2,r21,803b60 <quorem+0x134>
  803b54:	a8800017 	ldw	r2,0(r21)
  803b58:	ad7fff04 	addi	r21,r21,-4
  803b5c:	103ffa26 	beq	r2,zero,803b48 <quorem+0x11c>
  803b60:	d8800117 	ldw	r2,4(sp)
  803b64:	14400415 	stw	r17,16(r2)
  803b68:	d9400217 	ldw	r5,8(sp)
  803b6c:	d9000117 	ldw	r4,4(sp)
  803b70:	0807b9c0 	call	807b9c <__mcmp>
  803b74:	10002616 	blt	r2,zero,803c10 <quorem+0x1e4>
  803b78:	d9800017 	ldw	r6,0(sp)
  803b7c:	84000044 	addi	r16,r16,1
  803b80:	0007883a 	mov	r3,zero
  803b84:	e1000017 	ldw	r4,0(fp)
  803b88:	31400017 	ldw	r5,0(r6)
  803b8c:	31800104 	addi	r6,r6,4
  803b90:	20bfffcc 	andi	r2,r4,65535
  803b94:	1887c83a 	sub	r3,r3,r2
  803b98:	28bfffcc 	andi	r2,r5,65535
  803b9c:	1885883a 	add	r2,r3,r2
  803ba0:	2008d43a 	srli	r4,r4,16
  803ba4:	2806d43a 	srli	r3,r5,16
  803ba8:	100fd43a 	srai	r7,r2,16
  803bac:	117fffcc 	andi	r5,r2,65535
  803bb0:	1907c83a 	sub	r3,r3,r4
  803bb4:	19c7883a 	add	r3,r3,r7
  803bb8:	1804943a 	slli	r2,r3,16
  803bbc:	e7000104 	addi	fp,fp,4
  803bc0:	1807d43a 	srai	r3,r3,16
  803bc4:	1144b03a 	or	r2,r2,r5
  803bc8:	30bfff15 	stw	r2,-4(r6)
  803bcc:	973fed2e 	bgeu	r18,fp,803b84 <quorem+0x158>
  803bd0:	880490ba 	slli	r2,r17,2
  803bd4:	d9000017 	ldw	r4,0(sp)
  803bd8:	2085883a 	add	r2,r4,r2
  803bdc:	10c00017 	ldw	r3,0(r2)
  803be0:	18000b1e 	bne	r3,zero,803c10 <quorem+0x1e4>
  803be4:	10bfff04 	addi	r2,r2,-4
  803be8:	20800436 	bltu	r4,r2,803bfc <quorem+0x1d0>
  803bec:	00000606 	br	803c08 <quorem+0x1dc>
  803bf0:	d8c00017 	ldw	r3,0(sp)
  803bf4:	8c7fffc4 	addi	r17,r17,-1
  803bf8:	1880032e 	bgeu	r3,r2,803c08 <quorem+0x1dc>
  803bfc:	10c00017 	ldw	r3,0(r2)
  803c00:	10bfff04 	addi	r2,r2,-4
  803c04:	183ffa26 	beq	r3,zero,803bf0 <quorem+0x1c4>
  803c08:	d8800117 	ldw	r2,4(sp)
  803c0c:	14400415 	stw	r17,16(r2)
  803c10:	8005883a 	mov	r2,r16
  803c14:	dfc00d17 	ldw	ra,52(sp)
  803c18:	df000c17 	ldw	fp,48(sp)
  803c1c:	ddc00b17 	ldw	r23,44(sp)
  803c20:	dd800a17 	ldw	r22,40(sp)
  803c24:	dd400917 	ldw	r21,36(sp)
  803c28:	dd000817 	ldw	r20,32(sp)
  803c2c:	dcc00717 	ldw	r19,28(sp)
  803c30:	dc800617 	ldw	r18,24(sp)
  803c34:	dc400517 	ldw	r17,20(sp)
  803c38:	dc000417 	ldw	r16,16(sp)
  803c3c:	dec00e04 	addi	sp,sp,56
  803c40:	f800283a 	ret
  803c44:	0005883a 	mov	r2,zero
  803c48:	003ff206 	br	803c14 <quorem+0x1e8>

00803c4c <_dtoa_r>:
  803c4c:	20801017 	ldw	r2,64(r4)
  803c50:	deffe204 	addi	sp,sp,-120
  803c54:	ddc01b15 	stw	r23,108(sp)
  803c58:	dd001815 	stw	r20,96(sp)
  803c5c:	dc801615 	stw	r18,88(sp)
  803c60:	dc401515 	stw	r17,84(sp)
  803c64:	dc001415 	stw	r16,80(sp)
  803c68:	dfc01d15 	stw	ra,116(sp)
  803c6c:	df001c15 	stw	fp,112(sp)
  803c70:	dd801a15 	stw	r22,104(sp)
  803c74:	dd401915 	stw	r21,100(sp)
  803c78:	dcc01715 	stw	r19,92(sp)
  803c7c:	d9c00115 	stw	r7,4(sp)
  803c80:	dc002017 	ldw	r16,128(sp)
  803c84:	202f883a 	mov	r23,r4
  803c88:	3025883a 	mov	r18,r6
  803c8c:	2829883a 	mov	r20,r5
  803c90:	3023883a 	mov	r17,r6
  803c94:	10000826 	beq	r2,zero,803cb8 <_dtoa_r+0x6c>
  803c98:	21801117 	ldw	r6,68(r4)
  803c9c:	00c00044 	movi	r3,1
  803ca0:	100b883a 	mov	r5,r2
  803ca4:	1986983a 	sll	r3,r3,r6
  803ca8:	11800115 	stw	r6,4(r2)
  803cac:	10c00215 	stw	r3,8(r2)
  803cb0:	08072300 	call	807230 <_Bfree>
  803cb4:	b8001015 	stw	zero,64(r23)
  803cb8:	90018616 	blt	r18,zero,8042d4 <_dtoa_r+0x688>
  803cbc:	80000015 	stw	zero,0(r16)
  803cc0:	909ffc2c 	andhi	r2,r18,32752
  803cc4:	00dffc34 	movhi	r3,32752
  803cc8:	10c18b26 	beq	r2,r3,8042f8 <_dtoa_r+0x6ac>
  803ccc:	000d883a 	mov	r6,zero
  803cd0:	000f883a 	mov	r7,zero
  803cd4:	a009883a 	mov	r4,r20
  803cd8:	880b883a 	mov	r5,r17
  803cdc:	080cd380 	call	80cd38 <__eqdf2>
  803ce0:	1000181e 	bne	r2,zero,803d44 <_dtoa_r+0xf8>
  803ce4:	d8c01f17 	ldw	r3,124(sp)
  803ce8:	00800044 	movi	r2,1
  803cec:	18800015 	stw	r2,0(r3)
  803cf0:	d8802117 	ldw	r2,132(sp)
  803cf4:	10030b26 	beq	r2,zero,804924 <_dtoa_r+0xcd8>
  803cf8:	d8c02117 	ldw	r3,132(sp)
  803cfc:	00802074 	movhi	r2,129
  803d00:	10838544 	addi	r2,r2,3605
  803d04:	07002074 	movhi	fp,129
  803d08:	18800015 	stw	r2,0(r3)
  803d0c:	e7038504 	addi	fp,fp,3604
  803d10:	e005883a 	mov	r2,fp
  803d14:	dfc01d17 	ldw	ra,116(sp)
  803d18:	df001c17 	ldw	fp,112(sp)
  803d1c:	ddc01b17 	ldw	r23,108(sp)
  803d20:	dd801a17 	ldw	r22,104(sp)
  803d24:	dd401917 	ldw	r21,100(sp)
  803d28:	dd001817 	ldw	r20,96(sp)
  803d2c:	dcc01717 	ldw	r19,92(sp)
  803d30:	dc801617 	ldw	r18,88(sp)
  803d34:	dc401517 	ldw	r17,84(sp)
  803d38:	dc001417 	ldw	r16,80(sp)
  803d3c:	dec01e04 	addi	sp,sp,120
  803d40:	f800283a 	ret
  803d44:	d8801204 	addi	r2,sp,72
  803d48:	9020d53a 	srli	r16,r18,20
  803d4c:	d8800015 	stw	r2,0(sp)
  803d50:	d9c01304 	addi	r7,sp,76
  803d54:	a00b883a 	mov	r5,r20
  803d58:	880d883a 	mov	r6,r17
  803d5c:	b809883a 	mov	r4,r23
  803d60:	0807f800 	call	807f80 <__d2b>
  803d64:	102d883a 	mov	r22,r2
  803d68:	8001741e 	bne	r16,zero,80433c <_dtoa_r+0x6f0>
  803d6c:	df001217 	ldw	fp,72(sp)
  803d70:	dc001317 	ldw	r16,76(sp)
  803d74:	e421883a 	add	r16,fp,r16
  803d78:	80810c84 	addi	r2,r16,1074
  803d7c:	10c00850 	cmplti	r3,r2,33
  803d80:	1802f81e 	bne	r3,zero,804964 <_dtoa_r+0xd18>
  803d84:	01001004 	movi	r4,64
  803d88:	2085c83a 	sub	r2,r4,r2
  803d8c:	81010484 	addi	r4,r16,1042
  803d90:	90a4983a 	sll	r18,r18,r2
  803d94:	a108d83a 	srl	r4,r20,r4
  803d98:	9108b03a 	or	r4,r18,r4
  803d9c:	080e2040 	call	80e204 <__floatunsidf>
  803da0:	1009883a 	mov	r4,r2
  803da4:	017f8434 	movhi	r5,65040
  803da8:	00800044 	movi	r2,1
  803dac:	194b883a 	add	r5,r3,r5
  803db0:	843fffc4 	addi	r16,r16,-1
  803db4:	d8800915 	stw	r2,36(sp)
  803db8:	000d883a 	mov	r6,zero
  803dbc:	01cffe34 	movhi	r7,16376
  803dc0:	080d7400 	call	80d740 <__subdf3>
  803dc4:	0198dbf4 	movhi	r6,25455
  803dc8:	01cff4f4 	movhi	r7,16339
  803dcc:	3190d844 	addi	r6,r6,17249
  803dd0:	39e1e9c4 	addi	r7,r7,-30809
  803dd4:	1009883a 	mov	r4,r2
  803dd8:	180b883a 	mov	r5,r3
  803ddc:	080cf980 	call	80cf98 <__muldf3>
  803de0:	01a2d874 	movhi	r6,35681
  803de4:	01cff1f4 	movhi	r7,16327
  803de8:	31b22cc4 	addi	r6,r6,-14157
  803dec:	39e28a04 	addi	r7,r7,-30168
  803df0:	180b883a 	mov	r5,r3
  803df4:	1009883a 	mov	r4,r2
  803df8:	080ba8c0 	call	80ba8c <__adddf3>
  803dfc:	8009883a 	mov	r4,r16
  803e00:	1027883a 	mov	r19,r2
  803e04:	1825883a 	mov	r18,r3
  803e08:	080e1480 	call	80e148 <__floatsidf>
  803e0c:	019427f4 	movhi	r6,20639
  803e10:	01cff4f4 	movhi	r7,16339
  803e14:	319e7ec4 	addi	r6,r6,31227
  803e18:	39d104c4 	addi	r7,r7,17427
  803e1c:	1009883a 	mov	r4,r2
  803e20:	180b883a 	mov	r5,r3
  803e24:	080cf980 	call	80cf98 <__muldf3>
  803e28:	100d883a 	mov	r6,r2
  803e2c:	180f883a 	mov	r7,r3
  803e30:	9809883a 	mov	r4,r19
  803e34:	900b883a 	mov	r5,r18
  803e38:	080ba8c0 	call	80ba8c <__adddf3>
  803e3c:	1009883a 	mov	r4,r2
  803e40:	180b883a 	mov	r5,r3
  803e44:	1025883a 	mov	r18,r2
  803e48:	182b883a 	mov	r21,r3
  803e4c:	080e0c80 	call	80e0c8 <__fixdfsi>
  803e50:	000d883a 	mov	r6,zero
  803e54:	000f883a 	mov	r7,zero
  803e58:	9009883a 	mov	r4,r18
  803e5c:	a80b883a 	mov	r5,r21
  803e60:	1027883a 	mov	r19,r2
  803e64:	080cea80 	call	80cea8 <__ledf2>
  803e68:	1002a416 	blt	r2,zero,8048fc <_dtoa_r+0xcb0>
  803e6c:	e439c83a 	sub	fp,fp,r16
  803e70:	e0ffffc4 	addi	r3,fp,-1
  803e74:	988005e8 	cmpgeui	r2,r19,23
  803e78:	d8c00215 	stw	r3,8(sp)
  803e7c:	1002961e 	bne	r2,zero,8048d8 <_dtoa_r+0xc8c>
  803e80:	980690fa 	slli	r3,r19,3
  803e84:	00802074 	movhi	r2,129
  803e88:	1083ce04 	addi	r2,r2,3896
  803e8c:	10c5883a 	add	r2,r2,r3
  803e90:	11800017 	ldw	r6,0(r2)
  803e94:	11c00117 	ldw	r7,4(r2)
  803e98:	a009883a 	mov	r4,r20
  803e9c:	880b883a 	mov	r5,r17
  803ea0:	080cea80 	call	80cea8 <__ledf2>
  803ea4:	1002670e 	bge	r2,zero,804844 <_dtoa_r+0xbf8>
  803ea8:	d8000815 	stw	zero,32(sp)
  803eac:	e0bfffc4 	addi	r2,fp,-1
  803eb0:	9cffffc4 	addi	r19,r19,-1
  803eb4:	10028c16 	blt	r2,zero,8048e8 <_dtoa_r+0xc9c>
  803eb8:	d8000515 	stw	zero,20(sp)
  803ebc:	9802650e 	bge	r19,zero,804854 <_dtoa_r+0xc08>
  803ec0:	d8800517 	ldw	r2,20(sp)
  803ec4:	d8c00117 	ldw	r3,4(sp)
  803ec8:	dcc00315 	stw	r19,12(sp)
  803ecc:	14c5c83a 	sub	r2,r2,r19
  803ed0:	d8800515 	stw	r2,20(sp)
  803ed4:	04c5c83a 	sub	r2,zero,r19
  803ed8:	d8800715 	stw	r2,28(sp)
  803edc:	188002a8 	cmpgeui	r2,r3,10
  803ee0:	0027883a 	mov	r19,zero
  803ee4:	1002631e 	bne	r2,zero,804874 <_dtoa_r+0xc28>
  803ee8:	18800190 	cmplti	r2,r3,6
  803eec:	1002a11e 	bne	r2,zero,804974 <_dtoa_r+0xd28>
  803ef0:	18bfff04 	addi	r2,r3,-4
  803ef4:	d8800115 	stw	r2,4(sp)
  803ef8:	0021883a 	mov	r16,zero
  803efc:	d8c00117 	ldw	r3,4(sp)
  803f00:	18800120 	cmpeqi	r2,r3,4
  803f04:	1003721e 	bne	r2,zero,804cd0 <_dtoa_r+0x1084>
  803f08:	18800160 	cmpeqi	r2,r3,5
  803f0c:	10032f1e 	bne	r2,zero,804bcc <_dtoa_r+0xf80>
  803f10:	188000a0 	cmpeqi	r2,r3,2
  803f14:	10026326 	beq	r2,zero,8048a4 <_dtoa_r+0xc58>
  803f18:	d8000615 	stw	zero,24(sp)
  803f1c:	d8801e17 	ldw	r2,120(sp)
  803f20:	00833c0e 	bge	zero,r2,804c14 <_dtoa_r+0xfc8>
  803f24:	d8800b15 	stw	r2,44(sp)
  803f28:	d8800415 	stw	r2,16(sp)
  803f2c:	100d883a 	mov	r6,r2
  803f30:	b8001115 	stw	zero,68(r23)
  803f34:	30800610 	cmplti	r2,r6,24
  803f38:	1005161e 	bne	r2,zero,805394 <_dtoa_r+0x1748>
  803f3c:	00c00044 	movi	r3,1
  803f40:	00800104 	movi	r2,4
  803f44:	1085883a 	add	r2,r2,r2
  803f48:	11000504 	addi	r4,r2,20
  803f4c:	180b883a 	mov	r5,r3
  803f50:	18c00044 	addi	r3,r3,1
  803f54:	313ffb2e 	bgeu	r6,r4,803f44 <_dtoa_r+0x2f8>
  803f58:	b9401115 	stw	r5,68(r23)
  803f5c:	b809883a 	mov	r4,r23
  803f60:	080718c0 	call	80718c <_Balloc>
  803f64:	1039883a 	mov	fp,r2
  803f68:	1004f526 	beq	r2,zero,805340 <_dtoa_r+0x16f4>
  803f6c:	b8801015 	stw	r2,64(r23)
  803f70:	d8800417 	ldw	r2,16(sp)
  803f74:	108003e8 	cmpgeui	r2,r2,15
  803f78:	10010b1e 	bne	r2,zero,8043a8 <_dtoa_r+0x75c>
  803f7c:	80010a26 	beq	r16,zero,8043a8 <_dtoa_r+0x75c>
  803f80:	d9000317 	ldw	r4,12(sp)
  803f84:	0103a30e 	bge	zero,r4,804e14 <_dtoa_r+0x11c8>
  803f88:	208003cc 	andi	r2,r4,15
  803f8c:	100690fa 	slli	r3,r2,3
  803f90:	202bd13a 	srai	r21,r4,4
  803f94:	00802074 	movhi	r2,129
  803f98:	1083ce04 	addi	r2,r2,3896
  803f9c:	10c5883a 	add	r2,r2,r3
  803fa0:	a8c0040c 	andi	r3,r21,16
  803fa4:	12800017 	ldw	r10,0(r2)
  803fa8:	12400117 	ldw	r9,4(r2)
  803fac:	18034226 	beq	r3,zero,804cb8 <_dtoa_r+0x106c>
  803fb0:	00802074 	movhi	r2,129
  803fb4:	1083c404 	addi	r2,r2,3856
  803fb8:	11800817 	ldw	r6,32(r2)
  803fbc:	11c00917 	ldw	r7,36(r2)
  803fc0:	a009883a 	mov	r4,r20
  803fc4:	880b883a 	mov	r5,r17
  803fc8:	da400e15 	stw	r9,56(sp)
  803fcc:	da800d15 	stw	r10,52(sp)
  803fd0:	080c4040 	call	80c404 <__divdf3>
  803fd4:	da800d17 	ldw	r10,52(sp)
  803fd8:	da400e17 	ldw	r9,56(sp)
  803fdc:	ad4003cc 	andi	r21,r21,15
  803fe0:	d8800a15 	stw	r2,40(sp)
  803fe4:	d8c00c15 	stw	r3,48(sp)
  803fe8:	040000c4 	movi	r16,3
  803fec:	a8001126 	beq	r21,zero,804034 <_dtoa_r+0x3e8>
  803ff0:	04802074 	movhi	r18,129
  803ff4:	9483c404 	addi	r18,r18,3856
  803ff8:	5009883a 	mov	r4,r10
  803ffc:	480b883a 	mov	r5,r9
  804000:	a980004c 	andi	r6,r21,1
  804004:	30000626 	beq	r6,zero,804020 <_dtoa_r+0x3d4>
  804008:	91800017 	ldw	r6,0(r18)
  80400c:	91c00117 	ldw	r7,4(r18)
  804010:	84000044 	addi	r16,r16,1
  804014:	080cf980 	call	80cf98 <__muldf3>
  804018:	1009883a 	mov	r4,r2
  80401c:	180b883a 	mov	r5,r3
  804020:	a82bd07a 	srai	r21,r21,1
  804024:	94800204 	addi	r18,r18,8
  804028:	a83ff51e 	bne	r21,zero,804000 <_dtoa_r+0x3b4>
  80402c:	2015883a 	mov	r10,r4
  804030:	2813883a 	mov	r9,r5
  804034:	d9000a17 	ldw	r4,40(sp)
  804038:	d9400c17 	ldw	r5,48(sp)
  80403c:	500d883a 	mov	r6,r10
  804040:	480f883a 	mov	r7,r9
  804044:	080c4040 	call	80c404 <__divdf3>
  804048:	1025883a 	mov	r18,r2
  80404c:	d8c00a15 	stw	r3,40(sp)
  804050:	d8800817 	ldw	r2,32(sp)
  804054:	10000726 	beq	r2,zero,804074 <_dtoa_r+0x428>
  804058:	dd400a17 	ldw	r21,40(sp)
  80405c:	000d883a 	mov	r6,zero
  804060:	01cffc34 	movhi	r7,16368
  804064:	9009883a 	mov	r4,r18
  804068:	a80b883a 	mov	r5,r21
  80406c:	080cea80 	call	80cea8 <__ledf2>
  804070:	10045516 	blt	r2,zero,8051c8 <_dtoa_r+0x157c>
  804074:	8009883a 	mov	r4,r16
  804078:	080e1480 	call	80e148 <__floatsidf>
  80407c:	d9c00a17 	ldw	r7,40(sp)
  804080:	900d883a 	mov	r6,r18
  804084:	1009883a 	mov	r4,r2
  804088:	180b883a 	mov	r5,r3
  80408c:	080cf980 	call	80cf98 <__muldf3>
  804090:	000d883a 	mov	r6,zero
  804094:	01d00734 	movhi	r7,16412
  804098:	1009883a 	mov	r4,r2
  80409c:	180b883a 	mov	r5,r3
  8040a0:	080ba8c0 	call	80ba8c <__adddf3>
  8040a4:	d8800c15 	stw	r2,48(sp)
  8040a8:	00bf3034 	movhi	r2,64704
  8040ac:	1885883a 	add	r2,r3,r2
  8040b0:	d8800d15 	stw	r2,52(sp)
  8040b4:	d8800417 	ldw	r2,16(sp)
  8040b8:	10033926 	beq	r2,zero,804da0 <_dtoa_r+0x1154>
  8040bc:	d8800317 	ldw	r2,12(sp)
  8040c0:	d8801115 	stw	r2,68(sp)
  8040c4:	d8800417 	ldw	r2,16(sp)
  8040c8:	d8800e15 	stw	r2,56(sp)
  8040cc:	dc000a17 	ldw	r16,40(sp)
  8040d0:	9009883a 	mov	r4,r18
  8040d4:	800b883a 	mov	r5,r16
  8040d8:	080e0c80 	call	80e0c8 <__fixdfsi>
  8040dc:	d8c00e17 	ldw	r3,56(sp)
  8040e0:	d8801015 	stw	r2,64(sp)
  8040e4:	18ffffc4 	addi	r3,r3,-1
  8040e8:	180890fa 	slli	r4,r3,3
  8040ec:	00c02074 	movhi	r3,129
  8040f0:	18c3ce04 	addi	r3,r3,3896
  8040f4:	1907883a 	add	r3,r3,r4
  8040f8:	1b000017 	ldw	r12,0(r3)
  8040fc:	1b400117 	ldw	r13,4(r3)
  804100:	1009883a 	mov	r4,r2
  804104:	db000f15 	stw	r12,60(sp)
  804108:	db400a15 	stw	r13,40(sp)
  80410c:	080e1480 	call	80e148 <__floatsidf>
  804110:	9009883a 	mov	r4,r18
  804114:	800b883a 	mov	r5,r16
  804118:	100d883a 	mov	r6,r2
  80411c:	180f883a 	mov	r7,r3
  804120:	080d7400 	call	80d740 <__subdf3>
  804124:	dac01017 	ldw	r11,64(sp)
  804128:	102b883a 	mov	r21,r2
  80412c:	d8800617 	ldw	r2,24(sp)
  804130:	db400a17 	ldw	r13,40(sp)
  804134:	db000f17 	ldw	r12,60(sp)
  804138:	e4000044 	addi	r16,fp,1
  80413c:	1825883a 	mov	r18,r3
  804140:	5ac00c04 	addi	r11,r11,48
  804144:	1003c626 	beq	r2,zero,805060 <_dtoa_r+0x1414>
  804148:	600d883a 	mov	r6,r12
  80414c:	680f883a 	mov	r7,r13
  804150:	0009883a 	mov	r4,zero
  804154:	014ff834 	movhi	r5,16352
  804158:	dac00f15 	stw	r11,60(sp)
  80415c:	080c4040 	call	80c404 <__divdf3>
  804160:	d9800c17 	ldw	r6,48(sp)
  804164:	d9c00d17 	ldw	r7,52(sp)
  804168:	1009883a 	mov	r4,r2
  80416c:	180b883a 	mov	r5,r3
  804170:	080d7400 	call	80d740 <__subdf3>
  804174:	dac00f17 	ldw	r11,60(sp)
  804178:	a80d883a 	mov	r6,r21
  80417c:	900f883a 	mov	r7,r18
  804180:	e2c00005 	stb	r11,0(fp)
  804184:	1009883a 	mov	r4,r2
  804188:	180b883a 	mov	r5,r3
  80418c:	d8800a15 	stw	r2,40(sp)
  804190:	d8c00c15 	stw	r3,48(sp)
  804194:	080cdb80 	call	80cdb8 <__gedf2>
  804198:	00844116 	blt	zero,r2,8052a0 <_dtoa_r+0x1654>
  80419c:	0005883a 	mov	r2,zero
  8041a0:	dcc00f15 	stw	r19,60(sp)
  8041a4:	dd800d15 	stw	r22,52(sp)
  8041a8:	dcc00c17 	ldw	r19,48(sp)
  8041ac:	dd800e17 	ldw	r22,56(sp)
  8041b0:	dc400c15 	stw	r17,48(sp)
  8041b4:	ddc00e15 	stw	r23,56(sp)
  8041b8:	dc400a17 	ldw	r17,40(sp)
  8041bc:	dd000a15 	stw	r20,40(sp)
  8041c0:	1029883a 	mov	r20,r2
  8041c4:	00002606 	br	804260 <_dtoa_r+0x614>
  8041c8:	a5000044 	addi	r20,r20,1
  8041cc:	a5843d0e 	bge	r20,r22,8052c4 <_dtoa_r+0x1678>
  8041d0:	8809883a 	mov	r4,r17
  8041d4:	980b883a 	mov	r5,r19
  8041d8:	000d883a 	mov	r6,zero
  8041dc:	01d00934 	movhi	r7,16420
  8041e0:	080cf980 	call	80cf98 <__muldf3>
  8041e4:	000d883a 	mov	r6,zero
  8041e8:	01d00934 	movhi	r7,16420
  8041ec:	a809883a 	mov	r4,r21
  8041f0:	900b883a 	mov	r5,r18
  8041f4:	1023883a 	mov	r17,r2
  8041f8:	1827883a 	mov	r19,r3
  8041fc:	080cf980 	call	80cf98 <__muldf3>
  804200:	180b883a 	mov	r5,r3
  804204:	1009883a 	mov	r4,r2
  804208:	1825883a 	mov	r18,r3
  80420c:	102b883a 	mov	r21,r2
  804210:	080e0c80 	call	80e0c8 <__fixdfsi>
  804214:	1009883a 	mov	r4,r2
  804218:	102f883a 	mov	r23,r2
  80421c:	080e1480 	call	80e148 <__floatsidf>
  804220:	a809883a 	mov	r4,r21
  804224:	900b883a 	mov	r5,r18
  804228:	100d883a 	mov	r6,r2
  80422c:	180f883a 	mov	r7,r3
  804230:	080d7400 	call	80d740 <__subdf3>
  804234:	84000044 	addi	r16,r16,1
  804238:	ba000c04 	addi	r8,r23,48
  80423c:	823fffc5 	stb	r8,-1(r16)
  804240:	880d883a 	mov	r6,r17
  804244:	980f883a 	mov	r7,r19
  804248:	1009883a 	mov	r4,r2
  80424c:	180b883a 	mov	r5,r3
  804250:	102b883a 	mov	r21,r2
  804254:	1825883a 	mov	r18,r3
  804258:	080cea80 	call	80cea8 <__ledf2>
  80425c:	10040e16 	blt	r2,zero,805298 <_dtoa_r+0x164c>
  804260:	a80d883a 	mov	r6,r21
  804264:	900f883a 	mov	r7,r18
  804268:	0009883a 	mov	r4,zero
  80426c:	014ffc34 	movhi	r5,16368
  804270:	080d7400 	call	80d740 <__subdf3>
  804274:	880d883a 	mov	r6,r17
  804278:	980f883a 	mov	r7,r19
  80427c:	1009883a 	mov	r4,r2
  804280:	180b883a 	mov	r5,r3
  804284:	080cea80 	call	80cea8 <__ledf2>
  804288:	103fcf0e 	bge	r2,zero,8041c8 <_dtoa_r+0x57c>
  80428c:	dd800d17 	ldw	r22,52(sp)
  804290:	ddc00e17 	ldw	r23,56(sp)
  804294:	d8801117 	ldw	r2,68(sp)
  804298:	10800044 	addi	r2,r2,1
  80429c:	d8800315 	stw	r2,12(sp)
  8042a0:	00000106 	br	8042a8 <_dtoa_r+0x65c>
  8042a4:	e403ee26 	beq	fp,r16,805260 <_dtoa_r+0x1614>
  8042a8:	80ffffc3 	ldbu	r3,-1(r16)
  8042ac:	8025883a 	mov	r18,r16
  8042b0:	843fffc4 	addi	r16,r16,-1
  8042b4:	18803fcc 	andi	r2,r3,255
  8042b8:	1080201c 	xori	r2,r2,128
  8042bc:	10bfe004 	addi	r2,r2,-128
  8042c0:	10800e60 	cmpeqi	r2,r2,57
  8042c4:	103ff71e 	bne	r2,zero,8042a4 <_dtoa_r+0x658>
  8042c8:	18c00044 	addi	r3,r3,1
  8042cc:	80c00005 	stb	r3,0(r16)
  8042d0:	00015106 	br	804818 <_dtoa_r+0xbcc>
  8042d4:	04600034 	movhi	r17,32768
  8042d8:	8c7fffc4 	addi	r17,r17,-1
  8042dc:	9462703a 	and	r17,r18,r17
  8042e0:	00800044 	movi	r2,1
  8042e4:	8825883a 	mov	r18,r17
  8042e8:	80800015 	stw	r2,0(r16)
  8042ec:	00dffc34 	movhi	r3,32752
  8042f0:	909ffc2c 	andhi	r2,r18,32752
  8042f4:	10fe751e 	bne	r2,r3,803ccc <_dtoa_r+0x80>
  8042f8:	d8c01f17 	ldw	r3,124(sp)
  8042fc:	00800434 	movhi	r2,16
  804300:	10bfffc4 	addi	r2,r2,-1
  804304:	90a4703a 	and	r18,r18,r2
  804308:	0089c3c4 	movi	r2,9999
  80430c:	18800015 	stw	r2,0(r3)
  804310:	9528b03a 	or	r20,r18,r20
  804314:	a000121e 	bne	r20,zero,804360 <_dtoa_r+0x714>
  804318:	d8802117 	ldw	r2,132(sp)
  80431c:	07002074 	movhi	fp,129
  804320:	10041526 	beq	r2,zero,805378 <_dtoa_r+0x172c>
  804324:	00802074 	movhi	r2,129
  804328:	e7038f04 	addi	fp,fp,3644
  80432c:	10839104 	addi	r2,r2,3652
  804330:	d8c02117 	ldw	r3,132(sp)
  804334:	18800015 	stw	r2,0(r3)
  804338:	003e7506 	br	803d10 <_dtoa_r+0xc4>
  80433c:	01400434 	movhi	r5,16
  804340:	297fffc4 	addi	r5,r5,-1
  804344:	894a703a 	and	r5,r17,r5
  804348:	df001217 	ldw	fp,72(sp)
  80434c:	a009883a 	mov	r4,r20
  804350:	294ffc34 	orhi	r5,r5,16368
  804354:	843f0044 	addi	r16,r16,-1023
  804358:	d8000915 	stw	zero,36(sp)
  80435c:	003e9606 	br	803db8 <_dtoa_r+0x16c>
  804360:	d8802117 	ldw	r2,132(sp)
  804364:	07002074 	movhi	fp,129
  804368:	1002141e 	bne	r2,zero,804bbc <_dtoa_r+0xf70>
  80436c:	e7038e04 	addi	fp,fp,3640
  804370:	003e6706 	br	803d10 <_dtoa_r+0xc4>
  804374:	b8001115 	stw	zero,68(r23)
  804378:	000b883a 	mov	r5,zero
  80437c:	b809883a 	mov	r4,r23
  804380:	080718c0 	call	80718c <_Balloc>
  804384:	1039883a 	mov	fp,r2
  804388:	1003ed26 	beq	r2,zero,805340 <_dtoa_r+0x16f4>
  80438c:	b8801015 	stw	r2,64(r23)
  804390:	00bfffc4 	movi	r2,-1
  804394:	d8800415 	stw	r2,16(sp)
  804398:	d8800b15 	stw	r2,44(sp)
  80439c:	00800044 	movi	r2,1
  8043a0:	d8001e15 	stw	zero,120(sp)
  8043a4:	d8800615 	stw	r2,24(sp)
  8043a8:	d8801317 	ldw	r2,76(sp)
  8043ac:	10007216 	blt	r2,zero,804578 <_dtoa_r+0x92c>
  8043b0:	d9000317 	ldw	r4,12(sp)
  8043b4:	20c003c8 	cmpgei	r3,r4,15
  8043b8:	18006f1e 	bne	r3,zero,804578 <_dtoa_r+0x92c>
  8043bc:	200690fa 	slli	r3,r4,3
  8043c0:	00802074 	movhi	r2,129
  8043c4:	1083ce04 	addi	r2,r2,3896
  8043c8:	10c5883a 	add	r2,r2,r3
  8043cc:	10c00017 	ldw	r3,0(r2)
  8043d0:	14800117 	ldw	r18,4(r2)
  8043d4:	d8801e17 	ldw	r2,120(sp)
  8043d8:	d8c00115 	stw	r3,4(sp)
  8043dc:	1000150e 	bge	r2,zero,804434 <_dtoa_r+0x7e8>
  8043e0:	d8800417 	ldw	r2,16(sp)
  8043e4:	00801316 	blt	zero,r2,804434 <_dtoa_r+0x7e8>
  8043e8:	d8800417 	ldw	r2,16(sp)
  8043ec:	1002801e 	bne	r2,zero,804df0 <_dtoa_r+0x11a4>
  8043f0:	d9000117 	ldw	r4,4(sp)
  8043f4:	000d883a 	mov	r6,zero
  8043f8:	01d00534 	movhi	r7,16404
  8043fc:	900b883a 	mov	r5,r18
  804400:	080cf980 	call	80cf98 <__muldf3>
  804404:	100d883a 	mov	r6,r2
  804408:	180f883a 	mov	r7,r3
  80440c:	a009883a 	mov	r4,r20
  804410:	880b883a 	mov	r5,r17
  804414:	080cea80 	call	80cea8 <__ledf2>
  804418:	002b883a 	mov	r21,zero
  80441c:	0021883a 	mov	r16,zero
  804420:	00820f16 	blt	zero,r2,804c60 <_dtoa_r+0x1014>
  804424:	d8801e17 	ldw	r2,120(sp)
  804428:	e025883a 	mov	r18,fp
  80442c:	00a2303a 	nor	r17,zero,r2
  804430:	00021006 	br	804c74 <_dtoa_r+0x1028>
  804434:	dd400117 	ldw	r21,4(sp)
  804438:	900f883a 	mov	r7,r18
  80443c:	a009883a 	mov	r4,r20
  804440:	a80d883a 	mov	r6,r21
  804444:	880b883a 	mov	r5,r17
  804448:	080c4040 	call	80c404 <__divdf3>
  80444c:	180b883a 	mov	r5,r3
  804450:	1009883a 	mov	r4,r2
  804454:	080e0c80 	call	80e0c8 <__fixdfsi>
  804458:	1009883a 	mov	r4,r2
  80445c:	1027883a 	mov	r19,r2
  804460:	080e1480 	call	80e148 <__floatsidf>
  804464:	a80d883a 	mov	r6,r21
  804468:	900f883a 	mov	r7,r18
  80446c:	1009883a 	mov	r4,r2
  804470:	180b883a 	mov	r5,r3
  804474:	080cf980 	call	80cf98 <__muldf3>
  804478:	100d883a 	mov	r6,r2
  80447c:	a009883a 	mov	r4,r20
  804480:	880b883a 	mov	r5,r17
  804484:	180f883a 	mov	r7,r3
  804488:	080d7400 	call	80d740 <__subdf3>
  80448c:	d9800417 	ldw	r6,16(sp)
  804490:	1009883a 	mov	r4,r2
  804494:	98800c04 	addi	r2,r19,48
  804498:	e0800005 	stb	r2,0(fp)
  80449c:	30800060 	cmpeqi	r2,r6,1
  8044a0:	180b883a 	mov	r5,r3
  8044a4:	e4000044 	addi	r16,fp,1
  8044a8:	1002a91e 	bne	r2,zero,804f50 <_dtoa_r+0x1304>
  8044ac:	04400044 	movi	r17,1
  8044b0:	3027883a 	mov	r19,r6
  8044b4:	dd800215 	stw	r22,8(sp)
  8044b8:	ddc00415 	stw	r23,16(sp)
  8044bc:	00001c06 	br	804530 <_dtoa_r+0x8e4>
  8044c0:	a80d883a 	mov	r6,r21
  8044c4:	900f883a 	mov	r7,r18
  8044c8:	b809883a 	mov	r4,r23
  8044cc:	a00b883a 	mov	r5,r20
  8044d0:	080c4040 	call	80c404 <__divdf3>
  8044d4:	180b883a 	mov	r5,r3
  8044d8:	1009883a 	mov	r4,r2
  8044dc:	080e0c80 	call	80e0c8 <__fixdfsi>
  8044e0:	1009883a 	mov	r4,r2
  8044e4:	102d883a 	mov	r22,r2
  8044e8:	080e1480 	call	80e148 <__floatsidf>
  8044ec:	a80d883a 	mov	r6,r21
  8044f0:	900f883a 	mov	r7,r18
  8044f4:	1009883a 	mov	r4,r2
  8044f8:	180b883a 	mov	r5,r3
  8044fc:	080cf980 	call	80cf98 <__muldf3>
  804500:	b809883a 	mov	r4,r23
  804504:	a00b883a 	mov	r5,r20
  804508:	100d883a 	mov	r6,r2
  80450c:	180f883a 	mov	r7,r3
  804510:	080d7400 	call	80d740 <__subdf3>
  804514:	b1000c04 	addi	r4,r22,48
  804518:	81000005 	stb	r4,0(r16)
  80451c:	8c400044 	addi	r17,r17,1
  804520:	84000044 	addi	r16,r16,1
  804524:	1009883a 	mov	r4,r2
  804528:	180b883a 	mov	r5,r3
  80452c:	9c428526 	beq	r19,r17,804f44 <_dtoa_r+0x12f8>
  804530:	000d883a 	mov	r6,zero
  804534:	01d00934 	movhi	r7,16420
  804538:	080cf980 	call	80cf98 <__muldf3>
  80453c:	000d883a 	mov	r6,zero
  804540:	000f883a 	mov	r7,zero
  804544:	1009883a 	mov	r4,r2
  804548:	180b883a 	mov	r5,r3
  80454c:	102f883a 	mov	r23,r2
  804550:	1829883a 	mov	r20,r3
  804554:	080cd380 	call	80cd38 <__eqdf2>
  804558:	103fd91e 	bne	r2,zero,8044c0 <_dtoa_r+0x874>
  80455c:	d8800317 	ldw	r2,12(sp)
  804560:	dd800217 	ldw	r22,8(sp)
  804564:	ddc00417 	ldw	r23,16(sp)
  804568:	10800044 	addi	r2,r2,1
  80456c:	d8800315 	stw	r2,12(sp)
  804570:	8025883a 	mov	r18,r16
  804574:	0000a806 	br	804818 <_dtoa_r+0xbcc>
  804578:	d8c00617 	ldw	r3,24(sp)
  80457c:	1800ec26 	beq	r3,zero,804930 <_dtoa_r+0xce4>
  804580:	d8c00117 	ldw	r3,4(sp)
  804584:	18c00088 	cmpgei	r3,r3,2
  804588:	1801e926 	beq	r3,zero,804d30 <_dtoa_r+0x10e4>
  80458c:	d8800417 	ldw	r2,16(sp)
  804590:	157fffc4 	addi	r21,r2,-1
  804594:	d8800717 	ldw	r2,28(sp)
  804598:	1541c50e 	bge	r2,r21,804cb0 <_dtoa_r+0x1064>
  80459c:	d8800717 	ldw	r2,28(sp)
  8045a0:	dd400715 	stw	r21,28(sp)
  8045a4:	a885c83a 	sub	r2,r21,r2
  8045a8:	98a7883a 	add	r19,r19,r2
  8045ac:	002b883a 	mov	r21,zero
  8045b0:	d8800417 	ldw	r2,16(sp)
  8045b4:	10029516 	blt	r2,zero,80500c <_dtoa_r+0x13c0>
  8045b8:	d8c00517 	ldw	r3,20(sp)
  8045bc:	d9000217 	ldw	r4,8(sp)
  8045c0:	1825883a 	mov	r18,r3
  8045c4:	2089883a 	add	r4,r4,r2
  8045c8:	10c5883a 	add	r2,r2,r3
  8045cc:	d9000215 	stw	r4,8(sp)
  8045d0:	d8800515 	stw	r2,20(sp)
  8045d4:	01400044 	movi	r5,1
  8045d8:	b809883a 	mov	r4,r23
  8045dc:	08075fc0 	call	8075fc <__i2b>
  8045e0:	1021883a 	mov	r16,r2
  8045e4:	04800b0e 	bge	zero,r18,804614 <_dtoa_r+0x9c8>
  8045e8:	d8c00217 	ldw	r3,8(sp)
  8045ec:	00c0090e 	bge	zero,r3,804614 <_dtoa_r+0x9c8>
  8045f0:	9005883a 	mov	r2,r18
  8045f4:	1c81a616 	blt	r3,r18,804c90 <_dtoa_r+0x1044>
  8045f8:	d8c00517 	ldw	r3,20(sp)
  8045fc:	90a5c83a 	sub	r18,r18,r2
  804600:	1887c83a 	sub	r3,r3,r2
  804604:	d8c00515 	stw	r3,20(sp)
  804608:	d8c00217 	ldw	r3,8(sp)
  80460c:	1885c83a 	sub	r2,r3,r2
  804610:	d8800215 	stw	r2,8(sp)
  804614:	d8800717 	ldw	r2,28(sp)
  804618:	10001526 	beq	r2,zero,804670 <_dtoa_r+0xa24>
  80461c:	d8800617 	ldw	r2,24(sp)
  804620:	1001f626 	beq	r2,zero,804dfc <_dtoa_r+0x11b0>
  804624:	05400f0e 	bge	zero,r21,804664 <_dtoa_r+0xa18>
  804628:	800b883a 	mov	r5,r16
  80462c:	a80d883a 	mov	r6,r21
  804630:	b809883a 	mov	r4,r23
  804634:	08078fc0 	call	8078fc <__pow5mult>
  804638:	b00d883a 	mov	r6,r22
  80463c:	100b883a 	mov	r5,r2
  804640:	b809883a 	mov	r4,r23
  804644:	1021883a 	mov	r16,r2
  804648:	08076500 	call	807650 <__multiply>
  80464c:	b00b883a 	mov	r5,r22
  804650:	b809883a 	mov	r4,r23
  804654:	d8800915 	stw	r2,36(sp)
  804658:	08072300 	call	807230 <_Bfree>
  80465c:	d8800917 	ldw	r2,36(sp)
  804660:	102d883a 	mov	r22,r2
  804664:	d8800717 	ldw	r2,28(sp)
  804668:	154dc83a 	sub	r6,r2,r21
  80466c:	1542621e 	bne	r2,r21,804ff8 <_dtoa_r+0x13ac>
  804670:	01400044 	movi	r5,1
  804674:	b809883a 	mov	r4,r23
  804678:	08075fc0 	call	8075fc <__i2b>
  80467c:	102b883a 	mov	r21,r2
  804680:	04c0be16 	blt	zero,r19,80497c <_dtoa_r+0xd30>
  804684:	d8800117 	ldw	r2,4(sp)
  804688:	10800088 	cmpgei	r2,r2,2
  80468c:	10015226 	beq	r2,zero,804bd8 <_dtoa_r+0xf8c>
  804690:	0023883a 	mov	r17,zero
  804694:	00800044 	movi	r2,1
  804698:	9800c11e 	bne	r19,zero,8049a0 <_dtoa_r+0xd54>
  80469c:	d9400217 	ldw	r5,8(sp)
  8046a0:	1145883a 	add	r2,r2,r5
  8046a4:	108007cc 	andi	r2,r2,31
  8046a8:	1000a526 	beq	r2,zero,804940 <_dtoa_r+0xcf4>
  8046ac:	00c00804 	movi	r3,32
  8046b0:	1887c83a 	sub	r3,r3,r2
  8046b4:	19000150 	cmplti	r4,r3,5
  8046b8:	2003311e 	bne	r4,zero,805380 <_dtoa_r+0x1734>
  8046bc:	00c00704 	movi	r3,28
  8046c0:	1885c83a 	sub	r2,r3,r2
  8046c4:	d8c00517 	ldw	r3,20(sp)
  8046c8:	90a5883a 	add	r18,r18,r2
  8046cc:	1887883a 	add	r3,r3,r2
  8046d0:	2885883a 	add	r2,r5,r2
  8046d4:	d8c00515 	stw	r3,20(sp)
  8046d8:	d8800215 	stw	r2,8(sp)
  8046dc:	d8800517 	ldw	r2,20(sp)
  8046e0:	0080050e 	bge	zero,r2,8046f8 <_dtoa_r+0xaac>
  8046e4:	b00b883a 	mov	r5,r22
  8046e8:	100d883a 	mov	r6,r2
  8046ec:	b809883a 	mov	r4,r23
  8046f0:	0807a140 	call	807a14 <__lshift>
  8046f4:	102d883a 	mov	r22,r2
  8046f8:	d8800217 	ldw	r2,8(sp)
  8046fc:	0080050e 	bge	zero,r2,804714 <_dtoa_r+0xac8>
  804700:	a80b883a 	mov	r5,r21
  804704:	100d883a 	mov	r6,r2
  804708:	b809883a 	mov	r4,r23
  80470c:	0807a140 	call	807a14 <__lshift>
  804710:	102b883a 	mov	r21,r2
  804714:	d8800817 	ldw	r2,32(sp)
  804718:	1001161e 	bne	r2,zero,804b74 <_dtoa_r+0xf28>
  80471c:	d8800417 	ldw	r2,16(sp)
  804720:	0081040e 	bge	zero,r2,804b34 <_dtoa_r+0xee8>
  804724:	d8800617 	ldw	r2,24(sp)
  804728:	1000b01e 	bne	r2,zero,8049ec <_dtoa_r+0xda0>
  80472c:	d8800317 	ldw	r2,12(sp)
  804730:	10800044 	addi	r2,r2,1
  804734:	d8800315 	stw	r2,12(sp)
  804738:	dc800417 	ldw	r18,16(sp)
  80473c:	04400044 	movi	r17,1
  804740:	00000706 	br	804760 <_dtoa_r+0xb14>
  804744:	b00b883a 	mov	r5,r22
  804748:	000f883a 	mov	r7,zero
  80474c:	01800284 	movi	r6,10
  804750:	b809883a 	mov	r4,r23
  804754:	08072540 	call	807254 <__multadd>
  804758:	102d883a 	mov	r22,r2
  80475c:	8c400044 	addi	r17,r17,1
  804760:	a80b883a 	mov	r5,r21
  804764:	b009883a 	mov	r4,r22
  804768:	0803a2c0 	call	803a2c <quorem>
  80476c:	10c00c04 	addi	r3,r2,48
  804770:	e445883a 	add	r2,fp,r17
  804774:	10ffffc5 	stb	r3,-1(r2)
  804778:	8cbff216 	blt	r17,r18,804744 <_dtoa_r+0xaf8>
  80477c:	d8800417 	ldw	r2,16(sp)
  804780:	0081510e 	bge	zero,r2,804cc8 <_dtoa_r+0x107c>
  804784:	e0a5883a 	add	r18,fp,r2
  804788:	0023883a 	mov	r17,zero
  80478c:	b00b883a 	mov	r5,r22
  804790:	01800044 	movi	r6,1
  804794:	b809883a 	mov	r4,r23
  804798:	d8c00115 	stw	r3,4(sp)
  80479c:	0807a140 	call	807a14 <__lshift>
  8047a0:	1009883a 	mov	r4,r2
  8047a4:	a80b883a 	mov	r5,r21
  8047a8:	102d883a 	mov	r22,r2
  8047ac:	0807b9c0 	call	807b9c <__mcmp>
  8047b0:	913fffc3 	ldbu	r4,-1(r18)
  8047b4:	00800416 	blt	zero,r2,8047c8 <_dtoa_r+0xb7c>
  8047b8:	00014806 	br	804cdc <_dtoa_r+0x1090>
  8047bc:	e0c15626 	beq	fp,r3,804d18 <_dtoa_r+0x10cc>
  8047c0:	193fffc3 	ldbu	r4,-1(r3)
  8047c4:	1825883a 	mov	r18,r3
  8047c8:	20803fcc 	andi	r2,r4,255
  8047cc:	1080201c 	xori	r2,r2,128
  8047d0:	10bfe004 	addi	r2,r2,-128
  8047d4:	10800e60 	cmpeqi	r2,r2,57
  8047d8:	90ffffc4 	addi	r3,r18,-1
  8047dc:	103ff71e 	bne	r2,zero,8047bc <_dtoa_r+0xb70>
  8047e0:	21000044 	addi	r4,r4,1
  8047e4:	19000005 	stb	r4,0(r3)
  8047e8:	a80b883a 	mov	r5,r21
  8047ec:	b809883a 	mov	r4,r23
  8047f0:	08072300 	call	807230 <_Bfree>
  8047f4:	80000826 	beq	r16,zero,804818 <_dtoa_r+0xbcc>
  8047f8:	88000426 	beq	r17,zero,80480c <_dtoa_r+0xbc0>
  8047fc:	8c000326 	beq	r17,r16,80480c <_dtoa_r+0xbc0>
  804800:	880b883a 	mov	r5,r17
  804804:	b809883a 	mov	r4,r23
  804808:	08072300 	call	807230 <_Bfree>
  80480c:	800b883a 	mov	r5,r16
  804810:	b809883a 	mov	r4,r23
  804814:	08072300 	call	807230 <_Bfree>
  804818:	b00b883a 	mov	r5,r22
  80481c:	b809883a 	mov	r4,r23
  804820:	08072300 	call	807230 <_Bfree>
  804824:	d8801f17 	ldw	r2,124(sp)
  804828:	d8c00317 	ldw	r3,12(sp)
  80482c:	90000005 	stb	zero,0(r18)
  804830:	10c00015 	stw	r3,0(r2)
  804834:	d8802117 	ldw	r2,132(sp)
  804838:	103d3526 	beq	r2,zero,803d10 <_dtoa_r+0xc4>
  80483c:	14800015 	stw	r18,0(r2)
  804840:	003d3306 	br	803d10 <_dtoa_r+0xc4>
  804844:	e0bfffc4 	addi	r2,fp,-1
  804848:	d8000815 	stw	zero,32(sp)
  80484c:	10002616 	blt	r2,zero,8048e8 <_dtoa_r+0xc9c>
  804850:	d8000515 	stw	zero,20(sp)
  804854:	d8800217 	ldw	r2,8(sp)
  804858:	d8c00117 	ldw	r3,4(sp)
  80485c:	dcc00315 	stw	r19,12(sp)
  804860:	14c5883a 	add	r2,r2,r19
  804864:	d8800215 	stw	r2,8(sp)
  804868:	d8000715 	stw	zero,28(sp)
  80486c:	188002a8 	cmpgeui	r2,r3,10
  804870:	103d9d26 	beq	r2,zero,803ee8 <_dtoa_r+0x29c>
  804874:	00800044 	movi	r2,1
  804878:	d8800615 	stw	r2,24(sp)
  80487c:	00bfffc4 	movi	r2,-1
  804880:	04000044 	movi	r16,1
  804884:	d8000115 	stw	zero,4(sp)
  804888:	d8800415 	stw	r2,16(sp)
  80488c:	d8001e15 	stw	zero,120(sp)
  804890:	d8800417 	ldw	r2,16(sp)
  804894:	b8001115 	stw	zero,68(r23)
  804898:	000b883a 	mov	r5,zero
  80489c:	d8800b15 	stw	r2,44(sp)
  8048a0:	003dae06 	br	803f5c <_dtoa_r+0x310>
  8048a4:	188000e0 	cmpeqi	r2,r3,3
  8048a8:	d8000615 	stw	zero,24(sp)
  8048ac:	103eb126 	beq	r2,zero,804374 <_dtoa_r+0x728>
  8048b0:	d8801e17 	ldw	r2,120(sp)
  8048b4:	d8c00317 	ldw	r3,12(sp)
  8048b8:	10c5883a 	add	r2,r2,r3
  8048bc:	d8800b15 	stw	r2,44(sp)
  8048c0:	10800044 	addi	r2,r2,1
  8048c4:	d8800415 	stw	r2,16(sp)
  8048c8:	100d883a 	mov	r6,r2
  8048cc:	00bd9816 	blt	zero,r2,803f30 <_dtoa_r+0x2e4>
  8048d0:	01800044 	movi	r6,1
  8048d4:	003d9606 	br	803f30 <_dtoa_r+0x2e4>
  8048d8:	00800044 	movi	r2,1
  8048dc:	d8800815 	stw	r2,32(sp)
  8048e0:	e0bfffc4 	addi	r2,fp,-1
  8048e4:	103d740e 	bge	r2,zero,803eb8 <_dtoa_r+0x26c>
  8048e8:	00800044 	movi	r2,1
  8048ec:	1705c83a 	sub	r2,r2,fp
  8048f0:	d8800515 	stw	r2,20(sp)
  8048f4:	d8000215 	stw	zero,8(sp)
  8048f8:	003d7006 	br	803ebc <_dtoa_r+0x270>
  8048fc:	9809883a 	mov	r4,r19
  804900:	080e1480 	call	80e148 <__floatsidf>
  804904:	900d883a 	mov	r6,r18
  804908:	a80f883a 	mov	r7,r21
  80490c:	1009883a 	mov	r4,r2
  804910:	180b883a 	mov	r5,r3
  804914:	080cd380 	call	80cd38 <__eqdf2>
  804918:	103d5426 	beq	r2,zero,803e6c <_dtoa_r+0x220>
  80491c:	9cffffc4 	addi	r19,r19,-1
  804920:	003d5206 	br	803e6c <_dtoa_r+0x220>
  804924:	07002074 	movhi	fp,129
  804928:	e7038504 	addi	fp,fp,3604
  80492c:	003cf806 	br	803d10 <_dtoa_r+0xc4>
  804930:	dd400717 	ldw	r21,28(sp)
  804934:	dc800517 	ldw	r18,20(sp)
  804938:	0021883a 	mov	r16,zero
  80493c:	003f2906 	br	8045e4 <_dtoa_r+0x998>
  804940:	00800704 	movi	r2,28
  804944:	d8c00517 	ldw	r3,20(sp)
  804948:	90a5883a 	add	r18,r18,r2
  80494c:	1887883a 	add	r3,r3,r2
  804950:	d8c00515 	stw	r3,20(sp)
  804954:	d8c00217 	ldw	r3,8(sp)
  804958:	1885883a 	add	r2,r3,r2
  80495c:	d8800215 	stw	r2,8(sp)
  804960:	003f5e06 	br	8046dc <_dtoa_r+0xa90>
  804964:	01000804 	movi	r4,32
  804968:	2089c83a 	sub	r4,r4,r2
  80496c:	a108983a 	sll	r4,r20,r4
  804970:	003d0a06 	br	803d9c <_dtoa_r+0x150>
  804974:	04000044 	movi	r16,1
  804978:	003d6006 	br	803efc <_dtoa_r+0x2b0>
  80497c:	100b883a 	mov	r5,r2
  804980:	980d883a 	mov	r6,r19
  804984:	b809883a 	mov	r4,r23
  804988:	08078fc0 	call	8078fc <__pow5mult>
  80498c:	d8c00117 	ldw	r3,4(sp)
  804990:	102b883a 	mov	r21,r2
  804994:	18c00090 	cmplti	r3,r3,2
  804998:	18014b1e 	bne	r3,zero,804ec8 <_dtoa_r+0x127c>
  80499c:	0023883a 	mov	r17,zero
  8049a0:	a8800417 	ldw	r2,16(r21)
  8049a4:	10800104 	addi	r2,r2,4
  8049a8:	100490ba 	slli	r2,r2,2
  8049ac:	a885883a 	add	r2,r21,r2
  8049b0:	11000017 	ldw	r4,0(r2)
  8049b4:	08074e80 	call	8074e8 <__hi0bits>
  8049b8:	00c00804 	movi	r3,32
  8049bc:	1885c83a 	sub	r2,r3,r2
  8049c0:	003f3606 	br	80469c <_dtoa_r+0xa50>
  8049c4:	800b883a 	mov	r5,r16
  8049c8:	000f883a 	mov	r7,zero
  8049cc:	01800284 	movi	r6,10
  8049d0:	b809883a 	mov	r4,r23
  8049d4:	08072540 	call	807254 <__multadd>
  8049d8:	1021883a 	mov	r16,r2
  8049dc:	d8800b17 	ldw	r2,44(sp)
  8049e0:	00824d0e 	bge	zero,r2,805318 <_dtoa_r+0x16cc>
  8049e4:	dcc00315 	stw	r19,12(sp)
  8049e8:	d8800415 	stw	r2,16(sp)
  8049ec:	0480aa16 	blt	zero,r18,804c98 <_dtoa_r+0x104c>
  8049f0:	8801701e 	bne	r17,zero,804fb4 <_dtoa_r+0x1368>
  8049f4:	8027883a 	mov	r19,r16
  8049f8:	d9000417 	ldw	r4,16(sp)
  8049fc:	e0bfffc4 	addi	r2,fp,-1
  804a00:	a0c0004c 	andi	r3,r20,1
  804a04:	1105883a 	add	r2,r2,r4
  804a08:	d8800415 	stw	r2,16(sp)
  804a0c:	d8800117 	ldw	r2,4(sp)
  804a10:	d8c00715 	stw	r3,28(sp)
  804a14:	e029883a 	mov	r20,fp
  804a18:	1884b03a 	or	r2,r3,r2
  804a1c:	d8800615 	stw	r2,24(sp)
  804a20:	df000815 	stw	fp,32(sp)
  804a24:	00002906 	br	804acc <_dtoa_r+0xe80>
  804a28:	b009883a 	mov	r4,r22
  804a2c:	0807b9c0 	call	807b9c <__mcmp>
  804a30:	900b883a 	mov	r5,r18
  804a34:	b809883a 	mov	r4,r23
  804a38:	d8800215 	stw	r2,8(sp)
  804a3c:	08072300 	call	807230 <_Bfree>
  804a40:	d8800217 	ldw	r2,8(sp)
  804a44:	1000021e 	bne	r2,zero,804a50 <_dtoa_r+0xe04>
  804a48:	d8c00617 	ldw	r3,24(sp)
  804a4c:	18022326 	beq	r3,zero,8052dc <_dtoa_r+0x1690>
  804a50:	a4800044 	addi	r18,r20,1
  804a54:	88012216 	blt	r17,zero,804ee0 <_dtoa_r+0x1294>
  804a58:	d8c00117 	ldw	r3,4(sp)
  804a5c:	1c62b03a 	or	r17,r3,r17
  804a60:	d8c00717 	ldw	r3,28(sp)
  804a64:	1c62b03a 	or	r17,r3,r17
  804a68:	88011d26 	beq	r17,zero,804ee0 <_dtoa_r+0x1294>
  804a6c:	00816b16 	blt	zero,r2,80501c <_dtoa_r+0x13d0>
  804a70:	d8800417 	ldw	r2,16(sp)
  804a74:	a7000005 	stb	fp,0(r20)
  804a78:	15017126 	beq	r2,r20,805040 <_dtoa_r+0x13f4>
  804a7c:	b00b883a 	mov	r5,r22
  804a80:	000f883a 	mov	r7,zero
  804a84:	01800284 	movi	r6,10
  804a88:	b809883a 	mov	r4,r23
  804a8c:	08072540 	call	807254 <__multadd>
  804a90:	102d883a 	mov	r22,r2
  804a94:	800b883a 	mov	r5,r16
  804a98:	000f883a 	mov	r7,zero
  804a9c:	01800284 	movi	r6,10
  804aa0:	b809883a 	mov	r4,r23
  804aa4:	84c01f26 	beq	r16,r19,804b24 <_dtoa_r+0xed8>
  804aa8:	08072540 	call	807254 <__multadd>
  804aac:	980b883a 	mov	r5,r19
  804ab0:	000f883a 	mov	r7,zero
  804ab4:	01800284 	movi	r6,10
  804ab8:	b809883a 	mov	r4,r23
  804abc:	1021883a 	mov	r16,r2
  804ac0:	08072540 	call	807254 <__multadd>
  804ac4:	1027883a 	mov	r19,r2
  804ac8:	9029883a 	mov	r20,r18
  804acc:	a80b883a 	mov	r5,r21
  804ad0:	b009883a 	mov	r4,r22
  804ad4:	0803a2c0 	call	803a2c <quorem>
  804ad8:	800b883a 	mov	r5,r16
  804adc:	b009883a 	mov	r4,r22
  804ae0:	1039883a 	mov	fp,r2
  804ae4:	d8800515 	stw	r2,20(sp)
  804ae8:	0807b9c0 	call	807b9c <__mcmp>
  804aec:	a80b883a 	mov	r5,r21
  804af0:	980d883a 	mov	r6,r19
  804af4:	b809883a 	mov	r4,r23
  804af8:	1023883a 	mov	r17,r2
  804afc:	0807bf40 	call	807bf4 <__mdiff>
  804b00:	1025883a 	mov	r18,r2
  804b04:	10800317 	ldw	r2,12(r2)
  804b08:	e7000c04 	addi	fp,fp,48
  804b0c:	900b883a 	mov	r5,r18
  804b10:	103fc526 	beq	r2,zero,804a28 <_dtoa_r+0xddc>
  804b14:	b809883a 	mov	r4,r23
  804b18:	08072300 	call	807230 <_Bfree>
  804b1c:	00800044 	movi	r2,1
  804b20:	003fcb06 	br	804a50 <_dtoa_r+0xe04>
  804b24:	08072540 	call	807254 <__multadd>
  804b28:	1021883a 	mov	r16,r2
  804b2c:	1027883a 	mov	r19,r2
  804b30:	003fe506 	br	804ac8 <_dtoa_r+0xe7c>
  804b34:	d8800117 	ldw	r2,4(sp)
  804b38:	108000d0 	cmplti	r2,r2,3
  804b3c:	10003c26 	beq	r2,zero,804c30 <_dtoa_r+0xfe4>
  804b40:	d8800617 	ldw	r2,24(sp)
  804b44:	103fa91e 	bne	r2,zero,8049ec <_dtoa_r+0xda0>
  804b48:	a80b883a 	mov	r5,r21
  804b4c:	b009883a 	mov	r4,r22
  804b50:	0803a2c0 	call	803a2c <quorem>
  804b54:	10c00c04 	addi	r3,r2,48
  804b58:	d8800317 	ldw	r2,12(sp)
  804b5c:	e4800044 	addi	r18,fp,1
  804b60:	e0c00005 	stb	r3,0(fp)
  804b64:	10800044 	addi	r2,r2,1
  804b68:	d8800315 	stw	r2,12(sp)
  804b6c:	0023883a 	mov	r17,zero
  804b70:	003f0606 	br	80478c <_dtoa_r+0xb40>
  804b74:	a80b883a 	mov	r5,r21
  804b78:	b009883a 	mov	r4,r22
  804b7c:	0807b9c0 	call	807b9c <__mcmp>
  804b80:	103ee60e 	bge	r2,zero,80471c <_dtoa_r+0xad0>
  804b84:	b00b883a 	mov	r5,r22
  804b88:	000f883a 	mov	r7,zero
  804b8c:	01800284 	movi	r6,10
  804b90:	b809883a 	mov	r4,r23
  804b94:	08072540 	call	807254 <__multadd>
  804b98:	d8c00317 	ldw	r3,12(sp)
  804b9c:	102d883a 	mov	r22,r2
  804ba0:	d8800617 	ldw	r2,24(sp)
  804ba4:	1cffffc4 	addi	r19,r3,-1
  804ba8:	103f861e 	bne	r2,zero,8049c4 <_dtoa_r+0xd78>
  804bac:	d8800b17 	ldw	r2,44(sp)
  804bb0:	0081d40e 	bge	zero,r2,805304 <_dtoa_r+0x16b8>
  804bb4:	d8800415 	stw	r2,16(sp)
  804bb8:	003edf06 	br	804738 <_dtoa_r+0xaec>
  804bbc:	00802074 	movhi	r2,129
  804bc0:	e7038e04 	addi	fp,fp,3640
  804bc4:	10838ec4 	addi	r2,r2,3643
  804bc8:	003dd906 	br	804330 <_dtoa_r+0x6e4>
  804bcc:	00800044 	movi	r2,1
  804bd0:	d8800615 	stw	r2,24(sp)
  804bd4:	003f3606 	br	8048b0 <_dtoa_r+0xc64>
  804bd8:	a03ead1e 	bne	r20,zero,804690 <_dtoa_r+0xa44>
  804bdc:	00800434 	movhi	r2,16
  804be0:	10bfffc4 	addi	r2,r2,-1
  804be4:	8884703a 	and	r2,r17,r2
  804be8:	103ea91e 	bne	r2,zero,804690 <_dtoa_r+0xa44>
  804bec:	8c5ffc2c 	andhi	r17,r17,32752
  804bf0:	883ea726 	beq	r17,zero,804690 <_dtoa_r+0xa44>
  804bf4:	d8800517 	ldw	r2,20(sp)
  804bf8:	04400044 	movi	r17,1
  804bfc:	10800044 	addi	r2,r2,1
  804c00:	d8800515 	stw	r2,20(sp)
  804c04:	d8800217 	ldw	r2,8(sp)
  804c08:	10800044 	addi	r2,r2,1
  804c0c:	d8800215 	stw	r2,8(sp)
  804c10:	003ea006 	br	804694 <_dtoa_r+0xa48>
  804c14:	00800044 	movi	r2,1
  804c18:	d8800415 	stw	r2,16(sp)
  804c1c:	d8801e15 	stw	r2,120(sp)
  804c20:	003f1b06 	br	804890 <_dtoa_r+0xc44>
  804c24:	d8800b17 	ldw	r2,44(sp)
  804c28:	dcc00315 	stw	r19,12(sp)
  804c2c:	d8800415 	stw	r2,16(sp)
  804c30:	d8800417 	ldw	r2,16(sp)
  804c34:	103dfb1e 	bne	r2,zero,804424 <_dtoa_r+0x7d8>
  804c38:	a80b883a 	mov	r5,r21
  804c3c:	b809883a 	mov	r4,r23
  804c40:	000f883a 	mov	r7,zero
  804c44:	01800144 	movi	r6,5
  804c48:	08072540 	call	807254 <__multadd>
  804c4c:	100b883a 	mov	r5,r2
  804c50:	b009883a 	mov	r4,r22
  804c54:	102b883a 	mov	r21,r2
  804c58:	0807b9c0 	call	807b9c <__mcmp>
  804c5c:	00bdf10e 	bge	zero,r2,804424 <_dtoa_r+0x7d8>
  804c60:	00800c44 	movi	r2,49
  804c64:	e0800005 	stb	r2,0(fp)
  804c68:	d8800317 	ldw	r2,12(sp)
  804c6c:	e4800044 	addi	r18,fp,1
  804c70:	14400044 	addi	r17,r2,1
  804c74:	a80b883a 	mov	r5,r21
  804c78:	b809883a 	mov	r4,r23
  804c7c:	08072300 	call	807230 <_Bfree>
  804c80:	88800044 	addi	r2,r17,1
  804c84:	d8800315 	stw	r2,12(sp)
  804c88:	803ee01e 	bne	r16,zero,80480c <_dtoa_r+0xbc0>
  804c8c:	003ee206 	br	804818 <_dtoa_r+0xbcc>
  804c90:	1805883a 	mov	r2,r3
  804c94:	003e5806 	br	8045f8 <_dtoa_r+0x9ac>
  804c98:	800b883a 	mov	r5,r16
  804c9c:	900d883a 	mov	r6,r18
  804ca0:	b809883a 	mov	r4,r23
  804ca4:	0807a140 	call	807a14 <__lshift>
  804ca8:	1021883a 	mov	r16,r2
  804cac:	003f5006 	br	8049f0 <_dtoa_r+0xda4>
  804cb0:	156bc83a 	sub	r21,r2,r21
  804cb4:	003e3e06 	br	8045b0 <_dtoa_r+0x964>
  804cb8:	dd000a15 	stw	r20,40(sp)
  804cbc:	dc400c15 	stw	r17,48(sp)
  804cc0:	04000084 	movi	r16,2
  804cc4:	003cc906 	br	803fec <_dtoa_r+0x3a0>
  804cc8:	00800044 	movi	r2,1
  804ccc:	003ead06 	br	804784 <_dtoa_r+0xb38>
  804cd0:	00800044 	movi	r2,1
  804cd4:	d8800615 	stw	r2,24(sp)
  804cd8:	003c9006 	br	803f1c <_dtoa_r+0x2d0>
  804cdc:	1000031e 	bne	r2,zero,804cec <_dtoa_r+0x10a0>
  804ce0:	d8c00117 	ldw	r3,4(sp)
  804ce4:	18c0004c 	andi	r3,r3,1
  804ce8:	183eb71e 	bne	r3,zero,8047c8 <_dtoa_r+0xb7c>
  804cec:	2005883a 	mov	r2,r4
  804cf0:	00000206 	br	804cfc <_dtoa_r+0x10b0>
  804cf4:	90bfff83 	ldbu	r2,-2(r18)
  804cf8:	1825883a 	mov	r18,r3
  804cfc:	10803fcc 	andi	r2,r2,255
  804d00:	1080201c 	xori	r2,r2,128
  804d04:	10bfe004 	addi	r2,r2,-128
  804d08:	10800c18 	cmpnei	r2,r2,48
  804d0c:	90ffffc4 	addi	r3,r18,-1
  804d10:	103ff826 	beq	r2,zero,804cf4 <_dtoa_r+0x10a8>
  804d14:	003eb406 	br	8047e8 <_dtoa_r+0xb9c>
  804d18:	00800c44 	movi	r2,49
  804d1c:	e0800005 	stb	r2,0(fp)
  804d20:	d8800317 	ldw	r2,12(sp)
  804d24:	10800044 	addi	r2,r2,1
  804d28:	d8800315 	stw	r2,12(sp)
  804d2c:	003eae06 	br	8047e8 <_dtoa_r+0xb9c>
  804d30:	d8c00917 	ldw	r3,36(sp)
  804d34:	18011826 	beq	r3,zero,805198 <_dtoa_r+0x154c>
  804d38:	d8c00517 	ldw	r3,20(sp)
  804d3c:	d9000217 	ldw	r4,8(sp)
  804d40:	10810cc4 	addi	r2,r2,1075
  804d44:	dd400717 	ldw	r21,28(sp)
  804d48:	2089883a 	add	r4,r4,r2
  804d4c:	1885883a 	add	r2,r3,r2
  804d50:	1825883a 	mov	r18,r3
  804d54:	d9000215 	stw	r4,8(sp)
  804d58:	d8800515 	stw	r2,20(sp)
  804d5c:	003e1d06 	br	8045d4 <_dtoa_r+0x988>
  804d60:	8009883a 	mov	r4,r16
  804d64:	080e1480 	call	80e148 <__floatsidf>
  804d68:	d9c00a17 	ldw	r7,40(sp)
  804d6c:	900d883a 	mov	r6,r18
  804d70:	1009883a 	mov	r4,r2
  804d74:	180b883a 	mov	r5,r3
  804d78:	080cf980 	call	80cf98 <__muldf3>
  804d7c:	000d883a 	mov	r6,zero
  804d80:	01d00734 	movhi	r7,16412
  804d84:	1009883a 	mov	r4,r2
  804d88:	180b883a 	mov	r5,r3
  804d8c:	080ba8c0 	call	80ba8c <__adddf3>
  804d90:	d8800c15 	stw	r2,48(sp)
  804d94:	00bf3034 	movhi	r2,64704
  804d98:	1885883a 	add	r2,r3,r2
  804d9c:	d8800d15 	stw	r2,52(sp)
  804da0:	d9400a17 	ldw	r5,40(sp)
  804da4:	9009883a 	mov	r4,r18
  804da8:	000d883a 	mov	r6,zero
  804dac:	01d00534 	movhi	r7,16404
  804db0:	080d7400 	call	80d740 <__subdf3>
  804db4:	dd400d17 	ldw	r21,52(sp)
  804db8:	d9800c17 	ldw	r6,48(sp)
  804dbc:	1009883a 	mov	r4,r2
  804dc0:	a80f883a 	mov	r7,r21
  804dc4:	180b883a 	mov	r5,r3
  804dc8:	1025883a 	mov	r18,r2
  804dcc:	1821883a 	mov	r16,r3
  804dd0:	080cdb80 	call	80cdb8 <__gedf2>
  804dd4:	00812d16 	blt	zero,r2,80528c <_dtoa_r+0x1640>
  804dd8:	d9800c17 	ldw	r6,48(sp)
  804ddc:	a9e0003c 	xorhi	r7,r21,32768
  804de0:	9009883a 	mov	r4,r18
  804de4:	800b883a 	mov	r5,r16
  804de8:	080cea80 	call	80cea8 <__ledf2>
  804dec:	103d6e0e 	bge	r2,zero,8043a8 <_dtoa_r+0x75c>
  804df0:	002b883a 	mov	r21,zero
  804df4:	0021883a 	mov	r16,zero
  804df8:	003d8a06 	br	804424 <_dtoa_r+0x7d8>
  804dfc:	d9800717 	ldw	r6,28(sp)
  804e00:	b00b883a 	mov	r5,r22
  804e04:	b809883a 	mov	r4,r23
  804e08:	08078fc0 	call	8078fc <__pow5mult>
  804e0c:	102d883a 	mov	r22,r2
  804e10:	003e1706 	br	804670 <_dtoa_r+0xa24>
  804e14:	d8800317 	ldw	r2,12(sp)
  804e18:	10010d26 	beq	r2,zero,805250 <_dtoa_r+0x1604>
  804e1c:	00abc83a 	sub	r21,zero,r2
  804e20:	a88003cc 	andi	r2,r21,15
  804e24:	100690fa 	slli	r3,r2,3
  804e28:	00802074 	movhi	r2,129
  804e2c:	1083ce04 	addi	r2,r2,3896
  804e30:	10c5883a 	add	r2,r2,r3
  804e34:	11800017 	ldw	r6,0(r2)
  804e38:	11c00117 	ldw	r7,4(r2)
  804e3c:	a009883a 	mov	r4,r20
  804e40:	880b883a 	mov	r5,r17
  804e44:	a82bd13a 	srai	r21,r21,4
  804e48:	080cf980 	call	80cf98 <__muldf3>
  804e4c:	d8c00a15 	stw	r3,40(sp)
  804e50:	1025883a 	mov	r18,r2
  804e54:	a8013826 	beq	r21,zero,805338 <_dtoa_r+0x16ec>
  804e58:	02002074 	movhi	r8,129
  804e5c:	04000084 	movi	r16,2
  804e60:	4203c404 	addi	r8,r8,3856
  804e64:	180b883a 	mov	r5,r3
  804e68:	dc400c15 	stw	r17,48(sp)
  804e6c:	1009883a 	mov	r4,r2
  804e70:	8023883a 	mov	r17,r16
  804e74:	0007883a 	mov	r3,zero
  804e78:	4021883a 	mov	r16,r8
  804e7c:	a980004c 	andi	r6,r21,1
  804e80:	30000726 	beq	r6,zero,804ea0 <_dtoa_r+0x1254>
  804e84:	81800017 	ldw	r6,0(r16)
  804e88:	81c00117 	ldw	r7,4(r16)
  804e8c:	8c400044 	addi	r17,r17,1
  804e90:	080cf980 	call	80cf98 <__muldf3>
  804e94:	180b883a 	mov	r5,r3
  804e98:	1009883a 	mov	r4,r2
  804e9c:	00c00044 	movi	r3,1
  804ea0:	a82bd07a 	srai	r21,r21,1
  804ea4:	84000204 	addi	r16,r16,8
  804ea8:	a83ff41e 	bne	r21,zero,804e7c <_dtoa_r+0x1230>
  804eac:	18c03fcc 	andi	r3,r3,255
  804eb0:	8821883a 	mov	r16,r17
  804eb4:	dc400c17 	ldw	r17,48(sp)
  804eb8:	183c6526 	beq	r3,zero,804050 <_dtoa_r+0x404>
  804ebc:	2025883a 	mov	r18,r4
  804ec0:	d9400a15 	stw	r5,40(sp)
  804ec4:	003c6206 	br	804050 <_dtoa_r+0x404>
  804ec8:	a03eb41e 	bne	r20,zero,80499c <_dtoa_r+0xd50>
  804ecc:	00800434 	movhi	r2,16
  804ed0:	10bfffc4 	addi	r2,r2,-1
  804ed4:	8884703a 	and	r2,r17,r2
  804ed8:	103f4426 	beq	r2,zero,804bec <_dtoa_r+0xfa0>
  804edc:	003eaf06 	br	80499c <_dtoa_r+0xd50>
  804ee0:	d9000317 	ldw	r4,12(sp)
  804ee4:	e007883a 	mov	r3,fp
  804ee8:	df000817 	ldw	fp,32(sp)
  804eec:	21000044 	addi	r4,r4,1
  804ef0:	d9000315 	stw	r4,12(sp)
  804ef4:	00800f0e 	bge	zero,r2,804f34 <_dtoa_r+0x12e8>
  804ef8:	b00b883a 	mov	r5,r22
  804efc:	01800044 	movi	r6,1
  804f00:	b809883a 	mov	r4,r23
  804f04:	d8c00115 	stw	r3,4(sp)
  804f08:	0807a140 	call	807a14 <__lshift>
  804f0c:	a80b883a 	mov	r5,r21
  804f10:	1009883a 	mov	r4,r2
  804f14:	102d883a 	mov	r22,r2
  804f18:	0807b9c0 	call	807b9c <__mcmp>
  804f1c:	d8c00117 	ldw	r3,4(sp)
  804f20:	0080e40e 	bge	zero,r2,8052b4 <_dtoa_r+0x1668>
  804f24:	18c00e60 	cmpeqi	r3,r3,57
  804f28:	1800d21e 	bne	r3,zero,805274 <_dtoa_r+0x1628>
  804f2c:	d8800517 	ldw	r2,20(sp)
  804f30:	10c00c44 	addi	r3,r2,49
  804f34:	8023883a 	mov	r17,r16
  804f38:	a0c00005 	stb	r3,0(r20)
  804f3c:	9821883a 	mov	r16,r19
  804f40:	003e2906 	br	8047e8 <_dtoa_r+0xb9c>
  804f44:	b027883a 	mov	r19,r22
  804f48:	ddc00417 	ldw	r23,16(sp)
  804f4c:	dd800217 	ldw	r22,8(sp)
  804f50:	200d883a 	mov	r6,r4
  804f54:	280f883a 	mov	r7,r5
  804f58:	080ba8c0 	call	80ba8c <__adddf3>
  804f5c:	dd400117 	ldw	r21,4(sp)
  804f60:	180b883a 	mov	r5,r3
  804f64:	900f883a 	mov	r7,r18
  804f68:	a80d883a 	mov	r6,r21
  804f6c:	1009883a 	mov	r4,r2
  804f70:	1823883a 	mov	r17,r3
  804f74:	1029883a 	mov	r20,r2
  804f78:	080cdb80 	call	80cdb8 <__gedf2>
  804f7c:	d8c00317 	ldw	r3,12(sp)
  804f80:	18c00044 	addi	r3,r3,1
  804f84:	d8c00315 	stw	r3,12(sp)
  804f88:	00bcc716 	blt	zero,r2,8042a8 <_dtoa_r+0x65c>
  804f8c:	a80d883a 	mov	r6,r21
  804f90:	900f883a 	mov	r7,r18
  804f94:	a009883a 	mov	r4,r20
  804f98:	880b883a 	mov	r5,r17
  804f9c:	080cd380 	call	80cd38 <__eqdf2>
  804fa0:	1000021e 	bne	r2,zero,804fac <_dtoa_r+0x1360>
  804fa4:	9cc0004c 	andi	r19,r19,1
  804fa8:	983cbf1e 	bne	r19,zero,8042a8 <_dtoa_r+0x65c>
  804fac:	8025883a 	mov	r18,r16
  804fb0:	003e1906 	br	804818 <_dtoa_r+0xbcc>
  804fb4:	81400117 	ldw	r5,4(r16)
  804fb8:	b809883a 	mov	r4,r23
  804fbc:	080718c0 	call	80718c <_Balloc>
  804fc0:	1023883a 	mov	r17,r2
  804fc4:	1000e526 	beq	r2,zero,80535c <_dtoa_r+0x1710>
  804fc8:	81800417 	ldw	r6,16(r16)
  804fcc:	81400304 	addi	r5,r16,12
  804fd0:	11000304 	addi	r4,r2,12
  804fd4:	31800084 	addi	r6,r6,2
  804fd8:	300c90ba 	slli	r6,r6,2
  804fdc:	0806e700 	call	806e70 <memcpy>
  804fe0:	01800044 	movi	r6,1
  804fe4:	880b883a 	mov	r5,r17
  804fe8:	b809883a 	mov	r4,r23
  804fec:	0807a140 	call	807a14 <__lshift>
  804ff0:	1027883a 	mov	r19,r2
  804ff4:	003e8006 	br	8049f8 <_dtoa_r+0xdac>
  804ff8:	b00b883a 	mov	r5,r22
  804ffc:	b809883a 	mov	r4,r23
  805000:	08078fc0 	call	8078fc <__pow5mult>
  805004:	102d883a 	mov	r22,r2
  805008:	003d9906 	br	804670 <_dtoa_r+0xa24>
  80500c:	d8800517 	ldw	r2,20(sp)
  805010:	d8c00417 	ldw	r3,16(sp)
  805014:	10e5c83a 	sub	r18,r2,r3
  805018:	003d6e06 	br	8045d4 <_dtoa_r+0x988>
  80501c:	d9000317 	ldw	r4,12(sp)
  805020:	e007883a 	mov	r3,fp
  805024:	18800e58 	cmpnei	r2,r3,57
  805028:	21000044 	addi	r4,r4,1
  80502c:	d9000315 	stw	r4,12(sp)
  805030:	df000817 	ldw	fp,32(sp)
  805034:	10008f26 	beq	r2,zero,805274 <_dtoa_r+0x1628>
  805038:	18c00044 	addi	r3,r3,1
  80503c:	003fbd06 	br	804f34 <_dtoa_r+0x12e8>
  805040:	d8800317 	ldw	r2,12(sp)
  805044:	e007883a 	mov	r3,fp
  805048:	8023883a 	mov	r17,r16
  80504c:	10800044 	addi	r2,r2,1
  805050:	df000817 	ldw	fp,32(sp)
  805054:	d8800315 	stw	r2,12(sp)
  805058:	9821883a 	mov	r16,r19
  80505c:	003dcb06 	br	80478c <_dtoa_r+0xb40>
  805060:	d9000c17 	ldw	r4,48(sp)
  805064:	d9400d17 	ldw	r5,52(sp)
  805068:	600d883a 	mov	r6,r12
  80506c:	680f883a 	mov	r7,r13
  805070:	dac00a15 	stw	r11,40(sp)
  805074:	080cf980 	call	80cf98 <__muldf3>
  805078:	dac00a17 	ldw	r11,40(sp)
  80507c:	d9400e17 	ldw	r5,56(sp)
  805080:	d8800a15 	stw	r2,40(sp)
  805084:	e2c00005 	stb	r11,0(fp)
  805088:	29000058 	cmpnei	r4,r5,1
  80508c:	d8c00c15 	stw	r3,48(sp)
  805090:	e145883a 	add	r2,fp,r5
  805094:	20002126 	beq	r4,zero,80511c <_dtoa_r+0x14d0>
  805098:	dc400e15 	stw	r17,56(sp)
  80509c:	dcc00d15 	stw	r19,52(sp)
  8050a0:	8023883a 	mov	r17,r16
  8050a4:	a809883a 	mov	r4,r21
  8050a8:	900b883a 	mov	r5,r18
  8050ac:	1021883a 	mov	r16,r2
  8050b0:	000d883a 	mov	r6,zero
  8050b4:	01d00934 	movhi	r7,16420
  8050b8:	080cf980 	call	80cf98 <__muldf3>
  8050bc:	180b883a 	mov	r5,r3
  8050c0:	1009883a 	mov	r4,r2
  8050c4:	182b883a 	mov	r21,r3
  8050c8:	1027883a 	mov	r19,r2
  8050cc:	080e0c80 	call	80e0c8 <__fixdfsi>
  8050d0:	1009883a 	mov	r4,r2
  8050d4:	1025883a 	mov	r18,r2
  8050d8:	080e1480 	call	80e148 <__floatsidf>
  8050dc:	9809883a 	mov	r4,r19
  8050e0:	a80b883a 	mov	r5,r21
  8050e4:	100d883a 	mov	r6,r2
  8050e8:	180f883a 	mov	r7,r3
  8050ec:	8c400044 	addi	r17,r17,1
  8050f0:	94800c04 	addi	r18,r18,48
  8050f4:	080d7400 	call	80d740 <__subdf3>
  8050f8:	8cbfffc5 	stb	r18,-1(r17)
  8050fc:	1009883a 	mov	r4,r2
  805100:	180b883a 	mov	r5,r3
  805104:	847fea1e 	bne	r16,r17,8050b0 <_dtoa_r+0x1464>
  805108:	8821883a 	mov	r16,r17
  80510c:	dcc00d17 	ldw	r19,52(sp)
  805110:	dc400e17 	ldw	r17,56(sp)
  805114:	102b883a 	mov	r21,r2
  805118:	1825883a 	mov	r18,r3
  80511c:	d9000a17 	ldw	r4,40(sp)
  805120:	d9400c17 	ldw	r5,48(sp)
  805124:	000d883a 	mov	r6,zero
  805128:	01cff834 	movhi	r7,16352
  80512c:	080ba8c0 	call	80ba8c <__adddf3>
  805130:	a80d883a 	mov	r6,r21
  805134:	900f883a 	mov	r7,r18
  805138:	1009883a 	mov	r4,r2
  80513c:	180b883a 	mov	r5,r3
  805140:	080cea80 	call	80cea8 <__ledf2>
  805144:	103c5316 	blt	r2,zero,804294 <_dtoa_r+0x648>
  805148:	d9800a17 	ldw	r6,40(sp)
  80514c:	d9c00c17 	ldw	r7,48(sp)
  805150:	0009883a 	mov	r4,zero
  805154:	014ff834 	movhi	r5,16352
  805158:	080d7400 	call	80d740 <__subdf3>
  80515c:	a80d883a 	mov	r6,r21
  805160:	900f883a 	mov	r7,r18
  805164:	1009883a 	mov	r4,r2
  805168:	180b883a 	mov	r5,r3
  80516c:	080cdb80 	call	80cdb8 <__gedf2>
  805170:	00bc8d0e 	bge	zero,r2,8043a8 <_dtoa_r+0x75c>
  805174:	80bfffc7 	ldb	r2,-1(r16)
  805178:	8025883a 	mov	r18,r16
  80517c:	843fffc4 	addi	r16,r16,-1
  805180:	10800c20 	cmpeqi	r2,r2,48
  805184:	103ffb1e 	bne	r2,zero,805174 <_dtoa_r+0x1528>
  805188:	d8801117 	ldw	r2,68(sp)
  80518c:	10800044 	addi	r2,r2,1
  805190:	d8800315 	stw	r2,12(sp)
  805194:	003da006 	br	804818 <_dtoa_r+0xbcc>
  805198:	d8c01217 	ldw	r3,72(sp)
  80519c:	00800d84 	movi	r2,54
  8051a0:	d9000517 	ldw	r4,20(sp)
  8051a4:	10c5c83a 	sub	r2,r2,r3
  8051a8:	d8c00217 	ldw	r3,8(sp)
  8051ac:	dd400717 	ldw	r21,28(sp)
  8051b0:	2025883a 	mov	r18,r4
  8051b4:	1887883a 	add	r3,r3,r2
  8051b8:	2085883a 	add	r2,r4,r2
  8051bc:	d8c00215 	stw	r3,8(sp)
  8051c0:	d8800515 	stw	r2,20(sp)
  8051c4:	003d0306 	br	8045d4 <_dtoa_r+0x988>
  8051c8:	d8800417 	ldw	r2,16(sp)
  8051cc:	103ee426 	beq	r2,zero,804d60 <_dtoa_r+0x1114>
  8051d0:	d8800b17 	ldw	r2,44(sp)
  8051d4:	00bc740e 	bge	zero,r2,8043a8 <_dtoa_r+0x75c>
  8051d8:	a80b883a 	mov	r5,r21
  8051dc:	9009883a 	mov	r4,r18
  8051e0:	000d883a 	mov	r6,zero
  8051e4:	01d00934 	movhi	r7,16420
  8051e8:	080cf980 	call	80cf98 <__muldf3>
  8051ec:	81000044 	addi	r4,r16,1
  8051f0:	1025883a 	mov	r18,r2
  8051f4:	182b883a 	mov	r21,r3
  8051f8:	d8c00a15 	stw	r3,40(sp)
  8051fc:	080e1480 	call	80e148 <__floatsidf>
  805200:	900d883a 	mov	r6,r18
  805204:	a80f883a 	mov	r7,r21
  805208:	1009883a 	mov	r4,r2
  80520c:	180b883a 	mov	r5,r3
  805210:	080cf980 	call	80cf98 <__muldf3>
  805214:	1009883a 	mov	r4,r2
  805218:	000d883a 	mov	r6,zero
  80521c:	01d00734 	movhi	r7,16412
  805220:	180b883a 	mov	r5,r3
  805224:	080ba8c0 	call	80ba8c <__adddf3>
  805228:	d9000317 	ldw	r4,12(sp)
  80522c:	d8800c15 	stw	r2,48(sp)
  805230:	00bf3034 	movhi	r2,64704
  805234:	1887883a 	add	r3,r3,r2
  805238:	d8800b17 	ldw	r2,44(sp)
  80523c:	213fffc4 	addi	r4,r4,-1
  805240:	d9001115 	stw	r4,68(sp)
  805244:	d8c00d15 	stw	r3,52(sp)
  805248:	d8800e15 	stw	r2,56(sp)
  80524c:	003b9f06 	br	8040cc <_dtoa_r+0x480>
  805250:	a025883a 	mov	r18,r20
  805254:	dc400a15 	stw	r17,40(sp)
  805258:	04000084 	movi	r16,2
  80525c:	003b7c06 	br	804050 <_dtoa_r+0x404>
  805260:	d8800317 	ldw	r2,12(sp)
  805264:	00c00c44 	movi	r3,49
  805268:	10800044 	addi	r2,r2,1
  80526c:	d8800315 	stw	r2,12(sp)
  805270:	003c1606 	br	8042cc <_dtoa_r+0x680>
  805274:	00800e44 	movi	r2,57
  805278:	8023883a 	mov	r17,r16
  80527c:	a0800005 	stb	r2,0(r20)
  805280:	9821883a 	mov	r16,r19
  805284:	01000e44 	movi	r4,57
  805288:	003d4f06 	br	8047c8 <_dtoa_r+0xb7c>
  80528c:	002b883a 	mov	r21,zero
  805290:	0021883a 	mov	r16,zero
  805294:	003e7206 	br	804c60 <_dtoa_r+0x1014>
  805298:	dd800d17 	ldw	r22,52(sp)
  80529c:	ddc00e17 	ldw	r23,56(sp)
  8052a0:	d8801117 	ldw	r2,68(sp)
  8052a4:	8025883a 	mov	r18,r16
  8052a8:	10800044 	addi	r2,r2,1
  8052ac:	d8800315 	stw	r2,12(sp)
  8052b0:	003d5906 	br	804818 <_dtoa_r+0xbcc>
  8052b4:	103f1f1e 	bne	r2,zero,804f34 <_dtoa_r+0x12e8>
  8052b8:	1880004c 	andi	r2,r3,1
  8052bc:	103f191e 	bne	r2,zero,804f24 <_dtoa_r+0x12d8>
  8052c0:	003f1c06 	br	804f34 <_dtoa_r+0x12e8>
  8052c4:	dcc00f17 	ldw	r19,60(sp)
  8052c8:	dd800d17 	ldw	r22,52(sp)
  8052cc:	ddc00e17 	ldw	r23,56(sp)
  8052d0:	dc400c17 	ldw	r17,48(sp)
  8052d4:	dd000a17 	ldw	r20,40(sp)
  8052d8:	003c3306 	br	8043a8 <_dtoa_r+0x75c>
  8052dc:	d9000317 	ldw	r4,12(sp)
  8052e0:	e007883a 	mov	r3,fp
  8052e4:	18800e60 	cmpeqi	r2,r3,57
  8052e8:	21000044 	addi	r4,r4,1
  8052ec:	d9000315 	stw	r4,12(sp)
  8052f0:	df000817 	ldw	fp,32(sp)
  8052f4:	a4800044 	addi	r18,r20,1
  8052f8:	103fde1e 	bne	r2,zero,805274 <_dtoa_r+0x1628>
  8052fc:	047f0b16 	blt	zero,r17,804f2c <_dtoa_r+0x12e0>
  805300:	003f0c06 	br	804f34 <_dtoa_r+0x12e8>
  805304:	d8800117 	ldw	r2,4(sp)
  805308:	108000c8 	cmpgei	r2,r2,3
  80530c:	103e451e 	bne	r2,zero,804c24 <_dtoa_r+0xfd8>
  805310:	dcc00315 	stw	r19,12(sp)
  805314:	003e0c06 	br	804b48 <_dtoa_r+0xefc>
  805318:	d8800117 	ldw	r2,4(sp)
  80531c:	108000c8 	cmpgei	r2,r2,3
  805320:	103e401e 	bne	r2,zero,804c24 <_dtoa_r+0xfd8>
  805324:	d8800b17 	ldw	r2,44(sp)
  805328:	dcc00315 	stw	r19,12(sp)
  80532c:	d8800415 	stw	r2,16(sp)
  805330:	04bdaf0e 	bge	zero,r18,8049f0 <_dtoa_r+0xda4>
  805334:	003e5806 	br	804c98 <_dtoa_r+0x104c>
  805338:	04000084 	movi	r16,2
  80533c:	003b4406 	br	804050 <_dtoa_r+0x404>
  805340:	01c02074 	movhi	r7,129
  805344:	01002074 	movhi	r4,129
  805348:	39c39204 	addi	r7,r7,3656
  80534c:	000d883a 	mov	r6,zero
  805350:	01406a84 	movi	r5,426
  805354:	21039704 	addi	r4,r4,3676
  805358:	0809f780 	call	809f78 <__assert_func>
  80535c:	01c02074 	movhi	r7,129
  805360:	01002074 	movhi	r4,129
  805364:	39c39204 	addi	r7,r7,3656
  805368:	000d883a 	mov	r6,zero
  80536c:	0140ba84 	movi	r5,746
  805370:	21039704 	addi	r4,r4,3676
  805374:	0809f780 	call	809f78 <__assert_func>
  805378:	e7038f04 	addi	fp,fp,3644
  80537c:	003a6406 	br	803d10 <_dtoa_r+0xc4>
  805380:	18c00120 	cmpeqi	r3,r3,4
  805384:	183cd51e 	bne	r3,zero,8046dc <_dtoa_r+0xa90>
  805388:	00c00f04 	movi	r3,60
  80538c:	1885c83a 	sub	r2,r3,r2
  805390:	003d6c06 	br	804944 <_dtoa_r+0xcf8>
  805394:	000b883a 	mov	r5,zero
  805398:	003af006 	br	803f5c <_dtoa_r+0x310>

0080539c <__sflush_r>:
  80539c:	2880030b 	ldhu	r2,12(r5)
  8053a0:	defffb04 	addi	sp,sp,-20
  8053a4:	dcc00315 	stw	r19,12(sp)
  8053a8:	dc000015 	stw	r16,0(sp)
  8053ac:	dfc00415 	stw	ra,16(sp)
  8053b0:	dc800215 	stw	r18,8(sp)
  8053b4:	dc400115 	stw	r17,4(sp)
  8053b8:	10c0020c 	andi	r3,r2,8
  8053bc:	2821883a 	mov	r16,r5
  8053c0:	2027883a 	mov	r19,r4
  8053c4:	18003f1e 	bne	r3,zero,8054c4 <__sflush_r+0x128>
  8053c8:	28c00117 	ldw	r3,4(r5)
  8053cc:	10820014 	ori	r2,r2,2048
  8053d0:	2880030d 	sth	r2,12(r5)
  8053d4:	00c0550e 	bge	zero,r3,80552c <__sflush_r+0x190>
  8053d8:	82000a17 	ldw	r8,40(r16)
  8053dc:	40003126 	beq	r8,zero,8054a4 <__sflush_r+0x108>
  8053e0:	9c400017 	ldw	r17,0(r19)
  8053e4:	1104000c 	andi	r4,r2,4096
  8053e8:	98000015 	stw	zero,0(r19)
  8053ec:	81400717 	ldw	r5,28(r16)
  8053f0:	1007883a 	mov	r3,r2
  8053f4:	2000521e 	bne	r4,zero,805540 <__sflush_r+0x1a4>
  8053f8:	01c00044 	movi	r7,1
  8053fc:	000d883a 	mov	r6,zero
  805400:	9809883a 	mov	r4,r19
  805404:	403ee83a 	callr	r8
  805408:	10ffffd8 	cmpnei	r3,r2,-1
  80540c:	18005826 	beq	r3,zero,805570 <__sflush_r+0x1d4>
  805410:	80c0030b 	ldhu	r3,12(r16)
  805414:	82000a17 	ldw	r8,40(r16)
  805418:	81400717 	ldw	r5,28(r16)
  80541c:	18c0010c 	andi	r3,r3,4
  805420:	18000626 	beq	r3,zero,80543c <__sflush_r+0xa0>
  805424:	81000117 	ldw	r4,4(r16)
  805428:	80c00c17 	ldw	r3,48(r16)
  80542c:	1105c83a 	sub	r2,r2,r4
  805430:	18000226 	beq	r3,zero,80543c <__sflush_r+0xa0>
  805434:	80c00f17 	ldw	r3,60(r16)
  805438:	10c5c83a 	sub	r2,r2,r3
  80543c:	100d883a 	mov	r6,r2
  805440:	000f883a 	mov	r7,zero
  805444:	9809883a 	mov	r4,r19
  805448:	403ee83a 	callr	r8
  80544c:	10ffffd8 	cmpnei	r3,r2,-1
  805450:	18003d1e 	bne	r3,zero,805548 <__sflush_r+0x1ac>
  805454:	99000017 	ldw	r4,0(r19)
  805458:	80c0030b 	ldhu	r3,12(r16)
  80545c:	20004e26 	beq	r4,zero,805598 <__sflush_r+0x1fc>
  805460:	21400760 	cmpeqi	r5,r4,29
  805464:	2800021e 	bne	r5,zero,805470 <__sflush_r+0xd4>
  805468:	210005a0 	cmpeqi	r4,r4,22
  80546c:	20002c26 	beq	r4,zero,805520 <__sflush_r+0x184>
  805470:	80800417 	ldw	r2,16(r16)
  805474:	18fdffcc 	andi	r3,r3,63487
  805478:	80c0030d 	sth	r3,12(r16)
  80547c:	80000115 	stw	zero,4(r16)
  805480:	80800015 	stw	r2,0(r16)
  805484:	81400c17 	ldw	r5,48(r16)
  805488:	9c400015 	stw	r17,0(r19)
  80548c:	28000526 	beq	r5,zero,8054a4 <__sflush_r+0x108>
  805490:	80801004 	addi	r2,r16,64
  805494:	28800226 	beq	r5,r2,8054a0 <__sflush_r+0x104>
  805498:	9809883a 	mov	r4,r19
  80549c:	0805abc0 	call	805abc <_free_r>
  8054a0:	80000c15 	stw	zero,48(r16)
  8054a4:	0005883a 	mov	r2,zero
  8054a8:	dfc00417 	ldw	ra,16(sp)
  8054ac:	dcc00317 	ldw	r19,12(sp)
  8054b0:	dc800217 	ldw	r18,8(sp)
  8054b4:	dc400117 	ldw	r17,4(sp)
  8054b8:	dc000017 	ldw	r16,0(sp)
  8054bc:	dec00504 	addi	sp,sp,20
  8054c0:	f800283a 	ret
  8054c4:	2c800417 	ldw	r18,16(r5)
  8054c8:	903ff626 	beq	r18,zero,8054a4 <__sflush_r+0x108>
  8054cc:	2c400017 	ldw	r17,0(r5)
  8054d0:	108000cc 	andi	r2,r2,3
  8054d4:	2c800015 	stw	r18,0(r5)
  8054d8:	8ca3c83a 	sub	r17,r17,r18
  8054dc:	1000161e 	bne	r2,zero,805538 <__sflush_r+0x19c>
  8054e0:	28800517 	ldw	r2,20(r5)
  8054e4:	80800215 	stw	r2,8(r16)
  8054e8:	04400316 	blt	zero,r17,8054f8 <__sflush_r+0x15c>
  8054ec:	003fed06 	br	8054a4 <__sflush_r+0x108>
  8054f0:	90a5883a 	add	r18,r18,r2
  8054f4:	047feb0e 	bge	zero,r17,8054a4 <__sflush_r+0x108>
  8054f8:	80800917 	ldw	r2,36(r16)
  8054fc:	81400717 	ldw	r5,28(r16)
  805500:	880f883a 	mov	r7,r17
  805504:	900d883a 	mov	r6,r18
  805508:	9809883a 	mov	r4,r19
  80550c:	103ee83a 	callr	r2
  805510:	88a3c83a 	sub	r17,r17,r2
  805514:	00bff616 	blt	zero,r2,8054f0 <__sflush_r+0x154>
  805518:	80c0030b 	ldhu	r3,12(r16)
  80551c:	00bfffc4 	movi	r2,-1
  805520:	18c01014 	ori	r3,r3,64
  805524:	80c0030d 	sth	r3,12(r16)
  805528:	003fdf06 	br	8054a8 <__sflush_r+0x10c>
  80552c:	28c00f17 	ldw	r3,60(r5)
  805530:	00ffa916 	blt	zero,r3,8053d8 <__sflush_r+0x3c>
  805534:	003fdb06 	br	8054a4 <__sflush_r+0x108>
  805538:	0005883a 	mov	r2,zero
  80553c:	003fe906 	br	8054e4 <__sflush_r+0x148>
  805540:	80801417 	ldw	r2,80(r16)
  805544:	003fb506 	br	80541c <__sflush_r+0x80>
  805548:	80c0030b 	ldhu	r3,12(r16)
  80554c:	81000417 	ldw	r4,16(r16)
  805550:	80000115 	stw	zero,4(r16)
  805554:	197dffcc 	andi	r5,r3,63487
  805558:	8140030d 	sth	r5,12(r16)
  80555c:	81000015 	stw	r4,0(r16)
  805560:	18c4000c 	andi	r3,r3,4096
  805564:	183fc726 	beq	r3,zero,805484 <__sflush_r+0xe8>
  805568:	80801415 	stw	r2,80(r16)
  80556c:	003fc506 	br	805484 <__sflush_r+0xe8>
  805570:	98c00017 	ldw	r3,0(r19)
  805574:	183fa626 	beq	r3,zero,805410 <__sflush_r+0x74>
  805578:	19000760 	cmpeqi	r4,r3,29
  80557c:	20000e1e 	bne	r4,zero,8055b8 <__sflush_r+0x21c>
  805580:	18c00598 	cmpnei	r3,r3,22
  805584:	18000c26 	beq	r3,zero,8055b8 <__sflush_r+0x21c>
  805588:	80c0030b 	ldhu	r3,12(r16)
  80558c:	18c01014 	ori	r3,r3,64
  805590:	80c0030d 	sth	r3,12(r16)
  805594:	003fc406 	br	8054a8 <__sflush_r+0x10c>
  805598:	81000417 	ldw	r4,16(r16)
  80559c:	197dffcc 	andi	r5,r3,63487
  8055a0:	8140030d 	sth	r5,12(r16)
  8055a4:	80000115 	stw	zero,4(r16)
  8055a8:	81000015 	stw	r4,0(r16)
  8055ac:	18c4000c 	andi	r3,r3,4096
  8055b0:	183fb426 	beq	r3,zero,805484 <__sflush_r+0xe8>
  8055b4:	003fec06 	br	805568 <__sflush_r+0x1cc>
  8055b8:	9c400015 	stw	r17,0(r19)
  8055bc:	0005883a 	mov	r2,zero
  8055c0:	003fb906 	br	8054a8 <__sflush_r+0x10c>

008055c4 <_fflush_r>:
  8055c4:	defffd04 	addi	sp,sp,-12
  8055c8:	dc000115 	stw	r16,4(sp)
  8055cc:	dfc00215 	stw	ra,8(sp)
  8055d0:	2021883a 	mov	r16,r4
  8055d4:	20000226 	beq	r4,zero,8055e0 <_fflush_r+0x1c>
  8055d8:	20800e17 	ldw	r2,56(r4)
  8055dc:	10000726 	beq	r2,zero,8055fc <_fflush_r+0x38>
  8055e0:	2880030f 	ldh	r2,12(r5)
  8055e4:	10000a1e 	bne	r2,zero,805610 <_fflush_r+0x4c>
  8055e8:	0005883a 	mov	r2,zero
  8055ec:	dfc00217 	ldw	ra,8(sp)
  8055f0:	dc000117 	ldw	r16,4(sp)
  8055f4:	dec00304 	addi	sp,sp,12
  8055f8:	f800283a 	ret
  8055fc:	d9400015 	stw	r5,0(sp)
  805600:	08059580 	call	805958 <__sinit>
  805604:	d9400017 	ldw	r5,0(sp)
  805608:	2880030f 	ldh	r2,12(r5)
  80560c:	103ff626 	beq	r2,zero,8055e8 <_fflush_r+0x24>
  805610:	8009883a 	mov	r4,r16
  805614:	dfc00217 	ldw	ra,8(sp)
  805618:	dc000117 	ldw	r16,4(sp)
  80561c:	dec00304 	addi	sp,sp,12
  805620:	080539c1 	jmpi	80539c <__sflush_r>

00805624 <fflush>:
  805624:	200b883a 	mov	r5,r4
  805628:	20000326 	beq	r4,zero,805638 <fflush+0x14>
  80562c:	00802074 	movhi	r2,129
  805630:	110bb617 	ldw	r4,11992(r2)
  805634:	08055c41 	jmpi	8055c4 <_fflush_r>
  805638:	00802074 	movhi	r2,129
  80563c:	110bb517 	ldw	r4,11988(r2)
  805640:	01402034 	movhi	r5,128
  805644:	29557104 	addi	r5,r5,21956
  805648:	080631c1 	jmpi	80631c <_fwalk_reent>

0080564c <__fp_lock>:
  80564c:	0005883a 	mov	r2,zero
  805650:	f800283a 	ret

00805654 <_cleanup_r>:
  805654:	01402074 	movhi	r5,129
  805658:	29682d04 	addi	r5,r5,-24396
  80565c:	080631c1 	jmpi	80631c <_fwalk_reent>

00805660 <__sinit.part.0>:
  805660:	00c02034 	movhi	r3,128
  805664:	20800117 	ldw	r2,4(r4)
  805668:	18d59504 	addi	r3,r3,22100
  80566c:	20c00f15 	stw	r3,60(r4)
  805670:	2140bb04 	addi	r5,r4,748
  805674:	00c000c4 	movi	r3,3
  805678:	20c0b915 	stw	r3,740(r4)
  80567c:	2140ba15 	stw	r5,744(r4)
  805680:	2000b815 	stw	zero,736(r4)
  805684:	10001705 	stb	zero,92(r2)
  805688:	10001745 	stb	zero,93(r2)
  80568c:	10001785 	stb	zero,94(r2)
  805690:	100017c5 	stb	zero,95(r2)
  805694:	10001805 	stb	zero,96(r2)
  805698:	10001845 	stb	zero,97(r2)
  80569c:	10001885 	stb	zero,98(r2)
  8056a0:	100018c5 	stb	zero,99(r2)
  8056a4:	00c00104 	movi	r3,4
  8056a8:	10c00315 	stw	r3,12(r2)
  8056ac:	02002074 	movhi	r8,129
  8056b0:	20c00217 	ldw	r3,8(r4)
  8056b4:	01c02074 	movhi	r7,129
  8056b8:	01802074 	movhi	r6,129
  8056bc:	01402074 	movhi	r5,129
  8056c0:	42222004 	addi	r8,r8,-30592
  8056c4:	39e23704 	addi	r7,r7,-30500
  8056c8:	31a25704 	addi	r6,r6,-30372
  8056cc:	29626e04 	addi	r5,r5,-30280
  8056d0:	02400074 	movhi	r9,1
  8056d4:	10001915 	stw	zero,100(r2)
  8056d8:	10000015 	stw	zero,0(r2)
  8056dc:	10000115 	stw	zero,4(r2)
  8056e0:	10000215 	stw	zero,8(r2)
  8056e4:	10000415 	stw	zero,16(r2)
  8056e8:	10000515 	stw	zero,20(r2)
  8056ec:	10000615 	stw	zero,24(r2)
  8056f0:	10800715 	stw	r2,28(r2)
  8056f4:	12000815 	stw	r8,32(r2)
  8056f8:	11c00915 	stw	r7,36(r2)
  8056fc:	11800a15 	stw	r6,40(r2)
  805700:	11400b15 	stw	r5,44(r2)
  805704:	4a400284 	addi	r9,r9,10
  805708:	1a400315 	stw	r9,12(r3)
  80570c:	18001915 	stw	zero,100(r3)
  805710:	18000015 	stw	zero,0(r3)
  805714:	18000115 	stw	zero,4(r3)
  805718:	18000215 	stw	zero,8(r3)
  80571c:	18000415 	stw	zero,16(r3)
  805720:	18001705 	stb	zero,92(r3)
  805724:	18001745 	stb	zero,93(r3)
  805728:	18001785 	stb	zero,94(r3)
  80572c:	180017c5 	stb	zero,95(r3)
  805730:	18001805 	stb	zero,96(r3)
  805734:	18001845 	stb	zero,97(r3)
  805738:	18001885 	stb	zero,98(r3)
  80573c:	180018c5 	stb	zero,99(r3)
  805740:	20800317 	ldw	r2,12(r4)
  805744:	024000b4 	movhi	r9,2
  805748:	18000515 	stw	zero,20(r3)
  80574c:	18000615 	stw	zero,24(r3)
  805750:	18c00715 	stw	r3,28(r3)
  805754:	1a000815 	stw	r8,32(r3)
  805758:	19c00915 	stw	r7,36(r3)
  80575c:	19800a15 	stw	r6,40(r3)
  805760:	19400b15 	stw	r5,44(r3)
  805764:	4a400484 	addi	r9,r9,18
  805768:	10001915 	stw	zero,100(r2)
  80576c:	10000015 	stw	zero,0(r2)
  805770:	10000115 	stw	zero,4(r2)
  805774:	10000215 	stw	zero,8(r2)
  805778:	12400315 	stw	r9,12(r2)
  80577c:	10000415 	stw	zero,16(r2)
  805780:	10000515 	stw	zero,20(r2)
  805784:	10000615 	stw	zero,24(r2)
  805788:	10001705 	stb	zero,92(r2)
  80578c:	10001745 	stb	zero,93(r2)
  805790:	10001785 	stb	zero,94(r2)
  805794:	100017c5 	stb	zero,95(r2)
  805798:	10001805 	stb	zero,96(r2)
  80579c:	10001845 	stb	zero,97(r2)
  8057a0:	10001885 	stb	zero,98(r2)
  8057a4:	100018c5 	stb	zero,99(r2)
  8057a8:	10800715 	stw	r2,28(r2)
  8057ac:	12000815 	stw	r8,32(r2)
  8057b0:	11c00915 	stw	r7,36(r2)
  8057b4:	11800a15 	stw	r6,40(r2)
  8057b8:	11400b15 	stw	r5,44(r2)
  8057bc:	00800044 	movi	r2,1
  8057c0:	20800e15 	stw	r2,56(r4)
  8057c4:	f800283a 	ret

008057c8 <__fp_unlock>:
  8057c8:	0005883a 	mov	r2,zero
  8057cc:	f800283a 	ret

008057d0 <__sfmoreglue>:
  8057d0:	defffc04 	addi	sp,sp,-16
  8057d4:	dc800215 	stw	r18,8(sp)
  8057d8:	2825883a 	mov	r18,r5
  8057dc:	dc000015 	stw	r16,0(sp)
  8057e0:	01401a04 	movi	r5,104
  8057e4:	2021883a 	mov	r16,r4
  8057e8:	913fffc4 	addi	r4,r18,-1
  8057ec:	dfc00315 	stw	ra,12(sp)
  8057f0:	dc400115 	stw	r17,4(sp)
  8057f4:	08015040 	call	801504 <__mulsi3>
  8057f8:	8009883a 	mov	r4,r16
  8057fc:	11401d04 	addi	r5,r2,116
  805800:	1023883a 	mov	r17,r2
  805804:	08065bc0 	call	8065bc <_malloc_r>
  805808:	1021883a 	mov	r16,r2
  80580c:	10000726 	beq	r2,zero,80582c <__sfmoreglue+0x5c>
  805810:	11000304 	addi	r4,r2,12
  805814:	10000015 	stw	zero,0(r2)
  805818:	14800115 	stw	r18,4(r2)
  80581c:	11000215 	stw	r4,8(r2)
  805820:	89801a04 	addi	r6,r17,104
  805824:	000b883a 	mov	r5,zero
  805828:	080709c0 	call	80709c <memset>
  80582c:	8005883a 	mov	r2,r16
  805830:	dfc00317 	ldw	ra,12(sp)
  805834:	dc800217 	ldw	r18,8(sp)
  805838:	dc400117 	ldw	r17,4(sp)
  80583c:	dc000017 	ldw	r16,0(sp)
  805840:	dec00404 	addi	sp,sp,16
  805844:	f800283a 	ret

00805848 <__sfp>:
  805848:	defffd04 	addi	sp,sp,-12
  80584c:	00802074 	movhi	r2,129
  805850:	dc000015 	stw	r16,0(sp)
  805854:	140bb517 	ldw	r16,11988(r2)
  805858:	dc400115 	stw	r17,4(sp)
  80585c:	dfc00215 	stw	ra,8(sp)
  805860:	80800e17 	ldw	r2,56(r16)
  805864:	2023883a 	mov	r17,r4
  805868:	10002b26 	beq	r2,zero,805918 <__sfp+0xd0>
  80586c:	8400b804 	addi	r16,r16,736
  805870:	80c00117 	ldw	r3,4(r16)
  805874:	80800217 	ldw	r2,8(r16)
  805878:	18ffffc4 	addi	r3,r3,-1
  80587c:	1800030e 	bge	r3,zero,80588c <__sfp+0x44>
  805880:	00002106 	br	805908 <__sfp+0xc0>
  805884:	10801a04 	addi	r2,r2,104
  805888:	30001f26 	beq	r6,zero,805908 <__sfp+0xc0>
  80588c:	1140030f 	ldh	r5,12(r2)
  805890:	18ffffc4 	addi	r3,r3,-1
  805894:	19bfffd8 	cmpnei	r6,r3,-1
  805898:	283ffa1e 	bne	r5,zero,805884 <__sfp+0x3c>
  80589c:	00fffff4 	movhi	r3,65535
  8058a0:	18c00044 	addi	r3,r3,1
  8058a4:	10001915 	stw	zero,100(r2)
  8058a8:	10000015 	stw	zero,0(r2)
  8058ac:	10000115 	stw	zero,4(r2)
  8058b0:	10000215 	stw	zero,8(r2)
  8058b4:	10c00315 	stw	r3,12(r2)
  8058b8:	10000415 	stw	zero,16(r2)
  8058bc:	10000515 	stw	zero,20(r2)
  8058c0:	10000615 	stw	zero,24(r2)
  8058c4:	10001705 	stb	zero,92(r2)
  8058c8:	10001745 	stb	zero,93(r2)
  8058cc:	10001785 	stb	zero,94(r2)
  8058d0:	100017c5 	stb	zero,95(r2)
  8058d4:	10001805 	stb	zero,96(r2)
  8058d8:	10001845 	stb	zero,97(r2)
  8058dc:	10001885 	stb	zero,98(r2)
  8058e0:	100018c5 	stb	zero,99(r2)
  8058e4:	10000c15 	stw	zero,48(r2)
  8058e8:	10000d15 	stw	zero,52(r2)
  8058ec:	10001115 	stw	zero,68(r2)
  8058f0:	10001215 	stw	zero,72(r2)
  8058f4:	dfc00217 	ldw	ra,8(sp)
  8058f8:	dc400117 	ldw	r17,4(sp)
  8058fc:	dc000017 	ldw	r16,0(sp)
  805900:	dec00304 	addi	sp,sp,12
  805904:	f800283a 	ret
  805908:	80800017 	ldw	r2,0(r16)
  80590c:	10000526 	beq	r2,zero,805924 <__sfp+0xdc>
  805910:	1021883a 	mov	r16,r2
  805914:	003fd606 	br	805870 <__sfp+0x28>
  805918:	8009883a 	mov	r4,r16
  80591c:	08056600 	call	805660 <__sinit.part.0>
  805920:	003fd206 	br	80586c <__sfp+0x24>
  805924:	01400104 	movi	r5,4
  805928:	8809883a 	mov	r4,r17
  80592c:	08057d00 	call	8057d0 <__sfmoreglue>
  805930:	80800015 	stw	r2,0(r16)
  805934:	103ff61e 	bne	r2,zero,805910 <__sfp+0xc8>
  805938:	00c00304 	movi	r3,12
  80593c:	88c00015 	stw	r3,0(r17)
  805940:	003fec06 	br	8058f4 <__sfp+0xac>

00805944 <_cleanup>:
  805944:	00802074 	movhi	r2,129
  805948:	110bb517 	ldw	r4,11988(r2)
  80594c:	01402074 	movhi	r5,129
  805950:	29682d04 	addi	r5,r5,-24396
  805954:	080631c1 	jmpi	80631c <_fwalk_reent>

00805958 <__sinit>:
  805958:	20800e17 	ldw	r2,56(r4)
  80595c:	10000126 	beq	r2,zero,805964 <__sinit+0xc>
  805960:	f800283a 	ret
  805964:	08056601 	jmpi	805660 <__sinit.part.0>

00805968 <__sfp_lock_acquire>:
  805968:	f800283a 	ret

0080596c <__sfp_lock_release>:
  80596c:	f800283a 	ret

00805970 <__sinit_lock_acquire>:
  805970:	f800283a 	ret

00805974 <__sinit_lock_release>:
  805974:	f800283a 	ret

00805978 <__fp_lock_all>:
  805978:	00802074 	movhi	r2,129
  80597c:	110bb617 	ldw	r4,11992(r2)
  805980:	01402034 	movhi	r5,128
  805984:	29559304 	addi	r5,r5,22092
  805988:	08062841 	jmpi	806284 <_fwalk>

0080598c <__fp_unlock_all>:
  80598c:	00802074 	movhi	r2,129
  805990:	110bb617 	ldw	r4,11992(r2)
  805994:	01402034 	movhi	r5,128
  805998:	2955f204 	addi	r5,r5,22472
  80599c:	08062841 	jmpi	806284 <_fwalk>

008059a0 <_malloc_trim_r>:
  8059a0:	defffb04 	addi	sp,sp,-20
  8059a4:	dcc00315 	stw	r19,12(sp)
  8059a8:	04c02074 	movhi	r19,129
  8059ac:	dc800215 	stw	r18,8(sp)
  8059b0:	dc400115 	stw	r17,4(sp)
  8059b4:	dc000015 	stw	r16,0(sp)
  8059b8:	dfc00415 	stw	ra,16(sp)
  8059bc:	2821883a 	mov	r16,r5
  8059c0:	9cc5d104 	addi	r19,r19,5956
  8059c4:	2025883a 	mov	r18,r4
  8059c8:	080ea000 	call	80ea00 <__malloc_lock>
  8059cc:	98800217 	ldw	r2,8(r19)
  8059d0:	14400117 	ldw	r17,4(r2)
  8059d4:	00bfff04 	movi	r2,-4
  8059d8:	88a2703a 	and	r17,r17,r2
  8059dc:	8c21c83a 	sub	r16,r17,r16
  8059e0:	8403fbc4 	addi	r16,r16,4079
  8059e4:	8020d33a 	srli	r16,r16,12
  8059e8:	843fffc4 	addi	r16,r16,-1
  8059ec:	8020933a 	slli	r16,r16,12
  8059f0:	80840008 	cmpgei	r2,r16,4096
  8059f4:	10000626 	beq	r2,zero,805a10 <_malloc_trim_r+0x70>
  8059f8:	000b883a 	mov	r5,zero
  8059fc:	9009883a 	mov	r4,r18
  805a00:	08088280 	call	808828 <_sbrk_r>
  805a04:	98c00217 	ldw	r3,8(r19)
  805a08:	1c47883a 	add	r3,r3,r17
  805a0c:	10c00a26 	beq	r2,r3,805a38 <_malloc_trim_r+0x98>
  805a10:	9009883a 	mov	r4,r18
  805a14:	080ea240 	call	80ea24 <__malloc_unlock>
  805a18:	0005883a 	mov	r2,zero
  805a1c:	dfc00417 	ldw	ra,16(sp)
  805a20:	dcc00317 	ldw	r19,12(sp)
  805a24:	dc800217 	ldw	r18,8(sp)
  805a28:	dc400117 	ldw	r17,4(sp)
  805a2c:	dc000017 	ldw	r16,0(sp)
  805a30:	dec00504 	addi	sp,sp,20
  805a34:	f800283a 	ret
  805a38:	040bc83a 	sub	r5,zero,r16
  805a3c:	9009883a 	mov	r4,r18
  805a40:	08088280 	call	808828 <_sbrk_r>
  805a44:	10bfffd8 	cmpnei	r2,r2,-1
  805a48:	10000d26 	beq	r2,zero,805a80 <_malloc_trim_r+0xe0>
  805a4c:	00802074 	movhi	r2,129
  805a50:	1092ca17 	ldw	r2,19240(r2)
  805a54:	98c00217 	ldw	r3,8(r19)
  805a58:	8c23c83a 	sub	r17,r17,r16
  805a5c:	8c400054 	ori	r17,r17,1
  805a60:	1421c83a 	sub	r16,r2,r16
  805a64:	1c400115 	stw	r17,4(r3)
  805a68:	00802074 	movhi	r2,129
  805a6c:	9009883a 	mov	r4,r18
  805a70:	1412ca15 	stw	r16,19240(r2)
  805a74:	080ea240 	call	80ea24 <__malloc_unlock>
  805a78:	00800044 	movi	r2,1
  805a7c:	003fe706 	br	805a1c <_malloc_trim_r+0x7c>
  805a80:	000b883a 	mov	r5,zero
  805a84:	9009883a 	mov	r4,r18
  805a88:	08088280 	call	808828 <_sbrk_r>
  805a8c:	99000217 	ldw	r4,8(r19)
  805a90:	1107c83a 	sub	r3,r2,r4
  805a94:	19400410 	cmplti	r5,r3,16
  805a98:	283fdd1e 	bne	r5,zero,805a10 <_malloc_trim_r+0x70>
  805a9c:	01402074 	movhi	r5,129
  805aa0:	294bb717 	ldw	r5,11996(r5)
  805aa4:	18c00054 	ori	r3,r3,1
  805aa8:	20c00115 	stw	r3,4(r4)
  805aac:	1145c83a 	sub	r2,r2,r5
  805ab0:	01402074 	movhi	r5,129
  805ab4:	2892ca15 	stw	r2,19240(r5)
  805ab8:	003fd506 	br	805a10 <_malloc_trim_r+0x70>

00805abc <_free_r>:
  805abc:	28004f26 	beq	r5,zero,805bfc <_free_r+0x140>
  805ac0:	defffd04 	addi	sp,sp,-12
  805ac4:	dc400115 	stw	r17,4(sp)
  805ac8:	dc000015 	stw	r16,0(sp)
  805acc:	2023883a 	mov	r17,r4
  805ad0:	2821883a 	mov	r16,r5
  805ad4:	dfc00215 	stw	ra,8(sp)
  805ad8:	080ea000 	call	80ea00 <__malloc_lock>
  805adc:	81ffff17 	ldw	r7,-4(r16)
  805ae0:	00bfff84 	movi	r2,-2
  805ae4:	80fffe04 	addi	r3,r16,-8
  805ae8:	3884703a 	and	r2,r7,r2
  805aec:	01002074 	movhi	r4,129
  805af0:	188d883a 	add	r6,r3,r2
  805af4:	2105d104 	addi	r4,r4,5956
  805af8:	31400117 	ldw	r5,4(r6)
  805afc:	22000217 	ldw	r8,8(r4)
  805b00:	027fff04 	movi	r9,-4
  805b04:	2a4a703a 	and	r5,r5,r9
  805b08:	41806426 	beq	r8,r6,805c9c <_free_r+0x1e0>
  805b0c:	31400115 	stw	r5,4(r6)
  805b10:	39c0004c 	andi	r7,r7,1
  805b14:	3151883a 	add	r8,r6,r5
  805b18:	3800281e 	bne	r7,zero,805bbc <_free_r+0x100>
  805b1c:	82bffe17 	ldw	r10,-8(r16)
  805b20:	42000117 	ldw	r8,4(r8)
  805b24:	01c02074 	movhi	r7,129
  805b28:	1a87c83a 	sub	r3,r3,r10
  805b2c:	1a400217 	ldw	r9,8(r3)
  805b30:	39c5d304 	addi	r7,r7,5964
  805b34:	1285883a 	add	r2,r2,r10
  805b38:	4200004c 	andi	r8,r8,1
  805b3c:	49c04c26 	beq	r9,r7,805c70 <_free_r+0x1b4>
  805b40:	1a800317 	ldw	r10,12(r3)
  805b44:	4a800315 	stw	r10,12(r9)
  805b48:	52400215 	stw	r9,8(r10)
  805b4c:	40007126 	beq	r8,zero,805d14 <_free_r+0x258>
  805b50:	11400054 	ori	r5,r2,1
  805b54:	19400115 	stw	r5,4(r3)
  805b58:	30800015 	stw	r2,0(r6)
  805b5c:	11408028 	cmpgeui	r5,r2,512
  805b60:	28002c1e 	bne	r5,zero,805c14 <_free_r+0x158>
  805b64:	100ad0fa 	srli	r5,r2,3
  805b68:	100cd17a 	srli	r6,r2,5
  805b6c:	00800044 	movi	r2,1
  805b70:	29400044 	addi	r5,r5,1
  805b74:	280a90fa 	slli	r5,r5,3
  805b78:	21c00117 	ldw	r7,4(r4)
  805b7c:	1184983a 	sll	r2,r2,r6
  805b80:	214b883a 	add	r5,r4,r5
  805b84:	29800017 	ldw	r6,0(r5)
  805b88:	11c4b03a 	or	r2,r2,r7
  805b8c:	29fffe04 	addi	r7,r5,-8
  805b90:	19c00315 	stw	r7,12(r3)
  805b94:	19800215 	stw	r6,8(r3)
  805b98:	20800115 	stw	r2,4(r4)
  805b9c:	28c00015 	stw	r3,0(r5)
  805ba0:	30c00315 	stw	r3,12(r6)
  805ba4:	8809883a 	mov	r4,r17
  805ba8:	dfc00217 	ldw	ra,8(sp)
  805bac:	dc400117 	ldw	r17,4(sp)
  805bb0:	dc000017 	ldw	r16,0(sp)
  805bb4:	dec00304 	addi	sp,sp,12
  805bb8:	080ea241 	jmpi	80ea24 <__malloc_unlock>
  805bbc:	41c00117 	ldw	r7,4(r8)
  805bc0:	39c0004c 	andi	r7,r7,1
  805bc4:	38000e1e 	bne	r7,zero,805c00 <_free_r+0x144>
  805bc8:	01c02074 	movhi	r7,129
  805bcc:	1145883a 	add	r2,r2,r5
  805bd0:	39c5d304 	addi	r7,r7,5964
  805bd4:	31400217 	ldw	r5,8(r6)
  805bd8:	12400054 	ori	r9,r2,1
  805bdc:	1891883a 	add	r8,r3,r2
  805be0:	29c05226 	beq	r5,r7,805d2c <_free_r+0x270>
  805be4:	31800317 	ldw	r6,12(r6)
  805be8:	29800315 	stw	r6,12(r5)
  805bec:	31400215 	stw	r5,8(r6)
  805bf0:	1a400115 	stw	r9,4(r3)
  805bf4:	40800015 	stw	r2,0(r8)
  805bf8:	003fd806 	br	805b5c <_free_r+0xa0>
  805bfc:	f800283a 	ret
  805c00:	11400054 	ori	r5,r2,1
  805c04:	817fff15 	stw	r5,-4(r16)
  805c08:	30800015 	stw	r2,0(r6)
  805c0c:	11408028 	cmpgeui	r5,r2,512
  805c10:	283fd426 	beq	r5,zero,805b64 <_free_r+0xa8>
  805c14:	100ad27a 	srli	r5,r2,9
  805c18:	29800168 	cmpgeui	r6,r5,5
  805c1c:	3000341e 	bne	r6,zero,805cf0 <_free_r+0x234>
  805c20:	100ad1ba 	srli	r5,r2,6
  805c24:	29800e44 	addi	r6,r5,57
  805c28:	300c90fa 	slli	r6,r6,3
  805c2c:	29c00e04 	addi	r7,r5,56
  805c30:	218d883a 	add	r6,r4,r6
  805c34:	31400017 	ldw	r5,0(r6)
  805c38:	31bffe04 	addi	r6,r6,-8
  805c3c:	31404226 	beq	r6,r5,805d48 <_free_r+0x28c>
  805c40:	01ffff04 	movi	r7,-4
  805c44:	29000117 	ldw	r4,4(r5)
  805c48:	21c8703a 	and	r4,r4,r7
  805c4c:	1100022e 	bgeu	r2,r4,805c58 <_free_r+0x19c>
  805c50:	29400217 	ldw	r5,8(r5)
  805c54:	317ffb1e 	bne	r6,r5,805c44 <_free_r+0x188>
  805c58:	29800317 	ldw	r6,12(r5)
  805c5c:	19800315 	stw	r6,12(r3)
  805c60:	19400215 	stw	r5,8(r3)
  805c64:	30c00215 	stw	r3,8(r6)
  805c68:	28c00315 	stw	r3,12(r5)
  805c6c:	003fcd06 	br	805ba4 <_free_r+0xe8>
  805c70:	40004d1e 	bne	r8,zero,805da8 <_free_r+0x2ec>
  805c74:	31000317 	ldw	r4,12(r6)
  805c78:	31800217 	ldw	r6,8(r6)
  805c7c:	2885883a 	add	r2,r5,r2
  805c80:	11400054 	ori	r5,r2,1
  805c84:	31000315 	stw	r4,12(r6)
  805c88:	21800215 	stw	r6,8(r4)
  805c8c:	19400115 	stw	r5,4(r3)
  805c90:	1887883a 	add	r3,r3,r2
  805c94:	18800015 	stw	r2,0(r3)
  805c98:	003fc206 	br	805ba4 <_free_r+0xe8>
  805c9c:	39c0004c 	andi	r7,r7,1
  805ca0:	1145883a 	add	r2,r2,r5
  805ca4:	3800071e 	bne	r7,zero,805cc4 <_free_r+0x208>
  805ca8:	81fffe17 	ldw	r7,-8(r16)
  805cac:	19c7c83a 	sub	r3,r3,r7
  805cb0:	19400317 	ldw	r5,12(r3)
  805cb4:	19800217 	ldw	r6,8(r3)
  805cb8:	11c5883a 	add	r2,r2,r7
  805cbc:	31400315 	stw	r5,12(r6)
  805cc0:	29800215 	stw	r6,8(r5)
  805cc4:	01402074 	movhi	r5,129
  805cc8:	11800054 	ori	r6,r2,1
  805ccc:	294bb817 	ldw	r5,12000(r5)
  805cd0:	19800115 	stw	r6,4(r3)
  805cd4:	20c00215 	stw	r3,8(r4)
  805cd8:	117fb236 	bltu	r2,r5,805ba4 <_free_r+0xe8>
  805cdc:	00802074 	movhi	r2,129
  805ce0:	1152c017 	ldw	r5,19200(r2)
  805ce4:	8809883a 	mov	r4,r17
  805ce8:	08059a00 	call	8059a0 <_malloc_trim_r>
  805cec:	003fad06 	br	805ba4 <_free_r+0xe8>
  805cf0:	29800568 	cmpgeui	r6,r5,21
  805cf4:	30000926 	beq	r6,zero,805d1c <_free_r+0x260>
  805cf8:	29801568 	cmpgeui	r6,r5,85
  805cfc:	3000191e 	bne	r6,zero,805d64 <_free_r+0x2a8>
  805d00:	100ad33a 	srli	r5,r2,12
  805d04:	29801bc4 	addi	r6,r5,111
  805d08:	300c90fa 	slli	r6,r6,3
  805d0c:	29c01b84 	addi	r7,r5,110
  805d10:	003fc706 	br	805c30 <_free_r+0x174>
  805d14:	1145883a 	add	r2,r2,r5
  805d18:	003fae06 	br	805bd4 <_free_r+0x118>
  805d1c:	29801704 	addi	r6,r5,92
  805d20:	300c90fa 	slli	r6,r6,3
  805d24:	29c016c4 	addi	r7,r5,91
  805d28:	003fc106 	br	805c30 <_free_r+0x174>
  805d2c:	20c00515 	stw	r3,20(r4)
  805d30:	20c00415 	stw	r3,16(r4)
  805d34:	19c00315 	stw	r7,12(r3)
  805d38:	19c00215 	stw	r7,8(r3)
  805d3c:	1a400115 	stw	r9,4(r3)
  805d40:	40800015 	stw	r2,0(r8)
  805d44:	003f9706 	br	805ba4 <_free_r+0xe8>
  805d48:	380fd0ba 	srai	r7,r7,2
  805d4c:	00800044 	movi	r2,1
  805d50:	22000117 	ldw	r8,4(r4)
  805d54:	11ce983a 	sll	r7,r2,r7
  805d58:	3a0eb03a 	or	r7,r7,r8
  805d5c:	21c00115 	stw	r7,4(r4)
  805d60:	003fbe06 	br	805c5c <_free_r+0x1a0>
  805d64:	29805568 	cmpgeui	r6,r5,341
  805d68:	3000051e 	bne	r6,zero,805d80 <_free_r+0x2c4>
  805d6c:	100ad3fa 	srli	r5,r2,15
  805d70:	29801e04 	addi	r6,r5,120
  805d74:	300c90fa 	slli	r6,r6,3
  805d78:	29c01dc4 	addi	r7,r5,119
  805d7c:	003fac06 	br	805c30 <_free_r+0x174>
  805d80:	29415568 	cmpgeui	r5,r5,1365
  805d84:	2800051e 	bne	r5,zero,805d9c <_free_r+0x2e0>
  805d88:	100ad4ba 	srli	r5,r2,18
  805d8c:	29801f44 	addi	r6,r5,125
  805d90:	300c90fa 	slli	r6,r6,3
  805d94:	29c01f04 	addi	r7,r5,124
  805d98:	003fa506 	br	805c30 <_free_r+0x174>
  805d9c:	0180fe04 	movi	r6,1016
  805da0:	01c01f84 	movi	r7,126
  805da4:	003fa206 	br	805c30 <_free_r+0x174>
  805da8:	11000054 	ori	r4,r2,1
  805dac:	19000115 	stw	r4,4(r3)
  805db0:	30800015 	stw	r2,0(r6)
  805db4:	003f7b06 	br	805ba4 <_free_r+0xe8>

00805db8 <__sfvwrite_r>:
  805db8:	30800217 	ldw	r2,8(r6)
  805dbc:	1000c826 	beq	r2,zero,8060e0 <__sfvwrite_r+0x328>
  805dc0:	29c0030b 	ldhu	r7,12(r5)
  805dc4:	defff404 	addi	sp,sp,-48
  805dc8:	dd800815 	stw	r22,32(sp)
  805dcc:	dd400715 	stw	r21,28(sp)
  805dd0:	dc000215 	stw	r16,8(sp)
  805dd4:	dfc00b15 	stw	ra,44(sp)
  805dd8:	df000a15 	stw	fp,40(sp)
  805ddc:	ddc00915 	stw	r23,36(sp)
  805de0:	dd000615 	stw	r20,24(sp)
  805de4:	dcc00515 	stw	r19,20(sp)
  805de8:	dc800415 	stw	r18,16(sp)
  805dec:	dc400315 	stw	r17,12(sp)
  805df0:	3880020c 	andi	r2,r7,8
  805df4:	302d883a 	mov	r22,r6
  805df8:	202b883a 	mov	r21,r4
  805dfc:	2821883a 	mov	r16,r5
  805e00:	10002226 	beq	r2,zero,805e8c <__sfvwrite_r+0xd4>
  805e04:	28800417 	ldw	r2,16(r5)
  805e08:	10002026 	beq	r2,zero,805e8c <__sfvwrite_r+0xd4>
  805e0c:	3880008c 	andi	r2,r7,2
  805e10:	b4400017 	ldw	r17,0(r22)
  805e14:	10002526 	beq	r2,zero,805eac <__sfvwrite_r+0xf4>
  805e18:	80800917 	ldw	r2,36(r16)
  805e1c:	81400717 	ldw	r5,28(r16)
  805e20:	05200034 	movhi	r20,32768
  805e24:	0027883a 	mov	r19,zero
  805e28:	0025883a 	mov	r18,zero
  805e2c:	a53f0004 	addi	r20,r20,-1024
  805e30:	980d883a 	mov	r6,r19
  805e34:	a809883a 	mov	r4,r21
  805e38:	90001026 	beq	r18,zero,805e7c <__sfvwrite_r+0xc4>
  805e3c:	900f883a 	mov	r7,r18
  805e40:	a480012e 	bgeu	r20,r18,805e48 <__sfvwrite_r+0x90>
  805e44:	a00f883a 	mov	r7,r20
  805e48:	103ee83a 	callr	r2
  805e4c:	00809f0e 	bge	zero,r2,8060cc <__sfvwrite_r+0x314>
  805e50:	b1000217 	ldw	r4,8(r22)
  805e54:	98a7883a 	add	r19,r19,r2
  805e58:	90a5c83a 	sub	r18,r18,r2
  805e5c:	2085c83a 	sub	r2,r4,r2
  805e60:	b0800215 	stw	r2,8(r22)
  805e64:	10006326 	beq	r2,zero,805ff4 <__sfvwrite_r+0x23c>
  805e68:	80800917 	ldw	r2,36(r16)
  805e6c:	81400717 	ldw	r5,28(r16)
  805e70:	980d883a 	mov	r6,r19
  805e74:	a809883a 	mov	r4,r21
  805e78:	903ff01e 	bne	r18,zero,805e3c <__sfvwrite_r+0x84>
  805e7c:	8cc00017 	ldw	r19,0(r17)
  805e80:	8c800117 	ldw	r18,4(r17)
  805e84:	8c400204 	addi	r17,r17,8
  805e88:	003fe906 	br	805e30 <__sfvwrite_r+0x78>
  805e8c:	800b883a 	mov	r5,r16
  805e90:	a809883a 	mov	r4,r21
  805e94:	08038d00 	call	8038d0 <__swsetup_r>
  805e98:	1000f81e 	bne	r2,zero,80627c <__sfvwrite_r+0x4c4>
  805e9c:	81c0030b 	ldhu	r7,12(r16)
  805ea0:	b4400017 	ldw	r17,0(r22)
  805ea4:	3880008c 	andi	r2,r7,2
  805ea8:	103fdb1e 	bne	r2,zero,805e18 <__sfvwrite_r+0x60>
  805eac:	3880004c 	andi	r2,r7,1
  805eb0:	84800217 	ldw	r18,8(r16)
  805eb4:	82000017 	ldw	r8,0(r16)
  805eb8:	10008b1e 	bne	r2,zero,8060e8 <__sfvwrite_r+0x330>
  805ebc:	00a00034 	movhi	r2,32768
  805ec0:	10bfff84 	addi	r2,r2,-2
  805ec4:	00e00034 	movhi	r3,32768
  805ec8:	d8800015 	stw	r2,0(sp)
  805ecc:	18bfffc4 	addi	r2,r3,-1
  805ed0:	0039883a 	mov	fp,zero
  805ed4:	0027883a 	mov	r19,zero
  805ed8:	d8800115 	stw	r2,4(sp)
  805edc:	98004126 	beq	r19,zero,805fe4 <__sfvwrite_r+0x22c>
  805ee0:	3880800c 	andi	r2,r7,512
  805ee4:	10009326 	beq	r2,zero,806134 <__sfvwrite_r+0x37c>
  805ee8:	902f883a 	mov	r23,r18
  805eec:	9c80ba36 	bltu	r19,r18,8061d8 <__sfvwrite_r+0x420>
  805ef0:	3881200c 	andi	r2,r7,1152
  805ef4:	10002626 	beq	r2,zero,805f90 <__sfvwrite_r+0x1d8>
  805ef8:	81800517 	ldw	r6,20(r16)
  805efc:	81400417 	ldw	r5,16(r16)
  805f00:	98800044 	addi	r2,r19,1
  805f04:	3189883a 	add	r4,r6,r6
  805f08:	2189883a 	add	r4,r4,r6
  805f0c:	2028d7fa 	srli	r20,r4,31
  805f10:	4165c83a 	sub	r18,r8,r5
  805f14:	1485883a 	add	r2,r2,r18
  805f18:	a109883a 	add	r4,r20,r4
  805f1c:	2029d07a 	srai	r20,r4,1
  805f20:	a00d883a 	mov	r6,r20
  805f24:	a080022e 	bgeu	r20,r2,805f30 <__sfvwrite_r+0x178>
  805f28:	1029883a 	mov	r20,r2
  805f2c:	100d883a 	mov	r6,r2
  805f30:	39c1000c 	andi	r7,r7,1024
  805f34:	3800c126 	beq	r7,zero,80623c <__sfvwrite_r+0x484>
  805f38:	a809883a 	mov	r4,r21
  805f3c:	300b883a 	mov	r5,r6
  805f40:	08065bc0 	call	8065bc <_malloc_r>
  805f44:	1009883a 	mov	r4,r2
  805f48:	1000c826 	beq	r2,zero,80626c <__sfvwrite_r+0x4b4>
  805f4c:	81400417 	ldw	r5,16(r16)
  805f50:	900d883a 	mov	r6,r18
  805f54:	0806e700 	call	806e70 <memcpy>
  805f58:	1009883a 	mov	r4,r2
  805f5c:	8080030b 	ldhu	r2,12(r16)
  805f60:	00fedfc4 	movi	r3,-1153
  805f64:	10c4703a 	and	r2,r2,r3
  805f68:	10802014 	ori	r2,r2,128
  805f6c:	8080030d 	sth	r2,12(r16)
  805f70:	2491883a 	add	r8,r4,r18
  805f74:	a485c83a 	sub	r2,r20,r18
  805f78:	81000415 	stw	r4,16(r16)
  805f7c:	82000015 	stw	r8,0(r16)
  805f80:	85000515 	stw	r20,20(r16)
  805f84:	9825883a 	mov	r18,r19
  805f88:	80800215 	stw	r2,8(r16)
  805f8c:	982f883a 	mov	r23,r19
  805f90:	4009883a 	mov	r4,r8
  805f94:	b80d883a 	mov	r6,r23
  805f98:	e00b883a 	mov	r5,fp
  805f9c:	0806f700 	call	806f70 <memmove>
  805fa0:	81000217 	ldw	r4,8(r16)
  805fa4:	80800017 	ldw	r2,0(r16)
  805fa8:	9829883a 	mov	r20,r19
  805fac:	24a5c83a 	sub	r18,r4,r18
  805fb0:	15c5883a 	add	r2,r2,r23
  805fb4:	84800215 	stw	r18,8(r16)
  805fb8:	80800015 	stw	r2,0(r16)
  805fbc:	0027883a 	mov	r19,zero
  805fc0:	b0800217 	ldw	r2,8(r22)
  805fc4:	e539883a 	add	fp,fp,r20
  805fc8:	1529c83a 	sub	r20,r2,r20
  805fcc:	b5000215 	stw	r20,8(r22)
  805fd0:	a0000826 	beq	r20,zero,805ff4 <__sfvwrite_r+0x23c>
  805fd4:	81c0030b 	ldhu	r7,12(r16)
  805fd8:	84800217 	ldw	r18,8(r16)
  805fdc:	82000017 	ldw	r8,0(r16)
  805fe0:	983fbf1e 	bne	r19,zero,805ee0 <__sfvwrite_r+0x128>
  805fe4:	8f000017 	ldw	fp,0(r17)
  805fe8:	8cc00117 	ldw	r19,4(r17)
  805fec:	8c400204 	addi	r17,r17,8
  805ff0:	003fba06 	br	805edc <__sfvwrite_r+0x124>
  805ff4:	0005883a 	mov	r2,zero
  805ff8:	dfc00b17 	ldw	ra,44(sp)
  805ffc:	df000a17 	ldw	fp,40(sp)
  806000:	ddc00917 	ldw	r23,36(sp)
  806004:	dd800817 	ldw	r22,32(sp)
  806008:	dd400717 	ldw	r21,28(sp)
  80600c:	dd000617 	ldw	r20,24(sp)
  806010:	dcc00517 	ldw	r19,20(sp)
  806014:	dc800417 	ldw	r18,16(sp)
  806018:	dc400317 	ldw	r17,12(sp)
  80601c:	dc000217 	ldw	r16,8(sp)
  806020:	dec00c04 	addi	sp,sp,48
  806024:	f800283a 	ret
  806028:	e1c07316 	blt	fp,r7,8061f8 <__sfvwrite_r+0x440>
  80602c:	80800917 	ldw	r2,36(r16)
  806030:	81400717 	ldw	r5,28(r16)
  806034:	b80d883a 	mov	r6,r23
  806038:	a809883a 	mov	r4,r21
  80603c:	103ee83a 	callr	r2
  806040:	1025883a 	mov	r18,r2
  806044:	0080210e 	bge	zero,r2,8060cc <__sfvwrite_r+0x314>
  806048:	a4a9c83a 	sub	r20,r20,r18
  80604c:	a0006526 	beq	r20,zero,8061e4 <__sfvwrite_r+0x42c>
  806050:	00800044 	movi	r2,1
  806054:	b1800217 	ldw	r6,8(r22)
  806058:	bcaf883a 	add	r23,r23,r18
  80605c:	9ca7c83a 	sub	r19,r19,r18
  806060:	34a5c83a 	sub	r18,r6,r18
  806064:	b4800215 	stw	r18,8(r22)
  806068:	903fe226 	beq	r18,zero,805ff4 <__sfvwrite_r+0x23c>
  80606c:	84800217 	ldw	r18,8(r16)
  806070:	82000017 	ldw	r8,0(r16)
  806074:	98002126 	beq	r19,zero,8060fc <__sfvwrite_r+0x344>
  806078:	10002426 	beq	r2,zero,80610c <__sfvwrite_r+0x354>
  80607c:	a005883a 	mov	r2,r20
  806080:	9839883a 	mov	fp,r19
  806084:	14c0012e 	bgeu	r2,r19,80608c <__sfvwrite_r+0x2d4>
  806088:	1039883a 	mov	fp,r2
  80608c:	80800417 	ldw	r2,16(r16)
  806090:	81c00517 	ldw	r7,20(r16)
  806094:	123fe42e 	bgeu	r2,r8,806028 <__sfvwrite_r+0x270>
  806098:	3ca5883a 	add	r18,r7,r18
  80609c:	973fe20e 	bge	r18,fp,806028 <__sfvwrite_r+0x270>
  8060a0:	b80b883a 	mov	r5,r23
  8060a4:	4009883a 	mov	r4,r8
  8060a8:	900d883a 	mov	r6,r18
  8060ac:	0806f700 	call	806f70 <memmove>
  8060b0:	80800017 	ldw	r2,0(r16)
  8060b4:	800b883a 	mov	r5,r16
  8060b8:	a809883a 	mov	r4,r21
  8060bc:	1485883a 	add	r2,r2,r18
  8060c0:	80800015 	stw	r2,0(r16)
  8060c4:	08055c40 	call	8055c4 <_fflush_r>
  8060c8:	103fdf26 	beq	r2,zero,806048 <__sfvwrite_r+0x290>
  8060cc:	8080030b 	ldhu	r2,12(r16)
  8060d0:	10801014 	ori	r2,r2,64
  8060d4:	8080030d 	sth	r2,12(r16)
  8060d8:	00bfffc4 	movi	r2,-1
  8060dc:	003fc606 	br	805ff8 <__sfvwrite_r+0x240>
  8060e0:	0005883a 	mov	r2,zero
  8060e4:	f800283a 	ret
  8060e8:	0027883a 	mov	r19,zero
  8060ec:	0029883a 	mov	r20,zero
  8060f0:	0005883a 	mov	r2,zero
  8060f4:	002f883a 	mov	r23,zero
  8060f8:	983fdf1e 	bne	r19,zero,806078 <__sfvwrite_r+0x2c0>
  8060fc:	8cc00117 	ldw	r19,4(r17)
  806100:	8dc00017 	ldw	r23,0(r17)
  806104:	8c400204 	addi	r17,r17,8
  806108:	983ffc26 	beq	r19,zero,8060fc <__sfvwrite_r+0x344>
  80610c:	980d883a 	mov	r6,r19
  806110:	01400284 	movi	r5,10
  806114:	b809883a 	mov	r4,r23
  806118:	da000015 	stw	r8,0(sp)
  80611c:	0806d9c0 	call	806d9c <memchr>
  806120:	da000017 	ldw	r8,0(sp)
  806124:	10004226 	beq	r2,zero,806230 <__sfvwrite_r+0x478>
  806128:	10800044 	addi	r2,r2,1
  80612c:	15e9c83a 	sub	r20,r2,r23
  806130:	003fd206 	br	80607c <__sfvwrite_r+0x2c4>
  806134:	80800417 	ldw	r2,16(r16)
  806138:	12001436 	bltu	r2,r8,80618c <__sfvwrite_r+0x3d4>
  80613c:	85000517 	ldw	r20,20(r16)
  806140:	9d001236 	bltu	r19,r20,80618c <__sfvwrite_r+0x3d4>
  806144:	d8800017 	ldw	r2,0(sp)
  806148:	14c0372e 	bgeu	r2,r19,806228 <__sfvwrite_r+0x470>
  80614c:	d9000117 	ldw	r4,4(sp)
  806150:	a00b883a 	mov	r5,r20
  806154:	080b8d80 	call	80b8d8 <__divsi3>
  806158:	a00b883a 	mov	r5,r20
  80615c:	1009883a 	mov	r4,r2
  806160:	08015040 	call	801504 <__mulsi3>
  806164:	82000917 	ldw	r8,36(r16)
  806168:	81400717 	ldw	r5,28(r16)
  80616c:	100f883a 	mov	r7,r2
  806170:	e00d883a 	mov	r6,fp
  806174:	a809883a 	mov	r4,r21
  806178:	403ee83a 	callr	r8
  80617c:	1029883a 	mov	r20,r2
  806180:	00bfd20e 	bge	zero,r2,8060cc <__sfvwrite_r+0x314>
  806184:	9d27c83a 	sub	r19,r19,r20
  806188:	003f8d06 	br	805fc0 <__sfvwrite_r+0x208>
  80618c:	9029883a 	mov	r20,r18
  806190:	9c80012e 	bgeu	r19,r18,806198 <__sfvwrite_r+0x3e0>
  806194:	9829883a 	mov	r20,r19
  806198:	4009883a 	mov	r4,r8
  80619c:	a00d883a 	mov	r6,r20
  8061a0:	e00b883a 	mov	r5,fp
  8061a4:	0806f700 	call	806f70 <memmove>
  8061a8:	80800217 	ldw	r2,8(r16)
  8061ac:	81000017 	ldw	r4,0(r16)
  8061b0:	1505c83a 	sub	r2,r2,r20
  8061b4:	2509883a 	add	r4,r4,r20
  8061b8:	80800215 	stw	r2,8(r16)
  8061bc:	81000015 	stw	r4,0(r16)
  8061c0:	103ff01e 	bne	r2,zero,806184 <__sfvwrite_r+0x3cc>
  8061c4:	800b883a 	mov	r5,r16
  8061c8:	a809883a 	mov	r4,r21
  8061cc:	08055c40 	call	8055c4 <_fflush_r>
  8061d0:	103fec26 	beq	r2,zero,806184 <__sfvwrite_r+0x3cc>
  8061d4:	003fbd06 	br	8060cc <__sfvwrite_r+0x314>
  8061d8:	9825883a 	mov	r18,r19
  8061dc:	982f883a 	mov	r23,r19
  8061e0:	003f6b06 	br	805f90 <__sfvwrite_r+0x1d8>
  8061e4:	800b883a 	mov	r5,r16
  8061e8:	a809883a 	mov	r4,r21
  8061ec:	08055c40 	call	8055c4 <_fflush_r>
  8061f0:	103f9826 	beq	r2,zero,806054 <__sfvwrite_r+0x29c>
  8061f4:	003fb506 	br	8060cc <__sfvwrite_r+0x314>
  8061f8:	e00d883a 	mov	r6,fp
  8061fc:	b80b883a 	mov	r5,r23
  806200:	4009883a 	mov	r4,r8
  806204:	0806f700 	call	806f70 <memmove>
  806208:	80800217 	ldw	r2,8(r16)
  80620c:	81800017 	ldw	r6,0(r16)
  806210:	e025883a 	mov	r18,fp
  806214:	1705c83a 	sub	r2,r2,fp
  806218:	370d883a 	add	r6,r6,fp
  80621c:	80800215 	stw	r2,8(r16)
  806220:	81800015 	stw	r6,0(r16)
  806224:	003f8806 	br	806048 <__sfvwrite_r+0x290>
  806228:	9809883a 	mov	r4,r19
  80622c:	003fc806 	br	806150 <__sfvwrite_r+0x398>
  806230:	98800044 	addi	r2,r19,1
  806234:	1029883a 	mov	r20,r2
  806238:	003f9106 	br	806080 <__sfvwrite_r+0x2c8>
  80623c:	a809883a 	mov	r4,r21
  806240:	08082c40 	call	8082c4 <_realloc_r>
  806244:	1009883a 	mov	r4,r2
  806248:	103f491e 	bne	r2,zero,805f70 <__sfvwrite_r+0x1b8>
  80624c:	81400417 	ldw	r5,16(r16)
  806250:	a809883a 	mov	r4,r21
  806254:	0805abc0 	call	805abc <_free_r>
  806258:	8080030b 	ldhu	r2,12(r16)
  80625c:	00c00304 	movi	r3,12
  806260:	a8c00015 	stw	r3,0(r21)
  806264:	10bfdfcc 	andi	r2,r2,65407
  806268:	003f9906 	br	8060d0 <__sfvwrite_r+0x318>
  80626c:	00c00304 	movi	r3,12
  806270:	8080030b 	ldhu	r2,12(r16)
  806274:	a8c00015 	stw	r3,0(r21)
  806278:	003f9506 	br	8060d0 <__sfvwrite_r+0x318>
  80627c:	00bfffc4 	movi	r2,-1
  806280:	003f5d06 	br	805ff8 <__sfvwrite_r+0x240>

00806284 <_fwalk>:
  806284:	defffa04 	addi	sp,sp,-24
  806288:	dd000415 	stw	r20,16(sp)
  80628c:	dcc00315 	stw	r19,12(sp)
  806290:	dc800215 	stw	r18,8(sp)
  806294:	dfc00515 	stw	ra,20(sp)
  806298:	dc400115 	stw	r17,4(sp)
  80629c:	dc000015 	stw	r16,0(sp)
  8062a0:	2827883a 	mov	r19,r5
  8062a4:	2480b804 	addi	r18,r4,736
  8062a8:	0029883a 	mov	r20,zero
  8062ac:	94400117 	ldw	r17,4(r18)
  8062b0:	94000217 	ldw	r16,8(r18)
  8062b4:	8c7fffc4 	addi	r17,r17,-1
  8062b8:	88000d16 	blt	r17,zero,8062f0 <_fwalk+0x6c>
  8062bc:	8080030b 	ldhu	r2,12(r16)
  8062c0:	8c7fffc4 	addi	r17,r17,-1
  8062c4:	108000b0 	cmpltui	r2,r2,2
  8062c8:	1000061e 	bne	r2,zero,8062e4 <_fwalk+0x60>
  8062cc:	8080038f 	ldh	r2,14(r16)
  8062d0:	8009883a 	mov	r4,r16
  8062d4:	10bfffe0 	cmpeqi	r2,r2,-1
  8062d8:	1000021e 	bne	r2,zero,8062e4 <_fwalk+0x60>
  8062dc:	983ee83a 	callr	r19
  8062e0:	a0a8b03a 	or	r20,r20,r2
  8062e4:	88bfffd8 	cmpnei	r2,r17,-1
  8062e8:	84001a04 	addi	r16,r16,104
  8062ec:	103ff31e 	bne	r2,zero,8062bc <_fwalk+0x38>
  8062f0:	94800017 	ldw	r18,0(r18)
  8062f4:	903fed1e 	bne	r18,zero,8062ac <_fwalk+0x28>
  8062f8:	a005883a 	mov	r2,r20
  8062fc:	dfc00517 	ldw	ra,20(sp)
  806300:	dd000417 	ldw	r20,16(sp)
  806304:	dcc00317 	ldw	r19,12(sp)
  806308:	dc800217 	ldw	r18,8(sp)
  80630c:	dc400117 	ldw	r17,4(sp)
  806310:	dc000017 	ldw	r16,0(sp)
  806314:	dec00604 	addi	sp,sp,24
  806318:	f800283a 	ret

0080631c <_fwalk_reent>:
  80631c:	defff904 	addi	sp,sp,-28
  806320:	dd400515 	stw	r21,20(sp)
  806324:	dd000415 	stw	r20,16(sp)
  806328:	dcc00315 	stw	r19,12(sp)
  80632c:	dc800215 	stw	r18,8(sp)
  806330:	dfc00615 	stw	ra,24(sp)
  806334:	dc400115 	stw	r17,4(sp)
  806338:	dc000015 	stw	r16,0(sp)
  80633c:	202b883a 	mov	r21,r4
  806340:	2827883a 	mov	r19,r5
  806344:	2480b804 	addi	r18,r4,736
  806348:	0029883a 	mov	r20,zero
  80634c:	94400117 	ldw	r17,4(r18)
  806350:	94000217 	ldw	r16,8(r18)
  806354:	8c7fffc4 	addi	r17,r17,-1
  806358:	88000e16 	blt	r17,zero,806394 <_fwalk_reent+0x78>
  80635c:	8080030b 	ldhu	r2,12(r16)
  806360:	8c7fffc4 	addi	r17,r17,-1
  806364:	108000b0 	cmpltui	r2,r2,2
  806368:	1000071e 	bne	r2,zero,806388 <_fwalk_reent+0x6c>
  80636c:	8080038f 	ldh	r2,14(r16)
  806370:	800b883a 	mov	r5,r16
  806374:	a809883a 	mov	r4,r21
  806378:	10bfffe0 	cmpeqi	r2,r2,-1
  80637c:	1000021e 	bne	r2,zero,806388 <_fwalk_reent+0x6c>
  806380:	983ee83a 	callr	r19
  806384:	a0a8b03a 	or	r20,r20,r2
  806388:	88bfffd8 	cmpnei	r2,r17,-1
  80638c:	84001a04 	addi	r16,r16,104
  806390:	103ff21e 	bne	r2,zero,80635c <_fwalk_reent+0x40>
  806394:	94800017 	ldw	r18,0(r18)
  806398:	903fec1e 	bne	r18,zero,80634c <_fwalk_reent+0x30>
  80639c:	a005883a 	mov	r2,r20
  8063a0:	dfc00617 	ldw	ra,24(sp)
  8063a4:	dd400517 	ldw	r21,20(sp)
  8063a8:	dd000417 	ldw	r20,16(sp)
  8063ac:	dcc00317 	ldw	r19,12(sp)
  8063b0:	dc800217 	ldw	r18,8(sp)
  8063b4:	dc400117 	ldw	r17,4(sp)
  8063b8:	dc000017 	ldw	r16,0(sp)
  8063bc:	dec00704 	addi	sp,sp,28
  8063c0:	f800283a 	ret

008063c4 <__localeconv_l>:
  8063c4:	20803c04 	addi	r2,r4,240
  8063c8:	f800283a 	ret

008063cc <_localeconv_r>:
  8063cc:	00802074 	movhi	r2,129
  8063d0:	10870f04 	addi	r2,r2,7228
  8063d4:	f800283a 	ret

008063d8 <localeconv>:
  8063d8:	00802074 	movhi	r2,129
  8063dc:	10870f04 	addi	r2,r2,7228
  8063e0:	f800283a 	ret

008063e4 <__swhatbuf_r>:
  8063e4:	deffea04 	addi	sp,sp,-88
  8063e8:	dc001215 	stw	r16,72(sp)
  8063ec:	2821883a 	mov	r16,r5
  8063f0:	2940038f 	ldh	r5,14(r5)
  8063f4:	dc801415 	stw	r18,80(sp)
  8063f8:	dc401315 	stw	r17,76(sp)
  8063fc:	dfc01515 	stw	ra,84(sp)
  806400:	3023883a 	mov	r17,r6
  806404:	3825883a 	mov	r18,r7
  806408:	28001016 	blt	r5,zero,80644c <__swhatbuf_r+0x68>
  80640c:	d80d883a 	mov	r6,sp
  806410:	080a4140 	call	80a414 <_fstat_r>
  806414:	10000d16 	blt	r2,zero,80644c <__swhatbuf_r+0x68>
  806418:	d8c00117 	ldw	r3,4(sp)
  80641c:	00820004 	movi	r2,2048
  806420:	18fc000c 	andi	r3,r3,61440
  806424:	18c80020 	cmpeqi	r3,r3,8192
  806428:	90c00015 	stw	r3,0(r18)
  80642c:	00c10004 	movi	r3,1024
  806430:	88c00015 	stw	r3,0(r17)
  806434:	dfc01517 	ldw	ra,84(sp)
  806438:	dc801417 	ldw	r18,80(sp)
  80643c:	dc401317 	ldw	r17,76(sp)
  806440:	dc001217 	ldw	r16,72(sp)
  806444:	dec01604 	addi	sp,sp,88
  806448:	f800283a 	ret
  80644c:	8080030b 	ldhu	r2,12(r16)
  806450:	90000015 	stw	zero,0(r18)
  806454:	1080200c 	andi	r2,r2,128
  806458:	10000426 	beq	r2,zero,80646c <__swhatbuf_r+0x88>
  80645c:	00801004 	movi	r2,64
  806460:	88800015 	stw	r2,0(r17)
  806464:	0005883a 	mov	r2,zero
  806468:	003ff206 	br	806434 <__swhatbuf_r+0x50>
  80646c:	00810004 	movi	r2,1024
  806470:	88800015 	stw	r2,0(r17)
  806474:	0005883a 	mov	r2,zero
  806478:	003fee06 	br	806434 <__swhatbuf_r+0x50>

0080647c <__smakebuf_r>:
  80647c:	2880030b 	ldhu	r2,12(r5)
  806480:	defffa04 	addi	sp,sp,-24
  806484:	dc000215 	stw	r16,8(sp)
  806488:	dfc00515 	stw	ra,20(sp)
  80648c:	dc800415 	stw	r18,16(sp)
  806490:	dc400315 	stw	r17,12(sp)
  806494:	1080008c 	andi	r2,r2,2
  806498:	2821883a 	mov	r16,r5
  80649c:	10000b26 	beq	r2,zero,8064cc <__smakebuf_r+0x50>
  8064a0:	288010c4 	addi	r2,r5,67
  8064a4:	28800015 	stw	r2,0(r5)
  8064a8:	28800415 	stw	r2,16(r5)
  8064ac:	00800044 	movi	r2,1
  8064b0:	28800515 	stw	r2,20(r5)
  8064b4:	dfc00517 	ldw	ra,20(sp)
  8064b8:	dc800417 	ldw	r18,16(sp)
  8064bc:	dc400317 	ldw	r17,12(sp)
  8064c0:	dc000217 	ldw	r16,8(sp)
  8064c4:	dec00604 	addi	sp,sp,24
  8064c8:	f800283a 	ret
  8064cc:	d9c00104 	addi	r7,sp,4
  8064d0:	d80d883a 	mov	r6,sp
  8064d4:	2023883a 	mov	r17,r4
  8064d8:	08063e40 	call	8063e4 <__swhatbuf_r>
  8064dc:	d9000117 	ldw	r4,4(sp)
  8064e0:	1025883a 	mov	r18,r2
  8064e4:	2000131e 	bne	r4,zero,806534 <__smakebuf_r+0xb8>
  8064e8:	d9400017 	ldw	r5,0(sp)
  8064ec:	8809883a 	mov	r4,r17
  8064f0:	08065bc0 	call	8065bc <_malloc_r>
  8064f4:	10001c26 	beq	r2,zero,806568 <__smakebuf_r+0xec>
  8064f8:	01002034 	movhi	r4,128
  8064fc:	21159504 	addi	r4,r4,22100
  806500:	80c0030b 	ldhu	r3,12(r16)
  806504:	89000f15 	stw	r4,60(r17)
  806508:	80800015 	stw	r2,0(r16)
  80650c:	80800415 	stw	r2,16(r16)
  806510:	d8800017 	ldw	r2,0(sp)
  806514:	d9400117 	ldw	r5,4(sp)
  806518:	18c02014 	ori	r3,r3,128
  80651c:	80c0030d 	sth	r3,12(r16)
  806520:	80800515 	stw	r2,20(r16)
  806524:	28001d1e 	bne	r5,zero,80659c <__smakebuf_r+0x120>
  806528:	90c6b03a 	or	r3,r18,r3
  80652c:	80c0030d 	sth	r3,12(r16)
  806530:	003fe006 	br	8064b4 <__smakebuf_r+0x38>
  806534:	8140038f 	ldh	r5,14(r16)
  806538:	8809883a 	mov	r4,r17
  80653c:	080a4740 	call	80a474 <_isatty_r>
  806540:	103fe926 	beq	r2,zero,8064e8 <__smakebuf_r+0x6c>
  806544:	8080030b 	ldhu	r2,12(r16)
  806548:	80c010c4 	addi	r3,r16,67
  80654c:	80c00015 	stw	r3,0(r16)
  806550:	10800054 	ori	r2,r2,1
  806554:	8080030d 	sth	r2,12(r16)
  806558:	00800044 	movi	r2,1
  80655c:	80c00415 	stw	r3,16(r16)
  806560:	80800515 	stw	r2,20(r16)
  806564:	003fe006 	br	8064e8 <__smakebuf_r+0x6c>
  806568:	8080030b 	ldhu	r2,12(r16)
  80656c:	10c0800c 	andi	r3,r2,512
  806570:	183fd01e 	bne	r3,zero,8064b4 <__smakebuf_r+0x38>
  806574:	00ffff04 	movi	r3,-4
  806578:	10c4703a 	and	r2,r2,r3
  80657c:	10800094 	ori	r2,r2,2
  806580:	80c010c4 	addi	r3,r16,67
  806584:	8080030d 	sth	r2,12(r16)
  806588:	00800044 	movi	r2,1
  80658c:	80c00015 	stw	r3,0(r16)
  806590:	80c00415 	stw	r3,16(r16)
  806594:	80800515 	stw	r2,20(r16)
  806598:	003fc606 	br	8064b4 <__smakebuf_r+0x38>
  80659c:	8140038f 	ldh	r5,14(r16)
  8065a0:	8809883a 	mov	r4,r17
  8065a4:	080a4740 	call	80a474 <_isatty_r>
  8065a8:	80c0030b 	ldhu	r3,12(r16)
  8065ac:	103fde26 	beq	r2,zero,806528 <__smakebuf_r+0xac>
  8065b0:	18ffff0c 	andi	r3,r3,65532
  8065b4:	18c00054 	ori	r3,r3,1
  8065b8:	003fdb06 	br	806528 <__smakebuf_r+0xac>

008065bc <_malloc_r>:
  8065bc:	defff604 	addi	sp,sp,-40
  8065c0:	dc400115 	stw	r17,4(sp)
  8065c4:	2c4002c4 	addi	r17,r5,11
  8065c8:	dc800215 	stw	r18,8(sp)
  8065cc:	dfc00915 	stw	ra,36(sp)
  8065d0:	df000815 	stw	fp,32(sp)
  8065d4:	ddc00715 	stw	r23,28(sp)
  8065d8:	dd800615 	stw	r22,24(sp)
  8065dc:	dd400515 	stw	r21,20(sp)
  8065e0:	dd000415 	stw	r20,16(sp)
  8065e4:	dcc00315 	stw	r19,12(sp)
  8065e8:	dc000015 	stw	r16,0(sp)
  8065ec:	888005e8 	cmpgeui	r2,r17,23
  8065f0:	2025883a 	mov	r18,r4
  8065f4:	10001b1e 	bne	r2,zero,806664 <_malloc_r+0xa8>
  8065f8:	29400468 	cmpgeui	r5,r5,17
  8065fc:	2800821e 	bne	r5,zero,806808 <_malloc_r+0x24c>
  806600:	080ea000 	call	80ea00 <__malloc_lock>
  806604:	04400404 	movi	r17,16
  806608:	01c00084 	movi	r7,2
  80660c:	00800604 	movi	r2,24
  806610:	04c02074 	movhi	r19,129
  806614:	9cc5d104 	addi	r19,r19,5956
  806618:	9885883a 	add	r2,r19,r2
  80661c:	14000117 	ldw	r16,4(r2)
  806620:	10fffe04 	addi	r3,r2,-8
  806624:	80c08b26 	beq	r16,r3,806854 <_malloc_r+0x298>
  806628:	80800117 	ldw	r2,4(r16)
  80662c:	81000317 	ldw	r4,12(r16)
  806630:	00ffff04 	movi	r3,-4
  806634:	10c4703a 	and	r2,r2,r3
  806638:	81400217 	ldw	r5,8(r16)
  80663c:	8085883a 	add	r2,r16,r2
  806640:	10c00117 	ldw	r3,4(r2)
  806644:	29000315 	stw	r4,12(r5)
  806648:	21400215 	stw	r5,8(r4)
  80664c:	18c00054 	ori	r3,r3,1
  806650:	10c00115 	stw	r3,4(r2)
  806654:	9009883a 	mov	r4,r18
  806658:	080ea240 	call	80ea24 <__malloc_unlock>
  80665c:	80800204 	addi	r2,r16,8
  806660:	00006c06 	br	806814 <_malloc_r+0x258>
  806664:	00bffe04 	movi	r2,-8
  806668:	88a2703a 	and	r17,r17,r2
  80666c:	88006616 	blt	r17,zero,806808 <_malloc_r+0x24c>
  806670:	89406536 	bltu	r17,r5,806808 <_malloc_r+0x24c>
  806674:	080ea000 	call	80ea00 <__malloc_lock>
  806678:	88807e28 	cmpgeui	r2,r17,504
  80667c:	10012226 	beq	r2,zero,806b08 <_malloc_r+0x54c>
  806680:	8804d27a 	srli	r2,r17,9
  806684:	10006f26 	beq	r2,zero,806844 <_malloc_r+0x288>
  806688:	10c00168 	cmpgeui	r3,r2,5
  80668c:	1800fe1e 	bne	r3,zero,806a88 <_malloc_r+0x4cc>
  806690:	8804d1ba 	srli	r2,r17,6
  806694:	11c00e44 	addi	r7,r2,57
  806698:	380890fa 	slli	r4,r7,3
  80669c:	12000e04 	addi	r8,r2,56
  8066a0:	04c02074 	movhi	r19,129
  8066a4:	9cc5d104 	addi	r19,r19,5956
  8066a8:	9909883a 	add	r4,r19,r4
  8066ac:	24000117 	ldw	r16,4(r4)
  8066b0:	213ffe04 	addi	r4,r4,-8
  8066b4:	24000b26 	beq	r4,r16,8066e4 <_malloc_r+0x128>
  8066b8:	01bfff04 	movi	r6,-4
  8066bc:	00000306 	br	8066cc <_malloc_r+0x110>
  8066c0:	1800d60e 	bge	r3,zero,806a1c <_malloc_r+0x460>
  8066c4:	84000317 	ldw	r16,12(r16)
  8066c8:	24000626 	beq	r4,r16,8066e4 <_malloc_r+0x128>
  8066cc:	80800117 	ldw	r2,4(r16)
  8066d0:	1184703a 	and	r2,r2,r6
  8066d4:	1447c83a 	sub	r3,r2,r17
  8066d8:	19400408 	cmpgei	r5,r3,16
  8066dc:	283ff826 	beq	r5,zero,8066c0 <_malloc_r+0x104>
  8066e0:	400f883a 	mov	r7,r8
  8066e4:	9c000417 	ldw	r16,16(r19)
  8066e8:	02402074 	movhi	r9,129
  8066ec:	4a45d304 	addi	r9,r9,5964
  8066f0:	82405f26 	beq	r16,r9,806870 <_malloc_r+0x2b4>
  8066f4:	80c00117 	ldw	r3,4(r16)
  8066f8:	00bfff04 	movi	r2,-4
  8066fc:	1884703a 	and	r2,r3,r2
  806700:	1447c83a 	sub	r3,r2,r17
  806704:	19000410 	cmplti	r4,r3,16
  806708:	20010a26 	beq	r4,zero,806b34 <_malloc_r+0x578>
  80670c:	9a400515 	stw	r9,20(r19)
  806710:	9a400415 	stw	r9,16(r19)
  806714:	1800ff0e 	bge	r3,zero,806b14 <_malloc_r+0x558>
  806718:	10c08028 	cmpgeui	r3,r2,512
  80671c:	1800c11e 	bne	r3,zero,806a24 <_malloc_r+0x468>
  806720:	1006d0fa 	srli	r3,r2,3
  806724:	1008d17a 	srli	r4,r2,5
  806728:	00800044 	movi	r2,1
  80672c:	18c00044 	addi	r3,r3,1
  806730:	180690fa 	slli	r3,r3,3
  806734:	99400117 	ldw	r5,4(r19)
  806738:	1104983a 	sll	r2,r2,r4
  80673c:	98c7883a 	add	r3,r19,r3
  806740:	19000017 	ldw	r4,0(r3)
  806744:	1144b03a 	or	r2,r2,r5
  806748:	197ffe04 	addi	r5,r3,-8
  80674c:	81400315 	stw	r5,12(r16)
  806750:	81000215 	stw	r4,8(r16)
  806754:	98800115 	stw	r2,4(r19)
  806758:	1c000015 	stw	r16,0(r3)
  80675c:	24000315 	stw	r16,12(r4)
  806760:	3807d0ba 	srai	r3,r7,2
  806764:	01000044 	movi	r4,1
  806768:	20c8983a 	sll	r4,r4,r3
  80676c:	11004536 	bltu	r2,r4,806884 <_malloc_r+0x2c8>
  806770:	2086703a 	and	r3,r4,r2
  806774:	18000a1e 	bne	r3,zero,8067a0 <_malloc_r+0x1e4>
  806778:	00ffff04 	movi	r3,-4
  80677c:	2109883a 	add	r4,r4,r4
  806780:	38ce703a 	and	r7,r7,r3
  806784:	2086703a 	and	r3,r4,r2
  806788:	39c00104 	addi	r7,r7,4
  80678c:	1800041e 	bne	r3,zero,8067a0 <_malloc_r+0x1e4>
  806790:	2109883a 	add	r4,r4,r4
  806794:	2086703a 	and	r3,r4,r2
  806798:	39c00104 	addi	r7,r7,4
  80679c:	183ffc26 	beq	r3,zero,806790 <_malloc_r+0x1d4>
  8067a0:	02bfff04 	movi	r10,-4
  8067a4:	381690fa 	slli	r11,r7,3
  8067a8:	3819883a 	mov	r12,r7
  8067ac:	9ad7883a 	add	r11,r19,r11
  8067b0:	5811883a 	mov	r8,r11
  8067b4:	40800317 	ldw	r2,12(r8)
  8067b8:	4080bc26 	beq	r8,r2,806aac <_malloc_r+0x4f0>
  8067bc:	10c00117 	ldw	r3,4(r2)
  8067c0:	1021883a 	mov	r16,r2
  8067c4:	10800317 	ldw	r2,12(r2)
  8067c8:	1a86703a 	and	r3,r3,r10
  8067cc:	1c4bc83a 	sub	r5,r3,r17
  8067d0:	29800410 	cmplti	r6,r5,16
  8067d4:	3000ba26 	beq	r6,zero,806ac0 <_malloc_r+0x504>
  8067d8:	283ff716 	blt	r5,zero,8067b8 <_malloc_r+0x1fc>
  8067dc:	80c7883a 	add	r3,r16,r3
  8067e0:	19400117 	ldw	r5,4(r3)
  8067e4:	81800217 	ldw	r6,8(r16)
  8067e8:	9009883a 	mov	r4,r18
  8067ec:	29400054 	ori	r5,r5,1
  8067f0:	19400115 	stw	r5,4(r3)
  8067f4:	30800315 	stw	r2,12(r6)
  8067f8:	11800215 	stw	r6,8(r2)
  8067fc:	080ea240 	call	80ea24 <__malloc_unlock>
  806800:	80800204 	addi	r2,r16,8
  806804:	00000306 	br	806814 <_malloc_r+0x258>
  806808:	00800304 	movi	r2,12
  80680c:	90800015 	stw	r2,0(r18)
  806810:	0005883a 	mov	r2,zero
  806814:	dfc00917 	ldw	ra,36(sp)
  806818:	df000817 	ldw	fp,32(sp)
  80681c:	ddc00717 	ldw	r23,28(sp)
  806820:	dd800617 	ldw	r22,24(sp)
  806824:	dd400517 	ldw	r21,20(sp)
  806828:	dd000417 	ldw	r20,16(sp)
  80682c:	dcc00317 	ldw	r19,12(sp)
  806830:	dc800217 	ldw	r18,8(sp)
  806834:	dc400117 	ldw	r17,4(sp)
  806838:	dc000017 	ldw	r16,0(sp)
  80683c:	dec00a04 	addi	sp,sp,40
  806840:	f800283a 	ret
  806844:	01008004 	movi	r4,512
  806848:	01c01004 	movi	r7,64
  80684c:	02000fc4 	movi	r8,63
  806850:	003f9306 	br	8066a0 <_malloc_r+0xe4>
  806854:	14000317 	ldw	r16,12(r2)
  806858:	39c00084 	addi	r7,r7,2
  80685c:	143f721e 	bne	r2,r16,806628 <_malloc_r+0x6c>
  806860:	9c000417 	ldw	r16,16(r19)
  806864:	02402074 	movhi	r9,129
  806868:	4a45d304 	addi	r9,r9,5964
  80686c:	827fa11e 	bne	r16,r9,8066f4 <_malloc_r+0x138>
  806870:	3807d0ba 	srai	r3,r7,2
  806874:	01000044 	movi	r4,1
  806878:	98800117 	ldw	r2,4(r19)
  80687c:	20c8983a 	sll	r4,r4,r3
  806880:	113fbb2e 	bgeu	r2,r4,806770 <_malloc_r+0x1b4>
  806884:	9c000217 	ldw	r16,8(r19)
  806888:	00bfff04 	movi	r2,-4
  80688c:	85400117 	ldw	r21,4(r16)
  806890:	a8ac703a 	and	r22,r21,r2
  806894:	b4400336 	bltu	r22,r17,8068a4 <_malloc_r+0x2e8>
  806898:	b445c83a 	sub	r2,r22,r17
  80689c:	10c00408 	cmpgei	r3,r2,16
  8068a0:	1800541e 	bne	r3,zero,8069f4 <_malloc_r+0x438>
  8068a4:	00802074 	movhi	r2,129
  8068a8:	108bb717 	ldw	r2,11996(r2)
  8068ac:	00c02074 	movhi	r3,129
  8068b0:	1d52c017 	ldw	r21,19200(r3)
  8068b4:	10bfffd8 	cmpnei	r2,r2,-1
  8068b8:	85b9883a 	add	fp,r16,r22
  8068bc:	8d6b883a 	add	r21,r17,r21
  8068c0:	1000d626 	beq	r2,zero,806c1c <_malloc_r+0x660>
  8068c4:	ad4403c4 	addi	r21,r21,4111
  8068c8:	00bc0004 	movi	r2,-4096
  8068cc:	a8aa703a 	and	r21,r21,r2
  8068d0:	a80b883a 	mov	r5,r21
  8068d4:	9009883a 	mov	r4,r18
  8068d8:	08088280 	call	808828 <_sbrk_r>
  8068dc:	102f883a 	mov	r23,r2
  8068e0:	10bfffd8 	cmpnei	r2,r2,-1
  8068e4:	1000a826 	beq	r2,zero,806b88 <_malloc_r+0x5cc>
  8068e8:	bf00a636 	bltu	r23,fp,806b84 <_malloc_r+0x5c8>
  8068ec:	00802074 	movhi	r2,129
  8068f0:	1512ca17 	ldw	r20,19240(r2)
  8068f4:	ad29883a 	add	r20,r21,r20
  8068f8:	1512ca15 	stw	r20,19240(r2)
  8068fc:	a007883a 	mov	r3,r20
  806900:	e5c0ec26 	beq	fp,r23,806cb4 <_malloc_r+0x6f8>
  806904:	00802074 	movhi	r2,129
  806908:	108bb717 	ldw	r2,11996(r2)
  80690c:	10bfffd8 	cmpnei	r2,r2,-1
  806910:	1000ef26 	beq	r2,zero,806cd0 <_malloc_r+0x714>
  806914:	bf39c83a 	sub	fp,r23,fp
  806918:	e0c7883a 	add	r3,fp,r3
  80691c:	00802074 	movhi	r2,129
  806920:	10d2ca15 	stw	r3,19240(r2)
  806924:	bf0001cc 	andi	fp,r23,7
  806928:	e000c526 	beq	fp,zero,806c40 <_malloc_r+0x684>
  80692c:	bf2fc83a 	sub	r23,r23,fp
  806930:	bdc00204 	addi	r23,r23,8
  806934:	05040204 	movi	r20,4104
  806938:	a729c83a 	sub	r20,r20,fp
  80693c:	bd6b883a 	add	r21,r23,r21
  806940:	a569c83a 	sub	r20,r20,r21
  806944:	a503ffcc 	andi	r20,r20,4095
  806948:	a00b883a 	mov	r5,r20
  80694c:	9009883a 	mov	r4,r18
  806950:	08088280 	call	808828 <_sbrk_r>
  806954:	10ffffe0 	cmpeqi	r3,r2,-1
  806958:	1800f31e 	bne	r3,zero,806d28 <_malloc_r+0x76c>
  80695c:	15c5c83a 	sub	r2,r2,r23
  806960:	152b883a 	add	r21,r2,r20
  806964:	00802074 	movhi	r2,129
  806968:	1152ca17 	ldw	r5,19240(r2)
  80696c:	9dc00215 	stw	r23,8(r19)
  806970:	ad400054 	ori	r21,r21,1
  806974:	a169883a 	add	r20,r20,r5
  806978:	1512ca15 	stw	r20,19240(r2)
  80697c:	bd400115 	stw	r21,4(r23)
  806980:	84c0d626 	beq	r16,r19,806cdc <_malloc_r+0x720>
  806984:	b0800428 	cmpgeui	r2,r22,16
  806988:	1000d626 	beq	r2,zero,806ce4 <_malloc_r+0x728>
  80698c:	80c00117 	ldw	r3,4(r16)
  806990:	013ffe04 	movi	r4,-8
  806994:	b0bffd04 	addi	r2,r22,-12
  806998:	1104703a 	and	r2,r2,r4
  80699c:	18c0004c 	andi	r3,r3,1
  8069a0:	1886b03a 	or	r3,r3,r2
  8069a4:	80c00115 	stw	r3,4(r16)
  8069a8:	01000144 	movi	r4,5
  8069ac:	8087883a 	add	r3,r16,r2
  8069b0:	19000115 	stw	r4,4(r3)
  8069b4:	19000215 	stw	r4,8(r3)
  8069b8:	10800428 	cmpgeui	r2,r2,16
  8069bc:	1000df1e 	bne	r2,zero,806d3c <_malloc_r+0x780>
  8069c0:	bd400117 	ldw	r21,4(r23)
  8069c4:	b821883a 	mov	r16,r23
  8069c8:	00802074 	movhi	r2,129
  8069cc:	1092bf17 	ldw	r2,19196(r2)
  8069d0:	1500022e 	bgeu	r2,r20,8069dc <_malloc_r+0x420>
  8069d4:	00802074 	movhi	r2,129
  8069d8:	1512bf15 	stw	r20,19196(r2)
  8069dc:	00802074 	movhi	r2,129
  8069e0:	1092be17 	ldw	r2,19192(r2)
  8069e4:	15006a2e 	bgeu	r2,r20,806b90 <_malloc_r+0x5d4>
  8069e8:	00802074 	movhi	r2,129
  8069ec:	1512be15 	stw	r20,19192(r2)
  8069f0:	00006706 	br	806b90 <_malloc_r+0x5d4>
  8069f4:	88c00054 	ori	r3,r17,1
  8069f8:	80c00115 	stw	r3,4(r16)
  8069fc:	8463883a 	add	r17,r16,r17
  806a00:	10800054 	ori	r2,r2,1
  806a04:	9c400215 	stw	r17,8(r19)
  806a08:	88800115 	stw	r2,4(r17)
  806a0c:	9009883a 	mov	r4,r18
  806a10:	080ea240 	call	80ea24 <__malloc_unlock>
  806a14:	80800204 	addi	r2,r16,8
  806a18:	003f7e06 	br	806814 <_malloc_r+0x258>
  806a1c:	81000317 	ldw	r4,12(r16)
  806a20:	003f0506 	br	806638 <_malloc_r+0x7c>
  806a24:	1006d27a 	srli	r3,r2,9
  806a28:	19000168 	cmpgeui	r4,r3,5
  806a2c:	20005026 	beq	r4,zero,806b70 <_malloc_r+0x5b4>
  806a30:	19000568 	cmpgeui	r4,r3,21
  806a34:	20008c1e 	bne	r4,zero,806c68 <_malloc_r+0x6ac>
  806a38:	19401704 	addi	r5,r3,92
  806a3c:	280a90fa 	slli	r5,r5,3
  806a40:	190016c4 	addi	r4,r3,91
  806a44:	994b883a 	add	r5,r19,r5
  806a48:	28c00017 	ldw	r3,0(r5)
  806a4c:	297ffe04 	addi	r5,r5,-8
  806a50:	28c07426 	beq	r5,r3,806c24 <_malloc_r+0x668>
  806a54:	01bfff04 	movi	r6,-4
  806a58:	19000117 	ldw	r4,4(r3)
  806a5c:	2188703a 	and	r4,r4,r6
  806a60:	1100022e 	bgeu	r2,r4,806a6c <_malloc_r+0x4b0>
  806a64:	18c00217 	ldw	r3,8(r3)
  806a68:	28fffb1e 	bne	r5,r3,806a58 <_malloc_r+0x49c>
  806a6c:	19400317 	ldw	r5,12(r3)
  806a70:	98800117 	ldw	r2,4(r19)
  806a74:	81400315 	stw	r5,12(r16)
  806a78:	80c00215 	stw	r3,8(r16)
  806a7c:	2c000215 	stw	r16,8(r5)
  806a80:	1c000315 	stw	r16,12(r3)
  806a84:	003f3606 	br	806760 <_malloc_r+0x1a4>
  806a88:	10c00568 	cmpgeui	r3,r2,21
  806a8c:	18004a26 	beq	r3,zero,806bb8 <_malloc_r+0x5fc>
  806a90:	10c01568 	cmpgeui	r3,r2,85
  806a94:	18007b1e 	bne	r3,zero,806c84 <_malloc_r+0x6c8>
  806a98:	8804d33a 	srli	r2,r17,12
  806a9c:	11c01bc4 	addi	r7,r2,111
  806aa0:	380890fa 	slli	r4,r7,3
  806aa4:	12001b84 	addi	r8,r2,110
  806aa8:	003efd06 	br	8066a0 <_malloc_r+0xe4>
  806aac:	63000044 	addi	r12,r12,1
  806ab0:	608000cc 	andi	r2,r12,3
  806ab4:	42000204 	addi	r8,r8,8
  806ab8:	103f3e1e 	bne	r2,zero,8067b4 <_malloc_r+0x1f8>
  806abc:	00004506 	br	806bd4 <_malloc_r+0x618>
  806ac0:	81000217 	ldw	r4,8(r16)
  806ac4:	89800054 	ori	r6,r17,1
  806ac8:	81800115 	stw	r6,4(r16)
  806acc:	20800315 	stw	r2,12(r4)
  806ad0:	11000215 	stw	r4,8(r2)
  806ad4:	8463883a 	add	r17,r16,r17
  806ad8:	9c400515 	stw	r17,20(r19)
  806adc:	9c400415 	stw	r17,16(r19)
  806ae0:	28800054 	ori	r2,r5,1
  806ae4:	88800115 	stw	r2,4(r17)
  806ae8:	8a400315 	stw	r9,12(r17)
  806aec:	8a400215 	stw	r9,8(r17)
  806af0:	80c7883a 	add	r3,r16,r3
  806af4:	19400015 	stw	r5,0(r3)
  806af8:	9009883a 	mov	r4,r18
  806afc:	080ea240 	call	80ea24 <__malloc_unlock>
  806b00:	80800204 	addi	r2,r16,8
  806b04:	003f4306 	br	806814 <_malloc_r+0x258>
  806b08:	880ed0fa 	srli	r7,r17,3
  806b0c:	88800204 	addi	r2,r17,8
  806b10:	003ebf06 	br	806610 <_malloc_r+0x54>
  806b14:	8085883a 	add	r2,r16,r2
  806b18:	10c00117 	ldw	r3,4(r2)
  806b1c:	9009883a 	mov	r4,r18
  806b20:	18c00054 	ori	r3,r3,1
  806b24:	10c00115 	stw	r3,4(r2)
  806b28:	080ea240 	call	80ea24 <__malloc_unlock>
  806b2c:	80800204 	addi	r2,r16,8
  806b30:	003f3806 	br	806814 <_malloc_r+0x258>
  806b34:	89000054 	ori	r4,r17,1
  806b38:	81000115 	stw	r4,4(r16)
  806b3c:	8463883a 	add	r17,r16,r17
  806b40:	9c400515 	stw	r17,20(r19)
  806b44:	9c400415 	stw	r17,16(r19)
  806b48:	19000054 	ori	r4,r3,1
  806b4c:	89000115 	stw	r4,4(r17)
  806b50:	8085883a 	add	r2,r16,r2
  806b54:	8a400315 	stw	r9,12(r17)
  806b58:	8a400215 	stw	r9,8(r17)
  806b5c:	10c00015 	stw	r3,0(r2)
  806b60:	9009883a 	mov	r4,r18
  806b64:	080ea240 	call	80ea24 <__malloc_unlock>
  806b68:	80800204 	addi	r2,r16,8
  806b6c:	003f2906 	br	806814 <_malloc_r+0x258>
  806b70:	1006d1ba 	srli	r3,r2,6
  806b74:	19400e44 	addi	r5,r3,57
  806b78:	280a90fa 	slli	r5,r5,3
  806b7c:	19000e04 	addi	r4,r3,56
  806b80:	003fb006 	br	806a44 <_malloc_r+0x488>
  806b84:	84c04626 	beq	r16,r19,806ca0 <_malloc_r+0x6e4>
  806b88:	9c000217 	ldw	r16,8(r19)
  806b8c:	85400117 	ldw	r21,4(r16)
  806b90:	00bfff04 	movi	r2,-4
  806b94:	a8aa703a 	and	r21,r21,r2
  806b98:	ac45c83a 	sub	r2,r21,r17
  806b9c:	ac400236 	bltu	r21,r17,806ba8 <_malloc_r+0x5ec>
  806ba0:	10c00408 	cmpgei	r3,r2,16
  806ba4:	183f931e 	bne	r3,zero,8069f4 <_malloc_r+0x438>
  806ba8:	9009883a 	mov	r4,r18
  806bac:	080ea240 	call	80ea24 <__malloc_unlock>
  806bb0:	0005883a 	mov	r2,zero
  806bb4:	003f1706 	br	806814 <_malloc_r+0x258>
  806bb8:	11c01704 	addi	r7,r2,92
  806bbc:	380890fa 	slli	r4,r7,3
  806bc0:	120016c4 	addi	r8,r2,91
  806bc4:	003eb606 	br	8066a0 <_malloc_r+0xe4>
  806bc8:	58800217 	ldw	r2,8(r11)
  806bcc:	39ffffc4 	addi	r7,r7,-1
  806bd0:	12c0701e 	bne	r2,r11,806d94 <_malloc_r+0x7d8>
  806bd4:	388000cc 	andi	r2,r7,3
  806bd8:	5afffe04 	addi	r11,r11,-8
  806bdc:	103ffa1e 	bne	r2,zero,806bc8 <_malloc_r+0x60c>
  806be0:	98c00117 	ldw	r3,4(r19)
  806be4:	0104303a 	nor	r2,zero,r4
  806be8:	10c4703a 	and	r2,r2,r3
  806bec:	98800115 	stw	r2,4(r19)
  806bf0:	2109883a 	add	r4,r4,r4
  806bf4:	113f2336 	bltu	r2,r4,806884 <_malloc_r+0x2c8>
  806bf8:	203f2226 	beq	r4,zero,806884 <_malloc_r+0x2c8>
  806bfc:	2086703a 	and	r3,r4,r2
  806c00:	1800041e 	bne	r3,zero,806c14 <_malloc_r+0x658>
  806c04:	2109883a 	add	r4,r4,r4
  806c08:	2086703a 	and	r3,r4,r2
  806c0c:	63000104 	addi	r12,r12,4
  806c10:	183ffc26 	beq	r3,zero,806c04 <_malloc_r+0x648>
  806c14:	600f883a 	mov	r7,r12
  806c18:	003ee206 	br	8067a4 <_malloc_r+0x1e8>
  806c1c:	ad400404 	addi	r21,r21,16
  806c20:	003f2b06 	br	8068d0 <_malloc_r+0x314>
  806c24:	2009d0ba 	srai	r4,r4,2
  806c28:	00800044 	movi	r2,1
  806c2c:	99800117 	ldw	r6,4(r19)
  806c30:	1104983a 	sll	r2,r2,r4
  806c34:	1184b03a 	or	r2,r2,r6
  806c38:	98800115 	stw	r2,4(r19)
  806c3c:	003f8d06 	br	806a74 <_malloc_r+0x4b8>
  806c40:	bd69883a 	add	r20,r23,r21
  806c44:	0529c83a 	sub	r20,zero,r20
  806c48:	a503ffcc 	andi	r20,r20,4095
  806c4c:	a00b883a 	mov	r5,r20
  806c50:	9009883a 	mov	r4,r18
  806c54:	08088280 	call	808828 <_sbrk_r>
  806c58:	10ffffe0 	cmpeqi	r3,r2,-1
  806c5c:	183f3f26 	beq	r3,zero,80695c <_malloc_r+0x3a0>
  806c60:	0029883a 	mov	r20,zero
  806c64:	003f3f06 	br	806964 <_malloc_r+0x3a8>
  806c68:	19001568 	cmpgeui	r4,r3,85
  806c6c:	2000201e 	bne	r4,zero,806cf0 <_malloc_r+0x734>
  806c70:	1006d33a 	srli	r3,r2,12
  806c74:	19401bc4 	addi	r5,r3,111
  806c78:	280a90fa 	slli	r5,r5,3
  806c7c:	19001b84 	addi	r4,r3,110
  806c80:	003f7006 	br	806a44 <_malloc_r+0x488>
  806c84:	10c05568 	cmpgeui	r3,r2,341
  806c88:	1800201e 	bne	r3,zero,806d0c <_malloc_r+0x750>
  806c8c:	8804d3fa 	srli	r2,r17,15
  806c90:	11c01e04 	addi	r7,r2,120
  806c94:	380890fa 	slli	r4,r7,3
  806c98:	12001dc4 	addi	r8,r2,119
  806c9c:	003e8006 	br	8066a0 <_malloc_r+0xe4>
  806ca0:	00802074 	movhi	r2,129
  806ca4:	10d2ca17 	ldw	r3,19240(r2)
  806ca8:	a8c7883a 	add	r3,r21,r3
  806cac:	10d2ca15 	stw	r3,19240(r2)
  806cb0:	003f1406 	br	806904 <_malloc_r+0x348>
  806cb4:	e083ffcc 	andi	r2,fp,4095
  806cb8:	103f121e 	bne	r2,zero,806904 <_malloc_r+0x348>
  806cbc:	9c000217 	ldw	r16,8(r19)
  806cc0:	b56b883a 	add	r21,r22,r21
  806cc4:	ad400054 	ori	r21,r21,1
  806cc8:	85400115 	stw	r21,4(r16)
  806ccc:	003f3e06 	br	8069c8 <_malloc_r+0x40c>
  806cd0:	00802074 	movhi	r2,129
  806cd4:	15cbb715 	stw	r23,11996(r2)
  806cd8:	003f1206 	br	806924 <_malloc_r+0x368>
  806cdc:	b821883a 	mov	r16,r23
  806ce0:	003f3906 	br	8069c8 <_malloc_r+0x40c>
  806ce4:	00800044 	movi	r2,1
  806ce8:	b8800115 	stw	r2,4(r23)
  806cec:	003fae06 	br	806ba8 <_malloc_r+0x5ec>
  806cf0:	19005568 	cmpgeui	r4,r3,341
  806cf4:	2000191e 	bne	r4,zero,806d5c <_malloc_r+0x7a0>
  806cf8:	1006d3fa 	srli	r3,r2,15
  806cfc:	19401e04 	addi	r5,r3,120
  806d00:	280a90fa 	slli	r5,r5,3
  806d04:	19001dc4 	addi	r4,r3,119
  806d08:	003f4e06 	br	806a44 <_malloc_r+0x488>
  806d0c:	10815568 	cmpgeui	r2,r2,1365
  806d10:	1000191e 	bne	r2,zero,806d78 <_malloc_r+0x7bc>
  806d14:	8804d4ba 	srli	r2,r17,18
  806d18:	11c01f44 	addi	r7,r2,125
  806d1c:	380890fa 	slli	r4,r7,3
  806d20:	12001f04 	addi	r8,r2,124
  806d24:	003e5e06 	br	8066a0 <_malloc_r+0xe4>
  806d28:	e73ffe04 	addi	fp,fp,-8
  806d2c:	af2b883a 	add	r21,r21,fp
  806d30:	adebc83a 	sub	r21,r21,r23
  806d34:	0029883a 	mov	r20,zero
  806d38:	003f0a06 	br	806964 <_malloc_r+0x3a8>
  806d3c:	81400204 	addi	r5,r16,8
  806d40:	9009883a 	mov	r4,r18
  806d44:	0805abc0 	call	805abc <_free_r>
  806d48:	9c000217 	ldw	r16,8(r19)
  806d4c:	00802074 	movhi	r2,129
  806d50:	1512ca17 	ldw	r20,19240(r2)
  806d54:	85400117 	ldw	r21,4(r16)
  806d58:	003f1b06 	br	8069c8 <_malloc_r+0x40c>
  806d5c:	18c15568 	cmpgeui	r3,r3,1365
  806d60:	1800091e 	bne	r3,zero,806d88 <_malloc_r+0x7cc>
  806d64:	1006d4ba 	srli	r3,r2,18
  806d68:	19401f44 	addi	r5,r3,125
  806d6c:	280a90fa 	slli	r5,r5,3
  806d70:	19001f04 	addi	r4,r3,124
  806d74:	003f3306 	br	806a44 <_malloc_r+0x488>
  806d78:	0100fe04 	movi	r4,1016
  806d7c:	01c01fc4 	movi	r7,127
  806d80:	02001f84 	movi	r8,126
  806d84:	003e4606 	br	8066a0 <_malloc_r+0xe4>
  806d88:	0140fe04 	movi	r5,1016
  806d8c:	01001f84 	movi	r4,126
  806d90:	003f2c06 	br	806a44 <_malloc_r+0x488>
  806d94:	98800117 	ldw	r2,4(r19)
  806d98:	003f9506 	br	806bf0 <_malloc_r+0x634>

00806d9c <memchr>:
  806d9c:	208000cc 	andi	r2,r4,3
  806da0:	280f883a 	mov	r7,r5
  806da4:	10000e26 	beq	r2,zero,806de0 <memchr+0x44>
  806da8:	30bfffc4 	addi	r2,r6,-1
  806dac:	30001726 	beq	r6,zero,806e0c <memchr+0x70>
  806db0:	29803fcc 	andi	r6,r5,255
  806db4:	00000606 	br	806dd0 <memchr+0x34>
  806db8:	21000044 	addi	r4,r4,1
  806dbc:	20c000cc 	andi	r3,r4,3
  806dc0:	18000826 	beq	r3,zero,806de4 <memchr+0x48>
  806dc4:	10bfffc4 	addi	r2,r2,-1
  806dc8:	10ffffe0 	cmpeqi	r3,r2,-1
  806dcc:	18000f1e 	bne	r3,zero,806e0c <memchr+0x70>
  806dd0:	20c00003 	ldbu	r3,0(r4)
  806dd4:	19bff81e 	bne	r3,r6,806db8 <memchr+0x1c>
  806dd8:	2005883a 	mov	r2,r4
  806ddc:	f800283a 	ret
  806de0:	3005883a 	mov	r2,r6
  806de4:	10c00128 	cmpgeui	r3,r2,4
  806de8:	18000a1e 	bne	r3,zero,806e14 <memchr+0x78>
  806dec:	10001f26 	beq	r2,zero,806e6c <memchr+0xd0>
  806df0:	2087883a 	add	r3,r4,r2
  806df4:	39803fcc 	andi	r6,r7,255
  806df8:	2005883a 	mov	r2,r4
  806dfc:	11000003 	ldbu	r4,0(r2)
  806e00:	21bff626 	beq	r4,r6,806ddc <memchr+0x40>
  806e04:	10800044 	addi	r2,r2,1
  806e08:	18bffc1e 	bne	r3,r2,806dfc <memchr+0x60>
  806e0c:	0005883a 	mov	r2,zero
  806e10:	f800283a 	ret
  806e14:	2810923a 	slli	r8,r5,8
  806e18:	29403fcc 	andi	r5,r5,255
  806e1c:	027fbff4 	movhi	r9,65279
  806e20:	423fffcc 	andi	r8,r8,65535
  806e24:	414ab03a 	or	r5,r8,r5
  806e28:	2810943a 	slli	r8,r5,16
  806e2c:	01a02074 	movhi	r6,32897
  806e30:	4a7fbfc4 	addi	r9,r9,-257
  806e34:	4150b03a 	or	r8,r8,r5
  806e38:	31a02004 	addi	r6,r6,-32640
  806e3c:	20c00017 	ldw	r3,0(r4)
  806e40:	40c6f03a 	xor	r3,r8,r3
  806e44:	1a4b883a 	add	r5,r3,r9
  806e48:	00c6303a 	nor	r3,zero,r3
  806e4c:	28c6703a 	and	r3,r5,r3
  806e50:	1986703a 	and	r3,r3,r6
  806e54:	183fe61e 	bne	r3,zero,806df0 <memchr+0x54>
  806e58:	10bfff04 	addi	r2,r2,-4
  806e5c:	10c00128 	cmpgeui	r3,r2,4
  806e60:	21000104 	addi	r4,r4,4
  806e64:	183ff51e 	bne	r3,zero,806e3c <memchr+0xa0>
  806e68:	003fe006 	br	806dec <memchr+0x50>
  806e6c:	f800283a 	ret

00806e70 <memcpy>:
  806e70:	30c00430 	cmpltui	r3,r6,16
  806e74:	2005883a 	mov	r2,r4
  806e78:	18002d1e 	bne	r3,zero,806f30 <memcpy+0xc0>
  806e7c:	2906b03a 	or	r3,r5,r4
  806e80:	18c000cc 	andi	r3,r3,3
  806e84:	1800351e 	bne	r3,zero,806f5c <memcpy+0xec>
  806e88:	32fffc04 	addi	r11,r6,-16
  806e8c:	5816d13a 	srli	r11,r11,4
  806e90:	280f883a 	mov	r7,r5
  806e94:	2007883a 	mov	r3,r4
  806e98:	5ac00044 	addi	r11,r11,1
  806e9c:	5816913a 	slli	r11,r11,4
  806ea0:	22d5883a 	add	r10,r4,r11
  806ea4:	39000117 	ldw	r4,4(r7)
  806ea8:	3a400017 	ldw	r9,0(r7)
  806eac:	3a000217 	ldw	r8,8(r7)
  806eb0:	19000115 	stw	r4,4(r3)
  806eb4:	39000317 	ldw	r4,12(r7)
  806eb8:	1a400015 	stw	r9,0(r3)
  806ebc:	1a000215 	stw	r8,8(r3)
  806ec0:	19000315 	stw	r4,12(r3)
  806ec4:	18c00404 	addi	r3,r3,16
  806ec8:	39c00404 	addi	r7,r7,16
  806ecc:	50fff51e 	bne	r10,r3,806ea4 <memcpy+0x34>
  806ed0:	3100030c 	andi	r4,r6,12
  806ed4:	2acb883a 	add	r5,r5,r11
  806ed8:	320003cc 	andi	r8,r6,15
  806edc:	20002226 	beq	r4,zero,806f68 <memcpy+0xf8>
  806ee0:	280f883a 	mov	r7,r5
  806ee4:	1813883a 	mov	r9,r3
  806ee8:	39c00104 	addi	r7,r7,4
  806eec:	3abfff17 	ldw	r10,-4(r7)
  806ef0:	41c9c83a 	sub	r4,r8,r7
  806ef4:	2909883a 	add	r4,r5,r4
  806ef8:	4a800015 	stw	r10,0(r9)
  806efc:	21000128 	cmpgeui	r4,r4,4
  806f00:	4a400104 	addi	r9,r9,4
  806f04:	203ff81e 	bne	r4,zero,806ee8 <memcpy+0x78>
  806f08:	413fff04 	addi	r4,r8,-4
  806f0c:	2008d0ba 	srli	r4,r4,2
  806f10:	318000cc 	andi	r6,r6,3
  806f14:	31ffffc4 	addi	r7,r6,-1
  806f18:	21000044 	addi	r4,r4,1
  806f1c:	200890ba 	slli	r4,r4,2
  806f20:	1907883a 	add	r3,r3,r4
  806f24:	290b883a 	add	r5,r5,r4
  806f28:	3000041e 	bne	r6,zero,806f3c <memcpy+0xcc>
  806f2c:	f800283a 	ret
  806f30:	2007883a 	mov	r3,r4
  806f34:	31ffffc4 	addi	r7,r6,-1
  806f38:	303ffc26 	beq	r6,zero,806f2c <memcpy+0xbc>
  806f3c:	39c00044 	addi	r7,r7,1
  806f40:	19cf883a 	add	r7,r3,r7
  806f44:	29800003 	ldbu	r6,0(r5)
  806f48:	18c00044 	addi	r3,r3,1
  806f4c:	29400044 	addi	r5,r5,1
  806f50:	19bfffc5 	stb	r6,-1(r3)
  806f54:	38fffb1e 	bne	r7,r3,806f44 <memcpy+0xd4>
  806f58:	f800283a 	ret
  806f5c:	31ffffc4 	addi	r7,r6,-1
  806f60:	2007883a 	mov	r3,r4
  806f64:	003ff506 	br	806f3c <memcpy+0xcc>
  806f68:	400d883a 	mov	r6,r8
  806f6c:	003ff106 	br	806f34 <memcpy+0xc4>

00806f70 <memmove>:
  806f70:	2005883a 	mov	r2,r4
  806f74:	29000a2e 	bgeu	r5,r4,806fa0 <memmove+0x30>
  806f78:	2989883a 	add	r4,r5,r6
  806f7c:	1100082e 	bgeu	r2,r4,806fa0 <memmove+0x30>
  806f80:	1187883a 	add	r3,r2,r6
  806f84:	30003e26 	beq	r6,zero,807080 <memmove+0x110>
  806f88:	217fffc3 	ldbu	r5,-1(r4)
  806f8c:	18ffffc4 	addi	r3,r3,-1
  806f90:	213fffc4 	addi	r4,r4,-1
  806f94:	19400005 	stb	r5,0(r3)
  806f98:	10fffb1e 	bne	r2,r3,806f88 <memmove+0x18>
  806f9c:	f800283a 	ret
  806fa0:	30c00430 	cmpltui	r3,r6,16
  806fa4:	18000b26 	beq	r3,zero,806fd4 <memmove+0x64>
  806fa8:	1007883a 	mov	r3,r2
  806fac:	31ffffc4 	addi	r7,r6,-1
  806fb0:	30003726 	beq	r6,zero,807090 <memmove+0x120>
  806fb4:	39c00044 	addi	r7,r7,1
  806fb8:	29cf883a 	add	r7,r5,r7
  806fbc:	29800003 	ldbu	r6,0(r5)
  806fc0:	29400044 	addi	r5,r5,1
  806fc4:	18c00044 	addi	r3,r3,1
  806fc8:	19bfffc5 	stb	r6,-1(r3)
  806fcc:	29fffb1e 	bne	r5,r7,806fbc <memmove+0x4c>
  806fd0:	f800283a 	ret
  806fd4:	2886b03a 	or	r3,r5,r2
  806fd8:	18c000cc 	andi	r3,r3,3
  806fdc:	1800291e 	bne	r3,zero,807084 <memmove+0x114>
  806fe0:	327ffc04 	addi	r9,r6,-16
  806fe4:	4812d13a 	srli	r9,r9,4
  806fe8:	280f883a 	mov	r7,r5
  806fec:	1007883a 	mov	r3,r2
  806ff0:	4a400044 	addi	r9,r9,1
  806ff4:	4812913a 	slli	r9,r9,4
  806ff8:	1251883a 	add	r8,r2,r9
  806ffc:	39000017 	ldw	r4,0(r7)
  807000:	39c00404 	addi	r7,r7,16
  807004:	18c00404 	addi	r3,r3,16
  807008:	193ffc15 	stw	r4,-16(r3)
  80700c:	393ffd17 	ldw	r4,-12(r7)
  807010:	193ffd15 	stw	r4,-12(r3)
  807014:	393ffe17 	ldw	r4,-8(r7)
  807018:	193ffe15 	stw	r4,-8(r3)
  80701c:	393fff17 	ldw	r4,-4(r7)
  807020:	193fff15 	stw	r4,-4(r3)
  807024:	40fff51e 	bne	r8,r3,806ffc <memmove+0x8c>
  807028:	3100030c 	andi	r4,r6,12
  80702c:	2a4b883a 	add	r5,r5,r9
  807030:	320003cc 	andi	r8,r6,15
  807034:	20001726 	beq	r4,zero,807094 <memmove+0x124>
  807038:	2813883a 	mov	r9,r5
  80703c:	180f883a 	mov	r7,r3
  807040:	4a800017 	ldw	r10,0(r9)
  807044:	39c00104 	addi	r7,r7,4
  807048:	41c9c83a 	sub	r4,r8,r7
  80704c:	1909883a 	add	r4,r3,r4
  807050:	21000128 	cmpgeui	r4,r4,4
  807054:	3abfff15 	stw	r10,-4(r7)
  807058:	4a400104 	addi	r9,r9,4
  80705c:	203ff81e 	bne	r4,zero,807040 <memmove+0xd0>
  807060:	413fff04 	addi	r4,r8,-4
  807064:	2008d0ba 	srli	r4,r4,2
  807068:	318000cc 	andi	r6,r6,3
  80706c:	21000044 	addi	r4,r4,1
  807070:	200890ba 	slli	r4,r4,2
  807074:	1907883a 	add	r3,r3,r4
  807078:	290b883a 	add	r5,r5,r4
  80707c:	003fcb06 	br	806fac <memmove+0x3c>
  807080:	f800283a 	ret
  807084:	31ffffc4 	addi	r7,r6,-1
  807088:	1007883a 	mov	r3,r2
  80708c:	003fc906 	br	806fb4 <memmove+0x44>
  807090:	f800283a 	ret
  807094:	400d883a 	mov	r6,r8
  807098:	003fc406 	br	806fac <memmove+0x3c>

0080709c <memset>:
  80709c:	20c000cc 	andi	r3,r4,3
  8070a0:	2005883a 	mov	r2,r4
  8070a4:	18003626 	beq	r3,zero,807180 <memset+0xe4>
  8070a8:	31ffffc4 	addi	r7,r6,-1
  8070ac:	30003326 	beq	r6,zero,80717c <memset+0xe0>
  8070b0:	2811883a 	mov	r8,r5
  8070b4:	2007883a 	mov	r3,r4
  8070b8:	00000306 	br	8070c8 <memset+0x2c>
  8070bc:	39ffffc4 	addi	r7,r7,-1
  8070c0:	39bfffe0 	cmpeqi	r6,r7,-1
  8070c4:	30002d1e 	bne	r6,zero,80717c <memset+0xe0>
  8070c8:	18c00044 	addi	r3,r3,1
  8070cc:	198000cc 	andi	r6,r3,3
  8070d0:	1a3fffc5 	stb	r8,-1(r3)
  8070d4:	303ff91e 	bne	r6,zero,8070bc <memset+0x20>
  8070d8:	39000130 	cmpltui	r4,r7,4
  8070dc:	2000221e 	bne	r4,zero,807168 <memset+0xcc>
  8070e0:	29003fcc 	andi	r4,r5,255
  8070e4:	200c923a 	slli	r6,r4,8
  8070e8:	3a000430 	cmpltui	r8,r7,16
  8070ec:	3108b03a 	or	r4,r6,r4
  8070f0:	200c943a 	slli	r6,r4,16
  8070f4:	310cb03a 	or	r6,r6,r4
  8070f8:	40000e1e 	bne	r8,zero,807134 <memset+0x98>
  8070fc:	393ffc04 	addi	r4,r7,-16
  807100:	2008d13a 	srli	r4,r4,4
  807104:	21000044 	addi	r4,r4,1
  807108:	2008913a 	slli	r4,r4,4
  80710c:	1909883a 	add	r4,r3,r4
  807110:	19800015 	stw	r6,0(r3)
  807114:	19800115 	stw	r6,4(r3)
  807118:	19800215 	stw	r6,8(r3)
  80711c:	19800315 	stw	r6,12(r3)
  807120:	18c00404 	addi	r3,r3,16
  807124:	20fffa1e 	bne	r4,r3,807110 <memset+0x74>
  807128:	3900030c 	andi	r4,r7,12
  80712c:	39c003cc 	andi	r7,r7,15
  807130:	20000d26 	beq	r4,zero,807168 <memset+0xcc>
  807134:	1811883a 	mov	r8,r3
  807138:	42000104 	addi	r8,r8,4
  80713c:	3a09c83a 	sub	r4,r7,r8
  807140:	1909883a 	add	r4,r3,r4
  807144:	21000128 	cmpgeui	r4,r4,4
  807148:	41bfff15 	stw	r6,-4(r8)
  80714c:	203ffa1e 	bne	r4,zero,807138 <memset+0x9c>
  807150:	393fff04 	addi	r4,r7,-4
  807154:	2008d0ba 	srli	r4,r4,2
  807158:	39c000cc 	andi	r7,r7,3
  80715c:	21000044 	addi	r4,r4,1
  807160:	200890ba 	slli	r4,r4,2
  807164:	1907883a 	add	r3,r3,r4
  807168:	38000426 	beq	r7,zero,80717c <memset+0xe0>
  80716c:	19cf883a 	add	r7,r3,r7
  807170:	18c00044 	addi	r3,r3,1
  807174:	197fffc5 	stb	r5,-1(r3)
  807178:	38fffd1e 	bne	r7,r3,807170 <memset+0xd4>
  80717c:	f800283a 	ret
  807180:	2007883a 	mov	r3,r4
  807184:	300f883a 	mov	r7,r6
  807188:	003fd306 	br	8070d8 <memset+0x3c>

0080718c <_Balloc>:
  80718c:	20801317 	ldw	r2,76(r4)
  807190:	defffc04 	addi	sp,sp,-16
  807194:	dc400115 	stw	r17,4(sp)
  807198:	dc000015 	stw	r16,0(sp)
  80719c:	dfc00315 	stw	ra,12(sp)
  8071a0:	dc800215 	stw	r18,8(sp)
  8071a4:	2021883a 	mov	r16,r4
  8071a8:	2823883a 	mov	r17,r5
  8071ac:	10000e26 	beq	r2,zero,8071e8 <_Balloc+0x5c>
  8071b0:	880690ba 	slli	r3,r17,2
  8071b4:	10c7883a 	add	r3,r2,r3
  8071b8:	18800017 	ldw	r2,0(r3)
  8071bc:	10001126 	beq	r2,zero,807204 <_Balloc+0x78>
  8071c0:	11000017 	ldw	r4,0(r2)
  8071c4:	19000015 	stw	r4,0(r3)
  8071c8:	10000415 	stw	zero,16(r2)
  8071cc:	10000315 	stw	zero,12(r2)
  8071d0:	dfc00317 	ldw	ra,12(sp)
  8071d4:	dc800217 	ldw	r18,8(sp)
  8071d8:	dc400117 	ldw	r17,4(sp)
  8071dc:	dc000017 	ldw	r16,0(sp)
  8071e0:	dec00404 	addi	sp,sp,16
  8071e4:	f800283a 	ret
  8071e8:	01800844 	movi	r6,33
  8071ec:	01400104 	movi	r5,4
  8071f0:	0809ff00 	call	809ff0 <_calloc_r>
  8071f4:	80801315 	stw	r2,76(r16)
  8071f8:	103fed1e 	bne	r2,zero,8071b0 <_Balloc+0x24>
  8071fc:	0005883a 	mov	r2,zero
  807200:	003ff306 	br	8071d0 <_Balloc+0x44>
  807204:	04800044 	movi	r18,1
  807208:	9464983a 	sll	r18,r18,r17
  80720c:	01400044 	movi	r5,1
  807210:	8009883a 	mov	r4,r16
  807214:	91800144 	addi	r6,r18,5
  807218:	300c90ba 	slli	r6,r6,2
  80721c:	0809ff00 	call	809ff0 <_calloc_r>
  807220:	103ff626 	beq	r2,zero,8071fc <_Balloc+0x70>
  807224:	14400115 	stw	r17,4(r2)
  807228:	14800215 	stw	r18,8(r2)
  80722c:	003fe606 	br	8071c8 <_Balloc+0x3c>

00807230 <_Bfree>:
  807230:	28000726 	beq	r5,zero,807250 <_Bfree+0x20>
  807234:	28c00117 	ldw	r3,4(r5)
  807238:	20801317 	ldw	r2,76(r4)
  80723c:	180690ba 	slli	r3,r3,2
  807240:	10c5883a 	add	r2,r2,r3
  807244:	10c00017 	ldw	r3,0(r2)
  807248:	28c00015 	stw	r3,0(r5)
  80724c:	11400015 	stw	r5,0(r2)
  807250:	f800283a 	ret

00807254 <__multadd>:
  807254:	defff704 	addi	sp,sp,-36
  807258:	dc800215 	stw	r18,8(sp)
  80725c:	2c800417 	ldw	r18,16(r5)
  807260:	ddc00715 	stw	r23,28(sp)
  807264:	dd800615 	stw	r22,24(sp)
  807268:	dd400515 	stw	r21,20(sp)
  80726c:	dd000415 	stw	r20,16(sp)
  807270:	dcc00315 	stw	r19,12(sp)
  807274:	dc400115 	stw	r17,4(sp)
  807278:	dfc00815 	stw	ra,32(sp)
  80727c:	dc000015 	stw	r16,0(sp)
  807280:	2827883a 	mov	r19,r5
  807284:	2029883a 	mov	r20,r4
  807288:	302b883a 	mov	r21,r6
  80728c:	3823883a 	mov	r17,r7
  807290:	2d800504 	addi	r22,r5,20
  807294:	002f883a 	mov	r23,zero
  807298:	b4000017 	ldw	r16,0(r22)
  80729c:	a80b883a 	mov	r5,r21
  8072a0:	b5800104 	addi	r22,r22,4
  8072a4:	813fffcc 	andi	r4,r16,65535
  8072a8:	08015040 	call	801504 <__mulsi3>
  8072ac:	8008d43a 	srli	r4,r16,16
  8072b0:	a80b883a 	mov	r5,r21
  8072b4:	1461883a 	add	r16,r2,r17
  8072b8:	08015040 	call	801504 <__mulsi3>
  8072bc:	800ed43a 	srli	r7,r16,16
  8072c0:	843fffcc 	andi	r16,r16,65535
  8072c4:	bdc00044 	addi	r23,r23,1
  8072c8:	11c5883a 	add	r2,r2,r7
  8072cc:	1006943a 	slli	r3,r2,16
  8072d0:	1022d43a 	srli	r17,r2,16
  8072d4:	1c21883a 	add	r16,r3,r16
  8072d8:	b43fff15 	stw	r16,-4(r22)
  8072dc:	bcbfee16 	blt	r23,r18,807298 <__multadd+0x44>
  8072e0:	88000826 	beq	r17,zero,807304 <__multadd+0xb0>
  8072e4:	98800217 	ldw	r2,8(r19)
  8072e8:	9080120e 	bge	r18,r2,807334 <__multadd+0xe0>
  8072ec:	90800144 	addi	r2,r18,5
  8072f0:	100490ba 	slli	r2,r2,2
  8072f4:	94800044 	addi	r18,r18,1
  8072f8:	9885883a 	add	r2,r19,r2
  8072fc:	14400015 	stw	r17,0(r2)
  807300:	9c800415 	stw	r18,16(r19)
  807304:	9805883a 	mov	r2,r19
  807308:	dfc00817 	ldw	ra,32(sp)
  80730c:	ddc00717 	ldw	r23,28(sp)
  807310:	dd800617 	ldw	r22,24(sp)
  807314:	dd400517 	ldw	r21,20(sp)
  807318:	dd000417 	ldw	r20,16(sp)
  80731c:	dcc00317 	ldw	r19,12(sp)
  807320:	dc800217 	ldw	r18,8(sp)
  807324:	dc400117 	ldw	r17,4(sp)
  807328:	dc000017 	ldw	r16,0(sp)
  80732c:	dec00904 	addi	sp,sp,36
  807330:	f800283a 	ret
  807334:	99400117 	ldw	r5,4(r19)
  807338:	a009883a 	mov	r4,r20
  80733c:	29400044 	addi	r5,r5,1
  807340:	080718c0 	call	80718c <_Balloc>
  807344:	1021883a 	mov	r16,r2
  807348:	10001226 	beq	r2,zero,807394 <__multadd+0x140>
  80734c:	99800417 	ldw	r6,16(r19)
  807350:	99400304 	addi	r5,r19,12
  807354:	11000304 	addi	r4,r2,12
  807358:	31800084 	addi	r6,r6,2
  80735c:	300c90ba 	slli	r6,r6,2
  807360:	0806e700 	call	806e70 <memcpy>
  807364:	98000926 	beq	r19,zero,80738c <__multadd+0x138>
  807368:	98c00117 	ldw	r3,4(r19)
  80736c:	a0801317 	ldw	r2,76(r20)
  807370:	180690ba 	slli	r3,r3,2
  807374:	10c5883a 	add	r2,r2,r3
  807378:	10c00017 	ldw	r3,0(r2)
  80737c:	98c00015 	stw	r3,0(r19)
  807380:	14c00015 	stw	r19,0(r2)
  807384:	8027883a 	mov	r19,r16
  807388:	003fd806 	br	8072ec <__multadd+0x98>
  80738c:	8027883a 	mov	r19,r16
  807390:	003fd606 	br	8072ec <__multadd+0x98>
  807394:	01c02074 	movhi	r7,129
  807398:	01002074 	movhi	r4,129
  80739c:	39c39204 	addi	r7,r7,3656
  8073a0:	000d883a 	mov	r6,zero
  8073a4:	01402d44 	movi	r5,181
  8073a8:	2103a704 	addi	r4,r4,3740
  8073ac:	0809f780 	call	809f78 <__assert_func>

008073b0 <__s2b>:
  8073b0:	defff904 	addi	sp,sp,-28
  8073b4:	dc800215 	stw	r18,8(sp)
  8073b8:	dc000015 	stw	r16,0(sp)
  8073bc:	2025883a 	mov	r18,r4
  8073c0:	2821883a 	mov	r16,r5
  8073c4:	39000204 	addi	r4,r7,8
  8073c8:	01400244 	movi	r5,9
  8073cc:	dcc00315 	stw	r19,12(sp)
  8073d0:	dc400115 	stw	r17,4(sp)
  8073d4:	dfc00615 	stw	ra,24(sp)
  8073d8:	3823883a 	mov	r17,r7
  8073dc:	dd400515 	stw	r21,20(sp)
  8073e0:	dd000415 	stw	r20,16(sp)
  8073e4:	3027883a 	mov	r19,r6
  8073e8:	080b8d80 	call	80b8d8 <__divsi3>
  8073ec:	88c00290 	cmplti	r3,r17,10
  8073f0:	1800341e 	bne	r3,zero,8074c4 <__s2b+0x114>
  8073f4:	00c00044 	movi	r3,1
  8073f8:	000b883a 	mov	r5,zero
  8073fc:	18c7883a 	add	r3,r3,r3
  807400:	29400044 	addi	r5,r5,1
  807404:	18bffd16 	blt	r3,r2,8073fc <__s2b+0x4c>
  807408:	9009883a 	mov	r4,r18
  80740c:	080718c0 	call	80718c <_Balloc>
  807410:	100b883a 	mov	r5,r2
  807414:	10002d26 	beq	r2,zero,8074cc <__s2b+0x11c>
  807418:	d8800717 	ldw	r2,28(sp)
  80741c:	28800515 	stw	r2,20(r5)
  807420:	00800044 	movi	r2,1
  807424:	28800415 	stw	r2,16(r5)
  807428:	98800290 	cmplti	r2,r19,10
  80742c:	1000221e 	bne	r2,zero,8074b8 <__s2b+0x108>
  807430:	85400244 	addi	r21,r16,9
  807434:	a829883a 	mov	r20,r21
  807438:	84e1883a 	add	r16,r16,r19
  80743c:	a1c00007 	ldb	r7,0(r20)
  807440:	01800284 	movi	r6,10
  807444:	9009883a 	mov	r4,r18
  807448:	39fff404 	addi	r7,r7,-48
  80744c:	08072540 	call	807254 <__multadd>
  807450:	a5000044 	addi	r20,r20,1
  807454:	100b883a 	mov	r5,r2
  807458:	a43ff81e 	bne	r20,r16,80743c <__s2b+0x8c>
  80745c:	9c3ffe04 	addi	r16,r19,-8
  807460:	ac21883a 	add	r16,r21,r16
  807464:	9c400a0e 	bge	r19,r17,807490 <__s2b+0xe0>
  807468:	8ce3c83a 	sub	r17,r17,r19
  80746c:	8463883a 	add	r17,r16,r17
  807470:	81c00007 	ldb	r7,0(r16)
  807474:	01800284 	movi	r6,10
  807478:	9009883a 	mov	r4,r18
  80747c:	39fff404 	addi	r7,r7,-48
  807480:	08072540 	call	807254 <__multadd>
  807484:	84000044 	addi	r16,r16,1
  807488:	100b883a 	mov	r5,r2
  80748c:	8c3ff81e 	bne	r17,r16,807470 <__s2b+0xc0>
  807490:	2805883a 	mov	r2,r5
  807494:	dfc00617 	ldw	ra,24(sp)
  807498:	dd400517 	ldw	r21,20(sp)
  80749c:	dd000417 	ldw	r20,16(sp)
  8074a0:	dcc00317 	ldw	r19,12(sp)
  8074a4:	dc800217 	ldw	r18,8(sp)
  8074a8:	dc400117 	ldw	r17,4(sp)
  8074ac:	dc000017 	ldw	r16,0(sp)
  8074b0:	dec00704 	addi	sp,sp,28
  8074b4:	f800283a 	ret
  8074b8:	84000284 	addi	r16,r16,10
  8074bc:	04c00244 	movi	r19,9
  8074c0:	003fe806 	br	807464 <__s2b+0xb4>
  8074c4:	000b883a 	mov	r5,zero
  8074c8:	003fcf06 	br	807408 <__s2b+0x58>
  8074cc:	01c02074 	movhi	r7,129
  8074d0:	01002074 	movhi	r4,129
  8074d4:	39c39204 	addi	r7,r7,3656
  8074d8:	000d883a 	mov	r6,zero
  8074dc:	01403384 	movi	r5,206
  8074e0:	2103a704 	addi	r4,r4,3740
  8074e4:	0809f780 	call	809f78 <__assert_func>

008074e8 <__hi0bits>:
  8074e8:	20bfffec 	andhi	r2,r4,65535
  8074ec:	1000131e 	bne	r2,zero,80753c <__hi0bits+0x54>
  8074f0:	2008943a 	slli	r4,r4,16
  8074f4:	00800404 	movi	r2,16
  8074f8:	20ffc02c 	andhi	r3,r4,65280
  8074fc:	1800021e 	bne	r3,zero,807508 <__hi0bits+0x20>
  807500:	2008923a 	slli	r4,r4,8
  807504:	10800204 	addi	r2,r2,8
  807508:	20fc002c 	andhi	r3,r4,61440
  80750c:	1800021e 	bne	r3,zero,807518 <__hi0bits+0x30>
  807510:	2008913a 	slli	r4,r4,4
  807514:	10800104 	addi	r2,r2,4
  807518:	20f0002c 	andhi	r3,r4,49152
  80751c:	1800021e 	bne	r3,zero,807528 <__hi0bits+0x40>
  807520:	200890ba 	slli	r4,r4,2
  807524:	10800084 	addi	r2,r2,2
  807528:	20000316 	blt	r4,zero,807538 <__hi0bits+0x50>
  80752c:	2110002c 	andhi	r4,r4,16384
  807530:	10800044 	addi	r2,r2,1
  807534:	20000326 	beq	r4,zero,807544 <__hi0bits+0x5c>
  807538:	f800283a 	ret
  80753c:	0005883a 	mov	r2,zero
  807540:	003fed06 	br	8074f8 <__hi0bits+0x10>
  807544:	00800804 	movi	r2,32
  807548:	f800283a 	ret

0080754c <__lo0bits>:
  80754c:	20c00017 	ldw	r3,0(r4)
  807550:	188001cc 	andi	r2,r3,7
  807554:	10000826 	beq	r2,zero,807578 <__lo0bits+0x2c>
  807558:	1880004c 	andi	r2,r3,1
  80755c:	10001f1e 	bne	r2,zero,8075dc <__lo0bits+0x90>
  807560:	1880008c 	andi	r2,r3,2
  807564:	10002126 	beq	r2,zero,8075ec <__lo0bits+0xa0>
  807568:	1806d07a 	srli	r3,r3,1
  80756c:	00800044 	movi	r2,1
  807570:	20c00015 	stw	r3,0(r4)
  807574:	f800283a 	ret
  807578:	18bfffcc 	andi	r2,r3,65535
  80757c:	10001426 	beq	r2,zero,8075d0 <__lo0bits+0x84>
  807580:	0005883a 	mov	r2,zero
  807584:	19403fcc 	andi	r5,r3,255
  807588:	2800021e 	bne	r5,zero,807594 <__lo0bits+0x48>
  80758c:	1806d23a 	srli	r3,r3,8
  807590:	10800204 	addi	r2,r2,8
  807594:	194003cc 	andi	r5,r3,15
  807598:	2800021e 	bne	r5,zero,8075a4 <__lo0bits+0x58>
  80759c:	1806d13a 	srli	r3,r3,4
  8075a0:	10800104 	addi	r2,r2,4
  8075a4:	194000cc 	andi	r5,r3,3
  8075a8:	2800021e 	bne	r5,zero,8075b4 <__lo0bits+0x68>
  8075ac:	1806d0ba 	srli	r3,r3,2
  8075b0:	10800084 	addi	r2,r2,2
  8075b4:	1940004c 	andi	r5,r3,1
  8075b8:	2800031e 	bne	r5,zero,8075c8 <__lo0bits+0x7c>
  8075bc:	1806d07a 	srli	r3,r3,1
  8075c0:	10800044 	addi	r2,r2,1
  8075c4:	18000726 	beq	r3,zero,8075e4 <__lo0bits+0x98>
  8075c8:	20c00015 	stw	r3,0(r4)
  8075cc:	f800283a 	ret
  8075d0:	1806d43a 	srli	r3,r3,16
  8075d4:	00800404 	movi	r2,16
  8075d8:	003fea06 	br	807584 <__lo0bits+0x38>
  8075dc:	0005883a 	mov	r2,zero
  8075e0:	f800283a 	ret
  8075e4:	00800804 	movi	r2,32
  8075e8:	f800283a 	ret
  8075ec:	1806d0ba 	srli	r3,r3,2
  8075f0:	00800084 	movi	r2,2
  8075f4:	20c00015 	stw	r3,0(r4)
  8075f8:	f800283a 	ret

008075fc <__i2b>:
  8075fc:	defffe04 	addi	sp,sp,-8
  807600:	dc000015 	stw	r16,0(sp)
  807604:	2821883a 	mov	r16,r5
  807608:	01400044 	movi	r5,1
  80760c:	dfc00115 	stw	ra,4(sp)
  807610:	080718c0 	call	80718c <_Balloc>
  807614:	10000726 	beq	r2,zero,807634 <__i2b+0x38>
  807618:	01000044 	movi	r4,1
  80761c:	14000515 	stw	r16,20(r2)
  807620:	11000415 	stw	r4,16(r2)
  807624:	dfc00117 	ldw	ra,4(sp)
  807628:	dc000017 	ldw	r16,0(sp)
  80762c:	dec00204 	addi	sp,sp,8
  807630:	f800283a 	ret
  807634:	01c02074 	movhi	r7,129
  807638:	01002074 	movhi	r4,129
  80763c:	39c39204 	addi	r7,r7,3656
  807640:	000d883a 	mov	r6,zero
  807644:	01405004 	movi	r5,320
  807648:	2103a704 	addi	r4,r4,3740
  80764c:	0809f780 	call	809f78 <__assert_func>

00807650 <__multiply>:
  807650:	defff004 	addi	sp,sp,-64
  807654:	dd800c15 	stw	r22,48(sp)
  807658:	dc400715 	stw	r17,28(sp)
  80765c:	2d800417 	ldw	r22,16(r5)
  807660:	34400417 	ldw	r17,16(r6)
  807664:	dc800815 	stw	r18,32(sp)
  807668:	dc000615 	stw	r16,24(sp)
  80766c:	dfc00f15 	stw	ra,60(sp)
  807670:	df000e15 	stw	fp,56(sp)
  807674:	ddc00d15 	stw	r23,52(sp)
  807678:	dd400b15 	stw	r21,44(sp)
  80767c:	dd000a15 	stw	r20,40(sp)
  807680:	dcc00915 	stw	r19,36(sp)
  807684:	2825883a 	mov	r18,r5
  807688:	3021883a 	mov	r16,r6
  80768c:	b4400516 	blt	r22,r17,8076a4 <__multiply+0x54>
  807690:	8807883a 	mov	r3,r17
  807694:	2821883a 	mov	r16,r5
  807698:	b023883a 	mov	r17,r22
  80769c:	3025883a 	mov	r18,r6
  8076a0:	182d883a 	mov	r22,r3
  8076a4:	80800217 	ldw	r2,8(r16)
  8076a8:	8d87883a 	add	r3,r17,r22
  8076ac:	d8c00115 	stw	r3,4(sp)
  8076b0:	81400117 	ldw	r5,4(r16)
  8076b4:	10c0010e 	bge	r2,r3,8076bc <__multiply+0x6c>
  8076b8:	29400044 	addi	r5,r5,1
  8076bc:	080718c0 	call	80718c <_Balloc>
  8076c0:	d8800515 	stw	r2,20(sp)
  8076c4:	10008626 	beq	r2,zero,8078e0 <__multiply+0x290>
  8076c8:	d8800117 	ldw	r2,4(sp)
  8076cc:	102690ba 	slli	r19,r2,2
  8076d0:	d8800517 	ldw	r2,20(sp)
  8076d4:	10c00504 	addi	r3,r2,20
  8076d8:	d8c00015 	stw	r3,0(sp)
  8076dc:	1ce7883a 	add	r19,r3,r19
  8076e0:	1805883a 	mov	r2,r3
  8076e4:	1cc0032e 	bgeu	r3,r19,8076f4 <__multiply+0xa4>
  8076e8:	10000015 	stw	zero,0(r2)
  8076ec:	10800104 	addi	r2,r2,4
  8076f0:	14fffd36 	bltu	r2,r19,8076e8 <__multiply+0x98>
  8076f4:	b02c90ba 	slli	r22,r22,2
  8076f8:	882290ba 	slli	r17,r17,2
  8076fc:	94800504 	addi	r18,r18,20
  807700:	80800504 	addi	r2,r16,20
  807704:	9587883a 	add	r3,r18,r22
  807708:	d8800315 	stw	r2,12(sp)
  80770c:	d8c00215 	stw	r3,8(sp)
  807710:	1463883a 	add	r17,r2,r17
  807714:	90c0342e 	bgeu	r18,r3,8077e8 <__multiply+0x198>
  807718:	80800544 	addi	r2,r16,21
  80771c:	88804b36 	bltu	r17,r2,80784c <__multiply+0x1fc>
  807720:	8c05c83a 	sub	r2,r17,r16
  807724:	10bffac4 	addi	r2,r2,-21
  807728:	1004d0ba 	srli	r2,r2,2
  80772c:	10800044 	addi	r2,r2,1
  807730:	100490ba 	slli	r2,r2,2
  807734:	d8800415 	stw	r2,16(sp)
  807738:	00000606 	br	807754 <__multiply+0x104>
  80773c:	d8800017 	ldw	r2,0(sp)
  807740:	94800104 	addi	r18,r18,4
  807744:	10800104 	addi	r2,r2,4
  807748:	d8800015 	stw	r2,0(sp)
  80774c:	d8800217 	ldw	r2,8(sp)
  807750:	9080252e 	bgeu	r18,r2,8077e8 <__multiply+0x198>
  807754:	90800017 	ldw	r2,0(r18)
  807758:	15ffffcc 	andi	r23,r2,65535
  80775c:	b800401e 	bne	r23,zero,807860 <__multiply+0x210>
  807760:	1028d43a 	srli	r20,r2,16
  807764:	a03ff526 	beq	r20,zero,80773c <__multiply+0xec>
  807768:	dd400017 	ldw	r21,0(sp)
  80776c:	dd800317 	ldw	r22,12(sp)
  807770:	0039883a 	mov	fp,zero
  807774:	adc00017 	ldw	r23,0(r21)
  807778:	b821883a 	mov	r16,r23
  80777c:	b100000b 	ldhu	r4,0(r22)
  807780:	a00b883a 	mov	r5,r20
  807784:	ad400104 	addi	r21,r21,4
  807788:	08015040 	call	801504 <__mulsi3>
  80778c:	800cd43a 	srli	r6,r16,16
  807790:	b8ffffcc 	andi	r3,r23,65535
  807794:	b5800104 	addi	r22,r22,4
  807798:	118d883a 	add	r6,r2,r6
  80779c:	3739883a 	add	fp,r6,fp
  8077a0:	e004943a 	slli	r2,fp,16
  8077a4:	ac000017 	ldw	r16,0(r21)
  8077a8:	a00b883a 	mov	r5,r20
  8077ac:	10c6b03a 	or	r3,r2,r3
  8077b0:	a8ffff15 	stw	r3,-4(r21)
  8077b4:	b13fff8b 	ldhu	r4,-2(r22)
  8077b8:	08015040 	call	801504 <__mulsi3>
  8077bc:	e00cd43a 	srli	r6,fp,16
  8077c0:	80ffffcc 	andi	r3,r16,65535
  8077c4:	10c7883a 	add	r3,r2,r3
  8077c8:	19af883a 	add	r23,r3,r6
  8077cc:	b838d43a 	srli	fp,r23,16
  8077d0:	b47fea36 	bltu	r22,r17,80777c <__multiply+0x12c>
  8077d4:	d8800017 	ldw	r2,0(sp)
  8077d8:	d8c00417 	ldw	r3,16(sp)
  8077dc:	10c5883a 	add	r2,r2,r3
  8077e0:	15c00015 	stw	r23,0(r2)
  8077e4:	003fd506 	br	80773c <__multiply+0xec>
  8077e8:	d8800117 	ldw	r2,4(sp)
  8077ec:	00800516 	blt	zero,r2,807804 <__multiply+0x1b4>
  8077f0:	00000706 	br	807810 <__multiply+0x1c0>
  8077f4:	d8800117 	ldw	r2,4(sp)
  8077f8:	10bfffc4 	addi	r2,r2,-1
  8077fc:	d8800115 	stw	r2,4(sp)
  807800:	10000326 	beq	r2,zero,807810 <__multiply+0x1c0>
  807804:	98bfff17 	ldw	r2,-4(r19)
  807808:	9cffff04 	addi	r19,r19,-4
  80780c:	103ff926 	beq	r2,zero,8077f4 <__multiply+0x1a4>
  807810:	d8800517 	ldw	r2,20(sp)
  807814:	d8c00117 	ldw	r3,4(sp)
  807818:	10c00415 	stw	r3,16(r2)
  80781c:	dfc00f17 	ldw	ra,60(sp)
  807820:	df000e17 	ldw	fp,56(sp)
  807824:	ddc00d17 	ldw	r23,52(sp)
  807828:	dd800c17 	ldw	r22,48(sp)
  80782c:	dd400b17 	ldw	r21,44(sp)
  807830:	dd000a17 	ldw	r20,40(sp)
  807834:	dcc00917 	ldw	r19,36(sp)
  807838:	dc800817 	ldw	r18,32(sp)
  80783c:	dc400717 	ldw	r17,28(sp)
  807840:	dc000617 	ldw	r16,24(sp)
  807844:	dec01004 	addi	sp,sp,64
  807848:	f800283a 	ret
  80784c:	00800104 	movi	r2,4
  807850:	d8800415 	stw	r2,16(sp)
  807854:	90800017 	ldw	r2,0(r18)
  807858:	15ffffcc 	andi	r23,r2,65535
  80785c:	b83fc026 	beq	r23,zero,807760 <__multiply+0x110>
  807860:	dd800017 	ldw	r22,0(sp)
  807864:	dd400317 	ldw	r21,12(sp)
  807868:	0029883a 	mov	r20,zero
  80786c:	af000017 	ldw	fp,0(r21)
  807870:	b4000017 	ldw	r16,0(r22)
  807874:	b80b883a 	mov	r5,r23
  807878:	e13fffcc 	andi	r4,fp,65535
  80787c:	08015040 	call	801504 <__mulsi3>
  807880:	e008d43a 	srli	r4,fp,16
  807884:	823fffcc 	andi	r8,r16,65535
  807888:	1205883a 	add	r2,r2,r8
  80788c:	b80b883a 	mov	r5,r23
  807890:	1529883a 	add	r20,r2,r20
  807894:	8020d43a 	srli	r16,r16,16
  807898:	08015040 	call	801504 <__mulsi3>
  80789c:	a008d43a 	srli	r4,r20,16
  8078a0:	1405883a 	add	r2,r2,r16
  8078a4:	a0ffffcc 	andi	r3,r20,65535
  8078a8:	1105883a 	add	r2,r2,r4
  8078ac:	1008943a 	slli	r4,r2,16
  8078b0:	b5800104 	addi	r22,r22,4
  8078b4:	ad400104 	addi	r21,r21,4
  8078b8:	20c6b03a 	or	r3,r4,r3
  8078bc:	b0ffff15 	stw	r3,-4(r22)
  8078c0:	1028d43a 	srli	r20,r2,16
  8078c4:	ac7fe936 	bltu	r21,r17,80786c <__multiply+0x21c>
  8078c8:	d8800017 	ldw	r2,0(sp)
  8078cc:	d8c00417 	ldw	r3,16(sp)
  8078d0:	10c5883a 	add	r2,r2,r3
  8078d4:	15000015 	stw	r20,0(r2)
  8078d8:	90800017 	ldw	r2,0(r18)
  8078dc:	003fa006 	br	807760 <__multiply+0x110>
  8078e0:	01c02074 	movhi	r7,129
  8078e4:	01002074 	movhi	r4,129
  8078e8:	39c39204 	addi	r7,r7,3656
  8078ec:	000d883a 	mov	r6,zero
  8078f0:	01405744 	movi	r5,349
  8078f4:	2103a704 	addi	r4,r4,3740
  8078f8:	0809f780 	call	809f78 <__assert_func>

008078fc <__pow5mult>:
  8078fc:	defffb04 	addi	sp,sp,-20
  807900:	dcc00315 	stw	r19,12(sp)
  807904:	dc000015 	stw	r16,0(sp)
  807908:	dfc00415 	stw	ra,16(sp)
  80790c:	dc800215 	stw	r18,8(sp)
  807910:	dc400115 	stw	r17,4(sp)
  807914:	308000cc 	andi	r2,r6,3
  807918:	3021883a 	mov	r16,r6
  80791c:	2027883a 	mov	r19,r4
  807920:	10002d1e 	bne	r2,zero,8079d8 <__pow5mult+0xdc>
  807924:	2825883a 	mov	r18,r5
  807928:	8021d0ba 	srai	r16,r16,2
  80792c:	80001926 	beq	r16,zero,807994 <__pow5mult+0x98>
  807930:	9c401217 	ldw	r17,72(r19)
  807934:	8800061e 	bne	r17,zero,807950 <__pow5mult+0x54>
  807938:	00002f06 	br	8079f8 <__pow5mult+0xfc>
  80793c:	8021d07a 	srai	r16,r16,1
  807940:	80001426 	beq	r16,zero,807994 <__pow5mult+0x98>
  807944:	88800017 	ldw	r2,0(r17)
  807948:	10001a26 	beq	r2,zero,8079b4 <__pow5mult+0xb8>
  80794c:	1023883a 	mov	r17,r2
  807950:	8080004c 	andi	r2,r16,1
  807954:	103ff926 	beq	r2,zero,80793c <__pow5mult+0x40>
  807958:	880d883a 	mov	r6,r17
  80795c:	900b883a 	mov	r5,r18
  807960:	9809883a 	mov	r4,r19
  807964:	08076500 	call	807650 <__multiply>
  807968:	90001926 	beq	r18,zero,8079d0 <__pow5mult+0xd4>
  80796c:	91000117 	ldw	r4,4(r18)
  807970:	98c01317 	ldw	r3,76(r19)
  807974:	8021d07a 	srai	r16,r16,1
  807978:	200890ba 	slli	r4,r4,2
  80797c:	1907883a 	add	r3,r3,r4
  807980:	19000017 	ldw	r4,0(r3)
  807984:	91000015 	stw	r4,0(r18)
  807988:	1c800015 	stw	r18,0(r3)
  80798c:	1025883a 	mov	r18,r2
  807990:	803fec1e 	bne	r16,zero,807944 <__pow5mult+0x48>
  807994:	9005883a 	mov	r2,r18
  807998:	dfc00417 	ldw	ra,16(sp)
  80799c:	dcc00317 	ldw	r19,12(sp)
  8079a0:	dc800217 	ldw	r18,8(sp)
  8079a4:	dc400117 	ldw	r17,4(sp)
  8079a8:	dc000017 	ldw	r16,0(sp)
  8079ac:	dec00504 	addi	sp,sp,20
  8079b0:	f800283a 	ret
  8079b4:	880d883a 	mov	r6,r17
  8079b8:	880b883a 	mov	r5,r17
  8079bc:	9809883a 	mov	r4,r19
  8079c0:	08076500 	call	807650 <__multiply>
  8079c4:	88800015 	stw	r2,0(r17)
  8079c8:	10000015 	stw	zero,0(r2)
  8079cc:	003fdf06 	br	80794c <__pow5mult+0x50>
  8079d0:	1025883a 	mov	r18,r2
  8079d4:	003fd906 	br	80793c <__pow5mult+0x40>
  8079d8:	100490ba 	slli	r2,r2,2
  8079dc:	00c02074 	movhi	r3,129
  8079e0:	000f883a 	mov	r7,zero
  8079e4:	10c7883a 	add	r3,r2,r3
  8079e8:	1983b617 	ldw	r6,3800(r3)
  8079ec:	08072540 	call	807254 <__multadd>
  8079f0:	1025883a 	mov	r18,r2
  8079f4:	003fcc06 	br	807928 <__pow5mult+0x2c>
  8079f8:	01409c44 	movi	r5,625
  8079fc:	9809883a 	mov	r4,r19
  807a00:	08075fc0 	call	8075fc <__i2b>
  807a04:	98801215 	stw	r2,72(r19)
  807a08:	1023883a 	mov	r17,r2
  807a0c:	10000015 	stw	zero,0(r2)
  807a10:	003fcf06 	br	807950 <__pow5mult+0x54>

00807a14 <__lshift>:
  807a14:	defff904 	addi	sp,sp,-28
  807a18:	dd400515 	stw	r21,20(sp)
  807a1c:	dc800215 	stw	r18,8(sp)
  807a20:	302bd17a 	srai	r21,r6,5
  807a24:	2c800417 	ldw	r18,16(r5)
  807a28:	28800217 	ldw	r2,8(r5)
  807a2c:	dd000415 	stw	r20,16(sp)
  807a30:	aca5883a 	add	r18,r21,r18
  807a34:	dcc00315 	stw	r19,12(sp)
  807a38:	dc400115 	stw	r17,4(sp)
  807a3c:	dc000015 	stw	r16,0(sp)
  807a40:	dfc00615 	stw	ra,24(sp)
  807a44:	94400044 	addi	r17,r18,1
  807a48:	2821883a 	mov	r16,r5
  807a4c:	3029883a 	mov	r20,r6
  807a50:	29400117 	ldw	r5,4(r5)
  807a54:	2027883a 	mov	r19,r4
  807a58:	1440030e 	bge	r2,r17,807a68 <__lshift+0x54>
  807a5c:	1085883a 	add	r2,r2,r2
  807a60:	29400044 	addi	r5,r5,1
  807a64:	147ffd16 	blt	r2,r17,807a5c <__lshift+0x48>
  807a68:	9809883a 	mov	r4,r19
  807a6c:	080718c0 	call	80718c <_Balloc>
  807a70:	10004326 	beq	r2,zero,807b80 <__lshift+0x16c>
  807a74:	12000504 	addi	r8,r2,20
  807a78:	0540090e 	bge	zero,r21,807aa0 <__lshift+0x8c>
  807a7c:	ad400144 	addi	r21,r21,5
  807a80:	a82a90ba 	slli	r21,r21,2
  807a84:	4007883a 	mov	r3,r8
  807a88:	1549883a 	add	r4,r2,r21
  807a8c:	18c00104 	addi	r3,r3,4
  807a90:	183fff15 	stw	zero,-4(r3)
  807a94:	193ffd1e 	bne	r3,r4,807a8c <__lshift+0x78>
  807a98:	ad7ffb04 	addi	r21,r21,-20
  807a9c:	4551883a 	add	r8,r8,r21
  807aa0:	82400417 	ldw	r9,16(r16)
  807aa4:	80c00504 	addi	r3,r16,20
  807aa8:	a14007cc 	andi	r5,r20,31
  807aac:	481290ba 	slli	r9,r9,2
  807ab0:	1a53883a 	add	r9,r3,r9
  807ab4:	28002a26 	beq	r5,zero,807b60 <__lshift+0x14c>
  807ab8:	02800804 	movi	r10,32
  807abc:	5155c83a 	sub	r10,r10,r5
  807ac0:	4009883a 	mov	r4,r8
  807ac4:	000f883a 	mov	r7,zero
  807ac8:	19800017 	ldw	r6,0(r3)
  807acc:	21000104 	addi	r4,r4,4
  807ad0:	18c00104 	addi	r3,r3,4
  807ad4:	314c983a 	sll	r6,r6,r5
  807ad8:	31ccb03a 	or	r6,r6,r7
  807adc:	21bfff15 	stw	r6,-4(r4)
  807ae0:	19bfff17 	ldw	r6,-4(r3)
  807ae4:	328ed83a 	srl	r7,r6,r10
  807ae8:	1a7ff736 	bltu	r3,r9,807ac8 <__lshift+0xb4>
  807aec:	80c00544 	addi	r3,r16,21
  807af0:	48c02136 	bltu	r9,r3,807b78 <__lshift+0x164>
  807af4:	4c07c83a 	sub	r3,r9,r16
  807af8:	18fffac4 	addi	r3,r3,-21
  807afc:	1806d0ba 	srli	r3,r3,2
  807b00:	18c00044 	addi	r3,r3,1
  807b04:	180690ba 	slli	r3,r3,2
  807b08:	40d1883a 	add	r8,r8,r3
  807b0c:	41c00015 	stw	r7,0(r8)
  807b10:	38000126 	beq	r7,zero,807b18 <__lshift+0x104>
  807b14:	8825883a 	mov	r18,r17
  807b18:	14800415 	stw	r18,16(r2)
  807b1c:	80000726 	beq	r16,zero,807b3c <__lshift+0x128>
  807b20:	81000117 	ldw	r4,4(r16)
  807b24:	98c01317 	ldw	r3,76(r19)
  807b28:	200890ba 	slli	r4,r4,2
  807b2c:	1907883a 	add	r3,r3,r4
  807b30:	19000017 	ldw	r4,0(r3)
  807b34:	81000015 	stw	r4,0(r16)
  807b38:	1c000015 	stw	r16,0(r3)
  807b3c:	dfc00617 	ldw	ra,24(sp)
  807b40:	dd400517 	ldw	r21,20(sp)
  807b44:	dd000417 	ldw	r20,16(sp)
  807b48:	dcc00317 	ldw	r19,12(sp)
  807b4c:	dc800217 	ldw	r18,8(sp)
  807b50:	dc400117 	ldw	r17,4(sp)
  807b54:	dc000017 	ldw	r16,0(sp)
  807b58:	dec00704 	addi	sp,sp,28
  807b5c:	f800283a 	ret
  807b60:	19000017 	ldw	r4,0(r3)
  807b64:	18c00104 	addi	r3,r3,4
  807b68:	42000104 	addi	r8,r8,4
  807b6c:	413fff15 	stw	r4,-4(r8)
  807b70:	1a7ffb36 	bltu	r3,r9,807b60 <__lshift+0x14c>
  807b74:	003fe806 	br	807b18 <__lshift+0x104>
  807b78:	00c00104 	movi	r3,4
  807b7c:	003fe206 	br	807b08 <__lshift+0xf4>
  807b80:	01c02074 	movhi	r7,129
  807b84:	01002074 	movhi	r4,129
  807b88:	39c39204 	addi	r7,r7,3656
  807b8c:	000d883a 	mov	r6,zero
  807b90:	01407644 	movi	r5,473
  807b94:	2103a704 	addi	r4,r4,3740
  807b98:	0809f780 	call	809f78 <__assert_func>

00807b9c <__mcmp>:
  807b9c:	21800417 	ldw	r6,16(r4)
  807ba0:	28c00417 	ldw	r3,16(r5)
  807ba4:	30c5c83a 	sub	r2,r6,r3
  807ba8:	30c00e1e 	bne	r6,r3,807be4 <__mcmp+0x48>
  807bac:	180690ba 	slli	r3,r3,2
  807bb0:	21c00504 	addi	r7,r4,20
  807bb4:	29400504 	addi	r5,r5,20
  807bb8:	38c9883a 	add	r4,r7,r3
  807bbc:	28c7883a 	add	r3,r5,r3
  807bc0:	00000106 	br	807bc8 <__mcmp+0x2c>
  807bc4:	3900082e 	bgeu	r7,r4,807be8 <__mcmp+0x4c>
  807bc8:	21bfff17 	ldw	r6,-4(r4)
  807bcc:	197fff17 	ldw	r5,-4(r3)
  807bd0:	213fff04 	addi	r4,r4,-4
  807bd4:	18ffff04 	addi	r3,r3,-4
  807bd8:	317ffa26 	beq	r6,r5,807bc4 <__mcmp+0x28>
  807bdc:	3140032e 	bgeu	r6,r5,807bec <__mcmp+0x50>
  807be0:	00bfffc4 	movi	r2,-1
  807be4:	f800283a 	ret
  807be8:	f800283a 	ret
  807bec:	00800044 	movi	r2,1
  807bf0:	f800283a 	ret

00807bf4 <__mdiff>:
  807bf4:	28800417 	ldw	r2,16(r5)
  807bf8:	30c00417 	ldw	r3,16(r6)
  807bfc:	defffc04 	addi	sp,sp,-16
  807c00:	dc800215 	stw	r18,8(sp)
  807c04:	dc400115 	stw	r17,4(sp)
  807c08:	dc000015 	stw	r16,0(sp)
  807c0c:	dfc00315 	stw	ra,12(sp)
  807c10:	2823883a 	mov	r17,r5
  807c14:	3021883a 	mov	r16,r6
  807c18:	10e5c83a 	sub	r18,r2,r3
  807c1c:	10c0641e 	bne	r2,r3,807db0 <__mdiff+0x1bc>
  807c20:	180c90ba 	slli	r6,r3,2
  807c24:	29400504 	addi	r5,r5,20
  807c28:	80c00504 	addi	r3,r16,20
  807c2c:	2985883a 	add	r2,r5,r6
  807c30:	1987883a 	add	r3,r3,r6
  807c34:	00000106 	br	807c3c <__mdiff+0x48>
  807c38:	2880642e 	bgeu	r5,r2,807dcc <__mdiff+0x1d8>
  807c3c:	11ffff17 	ldw	r7,-4(r2)
  807c40:	19bfff17 	ldw	r6,-4(r3)
  807c44:	10bfff04 	addi	r2,r2,-4
  807c48:	18ffff04 	addi	r3,r3,-4
  807c4c:	39bffa26 	beq	r7,r6,807c38 <__mdiff+0x44>
  807c50:	39805236 	bltu	r7,r6,807d9c <__mdiff+0x1a8>
  807c54:	89400117 	ldw	r5,4(r17)
  807c58:	080718c0 	call	80718c <_Balloc>
  807c5c:	10006226 	beq	r2,zero,807de8 <__mdiff+0x1f4>
  807c60:	8a400417 	ldw	r9,16(r17)
  807c64:	83000417 	ldw	r12,16(r16)
  807c68:	8ac00504 	addi	r11,r17,20
  807c6c:	481090ba 	slli	r8,r9,2
  807c70:	601890ba 	slli	r12,r12,2
  807c74:	81800504 	addi	r6,r16,20
  807c78:	13400504 	addi	r13,r2,20
  807c7c:	14800315 	stw	r18,12(r2)
  807c80:	5a11883a 	add	r8,r11,r8
  807c84:	3319883a 	add	r12,r6,r12
  807c88:	681d883a 	mov	r14,r13
  807c8c:	5815883a 	mov	r10,r11
  807c90:	0007883a 	mov	r3,zero
  807c94:	51000017 	ldw	r4,0(r10)
  807c98:	31c00017 	ldw	r7,0(r6)
  807c9c:	73800104 	addi	r14,r14,4
  807ca0:	217fffcc 	andi	r5,r4,65535
  807ca4:	28cb883a 	add	r5,r5,r3
  807ca8:	38ffffcc 	andi	r3,r7,65535
  807cac:	28cbc83a 	sub	r5,r5,r3
  807cb0:	380ed43a 	srli	r7,r7,16
  807cb4:	2006d43a 	srli	r3,r4,16
  807cb8:	2809d43a 	srai	r4,r5,16
  807cbc:	297fffcc 	andi	r5,r5,65535
  807cc0:	19c7c83a 	sub	r3,r3,r7
  807cc4:	1907883a 	add	r3,r3,r4
  807cc8:	1808943a 	slli	r4,r3,16
  807ccc:	31800104 	addi	r6,r6,4
  807cd0:	1807d43a 	srai	r3,r3,16
  807cd4:	214ab03a 	or	r5,r4,r5
  807cd8:	717fff15 	stw	r5,-4(r14)
  807cdc:	52800104 	addi	r10,r10,4
  807ce0:	333fec36 	bltu	r6,r12,807c94 <__mdiff+0xa0>
  807ce4:	640fc83a 	sub	r7,r12,r16
  807ce8:	39fffac4 	addi	r7,r7,-21
  807cec:	84000544 	addi	r16,r16,21
  807cf0:	380ed0ba 	srli	r7,r7,2
  807cf4:	64003336 	bltu	r12,r16,807dc4 <__mdiff+0x1d0>
  807cf8:	380890ba 	slli	r4,r7,2
  807cfc:	6909883a 	add	r4,r13,r4
  807d00:	64002e36 	bltu	r12,r16,807dbc <__mdiff+0x1c8>
  807d04:	39800044 	addi	r6,r7,1
  807d08:	300c90ba 	slli	r6,r6,2
  807d0c:	5997883a 	add	r11,r11,r6
  807d10:	699b883a 	add	r13,r13,r6
  807d14:	5a00152e 	bgeu	r11,r8,807d6c <__mdiff+0x178>
  807d18:	680f883a 	mov	r7,r13
  807d1c:	580d883a 	mov	r6,r11
  807d20:	31000017 	ldw	r4,0(r6)
  807d24:	39c00104 	addi	r7,r7,4
  807d28:	31800104 	addi	r6,r6,4
  807d2c:	217fffcc 	andi	r5,r4,65535
  807d30:	28cb883a 	add	r5,r5,r3
  807d34:	2815d43a 	srai	r10,r5,16
  807d38:	2006d43a 	srli	r3,r4,16
  807d3c:	297fffcc 	andi	r5,r5,65535
  807d40:	1a87883a 	add	r3,r3,r10
  807d44:	1814943a 	slli	r10,r3,16
  807d48:	1807d43a 	srai	r3,r3,16
  807d4c:	514ab03a 	or	r5,r10,r5
  807d50:	397fff15 	stw	r5,-4(r7)
  807d54:	323ff236 	bltu	r6,r8,807d20 <__mdiff+0x12c>
  807d58:	413fffc4 	addi	r4,r8,-1
  807d5c:	22c9c83a 	sub	r4,r4,r11
  807d60:	2008d0ba 	srli	r4,r4,2
  807d64:	200890ba 	slli	r4,r4,2
  807d68:	6909883a 	add	r4,r13,r4
  807d6c:	2800041e 	bne	r5,zero,807d80 <__mdiff+0x18c>
  807d70:	20ffff17 	ldw	r3,-4(r4)
  807d74:	4a7fffc4 	addi	r9,r9,-1
  807d78:	213fff04 	addi	r4,r4,-4
  807d7c:	183ffc26 	beq	r3,zero,807d70 <__mdiff+0x17c>
  807d80:	12400415 	stw	r9,16(r2)
  807d84:	dfc00317 	ldw	ra,12(sp)
  807d88:	dc800217 	ldw	r18,8(sp)
  807d8c:	dc400117 	ldw	r17,4(sp)
  807d90:	dc000017 	ldw	r16,0(sp)
  807d94:	dec00404 	addi	sp,sp,16
  807d98:	f800283a 	ret
  807d9c:	8805883a 	mov	r2,r17
  807da0:	04800044 	movi	r18,1
  807da4:	8023883a 	mov	r17,r16
  807da8:	1021883a 	mov	r16,r2
  807dac:	003fa906 	br	807c54 <__mdiff+0x60>
  807db0:	903ffa16 	blt	r18,zero,807d9c <__mdiff+0x1a8>
  807db4:	0025883a 	mov	r18,zero
  807db8:	003fa606 	br	807c54 <__mdiff+0x60>
  807dbc:	01800104 	movi	r6,4
  807dc0:	003fd206 	br	807d0c <__mdiff+0x118>
  807dc4:	0009883a 	mov	r4,zero
  807dc8:	003fcc06 	br	807cfc <__mdiff+0x108>
  807dcc:	000b883a 	mov	r5,zero
  807dd0:	080718c0 	call	80718c <_Balloc>
  807dd4:	10000b26 	beq	r2,zero,807e04 <__mdiff+0x210>
  807dd8:	00c00044 	movi	r3,1
  807ddc:	10c00415 	stw	r3,16(r2)
  807de0:	10000515 	stw	zero,20(r2)
  807de4:	003fe706 	br	807d84 <__mdiff+0x190>
  807de8:	01c02074 	movhi	r7,129
  807dec:	01002074 	movhi	r4,129
  807df0:	39c39204 	addi	r7,r7,3656
  807df4:	000d883a 	mov	r6,zero
  807df8:	01409004 	movi	r5,576
  807dfc:	2103a704 	addi	r4,r4,3740
  807e00:	0809f780 	call	809f78 <__assert_func>
  807e04:	01c02074 	movhi	r7,129
  807e08:	01002074 	movhi	r4,129
  807e0c:	39c39204 	addi	r7,r7,3656
  807e10:	000d883a 	mov	r6,zero
  807e14:	01408c84 	movi	r5,562
  807e18:	2103a704 	addi	r4,r4,3740
  807e1c:	0809f780 	call	809f78 <__assert_func>

00807e20 <__ulp>:
  807e20:	28dffc2c 	andhi	r3,r5,32752
  807e24:	017f3034 	movhi	r5,64704
  807e28:	1947883a 	add	r3,r3,r5
  807e2c:	00c0020e 	bge	zero,r3,807e38 <__ulp+0x18>
  807e30:	0005883a 	mov	r2,zero
  807e34:	f800283a 	ret
  807e38:	00c7c83a 	sub	r3,zero,r3
  807e3c:	1807d53a 	srai	r3,r3,20
  807e40:	18800508 	cmpgei	r2,r3,20
  807e44:	1000041e 	bne	r2,zero,807e58 <__ulp+0x38>
  807e48:	00800234 	movhi	r2,8
  807e4c:	10c7d83a 	sra	r3,r2,r3
  807e50:	0005883a 	mov	r2,zero
  807e54:	f800283a 	ret
  807e58:	193ffb04 	addi	r4,r3,-20
  807e5c:	208007c8 	cmpgei	r2,r4,31
  807e60:	0007883a 	mov	r3,zero
  807e64:	1000031e 	bne	r2,zero,807e74 <__ulp+0x54>
  807e68:	00a00034 	movhi	r2,32768
  807e6c:	1104d83a 	srl	r2,r2,r4
  807e70:	f800283a 	ret
  807e74:	00800044 	movi	r2,1
  807e78:	f800283a 	ret

00807e7c <__b2d>:
  807e7c:	defffa04 	addi	sp,sp,-24
  807e80:	dc400115 	stw	r17,4(sp)
  807e84:	24400417 	ldw	r17,16(r4)
  807e88:	dc000015 	stw	r16,0(sp)
  807e8c:	24000504 	addi	r16,r4,20
  807e90:	882290ba 	slli	r17,r17,2
  807e94:	dc800215 	stw	r18,8(sp)
  807e98:	dd000415 	stw	r20,16(sp)
  807e9c:	8463883a 	add	r17,r16,r17
  807ea0:	8cbfff17 	ldw	r18,-4(r17)
  807ea4:	dcc00315 	stw	r19,12(sp)
  807ea8:	dfc00515 	stw	ra,20(sp)
  807eac:	9009883a 	mov	r4,r18
  807eb0:	2827883a 	mov	r19,r5
  807eb4:	08074e80 	call	8074e8 <__hi0bits>
  807eb8:	01000804 	movi	r4,32
  807ebc:	2087c83a 	sub	r3,r4,r2
  807ec0:	98c00015 	stw	r3,0(r19)
  807ec4:	10c002c8 	cmpgei	r3,r2,11
  807ec8:	8d3fff04 	addi	r20,r17,-4
  807ecc:	18001f26 	beq	r3,zero,807f4c <__b2d+0xd0>
  807ed0:	10fffd44 	addi	r3,r2,-11
  807ed4:	85000e2e 	bgeu	r16,r20,807f10 <__b2d+0x94>
  807ed8:	88bffe17 	ldw	r2,-8(r17)
  807edc:	18001226 	beq	r3,zero,807f28 <__b2d+0xac>
  807ee0:	20c9c83a 	sub	r4,r4,r3
  807ee4:	110cd83a 	srl	r6,r2,r4
  807ee8:	90e4983a 	sll	r18,r18,r3
  807eec:	10c4983a 	sll	r2,r2,r3
  807ef0:	897ffe04 	addi	r5,r17,-8
  807ef4:	9186b03a 	or	r3,r18,r6
  807ef8:	18cffc34 	orhi	r3,r3,16368
  807efc:	81400b2e 	bgeu	r16,r5,807f2c <__b2d+0xb0>
  807f00:	897ffd17 	ldw	r5,-12(r17)
  807f04:	2908d83a 	srl	r4,r5,r4
  807f08:	1104b03a 	or	r2,r2,r4
  807f0c:	00000706 	br	807f2c <__b2d+0xb0>
  807f10:	18000426 	beq	r3,zero,807f24 <__b2d+0xa8>
  807f14:	90c6983a 	sll	r3,r18,r3
  807f18:	0005883a 	mov	r2,zero
  807f1c:	18cffc34 	orhi	r3,r3,16368
  807f20:	00000206 	br	807f2c <__b2d+0xb0>
  807f24:	0005883a 	mov	r2,zero
  807f28:	90cffc34 	orhi	r3,r18,16368
  807f2c:	dfc00517 	ldw	ra,20(sp)
  807f30:	dd000417 	ldw	r20,16(sp)
  807f34:	dcc00317 	ldw	r19,12(sp)
  807f38:	dc800217 	ldw	r18,8(sp)
  807f3c:	dc400117 	ldw	r17,4(sp)
  807f40:	dc000017 	ldw	r16,0(sp)
  807f44:	dec00604 	addi	sp,sp,24
  807f48:	f800283a 	ret
  807f4c:	014002c4 	movi	r5,11
  807f50:	2889c83a 	sub	r4,r5,r2
  807f54:	9106d83a 	srl	r3,r18,r4
  807f58:	18cffc34 	orhi	r3,r3,16368
  807f5c:	85000536 	bltu	r16,r20,807f74 <__b2d+0xf8>
  807f60:	000b883a 	mov	r5,zero
  807f64:	10800544 	addi	r2,r2,21
  807f68:	9084983a 	sll	r2,r18,r2
  807f6c:	1144b03a 	or	r2,r2,r5
  807f70:	003fee06 	br	807f2c <__b2d+0xb0>
  807f74:	897ffe17 	ldw	r5,-8(r17)
  807f78:	290ad83a 	srl	r5,r5,r4
  807f7c:	003ff906 	br	807f64 <__b2d+0xe8>

00807f80 <__d2b>:
  807f80:	defff804 	addi	sp,sp,-32
  807f84:	dd000615 	stw	r20,24(sp)
  807f88:	2829883a 	mov	r20,r5
  807f8c:	01400044 	movi	r5,1
  807f90:	dcc00515 	stw	r19,20(sp)
  807f94:	dc000215 	stw	r16,8(sp)
  807f98:	dfc00715 	stw	ra,28(sp)
  807f9c:	dc800415 	stw	r18,16(sp)
  807fa0:	dc400315 	stw	r17,12(sp)
  807fa4:	3021883a 	mov	r16,r6
  807fa8:	3827883a 	mov	r19,r7
  807fac:	080718c0 	call	80718c <_Balloc>
  807fb0:	10004526 	beq	r2,zero,8080c8 <__d2b+0x148>
  807fb4:	8024d53a 	srli	r18,r16,20
  807fb8:	01800434 	movhi	r6,16
  807fbc:	31bfffc4 	addi	r6,r6,-1
  807fc0:	9481ffcc 	andi	r18,r18,2047
  807fc4:	1023883a 	mov	r17,r2
  807fc8:	81a0703a 	and	r16,r16,r6
  807fcc:	90000126 	beq	r18,zero,807fd4 <__d2b+0x54>
  807fd0:	84000434 	orhi	r16,r16,16
  807fd4:	dc000115 	stw	r16,4(sp)
  807fd8:	a0002226 	beq	r20,zero,808064 <__d2b+0xe4>
  807fdc:	d809883a 	mov	r4,sp
  807fe0:	dd000015 	stw	r20,0(sp)
  807fe4:	080754c0 	call	80754c <__lo0bits>
  807fe8:	d8c00117 	ldw	r3,4(sp)
  807fec:	10003326 	beq	r2,zero,8080bc <__d2b+0x13c>
  807ff0:	01000804 	movi	r4,32
  807ff4:	2089c83a 	sub	r4,r4,r2
  807ff8:	1908983a 	sll	r4,r3,r4
  807ffc:	d9400017 	ldw	r5,0(sp)
  808000:	1886d83a 	srl	r3,r3,r2
  808004:	2148b03a 	or	r4,r4,r5
  808008:	89000515 	stw	r4,20(r17)
  80800c:	d8c00115 	stw	r3,4(sp)
  808010:	88c00615 	stw	r3,24(r17)
  808014:	1800271e 	bne	r3,zero,8080b4 <__d2b+0x134>
  808018:	04000044 	movi	r16,1
  80801c:	8c000415 	stw	r16,16(r17)
  808020:	90001926 	beq	r18,zero,808088 <__d2b+0x108>
  808024:	00c00d44 	movi	r3,53
  808028:	94bef344 	addi	r18,r18,-1075
  80802c:	90a5883a 	add	r18,r18,r2
  808030:	1885c83a 	sub	r2,r3,r2
  808034:	d8c00817 	ldw	r3,32(sp)
  808038:	9c800015 	stw	r18,0(r19)
  80803c:	18800015 	stw	r2,0(r3)
  808040:	8805883a 	mov	r2,r17
  808044:	dfc00717 	ldw	ra,28(sp)
  808048:	dd000617 	ldw	r20,24(sp)
  80804c:	dcc00517 	ldw	r19,20(sp)
  808050:	dc800417 	ldw	r18,16(sp)
  808054:	dc400317 	ldw	r17,12(sp)
  808058:	dc000217 	ldw	r16,8(sp)
  80805c:	dec00804 	addi	sp,sp,32
  808060:	f800283a 	ret
  808064:	d9000104 	addi	r4,sp,4
  808068:	080754c0 	call	80754c <__lo0bits>
  80806c:	00c00044 	movi	r3,1
  808070:	88c00415 	stw	r3,16(r17)
  808074:	d8c00117 	ldw	r3,4(sp)
  808078:	10800804 	addi	r2,r2,32
  80807c:	04000044 	movi	r16,1
  808080:	88c00515 	stw	r3,20(r17)
  808084:	903fe71e 	bne	r18,zero,808024 <__d2b+0xa4>
  808088:	800690ba 	slli	r3,r16,2
  80808c:	10bef384 	addi	r2,r2,-1074
  808090:	98800015 	stw	r2,0(r19)
  808094:	88c5883a 	add	r2,r17,r3
  808098:	11000417 	ldw	r4,16(r2)
  80809c:	8020917a 	slli	r16,r16,5
  8080a0:	08074e80 	call	8074e8 <__hi0bits>
  8080a4:	80a1c83a 	sub	r16,r16,r2
  8080a8:	d8800817 	ldw	r2,32(sp)
  8080ac:	14000015 	stw	r16,0(r2)
  8080b0:	003fe306 	br	808040 <__d2b+0xc0>
  8080b4:	04000084 	movi	r16,2
  8080b8:	003fd806 	br	80801c <__d2b+0x9c>
  8080bc:	d9000017 	ldw	r4,0(sp)
  8080c0:	89000515 	stw	r4,20(r17)
  8080c4:	003fd206 	br	808010 <__d2b+0x90>
  8080c8:	01c02074 	movhi	r7,129
  8080cc:	01002074 	movhi	r4,129
  8080d0:	39c39204 	addi	r7,r7,3656
  8080d4:	000d883a 	mov	r6,zero
  8080d8:	0140c284 	movi	r5,778
  8080dc:	2103a704 	addi	r4,r4,3740
  8080e0:	0809f780 	call	809f78 <__assert_func>

008080e4 <__ratio>:
  8080e4:	defff904 	addi	sp,sp,-28
  8080e8:	dc400315 	stw	r17,12(sp)
  8080ec:	2823883a 	mov	r17,r5
  8080f0:	d80b883a 	mov	r5,sp
  8080f4:	dfc00615 	stw	ra,24(sp)
  8080f8:	dcc00515 	stw	r19,20(sp)
  8080fc:	dc800415 	stw	r18,16(sp)
  808100:	2027883a 	mov	r19,r4
  808104:	dc000215 	stw	r16,8(sp)
  808108:	0807e7c0 	call	807e7c <__b2d>
  80810c:	d9400104 	addi	r5,sp,4
  808110:	8809883a 	mov	r4,r17
  808114:	1025883a 	mov	r18,r2
  808118:	1821883a 	mov	r16,r3
  80811c:	0807e7c0 	call	807e7c <__b2d>
  808120:	89400417 	ldw	r5,16(r17)
  808124:	99000417 	ldw	r4,16(r19)
  808128:	d9800117 	ldw	r6,4(sp)
  80812c:	180f883a 	mov	r7,r3
  808130:	2149c83a 	sub	r4,r4,r5
  808134:	d9400017 	ldw	r5,0(sp)
  808138:	2008917a 	slli	r4,r4,5
  80813c:	298bc83a 	sub	r5,r5,r6
  808140:	2149883a 	add	r4,r4,r5
  808144:	100d883a 	mov	r6,r2
  808148:	01000c0e 	bge	zero,r4,80817c <__ratio+0x98>
  80814c:	2008953a 	slli	r4,r4,20
  808150:	2421883a 	add	r16,r4,r16
  808154:	9009883a 	mov	r4,r18
  808158:	800b883a 	mov	r5,r16
  80815c:	080c4040 	call	80c404 <__divdf3>
  808160:	dfc00617 	ldw	ra,24(sp)
  808164:	dcc00517 	ldw	r19,20(sp)
  808168:	dc800417 	ldw	r18,16(sp)
  80816c:	dc400317 	ldw	r17,12(sp)
  808170:	dc000217 	ldw	r16,8(sp)
  808174:	dec00704 	addi	sp,sp,28
  808178:	f800283a 	ret
  80817c:	2008953a 	slli	r4,r4,20
  808180:	190fc83a 	sub	r7,r3,r4
  808184:	003ff306 	br	808154 <__ratio+0x70>

00808188 <_mprec_log10>:
  808188:	defffe04 	addi	sp,sp,-8
  80818c:	dc000015 	stw	r16,0(sp)
  808190:	dfc00115 	stw	ra,4(sp)
  808194:	20800608 	cmpgei	r2,r4,24
  808198:	2021883a 	mov	r16,r4
  80819c:	10000f26 	beq	r2,zero,8081dc <_mprec_log10+0x54>
  8081a0:	0009883a 	mov	r4,zero
  8081a4:	014ffc34 	movhi	r5,16368
  8081a8:	000d883a 	mov	r6,zero
  8081ac:	01d00934 	movhi	r7,16420
  8081b0:	080cf980 	call	80cf98 <__muldf3>
  8081b4:	843fffc4 	addi	r16,r16,-1
  8081b8:	1009883a 	mov	r4,r2
  8081bc:	180b883a 	mov	r5,r3
  8081c0:	803ff91e 	bne	r16,zero,8081a8 <_mprec_log10+0x20>
  8081c4:	2005883a 	mov	r2,r4
  8081c8:	2807883a 	mov	r3,r5
  8081cc:	dfc00117 	ldw	ra,4(sp)
  8081d0:	dc000017 	ldw	r16,0(sp)
  8081d4:	dec00204 	addi	sp,sp,8
  8081d8:	f800283a 	ret
  8081dc:	202090fa 	slli	r16,r4,3
  8081e0:	00802074 	movhi	r2,129
  8081e4:	1083ce04 	addi	r2,r2,3896
  8081e8:	1421883a 	add	r16,r2,r16
  8081ec:	81000017 	ldw	r4,0(r16)
  8081f0:	81400117 	ldw	r5,4(r16)
  8081f4:	003ff306 	br	8081c4 <_mprec_log10+0x3c>

008081f8 <__copybits>:
  8081f8:	297fffc4 	addi	r5,r5,-1
  8081fc:	280fd17a 	srai	r7,r5,5
  808200:	31400417 	ldw	r5,16(r6)
  808204:	30800504 	addi	r2,r6,20
  808208:	39c00044 	addi	r7,r7,1
  80820c:	280a90ba 	slli	r5,r5,2
  808210:	380e90ba 	slli	r7,r7,2
  808214:	114b883a 	add	r5,r2,r5
  808218:	21cf883a 	add	r7,r4,r7
  80821c:	11400c2e 	bgeu	r2,r5,808250 <__copybits+0x58>
  808220:	2007883a 	mov	r3,r4
  808224:	12000017 	ldw	r8,0(r2)
  808228:	10800104 	addi	r2,r2,4
  80822c:	18c00104 	addi	r3,r3,4
  808230:	1a3fff15 	stw	r8,-4(r3)
  808234:	117ffb36 	bltu	r2,r5,808224 <__copybits+0x2c>
  808238:	2985c83a 	sub	r2,r5,r6
  80823c:	10bffac4 	addi	r2,r2,-21
  808240:	1004d0ba 	srli	r2,r2,2
  808244:	10800044 	addi	r2,r2,1
  808248:	100490ba 	slli	r2,r2,2
  80824c:	2089883a 	add	r4,r4,r2
  808250:	21c0032e 	bgeu	r4,r7,808260 <__copybits+0x68>
  808254:	21000104 	addi	r4,r4,4
  808258:	203fff15 	stw	zero,-4(r4)
  80825c:	21fffd36 	bltu	r4,r7,808254 <__copybits+0x5c>
  808260:	f800283a 	ret

00808264 <__any_on>:
  808264:	20c00417 	ldw	r3,16(r4)
  808268:	280dd17a 	srai	r6,r5,5
  80826c:	21000504 	addi	r4,r4,20
  808270:	1980080e 	bge	r3,r6,808294 <__any_on+0x30>
  808274:	180490ba 	slli	r2,r3,2
  808278:	2085883a 	add	r2,r4,r2
  80827c:	20800f2e 	bgeu	r4,r2,8082bc <__any_on+0x58>
  808280:	10ffff17 	ldw	r3,-4(r2)
  808284:	10bfff04 	addi	r2,r2,-4
  808288:	183ffc26 	beq	r3,zero,80827c <__any_on+0x18>
  80828c:	00800044 	movi	r2,1
  808290:	f800283a 	ret
  808294:	300490ba 	slli	r2,r6,2
  808298:	2085883a 	add	r2,r4,r2
  80829c:	30fff70e 	bge	r6,r3,80827c <__any_on+0x18>
  8082a0:	294007cc 	andi	r5,r5,31
  8082a4:	283ff526 	beq	r5,zero,80827c <__any_on+0x18>
  8082a8:	11800017 	ldw	r6,0(r2)
  8082ac:	3146d83a 	srl	r3,r6,r5
  8082b0:	194a983a 	sll	r5,r3,r5
  8082b4:	317ff51e 	bne	r6,r5,80828c <__any_on+0x28>
  8082b8:	003ff006 	br	80827c <__any_on+0x18>
  8082bc:	0005883a 	mov	r2,zero
  8082c0:	f800283a 	ret

008082c4 <_realloc_r>:
  8082c4:	defff504 	addi	sp,sp,-44
  8082c8:	dc800315 	stw	r18,12(sp)
  8082cc:	dfc00a15 	stw	ra,40(sp)
  8082d0:	df000915 	stw	fp,36(sp)
  8082d4:	ddc00815 	stw	r23,32(sp)
  8082d8:	dd800715 	stw	r22,28(sp)
  8082dc:	dd400615 	stw	r21,24(sp)
  8082e0:	dd000515 	stw	r20,20(sp)
  8082e4:	dcc00415 	stw	r19,16(sp)
  8082e8:	dc400215 	stw	r17,8(sp)
  8082ec:	dc000115 	stw	r16,4(sp)
  8082f0:	3025883a 	mov	r18,r6
  8082f4:	28008b26 	beq	r5,zero,808524 <_realloc_r+0x260>
  8082f8:	2821883a 	mov	r16,r5
  8082fc:	2027883a 	mov	r19,r4
  808300:	944002c4 	addi	r17,r18,11
  808304:	080ea000 	call	80ea00 <__malloc_lock>
  808308:	888005f0 	cmpltui	r2,r17,23
  80830c:	1000521e 	bne	r2,zero,808458 <_realloc_r+0x194>
  808310:	017ffe04 	movi	r5,-8
  808314:	8962703a 	and	r17,r17,r5
  808318:	8807883a 	mov	r3,r17
  80831c:	88005116 	blt	r17,zero,808464 <_realloc_r+0x1a0>
  808320:	8c805036 	bltu	r17,r18,808464 <_realloc_r+0x1a0>
  808324:	80bfff17 	ldw	r2,-4(r16)
  808328:	017fff04 	movi	r5,-4
  80832c:	857ffe04 	addi	r21,r16,-8
  808330:	1168703a 	and	r20,r2,r5
  808334:	ad2d883a 	add	r22,r21,r20
  808338:	a0c0390e 	bge	r20,r3,808420 <_realloc_r+0x15c>
  80833c:	07002074 	movhi	fp,129
  808340:	e705d104 	addi	fp,fp,5956
  808344:	e2000217 	ldw	r8,8(fp)
  808348:	b1000117 	ldw	r4,4(r22)
  80834c:	45808e26 	beq	r8,r22,808588 <_realloc_r+0x2c4>
  808350:	01bfff84 	movi	r6,-2
  808354:	218c703a 	and	r6,r4,r6
  808358:	b18d883a 	add	r6,r22,r6
  80835c:	31800117 	ldw	r6,4(r6)
  808360:	3180004c 	andi	r6,r6,1
  808364:	30004f1e 	bne	r6,zero,8084a4 <_realloc_r+0x1e0>
  808368:	2148703a 	and	r4,r4,r5
  80836c:	a10b883a 	add	r5,r20,r4
  808370:	28c0bf0e 	bge	r5,r3,808670 <_realloc_r+0x3ac>
  808374:	1080004c 	andi	r2,r2,1
  808378:	10004c1e 	bne	r2,zero,8084ac <_realloc_r+0x1e8>
  80837c:	81fffe17 	ldw	r7,-8(r16)
  808380:	00bfff04 	movi	r2,-4
  808384:	a9cfc83a 	sub	r7,r21,r7
  808388:	39400117 	ldw	r5,4(r7)
  80838c:	288a703a 	and	r5,r5,r2
  808390:	b0000426 	beq	r22,zero,8083a4 <_realloc_r+0xe0>
  808394:	a16f883a 	add	r23,r20,r5
  808398:	b92f883a 	add	r23,r23,r4
  80839c:	4580bf26 	beq	r8,r22,80869c <_realloc_r+0x3d8>
  8083a0:	b8c0930e 	bge	r23,r3,8085f0 <_realloc_r+0x32c>
  8083a4:	38004126 	beq	r7,zero,8084ac <_realloc_r+0x1e8>
  8083a8:	a16f883a 	add	r23,r20,r5
  8083ac:	b8c03f16 	blt	r23,r3,8084ac <_realloc_r+0x1e8>
  8083b0:	38800317 	ldw	r2,12(r7)
  8083b4:	38c00217 	ldw	r3,8(r7)
  8083b8:	a1bfff04 	addi	r6,r20,-4
  8083bc:	31400968 	cmpgeui	r5,r6,37
  8083c0:	18800315 	stw	r2,12(r3)
  8083c4:	10c00215 	stw	r3,8(r2)
  8083c8:	39000204 	addi	r4,r7,8
  8083cc:	3ded883a 	add	r22,r7,r23
  8083d0:	2800941e 	bne	r5,zero,808624 <_realloc_r+0x360>
  8083d4:	30800530 	cmpltui	r2,r6,20
  8083d8:	80c00017 	ldw	r3,0(r16)
  8083dc:	1000df1e 	bne	r2,zero,80875c <_realloc_r+0x498>
  8083e0:	38c00215 	stw	r3,8(r7)
  8083e4:	80c00117 	ldw	r3,4(r16)
  8083e8:	30800728 	cmpgeui	r2,r6,28
  8083ec:	38c00315 	stw	r3,12(r7)
  8083f0:	1000dc1e 	bne	r2,zero,808764 <_realloc_r+0x4a0>
  8083f4:	80c00217 	ldw	r3,8(r16)
  8083f8:	38800404 	addi	r2,r7,16
  8083fc:	84000204 	addi	r16,r16,8
  808400:	10c00015 	stw	r3,0(r2)
  808404:	80c00117 	ldw	r3,4(r16)
  808408:	b829883a 	mov	r20,r23
  80840c:	382b883a 	mov	r21,r7
  808410:	10c00115 	stw	r3,4(r2)
  808414:	80c00217 	ldw	r3,8(r16)
  808418:	2021883a 	mov	r16,r4
  80841c:	10c00215 	stw	r3,8(r2)
  808420:	a9800117 	ldw	r6,4(r21)
  808424:	a445c83a 	sub	r2,r20,r17
  808428:	10c00430 	cmpltui	r3,r2,16
  80842c:	3180004c 	andi	r6,r6,1
  808430:	18004926 	beq	r3,zero,808558 <_realloc_r+0x294>
  808434:	a18cb03a 	or	r6,r20,r6
  808438:	a9800115 	stw	r6,4(r21)
  80843c:	b0800117 	ldw	r2,4(r22)
  808440:	10800054 	ori	r2,r2,1
  808444:	b0800115 	stw	r2,4(r22)
  808448:	9809883a 	mov	r4,r19
  80844c:	080ea240 	call	80ea24 <__malloc_unlock>
  808450:	8025883a 	mov	r18,r16
  808454:	00000606 	br	808470 <_realloc_r+0x1ac>
  808458:	04400404 	movi	r17,16
  80845c:	00c00404 	movi	r3,16
  808460:	8cbfb02e 	bgeu	r17,r18,808324 <_realloc_r+0x60>
  808464:	00800304 	movi	r2,12
  808468:	98800015 	stw	r2,0(r19)
  80846c:	0025883a 	mov	r18,zero
  808470:	9005883a 	mov	r2,r18
  808474:	dfc00a17 	ldw	ra,40(sp)
  808478:	df000917 	ldw	fp,36(sp)
  80847c:	ddc00817 	ldw	r23,32(sp)
  808480:	dd800717 	ldw	r22,28(sp)
  808484:	dd400617 	ldw	r21,24(sp)
  808488:	dd000517 	ldw	r20,20(sp)
  80848c:	dcc00417 	ldw	r19,16(sp)
  808490:	dc800317 	ldw	r18,12(sp)
  808494:	dc400217 	ldw	r17,8(sp)
  808498:	dc000117 	ldw	r16,4(sp)
  80849c:	dec00b04 	addi	sp,sp,44
  8084a0:	f800283a 	ret
  8084a4:	1080004c 	andi	r2,r2,1
  8084a8:	10006c26 	beq	r2,zero,80865c <_realloc_r+0x398>
  8084ac:	900b883a 	mov	r5,r18
  8084b0:	9809883a 	mov	r4,r19
  8084b4:	08065bc0 	call	8065bc <_malloc_r>
  8084b8:	1025883a 	mov	r18,r2
  8084bc:	10001626 	beq	r2,zero,808518 <_realloc_r+0x254>
  8084c0:	80bfff17 	ldw	r2,-4(r16)
  8084c4:	013fff84 	movi	r4,-2
  8084c8:	90fffe04 	addi	r3,r18,-8
  8084cc:	1104703a 	and	r2,r2,r4
  8084d0:	a885883a 	add	r2,r21,r2
  8084d4:	10c05b26 	beq	r2,r3,808644 <_realloc_r+0x380>
  8084d8:	a1bfff04 	addi	r6,r20,-4
  8084dc:	30800968 	cmpgeui	r2,r6,37
  8084e0:	10006a1e 	bne	r2,zero,80868c <_realloc_r+0x3c8>
  8084e4:	30800530 	cmpltui	r2,r6,20
  8084e8:	81000017 	ldw	r4,0(r16)
  8084ec:	10003726 	beq	r2,zero,8085cc <_realloc_r+0x308>
  8084f0:	9005883a 	mov	r2,r18
  8084f4:	8007883a 	mov	r3,r16
  8084f8:	11000015 	stw	r4,0(r2)
  8084fc:	19000117 	ldw	r4,4(r3)
  808500:	11000115 	stw	r4,4(r2)
  808504:	18c00217 	ldw	r3,8(r3)
  808508:	10c00215 	stw	r3,8(r2)
  80850c:	800b883a 	mov	r5,r16
  808510:	9809883a 	mov	r4,r19
  808514:	0805abc0 	call	805abc <_free_r>
  808518:	9809883a 	mov	r4,r19
  80851c:	080ea240 	call	80ea24 <__malloc_unlock>
  808520:	003fd306 	br	808470 <_realloc_r+0x1ac>
  808524:	300b883a 	mov	r5,r6
  808528:	dfc00a17 	ldw	ra,40(sp)
  80852c:	df000917 	ldw	fp,36(sp)
  808530:	ddc00817 	ldw	r23,32(sp)
  808534:	dd800717 	ldw	r22,28(sp)
  808538:	dd400617 	ldw	r21,24(sp)
  80853c:	dd000517 	ldw	r20,20(sp)
  808540:	dcc00417 	ldw	r19,16(sp)
  808544:	dc800317 	ldw	r18,12(sp)
  808548:	dc400217 	ldw	r17,8(sp)
  80854c:	dc000117 	ldw	r16,4(sp)
  808550:	dec00b04 	addi	sp,sp,44
  808554:	08065bc1 	jmpi	8065bc <_malloc_r>
  808558:	344cb03a 	or	r6,r6,r17
  80855c:	a9800115 	stw	r6,4(r21)
  808560:	ac4b883a 	add	r5,r21,r17
  808564:	10800054 	ori	r2,r2,1
  808568:	28800115 	stw	r2,4(r5)
  80856c:	b0800117 	ldw	r2,4(r22)
  808570:	29400204 	addi	r5,r5,8
  808574:	9809883a 	mov	r4,r19
  808578:	10800054 	ori	r2,r2,1
  80857c:	b0800115 	stw	r2,4(r22)
  808580:	0805abc0 	call	805abc <_free_r>
  808584:	003fb006 	br	808448 <_realloc_r+0x184>
  808588:	2148703a 	and	r4,r4,r5
  80858c:	a10b883a 	add	r5,r20,r4
  808590:	89800404 	addi	r6,r17,16
  808594:	29bf7716 	blt	r5,r6,808374 <_realloc_r+0xb0>
  808598:	ac6b883a 	add	r21,r21,r17
  80859c:	2c45c83a 	sub	r2,r5,r17
  8085a0:	e5400215 	stw	r21,8(fp)
  8085a4:	10800054 	ori	r2,r2,1
  8085a8:	a8800115 	stw	r2,4(r21)
  8085ac:	80bfff17 	ldw	r2,-4(r16)
  8085b0:	9809883a 	mov	r4,r19
  8085b4:	8025883a 	mov	r18,r16
  8085b8:	1080004c 	andi	r2,r2,1
  8085bc:	1462b03a 	or	r17,r2,r17
  8085c0:	847fff15 	stw	r17,-4(r16)
  8085c4:	080ea240 	call	80ea24 <__malloc_unlock>
  8085c8:	003fa906 	br	808470 <_realloc_r+0x1ac>
  8085cc:	91000015 	stw	r4,0(r18)
  8085d0:	80c00117 	ldw	r3,4(r16)
  8085d4:	30800728 	cmpgeui	r2,r6,28
  8085d8:	90c00115 	stw	r3,4(r18)
  8085dc:	1000551e 	bne	r2,zero,808734 <_realloc_r+0x470>
  8085e0:	81000217 	ldw	r4,8(r16)
  8085e4:	80c00204 	addi	r3,r16,8
  8085e8:	90800204 	addi	r2,r18,8
  8085ec:	003fc206 	br	8084f8 <_realloc_r+0x234>
  8085f0:	b0800317 	ldw	r2,12(r22)
  8085f4:	b0c00217 	ldw	r3,8(r22)
  8085f8:	a1bfff04 	addi	r6,r20,-4
  8085fc:	31400968 	cmpgeui	r5,r6,37
  808600:	18800315 	stw	r2,12(r3)
  808604:	10c00215 	stw	r3,8(r2)
  808608:	38c00217 	ldw	r3,8(r7)
  80860c:	38800317 	ldw	r2,12(r7)
  808610:	39000204 	addi	r4,r7,8
  808614:	3ded883a 	add	r22,r7,r23
  808618:	18800315 	stw	r2,12(r3)
  80861c:	10c00215 	stw	r3,8(r2)
  808620:	283f6c26 	beq	r5,zero,8083d4 <_realloc_r+0x110>
  808624:	800b883a 	mov	r5,r16
  808628:	d9c00015 	stw	r7,0(sp)
  80862c:	0806f700 	call	806f70 <memmove>
  808630:	d9c00017 	ldw	r7,0(sp)
  808634:	1021883a 	mov	r16,r2
  808638:	b829883a 	mov	r20,r23
  80863c:	382b883a 	mov	r21,r7
  808640:	003f7706 	br	808420 <_realloc_r+0x15c>
  808644:	90bfff17 	ldw	r2,-4(r18)
  808648:	00ffff04 	movi	r3,-4
  80864c:	10c4703a 	and	r2,r2,r3
  808650:	a0a9883a 	add	r20,r20,r2
  808654:	ad2d883a 	add	r22,r21,r20
  808658:	003f7106 	br	808420 <_realloc_r+0x15c>
  80865c:	81fffe17 	ldw	r7,-8(r16)
  808660:	a9cfc83a 	sub	r7,r21,r7
  808664:	39000117 	ldw	r4,4(r7)
  808668:	214a703a 	and	r5,r4,r5
  80866c:	003f4d06 	br	8083a4 <_realloc_r+0xe0>
  808670:	b0800317 	ldw	r2,12(r22)
  808674:	b0c00217 	ldw	r3,8(r22)
  808678:	2829883a 	mov	r20,r5
  80867c:	a96d883a 	add	r22,r21,r5
  808680:	18800315 	stw	r2,12(r3)
  808684:	10c00215 	stw	r3,8(r2)
  808688:	003f6506 	br	808420 <_realloc_r+0x15c>
  80868c:	800b883a 	mov	r5,r16
  808690:	9009883a 	mov	r4,r18
  808694:	0806f700 	call	806f70 <memmove>
  808698:	003f9c06 	br	80850c <_realloc_r+0x248>
  80869c:	88800404 	addi	r2,r17,16
  8086a0:	b8bf4016 	blt	r23,r2,8083a4 <_realloc_r+0xe0>
  8086a4:	38800317 	ldw	r2,12(r7)
  8086a8:	38c00217 	ldw	r3,8(r7)
  8086ac:	a1bfff04 	addi	r6,r20,-4
  8086b0:	31000968 	cmpgeui	r4,r6,37
  8086b4:	18800315 	stw	r2,12(r3)
  8086b8:	10c00215 	stw	r3,8(r2)
  8086bc:	3c800204 	addi	r18,r7,8
  8086c0:	20003b1e 	bne	r4,zero,8087b0 <_realloc_r+0x4ec>
  8086c4:	30800530 	cmpltui	r2,r6,20
  8086c8:	80c00017 	ldw	r3,0(r16)
  8086cc:	1000361e 	bne	r2,zero,8087a8 <_realloc_r+0x4e4>
  8086d0:	38c00215 	stw	r3,8(r7)
  8086d4:	80c00117 	ldw	r3,4(r16)
  8086d8:	30800728 	cmpgeui	r2,r6,28
  8086dc:	38c00315 	stw	r3,12(r7)
  8086e0:	1000401e 	bne	r2,zero,8087e4 <_realloc_r+0x520>
  8086e4:	80c00217 	ldw	r3,8(r16)
  8086e8:	38800404 	addi	r2,r7,16
  8086ec:	84000204 	addi	r16,r16,8
  8086f0:	10c00015 	stw	r3,0(r2)
  8086f4:	80c00117 	ldw	r3,4(r16)
  8086f8:	10c00115 	stw	r3,4(r2)
  8086fc:	80c00217 	ldw	r3,8(r16)
  808700:	10c00215 	stw	r3,8(r2)
  808704:	3c47883a 	add	r3,r7,r17
  808708:	bc45c83a 	sub	r2,r23,r17
  80870c:	e0c00215 	stw	r3,8(fp)
  808710:	10800054 	ori	r2,r2,1
  808714:	18800115 	stw	r2,4(r3)
  808718:	38800117 	ldw	r2,4(r7)
  80871c:	9809883a 	mov	r4,r19
  808720:	1080004c 	andi	r2,r2,1
  808724:	1462b03a 	or	r17,r2,r17
  808728:	3c400115 	stw	r17,4(r7)
  80872c:	080ea240 	call	80ea24 <__malloc_unlock>
  808730:	003f4f06 	br	808470 <_realloc_r+0x1ac>
  808734:	80800217 	ldw	r2,8(r16)
  808738:	31800920 	cmpeqi	r6,r6,36
  80873c:	90800215 	stw	r2,8(r18)
  808740:	80800317 	ldw	r2,12(r16)
  808744:	90800315 	stw	r2,12(r18)
  808748:	81000417 	ldw	r4,16(r16)
  80874c:	30000f1e 	bne	r6,zero,80878c <_realloc_r+0x4c8>
  808750:	80c00404 	addi	r3,r16,16
  808754:	90800404 	addi	r2,r18,16
  808758:	003f6706 	br	8084f8 <_realloc_r+0x234>
  80875c:	2005883a 	mov	r2,r4
  808760:	003f2706 	br	808400 <_realloc_r+0x13c>
  808764:	80800217 	ldw	r2,8(r16)
  808768:	31800920 	cmpeqi	r6,r6,36
  80876c:	38800415 	stw	r2,16(r7)
  808770:	80800317 	ldw	r2,12(r16)
  808774:	38800515 	stw	r2,20(r7)
  808778:	80c00417 	ldw	r3,16(r16)
  80877c:	3000121e 	bne	r6,zero,8087c8 <_realloc_r+0x504>
  808780:	38800604 	addi	r2,r7,24
  808784:	84000404 	addi	r16,r16,16
  808788:	003f1d06 	br	808400 <_realloc_r+0x13c>
  80878c:	91000415 	stw	r4,16(r18)
  808790:	81000517 	ldw	r4,20(r16)
  808794:	80c00604 	addi	r3,r16,24
  808798:	90800604 	addi	r2,r18,24
  80879c:	91000515 	stw	r4,20(r18)
  8087a0:	81000617 	ldw	r4,24(r16)
  8087a4:	003f5406 	br	8084f8 <_realloc_r+0x234>
  8087a8:	9005883a 	mov	r2,r18
  8087ac:	003fd006 	br	8086f0 <_realloc_r+0x42c>
  8087b0:	800b883a 	mov	r5,r16
  8087b4:	9009883a 	mov	r4,r18
  8087b8:	d9c00015 	stw	r7,0(sp)
  8087bc:	0806f700 	call	806f70 <memmove>
  8087c0:	d9c00017 	ldw	r7,0(sp)
  8087c4:	003fcf06 	br	808704 <_realloc_r+0x440>
  8087c8:	84000604 	addi	r16,r16,24
  8087cc:	38c00615 	stw	r3,24(r7)
  8087d0:	80ffff17 	ldw	r3,-4(r16)
  8087d4:	38800804 	addi	r2,r7,32
  8087d8:	38c00715 	stw	r3,28(r7)
  8087dc:	80c00017 	ldw	r3,0(r16)
  8087e0:	003f0706 	br	808400 <_realloc_r+0x13c>
  8087e4:	80800217 	ldw	r2,8(r16)
  8087e8:	31800920 	cmpeqi	r6,r6,36
  8087ec:	38800415 	stw	r2,16(r7)
  8087f0:	80800317 	ldw	r2,12(r16)
  8087f4:	38800515 	stw	r2,20(r7)
  8087f8:	80c00417 	ldw	r3,16(r16)
  8087fc:	3000031e 	bne	r6,zero,80880c <_realloc_r+0x548>
  808800:	38800604 	addi	r2,r7,24
  808804:	84000404 	addi	r16,r16,16
  808808:	003fb906 	br	8086f0 <_realloc_r+0x42c>
  80880c:	84000604 	addi	r16,r16,24
  808810:	38c00615 	stw	r3,24(r7)
  808814:	80ffff17 	ldw	r3,-4(r16)
  808818:	38800804 	addi	r2,r7,32
  80881c:	38c00715 	stw	r3,28(r7)
  808820:	80c00017 	ldw	r3,0(r16)
  808824:	003fb206 	br	8086f0 <_realloc_r+0x42c>

00808828 <_sbrk_r>:
  808828:	defffe04 	addi	sp,sp,-8
  80882c:	dc000015 	stw	r16,0(sp)
  808830:	00802074 	movhi	r2,129
  808834:	2021883a 	mov	r16,r4
  808838:	2809883a 	mov	r4,r5
  80883c:	dfc00115 	stw	ra,4(sp)
  808840:	1012c115 	stw	zero,19204(r2)
  808844:	080ebfc0 	call	80ebfc <sbrk>
  808848:	10ffffd8 	cmpnei	r3,r2,-1
  80884c:	18000426 	beq	r3,zero,808860 <_sbrk_r+0x38>
  808850:	dfc00117 	ldw	ra,4(sp)
  808854:	dc000017 	ldw	r16,0(sp)
  808858:	dec00204 	addi	sp,sp,8
  80885c:	f800283a 	ret
  808860:	00c02074 	movhi	r3,129
  808864:	18d2c117 	ldw	r3,19204(r3)
  808868:	183ff926 	beq	r3,zero,808850 <_sbrk_r+0x28>
  80886c:	80c00015 	stw	r3,0(r16)
  808870:	dfc00117 	ldw	ra,4(sp)
  808874:	dc000017 	ldw	r16,0(sp)
  808878:	dec00204 	addi	sp,sp,8
  80887c:	f800283a 	ret

00808880 <__sread>:
  808880:	defffe04 	addi	sp,sp,-8
  808884:	dc000015 	stw	r16,0(sp)
  808888:	2821883a 	mov	r16,r5
  80888c:	2940038f 	ldh	r5,14(r5)
  808890:	dfc00115 	stw	ra,4(sp)
  808894:	080a6180 	call	80a618 <_read_r>
  808898:	10000716 	blt	r2,zero,8088b8 <__sread+0x38>
  80889c:	80c01417 	ldw	r3,80(r16)
  8088a0:	1887883a 	add	r3,r3,r2
  8088a4:	80c01415 	stw	r3,80(r16)
  8088a8:	dfc00117 	ldw	ra,4(sp)
  8088ac:	dc000017 	ldw	r16,0(sp)
  8088b0:	dec00204 	addi	sp,sp,8
  8088b4:	f800283a 	ret
  8088b8:	80c0030b 	ldhu	r3,12(r16)
  8088bc:	18fbffcc 	andi	r3,r3,61439
  8088c0:	80c0030d 	sth	r3,12(r16)
  8088c4:	dfc00117 	ldw	ra,4(sp)
  8088c8:	dc000017 	ldw	r16,0(sp)
  8088cc:	dec00204 	addi	sp,sp,8
  8088d0:	f800283a 	ret

008088d4 <__seofread>:
  8088d4:	0005883a 	mov	r2,zero
  8088d8:	f800283a 	ret

008088dc <__swrite>:
  8088dc:	2880030b 	ldhu	r2,12(r5)
  8088e0:	defffb04 	addi	sp,sp,-20
  8088e4:	dcc00315 	stw	r19,12(sp)
  8088e8:	dc800215 	stw	r18,8(sp)
  8088ec:	dc400115 	stw	r17,4(sp)
  8088f0:	dc000015 	stw	r16,0(sp)
  8088f4:	dfc00415 	stw	ra,16(sp)
  8088f8:	10c0400c 	andi	r3,r2,256
  8088fc:	2821883a 	mov	r16,r5
  808900:	2023883a 	mov	r17,r4
  808904:	2940038f 	ldh	r5,14(r5)
  808908:	3025883a 	mov	r18,r6
  80890c:	3827883a 	mov	r19,r7
  808910:	18000c1e 	bne	r3,zero,808944 <__swrite+0x68>
  808914:	10bbffcc 	andi	r2,r2,61439
  808918:	980f883a 	mov	r7,r19
  80891c:	900d883a 	mov	r6,r18
  808920:	8809883a 	mov	r4,r17
  808924:	8080030d 	sth	r2,12(r16)
  808928:	dfc00417 	ldw	ra,16(sp)
  80892c:	dcc00317 	ldw	r19,12(sp)
  808930:	dc800217 	ldw	r18,8(sp)
  808934:	dc400117 	ldw	r17,4(sp)
  808938:	dc000017 	ldw	r16,0(sp)
  80893c:	dec00504 	addi	sp,sp,20
  808940:	0809ebc1 	jmpi	809ebc <_write_r>
  808944:	01c00084 	movi	r7,2
  808948:	000d883a 	mov	r6,zero
  80894c:	080a5640 	call	80a564 <_lseek_r>
  808950:	8080030b 	ldhu	r2,12(r16)
  808954:	8140038f 	ldh	r5,14(r16)
  808958:	003fee06 	br	808914 <__swrite+0x38>

0080895c <__sseek>:
  80895c:	defffe04 	addi	sp,sp,-8
  808960:	dc000015 	stw	r16,0(sp)
  808964:	2821883a 	mov	r16,r5
  808968:	2940038f 	ldh	r5,14(r5)
  80896c:	dfc00115 	stw	ra,4(sp)
  808970:	080a5640 	call	80a564 <_lseek_r>
  808974:	10ffffd8 	cmpnei	r3,r2,-1
  808978:	18000826 	beq	r3,zero,80899c <__sseek+0x40>
  80897c:	80c0030b 	ldhu	r3,12(r16)
  808980:	80801415 	stw	r2,80(r16)
  808984:	18c40014 	ori	r3,r3,4096
  808988:	80c0030d 	sth	r3,12(r16)
  80898c:	dfc00117 	ldw	ra,4(sp)
  808990:	dc000017 	ldw	r16,0(sp)
  808994:	dec00204 	addi	sp,sp,8
  808998:	f800283a 	ret
  80899c:	80c0030b 	ldhu	r3,12(r16)
  8089a0:	18fbffcc 	andi	r3,r3,61439
  8089a4:	80c0030d 	sth	r3,12(r16)
  8089a8:	dfc00117 	ldw	ra,4(sp)
  8089ac:	dc000017 	ldw	r16,0(sp)
  8089b0:	dec00204 	addi	sp,sp,8
  8089b4:	f800283a 	ret

008089b8 <__sclose>:
  8089b8:	2940038f 	ldh	r5,14(r5)
  8089bc:	0809f201 	jmpi	809f20 <_close_r>

008089c0 <__sprint_r.part.0>:
  8089c0:	28801917 	ldw	r2,100(r5)
  8089c4:	defff604 	addi	sp,sp,-40
  8089c8:	dcc00315 	stw	r19,12(sp)
  8089cc:	dfc00915 	stw	ra,36(sp)
  8089d0:	df000815 	stw	fp,32(sp)
  8089d4:	ddc00715 	stw	r23,28(sp)
  8089d8:	dd800615 	stw	r22,24(sp)
  8089dc:	dd400515 	stw	r21,20(sp)
  8089e0:	dd000415 	stw	r20,16(sp)
  8089e4:	dc800215 	stw	r18,8(sp)
  8089e8:	dc400115 	stw	r17,4(sp)
  8089ec:	dc000015 	stw	r16,0(sp)
  8089f0:	1088000c 	andi	r2,r2,8192
  8089f4:	3027883a 	mov	r19,r6
  8089f8:	10002c26 	beq	r2,zero,808aac <__sprint_r.part.0+0xec>
  8089fc:	30800217 	ldw	r2,8(r6)
  808a00:	35000017 	ldw	r20,0(r6)
  808a04:	2821883a 	mov	r16,r5
  808a08:	2023883a 	mov	r17,r4
  808a0c:	05bfff04 	movi	r22,-4
  808a10:	10002426 	beq	r2,zero,808aa4 <__sprint_r.part.0+0xe4>
  808a14:	a5400117 	ldw	r21,4(r20)
  808a18:	a5c00017 	ldw	r23,0(r20)
  808a1c:	a824d0ba 	srli	r18,r21,2
  808a20:	90001b26 	beq	r18,zero,808a90 <__sprint_r.part.0+0xd0>
  808a24:	0039883a 	mov	fp,zero
  808a28:	00000206 	br	808a34 <__sprint_r.part.0+0x74>
  808a2c:	bdc00104 	addi	r23,r23,4
  808a30:	97001626 	beq	r18,fp,808a8c <__sprint_r.part.0+0xcc>
  808a34:	b9400017 	ldw	r5,0(r23)
  808a38:	800d883a 	mov	r6,r16
  808a3c:	8809883a 	mov	r4,r17
  808a40:	080a3780 	call	80a378 <_fputwc_r>
  808a44:	10bfffe0 	cmpeqi	r2,r2,-1
  808a48:	e7000044 	addi	fp,fp,1
  808a4c:	103ff726 	beq	r2,zero,808a2c <__sprint_r.part.0+0x6c>
  808a50:	00bfffc4 	movi	r2,-1
  808a54:	98000215 	stw	zero,8(r19)
  808a58:	98000115 	stw	zero,4(r19)
  808a5c:	dfc00917 	ldw	ra,36(sp)
  808a60:	df000817 	ldw	fp,32(sp)
  808a64:	ddc00717 	ldw	r23,28(sp)
  808a68:	dd800617 	ldw	r22,24(sp)
  808a6c:	dd400517 	ldw	r21,20(sp)
  808a70:	dd000417 	ldw	r20,16(sp)
  808a74:	dcc00317 	ldw	r19,12(sp)
  808a78:	dc800217 	ldw	r18,8(sp)
  808a7c:	dc400117 	ldw	r17,4(sp)
  808a80:	dc000017 	ldw	r16,0(sp)
  808a84:	dec00a04 	addi	sp,sp,40
  808a88:	f800283a 	ret
  808a8c:	98800217 	ldw	r2,8(r19)
  808a90:	adaa703a 	and	r21,r21,r22
  808a94:	1545c83a 	sub	r2,r2,r21
  808a98:	98800215 	stw	r2,8(r19)
  808a9c:	a5000204 	addi	r20,r20,8
  808aa0:	103fdc1e 	bne	r2,zero,808a14 <__sprint_r.part.0+0x54>
  808aa4:	0005883a 	mov	r2,zero
  808aa8:	003fea06 	br	808a54 <__sprint_r.part.0+0x94>
  808aac:	0805db80 	call	805db8 <__sfvwrite_r>
  808ab0:	003fe806 	br	808a54 <__sprint_r.part.0+0x94>

00808ab4 <__sprint_r>:
  808ab4:	30c00217 	ldw	r3,8(r6)
  808ab8:	18000126 	beq	r3,zero,808ac0 <__sprint_r+0xc>
  808abc:	08089c01 	jmpi	8089c0 <__sprint_r.part.0>
  808ac0:	30000115 	stw	zero,4(r6)
  808ac4:	0005883a 	mov	r2,zero
  808ac8:	f800283a 	ret

00808acc <___vfiprintf_internal_r>:
  808acc:	deffcf04 	addi	sp,sp,-196
  808ad0:	dd802d15 	stw	r22,180(sp)
  808ad4:	dd402c15 	stw	r21,176(sp)
  808ad8:	dd002b15 	stw	r20,172(sp)
  808adc:	dfc03015 	stw	ra,192(sp)
  808ae0:	df002f15 	stw	fp,188(sp)
  808ae4:	ddc02e15 	stw	r23,184(sp)
  808ae8:	dcc02a15 	stw	r19,168(sp)
  808aec:	dc802915 	stw	r18,164(sp)
  808af0:	dc402815 	stw	r17,160(sp)
  808af4:	dc002715 	stw	r16,156(sp)
  808af8:	d9c00415 	stw	r7,16(sp)
  808afc:	202d883a 	mov	r22,r4
  808b00:	282b883a 	mov	r21,r5
  808b04:	3029883a 	mov	r20,r6
  808b08:	20000226 	beq	r4,zero,808b14 <___vfiprintf_internal_r+0x48>
  808b0c:	20800e17 	ldw	r2,56(r4)
  808b10:	1001b426 	beq	r2,zero,8091e4 <___vfiprintf_internal_r+0x718>
  808b14:	a880030b 	ldhu	r2,12(r21)
  808b18:	10c8000c 	andi	r3,r2,8192
  808b1c:	1800061e 	bne	r3,zero,808b38 <___vfiprintf_internal_r+0x6c>
  808b20:	a8c01917 	ldw	r3,100(r21)
  808b24:	0137ffc4 	movi	r4,-8193
  808b28:	10880014 	ori	r2,r2,8192
  808b2c:	1906703a 	and	r3,r3,r4
  808b30:	a880030d 	sth	r2,12(r21)
  808b34:	a8c01915 	stw	r3,100(r21)
  808b38:	10c0020c 	andi	r3,r2,8
  808b3c:	18010826 	beq	r3,zero,808f60 <___vfiprintf_internal_r+0x494>
  808b40:	a8c00417 	ldw	r3,16(r21)
  808b44:	18010626 	beq	r3,zero,808f60 <___vfiprintf_internal_r+0x494>
  808b48:	1080068c 	andi	r2,r2,26
  808b4c:	10800298 	cmpnei	r2,r2,10
  808b50:	10010b26 	beq	r2,zero,808f80 <___vfiprintf_internal_r+0x4b4>
  808b54:	dc801704 	addi	r18,sp,92
  808b58:	dc800a15 	stw	r18,40(sp)
  808b5c:	d8000c15 	stw	zero,48(sp)
  808b60:	d8000b15 	stw	zero,44(sp)
  808b64:	9021883a 	mov	r16,r18
  808b68:	d8000515 	stw	zero,20(sp)
  808b6c:	d8000115 	stw	zero,4(sp)
  808b70:	a0c00007 	ldb	r3,0(r20)
  808b74:	1800e826 	beq	r3,zero,808f18 <___vfiprintf_internal_r+0x44c>
  808b78:	a023883a 	mov	r17,r20
  808b7c:	00000306 	br	808b8c <___vfiprintf_internal_r+0xc0>
  808b80:	88c00047 	ldb	r3,1(r17)
  808b84:	8c400044 	addi	r17,r17,1
  808b88:	18012a26 	beq	r3,zero,809034 <___vfiprintf_internal_r+0x568>
  808b8c:	18c00958 	cmpnei	r3,r3,37
  808b90:	183ffb1e 	bne	r3,zero,808b80 <___vfiprintf_internal_r+0xb4>
  808b94:	8d27c83a 	sub	r19,r17,r20
  808b98:	8d01281e 	bne	r17,r20,80903c <___vfiprintf_internal_r+0x570>
  808b9c:	88800003 	ldbu	r2,0(r17)
  808ba0:	10803fcc 	andi	r2,r2,255
  808ba4:	1080201c 	xori	r2,r2,128
  808ba8:	10bfe004 	addi	r2,r2,-128
  808bac:	1000da26 	beq	r2,zero,808f18 <___vfiprintf_internal_r+0x44c>
  808bb0:	88800047 	ldb	r2,1(r17)
  808bb4:	8d000044 	addi	r20,r17,1
  808bb8:	d8000945 	stb	zero,37(sp)
  808bbc:	000b883a 	mov	r5,zero
  808bc0:	000d883a 	mov	r6,zero
  808bc4:	023fffc4 	movi	r8,-1
  808bc8:	0023883a 	mov	r17,zero
  808bcc:	001b883a 	mov	r13,zero
  808bd0:	a5000044 	addi	r20,r20,1
  808bd4:	10fff804 	addi	r3,r2,-32
  808bd8:	19001668 	cmpgeui	r4,r3,89
  808bdc:	20006c1e 	bne	r4,zero,808d90 <___vfiprintf_internal_r+0x2c4>
  808be0:	180690ba 	slli	r3,r3,2
  808be4:	01002074 	movhi	r4,129
  808be8:	1909883a 	add	r4,r3,r4
  808bec:	20e2fd17 	ldw	r3,-29708(r4)
  808bf0:	1800683a 	jmp	r3
  808bf4:	008094f4 	movhi	r2,595
  808bf8:	00808d90 	cmplti	r2,zero,566
  808bfc:	00808d90 	cmplti	r2,zero,566
  808c00:	008094e8 	cmpgeui	r2,zero,595
  808c04:	00808d90 	cmplti	r2,zero,566
  808c08:	00808d90 	cmplti	r2,zero,566
  808c0c:	00808d90 	cmplti	r2,zero,566
  808c10:	00808d90 	cmplti	r2,zero,566
  808c14:	00808d90 	cmplti	r2,zero,566
  808c18:	00808d90 	cmplti	r2,zero,566
  808c1c:	008094c0 	call	8094c <__alt_mem_sdram-0x77f6b4>
  808c20:	008094b0 	cmpltui	r2,zero,594
  808c24:	00808d90 	cmplti	r2,zero,566
  808c28:	00809498 	cmpnei	r2,zero,594
  808c2c:	0080944c 	andi	r2,zero,593
  808c30:	00808d90 	cmplti	r2,zero,566
  808c34:	00809440 	call	80944 <__alt_mem_sdram-0x77f6bc>
  808c38:	00808d58 	cmpnei	r2,zero,565
  808c3c:	00808d58 	cmpnei	r2,zero,565
  808c40:	00808d58 	cmpnei	r2,zero,565
  808c44:	00808d58 	cmpnei	r2,zero,565
  808c48:	00808d58 	cmpnei	r2,zero,565
  808c4c:	00808d58 	cmpnei	r2,zero,565
  808c50:	00808d58 	cmpnei	r2,zero,565
  808c54:	00808d58 	cmpnei	r2,zero,565
  808c58:	00808d58 	cmpnei	r2,zero,565
  808c5c:	00808d90 	cmplti	r2,zero,566
  808c60:	00808d90 	cmplti	r2,zero,566
  808c64:	00808d90 	cmplti	r2,zero,566
  808c68:	00808d90 	cmplti	r2,zero,566
  808c6c:	00808d90 	cmplti	r2,zero,566
  808c70:	00808d90 	cmplti	r2,zero,566
  808c74:	00808d90 	cmplti	r2,zero,566
  808c78:	00808d90 	cmplti	r2,zero,566
  808c7c:	00808d90 	cmplti	r2,zero,566
  808c80:	00808d90 	cmplti	r2,zero,566
  808c84:	0080935c 	xori	r2,zero,589
  808c88:	00808d90 	cmplti	r2,zero,566
  808c8c:	00808d90 	cmplti	r2,zero,566
  808c90:	00808d90 	cmplti	r2,zero,566
  808c94:	00808d90 	cmplti	r2,zero,566
  808c98:	00808d90 	cmplti	r2,zero,566
  808c9c:	00808d90 	cmplti	r2,zero,566
  808ca0:	00808d90 	cmplti	r2,zero,566
  808ca4:	00808d90 	cmplti	r2,zero,566
  808ca8:	00808d90 	cmplti	r2,zero,566
  808cac:	00808d90 	cmplti	r2,zero,566
  808cb0:	00808fcc 	andi	r2,zero,575
  808cb4:	00808d90 	cmplti	r2,zero,566
  808cb8:	00808d90 	cmplti	r2,zero,566
  808cbc:	00808d90 	cmplti	r2,zero,566
  808cc0:	00808d90 	cmplti	r2,zero,566
  808cc4:	00808d90 	cmplti	r2,zero,566
  808cc8:	00808fa4 	muli	r2,zero,574
  808ccc:	00808d90 	cmplti	r2,zero,566
  808cd0:	00808d90 	cmplti	r2,zero,566
  808cd4:	00809314 	movui	r2,588
  808cd8:	00808d90 	cmplti	r2,zero,566
  808cdc:	00808d90 	cmplti	r2,zero,566
  808ce0:	00808d90 	cmplti	r2,zero,566
  808ce4:	00808d90 	cmplti	r2,zero,566
  808ce8:	00808d90 	cmplti	r2,zero,566
  808cec:	00808d90 	cmplti	r2,zero,566
  808cf0:	00808d90 	cmplti	r2,zero,566
  808cf4:	00808d90 	cmplti	r2,zero,566
  808cf8:	00808d90 	cmplti	r2,zero,566
  808cfc:	00808d90 	cmplti	r2,zero,566
  808d00:	008092ec 	andhi	r2,zero,587
  808d04:	008091ec 	andhi	r2,zero,583
  808d08:	00808d90 	cmplti	r2,zero,566
  808d0c:	00808d90 	cmplti	r2,zero,566
  808d10:	00808d90 	cmplti	r2,zero,566
  808d14:	00809290 	cmplti	r2,zero,586
  808d18:	008091ec 	andhi	r2,zero,583
  808d1c:	00808d90 	cmplti	r2,zero,566
  808d20:	00808d90 	cmplti	r2,zero,566
  808d24:	008092d8 	cmpnei	r2,zero,587
  808d28:	00808d90 	cmplti	r2,zero,566
  808d2c:	0080929c 	xori	r2,zero,586
  808d30:	00808fd0 	cmplti	r2,zero,575
  808d34:	008095cc 	andi	r2,zero,599
  808d38:	008095c0 	call	8095c <__alt_mem_sdram-0x77f6a4>
  808d3c:	00808d90 	cmplti	r2,zero,566
  808d40:	00809568 	cmpgeui	r2,zero,597
  808d44:	00808d90 	cmplti	r2,zero,566
  808d48:	00808fa8 	cmpgeui	r2,zero,574
  808d4c:	00808d90 	cmplti	r2,zero,566
  808d50:	00808d90 	cmplti	r2,zero,566
  808d54:	00809520 	cmpeqi	r2,zero,596
  808d58:	0023883a 	mov	r17,zero
  808d5c:	113ff404 	addi	r4,r2,-48
  808d60:	880690ba 	slli	r3,r17,2
  808d64:	a0800007 	ldb	r2,0(r20)
  808d68:	a5000044 	addi	r20,r20,1
  808d6c:	1c63883a 	add	r17,r3,r17
  808d70:	8c63883a 	add	r17,r17,r17
  808d74:	2463883a 	add	r17,r4,r17
  808d78:	113ff404 	addi	r4,r2,-48
  808d7c:	20c002b0 	cmpltui	r3,r4,10
  808d80:	183ff71e 	bne	r3,zero,808d60 <___vfiprintf_internal_r+0x294>
  808d84:	10fff804 	addi	r3,r2,-32
  808d88:	19001668 	cmpgeui	r4,r3,89
  808d8c:	203f9426 	beq	r4,zero,808be0 <___vfiprintf_internal_r+0x114>
  808d90:	29403fcc 	andi	r5,r5,255
  808d94:	2803e31e 	bne	r5,zero,809d24 <___vfiprintf_internal_r+0x1258>
  808d98:	10005f26 	beq	r2,zero,808f18 <___vfiprintf_internal_r+0x44c>
  808d9c:	d8800d05 	stb	r2,52(sp)
  808da0:	d8000945 	stb	zero,37(sp)
  808da4:	05c00044 	movi	r23,1
  808da8:	07000044 	movi	fp,1
  808dac:	dcc00d04 	addi	r19,sp,52
  808db0:	db400015 	stw	r13,0(sp)
  808db4:	0011883a 	mov	r8,zero
  808db8:	d8800017 	ldw	r2,0(sp)
  808dbc:	1380008c 	andi	r14,r2,2
  808dc0:	70000126 	beq	r14,zero,808dc8 <___vfiprintf_internal_r+0x2fc>
  808dc4:	bdc00084 	addi	r23,r23,2
  808dc8:	d8800017 	ldw	r2,0(sp)
  808dcc:	d9000b17 	ldw	r4,44(sp)
  808dd0:	1340210c 	andi	r13,r2,132
  808dd4:	21800044 	addi	r6,r4,1
  808dd8:	d8800c17 	ldw	r2,48(sp)
  808ddc:	300b883a 	mov	r5,r6
  808de0:	6800021e 	bne	r13,zero,808dec <___vfiprintf_internal_r+0x320>
  808de4:	8dc7c83a 	sub	r3,r17,r23
  808de8:	00c2d716 	blt	zero,r3,809948 <___vfiprintf_internal_r+0xe7c>
  808dec:	d8c00947 	ldb	r3,37(sp)
  808df0:	81800204 	addi	r6,r16,8
  808df4:	18000d26 	beq	r3,zero,808e2c <___vfiprintf_internal_r+0x360>
  808df8:	d8c00944 	addi	r3,sp,37
  808dfc:	10800044 	addi	r2,r2,1
  808e00:	80c00015 	stw	r3,0(r16)
  808e04:	00c00044 	movi	r3,1
  808e08:	80c00115 	stw	r3,4(r16)
  808e0c:	d8800c15 	stw	r2,48(sp)
  808e10:	d9400b15 	stw	r5,44(sp)
  808e14:	28c00208 	cmpgei	r3,r5,8
  808e18:	1802ac1e 	bne	r3,zero,8098cc <___vfiprintf_internal_r+0xe00>
  808e1c:	2809883a 	mov	r4,r5
  808e20:	3021883a 	mov	r16,r6
  808e24:	29400044 	addi	r5,r5,1
  808e28:	31800204 	addi	r6,r6,8
  808e2c:	70001826 	beq	r14,zero,808e90 <___vfiprintf_internal_r+0x3c4>
  808e30:	d8c00984 	addi	r3,sp,38
  808e34:	10800084 	addi	r2,r2,2
  808e38:	80c00015 	stw	r3,0(r16)
  808e3c:	00c00084 	movi	r3,2
  808e40:	80c00115 	stw	r3,4(r16)
  808e44:	d8800c15 	stw	r2,48(sp)
  808e48:	d9400b15 	stw	r5,44(sp)
  808e4c:	28c00208 	cmpgei	r3,r5,8
  808e50:	1802b626 	beq	r3,zero,80992c <___vfiprintf_internal_r+0xe60>
  808e54:	10031226 	beq	r2,zero,809aa0 <___vfiprintf_internal_r+0xfd4>
  808e58:	d9800a04 	addi	r6,sp,40
  808e5c:	a80b883a 	mov	r5,r21
  808e60:	b009883a 	mov	r4,r22
  808e64:	da000315 	stw	r8,12(sp)
  808e68:	db400215 	stw	r13,8(sp)
  808e6c:	08089c00 	call	8089c0 <__sprint_r.part.0>
  808e70:	10002b1e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  808e74:	d9000b17 	ldw	r4,44(sp)
  808e78:	d8800c17 	ldw	r2,48(sp)
  808e7c:	da000317 	ldw	r8,12(sp)
  808e80:	db400217 	ldw	r13,8(sp)
  808e84:	d9801904 	addi	r6,sp,100
  808e88:	21400044 	addi	r5,r4,1
  808e8c:	9021883a 	mov	r16,r18
  808e90:	6b402018 	cmpnei	r13,r13,128
  808e94:	68020c26 	beq	r13,zero,8096c8 <___vfiprintf_internal_r+0xbfc>
  808e98:	4711c83a 	sub	r8,r8,fp
  808e9c:	02024b16 	blt	zero,r8,8097cc <___vfiprintf_internal_r+0xd00>
  808ea0:	e085883a 	add	r2,fp,r2
  808ea4:	d9400b15 	stw	r5,44(sp)
  808ea8:	84c00015 	stw	r19,0(r16)
  808eac:	87000115 	stw	fp,4(r16)
  808eb0:	d8800c15 	stw	r2,48(sp)
  808eb4:	29400210 	cmplti	r5,r5,8
  808eb8:	2800081e 	bne	r5,zero,808edc <___vfiprintf_internal_r+0x410>
  808ebc:	10008f26 	beq	r2,zero,8090fc <___vfiprintf_internal_r+0x630>
  808ec0:	d9800a04 	addi	r6,sp,40
  808ec4:	a80b883a 	mov	r5,r21
  808ec8:	b009883a 	mov	r4,r22
  808ecc:	08089c00 	call	8089c0 <__sprint_r.part.0>
  808ed0:	1000131e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  808ed4:	d8800c17 	ldw	r2,48(sp)
  808ed8:	900d883a 	mov	r6,r18
  808edc:	d8c00017 	ldw	r3,0(sp)
  808ee0:	1cc0010c 	andi	r19,r3,4
  808ee4:	98000226 	beq	r19,zero,808ef0 <___vfiprintf_internal_r+0x424>
  808ee8:	8de1c83a 	sub	r16,r17,r23
  808eec:	04008a16 	blt	zero,r16,809118 <___vfiprintf_internal_r+0x64c>
  808ef0:	8dc0010e 	bge	r17,r23,808ef8 <___vfiprintf_internal_r+0x42c>
  808ef4:	b823883a 	mov	r17,r23
  808ef8:	d8c00117 	ldw	r3,4(sp)
  808efc:	1c47883a 	add	r3,r3,r17
  808f00:	d8c00115 	stw	r3,4(sp)
  808f04:	1002671e 	bne	r2,zero,8098a4 <___vfiprintf_internal_r+0xdd8>
  808f08:	a0c00007 	ldb	r3,0(r20)
  808f0c:	d8000b15 	stw	zero,44(sp)
  808f10:	9021883a 	mov	r16,r18
  808f14:	183f181e 	bne	r3,zero,808b78 <___vfiprintf_internal_r+0xac>
  808f18:	d8800c17 	ldw	r2,48(sp)
  808f1c:	1003831e 	bne	r2,zero,809d2c <___vfiprintf_internal_r+0x1260>
  808f20:	a880030b 	ldhu	r2,12(r21)
  808f24:	1080100c 	andi	r2,r2,64
  808f28:	10039e1e 	bne	r2,zero,809da4 <___vfiprintf_internal_r+0x12d8>
  808f2c:	d8800117 	ldw	r2,4(sp)
  808f30:	dfc03017 	ldw	ra,192(sp)
  808f34:	df002f17 	ldw	fp,188(sp)
  808f38:	ddc02e17 	ldw	r23,184(sp)
  808f3c:	dd802d17 	ldw	r22,180(sp)
  808f40:	dd402c17 	ldw	r21,176(sp)
  808f44:	dd002b17 	ldw	r20,172(sp)
  808f48:	dcc02a17 	ldw	r19,168(sp)
  808f4c:	dc802917 	ldw	r18,164(sp)
  808f50:	dc402817 	ldw	r17,160(sp)
  808f54:	dc002717 	ldw	r16,156(sp)
  808f58:	dec03104 	addi	sp,sp,196
  808f5c:	f800283a 	ret
  808f60:	a80b883a 	mov	r5,r21
  808f64:	b009883a 	mov	r4,r22
  808f68:	08038d00 	call	8038d0 <__swsetup_r>
  808f6c:	10038d1e 	bne	r2,zero,809da4 <___vfiprintf_internal_r+0x12d8>
  808f70:	a880030b 	ldhu	r2,12(r21)
  808f74:	1080068c 	andi	r2,r2,26
  808f78:	10800298 	cmpnei	r2,r2,10
  808f7c:	103ef51e 	bne	r2,zero,808b54 <___vfiprintf_internal_r+0x88>
  808f80:	a880038f 	ldh	r2,14(r21)
  808f84:	103ef316 	blt	r2,zero,808b54 <___vfiprintf_internal_r+0x88>
  808f88:	d9c00417 	ldw	r7,16(sp)
  808f8c:	a00d883a 	mov	r6,r20
  808f90:	a80b883a 	mov	r5,r21
  808f94:	b009883a 	mov	r4,r22
  808f98:	0809dfc0 	call	809dfc <__sbprintf>
  808f9c:	d8800115 	stw	r2,4(sp)
  808fa0:	003fe206 	br	808f2c <___vfiprintf_internal_r+0x460>
  808fa4:	6b400414 	ori	r13,r13,16
  808fa8:	6880080c 	andi	r2,r13,32
  808fac:	10004726 	beq	r2,zero,8090cc <___vfiprintf_internal_r+0x600>
  808fb0:	d8c00417 	ldw	r3,16(sp)
  808fb4:	00800044 	movi	r2,1
  808fb8:	1dc00017 	ldw	r23,0(r3)
  808fbc:	1f000117 	ldw	fp,4(r3)
  808fc0:	18c00204 	addi	r3,r3,8
  808fc4:	d8c00415 	stw	r3,16(sp)
  808fc8:	00000906 	br	808ff0 <___vfiprintf_internal_r+0x524>
  808fcc:	6b400414 	ori	r13,r13,16
  808fd0:	6880080c 	andi	r2,r13,32
  808fd4:	10003126 	beq	r2,zero,80909c <___vfiprintf_internal_r+0x5d0>
  808fd8:	d8c00417 	ldw	r3,16(sp)
  808fdc:	0005883a 	mov	r2,zero
  808fe0:	1dc00017 	ldw	r23,0(r3)
  808fe4:	1f000117 	ldw	fp,4(r3)
  808fe8:	18c00204 	addi	r3,r3,8
  808fec:	d8c00415 	stw	r3,16(sp)
  808ff0:	d8000945 	stb	zero,37(sp)
  808ff4:	40ffffe0 	cmpeqi	r3,r8,-1
  808ff8:	001d883a 	mov	r14,zero
  808ffc:	1800f21e 	bne	r3,zero,8093c8 <___vfiprintf_internal_r+0x8fc>
  809000:	04ffdfc4 	movi	r19,-129
  809004:	6cc8703a 	and	r4,r13,r19
  809008:	bf06b03a 	or	r3,r23,fp
  80900c:	d9000015 	stw	r4,0(sp)
  809010:	18024b1e 	bne	r3,zero,809940 <___vfiprintf_internal_r+0xe74>
  809014:	4003091e 	bne	r8,zero,809c3c <___vfiprintf_internal_r+0x1170>
  809018:	1002a61e 	bne	r2,zero,809ab4 <___vfiprintf_internal_r+0xfe8>
  80901c:	6f00004c 	andi	fp,r13,1
  809020:	e002b826 	beq	fp,zero,809b04 <___vfiprintf_internal_r+0x1038>
  809024:	00800c04 	movi	r2,48
  809028:	d88016c5 	stb	r2,91(sp)
  80902c:	dcc016c4 	addi	r19,sp,91
  809030:	00008e06 	br	80926c <___vfiprintf_internal_r+0x7a0>
  809034:	8d27c83a 	sub	r19,r17,r20
  809038:	8d3fb726 	beq	r17,r20,808f18 <___vfiprintf_internal_r+0x44c>
  80903c:	d8c00c17 	ldw	r3,48(sp)
  809040:	d8800b17 	ldw	r2,44(sp)
  809044:	85000015 	stw	r20,0(r16)
  809048:	98c7883a 	add	r3,r19,r3
  80904c:	10800044 	addi	r2,r2,1
  809050:	d8800b15 	stw	r2,44(sp)
  809054:	84c00115 	stw	r19,4(r16)
  809058:	d8c00c15 	stw	r3,48(sp)
  80905c:	10800208 	cmpgei	r2,r2,8
  809060:	1000061e 	bne	r2,zero,80907c <___vfiprintf_internal_r+0x5b0>
  809064:	84000204 	addi	r16,r16,8
  809068:	d8c00117 	ldw	r3,4(sp)
  80906c:	88800003 	ldbu	r2,0(r17)
  809070:	1cc7883a 	add	r3,r3,r19
  809074:	d8c00115 	stw	r3,4(sp)
  809078:	003ec906 	br	808ba0 <___vfiprintf_internal_r+0xd4>
  80907c:	18027f26 	beq	r3,zero,809a7c <___vfiprintf_internal_r+0xfb0>
  809080:	d9800a04 	addi	r6,sp,40
  809084:	a80b883a 	mov	r5,r21
  809088:	b009883a 	mov	r4,r22
  80908c:	08089c00 	call	8089c0 <__sprint_r.part.0>
  809090:	103fa31e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  809094:	9021883a 	mov	r16,r18
  809098:	003ff306 	br	809068 <___vfiprintf_internal_r+0x59c>
  80909c:	d9000417 	ldw	r4,16(sp)
  8090a0:	6880040c 	andi	r2,r13,16
  8090a4:	20c00104 	addi	r3,r4,4
  8090a8:	1002a31e 	bne	r2,zero,809b38 <___vfiprintf_internal_r+0x106c>
  8090ac:	6880100c 	andi	r2,r13,64
  8090b0:	1002f626 	beq	r2,zero,809c8c <___vfiprintf_internal_r+0x11c0>
  8090b4:	d8800417 	ldw	r2,16(sp)
  8090b8:	0039883a 	mov	fp,zero
  8090bc:	d8c00415 	stw	r3,16(sp)
  8090c0:	15c0000b 	ldhu	r23,0(r2)
  8090c4:	0005883a 	mov	r2,zero
  8090c8:	003fc906 	br	808ff0 <___vfiprintf_internal_r+0x524>
  8090cc:	d9000417 	ldw	r4,16(sp)
  8090d0:	6880040c 	andi	r2,r13,16
  8090d4:	20c00104 	addi	r3,r4,4
  8090d8:	1002ab1e 	bne	r2,zero,809b88 <___vfiprintf_internal_r+0x10bc>
  8090dc:	6880100c 	andi	r2,r13,64
  8090e0:	1002f026 	beq	r2,zero,809ca4 <___vfiprintf_internal_r+0x11d8>
  8090e4:	d8800417 	ldw	r2,16(sp)
  8090e8:	0039883a 	mov	fp,zero
  8090ec:	d8c00415 	stw	r3,16(sp)
  8090f0:	15c0000b 	ldhu	r23,0(r2)
  8090f4:	00800044 	movi	r2,1
  8090f8:	003fbd06 	br	808ff0 <___vfiprintf_internal_r+0x524>
  8090fc:	d8c00017 	ldw	r3,0(sp)
  809100:	d8000b15 	stw	zero,44(sp)
  809104:	1cc0010c 	andi	r19,r3,4
  809108:	98024a26 	beq	r19,zero,809a34 <___vfiprintf_internal_r+0xf68>
  80910c:	8de1c83a 	sub	r16,r17,r23
  809110:	0402480e 	bge	zero,r16,809a34 <___vfiprintf_internal_r+0xf68>
  809114:	900d883a 	mov	r6,r18
  809118:	80c00450 	cmplti	r3,r16,17
  80911c:	d9000b17 	ldw	r4,44(sp)
  809120:	01c02074 	movhi	r7,129
  809124:	1803171e 	bne	r3,zero,809d84 <___vfiprintf_internal_r+0x12b8>
  809128:	39c40404 	addi	r7,r7,4112
  80912c:	04c00404 	movi	r19,16
  809130:	00000606 	br	80914c <___vfiprintf_internal_r+0x680>
  809134:	21400084 	addi	r5,r4,2
  809138:	31800204 	addi	r6,r6,8
  80913c:	1809883a 	mov	r4,r3
  809140:	843ffc04 	addi	r16,r16,-16
  809144:	80c00448 	cmpgei	r3,r16,17
  809148:	18001726 	beq	r3,zero,8091a8 <___vfiprintf_internal_r+0x6dc>
  80914c:	20c00044 	addi	r3,r4,1
  809150:	10800404 	addi	r2,r2,16
  809154:	31c00015 	stw	r7,0(r6)
  809158:	34c00115 	stw	r19,4(r6)
  80915c:	d8800c15 	stw	r2,48(sp)
  809160:	d8c00b15 	stw	r3,44(sp)
  809164:	19400208 	cmpgei	r5,r3,8
  809168:	283ff226 	beq	r5,zero,809134 <___vfiprintf_internal_r+0x668>
  80916c:	d9800a04 	addi	r6,sp,40
  809170:	a80b883a 	mov	r5,r21
  809174:	b009883a 	mov	r4,r22
  809178:	10014f26 	beq	r2,zero,8096b8 <___vfiprintf_internal_r+0xbec>
  80917c:	d9c00015 	stw	r7,0(sp)
  809180:	08089c00 	call	8089c0 <__sprint_r.part.0>
  809184:	103f661e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  809188:	d9000b17 	ldw	r4,44(sp)
  80918c:	843ffc04 	addi	r16,r16,-16
  809190:	80c00448 	cmpgei	r3,r16,17
  809194:	d8800c17 	ldw	r2,48(sp)
  809198:	d9c00017 	ldw	r7,0(sp)
  80919c:	900d883a 	mov	r6,r18
  8091a0:	21400044 	addi	r5,r4,1
  8091a4:	183fe91e 	bne	r3,zero,80914c <___vfiprintf_internal_r+0x680>
  8091a8:	1405883a 	add	r2,r2,r16
  8091ac:	d9400b15 	stw	r5,44(sp)
  8091b0:	31c00015 	stw	r7,0(r6)
  8091b4:	34000115 	stw	r16,4(r6)
  8091b8:	d8800c15 	stw	r2,48(sp)
  8091bc:	29400210 	cmplti	r5,r5,8
  8091c0:	283f4b1e 	bne	r5,zero,808ef0 <___vfiprintf_internal_r+0x424>
  8091c4:	10021b26 	beq	r2,zero,809a34 <___vfiprintf_internal_r+0xf68>
  8091c8:	d9800a04 	addi	r6,sp,40
  8091cc:	a80b883a 	mov	r5,r21
  8091d0:	b009883a 	mov	r4,r22
  8091d4:	08089c00 	call	8089c0 <__sprint_r.part.0>
  8091d8:	103f511e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  8091dc:	d8800c17 	ldw	r2,48(sp)
  8091e0:	003f4306 	br	808ef0 <___vfiprintf_internal_r+0x424>
  8091e4:	08059580 	call	805958 <__sinit>
  8091e8:	003e4a06 	br	808b14 <___vfiprintf_internal_r+0x48>
  8091ec:	29403fcc 	andi	r5,r5,255
  8091f0:	2802e01e 	bne	r5,zero,809d74 <___vfiprintf_internal_r+0x12a8>
  8091f4:	6880080c 	andi	r2,r13,32
  8091f8:	10005d26 	beq	r2,zero,809370 <___vfiprintf_internal_r+0x8a4>
  8091fc:	d8c00417 	ldw	r3,16(sp)
  809200:	18800117 	ldw	r2,4(r3)
  809204:	1dc00017 	ldw	r23,0(r3)
  809208:	18c00204 	addi	r3,r3,8
  80920c:	d8c00415 	stw	r3,16(sp)
  809210:	1039883a 	mov	fp,r2
  809214:	10006216 	blt	r2,zero,8093a0 <___vfiprintf_internal_r+0x8d4>
  809218:	40bfffd8 	cmpnei	r2,r8,-1
  80921c:	10000a26 	beq	r2,zero,809248 <___vfiprintf_internal_r+0x77c>
  809220:	00ffdfc4 	movi	r3,-129
  809224:	bf04b03a 	or	r2,r23,fp
  809228:	db800943 	ldbu	r14,37(sp)
  80922c:	68da703a 	and	r13,r13,r3
  809230:	1000061e 	bne	r2,zero,80924c <___vfiprintf_internal_r+0x780>
  809234:	4000081e 	bne	r8,zero,809258 <___vfiprintf_internal_r+0x78c>
  809238:	0039883a 	mov	fp,zero
  80923c:	db400015 	stw	r13,0(sp)
  809240:	9027883a 	mov	r19,r18
  809244:	00000906 	br	80926c <___vfiprintf_internal_r+0x7a0>
  809248:	db800943 	ldbu	r14,37(sp)
  80924c:	e000ee1e 	bne	fp,zero,809608 <___vfiprintf_internal_r+0xb3c>
  809250:	b88002a8 	cmpgeui	r2,r23,10
  809254:	1000ec1e 	bne	r2,zero,809608 <___vfiprintf_internal_r+0xb3c>
  809258:	bdc00c04 	addi	r23,r23,48
  80925c:	ddc016c5 	stb	r23,91(sp)
  809260:	db400015 	stw	r13,0(sp)
  809264:	07000044 	movi	fp,1
  809268:	dcc016c4 	addi	r19,sp,91
  80926c:	402f883a 	mov	r23,r8
  809270:	4700010e 	bge	r8,fp,809278 <___vfiprintf_internal_r+0x7ac>
  809274:	e02f883a 	mov	r23,fp
  809278:	73803fcc 	andi	r14,r14,255
  80927c:	7380201c 	xori	r14,r14,128
  809280:	73bfe004 	addi	r14,r14,-128
  809284:	703ecc26 	beq	r14,zero,808db8 <___vfiprintf_internal_r+0x2ec>
  809288:	bdc00044 	addi	r23,r23,1
  80928c:	003eca06 	br	808db8 <___vfiprintf_internal_r+0x2ec>
  809290:	a0800007 	ldb	r2,0(r20)
  809294:	6b401014 	ori	r13,r13,64
  809298:	003e4d06 	br	808bd0 <___vfiprintf_internal_r+0x104>
  80929c:	29403fcc 	andi	r5,r5,255
  8092a0:	2802b21e 	bne	r5,zero,809d6c <___vfiprintf_internal_r+0x12a0>
  8092a4:	d9000417 	ldw	r4,16(sp)
  8092a8:	6880080c 	andi	r2,r13,32
  8092ac:	20c00017 	ldw	r3,0(r4)
  8092b0:	21000104 	addi	r4,r4,4
  8092b4:	1002251e 	bne	r2,zero,809b4c <___vfiprintf_internal_r+0x1080>
  8092b8:	6880040c 	andi	r2,r13,16
  8092bc:	1002531e 	bne	r2,zero,809c0c <___vfiprintf_internal_r+0x1140>
  8092c0:	6b40100c 	andi	r13,r13,64
  8092c4:	68025126 	beq	r13,zero,809c0c <___vfiprintf_internal_r+0x1140>
  8092c8:	d8800117 	ldw	r2,4(sp)
  8092cc:	d9000415 	stw	r4,16(sp)
  8092d0:	1880000d 	sth	r2,0(r3)
  8092d4:	003e2606 	br	808b70 <___vfiprintf_internal_r+0xa4>
  8092d8:	a0800007 	ldb	r2,0(r20)
  8092dc:	10c01b18 	cmpnei	r3,r2,108
  8092e0:	18025a26 	beq	r3,zero,809c4c <___vfiprintf_internal_r+0x1180>
  8092e4:	6b400414 	ori	r13,r13,16
  8092e8:	003e3906 	br	808bd0 <___vfiprintf_internal_r+0x104>
  8092ec:	d8c00417 	ldw	r3,16(sp)
  8092f0:	d8000945 	stb	zero,37(sp)
  8092f4:	05c00044 	movi	r23,1
  8092f8:	18800017 	ldw	r2,0(r3)
  8092fc:	18c00104 	addi	r3,r3,4
  809300:	d8c00415 	stw	r3,16(sp)
  809304:	d8800d05 	stb	r2,52(sp)
  809308:	07000044 	movi	fp,1
  80930c:	dcc00d04 	addi	r19,sp,52
  809310:	003ea706 	br	808db0 <___vfiprintf_internal_r+0x2e4>
  809314:	29403fcc 	andi	r5,r5,255
  809318:	2802981e 	bne	r5,zero,809d7c <___vfiprintf_internal_r+0x12b0>
  80931c:	00c02074 	movhi	r3,129
  809320:	18c37904 	addi	r3,r3,3556
  809324:	d8c00515 	stw	r3,20(sp)
  809328:	68c0080c 	andi	r3,r13,32
  80932c:	18008326 	beq	r3,zero,80953c <___vfiprintf_internal_r+0xa70>
  809330:	d8c00417 	ldw	r3,16(sp)
  809334:	1dc00017 	ldw	r23,0(r3)
  809338:	1f000117 	ldw	fp,4(r3)
  80933c:	18c00204 	addi	r3,r3,8
  809340:	d8c00415 	stw	r3,16(sp)
  809344:	68c0004c 	andi	r3,r13,1
  809348:	18000226 	beq	r3,zero,809354 <___vfiprintf_internal_r+0x888>
  80934c:	bf06b03a 	or	r3,r23,fp
  809350:	1801f31e 	bne	r3,zero,809b20 <___vfiprintf_internal_r+0x1054>
  809354:	00800084 	movi	r2,2
  809358:	003f2506 	br	808ff0 <___vfiprintf_internal_r+0x524>
  80935c:	29403fcc 	andi	r5,r5,255
  809360:	2802801e 	bne	r5,zero,809d64 <___vfiprintf_internal_r+0x1298>
  809364:	6b400414 	ori	r13,r13,16
  809368:	6880080c 	andi	r2,r13,32
  80936c:	103fa31e 	bne	r2,zero,8091fc <___vfiprintf_internal_r+0x730>
  809370:	d9000417 	ldw	r4,16(sp)
  809374:	6880040c 	andi	r2,r13,16
  809378:	20c00104 	addi	r3,r4,4
  80937c:	1001f91e 	bne	r2,zero,809b64 <___vfiprintf_internal_r+0x1098>
  809380:	6880100c 	andi	r2,r13,64
  809384:	10025226 	beq	r2,zero,809cd0 <___vfiprintf_internal_r+0x1204>
  809388:	d8800417 	ldw	r2,16(sp)
  80938c:	d8c00415 	stw	r3,16(sp)
  809390:	15c0000f 	ldh	r23,0(r2)
  809394:	b839d7fa 	srai	fp,r23,31
  809398:	e005883a 	mov	r2,fp
  80939c:	103f9e0e 	bge	r2,zero,809218 <___vfiprintf_internal_r+0x74c>
  8093a0:	b804c03a 	cmpne	r2,r23,zero
  8093a4:	0739c83a 	sub	fp,zero,fp
  8093a8:	e0b9c83a 	sub	fp,fp,r2
  8093ac:	00800b44 	movi	r2,45
  8093b0:	d8800945 	stb	r2,37(sp)
  8093b4:	40ffffe0 	cmpeqi	r3,r8,-1
  8093b8:	05efc83a 	sub	r23,zero,r23
  8093bc:	03800b44 	movi	r14,45
  8093c0:	00800044 	movi	r2,1
  8093c4:	183f0e26 	beq	r3,zero,809000 <___vfiprintf_internal_r+0x534>
  8093c8:	10c00060 	cmpeqi	r3,r2,1
  8093cc:	183f9f1e 	bne	r3,zero,80924c <___vfiprintf_internal_r+0x780>
  8093d0:	108000a0 	cmpeqi	r2,r2,2
  8093d4:	9027883a 	mov	r19,r18
  8093d8:	1000a81e 	bne	r2,zero,80967c <___vfiprintf_internal_r+0xbb0>
  8093dc:	e006977a 	slli	r3,fp,29
  8093e0:	b804d0fa 	srli	r2,r23,3
  8093e4:	e038d0fa 	srli	fp,fp,3
  8093e8:	b90001cc 	andi	r4,r23,7
  8093ec:	21000c04 	addi	r4,r4,48
  8093f0:	18aeb03a 	or	r23,r3,r2
  8093f4:	993fffc5 	stb	r4,-1(r19)
  8093f8:	bf04b03a 	or	r2,r23,fp
  8093fc:	980b883a 	mov	r5,r19
  809400:	9cffffc4 	addi	r19,r19,-1
  809404:	103ff51e 	bne	r2,zero,8093dc <___vfiprintf_internal_r+0x910>
  809408:	6880004c 	andi	r2,r13,1
  80940c:	1000a726 	beq	r2,zero,8096ac <___vfiprintf_internal_r+0xbe0>
  809410:	21003fcc 	andi	r4,r4,255
  809414:	2100201c 	xori	r4,r4,128
  809418:	213fe004 	addi	r4,r4,-128
  80941c:	20800c18 	cmpnei	r2,r4,48
  809420:	1000a226 	beq	r2,zero,8096ac <___vfiprintf_internal_r+0xbe0>
  809424:	297fff84 	addi	r5,r5,-2
  809428:	00800c04 	movi	r2,48
  80942c:	98bfffc5 	stb	r2,-1(r19)
  809430:	9179c83a 	sub	fp,r18,r5
  809434:	db400015 	stw	r13,0(sp)
  809438:	2827883a 	mov	r19,r5
  80943c:	003f8b06 	br	80926c <___vfiprintf_internal_r+0x7a0>
  809440:	a0800007 	ldb	r2,0(r20)
  809444:	6b402014 	ori	r13,r13,128
  809448:	003de106 	br	808bd0 <___vfiprintf_internal_r+0x104>
  80944c:	a0800007 	ldb	r2,0(r20)
  809450:	a0c00044 	addi	r3,r20,1
  809454:	11000aa0 	cmpeqi	r4,r2,42
  809458:	2002551e 	bne	r4,zero,809db0 <___vfiprintf_internal_r+0x12e4>
  80945c:	113ff404 	addi	r4,r2,-48
  809460:	21c002b0 	cmpltui	r7,r4,10
  809464:	1829883a 	mov	r20,r3
  809468:	0011883a 	mov	r8,zero
  80946c:	383dd926 	beq	r7,zero,808bd4 <___vfiprintf_internal_r+0x108>
  809470:	400690ba 	slli	r3,r8,2
  809474:	a0800007 	ldb	r2,0(r20)
  809478:	a5000044 	addi	r20,r20,1
  80947c:	1a11883a 	add	r8,r3,r8
  809480:	4211883a 	add	r8,r8,r8
  809484:	4111883a 	add	r8,r8,r4
  809488:	113ff404 	addi	r4,r2,-48
  80948c:	20c002b0 	cmpltui	r3,r4,10
  809490:	183ff71e 	bne	r3,zero,809470 <___vfiprintf_internal_r+0x9a4>
  809494:	003dcf06 	br	808bd4 <___vfiprintf_internal_r+0x108>
  809498:	a0800003 	ldbu	r2,0(r20)
  80949c:	10803fcc 	andi	r2,r2,255
  8094a0:	1080201c 	xori	r2,r2,128
  8094a4:	6b400114 	ori	r13,r13,4
  8094a8:	10bfe004 	addi	r2,r2,-128
  8094ac:	003dc806 	br	808bd0 <___vfiprintf_internal_r+0x104>
  8094b0:	a0800007 	ldb	r2,0(r20)
  8094b4:	01400044 	movi	r5,1
  8094b8:	01800ac4 	movi	r6,43
  8094bc:	003dc406 	br	808bd0 <___vfiprintf_internal_r+0x104>
  8094c0:	d8c00417 	ldw	r3,16(sp)
  8094c4:	a0800003 	ldbu	r2,0(r20)
  8094c8:	1c400017 	ldw	r17,0(r3)
  8094cc:	18c00104 	addi	r3,r3,4
  8094d0:	8801b916 	blt	r17,zero,809bb8 <___vfiprintf_internal_r+0x10ec>
  8094d4:	d8c00415 	stw	r3,16(sp)
  8094d8:	10803fcc 	andi	r2,r2,255
  8094dc:	1080201c 	xori	r2,r2,128
  8094e0:	10bfe004 	addi	r2,r2,-128
  8094e4:	003dba06 	br	808bd0 <___vfiprintf_internal_r+0x104>
  8094e8:	a0800007 	ldb	r2,0(r20)
  8094ec:	6b400054 	ori	r13,r13,1
  8094f0:	003db706 	br	808bd0 <___vfiprintf_internal_r+0x104>
  8094f4:	30c03fcc 	andi	r3,r6,255
  8094f8:	18c0201c 	xori	r3,r3,128
  8094fc:	18ffe004 	addi	r3,r3,-128
  809500:	a0800003 	ldbu	r2,0(r20)
  809504:	183ff41e 	bne	r3,zero,8094d8 <___vfiprintf_internal_r+0xa0c>
  809508:	10803fcc 	andi	r2,r2,255
  80950c:	1080201c 	xori	r2,r2,128
  809510:	01400044 	movi	r5,1
  809514:	01800804 	movi	r6,32
  809518:	10bfe004 	addi	r2,r2,-128
  80951c:	003dac06 	br	808bd0 <___vfiprintf_internal_r+0x104>
  809520:	29403fcc 	andi	r5,r5,255
  809524:	28020a1e 	bne	r5,zero,809d50 <___vfiprintf_internal_r+0x1284>
  809528:	00c02074 	movhi	r3,129
  80952c:	18c37e04 	addi	r3,r3,3576
  809530:	d8c00515 	stw	r3,20(sp)
  809534:	68c0080c 	andi	r3,r13,32
  809538:	183f7d1e 	bne	r3,zero,809330 <___vfiprintf_internal_r+0x864>
  80953c:	d9400417 	ldw	r5,16(sp)
  809540:	68c0040c 	andi	r3,r13,16
  809544:	29000104 	addi	r4,r5,4
  809548:	18018b1e 	bne	r3,zero,809b78 <___vfiprintf_internal_r+0x10ac>
  80954c:	68c0100c 	andi	r3,r13,64
  809550:	1801da26 	beq	r3,zero,809cbc <___vfiprintf_internal_r+0x11f0>
  809554:	d8c00417 	ldw	r3,16(sp)
  809558:	0039883a 	mov	fp,zero
  80955c:	d9000415 	stw	r4,16(sp)
  809560:	1dc0000b 	ldhu	r23,0(r3)
  809564:	003f7706 	br	809344 <___vfiprintf_internal_r+0x878>
  809568:	d8800417 	ldw	r2,16(sp)
  80956c:	d8000945 	stb	zero,37(sp)
  809570:	14c00017 	ldw	r19,0(r2)
  809574:	10c00104 	addi	r3,r2,4
  809578:	9801bb26 	beq	r19,zero,809c68 <___vfiprintf_internal_r+0x119c>
  80957c:	40bfffe0 	cmpeqi	r2,r8,-1
  809580:	1001901e 	bne	r2,zero,809bc4 <___vfiprintf_internal_r+0x10f8>
  809584:	400d883a 	mov	r6,r8
  809588:	000b883a 	mov	r5,zero
  80958c:	9809883a 	mov	r4,r19
  809590:	d8c00315 	stw	r3,12(sp)
  809594:	db400215 	stw	r13,8(sp)
  809598:	da000015 	stw	r8,0(sp)
  80959c:	0806d9c0 	call	806d9c <memchr>
  8095a0:	da000017 	ldw	r8,0(sp)
  8095a4:	db400217 	ldw	r13,8(sp)
  8095a8:	d8c00317 	ldw	r3,12(sp)
  8095ac:	1001e426 	beq	r2,zero,809d40 <___vfiprintf_internal_r+0x1274>
  8095b0:	14f9c83a 	sub	fp,r2,r19
  8095b4:	e02f883a 	mov	r23,fp
  8095b8:	d8c00415 	stw	r3,16(sp)
  8095bc:	003dfc06 	br	808db0 <___vfiprintf_internal_r+0x2e4>
  8095c0:	a0800007 	ldb	r2,0(r20)
  8095c4:	6b400814 	ori	r13,r13,32
  8095c8:	003d8106 	br	808bd0 <___vfiprintf_internal_r+0x104>
  8095cc:	d8c00417 	ldw	r3,16(sp)
  8095d0:	00800c04 	movi	r2,48
  8095d4:	d8800985 	stb	r2,38(sp)
  8095d8:	00801e04 	movi	r2,120
  8095dc:	01002074 	movhi	r4,129
  8095e0:	d88009c5 	stb	r2,39(sp)
  8095e4:	18800104 	addi	r2,r3,4
  8095e8:	d8800415 	stw	r2,16(sp)
  8095ec:	20837e04 	addi	r2,r4,3576
  8095f0:	d8800515 	stw	r2,20(sp)
  8095f4:	1dc00017 	ldw	r23,0(r3)
  8095f8:	0039883a 	mov	fp,zero
  8095fc:	6b400094 	ori	r13,r13,2
  809600:	00800084 	movi	r2,2
  809604:	003e7a06 	br	808ff0 <___vfiprintf_internal_r+0x524>
  809608:	9027883a 	mov	r19,r18
  80960c:	b809883a 	mov	r4,r23
  809610:	e00b883a 	mov	r5,fp
  809614:	01800284 	movi	r6,10
  809618:	000f883a 	mov	r7,zero
  80961c:	db800315 	stw	r14,12(sp)
  809620:	da000215 	stw	r8,8(sp)
  809624:	db400015 	stw	r13,0(sp)
  809628:	080b3140 	call	80b314 <__umoddi3>
  80962c:	10800c04 	addi	r2,r2,48
  809630:	b809883a 	mov	r4,r23
  809634:	e00b883a 	mov	r5,fp
  809638:	98bfffc5 	stb	r2,-1(r19)
  80963c:	01800284 	movi	r6,10
  809640:	000f883a 	mov	r7,zero
  809644:	080acf80 	call	80acf8 <__udivdi3>
  809648:	e009883a 	mov	r4,fp
  80964c:	b80b883a 	mov	r5,r23
  809650:	db400017 	ldw	r13,0(sp)
  809654:	da000217 	ldw	r8,8(sp)
  809658:	db800317 	ldw	r14,12(sp)
  80965c:	9cffffc4 	addi	r19,r19,-1
  809660:	102f883a 	mov	r23,r2
  809664:	1839883a 	mov	fp,r3
  809668:	203fe81e 	bne	r4,zero,80960c <___vfiprintf_internal_r+0xb40>
  80966c:	294002a8 	cmpgeui	r5,r5,10
  809670:	283fe61e 	bne	r5,zero,80960c <___vfiprintf_internal_r+0xb40>
  809674:	94f9c83a 	sub	fp,r18,r19
  809678:	003efc06 	br	80926c <___vfiprintf_internal_r+0x7a0>
  80967c:	d9000517 	ldw	r4,20(sp)
  809680:	b88003cc 	andi	r2,r23,15
  809684:	e006973a 	slli	r3,fp,28
  809688:	b82ed13a 	srli	r23,r23,4
  80968c:	2085883a 	add	r2,r4,r2
  809690:	10800003 	ldbu	r2,0(r2)
  809694:	e038d13a 	srli	fp,fp,4
  809698:	1deeb03a 	or	r23,r3,r23
  80969c:	98bfffc5 	stb	r2,-1(r19)
  8096a0:	bf04b03a 	or	r2,r23,fp
  8096a4:	9cffffc4 	addi	r19,r19,-1
  8096a8:	103ff41e 	bne	r2,zero,80967c <___vfiprintf_internal_r+0xbb0>
  8096ac:	94f9c83a 	sub	fp,r18,r19
  8096b0:	db400015 	stw	r13,0(sp)
  8096b4:	003eed06 	br	80926c <___vfiprintf_internal_r+0x7a0>
  8096b8:	01400044 	movi	r5,1
  8096bc:	0009883a 	mov	r4,zero
  8096c0:	900d883a 	mov	r6,r18
  8096c4:	003e9e06 	br	809140 <___vfiprintf_internal_r+0x674>
  8096c8:	8dc7c83a 	sub	r3,r17,r23
  8096cc:	00fdf20e 	bge	zero,r3,808e98 <___vfiprintf_internal_r+0x3cc>
  8096d0:	19c00450 	cmplti	r7,r3,17
  8096d4:	3801ae1e 	bne	r7,zero,809d90 <___vfiprintf_internal_r+0x12c4>
  8096d8:	01c02074 	movhi	r7,129
  8096dc:	39c40004 	addi	r7,r7,4096
  8096e0:	03400404 	movi	r13,16
  8096e4:	00000606 	br	809700 <___vfiprintf_internal_r+0xc34>
  8096e8:	23800084 	addi	r14,r4,2
  8096ec:	84000204 	addi	r16,r16,8
  8096f0:	2809883a 	mov	r4,r5
  8096f4:	18fffc04 	addi	r3,r3,-16
  8096f8:	19400448 	cmpgei	r5,r3,17
  8096fc:	28001c26 	beq	r5,zero,809770 <___vfiprintf_internal_r+0xca4>
  809700:	21400044 	addi	r5,r4,1
  809704:	10800404 	addi	r2,r2,16
  809708:	81c00015 	stw	r7,0(r16)
  80970c:	83400115 	stw	r13,4(r16)
  809710:	d8800c15 	stw	r2,48(sp)
  809714:	d9400b15 	stw	r5,44(sp)
  809718:	29800208 	cmpgei	r6,r5,8
  80971c:	303ff226 	beq	r6,zero,8096e8 <___vfiprintf_internal_r+0xc1c>
  809720:	d9800a04 	addi	r6,sp,40
  809724:	a80b883a 	mov	r5,r21
  809728:	b009883a 	mov	r4,r22
  80972c:	10006326 	beq	r2,zero,8098bc <___vfiprintf_internal_r+0xdf0>
  809730:	d9c00615 	stw	r7,24(sp)
  809734:	d8c00315 	stw	r3,12(sp)
  809738:	da000215 	stw	r8,8(sp)
  80973c:	08089c00 	call	8089c0 <__sprint_r.part.0>
  809740:	103df71e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  809744:	d8c00317 	ldw	r3,12(sp)
  809748:	d9000b17 	ldw	r4,44(sp)
  80974c:	d8800c17 	ldw	r2,48(sp)
  809750:	18fffc04 	addi	r3,r3,-16
  809754:	19400448 	cmpgei	r5,r3,17
  809758:	d9c00617 	ldw	r7,24(sp)
  80975c:	da000217 	ldw	r8,8(sp)
  809760:	9021883a 	mov	r16,r18
  809764:	23800044 	addi	r14,r4,1
  809768:	03400404 	movi	r13,16
  80976c:	283fe41e 	bne	r5,zero,809700 <___vfiprintf_internal_r+0xc34>
  809770:	83400204 	addi	r13,r16,8
  809774:	10c5883a 	add	r2,r2,r3
  809778:	80c00115 	stw	r3,4(r16)
  80977c:	81c00015 	stw	r7,0(r16)
  809780:	d8800c15 	stw	r2,48(sp)
  809784:	db800b15 	stw	r14,44(sp)
  809788:	70c00208 	cmpgei	r3,r14,8
  80978c:	1800df26 	beq	r3,zero,809b0c <___vfiprintf_internal_r+0x1040>
  809790:	10015826 	beq	r2,zero,809cf4 <___vfiprintf_internal_r+0x1228>
  809794:	d9800a04 	addi	r6,sp,40
  809798:	a80b883a 	mov	r5,r21
  80979c:	b009883a 	mov	r4,r22
  8097a0:	da000215 	stw	r8,8(sp)
  8097a4:	08089c00 	call	8089c0 <__sprint_r.part.0>
  8097a8:	103ddd1e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  8097ac:	da000217 	ldw	r8,8(sp)
  8097b0:	d9000b17 	ldw	r4,44(sp)
  8097b4:	d8800c17 	ldw	r2,48(sp)
  8097b8:	4711c83a 	sub	r8,r8,fp
  8097bc:	d9801904 	addi	r6,sp,100
  8097c0:	21400044 	addi	r5,r4,1
  8097c4:	9021883a 	mov	r16,r18
  8097c8:	023db50e 	bge	zero,r8,808ea0 <___vfiprintf_internal_r+0x3d4>
  8097cc:	40c00450 	cmplti	r3,r8,17
  8097d0:	01c02074 	movhi	r7,129
  8097d4:	1801441e 	bne	r3,zero,809ce8 <___vfiprintf_internal_r+0x121c>
  8097d8:	39c40004 	addi	r7,r7,4096
  8097dc:	03400404 	movi	r13,16
  8097e0:	00000606 	br	8097fc <___vfiprintf_internal_r+0xd30>
  8097e4:	21400084 	addi	r5,r4,2
  8097e8:	84000204 	addi	r16,r16,8
  8097ec:	1809883a 	mov	r4,r3
  8097f0:	423ffc04 	addi	r8,r8,-16
  8097f4:	40c00448 	cmpgei	r3,r8,17
  8097f8:	18001a26 	beq	r3,zero,809864 <___vfiprintf_internal_r+0xd98>
  8097fc:	20c00044 	addi	r3,r4,1
  809800:	10800404 	addi	r2,r2,16
  809804:	81c00015 	stw	r7,0(r16)
  809808:	83400115 	stw	r13,4(r16)
  80980c:	d8800c15 	stw	r2,48(sp)
  809810:	d8c00b15 	stw	r3,44(sp)
  809814:	19400208 	cmpgei	r5,r3,8
  809818:	283ff226 	beq	r5,zero,8097e4 <___vfiprintf_internal_r+0xd18>
  80981c:	d9800a04 	addi	r6,sp,40
  809820:	a80b883a 	mov	r5,r21
  809824:	b009883a 	mov	r4,r22
  809828:	10001a26 	beq	r2,zero,809894 <___vfiprintf_internal_r+0xdc8>
  80982c:	d9c00315 	stw	r7,12(sp)
  809830:	da000215 	stw	r8,8(sp)
  809834:	08089c00 	call	8089c0 <__sprint_r.part.0>
  809838:	103db91e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  80983c:	da000217 	ldw	r8,8(sp)
  809840:	d9000b17 	ldw	r4,44(sp)
  809844:	d8800c17 	ldw	r2,48(sp)
  809848:	423ffc04 	addi	r8,r8,-16
  80984c:	40c00448 	cmpgei	r3,r8,17
  809850:	d9c00317 	ldw	r7,12(sp)
  809854:	9021883a 	mov	r16,r18
  809858:	21400044 	addi	r5,r4,1
  80985c:	03400404 	movi	r13,16
  809860:	183fe61e 	bne	r3,zero,8097fc <___vfiprintf_internal_r+0xd30>
  809864:	81000204 	addi	r4,r16,8
  809868:	1205883a 	add	r2,r2,r8
  80986c:	81c00015 	stw	r7,0(r16)
  809870:	82000115 	stw	r8,4(r16)
  809874:	d8800c15 	stw	r2,48(sp)
  809878:	d9400b15 	stw	r5,44(sp)
  80987c:	28c00208 	cmpgei	r3,r5,8
  809880:	1800721e 	bne	r3,zero,809a4c <___vfiprintf_internal_r+0xf80>
  809884:	29400044 	addi	r5,r5,1
  809888:	21800204 	addi	r6,r4,8
  80988c:	2021883a 	mov	r16,r4
  809890:	003d8306 	br	808ea0 <___vfiprintf_internal_r+0x3d4>
  809894:	01400044 	movi	r5,1
  809898:	0009883a 	mov	r4,zero
  80989c:	9021883a 	mov	r16,r18
  8098a0:	003fd306 	br	8097f0 <___vfiprintf_internal_r+0xd24>
  8098a4:	d9800a04 	addi	r6,sp,40
  8098a8:	a80b883a 	mov	r5,r21
  8098ac:	b009883a 	mov	r4,r22
  8098b0:	08089c00 	call	8089c0 <__sprint_r.part.0>
  8098b4:	103d9426 	beq	r2,zero,808f08 <___vfiprintf_internal_r+0x43c>
  8098b8:	003d9906 	br	808f20 <___vfiprintf_internal_r+0x454>
  8098bc:	03800044 	movi	r14,1
  8098c0:	0009883a 	mov	r4,zero
  8098c4:	9021883a 	mov	r16,r18
  8098c8:	003f8a06 	br	8096f4 <___vfiprintf_internal_r+0xc28>
  8098cc:	10006e26 	beq	r2,zero,809a88 <___vfiprintf_internal_r+0xfbc>
  8098d0:	d9800a04 	addi	r6,sp,40
  8098d4:	a80b883a 	mov	r5,r21
  8098d8:	b009883a 	mov	r4,r22
  8098dc:	da000615 	stw	r8,24(sp)
  8098e0:	db400315 	stw	r13,12(sp)
  8098e4:	db800215 	stw	r14,8(sp)
  8098e8:	08089c00 	call	8089c0 <__sprint_r.part.0>
  8098ec:	103d8c1e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  8098f0:	d9000b17 	ldw	r4,44(sp)
  8098f4:	d8800c17 	ldw	r2,48(sp)
  8098f8:	da000617 	ldw	r8,24(sp)
  8098fc:	db400317 	ldw	r13,12(sp)
  809900:	db800217 	ldw	r14,8(sp)
  809904:	d9801904 	addi	r6,sp,100
  809908:	21400044 	addi	r5,r4,1
  80990c:	9021883a 	mov	r16,r18
  809910:	003d4606 	br	808e2c <___vfiprintf_internal_r+0x360>
  809914:	d8800984 	addi	r2,sp,38
  809918:	d8801715 	stw	r2,92(sp)
  80991c:	00800084 	movi	r2,2
  809920:	d8801815 	stw	r2,96(sp)
  809924:	d9801904 	addi	r6,sp,100
  809928:	01400044 	movi	r5,1
  80992c:	3021883a 	mov	r16,r6
  809930:	2809883a 	mov	r4,r5
  809934:	21400044 	addi	r5,r4,1
  809938:	81800204 	addi	r6,r16,8
  80993c:	003d5406 	br	808e90 <___vfiprintf_internal_r+0x3c4>
  809940:	db400017 	ldw	r13,0(sp)
  809944:	003ea006 	br	8093c8 <___vfiprintf_internal_r+0x8fc>
  809948:	19400450 	cmplti	r5,r3,17
  80994c:	01c02074 	movhi	r7,129
  809950:	2801011e 	bne	r5,zero,809d58 <___vfiprintf_internal_r+0x128c>
  809954:	39c40404 	addi	r7,r7,4112
  809958:	03c00404 	movi	r15,16
  80995c:	00000706 	br	80997c <___vfiprintf_internal_r+0xeb0>
  809960:	27c00084 	addi	ra,r4,2
  809964:	84000204 	addi	r16,r16,8
  809968:	3009883a 	mov	r4,r6
  80996c:	18fffc04 	addi	r3,r3,-16
  809970:	19400448 	cmpgei	r5,r3,17
  809974:	28002026 	beq	r5,zero,8099f8 <___vfiprintf_internal_r+0xf2c>
  809978:	21800044 	addi	r6,r4,1
  80997c:	10800404 	addi	r2,r2,16
  809980:	81c00015 	stw	r7,0(r16)
  809984:	83c00115 	stw	r15,4(r16)
  809988:	d8800c15 	stw	r2,48(sp)
  80998c:	d9800b15 	stw	r6,44(sp)
  809990:	31400208 	cmpgei	r5,r6,8
  809994:	283ff226 	beq	r5,zero,809960 <___vfiprintf_internal_r+0xe94>
  809998:	d9800a04 	addi	r6,sp,40
  80999c:	a80b883a 	mov	r5,r21
  8099a0:	b009883a 	mov	r4,r22
  8099a4:	10001f26 	beq	r2,zero,809a24 <___vfiprintf_internal_r+0xf58>
  8099a8:	d9c00815 	stw	r7,32(sp)
  8099ac:	d8c00715 	stw	r3,28(sp)
  8099b0:	da000615 	stw	r8,24(sp)
  8099b4:	db400315 	stw	r13,12(sp)
  8099b8:	db800215 	stw	r14,8(sp)
  8099bc:	08089c00 	call	8089c0 <__sprint_r.part.0>
  8099c0:	103d571e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  8099c4:	d8c00717 	ldw	r3,28(sp)
  8099c8:	d9000b17 	ldw	r4,44(sp)
  8099cc:	d8800c17 	ldw	r2,48(sp)
  8099d0:	18fffc04 	addi	r3,r3,-16
  8099d4:	19400448 	cmpgei	r5,r3,17
  8099d8:	d9c00817 	ldw	r7,32(sp)
  8099dc:	da000617 	ldw	r8,24(sp)
  8099e0:	db400317 	ldw	r13,12(sp)
  8099e4:	db800217 	ldw	r14,8(sp)
  8099e8:	9021883a 	mov	r16,r18
  8099ec:	27c00044 	addi	ra,r4,1
  8099f0:	03c00404 	movi	r15,16
  8099f4:	283fe01e 	bne	r5,zero,809978 <___vfiprintf_internal_r+0xeac>
  8099f8:	10c5883a 	add	r2,r2,r3
  8099fc:	80c00115 	stw	r3,4(r16)
  809a00:	81c00015 	stw	r7,0(r16)
  809a04:	d8800c15 	stw	r2,48(sp)
  809a08:	dfc00b15 	stw	ra,44(sp)
  809a0c:	f8c00208 	cmpgei	r3,ra,8
  809a10:	18002b1e 	bne	r3,zero,809ac0 <___vfiprintf_internal_r+0xff4>
  809a14:	84000204 	addi	r16,r16,8
  809a18:	f9400044 	addi	r5,ra,1
  809a1c:	f809883a 	mov	r4,ra
  809a20:	003cf206 	br	808dec <___vfiprintf_internal_r+0x320>
  809a24:	0009883a 	mov	r4,zero
  809a28:	07c00044 	movi	ra,1
  809a2c:	9021883a 	mov	r16,r18
  809a30:	003fce06 	br	80996c <___vfiprintf_internal_r+0xea0>
  809a34:	8dc0010e 	bge	r17,r23,809a3c <___vfiprintf_internal_r+0xf70>
  809a38:	b823883a 	mov	r17,r23
  809a3c:	d8800117 	ldw	r2,4(sp)
  809a40:	1445883a 	add	r2,r2,r17
  809a44:	d8800115 	stw	r2,4(sp)
  809a48:	003d2f06 	br	808f08 <___vfiprintf_internal_r+0x43c>
  809a4c:	10007326 	beq	r2,zero,809c1c <___vfiprintf_internal_r+0x1150>
  809a50:	d9800a04 	addi	r6,sp,40
  809a54:	a80b883a 	mov	r5,r21
  809a58:	b009883a 	mov	r4,r22
  809a5c:	08089c00 	call	8089c0 <__sprint_r.part.0>
  809a60:	103d2f1e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  809a64:	d9400b17 	ldw	r5,44(sp)
  809a68:	d8800c17 	ldw	r2,48(sp)
  809a6c:	d9801904 	addi	r6,sp,100
  809a70:	29400044 	addi	r5,r5,1
  809a74:	9021883a 	mov	r16,r18
  809a78:	003d0906 	br	808ea0 <___vfiprintf_internal_r+0x3d4>
  809a7c:	d8000b15 	stw	zero,44(sp)
  809a80:	9021883a 	mov	r16,r18
  809a84:	003d7806 	br	809068 <___vfiprintf_internal_r+0x59c>
  809a88:	7000441e 	bne	r14,zero,809b9c <___vfiprintf_internal_r+0x10d0>
  809a8c:	0009883a 	mov	r4,zero
  809a90:	d9801904 	addi	r6,sp,100
  809a94:	01400044 	movi	r5,1
  809a98:	9021883a 	mov	r16,r18
  809a9c:	003cfc06 	br	808e90 <___vfiprintf_internal_r+0x3c4>
  809aa0:	d9801904 	addi	r6,sp,100
  809aa4:	01400044 	movi	r5,1
  809aa8:	0009883a 	mov	r4,zero
  809aac:	9021883a 	mov	r16,r18
  809ab0:	003cf706 	br	808e90 <___vfiprintf_internal_r+0x3c4>
  809ab4:	0039883a 	mov	fp,zero
  809ab8:	9027883a 	mov	r19,r18
  809abc:	003deb06 	br	80926c <___vfiprintf_internal_r+0x7a0>
  809ac0:	10004a26 	beq	r2,zero,809bec <___vfiprintf_internal_r+0x1120>
  809ac4:	d9800a04 	addi	r6,sp,40
  809ac8:	a80b883a 	mov	r5,r21
  809acc:	b009883a 	mov	r4,r22
  809ad0:	da000615 	stw	r8,24(sp)
  809ad4:	db400315 	stw	r13,12(sp)
  809ad8:	db800215 	stw	r14,8(sp)
  809adc:	08089c00 	call	8089c0 <__sprint_r.part.0>
  809ae0:	103d0f1e 	bne	r2,zero,808f20 <___vfiprintf_internal_r+0x454>
  809ae4:	d9000b17 	ldw	r4,44(sp)
  809ae8:	d8800c17 	ldw	r2,48(sp)
  809aec:	da000617 	ldw	r8,24(sp)
  809af0:	db400317 	ldw	r13,12(sp)
  809af4:	db800217 	ldw	r14,8(sp)
  809af8:	9021883a 	mov	r16,r18
  809afc:	21400044 	addi	r5,r4,1
  809b00:	003cba06 	br	808dec <___vfiprintf_internal_r+0x320>
  809b04:	9027883a 	mov	r19,r18
  809b08:	003dd806 	br	80926c <___vfiprintf_internal_r+0x7a0>
  809b0c:	71400044 	addi	r5,r14,1
  809b10:	69800204 	addi	r6,r13,8
  809b14:	7009883a 	mov	r4,r14
  809b18:	6821883a 	mov	r16,r13
  809b1c:	003cde06 	br	808e98 <___vfiprintf_internal_r+0x3cc>
  809b20:	00c00c04 	movi	r3,48
  809b24:	d88009c5 	stb	r2,39(sp)
  809b28:	d8c00985 	stb	r3,38(sp)
  809b2c:	6b400094 	ori	r13,r13,2
  809b30:	00800084 	movi	r2,2
  809b34:	003d2e06 	br	808ff0 <___vfiprintf_internal_r+0x524>
  809b38:	25c00017 	ldw	r23,0(r4)
  809b3c:	0039883a 	mov	fp,zero
  809b40:	d8c00415 	stw	r3,16(sp)
  809b44:	0005883a 	mov	r2,zero
  809b48:	003d2906 	br	808ff0 <___vfiprintf_internal_r+0x524>
  809b4c:	d9400117 	ldw	r5,4(sp)
  809b50:	d9000415 	stw	r4,16(sp)
  809b54:	2805d7fa 	srai	r2,r5,31
  809b58:	19400015 	stw	r5,0(r3)
  809b5c:	18800115 	stw	r2,4(r3)
  809b60:	003c0306 	br	808b70 <___vfiprintf_internal_r+0xa4>
  809b64:	25c00017 	ldw	r23,0(r4)
  809b68:	d8c00415 	stw	r3,16(sp)
  809b6c:	b839d7fa 	srai	fp,r23,31
  809b70:	e005883a 	mov	r2,fp
  809b74:	003da706 	br	809214 <___vfiprintf_internal_r+0x748>
  809b78:	2dc00017 	ldw	r23,0(r5)
  809b7c:	0039883a 	mov	fp,zero
  809b80:	d9000415 	stw	r4,16(sp)
  809b84:	003def06 	br	809344 <___vfiprintf_internal_r+0x878>
  809b88:	25c00017 	ldw	r23,0(r4)
  809b8c:	0039883a 	mov	fp,zero
  809b90:	d8c00415 	stw	r3,16(sp)
  809b94:	00800044 	movi	r2,1
  809b98:	003d1506 	br	808ff0 <___vfiprintf_internal_r+0x524>
  809b9c:	d8800984 	addi	r2,sp,38
  809ba0:	d8801715 	stw	r2,92(sp)
  809ba4:	00800084 	movi	r2,2
  809ba8:	d8801815 	stw	r2,96(sp)
  809bac:	dc001904 	addi	r16,sp,100
  809bb0:	01000044 	movi	r4,1
  809bb4:	003f5f06 	br	809934 <___vfiprintf_internal_r+0xe68>
  809bb8:	0463c83a 	sub	r17,zero,r17
  809bbc:	d8c00415 	stw	r3,16(sp)
  809bc0:	003e3606 	br	80949c <___vfiprintf_internal_r+0x9d0>
  809bc4:	9809883a 	mov	r4,r19
  809bc8:	d8c00215 	stw	r3,8(sp)
  809bcc:	db400015 	stw	r13,0(sp)
  809bd0:	08016700 	call	801670 <strlen>
  809bd4:	d8c00217 	ldw	r3,8(sp)
  809bd8:	db400017 	ldw	r13,0(sp)
  809bdc:	1039883a 	mov	fp,r2
  809be0:	102f883a 	mov	r23,r2
  809be4:	d8c00415 	stw	r3,16(sp)
  809be8:	003c7106 	br	808db0 <___vfiprintf_internal_r+0x2e4>
  809bec:	d8c00947 	ldb	r3,37(sp)
  809bf0:	1800451e 	bne	r3,zero,809d08 <___vfiprintf_internal_r+0x123c>
  809bf4:	703f471e 	bne	r14,zero,809914 <___vfiprintf_internal_r+0xe48>
  809bf8:	0009883a 	mov	r4,zero
  809bfc:	d9801904 	addi	r6,sp,100
  809c00:	01400044 	movi	r5,1
  809c04:	9021883a 	mov	r16,r18
  809c08:	003ca306 	br	808e98 <___vfiprintf_internal_r+0x3cc>
  809c0c:	d8800117 	ldw	r2,4(sp)
  809c10:	18800015 	stw	r2,0(r3)
  809c14:	d9000415 	stw	r4,16(sp)
  809c18:	003bd506 	br	808b70 <___vfiprintf_internal_r+0xa4>
  809c1c:	00c00044 	movi	r3,1
  809c20:	e005883a 	mov	r2,fp
  809c24:	dcc01715 	stw	r19,92(sp)
  809c28:	df001815 	stw	fp,96(sp)
  809c2c:	df000c15 	stw	fp,48(sp)
  809c30:	d8c00b15 	stw	r3,44(sp)
  809c34:	d9801904 	addi	r6,sp,100
  809c38:	003ca806 	br	808edc <___vfiprintf_internal_r+0x410>
  809c3c:	10c00060 	cmpeqi	r3,r2,1
  809c40:	db400017 	ldw	r13,0(sp)
  809c44:	183de226 	beq	r3,zero,8093d0 <___vfiprintf_internal_r+0x904>
  809c48:	003d8306 	br	809258 <___vfiprintf_internal_r+0x78c>
  809c4c:	a0800043 	ldbu	r2,1(r20)
  809c50:	6b400814 	ori	r13,r13,32
  809c54:	a5000044 	addi	r20,r20,1
  809c58:	10803fcc 	andi	r2,r2,255
  809c5c:	1080201c 	xori	r2,r2,128
  809c60:	10bfe004 	addi	r2,r2,-128
  809c64:	003bda06 	br	808bd0 <___vfiprintf_internal_r+0x104>
  809c68:	408001f0 	cmpltui	r2,r8,7
  809c6c:	4039883a 	mov	fp,r8
  809c70:	1000011e 	bne	r2,zero,809c78 <___vfiprintf_internal_r+0x11ac>
  809c74:	07000184 	movi	fp,6
  809c78:	04c02074 	movhi	r19,129
  809c7c:	e02f883a 	mov	r23,fp
  809c80:	d8c00415 	stw	r3,16(sp)
  809c84:	9cc38304 	addi	r19,r19,3596
  809c88:	003c4906 	br	808db0 <___vfiprintf_internal_r+0x2e4>
  809c8c:	d8800417 	ldw	r2,16(sp)
  809c90:	0039883a 	mov	fp,zero
  809c94:	d8c00415 	stw	r3,16(sp)
  809c98:	15c00017 	ldw	r23,0(r2)
  809c9c:	0005883a 	mov	r2,zero
  809ca0:	003cd306 	br	808ff0 <___vfiprintf_internal_r+0x524>
  809ca4:	d8800417 	ldw	r2,16(sp)
  809ca8:	0039883a 	mov	fp,zero
  809cac:	d8c00415 	stw	r3,16(sp)
  809cb0:	15c00017 	ldw	r23,0(r2)
  809cb4:	00800044 	movi	r2,1
  809cb8:	003ccd06 	br	808ff0 <___vfiprintf_internal_r+0x524>
  809cbc:	d8c00417 	ldw	r3,16(sp)
  809cc0:	0039883a 	mov	fp,zero
  809cc4:	d9000415 	stw	r4,16(sp)
  809cc8:	1dc00017 	ldw	r23,0(r3)
  809ccc:	003d9d06 	br	809344 <___vfiprintf_internal_r+0x878>
  809cd0:	d8800417 	ldw	r2,16(sp)
  809cd4:	d8c00415 	stw	r3,16(sp)
  809cd8:	15c00017 	ldw	r23,0(r2)
  809cdc:	b839d7fa 	srai	fp,r23,31
  809ce0:	e005883a 	mov	r2,fp
  809ce4:	003d4b06 	br	809214 <___vfiprintf_internal_r+0x748>
  809ce8:	3009883a 	mov	r4,r6
  809cec:	39c40004 	addi	r7,r7,4096
  809cf0:	003edd06 	br	809868 <___vfiprintf_internal_r+0xd9c>
  809cf4:	d9801904 	addi	r6,sp,100
  809cf8:	01400044 	movi	r5,1
  809cfc:	0009883a 	mov	r4,zero
  809d00:	9021883a 	mov	r16,r18
  809d04:	003c6406 	br	808e98 <___vfiprintf_internal_r+0x3cc>
  809d08:	d8800944 	addi	r2,sp,37
  809d0c:	d8801715 	stw	r2,92(sp)
  809d10:	00800044 	movi	r2,1
  809d14:	d8801815 	stw	r2,96(sp)
  809d18:	d9801904 	addi	r6,sp,100
  809d1c:	01400044 	movi	r5,1
  809d20:	003c3e06 	br	808e1c <___vfiprintf_internal_r+0x350>
  809d24:	d9800945 	stb	r6,37(sp)
  809d28:	003c1b06 	br	808d98 <___vfiprintf_internal_r+0x2cc>
  809d2c:	d9800a04 	addi	r6,sp,40
  809d30:	a80b883a 	mov	r5,r21
  809d34:	b009883a 	mov	r4,r22
  809d38:	08089c00 	call	8089c0 <__sprint_r.part.0>
  809d3c:	003c7806 	br	808f20 <___vfiprintf_internal_r+0x454>
  809d40:	402f883a 	mov	r23,r8
  809d44:	d8c00415 	stw	r3,16(sp)
  809d48:	4039883a 	mov	fp,r8
  809d4c:	003c1806 	br	808db0 <___vfiprintf_internal_r+0x2e4>
  809d50:	d9800945 	stb	r6,37(sp)
  809d54:	003df406 	br	809528 <___vfiprintf_internal_r+0xa5c>
  809d58:	303f883a 	mov	ra,r6
  809d5c:	39c40404 	addi	r7,r7,4112
  809d60:	003f2506 	br	8099f8 <___vfiprintf_internal_r+0xf2c>
  809d64:	d9800945 	stb	r6,37(sp)
  809d68:	003d7e06 	br	809364 <___vfiprintf_internal_r+0x898>
  809d6c:	d9800945 	stb	r6,37(sp)
  809d70:	003d4c06 	br	8092a4 <___vfiprintf_internal_r+0x7d8>
  809d74:	d9800945 	stb	r6,37(sp)
  809d78:	003d1e06 	br	8091f4 <___vfiprintf_internal_r+0x728>
  809d7c:	d9800945 	stb	r6,37(sp)
  809d80:	003d6606 	br	80931c <___vfiprintf_internal_r+0x850>
  809d84:	21400044 	addi	r5,r4,1
  809d88:	39c40404 	addi	r7,r7,4112
  809d8c:	003d0606 	br	8091a8 <___vfiprintf_internal_r+0x6dc>
  809d90:	01c02074 	movhi	r7,129
  809d94:	301b883a 	mov	r13,r6
  809d98:	281d883a 	mov	r14,r5
  809d9c:	39c40004 	addi	r7,r7,4096
  809da0:	003e7406 	br	809774 <___vfiprintf_internal_r+0xca8>
  809da4:	00bfffc4 	movi	r2,-1
  809da8:	d8800115 	stw	r2,4(sp)
  809dac:	003c5f06 	br	808f2c <___vfiprintf_internal_r+0x460>
  809db0:	d8800417 	ldw	r2,16(sp)
  809db4:	12000017 	ldw	r8,0(r2)
  809db8:	11000104 	addi	r4,r2,4
  809dbc:	4000010e 	bge	r8,zero,809dc4 <___vfiprintf_internal_r+0x12f8>
  809dc0:	023fffc4 	movi	r8,-1
  809dc4:	a0800043 	ldbu	r2,1(r20)
  809dc8:	d9000415 	stw	r4,16(sp)
  809dcc:	1829883a 	mov	r20,r3
  809dd0:	10803fcc 	andi	r2,r2,255
  809dd4:	1080201c 	xori	r2,r2,128
  809dd8:	10bfe004 	addi	r2,r2,-128
  809ddc:	003b7c06 	br	808bd0 <___vfiprintf_internal_r+0x104>

00809de0 <__vfiprintf_internal>:
  809de0:	00c02074 	movhi	r3,129
  809de4:	2005883a 	mov	r2,r4
  809de8:	190bb617 	ldw	r4,11992(r3)
  809dec:	300f883a 	mov	r7,r6
  809df0:	280d883a 	mov	r6,r5
  809df4:	100b883a 	mov	r5,r2
  809df8:	0808acc1 	jmpi	808acc <___vfiprintf_internal_r>

00809dfc <__sbprintf>:
  809dfc:	2880030b 	ldhu	r2,12(r5)
  809e00:	2b001917 	ldw	r12,100(r5)
  809e04:	2ac0038b 	ldhu	r11,14(r5)
  809e08:	2a800717 	ldw	r10,28(r5)
  809e0c:	2a400917 	ldw	r9,36(r5)
  809e10:	defee204 	addi	sp,sp,-1144
  809e14:	da001a04 	addi	r8,sp,104
  809e18:	00c10004 	movi	r3,1024
  809e1c:	dc011a15 	stw	r16,1128(sp)
  809e20:	10bfff4c 	andi	r2,r2,65533
  809e24:	2821883a 	mov	r16,r5
  809e28:	d80b883a 	mov	r5,sp
  809e2c:	dc811c15 	stw	r18,1136(sp)
  809e30:	dc411b15 	stw	r17,1132(sp)
  809e34:	dfc11d15 	stw	ra,1140(sp)
  809e38:	2025883a 	mov	r18,r4
  809e3c:	d880030d 	sth	r2,12(sp)
  809e40:	db001915 	stw	r12,100(sp)
  809e44:	dac0038d 	sth	r11,14(sp)
  809e48:	da800715 	stw	r10,28(sp)
  809e4c:	da400915 	stw	r9,36(sp)
  809e50:	da000015 	stw	r8,0(sp)
  809e54:	da000415 	stw	r8,16(sp)
  809e58:	d8c00215 	stw	r3,8(sp)
  809e5c:	d8c00515 	stw	r3,20(sp)
  809e60:	d8000615 	stw	zero,24(sp)
  809e64:	0808acc0 	call	808acc <___vfiprintf_internal_r>
  809e68:	1023883a 	mov	r17,r2
  809e6c:	10000d0e 	bge	r2,zero,809ea4 <__sbprintf+0xa8>
  809e70:	d880030b 	ldhu	r2,12(sp)
  809e74:	1080100c 	andi	r2,r2,64
  809e78:	10000326 	beq	r2,zero,809e88 <__sbprintf+0x8c>
  809e7c:	8080030b 	ldhu	r2,12(r16)
  809e80:	10801014 	ori	r2,r2,64
  809e84:	8080030d 	sth	r2,12(r16)
  809e88:	8805883a 	mov	r2,r17
  809e8c:	dfc11d17 	ldw	ra,1140(sp)
  809e90:	dc811c17 	ldw	r18,1136(sp)
  809e94:	dc411b17 	ldw	r17,1132(sp)
  809e98:	dc011a17 	ldw	r16,1128(sp)
  809e9c:	dec11e04 	addi	sp,sp,1144
  809ea0:	f800283a 	ret
  809ea4:	d80b883a 	mov	r5,sp
  809ea8:	9009883a 	mov	r4,r18
  809eac:	08055c40 	call	8055c4 <_fflush_r>
  809eb0:	103fef26 	beq	r2,zero,809e70 <__sbprintf+0x74>
  809eb4:	047fffc4 	movi	r17,-1
  809eb8:	003fed06 	br	809e70 <__sbprintf+0x74>

00809ebc <_write_r>:
  809ebc:	2807883a 	mov	r3,r5
  809ec0:	defffe04 	addi	sp,sp,-8
  809ec4:	dc000015 	stw	r16,0(sp)
  809ec8:	300b883a 	mov	r5,r6
  809ecc:	00802074 	movhi	r2,129
  809ed0:	380d883a 	mov	r6,r7
  809ed4:	2021883a 	mov	r16,r4
  809ed8:	1809883a 	mov	r4,r3
  809edc:	dfc00115 	stw	ra,4(sp)
  809ee0:	1012c115 	stw	zero,19204(r2)
  809ee4:	080ef500 	call	80ef50 <write>
  809ee8:	10ffffd8 	cmpnei	r3,r2,-1
  809eec:	18000426 	beq	r3,zero,809f00 <_write_r+0x44>
  809ef0:	dfc00117 	ldw	ra,4(sp)
  809ef4:	dc000017 	ldw	r16,0(sp)
  809ef8:	dec00204 	addi	sp,sp,8
  809efc:	f800283a 	ret
  809f00:	00c02074 	movhi	r3,129
  809f04:	18d2c117 	ldw	r3,19204(r3)
  809f08:	183ff926 	beq	r3,zero,809ef0 <_write_r+0x34>
  809f0c:	80c00015 	stw	r3,0(r16)
  809f10:	dfc00117 	ldw	ra,4(sp)
  809f14:	dc000017 	ldw	r16,0(sp)
  809f18:	dec00204 	addi	sp,sp,8
  809f1c:	f800283a 	ret

00809f20 <_close_r>:
  809f20:	defffe04 	addi	sp,sp,-8
  809f24:	dc000015 	stw	r16,0(sp)
  809f28:	00802074 	movhi	r2,129
  809f2c:	2021883a 	mov	r16,r4
  809f30:	2809883a 	mov	r4,r5
  809f34:	dfc00115 	stw	ra,4(sp)
  809f38:	1012c115 	stw	zero,19204(r2)
  809f3c:	080e2d00 	call	80e2d0 <close>
  809f40:	10ffffd8 	cmpnei	r3,r2,-1
  809f44:	18000426 	beq	r3,zero,809f58 <_close_r+0x38>
  809f48:	dfc00117 	ldw	ra,4(sp)
  809f4c:	dc000017 	ldw	r16,0(sp)
  809f50:	dec00204 	addi	sp,sp,8
  809f54:	f800283a 	ret
  809f58:	00c02074 	movhi	r3,129
  809f5c:	18d2c117 	ldw	r3,19204(r3)
  809f60:	183ff926 	beq	r3,zero,809f48 <_close_r+0x28>
  809f64:	80c00015 	stw	r3,0(r16)
  809f68:	dfc00117 	ldw	ra,4(sp)
  809f6c:	dc000017 	ldw	r16,0(sp)
  809f70:	dec00204 	addi	sp,sp,8
  809f74:	f800283a 	ret

00809f78 <__assert_func>:
  809f78:	00802074 	movhi	r2,129
  809f7c:	120bb617 	ldw	r8,11992(r2)
  809f80:	defffc04 	addi	sp,sp,-16
  809f84:	3807883a 	mov	r3,r7
  809f88:	3005883a 	mov	r2,r6
  809f8c:	dfc00315 	stw	ra,12(sp)
  809f90:	42400317 	ldw	r9,12(r8)
  809f94:	200f883a 	mov	r7,r4
  809f98:	2811883a 	mov	r8,r5
  809f9c:	180d883a 	mov	r6,r3
  809fa0:	10000a26 	beq	r2,zero,809fcc <__assert_func+0x54>
  809fa4:	00c02074 	movhi	r3,129
  809fa8:	18c40804 	addi	r3,r3,4128
  809fac:	01402074 	movhi	r5,129
  809fb0:	29440c04 	addi	r5,r5,4144
  809fb4:	4809883a 	mov	r4,r9
  809fb8:	d8c00115 	stw	r3,4(sp)
  809fbc:	da000015 	stw	r8,0(sp)
  809fc0:	d8800215 	stw	r2,8(sp)
  809fc4:	080a1dc0 	call	80a1dc <fiprintf>
  809fc8:	080a9c80 	call	80a9c8 <abort>
  809fcc:	00c02074 	movhi	r3,129
  809fd0:	18c40b04 	addi	r3,r3,4140
  809fd4:	1805883a 	mov	r2,r3
  809fd8:	003ff406 	br	809fac <__assert_func+0x34>

00809fdc <__assert>:
  809fdc:	deffff04 	addi	sp,sp,-4
  809fe0:	300f883a 	mov	r7,r6
  809fe4:	000d883a 	mov	r6,zero
  809fe8:	dfc00015 	stw	ra,0(sp)
  809fec:	0809f780 	call	809f78 <__assert_func>

00809ff0 <_calloc_r>:
  809ff0:	defffe04 	addi	sp,sp,-8
  809ff4:	dc000015 	stw	r16,0(sp)
  809ff8:	2021883a 	mov	r16,r4
  809ffc:	2809883a 	mov	r4,r5
  80a000:	300b883a 	mov	r5,r6
  80a004:	dfc00115 	stw	ra,4(sp)
  80a008:	08015040 	call	801504 <__mulsi3>
  80a00c:	8009883a 	mov	r4,r16
  80a010:	100b883a 	mov	r5,r2
  80a014:	08065bc0 	call	8065bc <_malloc_r>
  80a018:	1009883a 	mov	r4,r2
  80a01c:	10000c26 	beq	r2,zero,80a050 <_calloc_r+0x60>
  80a020:	11bfff17 	ldw	r6,-4(r2)
  80a024:	00bfff04 	movi	r2,-4
  80a028:	308c703a 	and	r6,r6,r2
  80a02c:	31bfff04 	addi	r6,r6,-4
  80a030:	30800968 	cmpgeui	r2,r6,37
  80a034:	1000151e 	bne	r2,zero,80a08c <_calloc_r+0x9c>
  80a038:	30800530 	cmpltui	r2,r6,20
  80a03c:	10000926 	beq	r2,zero,80a064 <_calloc_r+0x74>
  80a040:	2005883a 	mov	r2,r4
  80a044:	10000015 	stw	zero,0(r2)
  80a048:	10000115 	stw	zero,4(r2)
  80a04c:	10000215 	stw	zero,8(r2)
  80a050:	2005883a 	mov	r2,r4
  80a054:	dfc00117 	ldw	ra,4(sp)
  80a058:	dc000017 	ldw	r16,0(sp)
  80a05c:	dec00204 	addi	sp,sp,8
  80a060:	f800283a 	ret
  80a064:	20000015 	stw	zero,0(r4)
  80a068:	20000115 	stw	zero,4(r4)
  80a06c:	30800728 	cmpgeui	r2,r6,28
  80a070:	10000a26 	beq	r2,zero,80a09c <_calloc_r+0xac>
  80a074:	20000215 	stw	zero,8(r4)
  80a078:	20000315 	stw	zero,12(r4)
  80a07c:	31800920 	cmpeqi	r6,r6,36
  80a080:	3000081e 	bne	r6,zero,80a0a4 <_calloc_r+0xb4>
  80a084:	20800404 	addi	r2,r4,16
  80a088:	003fee06 	br	80a044 <_calloc_r+0x54>
  80a08c:	000b883a 	mov	r5,zero
  80a090:	080709c0 	call	80709c <memset>
  80a094:	1009883a 	mov	r4,r2
  80a098:	003fed06 	br	80a050 <_calloc_r+0x60>
  80a09c:	20800204 	addi	r2,r4,8
  80a0a0:	003fe806 	br	80a044 <_calloc_r+0x54>
  80a0a4:	20000415 	stw	zero,16(r4)
  80a0a8:	20800604 	addi	r2,r4,24
  80a0ac:	20000515 	stw	zero,20(r4)
  80a0b0:	003fe406 	br	80a044 <_calloc_r+0x54>

0080a0b4 <_fclose_r>:
  80a0b4:	defffc04 	addi	sp,sp,-16
  80a0b8:	dfc00315 	stw	ra,12(sp)
  80a0bc:	dc800215 	stw	r18,8(sp)
  80a0c0:	dc400115 	stw	r17,4(sp)
  80a0c4:	dc000015 	stw	r16,0(sp)
  80a0c8:	28000726 	beq	r5,zero,80a0e8 <_fclose_r+0x34>
  80a0cc:	2821883a 	mov	r16,r5
  80a0d0:	2023883a 	mov	r17,r4
  80a0d4:	20000226 	beq	r4,zero,80a0e0 <_fclose_r+0x2c>
  80a0d8:	20800e17 	ldw	r2,56(r4)
  80a0dc:	10002726 	beq	r2,zero,80a17c <_fclose_r+0xc8>
  80a0e0:	8080030f 	ldh	r2,12(r16)
  80a0e4:	1000081e 	bne	r2,zero,80a108 <_fclose_r+0x54>
  80a0e8:	0025883a 	mov	r18,zero
  80a0ec:	9005883a 	mov	r2,r18
  80a0f0:	dfc00317 	ldw	ra,12(sp)
  80a0f4:	dc800217 	ldw	r18,8(sp)
  80a0f8:	dc400117 	ldw	r17,4(sp)
  80a0fc:	dc000017 	ldw	r16,0(sp)
  80a100:	dec00404 	addi	sp,sp,16
  80a104:	f800283a 	ret
  80a108:	800b883a 	mov	r5,r16
  80a10c:	8809883a 	mov	r4,r17
  80a110:	080539c0 	call	80539c <__sflush_r>
  80a114:	80c00b17 	ldw	r3,44(r16)
  80a118:	1025883a 	mov	r18,r2
  80a11c:	18000426 	beq	r3,zero,80a130 <_fclose_r+0x7c>
  80a120:	81400717 	ldw	r5,28(r16)
  80a124:	8809883a 	mov	r4,r17
  80a128:	183ee83a 	callr	r3
  80a12c:	10001716 	blt	r2,zero,80a18c <_fclose_r+0xd8>
  80a130:	8080030b 	ldhu	r2,12(r16)
  80a134:	1080200c 	andi	r2,r2,128
  80a138:	1000181e 	bne	r2,zero,80a19c <_fclose_r+0xe8>
  80a13c:	81400c17 	ldw	r5,48(r16)
  80a140:	28000526 	beq	r5,zero,80a158 <_fclose_r+0xa4>
  80a144:	80801004 	addi	r2,r16,64
  80a148:	28800226 	beq	r5,r2,80a154 <_fclose_r+0xa0>
  80a14c:	8809883a 	mov	r4,r17
  80a150:	0805abc0 	call	805abc <_free_r>
  80a154:	80000c15 	stw	zero,48(r16)
  80a158:	81401117 	ldw	r5,68(r16)
  80a15c:	28000326 	beq	r5,zero,80a16c <_fclose_r+0xb8>
  80a160:	8809883a 	mov	r4,r17
  80a164:	0805abc0 	call	805abc <_free_r>
  80a168:	80001115 	stw	zero,68(r16)
  80a16c:	08059680 	call	805968 <__sfp_lock_acquire>
  80a170:	8000030d 	sth	zero,12(r16)
  80a174:	080596c0 	call	80596c <__sfp_lock_release>
  80a178:	003fdc06 	br	80a0ec <_fclose_r+0x38>
  80a17c:	08059580 	call	805958 <__sinit>
  80a180:	8080030f 	ldh	r2,12(r16)
  80a184:	103fd826 	beq	r2,zero,80a0e8 <_fclose_r+0x34>
  80a188:	003fdf06 	br	80a108 <_fclose_r+0x54>
  80a18c:	8080030b 	ldhu	r2,12(r16)
  80a190:	04bfffc4 	movi	r18,-1
  80a194:	1080200c 	andi	r2,r2,128
  80a198:	103fe826 	beq	r2,zero,80a13c <_fclose_r+0x88>
  80a19c:	81400417 	ldw	r5,16(r16)
  80a1a0:	8809883a 	mov	r4,r17
  80a1a4:	0805abc0 	call	805abc <_free_r>
  80a1a8:	003fe406 	br	80a13c <_fclose_r+0x88>

0080a1ac <fclose>:
  80a1ac:	00802074 	movhi	r2,129
  80a1b0:	200b883a 	mov	r5,r4
  80a1b4:	110bb617 	ldw	r4,11992(r2)
  80a1b8:	080a0b41 	jmpi	80a0b4 <_fclose_r>

0080a1bc <_fiprintf_r>:
  80a1bc:	defffe04 	addi	sp,sp,-8
  80a1c0:	dfc00015 	stw	ra,0(sp)
  80a1c4:	d9c00115 	stw	r7,4(sp)
  80a1c8:	d9c00104 	addi	r7,sp,4
  80a1cc:	080a7340 	call	80a734 <_vfiprintf_r>
  80a1d0:	dfc00017 	ldw	ra,0(sp)
  80a1d4:	dec00204 	addi	sp,sp,8
  80a1d8:	f800283a 	ret

0080a1dc <fiprintf>:
  80a1dc:	defffd04 	addi	sp,sp,-12
  80a1e0:	2005883a 	mov	r2,r4
  80a1e4:	dfc00015 	stw	ra,0(sp)
  80a1e8:	d9800115 	stw	r6,4(sp)
  80a1ec:	d9c00215 	stw	r7,8(sp)
  80a1f0:	00c02074 	movhi	r3,129
  80a1f4:	190bb617 	ldw	r4,11992(r3)
  80a1f8:	280d883a 	mov	r6,r5
  80a1fc:	d9c00104 	addi	r7,sp,4
  80a200:	100b883a 	mov	r5,r2
  80a204:	080a7340 	call	80a734 <_vfiprintf_r>
  80a208:	dfc00017 	ldw	ra,0(sp)
  80a20c:	dec00304 	addi	sp,sp,12
  80a210:	f800283a 	ret

0080a214 <__fputwc>:
  80a214:	defff904 	addi	sp,sp,-28
  80a218:	dcc00415 	stw	r19,16(sp)
  80a21c:	dc800315 	stw	r18,12(sp)
  80a220:	dc000115 	stw	r16,4(sp)
  80a224:	dfc00615 	stw	ra,24(sp)
  80a228:	dd000515 	stw	r20,20(sp)
  80a22c:	dc400215 	stw	r17,8(sp)
  80a230:	2025883a 	mov	r18,r4
  80a234:	2827883a 	mov	r19,r5
  80a238:	3021883a 	mov	r16,r6
  80a23c:	080a5400 	call	80a540 <__locale_mb_cur_max>
  80a240:	10800058 	cmpnei	r2,r2,1
  80a244:	1000071e 	bne	r2,zero,80a264 <__fputwc+0x50>
  80a248:	98bfffc4 	addi	r2,r19,-1
  80a24c:	10803fe8 	cmpgeui	r2,r2,255
  80a250:	1000041e 	bne	r2,zero,80a264 <__fputwc+0x50>
  80a254:	980b883a 	mov	r5,r19
  80a258:	dcc000c5 	stb	r19,3(sp)
  80a25c:	05000044 	movi	r20,1
  80a260:	00000a06 	br	80a28c <__fputwc+0x78>
  80a264:	81c01704 	addi	r7,r16,92
  80a268:	980d883a 	mov	r6,r19
  80a26c:	d94000c4 	addi	r5,sp,3
  80a270:	9009883a 	mov	r4,r18
  80a274:	080a8980 	call	80a898 <_wcrtomb_r>
  80a278:	1029883a 	mov	r20,r2
  80a27c:	10bfffd8 	cmpnei	r2,r2,-1
  80a280:	10003926 	beq	r2,zero,80a368 <__fputwc+0x154>
  80a284:	a0001f26 	beq	r20,zero,80a304 <__fputwc+0xf0>
  80a288:	d94000c3 	ldbu	r5,3(sp)
  80a28c:	0023883a 	mov	r17,zero
  80a290:	00000a06 	br	80a2bc <__fputwc+0xa8>
  80a294:	80800017 	ldw	r2,0(r16)
  80a298:	11400005 	stb	r5,0(r2)
  80a29c:	80c00017 	ldw	r3,0(r16)
  80a2a0:	18c00044 	addi	r3,r3,1
  80a2a4:	80c00015 	stw	r3,0(r16)
  80a2a8:	8c400044 	addi	r17,r17,1
  80a2ac:	d88000c4 	addi	r2,sp,3
  80a2b0:	1447883a 	add	r3,r2,r17
  80a2b4:	8d00132e 	bgeu	r17,r20,80a304 <__fputwc+0xf0>
  80a2b8:	19400003 	ldbu	r5,0(r3)
  80a2bc:	80c00217 	ldw	r3,8(r16)
  80a2c0:	18ffffc4 	addi	r3,r3,-1
  80a2c4:	80c00215 	stw	r3,8(r16)
  80a2c8:	183ff20e 	bge	r3,zero,80a294 <__fputwc+0x80>
  80a2cc:	80800617 	ldw	r2,24(r16)
  80a2d0:	18801616 	blt	r3,r2,80a32c <__fputwc+0x118>
  80a2d4:	80800017 	ldw	r2,0(r16)
  80a2d8:	11400005 	stb	r5,0(r2)
  80a2dc:	80800017 	ldw	r2,0(r16)
  80a2e0:	10c00003 	ldbu	r3,0(r2)
  80a2e4:	10800044 	addi	r2,r2,1
  80a2e8:	18c002a0 	cmpeqi	r3,r3,10
  80a2ec:	1800181e 	bne	r3,zero,80a350 <__fputwc+0x13c>
  80a2f0:	80800015 	stw	r2,0(r16)
  80a2f4:	8c400044 	addi	r17,r17,1
  80a2f8:	d88000c4 	addi	r2,sp,3
  80a2fc:	1447883a 	add	r3,r2,r17
  80a300:	8d3fed36 	bltu	r17,r20,80a2b8 <__fputwc+0xa4>
  80a304:	9829883a 	mov	r20,r19
  80a308:	a005883a 	mov	r2,r20
  80a30c:	dfc00617 	ldw	ra,24(sp)
  80a310:	dd000517 	ldw	r20,20(sp)
  80a314:	dcc00417 	ldw	r19,16(sp)
  80a318:	dc800317 	ldw	r18,12(sp)
  80a31c:	dc400217 	ldw	r17,8(sp)
  80a320:	dc000117 	ldw	r16,4(sp)
  80a324:	dec00704 	addi	sp,sp,28
  80a328:	f800283a 	ret
  80a32c:	29403fcc 	andi	r5,r5,255
  80a330:	800d883a 	mov	r6,r16
  80a334:	9009883a 	mov	r4,r18
  80a338:	080a7380 	call	80a738 <__swbuf_r>
  80a33c:	10ffffe0 	cmpeqi	r3,r2,-1
  80a340:	18c03fcc 	andi	r3,r3,255
  80a344:	183fd826 	beq	r3,zero,80a2a8 <__fputwc+0x94>
  80a348:	053fffc4 	movi	r20,-1
  80a34c:	003fee06 	br	80a308 <__fputwc+0xf4>
  80a350:	800d883a 	mov	r6,r16
  80a354:	01400284 	movi	r5,10
  80a358:	9009883a 	mov	r4,r18
  80a35c:	080a7380 	call	80a738 <__swbuf_r>
  80a360:	10ffffe0 	cmpeqi	r3,r2,-1
  80a364:	003ff606 	br	80a340 <__fputwc+0x12c>
  80a368:	8080030b 	ldhu	r2,12(r16)
  80a36c:	10801014 	ori	r2,r2,64
  80a370:	8080030d 	sth	r2,12(r16)
  80a374:	003fe406 	br	80a308 <__fputwc+0xf4>

0080a378 <_fputwc_r>:
  80a378:	3080030b 	ldhu	r2,12(r6)
  80a37c:	10c8000c 	andi	r3,r2,8192
  80a380:	1800051e 	bne	r3,zero,80a398 <_fputwc_r+0x20>
  80a384:	30c01917 	ldw	r3,100(r6)
  80a388:	10880014 	ori	r2,r2,8192
  80a38c:	3080030d 	sth	r2,12(r6)
  80a390:	18880014 	ori	r2,r3,8192
  80a394:	30801915 	stw	r2,100(r6)
  80a398:	080a2141 	jmpi	80a214 <__fputwc>

0080a39c <fputwc>:
  80a39c:	defffc04 	addi	sp,sp,-16
  80a3a0:	00802074 	movhi	r2,129
  80a3a4:	dc000215 	stw	r16,8(sp)
  80a3a8:	140bb617 	ldw	r16,11992(r2)
  80a3ac:	dfc00315 	stw	ra,12(sp)
  80a3b0:	280d883a 	mov	r6,r5
  80a3b4:	200b883a 	mov	r5,r4
  80a3b8:	80000226 	beq	r16,zero,80a3c4 <fputwc+0x28>
  80a3bc:	80800e17 	ldw	r2,56(r16)
  80a3c0:	10000d26 	beq	r2,zero,80a3f8 <fputwc+0x5c>
  80a3c4:	3080030b 	ldhu	r2,12(r6)
  80a3c8:	10c8000c 	andi	r3,r2,8192
  80a3cc:	1800051e 	bne	r3,zero,80a3e4 <fputwc+0x48>
  80a3d0:	30c01917 	ldw	r3,100(r6)
  80a3d4:	10880014 	ori	r2,r2,8192
  80a3d8:	3080030d 	sth	r2,12(r6)
  80a3dc:	18880014 	ori	r2,r3,8192
  80a3e0:	30801915 	stw	r2,100(r6)
  80a3e4:	8009883a 	mov	r4,r16
  80a3e8:	dfc00317 	ldw	ra,12(sp)
  80a3ec:	dc000217 	ldw	r16,8(sp)
  80a3f0:	dec00404 	addi	sp,sp,16
  80a3f4:	080a2141 	jmpi	80a214 <__fputwc>
  80a3f8:	d9000015 	stw	r4,0(sp)
  80a3fc:	8009883a 	mov	r4,r16
  80a400:	d9800115 	stw	r6,4(sp)
  80a404:	08059580 	call	805958 <__sinit>
  80a408:	d9800117 	ldw	r6,4(sp)
  80a40c:	d9400017 	ldw	r5,0(sp)
  80a410:	003fec06 	br	80a3c4 <fputwc+0x28>

0080a414 <_fstat_r>:
  80a414:	2807883a 	mov	r3,r5
  80a418:	defffe04 	addi	sp,sp,-8
  80a41c:	dc000015 	stw	r16,0(sp)
  80a420:	00802074 	movhi	r2,129
  80a424:	300b883a 	mov	r5,r6
  80a428:	2021883a 	mov	r16,r4
  80a42c:	1809883a 	mov	r4,r3
  80a430:	dfc00115 	stw	ra,4(sp)
  80a434:	1012c115 	stw	zero,19204(r2)
  80a438:	080e44c0 	call	80e44c <fstat>
  80a43c:	10ffffd8 	cmpnei	r3,r2,-1
  80a440:	18000426 	beq	r3,zero,80a454 <_fstat_r+0x40>
  80a444:	dfc00117 	ldw	ra,4(sp)
  80a448:	dc000017 	ldw	r16,0(sp)
  80a44c:	dec00204 	addi	sp,sp,8
  80a450:	f800283a 	ret
  80a454:	00c02074 	movhi	r3,129
  80a458:	18d2c117 	ldw	r3,19204(r3)
  80a45c:	183ff926 	beq	r3,zero,80a444 <_fstat_r+0x30>
  80a460:	80c00015 	stw	r3,0(r16)
  80a464:	dfc00117 	ldw	ra,4(sp)
  80a468:	dc000017 	ldw	r16,0(sp)
  80a46c:	dec00204 	addi	sp,sp,8
  80a470:	f800283a 	ret

0080a474 <_isatty_r>:
  80a474:	defffe04 	addi	sp,sp,-8
  80a478:	dc000015 	stw	r16,0(sp)
  80a47c:	00802074 	movhi	r2,129
  80a480:	2021883a 	mov	r16,r4
  80a484:	2809883a 	mov	r4,r5
  80a488:	dfc00115 	stw	ra,4(sp)
  80a48c:	1012c115 	stw	zero,19204(r2)
  80a490:	080e5640 	call	80e564 <isatty>
  80a494:	10ffffd8 	cmpnei	r3,r2,-1
  80a498:	18000426 	beq	r3,zero,80a4ac <_isatty_r+0x38>
  80a49c:	dfc00117 	ldw	ra,4(sp)
  80a4a0:	dc000017 	ldw	r16,0(sp)
  80a4a4:	dec00204 	addi	sp,sp,8
  80a4a8:	f800283a 	ret
  80a4ac:	00c02074 	movhi	r3,129
  80a4b0:	18d2c117 	ldw	r3,19204(r3)
  80a4b4:	183ff926 	beq	r3,zero,80a49c <_isatty_r+0x28>
  80a4b8:	80c00015 	stw	r3,0(r16)
  80a4bc:	dfc00117 	ldw	ra,4(sp)
  80a4c0:	dc000017 	ldw	r16,0(sp)
  80a4c4:	dec00204 	addi	sp,sp,8
  80a4c8:	f800283a 	ret

0080a4cc <_setlocale_r>:
  80a4cc:	30001626 	beq	r6,zero,80a528 <_setlocale_r+0x5c>
  80a4d0:	01402074 	movhi	r5,129
  80a4d4:	defffe04 	addi	sp,sp,-8
  80a4d8:	29441904 	addi	r5,r5,4196
  80a4dc:	3009883a 	mov	r4,r6
  80a4e0:	dc000015 	stw	r16,0(sp)
  80a4e4:	dfc00115 	stw	ra,4(sp)
  80a4e8:	3021883a 	mov	r16,r6
  80a4ec:	080a67c0 	call	80a67c <strcmp>
  80a4f0:	1000061e 	bne	r2,zero,80a50c <_setlocale_r+0x40>
  80a4f4:	00802074 	movhi	r2,129
  80a4f8:	10841804 	addi	r2,r2,4192
  80a4fc:	dfc00117 	ldw	ra,4(sp)
  80a500:	dc000017 	ldw	r16,0(sp)
  80a504:	dec00204 	addi	sp,sp,8
  80a508:	f800283a 	ret
  80a50c:	80800003 	ldbu	r2,0(r16)
  80a510:	10bfef44 	addi	r2,r2,-67
  80a514:	10000726 	beq	r2,zero,80a534 <_setlocale_r+0x68>
  80a518:	80800003 	ldbu	r2,0(r16)
  80a51c:	103ff526 	beq	r2,zero,80a4f4 <_setlocale_r+0x28>
  80a520:	0005883a 	mov	r2,zero
  80a524:	003ff506 	br	80a4fc <_setlocale_r+0x30>
  80a528:	00802074 	movhi	r2,129
  80a52c:	10841804 	addi	r2,r2,4192
  80a530:	f800283a 	ret
  80a534:	80800043 	ldbu	r2,1(r16)
  80a538:	103fee26 	beq	r2,zero,80a4f4 <_setlocale_r+0x28>
  80a53c:	003ff606 	br	80a518 <_setlocale_r+0x4c>

0080a540 <__locale_mb_cur_max>:
  80a540:	00802074 	movhi	r2,129
  80a544:	10871d07 	ldb	r2,7284(r2)
  80a548:	f800283a 	ret

0080a54c <setlocale>:
  80a54c:	00c02074 	movhi	r3,129
  80a550:	2005883a 	mov	r2,r4
  80a554:	190bb617 	ldw	r4,11992(r3)
  80a558:	280d883a 	mov	r6,r5
  80a55c:	100b883a 	mov	r5,r2
  80a560:	080a4cc1 	jmpi	80a4cc <_setlocale_r>

0080a564 <_lseek_r>:
  80a564:	2807883a 	mov	r3,r5
  80a568:	defffe04 	addi	sp,sp,-8
  80a56c:	dc000015 	stw	r16,0(sp)
  80a570:	300b883a 	mov	r5,r6
  80a574:	00802074 	movhi	r2,129
  80a578:	380d883a 	mov	r6,r7
  80a57c:	2021883a 	mov	r16,r4
  80a580:	1809883a 	mov	r4,r3
  80a584:	dfc00115 	stw	ra,4(sp)
  80a588:	1012c115 	stw	zero,19204(r2)
  80a58c:	080e8a40 	call	80e8a4 <lseek>
  80a590:	10ffffd8 	cmpnei	r3,r2,-1
  80a594:	18000426 	beq	r3,zero,80a5a8 <_lseek_r+0x44>
  80a598:	dfc00117 	ldw	ra,4(sp)
  80a59c:	dc000017 	ldw	r16,0(sp)
  80a5a0:	dec00204 	addi	sp,sp,8
  80a5a4:	f800283a 	ret
  80a5a8:	00c02074 	movhi	r3,129
  80a5ac:	18d2c117 	ldw	r3,19204(r3)
  80a5b0:	183ff926 	beq	r3,zero,80a598 <_lseek_r+0x34>
  80a5b4:	80c00015 	stw	r3,0(r16)
  80a5b8:	dfc00117 	ldw	ra,4(sp)
  80a5bc:	dc000017 	ldw	r16,0(sp)
  80a5c0:	dec00204 	addi	sp,sp,8
  80a5c4:	f800283a 	ret

0080a5c8 <_mbtowc_r>:
  80a5c8:	00802074 	movhi	r2,129
  80a5cc:	10870c17 	ldw	r2,7216(r2)
  80a5d0:	1000683a 	jmp	r2

0080a5d4 <__ascii_mbtowc>:
  80a5d4:	deffff04 	addi	sp,sp,-4
  80a5d8:	28000826 	beq	r5,zero,80a5fc <__ascii_mbtowc+0x28>
  80a5dc:	30000926 	beq	r6,zero,80a604 <__ascii_mbtowc+0x30>
  80a5e0:	38000b26 	beq	r7,zero,80a610 <__ascii_mbtowc+0x3c>
  80a5e4:	30800003 	ldbu	r2,0(r6)
  80a5e8:	28800015 	stw	r2,0(r5)
  80a5ec:	30800003 	ldbu	r2,0(r6)
  80a5f0:	1004c03a 	cmpne	r2,r2,zero
  80a5f4:	dec00104 	addi	sp,sp,4
  80a5f8:	f800283a 	ret
  80a5fc:	d80b883a 	mov	r5,sp
  80a600:	303ff71e 	bne	r6,zero,80a5e0 <__ascii_mbtowc+0xc>
  80a604:	0005883a 	mov	r2,zero
  80a608:	dec00104 	addi	sp,sp,4
  80a60c:	f800283a 	ret
  80a610:	00bfff84 	movi	r2,-2
  80a614:	003ff706 	br	80a5f4 <__ascii_mbtowc+0x20>

0080a618 <_read_r>:
  80a618:	2807883a 	mov	r3,r5
  80a61c:	defffe04 	addi	sp,sp,-8
  80a620:	dc000015 	stw	r16,0(sp)
  80a624:	300b883a 	mov	r5,r6
  80a628:	00802074 	movhi	r2,129
  80a62c:	380d883a 	mov	r6,r7
  80a630:	2021883a 	mov	r16,r4
  80a634:	1809883a 	mov	r4,r3
  80a638:	dfc00115 	stw	ra,4(sp)
  80a63c:	1012c115 	stw	zero,19204(r2)
  80a640:	080ea840 	call	80ea84 <read>
  80a644:	10ffffd8 	cmpnei	r3,r2,-1
  80a648:	18000426 	beq	r3,zero,80a65c <_read_r+0x44>
  80a64c:	dfc00117 	ldw	ra,4(sp)
  80a650:	dc000017 	ldw	r16,0(sp)
  80a654:	dec00204 	addi	sp,sp,8
  80a658:	f800283a 	ret
  80a65c:	00c02074 	movhi	r3,129
  80a660:	18d2c117 	ldw	r3,19204(r3)
  80a664:	183ff926 	beq	r3,zero,80a64c <_read_r+0x34>
  80a668:	80c00015 	stw	r3,0(r16)
  80a66c:	dfc00117 	ldw	ra,4(sp)
  80a670:	dc000017 	ldw	r16,0(sp)
  80a674:	dec00204 	addi	sp,sp,8
  80a678:	f800283a 	ret

0080a67c <strcmp>:
  80a67c:	2144b03a 	or	r2,r4,r5
  80a680:	108000cc 	andi	r2,r2,3
  80a684:	1000141e 	bne	r2,zero,80a6d8 <strcmp+0x5c>
  80a688:	20800017 	ldw	r2,0(r4)
  80a68c:	28c00017 	ldw	r3,0(r5)
  80a690:	10c0111e 	bne	r2,r3,80a6d8 <strcmp+0x5c>
  80a694:	01ffbff4 	movhi	r7,65279
  80a698:	01a02074 	movhi	r6,32897
  80a69c:	39ffbfc4 	addi	r7,r7,-257
  80a6a0:	31a02004 	addi	r6,r6,-32640
  80a6a4:	00000306 	br	80a6b4 <strcmp+0x38>
  80a6a8:	20800017 	ldw	r2,0(r4)
  80a6ac:	28c00017 	ldw	r3,0(r5)
  80a6b0:	10c0091e 	bne	r2,r3,80a6d8 <strcmp+0x5c>
  80a6b4:	11c7883a 	add	r3,r2,r7
  80a6b8:	0084303a 	nor	r2,zero,r2
  80a6bc:	1884703a 	and	r2,r3,r2
  80a6c0:	1184703a 	and	r2,r2,r6
  80a6c4:	21000104 	addi	r4,r4,4
  80a6c8:	29400104 	addi	r5,r5,4
  80a6cc:	103ff626 	beq	r2,zero,80a6a8 <strcmp+0x2c>
  80a6d0:	0005883a 	mov	r2,zero
  80a6d4:	f800283a 	ret
  80a6d8:	20c00003 	ldbu	r3,0(r4)
  80a6dc:	18803fcc 	andi	r2,r3,255
  80a6e0:	1080201c 	xori	r2,r2,128
  80a6e4:	10bfe004 	addi	r2,r2,-128
  80a6e8:	1000071e 	bne	r2,zero,80a708 <strcmp+0x8c>
  80a6ec:	00000a06 	br	80a718 <strcmp+0x9c>
  80a6f0:	20c00003 	ldbu	r3,0(r4)
  80a6f4:	29400044 	addi	r5,r5,1
  80a6f8:	18803fcc 	andi	r2,r3,255
  80a6fc:	1080201c 	xori	r2,r2,128
  80a700:	10bfe004 	addi	r2,r2,-128
  80a704:	10000726 	beq	r2,zero,80a724 <strcmp+0xa8>
  80a708:	29800007 	ldb	r6,0(r5)
  80a70c:	21000044 	addi	r4,r4,1
  80a710:	30bff726 	beq	r6,r2,80a6f0 <strcmp+0x74>
  80a714:	18803fcc 	andi	r2,r3,255
  80a718:	28c00003 	ldbu	r3,0(r5)
  80a71c:	10c5c83a 	sub	r2,r2,r3
  80a720:	f800283a 	ret
  80a724:	28c00003 	ldbu	r3,0(r5)
  80a728:	0005883a 	mov	r2,zero
  80a72c:	10c5c83a 	sub	r2,r2,r3
  80a730:	f800283a 	ret

0080a734 <_vfiprintf_r>:
  80a734:	0808acc1 	jmpi	808acc <___vfiprintf_internal_r>

0080a738 <__swbuf_r>:
  80a738:	defffb04 	addi	sp,sp,-20
  80a73c:	dcc00315 	stw	r19,12(sp)
  80a740:	dc400115 	stw	r17,4(sp)
  80a744:	dc000015 	stw	r16,0(sp)
  80a748:	dfc00415 	stw	ra,16(sp)
  80a74c:	dc800215 	stw	r18,8(sp)
  80a750:	2027883a 	mov	r19,r4
  80a754:	2823883a 	mov	r17,r5
  80a758:	3021883a 	mov	r16,r6
  80a75c:	20000226 	beq	r4,zero,80a768 <__swbuf_r+0x30>
  80a760:	20800e17 	ldw	r2,56(r4)
  80a764:	10003e26 	beq	r2,zero,80a860 <__swbuf_r+0x128>
  80a768:	80800617 	ldw	r2,24(r16)
  80a76c:	80c0030b 	ldhu	r3,12(r16)
  80a770:	80800215 	stw	r2,8(r16)
  80a774:	1880020c 	andi	r2,r3,8
  80a778:	10001f26 	beq	r2,zero,80a7f8 <__swbuf_r+0xc0>
  80a77c:	80800417 	ldw	r2,16(r16)
  80a780:	10001d26 	beq	r2,zero,80a7f8 <__swbuf_r+0xc0>
  80a784:	1948000c 	andi	r5,r3,8192
  80a788:	8c803fcc 	andi	r18,r17,255
  80a78c:	28002326 	beq	r5,zero,80a81c <__swbuf_r+0xe4>
  80a790:	80c00017 	ldw	r3,0(r16)
  80a794:	81000517 	ldw	r4,20(r16)
  80a798:	1885c83a 	sub	r2,r3,r2
  80a79c:	1100290e 	bge	r2,r4,80a844 <__swbuf_r+0x10c>
  80a7a0:	10800044 	addi	r2,r2,1
  80a7a4:	81400217 	ldw	r5,8(r16)
  80a7a8:	19000044 	addi	r4,r3,1
  80a7ac:	81000015 	stw	r4,0(r16)
  80a7b0:	297fffc4 	addi	r5,r5,-1
  80a7b4:	81400215 	stw	r5,8(r16)
  80a7b8:	1c400005 	stb	r17,0(r3)
  80a7bc:	80c00517 	ldw	r3,20(r16)
  80a7c0:	18802926 	beq	r3,r2,80a868 <__swbuf_r+0x130>
  80a7c4:	8080030b 	ldhu	r2,12(r16)
  80a7c8:	1080004c 	andi	r2,r2,1
  80a7cc:	10000226 	beq	r2,zero,80a7d8 <__swbuf_r+0xa0>
  80a7d0:	90800298 	cmpnei	r2,r18,10
  80a7d4:	10002426 	beq	r2,zero,80a868 <__swbuf_r+0x130>
  80a7d8:	9005883a 	mov	r2,r18
  80a7dc:	dfc00417 	ldw	ra,16(sp)
  80a7e0:	dcc00317 	ldw	r19,12(sp)
  80a7e4:	dc800217 	ldw	r18,8(sp)
  80a7e8:	dc400117 	ldw	r17,4(sp)
  80a7ec:	dc000017 	ldw	r16,0(sp)
  80a7f0:	dec00504 	addi	sp,sp,20
  80a7f4:	f800283a 	ret
  80a7f8:	800b883a 	mov	r5,r16
  80a7fc:	9809883a 	mov	r4,r19
  80a800:	08038d00 	call	8038d0 <__swsetup_r>
  80a804:	10001c1e 	bne	r2,zero,80a878 <__swbuf_r+0x140>
  80a808:	80c0030b 	ldhu	r3,12(r16)
  80a80c:	80800417 	ldw	r2,16(r16)
  80a810:	8c803fcc 	andi	r18,r17,255
  80a814:	1948000c 	andi	r5,r3,8192
  80a818:	283fdd1e 	bne	r5,zero,80a790 <__swbuf_r+0x58>
  80a81c:	81001917 	ldw	r4,100(r16)
  80a820:	18c80014 	ori	r3,r3,8192
  80a824:	0177ffc4 	movi	r5,-8193
  80a828:	2148703a 	and	r4,r4,r5
  80a82c:	80c0030d 	sth	r3,12(r16)
  80a830:	80c00017 	ldw	r3,0(r16)
  80a834:	81001915 	stw	r4,100(r16)
  80a838:	81000517 	ldw	r4,20(r16)
  80a83c:	1885c83a 	sub	r2,r3,r2
  80a840:	113fd716 	blt	r2,r4,80a7a0 <__swbuf_r+0x68>
  80a844:	800b883a 	mov	r5,r16
  80a848:	9809883a 	mov	r4,r19
  80a84c:	08055c40 	call	8055c4 <_fflush_r>
  80a850:	1000091e 	bne	r2,zero,80a878 <__swbuf_r+0x140>
  80a854:	80c00017 	ldw	r3,0(r16)
  80a858:	00800044 	movi	r2,1
  80a85c:	003fd106 	br	80a7a4 <__swbuf_r+0x6c>
  80a860:	08059580 	call	805958 <__sinit>
  80a864:	003fc006 	br	80a768 <__swbuf_r+0x30>
  80a868:	800b883a 	mov	r5,r16
  80a86c:	9809883a 	mov	r4,r19
  80a870:	08055c40 	call	8055c4 <_fflush_r>
  80a874:	103fd826 	beq	r2,zero,80a7d8 <__swbuf_r+0xa0>
  80a878:	04bfffc4 	movi	r18,-1
  80a87c:	003fd606 	br	80a7d8 <__swbuf_r+0xa0>

0080a880 <__swbuf>:
  80a880:	00c02074 	movhi	r3,129
  80a884:	2005883a 	mov	r2,r4
  80a888:	190bb617 	ldw	r4,11992(r3)
  80a88c:	280d883a 	mov	r6,r5
  80a890:	100b883a 	mov	r5,r2
  80a894:	080a7381 	jmpi	80a738 <__swbuf_r>

0080a898 <_wcrtomb_r>:
  80a898:	defffa04 	addi	sp,sp,-24
  80a89c:	dc400415 	stw	r17,16(sp)
  80a8a0:	dc000315 	stw	r16,12(sp)
  80a8a4:	00802074 	movhi	r2,129
  80a8a8:	dfc00515 	stw	ra,20(sp)
  80a8ac:	10870b17 	ldw	r2,7212(r2)
  80a8b0:	2023883a 	mov	r17,r4
  80a8b4:	3821883a 	mov	r16,r7
  80a8b8:	28000826 	beq	r5,zero,80a8dc <_wcrtomb_r+0x44>
  80a8bc:	103ee83a 	callr	r2
  80a8c0:	10ffffd8 	cmpnei	r3,r2,-1
  80a8c4:	18000a26 	beq	r3,zero,80a8f0 <_wcrtomb_r+0x58>
  80a8c8:	dfc00517 	ldw	ra,20(sp)
  80a8cc:	dc400417 	ldw	r17,16(sp)
  80a8d0:	dc000317 	ldw	r16,12(sp)
  80a8d4:	dec00604 	addi	sp,sp,24
  80a8d8:	f800283a 	ret
  80a8dc:	000d883a 	mov	r6,zero
  80a8e0:	d9400084 	addi	r5,sp,2
  80a8e4:	103ee83a 	callr	r2
  80a8e8:	10ffffd8 	cmpnei	r3,r2,-1
  80a8ec:	183ff61e 	bne	r3,zero,80a8c8 <_wcrtomb_r+0x30>
  80a8f0:	00802284 	movi	r2,138
  80a8f4:	80000015 	stw	zero,0(r16)
  80a8f8:	88800015 	stw	r2,0(r17)
  80a8fc:	00bfffc4 	movi	r2,-1
  80a900:	003ff106 	br	80a8c8 <_wcrtomb_r+0x30>

0080a904 <wcrtomb>:
  80a904:	defffa04 	addi	sp,sp,-24
  80a908:	00c02074 	movhi	r3,129
  80a90c:	dc400415 	stw	r17,16(sp)
  80a910:	dc000315 	stw	r16,12(sp)
  80a914:	1c4bb617 	ldw	r17,11992(r3)
  80a918:	dfc00515 	stw	ra,20(sp)
  80a91c:	00c02074 	movhi	r3,129
  80a920:	18c70b17 	ldw	r3,7212(r3)
  80a924:	3021883a 	mov	r16,r6
  80a928:	20000c26 	beq	r4,zero,80a95c <wcrtomb+0x58>
  80a92c:	280d883a 	mov	r6,r5
  80a930:	800f883a 	mov	r7,r16
  80a934:	200b883a 	mov	r5,r4
  80a938:	8809883a 	mov	r4,r17
  80a93c:	183ee83a 	callr	r3
  80a940:	10ffffd8 	cmpnei	r3,r2,-1
  80a944:	18000c26 	beq	r3,zero,80a978 <wcrtomb+0x74>
  80a948:	dfc00517 	ldw	ra,20(sp)
  80a94c:	dc400417 	ldw	r17,16(sp)
  80a950:	dc000317 	ldw	r16,12(sp)
  80a954:	dec00604 	addi	sp,sp,24
  80a958:	f800283a 	ret
  80a95c:	300f883a 	mov	r7,r6
  80a960:	d9400084 	addi	r5,sp,2
  80a964:	000d883a 	mov	r6,zero
  80a968:	8809883a 	mov	r4,r17
  80a96c:	183ee83a 	callr	r3
  80a970:	10ffffd8 	cmpnei	r3,r2,-1
  80a974:	183ff41e 	bne	r3,zero,80a948 <wcrtomb+0x44>
  80a978:	00802284 	movi	r2,138
  80a97c:	80000015 	stw	zero,0(r16)
  80a980:	88800015 	stw	r2,0(r17)
  80a984:	00bfffc4 	movi	r2,-1
  80a988:	003fef06 	br	80a948 <wcrtomb+0x44>

0080a98c <_wctomb_r>:
  80a98c:	00802074 	movhi	r2,129
  80a990:	10870b17 	ldw	r2,7212(r2)
  80a994:	1000683a 	jmp	r2

0080a998 <__ascii_wctomb>:
  80a998:	28000926 	beq	r5,zero,80a9c0 <__ascii_wctomb+0x28>
  80a99c:	30804030 	cmpltui	r2,r6,256
  80a9a0:	10000326 	beq	r2,zero,80a9b0 <__ascii_wctomb+0x18>
  80a9a4:	29800005 	stb	r6,0(r5)
  80a9a8:	00800044 	movi	r2,1
  80a9ac:	f800283a 	ret
  80a9b0:	00802284 	movi	r2,138
  80a9b4:	20800015 	stw	r2,0(r4)
  80a9b8:	00bfffc4 	movi	r2,-1
  80a9bc:	f800283a 	ret
  80a9c0:	0005883a 	mov	r2,zero
  80a9c4:	f800283a 	ret

0080a9c8 <abort>:
  80a9c8:	deffff04 	addi	sp,sp,-4
  80a9cc:	01000184 	movi	r4,6
  80a9d0:	dfc00015 	stw	ra,0(sp)
  80a9d4:	080ac400 	call	80ac40 <raise>
  80a9d8:	01000044 	movi	r4,1
  80a9dc:	080e3d80 	call	80e3d8 <_exit>

0080a9e0 <_init_signal_r.part.0>:
  80a9e0:	defffe04 	addi	sp,sp,-8
  80a9e4:	01402004 	movi	r5,128
  80a9e8:	dc000015 	stw	r16,0(sp)
  80a9ec:	dfc00115 	stw	ra,4(sp)
  80a9f0:	2021883a 	mov	r16,r4
  80a9f4:	08065bc0 	call	8065bc <_malloc_r>
  80a9f8:	8080b715 	stw	r2,732(r16)
  80a9fc:	10000926 	beq	r2,zero,80aa24 <_init_signal_r.part.0+0x44>
  80aa00:	10c02004 	addi	r3,r2,128
  80aa04:	10000015 	stw	zero,0(r2)
  80aa08:	10800104 	addi	r2,r2,4
  80aa0c:	10fffd1e 	bne	r2,r3,80aa04 <_init_signal_r.part.0+0x24>
  80aa10:	0005883a 	mov	r2,zero
  80aa14:	dfc00117 	ldw	ra,4(sp)
  80aa18:	dc000017 	ldw	r16,0(sp)
  80aa1c:	dec00204 	addi	sp,sp,8
  80aa20:	f800283a 	ret
  80aa24:	00bfffc4 	movi	r2,-1
  80aa28:	003ffa06 	br	80aa14 <_init_signal_r.part.0+0x34>

0080aa2c <_init_signal_r>:
  80aa2c:	2080b717 	ldw	r2,732(r4)
  80aa30:	10000226 	beq	r2,zero,80aa3c <_init_signal_r+0x10>
  80aa34:	0005883a 	mov	r2,zero
  80aa38:	f800283a 	ret
  80aa3c:	080a9e01 	jmpi	80a9e0 <_init_signal_r.part.0>

0080aa40 <_signal_r>:
  80aa40:	defffc04 	addi	sp,sp,-16
  80aa44:	dc000215 	stw	r16,8(sp)
  80aa48:	dfc00315 	stw	ra,12(sp)
  80aa4c:	28800830 	cmpltui	r2,r5,32
  80aa50:	2021883a 	mov	r16,r4
  80aa54:	10000a26 	beq	r2,zero,80aa80 <_signal_r+0x40>
  80aa58:	2080b717 	ldw	r2,732(r4)
  80aa5c:	10000f26 	beq	r2,zero,80aa9c <_signal_r+0x5c>
  80aa60:	280a90ba 	slli	r5,r5,2
  80aa64:	114b883a 	add	r5,r2,r5
  80aa68:	28800017 	ldw	r2,0(r5)
  80aa6c:	29800015 	stw	r6,0(r5)
  80aa70:	dfc00317 	ldw	ra,12(sp)
  80aa74:	dc000217 	ldw	r16,8(sp)
  80aa78:	dec00404 	addi	sp,sp,16
  80aa7c:	f800283a 	ret
  80aa80:	00800584 	movi	r2,22
  80aa84:	20800015 	stw	r2,0(r4)
  80aa88:	00bfffc4 	movi	r2,-1
  80aa8c:	dfc00317 	ldw	ra,12(sp)
  80aa90:	dc000217 	ldw	r16,8(sp)
  80aa94:	dec00404 	addi	sp,sp,16
  80aa98:	f800283a 	ret
  80aa9c:	d9800115 	stw	r6,4(sp)
  80aaa0:	d9400015 	stw	r5,0(sp)
  80aaa4:	080a9e00 	call	80a9e0 <_init_signal_r.part.0>
  80aaa8:	1000041e 	bne	r2,zero,80aabc <_signal_r+0x7c>
  80aaac:	8080b717 	ldw	r2,732(r16)
  80aab0:	d9800117 	ldw	r6,4(sp)
  80aab4:	d9400017 	ldw	r5,0(sp)
  80aab8:	003fe906 	br	80aa60 <_signal_r+0x20>
  80aabc:	00bfffc4 	movi	r2,-1
  80aac0:	003feb06 	br	80aa70 <_signal_r+0x30>

0080aac4 <_raise_r>:
  80aac4:	28800830 	cmpltui	r2,r5,32
  80aac8:	10002b26 	beq	r2,zero,80ab78 <_raise_r+0xb4>
  80aacc:	2080b717 	ldw	r2,732(r4)
  80aad0:	defffd04 	addi	sp,sp,-12
  80aad4:	dc000115 	stw	r16,4(sp)
  80aad8:	dfc00215 	stw	ra,8(sp)
  80aadc:	2821883a 	mov	r16,r5
  80aae0:	10001026 	beq	r2,zero,80ab24 <_raise_r+0x60>
  80aae4:	280690ba 	slli	r3,r5,2
  80aae8:	10c5883a 	add	r2,r2,r3
  80aaec:	10c00017 	ldw	r3,0(r2)
  80aaf0:	18000c26 	beq	r3,zero,80ab24 <_raise_r+0x60>
  80aaf4:	19400060 	cmpeqi	r5,r3,1
  80aaf8:	28001a1e 	bne	r5,zero,80ab64 <_raise_r+0xa0>
  80aafc:	197fffd8 	cmpnei	r5,r3,-1
  80ab00:	28001126 	beq	r5,zero,80ab48 <_raise_r+0x84>
  80ab04:	10000015 	stw	zero,0(r2)
  80ab08:	8009883a 	mov	r4,r16
  80ab0c:	183ee83a 	callr	r3
  80ab10:	0005883a 	mov	r2,zero
  80ab14:	dfc00217 	ldw	ra,8(sp)
  80ab18:	dc000117 	ldw	r16,4(sp)
  80ab1c:	dec00304 	addi	sp,sp,12
  80ab20:	f800283a 	ret
  80ab24:	d9000015 	stw	r4,0(sp)
  80ab28:	080acf40 	call	80acf4 <_getpid_r>
  80ab2c:	d9000017 	ldw	r4,0(sp)
  80ab30:	800d883a 	mov	r6,r16
  80ab34:	100b883a 	mov	r5,r2
  80ab38:	dfc00217 	ldw	ra,8(sp)
  80ab3c:	dc000117 	ldw	r16,4(sp)
  80ab40:	dec00304 	addi	sp,sp,12
  80ab44:	080ac941 	jmpi	80ac94 <_kill_r>
  80ab48:	00800584 	movi	r2,22
  80ab4c:	20800015 	stw	r2,0(r4)
  80ab50:	00800044 	movi	r2,1
  80ab54:	dfc00217 	ldw	ra,8(sp)
  80ab58:	dc000117 	ldw	r16,4(sp)
  80ab5c:	dec00304 	addi	sp,sp,12
  80ab60:	f800283a 	ret
  80ab64:	0005883a 	mov	r2,zero
  80ab68:	dfc00217 	ldw	ra,8(sp)
  80ab6c:	dc000117 	ldw	r16,4(sp)
  80ab70:	dec00304 	addi	sp,sp,12
  80ab74:	f800283a 	ret
  80ab78:	00800584 	movi	r2,22
  80ab7c:	20800015 	stw	r2,0(r4)
  80ab80:	00bfffc4 	movi	r2,-1
  80ab84:	f800283a 	ret

0080ab88 <__sigtramp_r>:
  80ab88:	28800830 	cmpltui	r2,r5,32
  80ab8c:	10002a26 	beq	r2,zero,80ac38 <__sigtramp_r+0xb0>
  80ab90:	2080b717 	ldw	r2,732(r4)
  80ab94:	defffd04 	addi	sp,sp,-12
  80ab98:	dc400115 	stw	r17,4(sp)
  80ab9c:	dfc00215 	stw	ra,8(sp)
  80aba0:	2023883a 	mov	r17,r4
  80aba4:	10001526 	beq	r2,zero,80abfc <__sigtramp_r+0x74>
  80aba8:	280690ba 	slli	r3,r5,2
  80abac:	10c5883a 	add	r2,r2,r3
  80abb0:	10c00017 	ldw	r3,0(r2)
  80abb4:	18000c26 	beq	r3,zero,80abe8 <__sigtramp_r+0x60>
  80abb8:	193fffe0 	cmpeqi	r4,r3,-1
  80abbc:	20001a1e 	bne	r4,zero,80ac28 <__sigtramp_r+0xa0>
  80abc0:	19000060 	cmpeqi	r4,r3,1
  80abc4:	2000131e 	bne	r4,zero,80ac14 <__sigtramp_r+0x8c>
  80abc8:	10000015 	stw	zero,0(r2)
  80abcc:	2809883a 	mov	r4,r5
  80abd0:	183ee83a 	callr	r3
  80abd4:	0005883a 	mov	r2,zero
  80abd8:	dfc00217 	ldw	ra,8(sp)
  80abdc:	dc400117 	ldw	r17,4(sp)
  80abe0:	dec00304 	addi	sp,sp,12
  80abe4:	f800283a 	ret
  80abe8:	00800044 	movi	r2,1
  80abec:	dfc00217 	ldw	ra,8(sp)
  80abf0:	dc400117 	ldw	r17,4(sp)
  80abf4:	dec00304 	addi	sp,sp,12
  80abf8:	f800283a 	ret
  80abfc:	d9400015 	stw	r5,0(sp)
  80ac00:	080a9e00 	call	80a9e0 <_init_signal_r.part.0>
  80ac04:	10000a1e 	bne	r2,zero,80ac30 <__sigtramp_r+0xa8>
  80ac08:	8880b717 	ldw	r2,732(r17)
  80ac0c:	d9400017 	ldw	r5,0(sp)
  80ac10:	003fe506 	br	80aba8 <__sigtramp_r+0x20>
  80ac14:	008000c4 	movi	r2,3
  80ac18:	dfc00217 	ldw	ra,8(sp)
  80ac1c:	dc400117 	ldw	r17,4(sp)
  80ac20:	dec00304 	addi	sp,sp,12
  80ac24:	f800283a 	ret
  80ac28:	00800084 	movi	r2,2
  80ac2c:	003fea06 	br	80abd8 <__sigtramp_r+0x50>
  80ac30:	00bfffc4 	movi	r2,-1
  80ac34:	003fe806 	br	80abd8 <__sigtramp_r+0x50>
  80ac38:	00bfffc4 	movi	r2,-1
  80ac3c:	f800283a 	ret

0080ac40 <raise>:
  80ac40:	00802074 	movhi	r2,129
  80ac44:	200b883a 	mov	r5,r4
  80ac48:	110bb617 	ldw	r4,11992(r2)
  80ac4c:	080aac41 	jmpi	80aac4 <_raise_r>

0080ac50 <signal>:
  80ac50:	00c02074 	movhi	r3,129
  80ac54:	2005883a 	mov	r2,r4
  80ac58:	190bb617 	ldw	r4,11992(r3)
  80ac5c:	280d883a 	mov	r6,r5
  80ac60:	100b883a 	mov	r5,r2
  80ac64:	080aa401 	jmpi	80aa40 <_signal_r>

0080ac68 <_init_signal>:
  80ac68:	00802074 	movhi	r2,129
  80ac6c:	110bb617 	ldw	r4,11992(r2)
  80ac70:	2080b717 	ldw	r2,732(r4)
  80ac74:	10000226 	beq	r2,zero,80ac80 <_init_signal+0x18>
  80ac78:	0005883a 	mov	r2,zero
  80ac7c:	f800283a 	ret
  80ac80:	080a9e01 	jmpi	80a9e0 <_init_signal_r.part.0>

0080ac84 <__sigtramp>:
  80ac84:	00802074 	movhi	r2,129
  80ac88:	200b883a 	mov	r5,r4
  80ac8c:	110bb617 	ldw	r4,11992(r2)
  80ac90:	080ab881 	jmpi	80ab88 <__sigtramp_r>

0080ac94 <_kill_r>:
  80ac94:	2807883a 	mov	r3,r5
  80ac98:	defffe04 	addi	sp,sp,-8
  80ac9c:	dc000015 	stw	r16,0(sp)
  80aca0:	00802074 	movhi	r2,129
  80aca4:	300b883a 	mov	r5,r6
  80aca8:	2021883a 	mov	r16,r4
  80acac:	1809883a 	mov	r4,r3
  80acb0:	dfc00115 	stw	ra,4(sp)
  80acb4:	1012c115 	stw	zero,19204(r2)
  80acb8:	080e6500 	call	80e650 <kill>
  80acbc:	10ffffd8 	cmpnei	r3,r2,-1
  80acc0:	18000426 	beq	r3,zero,80acd4 <_kill_r+0x40>
  80acc4:	dfc00117 	ldw	ra,4(sp)
  80acc8:	dc000017 	ldw	r16,0(sp)
  80accc:	dec00204 	addi	sp,sp,8
  80acd0:	f800283a 	ret
  80acd4:	00c02074 	movhi	r3,129
  80acd8:	18d2c117 	ldw	r3,19204(r3)
  80acdc:	183ff926 	beq	r3,zero,80acc4 <_kill_r+0x30>
  80ace0:	80c00015 	stw	r3,0(r16)
  80ace4:	dfc00117 	ldw	ra,4(sp)
  80ace8:	dc000017 	ldw	r16,0(sp)
  80acec:	dec00204 	addi	sp,sp,8
  80acf0:	f800283a 	ret

0080acf4 <_getpid_r>:
  80acf4:	080e5081 	jmpi	80e508 <getpid>

0080acf8 <__udivdi3>:
  80acf8:	defff504 	addi	sp,sp,-44
  80acfc:	dd000515 	stw	r20,20(sp)
  80ad00:	dc800315 	stw	r18,12(sp)
  80ad04:	dfc00a15 	stw	ra,40(sp)
  80ad08:	df000915 	stw	fp,36(sp)
  80ad0c:	ddc00815 	stw	r23,32(sp)
  80ad10:	dd800715 	stw	r22,28(sp)
  80ad14:	dd400615 	stw	r21,24(sp)
  80ad18:	dcc00415 	stw	r19,16(sp)
  80ad1c:	dc400215 	stw	r17,8(sp)
  80ad20:	dc000115 	stw	r16,4(sp)
  80ad24:	2029883a 	mov	r20,r4
  80ad28:	2825883a 	mov	r18,r5
  80ad2c:	3800461e 	bne	r7,zero,80ae48 <__udivdi3+0x150>
  80ad30:	3823883a 	mov	r17,r7
  80ad34:	3021883a 	mov	r16,r6
  80ad38:	2027883a 	mov	r19,r4
  80ad3c:	2980622e 	bgeu	r5,r6,80aec8 <__udivdi3+0x1d0>
  80ad40:	00bfffd4 	movui	r2,65535
  80ad44:	282b883a 	mov	r21,r5
  80ad48:	1180aa2e 	bgeu	r2,r6,80aff4 <__udivdi3+0x2fc>
  80ad4c:	00804034 	movhi	r2,256
  80ad50:	30815936 	bltu	r6,r2,80b2b8 <__udivdi3+0x5c0>
  80ad54:	3006d63a 	srli	r3,r6,24
  80ad58:	04400604 	movi	r17,24
  80ad5c:	00802074 	movhi	r2,129
  80ad60:	1885883a 	add	r2,r3,r2
  80ad64:	11033503 	ldbu	r4,3284(r2)
  80ad68:	00800804 	movi	r2,32
  80ad6c:	2463883a 	add	r17,r4,r17
  80ad70:	1449c83a 	sub	r4,r2,r17
  80ad74:	14400526 	beq	r2,r17,80ad8c <__udivdi3+0x94>
  80ad78:	9106983a 	sll	r3,r18,r4
  80ad7c:	a462d83a 	srl	r17,r20,r17
  80ad80:	3120983a 	sll	r16,r6,r4
  80ad84:	a126983a 	sll	r19,r20,r4
  80ad88:	88eab03a 	or	r21,r17,r3
  80ad8c:	802cd43a 	srli	r22,r16,16
  80ad90:	a809883a 	mov	r4,r21
  80ad94:	853fffcc 	andi	r20,r16,65535
  80ad98:	b00b883a 	mov	r5,r22
  80ad9c:	080ba300 	call	80ba30 <__umodsi3>
  80ada0:	a809883a 	mov	r4,r21
  80ada4:	b00b883a 	mov	r5,r22
  80ada8:	1025883a 	mov	r18,r2
  80adac:	080b9cc0 	call	80b9cc <__udivsi3>
  80adb0:	a009883a 	mov	r4,r20
  80adb4:	100b883a 	mov	r5,r2
  80adb8:	102b883a 	mov	r21,r2
  80adbc:	08015040 	call	801504 <__mulsi3>
  80adc0:	9024943a 	slli	r18,r18,16
  80adc4:	9808d43a 	srli	r4,r19,16
  80adc8:	9108b03a 	or	r4,r18,r4
  80adcc:	2080052e 	bgeu	r4,r2,80ade4 <__udivdi3+0xec>
  80add0:	2409883a 	add	r4,r4,r16
  80add4:	a8ffffc4 	addi	r3,r21,-1
  80add8:	24000136 	bltu	r4,r16,80ade0 <__udivdi3+0xe8>
  80addc:	20814736 	bltu	r4,r2,80b2fc <__udivdi3+0x604>
  80ade0:	182b883a 	mov	r21,r3
  80ade4:	20a3c83a 	sub	r17,r4,r2
  80ade8:	8809883a 	mov	r4,r17
  80adec:	b00b883a 	mov	r5,r22
  80adf0:	080ba300 	call	80ba30 <__umodsi3>
  80adf4:	8809883a 	mov	r4,r17
  80adf8:	1023883a 	mov	r17,r2
  80adfc:	b00b883a 	mov	r5,r22
  80ae00:	8822943a 	slli	r17,r17,16
  80ae04:	080b9cc0 	call	80b9cc <__udivsi3>
  80ae08:	100b883a 	mov	r5,r2
  80ae0c:	a009883a 	mov	r4,r20
  80ae10:	9cffffcc 	andi	r19,r19,65535
  80ae14:	1025883a 	mov	r18,r2
  80ae18:	8ce6b03a 	or	r19,r17,r19
  80ae1c:	08015040 	call	801504 <__mulsi3>
  80ae20:	9880052e 	bgeu	r19,r2,80ae38 <__udivdi3+0x140>
  80ae24:	84e7883a 	add	r19,r16,r19
  80ae28:	90ffffc4 	addi	r3,r18,-1
  80ae2c:	9c000136 	bltu	r19,r16,80ae34 <__udivdi3+0x13c>
  80ae30:	98813036 	bltu	r19,r2,80b2f4 <__udivdi3+0x5fc>
  80ae34:	1825883a 	mov	r18,r3
  80ae38:	a80c943a 	slli	r6,r21,16
  80ae3c:	0007883a 	mov	r3,zero
  80ae40:	3484b03a 	or	r2,r6,r18
  80ae44:	00000306 	br	80ae54 <__udivdi3+0x15c>
  80ae48:	29c00e2e 	bgeu	r5,r7,80ae84 <__udivdi3+0x18c>
  80ae4c:	0007883a 	mov	r3,zero
  80ae50:	0005883a 	mov	r2,zero
  80ae54:	dfc00a17 	ldw	ra,40(sp)
  80ae58:	df000917 	ldw	fp,36(sp)
  80ae5c:	ddc00817 	ldw	r23,32(sp)
  80ae60:	dd800717 	ldw	r22,28(sp)
  80ae64:	dd400617 	ldw	r21,24(sp)
  80ae68:	dd000517 	ldw	r20,20(sp)
  80ae6c:	dcc00417 	ldw	r19,16(sp)
  80ae70:	dc800317 	ldw	r18,12(sp)
  80ae74:	dc400217 	ldw	r17,8(sp)
  80ae78:	dc000117 	ldw	r16,4(sp)
  80ae7c:	dec00b04 	addi	sp,sp,44
  80ae80:	f800283a 	ret
  80ae84:	00bfffd4 	movui	r2,65535
  80ae88:	11c05f2e 	bgeu	r2,r7,80b008 <__udivdi3+0x310>
  80ae8c:	00804034 	movhi	r2,256
  80ae90:	3880fb36 	bltu	r7,r2,80b280 <__udivdi3+0x588>
  80ae94:	3806d63a 	srli	r3,r7,24
  80ae98:	01000604 	movi	r4,24
  80ae9c:	00802074 	movhi	r2,129
  80aea0:	1885883a 	add	r2,r3,r2
  80aea4:	10c33503 	ldbu	r3,3284(r2)
  80aea8:	00800804 	movi	r2,32
  80aeac:	1907883a 	add	r3,r3,r4
  80aeb0:	10e3c83a 	sub	r17,r2,r3
  80aeb4:	10c0901e 	bne	r2,r3,80b0f8 <__udivdi3+0x400>
  80aeb8:	3c80f636 	bltu	r7,r18,80b294 <__udivdi3+0x59c>
  80aebc:	a185403a 	cmpgeu	r2,r20,r6
  80aec0:	0007883a 	mov	r3,zero
  80aec4:	003fe306 	br	80ae54 <__udivdi3+0x15c>
  80aec8:	3000041e 	bne	r6,zero,80aedc <__udivdi3+0x1e4>
  80aecc:	000b883a 	mov	r5,zero
  80aed0:	01000044 	movi	r4,1
  80aed4:	080b9cc0 	call	80b9cc <__udivsi3>
  80aed8:	1021883a 	mov	r16,r2
  80aedc:	00bfffd4 	movui	r2,65535
  80aee0:	14003f2e 	bgeu	r2,r16,80afe0 <__udivdi3+0x2e8>
  80aee4:	00804034 	movhi	r2,256
  80aee8:	8080f036 	bltu	r16,r2,80b2ac <__udivdi3+0x5b4>
  80aeec:	8006d63a 	srli	r3,r16,24
  80aef0:	04400604 	movi	r17,24
  80aef4:	00802074 	movhi	r2,129
  80aef8:	1885883a 	add	r2,r3,r2
  80aefc:	10833503 	ldbu	r2,3284(r2)
  80af00:	00c00804 	movi	r3,32
  80af04:	1463883a 	add	r17,r2,r17
  80af08:	1c45c83a 	sub	r2,r3,r17
  80af0c:	1c40431e 	bne	r3,r17,80b01c <__udivdi3+0x324>
  80af10:	802cd43a 	srli	r22,r16,16
  80af14:	9423c83a 	sub	r17,r18,r16
  80af18:	853fffcc 	andi	r20,r16,65535
  80af1c:	00c00044 	movi	r3,1
  80af20:	b00b883a 	mov	r5,r22
  80af24:	8809883a 	mov	r4,r17
  80af28:	d8c00015 	stw	r3,0(sp)
  80af2c:	080ba300 	call	80ba30 <__umodsi3>
  80af30:	b00b883a 	mov	r5,r22
  80af34:	8809883a 	mov	r4,r17
  80af38:	1025883a 	mov	r18,r2
  80af3c:	080b9cc0 	call	80b9cc <__udivsi3>
  80af40:	1009883a 	mov	r4,r2
  80af44:	a00b883a 	mov	r5,r20
  80af48:	102b883a 	mov	r21,r2
  80af4c:	08015040 	call	801504 <__mulsi3>
  80af50:	9024943a 	slli	r18,r18,16
  80af54:	9808d43a 	srli	r4,r19,16
  80af58:	d8c00017 	ldw	r3,0(sp)
  80af5c:	9108b03a 	or	r4,r18,r4
  80af60:	2080052e 	bgeu	r4,r2,80af78 <__udivdi3+0x280>
  80af64:	2409883a 	add	r4,r4,r16
  80af68:	a97fffc4 	addi	r5,r21,-1
  80af6c:	24000136 	bltu	r4,r16,80af74 <__udivdi3+0x27c>
  80af70:	2080e536 	bltu	r4,r2,80b308 <__udivdi3+0x610>
  80af74:	282b883a 	mov	r21,r5
  80af78:	20a3c83a 	sub	r17,r4,r2
  80af7c:	8809883a 	mov	r4,r17
  80af80:	b00b883a 	mov	r5,r22
  80af84:	d8c00015 	stw	r3,0(sp)
  80af88:	080ba300 	call	80ba30 <__umodsi3>
  80af8c:	8809883a 	mov	r4,r17
  80af90:	1023883a 	mov	r17,r2
  80af94:	b00b883a 	mov	r5,r22
  80af98:	8822943a 	slli	r17,r17,16
  80af9c:	080b9cc0 	call	80b9cc <__udivsi3>
  80afa0:	a00b883a 	mov	r5,r20
  80afa4:	1009883a 	mov	r4,r2
  80afa8:	9cffffcc 	andi	r19,r19,65535
  80afac:	1025883a 	mov	r18,r2
  80afb0:	8ce6b03a 	or	r19,r17,r19
  80afb4:	08015040 	call	801504 <__mulsi3>
  80afb8:	d8c00017 	ldw	r3,0(sp)
  80afbc:	9880052e 	bgeu	r19,r2,80afd4 <__udivdi3+0x2dc>
  80afc0:	84e7883a 	add	r19,r16,r19
  80afc4:	913fffc4 	addi	r4,r18,-1
  80afc8:	9c000136 	bltu	r19,r16,80afd0 <__udivdi3+0x2d8>
  80afcc:	9880c736 	bltu	r19,r2,80b2ec <__udivdi3+0x5f4>
  80afd0:	2025883a 	mov	r18,r4
  80afd4:	a80c943a 	slli	r6,r21,16
  80afd8:	3484b03a 	or	r2,r6,r18
  80afdc:	003f9d06 	br	80ae54 <__udivdi3+0x15c>
  80afe0:	80804030 	cmpltui	r2,r16,256
  80afe4:	1000b71e 	bne	r2,zero,80b2c4 <__udivdi3+0x5cc>
  80afe8:	8006d23a 	srli	r3,r16,8
  80afec:	04400204 	movi	r17,8
  80aff0:	003fc006 	br	80aef4 <__udivdi3+0x1fc>
  80aff4:	30804030 	cmpltui	r2,r6,256
  80aff8:	1000a41e 	bne	r2,zero,80b28c <__udivdi3+0x594>
  80affc:	3006d23a 	srli	r3,r6,8
  80b000:	04400204 	movi	r17,8
  80b004:	003f5506 	br	80ad5c <__udivdi3+0x64>
  80b008:	38804030 	cmpltui	r2,r7,256
  80b00c:	1000a41e 	bne	r2,zero,80b2a0 <__udivdi3+0x5a8>
  80b010:	3806d23a 	srli	r3,r7,8
  80b014:	01000204 	movi	r4,8
  80b018:	003fa006 	br	80ae9c <__udivdi3+0x1a4>
  80b01c:	80a0983a 	sll	r16,r16,r2
  80b020:	946ed83a 	srl	r23,r18,r17
  80b024:	9086983a 	sll	r3,r18,r2
  80b028:	802cd43a 	srli	r22,r16,16
  80b02c:	a462d83a 	srl	r17,r20,r17
  80b030:	b809883a 	mov	r4,r23
  80b034:	b00b883a 	mov	r5,r22
  80b038:	88eab03a 	or	r21,r17,r3
  80b03c:	a0a6983a 	sll	r19,r20,r2
  80b040:	080ba300 	call	80ba30 <__umodsi3>
  80b044:	b809883a 	mov	r4,r23
  80b048:	b00b883a 	mov	r5,r22
  80b04c:	1025883a 	mov	r18,r2
  80b050:	853fffcc 	andi	r20,r16,65535
  80b054:	080b9cc0 	call	80b9cc <__udivsi3>
  80b058:	a009883a 	mov	r4,r20
  80b05c:	100b883a 	mov	r5,r2
  80b060:	102f883a 	mov	r23,r2
  80b064:	08015040 	call	801504 <__mulsi3>
  80b068:	9024943a 	slli	r18,r18,16
  80b06c:	a808d43a 	srli	r4,r21,16
  80b070:	9108b03a 	or	r4,r18,r4
  80b074:	2080062e 	bgeu	r4,r2,80b090 <__udivdi3+0x398>
  80b078:	2409883a 	add	r4,r4,r16
  80b07c:	b8ffffc4 	addi	r3,r23,-1
  80b080:	24009836 	bltu	r4,r16,80b2e4 <__udivdi3+0x5ec>
  80b084:	2080972e 	bgeu	r4,r2,80b2e4 <__udivdi3+0x5ec>
  80b088:	bdffff84 	addi	r23,r23,-2
  80b08c:	2409883a 	add	r4,r4,r16
  80b090:	20a3c83a 	sub	r17,r4,r2
  80b094:	8809883a 	mov	r4,r17
  80b098:	b00b883a 	mov	r5,r22
  80b09c:	080ba300 	call	80ba30 <__umodsi3>
  80b0a0:	1025883a 	mov	r18,r2
  80b0a4:	8809883a 	mov	r4,r17
  80b0a8:	b00b883a 	mov	r5,r22
  80b0ac:	9024943a 	slli	r18,r18,16
  80b0b0:	080b9cc0 	call	80b9cc <__udivsi3>
  80b0b4:	100b883a 	mov	r5,r2
  80b0b8:	a009883a 	mov	r4,r20
  80b0bc:	ac7fffcc 	andi	r17,r21,65535
  80b0c0:	1039883a 	mov	fp,r2
  80b0c4:	9462b03a 	or	r17,r18,r17
  80b0c8:	08015040 	call	801504 <__mulsi3>
  80b0cc:	8880062e 	bgeu	r17,r2,80b0e8 <__udivdi3+0x3f0>
  80b0d0:	8c23883a 	add	r17,r17,r16
  80b0d4:	e0ffffc4 	addi	r3,fp,-1
  80b0d8:	8c007e36 	bltu	r17,r16,80b2d4 <__udivdi3+0x5dc>
  80b0dc:	88807d2e 	bgeu	r17,r2,80b2d4 <__udivdi3+0x5dc>
  80b0e0:	e73fff84 	addi	fp,fp,-2
  80b0e4:	8c23883a 	add	r17,r17,r16
  80b0e8:	b806943a 	slli	r3,r23,16
  80b0ec:	88a3c83a 	sub	r17,r17,r2
  80b0f0:	1f06b03a 	or	r3,r3,fp
  80b0f4:	003f8a06 	br	80af20 <__udivdi3+0x228>
  80b0f8:	30e6d83a 	srl	r19,r6,r3
  80b0fc:	3c4e983a 	sll	r7,r7,r17
  80b100:	90e0d83a 	srl	r16,r18,r3
  80b104:	a0c4d83a 	srl	r2,r20,r3
  80b108:	99e6b03a 	or	r19,r19,r7
  80b10c:	9446983a 	sll	r3,r18,r17
  80b110:	9838d43a 	srli	fp,r19,16
  80b114:	8009883a 	mov	r4,r16
  80b118:	10eab03a 	or	r21,r2,r3
  80b11c:	e00b883a 	mov	r5,fp
  80b120:	346c983a 	sll	r22,r6,r17
  80b124:	dd400015 	stw	r21,0(sp)
  80b128:	080ba300 	call	80ba30 <__umodsi3>
  80b12c:	8009883a 	mov	r4,r16
  80b130:	e00b883a 	mov	r5,fp
  80b134:	102f883a 	mov	r23,r2
  80b138:	9cbfffcc 	andi	r18,r19,65535
  80b13c:	080b9cc0 	call	80b9cc <__udivsi3>
  80b140:	9009883a 	mov	r4,r18
  80b144:	100b883a 	mov	r5,r2
  80b148:	1021883a 	mov	r16,r2
  80b14c:	08015040 	call	801504 <__mulsi3>
  80b150:	b82e943a 	slli	r23,r23,16
  80b154:	a808d43a 	srli	r4,r21,16
  80b158:	b908b03a 	or	r4,r23,r4
  80b15c:	2080062e 	bgeu	r4,r2,80b178 <__udivdi3+0x480>
  80b160:	24c9883a 	add	r4,r4,r19
  80b164:	817fffc4 	addi	r5,r16,-1
  80b168:	24c05c36 	bltu	r4,r19,80b2dc <__udivdi3+0x5e4>
  80b16c:	20805b2e 	bgeu	r4,r2,80b2dc <__udivdi3+0x5e4>
  80b170:	843fff84 	addi	r16,r16,-2
  80b174:	24c9883a 	add	r4,r4,r19
  80b178:	20abc83a 	sub	r21,r4,r2
  80b17c:	a809883a 	mov	r4,r21
  80b180:	e00b883a 	mov	r5,fp
  80b184:	080ba300 	call	80ba30 <__umodsi3>
  80b188:	a809883a 	mov	r4,r21
  80b18c:	e00b883a 	mov	r5,fp
  80b190:	102b883a 	mov	r21,r2
  80b194:	080b9cc0 	call	80b9cc <__udivsi3>
  80b198:	9009883a 	mov	r4,r18
  80b19c:	100b883a 	mov	r5,r2
  80b1a0:	102f883a 	mov	r23,r2
  80b1a4:	08015040 	call	801504 <__mulsi3>
  80b1a8:	d8c00017 	ldw	r3,0(sp)
  80b1ac:	a82a943a 	slli	r21,r21,16
  80b1b0:	1cbfffcc 	andi	r18,r3,65535
  80b1b4:	aca4b03a 	or	r18,r21,r18
  80b1b8:	9080062e 	bgeu	r18,r2,80b1d4 <__udivdi3+0x4dc>
  80b1bc:	94e5883a 	add	r18,r18,r19
  80b1c0:	b8ffffc4 	addi	r3,r23,-1
  80b1c4:	94c04136 	bltu	r18,r19,80b2cc <__udivdi3+0x5d4>
  80b1c8:	9080402e 	bgeu	r18,r2,80b2cc <__udivdi3+0x5d4>
  80b1cc:	bdffff84 	addi	r23,r23,-2
  80b1d0:	94e5883a 	add	r18,r18,r19
  80b1d4:	8020943a 	slli	r16,r16,16
  80b1d8:	bd7fffcc 	andi	r21,r23,65535
  80b1dc:	b73fffcc 	andi	fp,r22,65535
  80b1e0:	85e0b03a 	or	r16,r16,r23
  80b1e4:	8026d43a 	srli	r19,r16,16
  80b1e8:	a809883a 	mov	r4,r21
  80b1ec:	e00b883a 	mov	r5,fp
  80b1f0:	b02cd43a 	srli	r22,r22,16
  80b1f4:	90a5c83a 	sub	r18,r18,r2
  80b1f8:	08015040 	call	801504 <__mulsi3>
  80b1fc:	9809883a 	mov	r4,r19
  80b200:	e00b883a 	mov	r5,fp
  80b204:	102f883a 	mov	r23,r2
  80b208:	08015040 	call	801504 <__mulsi3>
  80b20c:	9809883a 	mov	r4,r19
  80b210:	b00b883a 	mov	r5,r22
  80b214:	1027883a 	mov	r19,r2
  80b218:	08015040 	call	801504 <__mulsi3>
  80b21c:	a809883a 	mov	r4,r21
  80b220:	b00b883a 	mov	r5,r22
  80b224:	102b883a 	mov	r21,r2
  80b228:	08015040 	call	801504 <__mulsi3>
  80b22c:	b806d43a 	srli	r3,r23,16
  80b230:	14c5883a 	add	r2,r2,r19
  80b234:	1887883a 	add	r3,r3,r2
  80b238:	1cc0022e 	bgeu	r3,r19,80b244 <__udivdi3+0x54c>
  80b23c:	00800074 	movhi	r2,1
  80b240:	a8ab883a 	add	r21,r21,r2
  80b244:	1804d43a 	srli	r2,r3,16
  80b248:	156b883a 	add	r21,r2,r21
  80b24c:	95400936 	bltu	r18,r21,80b274 <__udivdi3+0x57c>
  80b250:	95400326 	beq	r18,r21,80b260 <__udivdi3+0x568>
  80b254:	8005883a 	mov	r2,r16
  80b258:	0007883a 	mov	r3,zero
  80b25c:	003efd06 	br	80ae54 <__udivdi3+0x15c>
  80b260:	1806943a 	slli	r3,r3,16
  80b264:	a44c983a 	sll	r6,r20,r17
  80b268:	bdffffcc 	andi	r23,r23,65535
  80b26c:	1dc7883a 	add	r3,r3,r23
  80b270:	30fff82e 	bgeu	r6,r3,80b254 <__udivdi3+0x55c>
  80b274:	80bfffc4 	addi	r2,r16,-1
  80b278:	0007883a 	mov	r3,zero
  80b27c:	003ef506 	br	80ae54 <__udivdi3+0x15c>
  80b280:	3806d43a 	srli	r3,r7,16
  80b284:	01000404 	movi	r4,16
  80b288:	003f0406 	br	80ae9c <__udivdi3+0x1a4>
  80b28c:	3007883a 	mov	r3,r6
  80b290:	003eb206 	br	80ad5c <__udivdi3+0x64>
  80b294:	0007883a 	mov	r3,zero
  80b298:	00800044 	movi	r2,1
  80b29c:	003eed06 	br	80ae54 <__udivdi3+0x15c>
  80b2a0:	3807883a 	mov	r3,r7
  80b2a4:	0009883a 	mov	r4,zero
  80b2a8:	003efc06 	br	80ae9c <__udivdi3+0x1a4>
  80b2ac:	8006d43a 	srli	r3,r16,16
  80b2b0:	04400404 	movi	r17,16
  80b2b4:	003f0f06 	br	80aef4 <__udivdi3+0x1fc>
  80b2b8:	3006d43a 	srli	r3,r6,16
  80b2bc:	04400404 	movi	r17,16
  80b2c0:	003ea606 	br	80ad5c <__udivdi3+0x64>
  80b2c4:	8007883a 	mov	r3,r16
  80b2c8:	003f0a06 	br	80aef4 <__udivdi3+0x1fc>
  80b2cc:	182f883a 	mov	r23,r3
  80b2d0:	003fc006 	br	80b1d4 <__udivdi3+0x4dc>
  80b2d4:	1839883a 	mov	fp,r3
  80b2d8:	003f8306 	br	80b0e8 <__udivdi3+0x3f0>
  80b2dc:	2821883a 	mov	r16,r5
  80b2e0:	003fa506 	br	80b178 <__udivdi3+0x480>
  80b2e4:	182f883a 	mov	r23,r3
  80b2e8:	003f6906 	br	80b090 <__udivdi3+0x398>
  80b2ec:	94bfff84 	addi	r18,r18,-2
  80b2f0:	003f3806 	br	80afd4 <__udivdi3+0x2dc>
  80b2f4:	94bfff84 	addi	r18,r18,-2
  80b2f8:	003ecf06 	br	80ae38 <__udivdi3+0x140>
  80b2fc:	ad7fff84 	addi	r21,r21,-2
  80b300:	2409883a 	add	r4,r4,r16
  80b304:	003eb706 	br	80ade4 <__udivdi3+0xec>
  80b308:	ad7fff84 	addi	r21,r21,-2
  80b30c:	2409883a 	add	r4,r4,r16
  80b310:	003f1906 	br	80af78 <__udivdi3+0x280>

0080b314 <__umoddi3>:
  80b314:	defff304 	addi	sp,sp,-52
  80b318:	dc400415 	stw	r17,16(sp)
  80b31c:	dc000315 	stw	r16,12(sp)
  80b320:	dfc00c15 	stw	ra,48(sp)
  80b324:	df000b15 	stw	fp,44(sp)
  80b328:	ddc00a15 	stw	r23,40(sp)
  80b32c:	dd800915 	stw	r22,36(sp)
  80b330:	dd400815 	stw	r21,32(sp)
  80b334:	dd000715 	stw	r20,28(sp)
  80b338:	dcc00615 	stw	r19,24(sp)
  80b33c:	dc800515 	stw	r18,20(sp)
  80b340:	2823883a 	mov	r17,r5
  80b344:	2021883a 	mov	r16,r4
  80b348:	38003b1e 	bne	r7,zero,80b438 <__umoddi3+0x124>
  80b34c:	3825883a 	mov	r18,r7
  80b350:	3029883a 	mov	r20,r6
  80b354:	2027883a 	mov	r19,r4
  80b358:	29805b2e 	bgeu	r5,r6,80b4c8 <__umoddi3+0x1b4>
  80b35c:	00bfffd4 	movui	r2,65535
  80b360:	282d883a 	mov	r22,r5
  80b364:	11809a2e 	bgeu	r2,r6,80b5d0 <__umoddi3+0x2bc>
  80b368:	00804034 	movhi	r2,256
  80b36c:	30814436 	bltu	r6,r2,80b880 <__umoddi3+0x56c>
  80b370:	3006d63a 	srli	r3,r6,24
  80b374:	04800604 	movi	r18,24
  80b378:	00802074 	movhi	r2,129
  80b37c:	1885883a 	add	r2,r3,r2
  80b380:	11033503 	ldbu	r4,3284(r2)
  80b384:	00800804 	movi	r2,32
  80b388:	2489883a 	add	r4,r4,r18
  80b38c:	1125c83a 	sub	r18,r2,r4
  80b390:	11000526 	beq	r2,r4,80b3a8 <__umoddi3+0x94>
  80b394:	8ca2983a 	sll	r17,r17,r18
  80b398:	8108d83a 	srl	r4,r16,r4
  80b39c:	34a8983a 	sll	r20,r6,r18
  80b3a0:	84a6983a 	sll	r19,r16,r18
  80b3a4:	246cb03a 	or	r22,r4,r17
  80b3a8:	a02ed43a 	srli	r23,r20,16
  80b3ac:	b009883a 	mov	r4,r22
  80b3b0:	a57fffcc 	andi	r21,r20,65535
  80b3b4:	b80b883a 	mov	r5,r23
  80b3b8:	080ba300 	call	80ba30 <__umodsi3>
  80b3bc:	b80b883a 	mov	r5,r23
  80b3c0:	b009883a 	mov	r4,r22
  80b3c4:	1023883a 	mov	r17,r2
  80b3c8:	080b9cc0 	call	80b9cc <__udivsi3>
  80b3cc:	a809883a 	mov	r4,r21
  80b3d0:	100b883a 	mov	r5,r2
  80b3d4:	08015040 	call	801504 <__mulsi3>
  80b3d8:	8822943a 	slli	r17,r17,16
  80b3dc:	9808d43a 	srli	r4,r19,16
  80b3e0:	8908b03a 	or	r4,r17,r4
  80b3e4:	2080042e 	bgeu	r4,r2,80b3f8 <__umoddi3+0xe4>
  80b3e8:	2509883a 	add	r4,r4,r20
  80b3ec:	25000236 	bltu	r4,r20,80b3f8 <__umoddi3+0xe4>
  80b3f0:	2080012e 	bgeu	r4,r2,80b3f8 <__umoddi3+0xe4>
  80b3f4:	2509883a 	add	r4,r4,r20
  80b3f8:	20a1c83a 	sub	r16,r4,r2
  80b3fc:	b80b883a 	mov	r5,r23
  80b400:	8009883a 	mov	r4,r16
  80b404:	080ba300 	call	80ba30 <__umodsi3>
  80b408:	b80b883a 	mov	r5,r23
  80b40c:	8009883a 	mov	r4,r16
  80b410:	1023883a 	mov	r17,r2
  80b414:	080b9cc0 	call	80b9cc <__udivsi3>
  80b418:	8822943a 	slli	r17,r17,16
  80b41c:	100b883a 	mov	r5,r2
  80b420:	a809883a 	mov	r4,r21
  80b424:	08015040 	call	801504 <__mulsi3>
  80b428:	98ffffcc 	andi	r3,r19,65535
  80b42c:	88c6b03a 	or	r3,r17,r3
  80b430:	18805e2e 	bgeu	r3,r2,80b5ac <__umoddi3+0x298>
  80b434:	00005906 	br	80b59c <__umoddi3+0x288>
  80b438:	2005883a 	mov	r2,r4
  80b43c:	29c00d2e 	bgeu	r5,r7,80b474 <__umoddi3+0x160>
  80b440:	2807883a 	mov	r3,r5
  80b444:	dfc00c17 	ldw	ra,48(sp)
  80b448:	df000b17 	ldw	fp,44(sp)
  80b44c:	ddc00a17 	ldw	r23,40(sp)
  80b450:	dd800917 	ldw	r22,36(sp)
  80b454:	dd400817 	ldw	r21,32(sp)
  80b458:	dd000717 	ldw	r20,28(sp)
  80b45c:	dcc00617 	ldw	r19,24(sp)
  80b460:	dc800517 	ldw	r18,20(sp)
  80b464:	dc400417 	ldw	r17,16(sp)
  80b468:	dc000317 	ldw	r16,12(sp)
  80b46c:	dec00d04 	addi	sp,sp,52
  80b470:	f800283a 	ret
  80b474:	013fffd4 	movui	r4,65535
  80b478:	2807883a 	mov	r3,r5
  80b47c:	21c0592e 	bgeu	r4,r7,80b5e4 <__umoddi3+0x2d0>
  80b480:	01004034 	movhi	r4,256
  80b484:	39010336 	bltu	r7,r4,80b894 <__umoddi3+0x580>
  80b488:	3808d63a 	srli	r4,r7,24
  80b48c:	02000604 	movi	r8,24
  80b490:	01402074 	movhi	r5,129
  80b494:	214b883a 	add	r5,r4,r5
  80b498:	2d033503 	ldbu	r20,3284(r5)
  80b49c:	01000804 	movi	r4,32
  80b4a0:	a229883a 	add	r20,r20,r8
  80b4a4:	252bc83a 	sub	r21,r4,r20
  80b4a8:	2500531e 	bne	r4,r20,80b5f8 <__umoddi3+0x2e4>
  80b4ac:	3c400136 	bltu	r7,r17,80b4b4 <__umoddi3+0x1a0>
  80b4b0:	81bfe436 	bltu	r16,r6,80b444 <__umoddi3+0x130>
  80b4b4:	8185c83a 	sub	r2,r16,r6
  80b4b8:	89cfc83a 	sub	r7,r17,r7
  80b4bc:	8087803a 	cmpltu	r3,r16,r2
  80b4c0:	38c7c83a 	sub	r3,r7,r3
  80b4c4:	003fdf06 	br	80b444 <__umoddi3+0x130>
  80b4c8:	3000041e 	bne	r6,zero,80b4dc <__umoddi3+0x1c8>
  80b4cc:	000b883a 	mov	r5,zero
  80b4d0:	01000044 	movi	r4,1
  80b4d4:	080b9cc0 	call	80b9cc <__udivsi3>
  80b4d8:	1029883a 	mov	r20,r2
  80b4dc:	00bfffd4 	movui	r2,65535
  80b4e0:	1500362e 	bgeu	r2,r20,80b5bc <__umoddi3+0x2a8>
  80b4e4:	00804034 	movhi	r2,256
  80b4e8:	a080ed36 	bltu	r20,r2,80b8a0 <__umoddi3+0x58c>
  80b4ec:	a006d63a 	srli	r3,r20,24
  80b4f0:	04800604 	movi	r18,24
  80b4f4:	00802074 	movhi	r2,129
  80b4f8:	1885883a 	add	r2,r3,r2
  80b4fc:	15833503 	ldbu	r22,3284(r2)
  80b500:	00800804 	movi	r2,32
  80b504:	b4ad883a 	add	r22,r22,r18
  80b508:	15a5c83a 	sub	r18,r2,r22
  80b50c:	1580a51e 	bne	r2,r22,80b7a4 <__umoddi3+0x490>
  80b510:	a02ed43a 	srli	r23,r20,16
  80b514:	8d23c83a 	sub	r17,r17,r20
  80b518:	a57fffcc 	andi	r21,r20,65535
  80b51c:	8809883a 	mov	r4,r17
  80b520:	b80b883a 	mov	r5,r23
  80b524:	080ba300 	call	80ba30 <__umodsi3>
  80b528:	8809883a 	mov	r4,r17
  80b52c:	b80b883a 	mov	r5,r23
  80b530:	1023883a 	mov	r17,r2
  80b534:	080b9cc0 	call	80b9cc <__udivsi3>
  80b538:	1009883a 	mov	r4,r2
  80b53c:	a80b883a 	mov	r5,r21
  80b540:	08015040 	call	801504 <__mulsi3>
  80b544:	8822943a 	slli	r17,r17,16
  80b548:	9808d43a 	srli	r4,r19,16
  80b54c:	8908b03a 	or	r4,r17,r4
  80b550:	2080032e 	bgeu	r4,r2,80b560 <__umoddi3+0x24c>
  80b554:	2509883a 	add	r4,r4,r20
  80b558:	25000136 	bltu	r4,r20,80b560 <__umoddi3+0x24c>
  80b55c:	2080dc36 	bltu	r4,r2,80b8d0 <__umoddi3+0x5bc>
  80b560:	20a1c83a 	sub	r16,r4,r2
  80b564:	b80b883a 	mov	r5,r23
  80b568:	8009883a 	mov	r4,r16
  80b56c:	080ba300 	call	80ba30 <__umodsi3>
  80b570:	b80b883a 	mov	r5,r23
  80b574:	8009883a 	mov	r4,r16
  80b578:	1023883a 	mov	r17,r2
  80b57c:	8822943a 	slli	r17,r17,16
  80b580:	080b9cc0 	call	80b9cc <__udivsi3>
  80b584:	a80b883a 	mov	r5,r21
  80b588:	1009883a 	mov	r4,r2
  80b58c:	08015040 	call	801504 <__mulsi3>
  80b590:	9cffffcc 	andi	r19,r19,65535
  80b594:	8cc6b03a 	or	r3,r17,r19
  80b598:	1880042e 	bgeu	r3,r2,80b5ac <__umoddi3+0x298>
  80b59c:	1d07883a 	add	r3,r3,r20
  80b5a0:	1d000236 	bltu	r3,r20,80b5ac <__umoddi3+0x298>
  80b5a4:	1880012e 	bgeu	r3,r2,80b5ac <__umoddi3+0x298>
  80b5a8:	1d07883a 	add	r3,r3,r20
  80b5ac:	1885c83a 	sub	r2,r3,r2
  80b5b0:	1484d83a 	srl	r2,r2,r18
  80b5b4:	0007883a 	mov	r3,zero
  80b5b8:	003fa206 	br	80b444 <__umoddi3+0x130>
  80b5bc:	a0804030 	cmpltui	r2,r20,256
  80b5c0:	1000ba1e 	bne	r2,zero,80b8ac <__umoddi3+0x598>
  80b5c4:	a006d23a 	srli	r3,r20,8
  80b5c8:	04800204 	movi	r18,8
  80b5cc:	003fc906 	br	80b4f4 <__umoddi3+0x1e0>
  80b5d0:	30804030 	cmpltui	r2,r6,256
  80b5d4:	1000ad1e 	bne	r2,zero,80b88c <__umoddi3+0x578>
  80b5d8:	3006d23a 	srli	r3,r6,8
  80b5dc:	04800204 	movi	r18,8
  80b5e0:	003f6506 	br	80b378 <__umoddi3+0x64>
  80b5e4:	39004030 	cmpltui	r4,r7,256
  80b5e8:	2000b21e 	bne	r4,zero,80b8b4 <__umoddi3+0x5a0>
  80b5ec:	3808d23a 	srli	r4,r7,8
  80b5f0:	02000204 	movi	r8,8
  80b5f4:	003fa606 	br	80b490 <__umoddi3+0x17c>
  80b5f8:	3d4e983a 	sll	r7,r7,r21
  80b5fc:	3508d83a 	srl	r4,r6,r20
  80b600:	8d2cd83a 	srl	r22,r17,r20
  80b604:	8504d83a 	srl	r2,r16,r20
  80b608:	21e4b03a 	or	r18,r4,r7
  80b60c:	8d62983a 	sll	r17,r17,r21
  80b610:	9026d43a 	srli	r19,r18,16
  80b614:	354c983a 	sll	r6,r6,r21
  80b618:	1444b03a 	or	r2,r2,r17
  80b61c:	b009883a 	mov	r4,r22
  80b620:	980b883a 	mov	r5,r19
  80b624:	d9800115 	stw	r6,4(sp)
  80b628:	d8800015 	stw	r2,0(sp)
  80b62c:	080ba300 	call	80ba30 <__umodsi3>
  80b630:	980b883a 	mov	r5,r19
  80b634:	b009883a 	mov	r4,r22
  80b638:	102f883a 	mov	r23,r2
  80b63c:	947fffcc 	andi	r17,r18,65535
  80b640:	080b9cc0 	call	80b9cc <__udivsi3>
  80b644:	8809883a 	mov	r4,r17
  80b648:	100b883a 	mov	r5,r2
  80b64c:	1039883a 	mov	fp,r2
  80b650:	08015040 	call	801504 <__mulsi3>
  80b654:	d8c00017 	ldw	r3,0(sp)
  80b658:	b82e943a 	slli	r23,r23,16
  80b65c:	8560983a 	sll	r16,r16,r21
  80b660:	1808d43a 	srli	r4,r3,16
  80b664:	b908b03a 	or	r4,r23,r4
  80b668:	2080062e 	bgeu	r4,r2,80b684 <__umoddi3+0x370>
  80b66c:	2489883a 	add	r4,r4,r18
  80b670:	e17fffc4 	addi	r5,fp,-1
  80b674:	24809436 	bltu	r4,r18,80b8c8 <__umoddi3+0x5b4>
  80b678:	2080932e 	bgeu	r4,r2,80b8c8 <__umoddi3+0x5b4>
  80b67c:	e73fff84 	addi	fp,fp,-2
  80b680:	2489883a 	add	r4,r4,r18
  80b684:	20adc83a 	sub	r22,r4,r2
  80b688:	980b883a 	mov	r5,r19
  80b68c:	b009883a 	mov	r4,r22
  80b690:	080ba300 	call	80ba30 <__umodsi3>
  80b694:	980b883a 	mov	r5,r19
  80b698:	b009883a 	mov	r4,r22
  80b69c:	102f883a 	mov	r23,r2
  80b6a0:	080b9cc0 	call	80b9cc <__udivsi3>
  80b6a4:	100b883a 	mov	r5,r2
  80b6a8:	8809883a 	mov	r4,r17
  80b6ac:	d8800215 	stw	r2,8(sp)
  80b6b0:	08015040 	call	801504 <__mulsi3>
  80b6b4:	d8c00017 	ldw	r3,0(sp)
  80b6b8:	b82e943a 	slli	r23,r23,16
  80b6bc:	d9400217 	ldw	r5,8(sp)
  80b6c0:	1c7fffcc 	andi	r17,r3,65535
  80b6c4:	bc62b03a 	or	r17,r23,r17
  80b6c8:	8880062e 	bgeu	r17,r2,80b6e4 <__umoddi3+0x3d0>
  80b6cc:	8ca3883a 	add	r17,r17,r18
  80b6d0:	28ffffc4 	addi	r3,r5,-1
  80b6d4:	8c807a36 	bltu	r17,r18,80b8c0 <__umoddi3+0x5ac>
  80b6d8:	8880792e 	bgeu	r17,r2,80b8c0 <__umoddi3+0x5ac>
  80b6dc:	297fff84 	addi	r5,r5,-2
  80b6e0:	8ca3883a 	add	r17,r17,r18
  80b6e4:	e02c943a 	slli	r22,fp,16
  80b6e8:	d9c00117 	ldw	r7,4(sp)
  80b6ec:	29bfffcc 	andi	r6,r5,65535
  80b6f0:	b16cb03a 	or	r22,r22,r5
  80b6f4:	38ffffcc 	andi	r3,r7,65535
  80b6f8:	b02cd43a 	srli	r22,r22,16
  80b6fc:	180b883a 	mov	r5,r3
  80b700:	3009883a 	mov	r4,r6
  80b704:	3838d43a 	srli	fp,r7,16
  80b708:	182f883a 	mov	r23,r3
  80b70c:	d9800015 	stw	r6,0(sp)
  80b710:	88a3c83a 	sub	r17,r17,r2
  80b714:	08015040 	call	801504 <__mulsi3>
  80b718:	b80b883a 	mov	r5,r23
  80b71c:	b009883a 	mov	r4,r22
  80b720:	102f883a 	mov	r23,r2
  80b724:	08015040 	call	801504 <__mulsi3>
  80b728:	e00b883a 	mov	r5,fp
  80b72c:	b009883a 	mov	r4,r22
  80b730:	102d883a 	mov	r22,r2
  80b734:	08015040 	call	801504 <__mulsi3>
  80b738:	d9800017 	ldw	r6,0(sp)
  80b73c:	e00b883a 	mov	r5,fp
  80b740:	1039883a 	mov	fp,r2
  80b744:	3009883a 	mov	r4,r6
  80b748:	08015040 	call	801504 <__mulsi3>
  80b74c:	b808d43a 	srli	r4,r23,16
  80b750:	1585883a 	add	r2,r2,r22
  80b754:	2089883a 	add	r4,r4,r2
  80b758:	2580022e 	bgeu	r4,r22,80b764 <__umoddi3+0x450>
  80b75c:	00800074 	movhi	r2,1
  80b760:	e0b9883a 	add	fp,fp,r2
  80b764:	2006d43a 	srli	r3,r4,16
  80b768:	2008943a 	slli	r4,r4,16
  80b76c:	bdffffcc 	andi	r23,r23,65535
  80b770:	1f07883a 	add	r3,r3,fp
  80b774:	25c9883a 	add	r4,r4,r23
  80b778:	88c03a36 	bltu	r17,r3,80b864 <__umoddi3+0x550>
  80b77c:	88c03826 	beq	r17,r3,80b860 <__umoddi3+0x54c>
  80b780:	8109c83a 	sub	r4,r16,r4
  80b784:	8121803a 	cmpltu	r16,r16,r4
  80b788:	88c7c83a 	sub	r3,r17,r3
  80b78c:	1c07c83a 	sub	r3,r3,r16
  80b790:	1d04983a 	sll	r2,r3,r20
  80b794:	2548d83a 	srl	r4,r4,r21
  80b798:	1d46d83a 	srl	r3,r3,r21
  80b79c:	1104b03a 	or	r2,r2,r4
  80b7a0:	003f2806 	br	80b444 <__umoddi3+0x130>
  80b7a4:	a4a8983a 	sll	r20,r20,r18
  80b7a8:	8da6d83a 	srl	r19,r17,r22
  80b7ac:	8ca2983a 	sll	r17,r17,r18
  80b7b0:	a02ed43a 	srli	r23,r20,16
  80b7b4:	9809883a 	mov	r4,r19
  80b7b8:	85acd83a 	srl	r22,r16,r22
  80b7bc:	b80b883a 	mov	r5,r23
  80b7c0:	080ba300 	call	80ba30 <__umodsi3>
  80b7c4:	9809883a 	mov	r4,r19
  80b7c8:	b80b883a 	mov	r5,r23
  80b7cc:	b46cb03a 	or	r22,r22,r17
  80b7d0:	a57fffcc 	andi	r21,r20,65535
  80b7d4:	1023883a 	mov	r17,r2
  80b7d8:	080b9cc0 	call	80b9cc <__udivsi3>
  80b7dc:	a809883a 	mov	r4,r21
  80b7e0:	100b883a 	mov	r5,r2
  80b7e4:	08015040 	call	801504 <__mulsi3>
  80b7e8:	8822943a 	slli	r17,r17,16
  80b7ec:	b008d43a 	srli	r4,r22,16
  80b7f0:	84a6983a 	sll	r19,r16,r18
  80b7f4:	8908b03a 	or	r4,r17,r4
  80b7f8:	2080042e 	bgeu	r4,r2,80b80c <__umoddi3+0x4f8>
  80b7fc:	2509883a 	add	r4,r4,r20
  80b800:	25000236 	bltu	r4,r20,80b80c <__umoddi3+0x4f8>
  80b804:	2080012e 	bgeu	r4,r2,80b80c <__umoddi3+0x4f8>
  80b808:	2509883a 	add	r4,r4,r20
  80b80c:	20a1c83a 	sub	r16,r4,r2
  80b810:	8009883a 	mov	r4,r16
  80b814:	b80b883a 	mov	r5,r23
  80b818:	080ba300 	call	80ba30 <__umodsi3>
  80b81c:	8009883a 	mov	r4,r16
  80b820:	1021883a 	mov	r16,r2
  80b824:	b80b883a 	mov	r5,r23
  80b828:	8020943a 	slli	r16,r16,16
  80b82c:	080b9cc0 	call	80b9cc <__udivsi3>
  80b830:	100b883a 	mov	r5,r2
  80b834:	a809883a 	mov	r4,r21
  80b838:	b47fffcc 	andi	r17,r22,65535
  80b83c:	08015040 	call	801504 <__mulsi3>
  80b840:	8462b03a 	or	r17,r16,r17
  80b844:	8880042e 	bgeu	r17,r2,80b858 <__umoddi3+0x544>
  80b848:	8d23883a 	add	r17,r17,r20
  80b84c:	8d000236 	bltu	r17,r20,80b858 <__umoddi3+0x544>
  80b850:	8880012e 	bgeu	r17,r2,80b858 <__umoddi3+0x544>
  80b854:	8d23883a 	add	r17,r17,r20
  80b858:	88a3c83a 	sub	r17,r17,r2
  80b85c:	003f2f06 	br	80b51c <__umoddi3+0x208>
  80b860:	813fc72e 	bgeu	r16,r4,80b780 <__umoddi3+0x46c>
  80b864:	d8800117 	ldw	r2,4(sp)
  80b868:	20a7c83a 	sub	r19,r4,r2
  80b86c:	24c9803a 	cmpltu	r4,r4,r19
  80b870:	2489883a 	add	r4,r4,r18
  80b874:	1907c83a 	sub	r3,r3,r4
  80b878:	9809883a 	mov	r4,r19
  80b87c:	003fc006 	br	80b780 <__umoddi3+0x46c>
  80b880:	3006d43a 	srli	r3,r6,16
  80b884:	04800404 	movi	r18,16
  80b888:	003ebb06 	br	80b378 <__umoddi3+0x64>
  80b88c:	3007883a 	mov	r3,r6
  80b890:	003eb906 	br	80b378 <__umoddi3+0x64>
  80b894:	3808d43a 	srli	r4,r7,16
  80b898:	02000404 	movi	r8,16
  80b89c:	003efc06 	br	80b490 <__umoddi3+0x17c>
  80b8a0:	a006d43a 	srli	r3,r20,16
  80b8a4:	04800404 	movi	r18,16
  80b8a8:	003f1206 	br	80b4f4 <__umoddi3+0x1e0>
  80b8ac:	a007883a 	mov	r3,r20
  80b8b0:	003f1006 	br	80b4f4 <__umoddi3+0x1e0>
  80b8b4:	3809883a 	mov	r4,r7
  80b8b8:	0011883a 	mov	r8,zero
  80b8bc:	003ef406 	br	80b490 <__umoddi3+0x17c>
  80b8c0:	180b883a 	mov	r5,r3
  80b8c4:	003f8706 	br	80b6e4 <__umoddi3+0x3d0>
  80b8c8:	2839883a 	mov	fp,r5
  80b8cc:	003f6d06 	br	80b684 <__umoddi3+0x370>
  80b8d0:	2509883a 	add	r4,r4,r20
  80b8d4:	003f2206 	br	80b560 <__umoddi3+0x24c>

0080b8d8 <__divsi3>:
  80b8d8:	20001a16 	blt	r4,zero,80b944 <__divsi3+0x6c>
  80b8dc:	000f883a 	mov	r7,zero
  80b8e0:	2800020e 	bge	r5,zero,80b8ec <__divsi3+0x14>
  80b8e4:	014bc83a 	sub	r5,zero,r5
  80b8e8:	39c0005c 	xori	r7,r7,1
  80b8ec:	200d883a 	mov	r6,r4
  80b8f0:	00c00044 	movi	r3,1
  80b8f4:	2900092e 	bgeu	r5,r4,80b91c <__divsi3+0x44>
  80b8f8:	00800804 	movi	r2,32
  80b8fc:	00c00044 	movi	r3,1
  80b900:	00000106 	br	80b908 <__divsi3+0x30>
  80b904:	10001226 	beq	r2,zero,80b950 <__divsi3+0x78>
  80b908:	294b883a 	add	r5,r5,r5
  80b90c:	10bfffc4 	addi	r2,r2,-1
  80b910:	18c7883a 	add	r3,r3,r3
  80b914:	293ffb36 	bltu	r5,r4,80b904 <__divsi3+0x2c>
  80b918:	18000d26 	beq	r3,zero,80b950 <__divsi3+0x78>
  80b91c:	0005883a 	mov	r2,zero
  80b920:	31400236 	bltu	r6,r5,80b92c <__divsi3+0x54>
  80b924:	314dc83a 	sub	r6,r6,r5
  80b928:	10c4b03a 	or	r2,r2,r3
  80b92c:	1806d07a 	srli	r3,r3,1
  80b930:	280ad07a 	srli	r5,r5,1
  80b934:	183ffa1e 	bne	r3,zero,80b920 <__divsi3+0x48>
  80b938:	38000126 	beq	r7,zero,80b940 <__divsi3+0x68>
  80b93c:	0085c83a 	sub	r2,zero,r2
  80b940:	f800283a 	ret
  80b944:	0109c83a 	sub	r4,zero,r4
  80b948:	01c00044 	movi	r7,1
  80b94c:	003fe406 	br	80b8e0 <__divsi3+0x8>
  80b950:	0005883a 	mov	r2,zero
  80b954:	003ff806 	br	80b938 <__divsi3+0x60>

0080b958 <__modsi3>:
  80b958:	20001916 	blt	r4,zero,80b9c0 <__modsi3+0x68>
  80b95c:	000f883a 	mov	r7,zero
  80b960:	2005883a 	mov	r2,r4
  80b964:	2800010e 	bge	r5,zero,80b96c <__modsi3+0x14>
  80b968:	014bc83a 	sub	r5,zero,r5
  80b96c:	00c00044 	movi	r3,1
  80b970:	2900092e 	bgeu	r5,r4,80b998 <__modsi3+0x40>
  80b974:	01800804 	movi	r6,32
  80b978:	00c00044 	movi	r3,1
  80b97c:	00000106 	br	80b984 <__modsi3+0x2c>
  80b980:	30000d26 	beq	r6,zero,80b9b8 <__modsi3+0x60>
  80b984:	294b883a 	add	r5,r5,r5
  80b988:	31bfffc4 	addi	r6,r6,-1
  80b98c:	18c7883a 	add	r3,r3,r3
  80b990:	293ffb36 	bltu	r5,r4,80b980 <__modsi3+0x28>
  80b994:	18000826 	beq	r3,zero,80b9b8 <__modsi3+0x60>
  80b998:	1806d07a 	srli	r3,r3,1
  80b99c:	11400136 	bltu	r2,r5,80b9a4 <__modsi3+0x4c>
  80b9a0:	1145c83a 	sub	r2,r2,r5
  80b9a4:	280ad07a 	srli	r5,r5,1
  80b9a8:	183ffb1e 	bne	r3,zero,80b998 <__modsi3+0x40>
  80b9ac:	38000126 	beq	r7,zero,80b9b4 <__modsi3+0x5c>
  80b9b0:	0085c83a 	sub	r2,zero,r2
  80b9b4:	f800283a 	ret
  80b9b8:	2005883a 	mov	r2,r4
  80b9bc:	003ffb06 	br	80b9ac <__modsi3+0x54>
  80b9c0:	0109c83a 	sub	r4,zero,r4
  80b9c4:	01c00044 	movi	r7,1
  80b9c8:	003fe506 	br	80b960 <__modsi3+0x8>

0080b9cc <__udivsi3>:
  80b9cc:	200d883a 	mov	r6,r4
  80b9d0:	2900152e 	bgeu	r5,r4,80ba28 <__udivsi3+0x5c>
  80b9d4:	28001416 	blt	r5,zero,80ba28 <__udivsi3+0x5c>
  80b9d8:	00800804 	movi	r2,32
  80b9dc:	00c00044 	movi	r3,1
  80b9e0:	00000206 	br	80b9ec <__udivsi3+0x20>
  80b9e4:	10000e26 	beq	r2,zero,80ba20 <__udivsi3+0x54>
  80b9e8:	28000516 	blt	r5,zero,80ba00 <__udivsi3+0x34>
  80b9ec:	294b883a 	add	r5,r5,r5
  80b9f0:	10bfffc4 	addi	r2,r2,-1
  80b9f4:	18c7883a 	add	r3,r3,r3
  80b9f8:	293ffa36 	bltu	r5,r4,80b9e4 <__udivsi3+0x18>
  80b9fc:	18000826 	beq	r3,zero,80ba20 <__udivsi3+0x54>
  80ba00:	0005883a 	mov	r2,zero
  80ba04:	31400236 	bltu	r6,r5,80ba10 <__udivsi3+0x44>
  80ba08:	314dc83a 	sub	r6,r6,r5
  80ba0c:	10c4b03a 	or	r2,r2,r3
  80ba10:	1806d07a 	srli	r3,r3,1
  80ba14:	280ad07a 	srli	r5,r5,1
  80ba18:	183ffa1e 	bne	r3,zero,80ba04 <__udivsi3+0x38>
  80ba1c:	f800283a 	ret
  80ba20:	0005883a 	mov	r2,zero
  80ba24:	f800283a 	ret
  80ba28:	00c00044 	movi	r3,1
  80ba2c:	003ff406 	br	80ba00 <__udivsi3+0x34>

0080ba30 <__umodsi3>:
  80ba30:	2005883a 	mov	r2,r4
  80ba34:	2900132e 	bgeu	r5,r4,80ba84 <__umodsi3+0x54>
  80ba38:	28001216 	blt	r5,zero,80ba84 <__umodsi3+0x54>
  80ba3c:	01800804 	movi	r6,32
  80ba40:	00c00044 	movi	r3,1
  80ba44:	00000206 	br	80ba50 <__umodsi3+0x20>
  80ba48:	30000c26 	beq	r6,zero,80ba7c <__umodsi3+0x4c>
  80ba4c:	28000516 	blt	r5,zero,80ba64 <__umodsi3+0x34>
  80ba50:	294b883a 	add	r5,r5,r5
  80ba54:	31bfffc4 	addi	r6,r6,-1
  80ba58:	18c7883a 	add	r3,r3,r3
  80ba5c:	293ffa36 	bltu	r5,r4,80ba48 <__umodsi3+0x18>
  80ba60:	18000626 	beq	r3,zero,80ba7c <__umodsi3+0x4c>
  80ba64:	1806d07a 	srli	r3,r3,1
  80ba68:	11400136 	bltu	r2,r5,80ba70 <__umodsi3+0x40>
  80ba6c:	1145c83a 	sub	r2,r2,r5
  80ba70:	280ad07a 	srli	r5,r5,1
  80ba74:	183ffb1e 	bne	r3,zero,80ba64 <__umodsi3+0x34>
  80ba78:	f800283a 	ret
  80ba7c:	2005883a 	mov	r2,r4
  80ba80:	f800283a 	ret
  80ba84:	00c00044 	movi	r3,1
  80ba88:	003ff606 	br	80ba64 <__umodsi3+0x34>

0080ba8c <__adddf3>:
  80ba8c:	02000434 	movhi	r8,16
  80ba90:	423fffc4 	addi	r8,r8,-1
  80ba94:	3a12703a 	and	r9,r7,r8
  80ba98:	2a06703a 	and	r3,r5,r8
  80ba9c:	2818d53a 	srli	r12,r5,20
  80baa0:	3804d53a 	srli	r2,r7,20
  80baa4:	481490fa 	slli	r10,r9,3
  80baa8:	280ad7fa 	srli	r5,r5,31
  80baac:	180690fa 	slli	r3,r3,3
  80bab0:	2016d77a 	srli	r11,r4,29
  80bab4:	3012d77a 	srli	r9,r6,29
  80bab8:	380ed7fa 	srli	r7,r7,31
  80babc:	defffb04 	addi	sp,sp,-20
  80bac0:	dc400115 	stw	r17,4(sp)
  80bac4:	dc000015 	stw	r16,0(sp)
  80bac8:	dfc00415 	stw	ra,16(sp)
  80bacc:	dcc00315 	stw	r19,12(sp)
  80bad0:	dc800215 	stw	r18,8(sp)
  80bad4:	201c90fa 	slli	r14,r4,3
  80bad8:	301a90fa 	slli	r13,r6,3
  80badc:	6441ffcc 	andi	r17,r12,2047
  80bae0:	2821883a 	mov	r16,r5
  80bae4:	58c6b03a 	or	r3,r11,r3
  80bae8:	1081ffcc 	andi	r2,r2,2047
  80baec:	4a92b03a 	or	r9,r9,r10
  80baf0:	29c06326 	beq	r5,r7,80bc80 <__adddf3+0x1f4>
  80baf4:	888bc83a 	sub	r5,r17,r2
  80baf8:	0140560e 	bge	zero,r5,80bc54 <__adddf3+0x1c8>
  80bafc:	10007526 	beq	r2,zero,80bcd4 <__adddf3+0x248>
  80bb00:	8881ffd8 	cmpnei	r2,r17,2047
  80bb04:	10012d26 	beq	r2,zero,80bfbc <__adddf3+0x530>
  80bb08:	4a402034 	orhi	r9,r9,128
  80bb0c:	28800e48 	cmpgei	r2,r5,57
  80bb10:	1000f41e 	bne	r2,zero,80bee4 <__adddf3+0x458>
  80bb14:	28800808 	cmpgei	r2,r5,32
  80bb18:	1001471e 	bne	r2,zero,80c038 <__adddf3+0x5ac>
  80bb1c:	00800804 	movi	r2,32
  80bb20:	1145c83a 	sub	r2,r2,r5
  80bb24:	6948d83a 	srl	r4,r13,r5
  80bb28:	48a4983a 	sll	r18,r9,r2
  80bb2c:	6884983a 	sll	r2,r13,r2
  80bb30:	494ad83a 	srl	r5,r9,r5
  80bb34:	9124b03a 	or	r18,r18,r4
  80bb38:	101ac03a 	cmpne	r13,r2,zero
  80bb3c:	9364b03a 	or	r18,r18,r13
  80bb40:	1947c83a 	sub	r3,r3,r5
  80bb44:	74a5c83a 	sub	r18,r14,r18
  80bb48:	7489803a 	cmpltu	r4,r14,r18
  80bb4c:	1909c83a 	sub	r4,r3,r4
  80bb50:	2080202c 	andhi	r2,r4,128
  80bb54:	10008626 	beq	r2,zero,80bd70 <__adddf3+0x2e4>
  80bb58:	00802034 	movhi	r2,128
  80bb5c:	10bfffc4 	addi	r2,r2,-1
  80bb60:	20a6703a 	and	r19,r4,r2
  80bb64:	9800d626 	beq	r19,zero,80bec0 <__adddf3+0x434>
  80bb68:	9809883a 	mov	r4,r19
  80bb6c:	08014b00 	call	8014b0 <__clzsi2>
  80bb70:	133ffe04 	addi	r12,r2,-8
  80bb74:	01000804 	movi	r4,32
  80bb78:	2309c83a 	sub	r4,r4,r12
  80bb7c:	9108d83a 	srl	r4,r18,r4
  80bb80:	9b04983a 	sll	r2,r19,r12
  80bb84:	9324983a 	sll	r18,r18,r12
  80bb88:	2088b03a 	or	r4,r4,r2
  80bb8c:	6440c716 	blt	r12,r17,80beac <__adddf3+0x420>
  80bb90:	6459c83a 	sub	r12,r12,r17
  80bb94:	62000044 	addi	r8,r12,1
  80bb98:	40800808 	cmpgei	r2,r8,32
  80bb9c:	1001191e 	bne	r2,zero,80c004 <__adddf3+0x578>
  80bba0:	00800804 	movi	r2,32
  80bba4:	1205c83a 	sub	r2,r2,r8
  80bba8:	9206d83a 	srl	r3,r18,r8
  80bbac:	90a4983a 	sll	r18,r18,r2
  80bbb0:	2084983a 	sll	r2,r4,r2
  80bbb4:	2208d83a 	srl	r4,r4,r8
  80bbb8:	9024c03a 	cmpne	r18,r18,zero
  80bbbc:	10c4b03a 	or	r2,r2,r3
  80bbc0:	14a4b03a 	or	r18,r2,r18
  80bbc4:	0023883a 	mov	r17,zero
  80bbc8:	908001cc 	andi	r2,r18,7
  80bbcc:	10000726 	beq	r2,zero,80bbec <__adddf3+0x160>
  80bbd0:	908003cc 	andi	r2,r18,15
  80bbd4:	10800120 	cmpeqi	r2,r2,4
  80bbd8:	1000041e 	bne	r2,zero,80bbec <__adddf3+0x160>
  80bbdc:	90c00104 	addi	r3,r18,4
  80bbe0:	1ca5803a 	cmpltu	r18,r3,r18
  80bbe4:	2489883a 	add	r4,r4,r18
  80bbe8:	1825883a 	mov	r18,r3
  80bbec:	2080202c 	andhi	r2,r4,128
  80bbf0:	10006126 	beq	r2,zero,80bd78 <__adddf3+0x2ec>
  80bbf4:	89400044 	addi	r5,r17,1
  80bbf8:	2881ffe0 	cmpeqi	r2,r5,2047
  80bbfc:	2941ffcc 	andi	r5,r5,2047
  80bc00:	1000731e 	bne	r2,zero,80bdd0 <__adddf3+0x344>
  80bc04:	023fe034 	movhi	r8,65408
  80bc08:	423fffc4 	addi	r8,r8,-1
  80bc0c:	2210703a 	and	r8,r4,r8
  80bc10:	4006927a 	slli	r3,r8,9
  80bc14:	9024d0fa 	srli	r18,r18,3
  80bc18:	4004977a 	slli	r2,r8,29
  80bc1c:	1806d33a 	srli	r3,r3,12
  80bc20:	1484b03a 	or	r2,r2,r18
  80bc24:	280a953a 	slli	r5,r5,20
  80bc28:	84003fcc 	andi	r16,r16,255
  80bc2c:	802097fa 	slli	r16,r16,31
  80bc30:	28c6b03a 	or	r3,r5,r3
  80bc34:	1c06b03a 	or	r3,r3,r16
  80bc38:	dfc00417 	ldw	ra,16(sp)
  80bc3c:	dcc00317 	ldw	r19,12(sp)
  80bc40:	dc800217 	ldw	r18,8(sp)
  80bc44:	dc400117 	ldw	r17,4(sp)
  80bc48:	dc000017 	ldw	r16,0(sp)
  80bc4c:	dec00504 	addi	sp,sp,20
  80bc50:	f800283a 	ret
  80bc54:	28002726 	beq	r5,zero,80bcf4 <__adddf3+0x268>
  80bc58:	144bc83a 	sub	r5,r2,r17
  80bc5c:	8800be1e 	bne	r17,zero,80bf58 <__adddf3+0x4cc>
  80bc60:	1b88b03a 	or	r4,r3,r14
  80bc64:	20013126 	beq	r4,zero,80c12c <__adddf3+0x6a0>
  80bc68:	293fffc4 	addi	r4,r5,-1
  80bc6c:	20017226 	beq	r4,zero,80c238 <__adddf3+0x7ac>
  80bc70:	2941ffd8 	cmpnei	r5,r5,2047
  80bc74:	2801c226 	beq	r5,zero,80c380 <__adddf3+0x8f4>
  80bc78:	200b883a 	mov	r5,r4
  80bc7c:	0000b906 	br	80bf64 <__adddf3+0x4d8>
  80bc80:	888bc83a 	sub	r5,r17,r2
  80bc84:	0140700e 	bge	zero,r5,80be48 <__adddf3+0x3bc>
  80bc88:	10002a26 	beq	r2,zero,80bd34 <__adddf3+0x2a8>
  80bc8c:	8881ffd8 	cmpnei	r2,r17,2047
  80bc90:	1000ca26 	beq	r2,zero,80bfbc <__adddf3+0x530>
  80bc94:	4a402034 	orhi	r9,r9,128
  80bc98:	28800e48 	cmpgei	r2,r5,57
  80bc9c:	1000421e 	bne	r2,zero,80bda8 <__adddf3+0x31c>
  80bca0:	28800808 	cmpgei	r2,r5,32
  80bca4:	1000ff26 	beq	r2,zero,80c0a4 <__adddf3+0x618>
  80bca8:	2cbff804 	addi	r18,r5,-32
  80bcac:	29000820 	cmpeqi	r4,r5,32
  80bcb0:	4c84d83a 	srl	r2,r9,r18
  80bcb4:	2000041e 	bne	r4,zero,80bcc8 <__adddf3+0x23c>
  80bcb8:	01001004 	movi	r4,64
  80bcbc:	214bc83a 	sub	r5,r4,r5
  80bcc0:	4952983a 	sll	r9,r9,r5
  80bcc4:	6a5ab03a 	or	r13,r13,r9
  80bcc8:	6824c03a 	cmpne	r18,r13,zero
  80bccc:	90a4b03a 	or	r18,r18,r2
  80bcd0:	00003706 	br	80bdb0 <__adddf3+0x324>
  80bcd4:	4b44b03a 	or	r2,r9,r13
  80bcd8:	1000b126 	beq	r2,zero,80bfa0 <__adddf3+0x514>
  80bcdc:	28bfffc4 	addi	r2,r5,-1
  80bce0:	10011a26 	beq	r2,zero,80c14c <__adddf3+0x6c0>
  80bce4:	2941ffd8 	cmpnei	r5,r5,2047
  80bce8:	28012526 	beq	r5,zero,80c180 <__adddf3+0x6f4>
  80bcec:	100b883a 	mov	r5,r2
  80bcf0:	003f8606 	br	80bb0c <__adddf3+0x80>
  80bcf4:	8a800044 	addi	r10,r17,1
  80bcf8:	5281ff8c 	andi	r10,r10,2046
  80bcfc:	50008b1e 	bne	r10,zero,80bf2c <__adddf3+0x4a0>
  80bd00:	1b96b03a 	or	r11,r3,r14
  80bd04:	4b44b03a 	or	r2,r9,r13
  80bd08:	8801031e 	bne	r17,zero,80c118 <__adddf3+0x68c>
  80bd0c:	58014126 	beq	r11,zero,80c214 <__adddf3+0x788>
  80bd10:	1001571e 	bne	r2,zero,80c270 <__adddf3+0x7e4>
  80bd14:	1804977a 	slli	r2,r3,29
  80bd18:	01480034 	movhi	r5,8192
  80bd1c:	297fffc4 	addi	r5,r5,-1
  80bd20:	2148703a 	and	r4,r4,r5
  80bd24:	1810d0fa 	srli	r8,r3,3
  80bd28:	1104b03a 	or	r2,r2,r4
  80bd2c:	500b883a 	mov	r5,r10
  80bd30:	00001806 	br	80bd94 <__adddf3+0x308>
  80bd34:	4b44b03a 	or	r2,r9,r13
  80bd38:	10010a26 	beq	r2,zero,80c164 <__adddf3+0x6d8>
  80bd3c:	28bfffc4 	addi	r2,r5,-1
  80bd40:	10000426 	beq	r2,zero,80bd54 <__adddf3+0x2c8>
  80bd44:	2941ffd8 	cmpnei	r5,r5,2047
  80bd48:	28014226 	beq	r5,zero,80c254 <__adddf3+0x7c8>
  80bd4c:	100b883a 	mov	r5,r2
  80bd50:	003fd106 	br	80bc98 <__adddf3+0x20c>
  80bd54:	7365883a 	add	r18,r14,r13
  80bd58:	1a47883a 	add	r3,r3,r9
  80bd5c:	9389803a 	cmpltu	r4,r18,r14
  80bd60:	1909883a 	add	r4,r3,r4
  80bd64:	2080202c 	andhi	r2,r4,128
  80bd68:	10009b1e 	bne	r2,zero,80bfd8 <__adddf3+0x54c>
  80bd6c:	04400044 	movi	r17,1
  80bd70:	908001cc 	andi	r2,r18,7
  80bd74:	103f961e 	bne	r2,zero,80bbd0 <__adddf3+0x144>
  80bd78:	9024d0fa 	srli	r18,r18,3
  80bd7c:	2004977a 	slli	r2,r4,29
  80bd80:	2010d0fa 	srli	r8,r4,3
  80bd84:	880b883a 	mov	r5,r17
  80bd88:	9084b03a 	or	r2,r18,r2
  80bd8c:	28c1ffe0 	cmpeqi	r3,r5,2047
  80bd90:	1800251e 	bne	r3,zero,80be28 <__adddf3+0x39c>
  80bd94:	00c00434 	movhi	r3,16
  80bd98:	18ffffc4 	addi	r3,r3,-1
  80bd9c:	40c6703a 	and	r3,r8,r3
  80bda0:	2941ffcc 	andi	r5,r5,2047
  80bda4:	003f9f06 	br	80bc24 <__adddf3+0x198>
  80bda8:	4b64b03a 	or	r18,r9,r13
  80bdac:	9024c03a 	cmpne	r18,r18,zero
  80bdb0:	93a5883a 	add	r18,r18,r14
  80bdb4:	9389803a 	cmpltu	r4,r18,r14
  80bdb8:	20c9883a 	add	r4,r4,r3
  80bdbc:	2080202c 	andhi	r2,r4,128
  80bdc0:	103feb26 	beq	r2,zero,80bd70 <__adddf3+0x2e4>
  80bdc4:	8c400044 	addi	r17,r17,1
  80bdc8:	8881ffe0 	cmpeqi	r2,r17,2047
  80bdcc:	10008326 	beq	r2,zero,80bfdc <__adddf3+0x550>
  80bdd0:	0141ffc4 	movi	r5,2047
  80bdd4:	0007883a 	mov	r3,zero
  80bdd8:	0005883a 	mov	r2,zero
  80bddc:	003f9106 	br	80bc24 <__adddf3+0x198>
  80bde0:	4b44b03a 	or	r2,r9,r13
  80bde4:	180a977a 	slli	r5,r3,29
  80bde8:	1810d0fa 	srli	r8,r3,3
  80bdec:	10016c26 	beq	r2,zero,80c3a0 <__adddf3+0x914>
  80bdf0:	00c80034 	movhi	r3,8192
  80bdf4:	18ffffc4 	addi	r3,r3,-1
  80bdf8:	20c4703a 	and	r2,r4,r3
  80bdfc:	4100022c 	andhi	r4,r8,8
  80be00:	1144b03a 	or	r2,r2,r5
  80be04:	20000826 	beq	r4,zero,80be28 <__adddf3+0x39c>
  80be08:	4808d0fa 	srli	r4,r9,3
  80be0c:	2140022c 	andhi	r5,r4,8
  80be10:	2800051e 	bne	r5,zero,80be28 <__adddf3+0x39c>
  80be14:	4804977a 	slli	r2,r9,29
  80be18:	30cc703a 	and	r6,r6,r3
  80be1c:	3821883a 	mov	r16,r7
  80be20:	3084b03a 	or	r2,r6,r2
  80be24:	2011883a 	mov	r8,r4
  80be28:	4086b03a 	or	r3,r8,r2
  80be2c:	18017126 	beq	r3,zero,80c3f4 <__adddf3+0x968>
  80be30:	01000434 	movhi	r4,16
  80be34:	40c00234 	orhi	r3,r8,8
  80be38:	213fffc4 	addi	r4,r4,-1
  80be3c:	1906703a 	and	r3,r3,r4
  80be40:	0141ffc4 	movi	r5,2047
  80be44:	003f7706 	br	80bc24 <__adddf3+0x198>
  80be48:	28002926 	beq	r5,zero,80bef0 <__adddf3+0x464>
  80be4c:	144bc83a 	sub	r5,r2,r17
  80be50:	88008c26 	beq	r17,zero,80c084 <__adddf3+0x5f8>
  80be54:	1101ffd8 	cmpnei	r4,r2,2047
  80be58:	20011126 	beq	r4,zero,80c2a0 <__adddf3+0x814>
  80be5c:	18c02034 	orhi	r3,r3,128
  80be60:	29000e48 	cmpgei	r4,r5,57
  80be64:	2000d51e 	bne	r4,zero,80c1bc <__adddf3+0x730>
  80be68:	29000808 	cmpgei	r4,r5,32
  80be6c:	2001511e 	bne	r4,zero,80c3b4 <__adddf3+0x928>
  80be70:	01000804 	movi	r4,32
  80be74:	2149c83a 	sub	r4,r4,r5
  80be78:	1924983a 	sll	r18,r3,r4
  80be7c:	714cd83a 	srl	r6,r14,r5
  80be80:	7108983a 	sll	r4,r14,r4
  80be84:	194ad83a 	srl	r5,r3,r5
  80be88:	91a4b03a 	or	r18,r18,r6
  80be8c:	2006c03a 	cmpne	r3,r4,zero
  80be90:	90e4b03a 	or	r18,r18,r3
  80be94:	4953883a 	add	r9,r9,r5
  80be98:	9365883a 	add	r18,r18,r13
  80be9c:	9349803a 	cmpltu	r4,r18,r13
  80bea0:	2249883a 	add	r4,r4,r9
  80bea4:	1023883a 	mov	r17,r2
  80bea8:	003fc406 	br	80bdbc <__adddf3+0x330>
  80beac:	023fe034 	movhi	r8,65408
  80beb0:	423fffc4 	addi	r8,r8,-1
  80beb4:	8b23c83a 	sub	r17,r17,r12
  80beb8:	2208703a 	and	r4,r4,r8
  80bebc:	003f4206 	br	80bbc8 <__adddf3+0x13c>
  80bec0:	9009883a 	mov	r4,r18
  80bec4:	08014b00 	call	8014b0 <__clzsi2>
  80bec8:	13000604 	addi	r12,r2,24
  80becc:	60c00808 	cmpgei	r3,r12,32
  80bed0:	183f2826 	beq	r3,zero,80bb74 <__adddf3+0xe8>
  80bed4:	113ffe04 	addi	r4,r2,-8
  80bed8:	9108983a 	sll	r4,r18,r4
  80bedc:	0025883a 	mov	r18,zero
  80bee0:	003f2a06 	br	80bb8c <__adddf3+0x100>
  80bee4:	4b64b03a 	or	r18,r9,r13
  80bee8:	9024c03a 	cmpne	r18,r18,zero
  80beec:	003f1506 	br	80bb44 <__adddf3+0xb8>
  80bef0:	8a000044 	addi	r8,r17,1
  80bef4:	4081ff8c 	andi	r2,r8,2046
  80bef8:	1000751e 	bne	r2,zero,80c0d0 <__adddf3+0x644>
  80befc:	1b84b03a 	or	r2,r3,r14
  80bf00:	8800bc1e 	bne	r17,zero,80c1f4 <__adddf3+0x768>
  80bf04:	10010c26 	beq	r2,zero,80c338 <__adddf3+0x8ac>
  80bf08:	4b44b03a 	or	r2,r9,r13
  80bf0c:	1001111e 	bne	r2,zero,80c354 <__adddf3+0x8c8>
  80bf10:	180c977a 	slli	r6,r3,29
  80bf14:	00880034 	movhi	r2,8192
  80bf18:	10bfffc4 	addi	r2,r2,-1
  80bf1c:	2084703a 	and	r2,r4,r2
  80bf20:	1810d0fa 	srli	r8,r3,3
  80bf24:	1184b03a 	or	r2,r2,r6
  80bf28:	003f9a06 	br	80bd94 <__adddf3+0x308>
  80bf2c:	7365c83a 	sub	r18,r14,r13
  80bf30:	1a67c83a 	sub	r19,r3,r9
  80bf34:	7489803a 	cmpltu	r4,r14,r18
  80bf38:	9927c83a 	sub	r19,r19,r4
  80bf3c:	9880202c 	andhi	r2,r19,128
  80bf40:	10006f1e 	bne	r2,zero,80c100 <__adddf3+0x674>
  80bf44:	94c4b03a 	or	r2,r18,r19
  80bf48:	103f061e 	bne	r2,zero,80bb64 <__adddf3+0xd8>
  80bf4c:	0011883a 	mov	r8,zero
  80bf50:	0021883a 	mov	r16,zero
  80bf54:	003f8f06 	br	80bd94 <__adddf3+0x308>
  80bf58:	1101ffd8 	cmpnei	r4,r2,2047
  80bf5c:	20008f26 	beq	r4,zero,80c19c <__adddf3+0x710>
  80bf60:	18c02034 	orhi	r3,r3,128
  80bf64:	29000e48 	cmpgei	r4,r5,57
  80bf68:	20003e1e 	bne	r4,zero,80c064 <__adddf3+0x5d8>
  80bf6c:	29000808 	cmpgei	r4,r5,32
  80bf70:	2000951e 	bne	r4,zero,80c1c8 <__adddf3+0x73c>
  80bf74:	01000804 	movi	r4,32
  80bf78:	2149c83a 	sub	r4,r4,r5
  80bf7c:	1924983a 	sll	r18,r3,r4
  80bf80:	714cd83a 	srl	r6,r14,r5
  80bf84:	711c983a 	sll	r14,r14,r4
  80bf88:	1946d83a 	srl	r3,r3,r5
  80bf8c:	91a4b03a 	or	r18,r18,r6
  80bf90:	701cc03a 	cmpne	r14,r14,zero
  80bf94:	93a4b03a 	or	r18,r18,r14
  80bf98:	48d3c83a 	sub	r9,r9,r3
  80bf9c:	00003306 	br	80c06c <__adddf3+0x5e0>
  80bfa0:	1824977a 	slli	r18,r3,29
  80bfa4:	01880034 	movhi	r6,8192
  80bfa8:	31bfffc4 	addi	r6,r6,-1
  80bfac:	2184703a 	and	r2,r4,r6
  80bfb0:	1810d0fa 	srli	r8,r3,3
  80bfb4:	1484b03a 	or	r2,r2,r18
  80bfb8:	003f7406 	br	80bd8c <__adddf3+0x300>
  80bfbc:	1804977a 	slli	r2,r3,29
  80bfc0:	01480034 	movhi	r5,8192
  80bfc4:	297fffc4 	addi	r5,r5,-1
  80bfc8:	2148703a 	and	r4,r4,r5
  80bfcc:	1810d0fa 	srli	r8,r3,3
  80bfd0:	1104b03a 	or	r2,r2,r4
  80bfd4:	003f9406 	br	80be28 <__adddf3+0x39c>
  80bfd8:	04400084 	movi	r17,2
  80bfdc:	00bfe034 	movhi	r2,65408
  80bfe0:	10bfffc4 	addi	r2,r2,-1
  80bfe4:	9006d07a 	srli	r3,r18,1
  80bfe8:	2088703a 	and	r4,r4,r2
  80bfec:	200497fa 	slli	r2,r4,31
  80bff0:	9480004c 	andi	r18,r18,1
  80bff4:	1ca4b03a 	or	r18,r3,r18
  80bff8:	2008d07a 	srli	r4,r4,1
  80bffc:	14a4b03a 	or	r18,r2,r18
  80c000:	003ef106 	br	80bbc8 <__adddf3+0x13c>
  80c004:	633ff844 	addi	r12,r12,-31
  80c008:	40800820 	cmpeqi	r2,r8,32
  80c00c:	2318d83a 	srl	r12,r4,r12
  80c010:	1000041e 	bne	r2,zero,80c024 <__adddf3+0x598>
  80c014:	00801004 	movi	r2,64
  80c018:	1211c83a 	sub	r8,r2,r8
  80c01c:	2208983a 	sll	r4,r4,r8
  80c020:	9124b03a 	or	r18,r18,r4
  80c024:	9024c03a 	cmpne	r18,r18,zero
  80c028:	9324b03a 	or	r18,r18,r12
  80c02c:	0009883a 	mov	r4,zero
  80c030:	0023883a 	mov	r17,zero
  80c034:	003f4e06 	br	80bd70 <__adddf3+0x2e4>
  80c038:	2cbff804 	addi	r18,r5,-32
  80c03c:	29000820 	cmpeqi	r4,r5,32
  80c040:	4c84d83a 	srl	r2,r9,r18
  80c044:	2000041e 	bne	r4,zero,80c058 <__adddf3+0x5cc>
  80c048:	01001004 	movi	r4,64
  80c04c:	214bc83a 	sub	r5,r4,r5
  80c050:	4952983a 	sll	r9,r9,r5
  80c054:	6a5ab03a 	or	r13,r13,r9
  80c058:	6824c03a 	cmpne	r18,r13,zero
  80c05c:	90a4b03a 	or	r18,r18,r2
  80c060:	003eb806 	br	80bb44 <__adddf3+0xb8>
  80c064:	1b88b03a 	or	r4,r3,r14
  80c068:	2024c03a 	cmpne	r18,r4,zero
  80c06c:	6ca5c83a 	sub	r18,r13,r18
  80c070:	6c89803a 	cmpltu	r4,r13,r18
  80c074:	4909c83a 	sub	r4,r9,r4
  80c078:	3821883a 	mov	r16,r7
  80c07c:	1023883a 	mov	r17,r2
  80c080:	003eb306 	br	80bb50 <__adddf3+0xc4>
  80c084:	1b88b03a 	or	r4,r3,r14
  80c088:	20008c26 	beq	r4,zero,80c2bc <__adddf3+0x830>
  80c08c:	293fffc4 	addi	r4,r5,-1
  80c090:	2000d326 	beq	r4,zero,80c3e0 <__adddf3+0x954>
  80c094:	2941ffd8 	cmpnei	r5,r5,2047
  80c098:	28008126 	beq	r5,zero,80c2a0 <__adddf3+0x814>
  80c09c:	200b883a 	mov	r5,r4
  80c0a0:	003f6f06 	br	80be60 <__adddf3+0x3d4>
  80c0a4:	00800804 	movi	r2,32
  80c0a8:	1145c83a 	sub	r2,r2,r5
  80c0ac:	6948d83a 	srl	r4,r13,r5
  80c0b0:	48a4983a 	sll	r18,r9,r2
  80c0b4:	6884983a 	sll	r2,r13,r2
  80c0b8:	494ad83a 	srl	r5,r9,r5
  80c0bc:	9124b03a 	or	r18,r18,r4
  80c0c0:	101ac03a 	cmpne	r13,r2,zero
  80c0c4:	9364b03a 	or	r18,r18,r13
  80c0c8:	1947883a 	add	r3,r3,r5
  80c0cc:	003f3806 	br	80bdb0 <__adddf3+0x324>
  80c0d0:	4081ffe0 	cmpeqi	r2,r8,2047
  80c0d4:	103f3e1e 	bne	r2,zero,80bdd0 <__adddf3+0x344>
  80c0d8:	7345883a 	add	r2,r14,r13
  80c0dc:	139d803a 	cmpltu	r14,r2,r14
  80c0e0:	1a49883a 	add	r4,r3,r9
  80c0e4:	2389883a 	add	r4,r4,r14
  80c0e8:	202497fa 	slli	r18,r4,31
  80c0ec:	1004d07a 	srli	r2,r2,1
  80c0f0:	2008d07a 	srli	r4,r4,1
  80c0f4:	4023883a 	mov	r17,r8
  80c0f8:	90a4b03a 	or	r18,r18,r2
  80c0fc:	003f1c06 	br	80bd70 <__adddf3+0x2e4>
  80c100:	6ba5c83a 	sub	r18,r13,r14
  80c104:	48c9c83a 	sub	r4,r9,r3
  80c108:	6c85803a 	cmpltu	r2,r13,r18
  80c10c:	20a7c83a 	sub	r19,r4,r2
  80c110:	3821883a 	mov	r16,r7
  80c114:	003e9306 	br	80bb64 <__adddf3+0xd8>
  80c118:	58006f1e 	bne	r11,zero,80c2d8 <__adddf3+0x84c>
  80c11c:	10001f1e 	bne	r2,zero,80c19c <__adddf3+0x710>
  80c120:	00bfffc4 	movi	r2,-1
  80c124:	0021883a 	mov	r16,zero
  80c128:	003f4106 	br	80be30 <__adddf3+0x3a4>
  80c12c:	4808977a 	slli	r4,r9,29
  80c130:	00c80034 	movhi	r3,8192
  80c134:	18ffffc4 	addi	r3,r3,-1
  80c138:	30c4703a 	and	r2,r6,r3
  80c13c:	4810d0fa 	srli	r8,r9,3
  80c140:	1104b03a 	or	r2,r2,r4
  80c144:	3821883a 	mov	r16,r7
  80c148:	003f1006 	br	80bd8c <__adddf3+0x300>
  80c14c:	7365c83a 	sub	r18,r14,r13
  80c150:	1a47c83a 	sub	r3,r3,r9
  80c154:	7489803a 	cmpltu	r4,r14,r18
  80c158:	1909c83a 	sub	r4,r3,r4
  80c15c:	04400044 	movi	r17,1
  80c160:	003e7b06 	br	80bb50 <__adddf3+0xc4>
  80c164:	1824977a 	slli	r18,r3,29
  80c168:	01c80034 	movhi	r7,8192
  80c16c:	39ffffc4 	addi	r7,r7,-1
  80c170:	21c4703a 	and	r2,r4,r7
  80c174:	1810d0fa 	srli	r8,r3,3
  80c178:	1484b03a 	or	r2,r2,r18
  80c17c:	003f0306 	br	80bd8c <__adddf3+0x300>
  80c180:	1824977a 	slli	r18,r3,29
  80c184:	01480034 	movhi	r5,8192
  80c188:	297fffc4 	addi	r5,r5,-1
  80c18c:	2144703a 	and	r2,r4,r5
  80c190:	1810d0fa 	srli	r8,r3,3
  80c194:	1484b03a 	or	r2,r2,r18
  80c198:	003f2306 	br	80be28 <__adddf3+0x39c>
  80c19c:	4806977a 	slli	r3,r9,29
  80c1a0:	00880034 	movhi	r2,8192
  80c1a4:	10bfffc4 	addi	r2,r2,-1
  80c1a8:	3084703a 	and	r2,r6,r2
  80c1ac:	4810d0fa 	srli	r8,r9,3
  80c1b0:	10c4b03a 	or	r2,r2,r3
  80c1b4:	3821883a 	mov	r16,r7
  80c1b8:	003f1b06 	br	80be28 <__adddf3+0x39c>
  80c1bc:	1b88b03a 	or	r4,r3,r14
  80c1c0:	2024c03a 	cmpne	r18,r4,zero
  80c1c4:	003f3406 	br	80be98 <__adddf3+0x40c>
  80c1c8:	2cbff804 	addi	r18,r5,-32
  80c1cc:	29800820 	cmpeqi	r6,r5,32
  80c1d0:	1c88d83a 	srl	r4,r3,r18
  80c1d4:	3000041e 	bne	r6,zero,80c1e8 <__adddf3+0x75c>
  80c1d8:	01801004 	movi	r6,64
  80c1dc:	314bc83a 	sub	r5,r6,r5
  80c1e0:	1946983a 	sll	r3,r3,r5
  80c1e4:	70dcb03a 	or	r14,r14,r3
  80c1e8:	7024c03a 	cmpne	r18,r14,zero
  80c1ec:	9124b03a 	or	r18,r18,r4
  80c1f0:	003f9e06 	br	80c06c <__adddf3+0x5e0>
  80c1f4:	103efa1e 	bne	r2,zero,80bde0 <__adddf3+0x354>
  80c1f8:	4804977a 	slli	r2,r9,29
  80c1fc:	00c80034 	movhi	r3,8192
  80c200:	18ffffc4 	addi	r3,r3,-1
  80c204:	30cc703a 	and	r6,r6,r3
  80c208:	4810d0fa 	srli	r8,r9,3
  80c20c:	1184b03a 	or	r2,r2,r6
  80c210:	003f0506 	br	80be28 <__adddf3+0x39c>
  80c214:	10004426 	beq	r2,zero,80c328 <__adddf3+0x89c>
  80c218:	4806977a 	slli	r3,r9,29
  80c21c:	00880034 	movhi	r2,8192
  80c220:	10bfffc4 	addi	r2,r2,-1
  80c224:	3084703a 	and	r2,r6,r2
  80c228:	4810d0fa 	srli	r8,r9,3
  80c22c:	10c4b03a 	or	r2,r2,r3
  80c230:	3821883a 	mov	r16,r7
  80c234:	003ed706 	br	80bd94 <__adddf3+0x308>
  80c238:	6ba5c83a 	sub	r18,r13,r14
  80c23c:	48c7c83a 	sub	r3,r9,r3
  80c240:	6c85803a 	cmpltu	r2,r13,r18
  80c244:	1889c83a 	sub	r4,r3,r2
  80c248:	3821883a 	mov	r16,r7
  80c24c:	04400044 	movi	r17,1
  80c250:	003e3f06 	br	80bb50 <__adddf3+0xc4>
  80c254:	180a977a 	slli	r5,r3,29
  80c258:	00880034 	movhi	r2,8192
  80c25c:	10bfffc4 	addi	r2,r2,-1
  80c260:	2084703a 	and	r2,r4,r2
  80c264:	1810d0fa 	srli	r8,r3,3
  80c268:	1144b03a 	or	r2,r2,r5
  80c26c:	003eee06 	br	80be28 <__adddf3+0x39c>
  80c270:	7365c83a 	sub	r18,r14,r13
  80c274:	7485803a 	cmpltu	r2,r14,r18
  80c278:	1a49c83a 	sub	r4,r3,r9
  80c27c:	2089c83a 	sub	r4,r4,r2
  80c280:	2080202c 	andhi	r2,r4,128
  80c284:	10002626 	beq	r2,zero,80c320 <__adddf3+0x894>
  80c288:	6ba5c83a 	sub	r18,r13,r14
  80c28c:	48c7c83a 	sub	r3,r9,r3
  80c290:	6c85803a 	cmpltu	r2,r13,r18
  80c294:	1889c83a 	sub	r4,r3,r2
  80c298:	3821883a 	mov	r16,r7
  80c29c:	003e4a06 	br	80bbc8 <__adddf3+0x13c>
  80c2a0:	4806977a 	slli	r3,r9,29
  80c2a4:	00880034 	movhi	r2,8192
  80c2a8:	10bfffc4 	addi	r2,r2,-1
  80c2ac:	3084703a 	and	r2,r6,r2
  80c2b0:	4810d0fa 	srli	r8,r9,3
  80c2b4:	10c4b03a 	or	r2,r2,r3
  80c2b8:	003edb06 	br	80be28 <__adddf3+0x39c>
  80c2bc:	4806977a 	slli	r3,r9,29
  80c2c0:	00880034 	movhi	r2,8192
  80c2c4:	10bfffc4 	addi	r2,r2,-1
  80c2c8:	3084703a 	and	r2,r6,r2
  80c2cc:	4810d0fa 	srli	r8,r9,3
  80c2d0:	10c4b03a 	or	r2,r2,r3
  80c2d4:	003ead06 	br	80bd8c <__adddf3+0x300>
  80c2d8:	180a977a 	slli	r5,r3,29
  80c2dc:	1810d0fa 	srli	r8,r3,3
  80c2e0:	10002f26 	beq	r2,zero,80c3a0 <__adddf3+0x914>
  80c2e4:	00c80034 	movhi	r3,8192
  80c2e8:	18ffffc4 	addi	r3,r3,-1
  80c2ec:	20c4703a 	and	r2,r4,r3
  80c2f0:	4100022c 	andhi	r4,r8,8
  80c2f4:	1144b03a 	or	r2,r2,r5
  80c2f8:	203ecb26 	beq	r4,zero,80be28 <__adddf3+0x39c>
  80c2fc:	4808d0fa 	srli	r4,r9,3
  80c300:	2140022c 	andhi	r5,r4,8
  80c304:	283ec81e 	bne	r5,zero,80be28 <__adddf3+0x39c>
  80c308:	4812977a 	slli	r9,r9,29
  80c30c:	30c4703a 	and	r2,r6,r3
  80c310:	3821883a 	mov	r16,r7
  80c314:	1244b03a 	or	r2,r2,r9
  80c318:	2011883a 	mov	r8,r4
  80c31c:	003ec206 	br	80be28 <__adddf3+0x39c>
  80c320:	9104b03a 	or	r2,r18,r4
  80c324:	103e921e 	bne	r2,zero,80bd70 <__adddf3+0x2e4>
  80c328:	0011883a 	mov	r8,zero
  80c32c:	100b883a 	mov	r5,r2
  80c330:	0021883a 	mov	r16,zero
  80c334:	003e9706 	br	80bd94 <__adddf3+0x308>
  80c338:	4804977a 	slli	r2,r9,29
  80c33c:	00c80034 	movhi	r3,8192
  80c340:	18ffffc4 	addi	r3,r3,-1
  80c344:	30cc703a 	and	r6,r6,r3
  80c348:	4810d0fa 	srli	r8,r9,3
  80c34c:	1184b03a 	or	r2,r2,r6
  80c350:	003e9006 	br	80bd94 <__adddf3+0x308>
  80c354:	7365883a 	add	r18,r14,r13
  80c358:	1a47883a 	add	r3,r3,r9
  80c35c:	9389803a 	cmpltu	r4,r18,r14
  80c360:	1909883a 	add	r4,r3,r4
  80c364:	2080202c 	andhi	r2,r4,128
  80c368:	103e8126 	beq	r2,zero,80bd70 <__adddf3+0x2e4>
  80c36c:	00bfe034 	movhi	r2,65408
  80c370:	10bfffc4 	addi	r2,r2,-1
  80c374:	2088703a 	and	r4,r4,r2
  80c378:	04400044 	movi	r17,1
  80c37c:	003e7c06 	br	80bd70 <__adddf3+0x2e4>
  80c380:	4804977a 	slli	r2,r9,29
  80c384:	00c80034 	movhi	r3,8192
  80c388:	18ffffc4 	addi	r3,r3,-1
  80c38c:	30cc703a 	and	r6,r6,r3
  80c390:	4810d0fa 	srli	r8,r9,3
  80c394:	1184b03a 	or	r2,r2,r6
  80c398:	3821883a 	mov	r16,r7
  80c39c:	003ea206 	br	80be28 <__adddf3+0x39c>
  80c3a0:	00880034 	movhi	r2,8192
  80c3a4:	10bfffc4 	addi	r2,r2,-1
  80c3a8:	2084703a 	and	r2,r4,r2
  80c3ac:	1144b03a 	or	r2,r2,r5
  80c3b0:	003e9d06 	br	80be28 <__adddf3+0x39c>
  80c3b4:	293ff804 	addi	r4,r5,-32
  80c3b8:	29800820 	cmpeqi	r6,r5,32
  80c3bc:	1908d83a 	srl	r4,r3,r4
  80c3c0:	3000041e 	bne	r6,zero,80c3d4 <__adddf3+0x948>
  80c3c4:	01801004 	movi	r6,64
  80c3c8:	314bc83a 	sub	r5,r6,r5
  80c3cc:	1946983a 	sll	r3,r3,r5
  80c3d0:	70dcb03a 	or	r14,r14,r3
  80c3d4:	7024c03a 	cmpne	r18,r14,zero
  80c3d8:	9124b03a 	or	r18,r18,r4
  80c3dc:	003eae06 	br	80be98 <__adddf3+0x40c>
  80c3e0:	7365883a 	add	r18,r14,r13
  80c3e4:	1a47883a 	add	r3,r3,r9
  80c3e8:	9345803a 	cmpltu	r2,r18,r13
  80c3ec:	1889883a 	add	r4,r3,r2
  80c3f0:	003e5c06 	br	80bd64 <__adddf3+0x2d8>
  80c3f4:	0005883a 	mov	r2,zero
  80c3f8:	0141ffc4 	movi	r5,2047
  80c3fc:	0007883a 	mov	r3,zero
  80c400:	003e0806 	br	80bc24 <__adddf3+0x198>

0080c404 <__divdf3>:
  80c404:	2810d53a 	srli	r8,r5,20
  80c408:	defff004 	addi	sp,sp,-64
  80c40c:	dc000615 	stw	r16,24(sp)
  80c410:	04000434 	movhi	r16,16
  80c414:	df000e15 	stw	fp,56(sp)
  80c418:	ddc00d15 	stw	r23,52(sp)
  80c41c:	dd800c15 	stw	r22,48(sp)
  80c420:	dd000a15 	stw	r20,40(sp)
  80c424:	843fffc4 	addi	r16,r16,-1
  80c428:	dfc00f15 	stw	ra,60(sp)
  80c42c:	dd400b15 	stw	r21,44(sp)
  80c430:	dcc00915 	stw	r19,36(sp)
  80c434:	dc800815 	stw	r18,32(sp)
  80c438:	dc400715 	stw	r17,28(sp)
  80c43c:	4201ffcc 	andi	r8,r8,2047
  80c440:	282ed7fa 	srli	r23,r5,31
  80c444:	3039883a 	mov	fp,r6
  80c448:	382d883a 	mov	r22,r7
  80c44c:	2029883a 	mov	r20,r4
  80c450:	2c20703a 	and	r16,r5,r16
  80c454:	40005326 	beq	r8,zero,80c5a4 <__divdf3+0x1a0>
  80c458:	4081ffe0 	cmpeqi	r2,r8,2047
  80c45c:	1000641e 	bne	r2,zero,80c5f0 <__divdf3+0x1ec>
  80c460:	2026d77a 	srli	r19,r4,29
  80c464:	800a90fa 	slli	r5,r16,3
  80c468:	202890fa 	slli	r20,r4,3
  80c46c:	44bf0044 	addi	r18,r8,-1023
  80c470:	994ab03a 	or	r5,r19,r5
  80c474:	2cc02034 	orhi	r19,r5,128
  80c478:	0021883a 	mov	r16,zero
  80c47c:	0023883a 	mov	r17,zero
  80c480:	b010d53a 	srli	r8,r22,20
  80c484:	00c00434 	movhi	r3,16
  80c488:	18ffffc4 	addi	r3,r3,-1
  80c48c:	4201ffcc 	andi	r8,r8,2047
  80c490:	b02ad7fa 	srli	r21,r22,31
  80c494:	b0ec703a 	and	r22,r22,r3
  80c498:	40005c26 	beq	r8,zero,80c60c <__divdf3+0x208>
  80c49c:	4081ffe0 	cmpeqi	r2,r8,2047
  80c4a0:	1000201e 	bne	r2,zero,80c524 <__divdf3+0x120>
  80c4a4:	b00690fa 	slli	r3,r22,3
  80c4a8:	e004d77a 	srli	r2,fp,29
  80c4ac:	e01490fa 	slli	r10,fp,3
  80c4b0:	423f0044 	addi	r8,r8,-1023
  80c4b4:	10c6b03a 	or	r3,r2,r3
  80c4b8:	1d802034 	orhi	r22,r3,128
  80c4bc:	9225c83a 	sub	r18,r18,r8
  80c4c0:	0007883a 	mov	r3,zero
  80c4c4:	80800428 	cmpgeui	r2,r16,16
  80c4c8:	bd52f03a 	xor	r9,r23,r21
  80c4cc:	1000a81e 	bne	r2,zero,80c770 <__divdf3+0x36c>
  80c4d0:	800c90ba 	slli	r6,r16,2
  80c4d4:	00802074 	movhi	r2,129
  80c4d8:	3085883a 	add	r2,r6,r2
  80c4dc:	10b13917 	ldw	r2,-15132(r2)
  80c4e0:	1000683a 	jmp	r2
  80c4e4:	0080c770 	cmpltui	r2,zero,797
  80c4e8:	0080c594 	movui	r2,790
  80c4ec:	0080c540 	call	80c54 <__alt_mem_sdram-0x77f3ac>
  80c4f0:	0080c6b8 	rdprs	r2,zero,794
  80c4f4:	0080c540 	call	80c54 <__alt_mem_sdram-0x77f3ac>
  80c4f8:	0080c714 	movui	r2,796
  80c4fc:	0080c540 	call	80c54 <__alt_mem_sdram-0x77f3ac>
  80c500:	0080c6b8 	rdprs	r2,zero,794
  80c504:	0080c594 	movui	r2,790
  80c508:	0080c594 	movui	r2,790
  80c50c:	0080c714 	movui	r2,796
  80c510:	0080c6b8 	rdprs	r2,zero,794
  80c514:	0080c650 	cmplti	r2,zero,793
  80c518:	0080c650 	cmplti	r2,zero,793
  80c51c:	0080c650 	cmplti	r2,zero,793
  80c520:	0080c72c 	andhi	r2,zero,796
  80c524:	b714b03a 	or	r10,r22,fp
  80c528:	94be0044 	addi	r18,r18,-2047
  80c52c:	5000671e 	bne	r10,zero,80c6cc <__divdf3+0x2c8>
  80c530:	84000094 	ori	r16,r16,2
  80c534:	002d883a 	mov	r22,zero
  80c538:	00c00084 	movi	r3,2
  80c53c:	003fe106 	br	80c4c4 <__divdf3+0xc0>
  80c540:	0007883a 	mov	r3,zero
  80c544:	000b883a 	mov	r5,zero
  80c548:	0029883a 	mov	r20,zero
  80c54c:	1806953a 	slli	r3,r3,20
  80c550:	4a403fcc 	andi	r9,r9,255
  80c554:	481297fa 	slli	r9,r9,31
  80c558:	1946b03a 	or	r3,r3,r5
  80c55c:	a005883a 	mov	r2,r20
  80c560:	1a46b03a 	or	r3,r3,r9
  80c564:	dfc00f17 	ldw	ra,60(sp)
  80c568:	df000e17 	ldw	fp,56(sp)
  80c56c:	ddc00d17 	ldw	r23,52(sp)
  80c570:	dd800c17 	ldw	r22,48(sp)
  80c574:	dd400b17 	ldw	r21,44(sp)
  80c578:	dd000a17 	ldw	r20,40(sp)
  80c57c:	dcc00917 	ldw	r19,36(sp)
  80c580:	dc800817 	ldw	r18,32(sp)
  80c584:	dc400717 	ldw	r17,28(sp)
  80c588:	dc000617 	ldw	r16,24(sp)
  80c58c:	dec01004 	addi	sp,sp,64
  80c590:	f800283a 	ret
  80c594:	00c1ffc4 	movi	r3,2047
  80c598:	000b883a 	mov	r5,zero
  80c59c:	0029883a 	mov	r20,zero
  80c5a0:	003fea06 	br	80c54c <__divdf3+0x148>
  80c5a4:	2426b03a 	or	r19,r4,r16
  80c5a8:	2023883a 	mov	r17,r4
  80c5ac:	98004f26 	beq	r19,zero,80c6ec <__divdf3+0x2e8>
  80c5b0:	80017b26 	beq	r16,zero,80cba0 <__divdf3+0x79c>
  80c5b4:	8009883a 	mov	r4,r16
  80c5b8:	08014b00 	call	8014b0 <__clzsi2>
  80c5bc:	113ffd44 	addi	r4,r2,-11
  80c5c0:	00c00744 	movi	r3,29
  80c5c4:	14fffe04 	addi	r19,r2,-8
  80c5c8:	1907c83a 	sub	r3,r3,r4
  80c5cc:	84ca983a 	sll	r5,r16,r19
  80c5d0:	88c6d83a 	srl	r3,r17,r3
  80c5d4:	8ce8983a 	sll	r20,r17,r19
  80c5d8:	1966b03a 	or	r19,r3,r5
  80c5dc:	023f0344 	movi	r8,-1011
  80c5e0:	40a5c83a 	sub	r18,r8,r2
  80c5e4:	0021883a 	mov	r16,zero
  80c5e8:	0023883a 	mov	r17,zero
  80c5ec:	003fa406 	br	80c480 <__divdf3+0x7c>
  80c5f0:	2426b03a 	or	r19,r4,r16
  80c5f4:	9800421e 	bne	r19,zero,80c700 <__divdf3+0x2fc>
  80c5f8:	0029883a 	mov	r20,zero
  80c5fc:	04000204 	movi	r16,8
  80c600:	0481ffc4 	movi	r18,2047
  80c604:	04400084 	movi	r17,2
  80c608:	003f9d06 	br	80c480 <__divdf3+0x7c>
  80c60c:	b714b03a 	or	r10,r22,fp
  80c610:	50003226 	beq	r10,zero,80c6dc <__divdf3+0x2d8>
  80c614:	b0016c26 	beq	r22,zero,80cbc8 <__divdf3+0x7c4>
  80c618:	b009883a 	mov	r4,r22
  80c61c:	08014b00 	call	8014b0 <__clzsi2>
  80c620:	117ffd44 	addi	r5,r2,-11
  80c624:	01000744 	movi	r4,29
  80c628:	12bffe04 	addi	r10,r2,-8
  80c62c:	2149c83a 	sub	r4,r4,r5
  80c630:	b286983a 	sll	r3,r22,r10
  80c634:	e108d83a 	srl	r4,fp,r4
  80c638:	e294983a 	sll	r10,fp,r10
  80c63c:	20ecb03a 	or	r22,r4,r3
  80c640:	1491883a 	add	r8,r2,r18
  80c644:	4480fcc4 	addi	r18,r8,1011
  80c648:	0007883a 	mov	r3,zero
  80c64c:	003f9d06 	br	80c4c4 <__divdf3+0xc0>
  80c650:	b813883a 	mov	r9,r23
  80c654:	888000a0 	cmpeqi	r2,r17,2
  80c658:	103fce1e 	bne	r2,zero,80c594 <__divdf3+0x190>
  80c65c:	888000e0 	cmpeqi	r2,r17,3
  80c660:	1001ac1e 	bne	r2,zero,80cd14 <__divdf3+0x910>
  80c664:	88800060 	cmpeqi	r2,r17,1
  80c668:	103fb51e 	bne	r2,zero,80c540 <__divdf3+0x13c>
  80c66c:	9440ffc4 	addi	r17,r18,1023
  80c670:	04411c0e 	bge	zero,r17,80cae4 <__divdf3+0x6e0>
  80c674:	a08001cc 	andi	r2,r20,7
  80c678:	1001831e 	bne	r2,zero,80cc88 <__divdf3+0x884>
  80c67c:	a008d0fa 	srli	r4,r20,3
  80c680:	9880402c 	andhi	r2,r19,256
  80c684:	10000426 	beq	r2,zero,80c698 <__divdf3+0x294>
  80c688:	00bfc034 	movhi	r2,65280
  80c68c:	10bfffc4 	addi	r2,r2,-1
  80c690:	98a6703a 	and	r19,r19,r2
  80c694:	94410004 	addi	r17,r18,1024
  80c698:	8881ffc8 	cmpgei	r2,r17,2047
  80c69c:	103fbd1e 	bne	r2,zero,80c594 <__divdf3+0x190>
  80c6a0:	9828977a 	slli	r20,r19,29
  80c6a4:	980a927a 	slli	r5,r19,9
  80c6a8:	88c1ffcc 	andi	r3,r17,2047
  80c6ac:	a128b03a 	or	r20,r20,r4
  80c6b0:	280ad33a 	srli	r5,r5,12
  80c6b4:	003fa506 	br	80c54c <__divdf3+0x148>
  80c6b8:	a813883a 	mov	r9,r21
  80c6bc:	b027883a 	mov	r19,r22
  80c6c0:	5029883a 	mov	r20,r10
  80c6c4:	1823883a 	mov	r17,r3
  80c6c8:	003fe206 	br	80c654 <__divdf3+0x250>
  80c6cc:	840000d4 	ori	r16,r16,3
  80c6d0:	e015883a 	mov	r10,fp
  80c6d4:	00c000c4 	movi	r3,3
  80c6d8:	003f7a06 	br	80c4c4 <__divdf3+0xc0>
  80c6dc:	84000054 	ori	r16,r16,1
  80c6e0:	002d883a 	mov	r22,zero
  80c6e4:	00c00044 	movi	r3,1
  80c6e8:	003f7606 	br	80c4c4 <__divdf3+0xc0>
  80c6ec:	0029883a 	mov	r20,zero
  80c6f0:	04000104 	movi	r16,4
  80c6f4:	0025883a 	mov	r18,zero
  80c6f8:	04400044 	movi	r17,1
  80c6fc:	003f6006 	br	80c480 <__divdf3+0x7c>
  80c700:	8027883a 	mov	r19,r16
  80c704:	0481ffc4 	movi	r18,2047
  80c708:	04000304 	movi	r16,12
  80c70c:	044000c4 	movi	r17,3
  80c710:	003f5b06 	br	80c480 <__divdf3+0x7c>
  80c714:	01400434 	movhi	r5,16
  80c718:	0013883a 	mov	r9,zero
  80c71c:	297fffc4 	addi	r5,r5,-1
  80c720:	053fffc4 	movi	r20,-1
  80c724:	00c1ffc4 	movi	r3,2047
  80c728:	003f8806 	br	80c54c <__divdf3+0x148>
  80c72c:	9880022c 	andhi	r2,r19,8
  80c730:	10000926 	beq	r2,zero,80c758 <__divdf3+0x354>
  80c734:	b080022c 	andhi	r2,r22,8
  80c738:	1000071e 	bne	r2,zero,80c758 <__divdf3+0x354>
  80c73c:	00800434 	movhi	r2,16
  80c740:	b1400234 	orhi	r5,r22,8
  80c744:	10bfffc4 	addi	r2,r2,-1
  80c748:	288a703a 	and	r5,r5,r2
  80c74c:	a813883a 	mov	r9,r21
  80c750:	5029883a 	mov	r20,r10
  80c754:	003ff306 	br	80c724 <__divdf3+0x320>
  80c758:	00800434 	movhi	r2,16
  80c75c:	99400234 	orhi	r5,r19,8
  80c760:	10bfffc4 	addi	r2,r2,-1
  80c764:	288a703a 	and	r5,r5,r2
  80c768:	b813883a 	mov	r9,r23
  80c76c:	003fed06 	br	80c724 <__divdf3+0x320>
  80c770:	b4c10536 	bltu	r22,r19,80cb88 <__divdf3+0x784>
  80c774:	b4c10326 	beq	r22,r19,80cb84 <__divdf3+0x780>
  80c778:	94bfffc4 	addi	r18,r18,-1
  80c77c:	a039883a 	mov	fp,r20
  80c780:	9821883a 	mov	r16,r19
  80c784:	0023883a 	mov	r17,zero
  80c788:	b006923a 	slli	r3,r22,8
  80c78c:	502cd63a 	srli	r22,r10,24
  80c790:	8009883a 	mov	r4,r16
  80c794:	182ed43a 	srli	r23,r3,16
  80c798:	b0ecb03a 	or	r22,r22,r3
  80c79c:	da400015 	stw	r9,0(sp)
  80c7a0:	b80b883a 	mov	r5,r23
  80c7a4:	502a923a 	slli	r21,r10,8
  80c7a8:	b53fffcc 	andi	r20,r22,65535
  80c7ac:	080b9cc0 	call	80b9cc <__udivsi3>
  80c7b0:	100b883a 	mov	r5,r2
  80c7b4:	a009883a 	mov	r4,r20
  80c7b8:	1027883a 	mov	r19,r2
  80c7bc:	08015040 	call	801504 <__mulsi3>
  80c7c0:	8009883a 	mov	r4,r16
  80c7c4:	b80b883a 	mov	r5,r23
  80c7c8:	1021883a 	mov	r16,r2
  80c7cc:	080ba300 	call	80ba30 <__umodsi3>
  80c7d0:	1004943a 	slli	r2,r2,16
  80c7d4:	e008d43a 	srli	r4,fp,16
  80c7d8:	da400017 	ldw	r9,0(sp)
  80c7dc:	2088b03a 	or	r4,r4,r2
  80c7e0:	2400042e 	bgeu	r4,r16,80c7f4 <__divdf3+0x3f0>
  80c7e4:	2589883a 	add	r4,r4,r22
  80c7e8:	98bfffc4 	addi	r2,r19,-1
  80c7ec:	2581082e 	bgeu	r4,r22,80cc10 <__divdf3+0x80c>
  80c7f0:	1027883a 	mov	r19,r2
  80c7f4:	2421c83a 	sub	r16,r4,r16
  80c7f8:	b80b883a 	mov	r5,r23
  80c7fc:	8009883a 	mov	r4,r16
  80c800:	da400215 	stw	r9,8(sp)
  80c804:	080b9cc0 	call	80b9cc <__udivsi3>
  80c808:	100b883a 	mov	r5,r2
  80c80c:	a009883a 	mov	r4,r20
  80c810:	d8800115 	stw	r2,4(sp)
  80c814:	08015040 	call	801504 <__mulsi3>
  80c818:	b80b883a 	mov	r5,r23
  80c81c:	8009883a 	mov	r4,r16
  80c820:	d8800015 	stw	r2,0(sp)
  80c824:	080ba300 	call	80ba30 <__umodsi3>
  80c828:	100c943a 	slli	r6,r2,16
  80c82c:	d8c00017 	ldw	r3,0(sp)
  80c830:	e73fffcc 	andi	fp,fp,65535
  80c834:	e18cb03a 	or	r6,fp,r6
  80c838:	d9c00117 	ldw	r7,4(sp)
  80c83c:	da400217 	ldw	r9,8(sp)
  80c840:	30c0042e 	bgeu	r6,r3,80c854 <__divdf3+0x450>
  80c844:	358d883a 	add	r6,r6,r22
  80c848:	38bfffc4 	addi	r2,r7,-1
  80c84c:	3580ec2e 	bgeu	r6,r22,80cc00 <__divdf3+0x7fc>
  80c850:	100f883a 	mov	r7,r2
  80c854:	9826943a 	slli	r19,r19,16
  80c858:	af3fffcc 	andi	fp,r21,65535
  80c85c:	30c7c83a 	sub	r3,r6,r3
  80c860:	99e6b03a 	or	r19,r19,r7
  80c864:	980ed43a 	srli	r7,r19,16
  80c868:	9abfffcc 	andi	r10,r19,65535
  80c86c:	5009883a 	mov	r4,r10
  80c870:	e00b883a 	mov	r5,fp
  80c874:	da400515 	stw	r9,20(sp)
  80c878:	d8c00315 	stw	r3,12(sp)
  80c87c:	da800415 	stw	r10,16(sp)
  80c880:	d9c00015 	stw	r7,0(sp)
  80c884:	08015040 	call	801504 <__mulsi3>
  80c888:	d9c00017 	ldw	r7,0(sp)
  80c88c:	e00b883a 	mov	r5,fp
  80c890:	d8800215 	stw	r2,8(sp)
  80c894:	3809883a 	mov	r4,r7
  80c898:	08015040 	call	801504 <__mulsi3>
  80c89c:	d9c00017 	ldw	r7,0(sp)
  80c8a0:	a820d43a 	srli	r16,r21,16
  80c8a4:	d8800115 	stw	r2,4(sp)
  80c8a8:	3809883a 	mov	r4,r7
  80c8ac:	800b883a 	mov	r5,r16
  80c8b0:	08015040 	call	801504 <__mulsi3>
  80c8b4:	da800417 	ldw	r10,16(sp)
  80c8b8:	8009883a 	mov	r4,r16
  80c8bc:	d8800015 	stw	r2,0(sp)
  80c8c0:	500b883a 	mov	r5,r10
  80c8c4:	08015040 	call	801504 <__mulsi3>
  80c8c8:	d9800217 	ldw	r6,8(sp)
  80c8cc:	d9c00117 	ldw	r7,4(sp)
  80c8d0:	da000017 	ldw	r8,0(sp)
  80c8d4:	3008d43a 	srli	r4,r6,16
  80c8d8:	11c5883a 	add	r2,r2,r7
  80c8dc:	d8c00317 	ldw	r3,12(sp)
  80c8e0:	2089883a 	add	r4,r4,r2
  80c8e4:	da400517 	ldw	r9,20(sp)
  80c8e8:	21c0022e 	bgeu	r4,r7,80c8f4 <__divdf3+0x4f0>
  80c8ec:	00800074 	movhi	r2,1
  80c8f0:	4091883a 	add	r8,r8,r2
  80c8f4:	200ad43a 	srli	r5,r4,16
  80c8f8:	2008943a 	slli	r4,r4,16
  80c8fc:	31bfffcc 	andi	r6,r6,65535
  80c900:	2a0b883a 	add	r5,r5,r8
  80c904:	218d883a 	add	r6,r4,r6
  80c908:	19409436 	bltu	r3,r5,80cb5c <__divdf3+0x758>
  80c90c:	19409226 	beq	r3,r5,80cb58 <__divdf3+0x754>
  80c910:	898dc83a 	sub	r6,r17,r6
  80c914:	89a3803a 	cmpltu	r17,r17,r6
  80c918:	1947c83a 	sub	r3,r3,r5
  80c91c:	1c47c83a 	sub	r3,r3,r17
  80c920:	9440ffc4 	addi	r17,r18,1023
  80c924:	b0c0d326 	beq	r22,r3,80cc74 <__divdf3+0x870>
  80c928:	1809883a 	mov	r4,r3
  80c92c:	b80b883a 	mov	r5,r23
  80c930:	d9800315 	stw	r6,12(sp)
  80c934:	da400215 	stw	r9,8(sp)
  80c938:	d8c00015 	stw	r3,0(sp)
  80c93c:	080b9cc0 	call	80b9cc <__udivsi3>
  80c940:	100b883a 	mov	r5,r2
  80c944:	a009883a 	mov	r4,r20
  80c948:	d8800115 	stw	r2,4(sp)
  80c94c:	08015040 	call	801504 <__mulsi3>
  80c950:	d8c00017 	ldw	r3,0(sp)
  80c954:	b80b883a 	mov	r5,r23
  80c958:	d8800015 	stw	r2,0(sp)
  80c95c:	1809883a 	mov	r4,r3
  80c960:	080ba300 	call	80ba30 <__umodsi3>
  80c964:	d9800317 	ldw	r6,12(sp)
  80c968:	1006943a 	slli	r3,r2,16
  80c96c:	da000017 	ldw	r8,0(sp)
  80c970:	3008d43a 	srli	r4,r6,16
  80c974:	d9c00117 	ldw	r7,4(sp)
  80c978:	da400217 	ldw	r9,8(sp)
  80c97c:	20c6b03a 	or	r3,r4,r3
  80c980:	1a00062e 	bgeu	r3,r8,80c99c <__divdf3+0x598>
  80c984:	1d87883a 	add	r3,r3,r22
  80c988:	38bfffc4 	addi	r2,r7,-1
  80c98c:	1d80c836 	bltu	r3,r22,80ccb0 <__divdf3+0x8ac>
  80c990:	1a00c72e 	bgeu	r3,r8,80ccb0 <__divdf3+0x8ac>
  80c994:	39ffff84 	addi	r7,r7,-2
  80c998:	1d87883a 	add	r3,r3,r22
  80c99c:	1a07c83a 	sub	r3,r3,r8
  80c9a0:	1809883a 	mov	r4,r3
  80c9a4:	b80b883a 	mov	r5,r23
  80c9a8:	d9800415 	stw	r6,16(sp)
  80c9ac:	da400315 	stw	r9,12(sp)
  80c9b0:	d9c00215 	stw	r7,8(sp)
  80c9b4:	d8c00115 	stw	r3,4(sp)
  80c9b8:	080b9cc0 	call	80b9cc <__udivsi3>
  80c9bc:	100b883a 	mov	r5,r2
  80c9c0:	a009883a 	mov	r4,r20
  80c9c4:	d8800015 	stw	r2,0(sp)
  80c9c8:	08015040 	call	801504 <__mulsi3>
  80c9cc:	d8c00117 	ldw	r3,4(sp)
  80c9d0:	b80b883a 	mov	r5,r23
  80c9d4:	102f883a 	mov	r23,r2
  80c9d8:	1809883a 	mov	r4,r3
  80c9dc:	080ba300 	call	80ba30 <__umodsi3>
  80c9e0:	d9800417 	ldw	r6,16(sp)
  80c9e4:	1004943a 	slli	r2,r2,16
  80c9e8:	da000017 	ldw	r8,0(sp)
  80c9ec:	31bfffcc 	andi	r6,r6,65535
  80c9f0:	308cb03a 	or	r6,r6,r2
  80c9f4:	d9c00217 	ldw	r7,8(sp)
  80c9f8:	da400317 	ldw	r9,12(sp)
  80c9fc:	35c0062e 	bgeu	r6,r23,80ca18 <__divdf3+0x614>
  80ca00:	358d883a 	add	r6,r6,r22
  80ca04:	40bfffc4 	addi	r2,r8,-1
  80ca08:	3580a736 	bltu	r6,r22,80cca8 <__divdf3+0x8a4>
  80ca0c:	35c0a62e 	bgeu	r6,r23,80cca8 <__divdf3+0x8a4>
  80ca10:	423fff84 	addi	r8,r8,-2
  80ca14:	358d883a 	add	r6,r6,r22
  80ca18:	3828943a 	slli	r20,r7,16
  80ca1c:	35d5c83a 	sub	r10,r6,r23
  80ca20:	e009883a 	mov	r4,fp
  80ca24:	a228b03a 	or	r20,r20,r8
  80ca28:	a1ffffcc 	andi	r7,r20,65535
  80ca2c:	a02ed43a 	srli	r23,r20,16
  80ca30:	380b883a 	mov	r5,r7
  80ca34:	da400315 	stw	r9,12(sp)
  80ca38:	da800215 	stw	r10,8(sp)
  80ca3c:	d9c00115 	stw	r7,4(sp)
  80ca40:	08015040 	call	801504 <__mulsi3>
  80ca44:	e00b883a 	mov	r5,fp
  80ca48:	b809883a 	mov	r4,r23
  80ca4c:	1039883a 	mov	fp,r2
  80ca50:	08015040 	call	801504 <__mulsi3>
  80ca54:	8009883a 	mov	r4,r16
  80ca58:	b80b883a 	mov	r5,r23
  80ca5c:	d8800015 	stw	r2,0(sp)
  80ca60:	08015040 	call	801504 <__mulsi3>
  80ca64:	d9c00117 	ldw	r7,4(sp)
  80ca68:	8009883a 	mov	r4,r16
  80ca6c:	1021883a 	mov	r16,r2
  80ca70:	380b883a 	mov	r5,r7
  80ca74:	08015040 	call	801504 <__mulsi3>
  80ca78:	d9800017 	ldw	r6,0(sp)
  80ca7c:	e006d43a 	srli	r3,fp,16
  80ca80:	da800217 	ldw	r10,8(sp)
  80ca84:	1185883a 	add	r2,r2,r6
  80ca88:	1887883a 	add	r3,r3,r2
  80ca8c:	da400317 	ldw	r9,12(sp)
  80ca90:	1980022e 	bgeu	r3,r6,80ca9c <__divdf3+0x698>
  80ca94:	00800074 	movhi	r2,1
  80ca98:	80a1883a 	add	r16,r16,r2
  80ca9c:	1808d43a 	srli	r4,r3,16
  80caa0:	1806943a 	slli	r3,r3,16
  80caa4:	e73fffcc 	andi	fp,fp,65535
  80caa8:	2409883a 	add	r4,r4,r16
  80caac:	1f07883a 	add	r3,r3,fp
  80cab0:	51000436 	bltu	r10,r4,80cac4 <__divdf3+0x6c0>
  80cab4:	51000226 	beq	r10,r4,80cac0 <__divdf3+0x6bc>
  80cab8:	a5000054 	ori	r20,r20,1
  80cabc:	003eec06 	br	80c670 <__divdf3+0x26c>
  80cac0:	183eeb26 	beq	r3,zero,80c670 <__divdf3+0x26c>
  80cac4:	b28d883a 	add	r6,r22,r10
  80cac8:	a0bfffc4 	addi	r2,r20,-1
  80cacc:	35806536 	bltu	r6,r22,80cc64 <__divdf3+0x860>
  80cad0:	31008036 	bltu	r6,r4,80ccd4 <__divdf3+0x8d0>
  80cad4:	31009426 	beq	r6,r4,80cd28 <__divdf3+0x924>
  80cad8:	1029883a 	mov	r20,r2
  80cadc:	003ff606 	br	80cab8 <__divdf3+0x6b4>
  80cae0:	053fffc4 	movi	r20,-1
  80cae4:	01400044 	movi	r5,1
  80cae8:	2c4bc83a 	sub	r5,r5,r17
  80caec:	28800e48 	cmpgei	r2,r5,57
  80caf0:	103e931e 	bne	r2,zero,80c540 <__divdf3+0x13c>
  80caf4:	28800808 	cmpgei	r2,r5,32
  80caf8:	1000491e 	bne	r2,zero,80cc20 <__divdf3+0x81c>
  80cafc:	92010784 	addi	r8,r18,1054
  80cb00:	9a04983a 	sll	r2,r19,r8
  80cb04:	a146d83a 	srl	r3,r20,r5
  80cb08:	a210983a 	sll	r8,r20,r8
  80cb0c:	994ad83a 	srl	r5,r19,r5
  80cb10:	10e8b03a 	or	r20,r2,r3
  80cb14:	4010c03a 	cmpne	r8,r8,zero
  80cb18:	a228b03a 	or	r20,r20,r8
  80cb1c:	a08001cc 	andi	r2,r20,7
  80cb20:	10000726 	beq	r2,zero,80cb40 <__divdf3+0x73c>
  80cb24:	a08003cc 	andi	r2,r20,15
  80cb28:	10800120 	cmpeqi	r2,r2,4
  80cb2c:	1000041e 	bne	r2,zero,80cb40 <__divdf3+0x73c>
  80cb30:	a0800104 	addi	r2,r20,4
  80cb34:	1529803a 	cmpltu	r20,r2,r20
  80cb38:	2d0b883a 	add	r5,r5,r20
  80cb3c:	1029883a 	mov	r20,r2
  80cb40:	2880202c 	andhi	r2,r5,128
  80cb44:	10006f26 	beq	r2,zero,80cd04 <__divdf3+0x900>
  80cb48:	00c00044 	movi	r3,1
  80cb4c:	000b883a 	mov	r5,zero
  80cb50:	0029883a 	mov	r20,zero
  80cb54:	003e7d06 	br	80c54c <__divdf3+0x148>
  80cb58:	89bf6d2e 	bgeu	r17,r6,80c910 <__divdf3+0x50c>
  80cb5c:	8d63883a 	add	r17,r17,r21
  80cb60:	8d45803a 	cmpltu	r2,r17,r21
  80cb64:	1585883a 	add	r2,r2,r22
  80cb68:	1887883a 	add	r3,r3,r2
  80cb6c:	98bfffc4 	addi	r2,r19,-1
  80cb70:	b0c0202e 	bgeu	r22,r3,80cbf4 <__divdf3+0x7f0>
  80cb74:	19405136 	bltu	r3,r5,80ccbc <__divdf3+0x8b8>
  80cb78:	28c04f26 	beq	r5,r3,80ccb8 <__divdf3+0x8b4>
  80cb7c:	1027883a 	mov	r19,r2
  80cb80:	003f6306 	br	80c910 <__divdf3+0x50c>
  80cb84:	a2befc36 	bltu	r20,r10,80c778 <__divdf3+0x374>
  80cb88:	983897fa 	slli	fp,r19,31
  80cb8c:	a004d07a 	srli	r2,r20,1
  80cb90:	9820d07a 	srli	r16,r19,1
  80cb94:	a02297fa 	slli	r17,r20,31
  80cb98:	e0b8b03a 	or	fp,fp,r2
  80cb9c:	003efa06 	br	80c788 <__divdf3+0x384>
  80cba0:	08014b00 	call	8014b0 <__clzsi2>
  80cba4:	11000544 	addi	r4,r2,21
  80cba8:	20c00748 	cmpgei	r3,r4,29
  80cbac:	100b883a 	mov	r5,r2
  80cbb0:	10800804 	addi	r2,r2,32
  80cbb4:	183e8226 	beq	r3,zero,80c5c0 <__divdf3+0x1bc>
  80cbb8:	297ffe04 	addi	r5,r5,-8
  80cbbc:	a166983a 	sll	r19,r20,r5
  80cbc0:	0029883a 	mov	r20,zero
  80cbc4:	003e8506 	br	80c5dc <__divdf3+0x1d8>
  80cbc8:	e009883a 	mov	r4,fp
  80cbcc:	08014b00 	call	8014b0 <__clzsi2>
  80cbd0:	11400544 	addi	r5,r2,21
  80cbd4:	29000748 	cmpgei	r4,r5,29
  80cbd8:	1007883a 	mov	r3,r2
  80cbdc:	10800804 	addi	r2,r2,32
  80cbe0:	203e9026 	beq	r4,zero,80c624 <__divdf3+0x220>
  80cbe4:	18fffe04 	addi	r3,r3,-8
  80cbe8:	e0ec983a 	sll	r22,fp,r3
  80cbec:	0015883a 	mov	r10,zero
  80cbf0:	003e9306 	br	80c640 <__divdf3+0x23c>
  80cbf4:	b0ffe11e 	bne	r22,r3,80cb7c <__divdf3+0x778>
  80cbf8:	8d7fe036 	bltu	r17,r21,80cb7c <__divdf3+0x778>
  80cbfc:	003fdd06 	br	80cb74 <__divdf3+0x770>
  80cc00:	30ff132e 	bgeu	r6,r3,80c850 <__divdf3+0x44c>
  80cc04:	39ffff84 	addi	r7,r7,-2
  80cc08:	358d883a 	add	r6,r6,r22
  80cc0c:	003f1106 	br	80c854 <__divdf3+0x450>
  80cc10:	243ef72e 	bgeu	r4,r16,80c7f0 <__divdf3+0x3ec>
  80cc14:	9cffff84 	addi	r19,r19,-2
  80cc18:	2589883a 	add	r4,r4,r22
  80cc1c:	003ef506 	br	80c7f4 <__divdf3+0x3f0>
  80cc20:	00fff844 	movi	r3,-31
  80cc24:	1c47c83a 	sub	r3,r3,r17
  80cc28:	29400820 	cmpeqi	r5,r5,32
  80cc2c:	98c6d83a 	srl	r3,r19,r3
  80cc30:	2800031e 	bne	r5,zero,80cc40 <__divdf3+0x83c>
  80cc34:	91410f84 	addi	r5,r18,1086
  80cc38:	994a983a 	sll	r5,r19,r5
  80cc3c:	a168b03a 	or	r20,r20,r5
  80cc40:	a028c03a 	cmpne	r20,r20,zero
  80cc44:	a0e8b03a 	or	r20,r20,r3
  80cc48:	a4c001cc 	andi	r19,r20,7
  80cc4c:	9800291e 	bne	r19,zero,80ccf4 <__divdf3+0x8f0>
  80cc50:	000b883a 	mov	r5,zero
  80cc54:	a028d0fa 	srli	r20,r20,3
  80cc58:	0007883a 	mov	r3,zero
  80cc5c:	a4e8b03a 	or	r20,r20,r19
  80cc60:	003e3a06 	br	80c54c <__divdf3+0x148>
  80cc64:	1029883a 	mov	r20,r2
  80cc68:	313f931e 	bne	r6,r4,80cab8 <__divdf3+0x6b4>
  80cc6c:	1d7f921e 	bne	r3,r21,80cab8 <__divdf3+0x6b4>
  80cc70:	003e7f06 	br	80c670 <__divdf3+0x26c>
  80cc74:	047f9a0e 	bge	zero,r17,80cae0 <__divdf3+0x6dc>
  80cc78:	0009883a 	mov	r4,zero
  80cc7c:	05000044 	movi	r20,1
  80cc80:	9d27883a 	add	r19,r19,r20
  80cc84:	003e7e06 	br	80c680 <__divdf3+0x27c>
  80cc88:	a08003cc 	andi	r2,r20,15
  80cc8c:	10800118 	cmpnei	r2,r2,4
  80cc90:	103e7a26 	beq	r2,zero,80c67c <__divdf3+0x278>
  80cc94:	a1000104 	addi	r4,r20,4
  80cc98:	00bffec4 	movi	r2,-5
  80cc9c:	2008d0fa 	srli	r4,r4,3
  80cca0:	1529803a 	cmpltu	r20,r2,r20
  80cca4:	003ff606 	br	80cc80 <__divdf3+0x87c>
  80cca8:	1011883a 	mov	r8,r2
  80ccac:	003f5a06 	br	80ca18 <__divdf3+0x614>
  80ccb0:	100f883a 	mov	r7,r2
  80ccb4:	003f3906 	br	80c99c <__divdf3+0x598>
  80ccb8:	89bfb02e 	bgeu	r17,r6,80cb7c <__divdf3+0x778>
  80ccbc:	8d63883a 	add	r17,r17,r21
  80ccc0:	8d45803a 	cmpltu	r2,r17,r21
  80ccc4:	1585883a 	add	r2,r2,r22
  80ccc8:	9cffff84 	addi	r19,r19,-2
  80cccc:	1887883a 	add	r3,r3,r2
  80ccd0:	003f0f06 	br	80c910 <__divdf3+0x50c>
  80ccd4:	ad45883a 	add	r2,r21,r21
  80ccd8:	156b803a 	cmpltu	r21,r2,r21
  80ccdc:	adad883a 	add	r22,r21,r22
  80cce0:	358d883a 	add	r6,r6,r22
  80cce4:	a53fff84 	addi	r20,r20,-2
  80cce8:	102b883a 	mov	r21,r2
  80ccec:	313fdf26 	beq	r6,r4,80cc6c <__divdf3+0x868>
  80ccf0:	003f7106 	br	80cab8 <__divdf3+0x6b4>
  80ccf4:	a08003cc 	andi	r2,r20,15
  80ccf8:	10800118 	cmpnei	r2,r2,4
  80ccfc:	000b883a 	mov	r5,zero
  80cd00:	103f8b1e 	bne	r2,zero,80cb30 <__divdf3+0x72c>
  80cd04:	2804927a 	slli	r2,r5,9
  80cd08:	2826977a 	slli	r19,r5,29
  80cd0c:	100ad33a 	srli	r5,r2,12
  80cd10:	003fd006 	br	80cc54 <__divdf3+0x850>
  80cd14:	00800434 	movhi	r2,16
  80cd18:	99400234 	orhi	r5,r19,8
  80cd1c:	10bfffc4 	addi	r2,r2,-1
  80cd20:	288a703a 	and	r5,r5,r2
  80cd24:	003e7f06 	br	80c724 <__divdf3+0x320>
  80cd28:	a8ffea36 	bltu	r21,r3,80ccd4 <__divdf3+0x8d0>
  80cd2c:	1029883a 	mov	r20,r2
  80cd30:	1d7f611e 	bne	r3,r21,80cab8 <__divdf3+0x6b4>
  80cd34:	003e4e06 	br	80c670 <__divdf3+0x26c>

0080cd38 <__eqdf2>:
  80cd38:	2810d53a 	srli	r8,r5,20
  80cd3c:	3806d53a 	srli	r3,r7,20
  80cd40:	00800434 	movhi	r2,16
  80cd44:	4201ffcc 	andi	r8,r8,2047
  80cd48:	10bfffc4 	addi	r2,r2,-1
  80cd4c:	4241ffd8 	cmpnei	r9,r8,2047
  80cd50:	2814d7fa 	srli	r10,r5,31
  80cd54:	3816d7fa 	srli	r11,r7,31
  80cd58:	288a703a 	and	r5,r5,r2
  80cd5c:	388e703a 	and	r7,r7,r2
  80cd60:	1881ffcc 	andi	r2,r3,2047
  80cd64:	48000626 	beq	r9,zero,80cd80 <__eqdf2+0x48>
  80cd68:	10c1ffe0 	cmpeqi	r3,r2,2047
  80cd6c:	1800021e 	bne	r3,zero,80cd78 <__eqdf2+0x40>
  80cd70:	4080011e 	bne	r8,r2,80cd78 <__eqdf2+0x40>
  80cd74:	29c00826 	beq	r5,r7,80cd98 <__eqdf2+0x60>
  80cd78:	00800044 	movi	r2,1
  80cd7c:	f800283a 	ret
  80cd80:	2906b03a 	or	r3,r5,r4
  80cd84:	183ffc1e 	bne	r3,zero,80cd78 <__eqdf2+0x40>
  80cd88:	1081ffd8 	cmpnei	r2,r2,2047
  80cd8c:	103ffa1e 	bne	r2,zero,80cd78 <__eqdf2+0x40>
  80cd90:	398eb03a 	or	r7,r7,r6
  80cd94:	383ff81e 	bne	r7,zero,80cd78 <__eqdf2+0x40>
  80cd98:	21bff71e 	bne	r4,r6,80cd78 <__eqdf2+0x40>
  80cd9c:	52c00426 	beq	r10,r11,80cdb0 <__eqdf2+0x78>
  80cda0:	403ff51e 	bne	r8,zero,80cd78 <__eqdf2+0x40>
  80cda4:	290ab03a 	or	r5,r5,r4
  80cda8:	2804c03a 	cmpne	r2,r5,zero
  80cdac:	f800283a 	ret
  80cdb0:	0005883a 	mov	r2,zero
  80cdb4:	f800283a 	ret

0080cdb8 <__gedf2>:
  80cdb8:	2810d53a 	srli	r8,r5,20
  80cdbc:	3812d53a 	srli	r9,r7,20
  80cdc0:	00c00434 	movhi	r3,16
  80cdc4:	4201ffcc 	andi	r8,r8,2047
  80cdc8:	18ffffc4 	addi	r3,r3,-1
  80cdcc:	4281ffd8 	cmpnei	r10,r8,2047
  80cdd0:	2816d7fa 	srli	r11,r5,31
  80cdd4:	3804d7fa 	srli	r2,r7,31
  80cdd8:	28ca703a 	and	r5,r5,r3
  80cddc:	38ce703a 	and	r7,r7,r3
  80cde0:	48c1ffcc 	andi	r3,r9,2047
  80cde4:	50000b26 	beq	r10,zero,80ce14 <__gedf2+0x5c>
  80cde8:	1a41ffd8 	cmpnei	r9,r3,2047
  80cdec:	48000d26 	beq	r9,zero,80ce24 <__gedf2+0x6c>
  80cdf0:	4000191e 	bne	r8,zero,80ce58 <__gedf2+0xa0>
  80cdf4:	2914b03a 	or	r10,r5,r4
  80cdf8:	5013003a 	cmpeq	r9,r10,zero
  80cdfc:	1800131e 	bne	r3,zero,80ce4c <__gedf2+0x94>
  80ce00:	3998b03a 	or	r12,r7,r6
  80ce04:	6000111e 	bne	r12,zero,80ce4c <__gedf2+0x94>
  80ce08:	50000a1e 	bne	r10,zero,80ce34 <__gedf2+0x7c>
  80ce0c:	0005883a 	mov	r2,zero
  80ce10:	f800283a 	ret
  80ce14:	2912b03a 	or	r9,r5,r4
  80ce18:	48001e1e 	bne	r9,zero,80ce94 <__gedf2+0xdc>
  80ce1c:	1a41ffe0 	cmpeqi	r9,r3,2047
  80ce20:	48000d26 	beq	r9,zero,80ce58 <__gedf2+0xa0>
  80ce24:	3992b03a 	or	r9,r7,r6
  80ce28:	48001a1e 	bne	r9,zero,80ce94 <__gedf2+0xdc>
  80ce2c:	40000526 	beq	r8,zero,80ce44 <__gedf2+0x8c>
  80ce30:	58800d26 	beq	r11,r2,80ce68 <__gedf2+0xb0>
  80ce34:	00800044 	movi	r2,1
  80ce38:	58000626 	beq	r11,zero,80ce54 <__gedf2+0x9c>
  80ce3c:	00bfffc4 	movi	r2,-1
  80ce40:	f800283a 	ret
  80ce44:	2912b03a 	or	r9,r5,r4
  80ce48:	4813003a 	cmpeq	r9,r9,zero
  80ce4c:	483ff826 	beq	r9,zero,80ce30 <__gedf2+0x78>
  80ce50:	103ffa26 	beq	r2,zero,80ce3c <__gedf2+0x84>
  80ce54:	f800283a 	ret
  80ce58:	183ff51e 	bne	r3,zero,80ce30 <__gedf2+0x78>
  80ce5c:	3992b03a 	or	r9,r7,r6
  80ce60:	483ff31e 	bne	r9,zero,80ce30 <__gedf2+0x78>
  80ce64:	003ff306 	br	80ce34 <__gedf2+0x7c>
  80ce68:	1a000716 	blt	r3,r8,80ce88 <__gedf2+0xd0>
  80ce6c:	40fff816 	blt	r8,r3,80ce50 <__gedf2+0x98>
  80ce70:	397ff036 	bltu	r7,r5,80ce34 <__gedf2+0x7c>
  80ce74:	29c00926 	beq	r5,r7,80ce9c <__gedf2+0xe4>
  80ce78:	29ffe42e 	bgeu	r5,r7,80ce0c <__gedf2+0x54>
  80ce7c:	583fef26 	beq	r11,zero,80ce3c <__gedf2+0x84>
  80ce80:	5805883a 	mov	r2,r11
  80ce84:	f800283a 	ret
  80ce88:	103fec1e 	bne	r2,zero,80ce3c <__gedf2+0x84>
  80ce8c:	00800044 	movi	r2,1
  80ce90:	f800283a 	ret
  80ce94:	00bfff84 	movi	r2,-2
  80ce98:	f800283a 	ret
  80ce9c:	313fe536 	bltu	r6,r4,80ce34 <__gedf2+0x7c>
  80cea0:	21bfda2e 	bgeu	r4,r6,80ce0c <__gedf2+0x54>
  80cea4:	003ff506 	br	80ce7c <__gedf2+0xc4>

0080cea8 <__ledf2>:
  80cea8:	2810d53a 	srli	r8,r5,20
  80ceac:	3812d53a 	srli	r9,r7,20
  80ceb0:	00c00434 	movhi	r3,16
  80ceb4:	4201ffcc 	andi	r8,r8,2047
  80ceb8:	18ffffc4 	addi	r3,r3,-1
  80cebc:	4281ffd8 	cmpnei	r10,r8,2047
  80cec0:	2816d7fa 	srli	r11,r5,31
  80cec4:	3804d7fa 	srli	r2,r7,31
  80cec8:	28ca703a 	and	r5,r5,r3
  80cecc:	38ce703a 	and	r7,r7,r3
  80ced0:	48c1ffcc 	andi	r3,r9,2047
  80ced4:	50000b26 	beq	r10,zero,80cf04 <__ledf2+0x5c>
  80ced8:	1a41ffd8 	cmpnei	r9,r3,2047
  80cedc:	48000d26 	beq	r9,zero,80cf14 <__ledf2+0x6c>
  80cee0:	40001b1e 	bne	r8,zero,80cf50 <__ledf2+0xa8>
  80cee4:	2914b03a 	or	r10,r5,r4
  80cee8:	5013003a 	cmpeq	r9,r10,zero
  80ceec:	18000e1e 	bne	r3,zero,80cf28 <__ledf2+0x80>
  80cef0:	3998b03a 	or	r12,r7,r6
  80cef4:	60000c1e 	bne	r12,zero,80cf28 <__ledf2+0x80>
  80cef8:	50000d1e 	bne	r10,zero,80cf30 <__ledf2+0x88>
  80cefc:	0005883a 	mov	r2,zero
  80cf00:	f800283a 	ret
  80cf04:	2912b03a 	or	r9,r5,r4
  80cf08:	48000d1e 	bne	r9,zero,80cf40 <__ledf2+0x98>
  80cf0c:	1a41ffe0 	cmpeqi	r9,r3,2047
  80cf10:	48000f26 	beq	r9,zero,80cf50 <__ledf2+0xa8>
  80cf14:	3992b03a 	or	r9,r7,r6
  80cf18:	4800091e 	bne	r9,zero,80cf40 <__ledf2+0x98>
  80cf1c:	4000031e 	bne	r8,zero,80cf2c <__ledf2+0x84>
  80cf20:	2912b03a 	or	r9,r5,r4
  80cf24:	4813003a 	cmpeq	r9,r9,zero
  80cf28:	4800071e 	bne	r9,zero,80cf48 <__ledf2+0xa0>
  80cf2c:	58800c26 	beq	r11,r2,80cf60 <__ledf2+0xb8>
  80cf30:	00800044 	movi	r2,1
  80cf34:	58000526 	beq	r11,zero,80cf4c <__ledf2+0xa4>
  80cf38:	00bfffc4 	movi	r2,-1
  80cf3c:	f800283a 	ret
  80cf40:	00800084 	movi	r2,2
  80cf44:	f800283a 	ret
  80cf48:	103ffb26 	beq	r2,zero,80cf38 <__ledf2+0x90>
  80cf4c:	f800283a 	ret
  80cf50:	183ff61e 	bne	r3,zero,80cf2c <__ledf2+0x84>
  80cf54:	3992b03a 	or	r9,r7,r6
  80cf58:	483ff41e 	bne	r9,zero,80cf2c <__ledf2+0x84>
  80cf5c:	003ff406 	br	80cf30 <__ledf2+0x88>
  80cf60:	1a00030e 	bge	r3,r8,80cf70 <__ledf2+0xc8>
  80cf64:	103ff41e 	bne	r2,zero,80cf38 <__ledf2+0x90>
  80cf68:	00800044 	movi	r2,1
  80cf6c:	f800283a 	ret
  80cf70:	40fff516 	blt	r8,r3,80cf48 <__ledf2+0xa0>
  80cf74:	397fee36 	bltu	r7,r5,80cf30 <__ledf2+0x88>
  80cf78:	29c00426 	beq	r5,r7,80cf8c <__ledf2+0xe4>
  80cf7c:	29ffdf2e 	bgeu	r5,r7,80cefc <__ledf2+0x54>
  80cf80:	583fed26 	beq	r11,zero,80cf38 <__ledf2+0x90>
  80cf84:	5805883a 	mov	r2,r11
  80cf88:	f800283a 	ret
  80cf8c:	313fe836 	bltu	r6,r4,80cf30 <__ledf2+0x88>
  80cf90:	21bfda2e 	bgeu	r4,r6,80cefc <__ledf2+0x54>
  80cf94:	003ffa06 	br	80cf80 <__ledf2+0xd8>

0080cf98 <__muldf3>:
  80cf98:	2810d53a 	srli	r8,r5,20
  80cf9c:	defff004 	addi	sp,sp,-64
  80cfa0:	00800434 	movhi	r2,16
  80cfa4:	df000e15 	stw	fp,56(sp)
  80cfa8:	dd000a15 	stw	r20,40(sp)
  80cfac:	dcc00915 	stw	r19,36(sp)
  80cfb0:	dc400715 	stw	r17,28(sp)
  80cfb4:	10bfffc4 	addi	r2,r2,-1
  80cfb8:	dfc00f15 	stw	ra,60(sp)
  80cfbc:	ddc00d15 	stw	r23,52(sp)
  80cfc0:	dd800c15 	stw	r22,48(sp)
  80cfc4:	dd400b15 	stw	r21,44(sp)
  80cfc8:	dc800815 	stw	r18,32(sp)
  80cfcc:	dc000615 	stw	r16,24(sp)
  80cfd0:	4201ffcc 	andi	r8,r8,2047
  80cfd4:	2828d7fa 	srli	r20,r5,31
  80cfd8:	2023883a 	mov	r17,r4
  80cfdc:	3039883a 	mov	fp,r6
  80cfe0:	28a6703a 	and	r19,r5,r2
  80cfe4:	40005a26 	beq	r8,zero,80d150 <__muldf3+0x1b8>
  80cfe8:	4081ffe0 	cmpeqi	r2,r8,2047
  80cfec:	10006c1e 	bne	r2,zero,80d1a0 <__muldf3+0x208>
  80cff0:	980a90fa 	slli	r5,r19,3
  80cff4:	2026d77a 	srli	r19,r4,29
  80cff8:	202490fa 	slli	r18,r4,3
  80cffc:	423f0044 	addi	r8,r8,-1023
  80d000:	9966b03a 	or	r19,r19,r5
  80d004:	9cc02034 	orhi	r19,r19,128
  80d008:	002b883a 	mov	r21,zero
  80d00c:	002d883a 	mov	r22,zero
  80d010:	3804d53a 	srli	r2,r7,20
  80d014:	00c00434 	movhi	r3,16
  80d018:	18ffffc4 	addi	r3,r3,-1
  80d01c:	1081ffcc 	andi	r2,r2,2047
  80d020:	382ed7fa 	srli	r23,r7,31
  80d024:	38e0703a 	and	r16,r7,r3
  80d028:	10006426 	beq	r2,zero,80d1bc <__muldf3+0x224>
  80d02c:	10c1ffe0 	cmpeqi	r3,r2,2047
  80d030:	1800211e 	bne	r3,zero,80d0b8 <__muldf3+0x120>
  80d034:	e008d77a 	srli	r4,fp,29
  80d038:	802090fa 	slli	r16,r16,3
  80d03c:	e02290fa 	slli	r17,fp,3
  80d040:	10bf0044 	addi	r2,r2,-1023
  80d044:	2420b03a 	or	r16,r4,r16
  80d048:	84002034 	orhi	r16,r16,128
  80d04c:	4091883a 	add	r8,r8,r2
  80d050:	0009883a 	mov	r4,zero
  80d054:	a8800428 	cmpgeui	r2,r21,16
  80d058:	a5ccf03a 	xor	r6,r20,r23
  80d05c:	41c00044 	addi	r7,r8,1
  80d060:	10006d1e 	bne	r2,zero,80d218 <__muldf3+0x280>
  80d064:	a80490ba 	slli	r2,r21,2
  80d068:	00c02074 	movhi	r3,129
  80d06c:	10c7883a 	add	r3,r2,r3
  80d070:	18b41e17 	ldw	r2,-12168(r3)
  80d074:	1000683a 	jmp	r2
  80d078:	0080d218 	cmpnei	r2,zero,840
  80d07c:	0080d0d8 	cmpnei	r2,zero,835
  80d080:	0080d0d8 	cmpnei	r2,zero,835
  80d084:	0080d0d4 	movui	r2,835
  80d088:	0080d0e4 	muli	r2,zero,835
  80d08c:	0080d0e4 	muli	r2,zero,835
  80d090:	0080d594 	movui	r2,854
  80d094:	0080d0d4 	movui	r2,835
  80d098:	0080d0e4 	muli	r2,zero,835
  80d09c:	0080d594 	movui	r2,854
  80d0a0:	0080d0e4 	muli	r2,zero,835
  80d0a4:	0080d0d4 	movui	r2,835
  80d0a8:	0080d544 	movi	r2,853
  80d0ac:	0080d544 	movi	r2,853
  80d0b0:	0080d544 	movi	r2,853
  80d0b4:	0080d620 	cmpeqi	r2,zero,856
  80d0b8:	e422b03a 	or	r17,fp,r16
  80d0bc:	4201ffc4 	addi	r8,r8,2047
  80d0c0:	8801221e 	bne	r17,zero,80d54c <__muldf3+0x5b4>
  80d0c4:	ad400094 	ori	r21,r21,2
  80d0c8:	0021883a 	mov	r16,zero
  80d0cc:	01000084 	movi	r4,2
  80d0d0:	003fe006 	br	80d054 <__muldf3+0xbc>
  80d0d4:	b80d883a 	mov	r6,r23
  80d0d8:	8027883a 	mov	r19,r16
  80d0dc:	8825883a 	mov	r18,r17
  80d0e0:	202d883a 	mov	r22,r4
  80d0e4:	b08000a0 	cmpeqi	r2,r22,2
  80d0e8:	1000471e 	bne	r2,zero,80d208 <__muldf3+0x270>
  80d0ec:	b08000e0 	cmpeqi	r2,r22,3
  80d0f0:	10018e1e 	bne	r2,zero,80d72c <__muldf3+0x794>
  80d0f4:	b0800060 	cmpeqi	r2,r22,1
  80d0f8:	1000f826 	beq	r2,zero,80d4dc <__muldf3+0x544>
  80d0fc:	0007883a 	mov	r3,zero
  80d100:	0027883a 	mov	r19,zero
  80d104:	0025883a 	mov	r18,zero
  80d108:	1806953a 	slli	r3,r3,20
  80d10c:	31803fcc 	andi	r6,r6,255
  80d110:	300c97fa 	slli	r6,r6,31
  80d114:	1cc6b03a 	or	r3,r3,r19
  80d118:	9005883a 	mov	r2,r18
  80d11c:	1986b03a 	or	r3,r3,r6
  80d120:	dfc00f17 	ldw	ra,60(sp)
  80d124:	df000e17 	ldw	fp,56(sp)
  80d128:	ddc00d17 	ldw	r23,52(sp)
  80d12c:	dd800c17 	ldw	r22,48(sp)
  80d130:	dd400b17 	ldw	r21,44(sp)
  80d134:	dd000a17 	ldw	r20,40(sp)
  80d138:	dcc00917 	ldw	r19,36(sp)
  80d13c:	dc800817 	ldw	r18,32(sp)
  80d140:	dc400717 	ldw	r17,28(sp)
  80d144:	dc000617 	ldw	r16,24(sp)
  80d148:	dec01004 	addi	sp,sp,64
  80d14c:	f800283a 	ret
  80d150:	9924b03a 	or	r18,r19,r4
  80d154:	90010a26 	beq	r18,zero,80d580 <__muldf3+0x5e8>
  80d158:	d9c00015 	stw	r7,0(sp)
  80d15c:	98014d26 	beq	r19,zero,80d694 <__muldf3+0x6fc>
  80d160:	9809883a 	mov	r4,r19
  80d164:	08014b00 	call	8014b0 <__clzsi2>
  80d168:	d9c00017 	ldw	r7,0(sp)
  80d16c:	113ffd44 	addi	r4,r2,-11
  80d170:	00c00744 	movi	r3,29
  80d174:	14bffe04 	addi	r18,r2,-8
  80d178:	1907c83a 	sub	r3,r3,r4
  80d17c:	9ca6983a 	sll	r19,r19,r18
  80d180:	88c6d83a 	srl	r3,r17,r3
  80d184:	8ca4983a 	sll	r18,r17,r18
  80d188:	1ce6b03a 	or	r19,r3,r19
  80d18c:	023f0344 	movi	r8,-1011
  80d190:	4091c83a 	sub	r8,r8,r2
  80d194:	002b883a 	mov	r21,zero
  80d198:	002d883a 	mov	r22,zero
  80d19c:	003f9c06 	br	80d010 <__muldf3+0x78>
  80d1a0:	9924b03a 	or	r18,r19,r4
  80d1a4:	9000f11e 	bne	r18,zero,80d56c <__muldf3+0x5d4>
  80d1a8:	0027883a 	mov	r19,zero
  80d1ac:	05400204 	movi	r21,8
  80d1b0:	0201ffc4 	movi	r8,2047
  80d1b4:	05800084 	movi	r22,2
  80d1b8:	003f9506 	br	80d010 <__muldf3+0x78>
  80d1bc:	e422b03a 	or	r17,fp,r16
  80d1c0:	8800e626 	beq	r17,zero,80d55c <__muldf3+0x5c4>
  80d1c4:	da000015 	stw	r8,0(sp)
  80d1c8:	80012626 	beq	r16,zero,80d664 <__muldf3+0x6cc>
  80d1cc:	8009883a 	mov	r4,r16
  80d1d0:	08014b00 	call	8014b0 <__clzsi2>
  80d1d4:	da000017 	ldw	r8,0(sp)
  80d1d8:	117ffd44 	addi	r5,r2,-11
  80d1dc:	01000744 	movi	r4,29
  80d1e0:	147ffe04 	addi	r17,r2,-8
  80d1e4:	2149c83a 	sub	r4,r4,r5
  80d1e8:	8460983a 	sll	r16,r16,r17
  80d1ec:	e108d83a 	srl	r4,fp,r4
  80d1f0:	e462983a 	sll	r17,fp,r17
  80d1f4:	2420b03a 	or	r16,r4,r16
  80d1f8:	4091c83a 	sub	r8,r8,r2
  80d1fc:	423f0344 	addi	r8,r8,-1011
  80d200:	0009883a 	mov	r4,zero
  80d204:	003f9306 	br	80d054 <__muldf3+0xbc>
  80d208:	00c1ffc4 	movi	r3,2047
  80d20c:	0027883a 	mov	r19,zero
  80d210:	0025883a 	mov	r18,zero
  80d214:	003fbc06 	br	80d108 <__muldf3+0x170>
  80d218:	9028d43a 	srli	r20,r18,16
  80d21c:	8f3fffcc 	andi	fp,r17,65535
  80d220:	957fffcc 	andi	r21,r18,65535
  80d224:	a80b883a 	mov	r5,r21
  80d228:	e009883a 	mov	r4,fp
  80d22c:	d9800315 	stw	r6,12(sp)
  80d230:	da000215 	stw	r8,8(sp)
  80d234:	d9c00115 	stw	r7,4(sp)
  80d238:	8822d43a 	srli	r17,r17,16
  80d23c:	08015040 	call	801504 <__mulsi3>
  80d240:	e00b883a 	mov	r5,fp
  80d244:	a009883a 	mov	r4,r20
  80d248:	102d883a 	mov	r22,r2
  80d24c:	08015040 	call	801504 <__mulsi3>
  80d250:	880b883a 	mov	r5,r17
  80d254:	a009883a 	mov	r4,r20
  80d258:	102f883a 	mov	r23,r2
  80d25c:	08015040 	call	801504 <__mulsi3>
  80d260:	a80b883a 	mov	r5,r21
  80d264:	8809883a 	mov	r4,r17
  80d268:	d8800015 	stw	r2,0(sp)
  80d26c:	08015040 	call	801504 <__mulsi3>
  80d270:	b006d43a 	srli	r3,r22,16
  80d274:	15e5883a 	add	r18,r2,r23
  80d278:	d9c00117 	ldw	r7,4(sp)
  80d27c:	1c87883a 	add	r3,r3,r18
  80d280:	da000217 	ldw	r8,8(sp)
  80d284:	d9800317 	ldw	r6,12(sp)
  80d288:	1dc0042e 	bgeu	r3,r23,80d29c <__muldf3+0x304>
  80d28c:	d9000017 	ldw	r4,0(sp)
  80d290:	00800074 	movhi	r2,1
  80d294:	2085883a 	add	r2,r4,r2
  80d298:	d8800015 	stw	r2,0(sp)
  80d29c:	1804943a 	slli	r2,r3,16
  80d2a0:	85ffffcc 	andi	r23,r16,65535
  80d2a4:	b5bfffcc 	andi	r22,r22,65535
  80d2a8:	1585883a 	add	r2,r2,r22
  80d2ac:	a80b883a 	mov	r5,r21
  80d2b0:	b809883a 	mov	r4,r23
  80d2b4:	1824d43a 	srli	r18,r3,16
  80d2b8:	d9800515 	stw	r6,20(sp)
  80d2bc:	da000415 	stw	r8,16(sp)
  80d2c0:	d9c00315 	stw	r7,12(sp)
  80d2c4:	8020d43a 	srli	r16,r16,16
  80d2c8:	d8800115 	stw	r2,4(sp)
  80d2cc:	08015040 	call	801504 <__mulsi3>
  80d2d0:	a009883a 	mov	r4,r20
  80d2d4:	b80b883a 	mov	r5,r23
  80d2d8:	d8800215 	stw	r2,8(sp)
  80d2dc:	08015040 	call	801504 <__mulsi3>
  80d2e0:	a009883a 	mov	r4,r20
  80d2e4:	800b883a 	mov	r5,r16
  80d2e8:	102d883a 	mov	r22,r2
  80d2ec:	08015040 	call	801504 <__mulsi3>
  80d2f0:	a80b883a 	mov	r5,r21
  80d2f4:	8009883a 	mov	r4,r16
  80d2f8:	1029883a 	mov	r20,r2
  80d2fc:	08015040 	call	801504 <__mulsi3>
  80d300:	da800217 	ldw	r10,8(sp)
  80d304:	1585883a 	add	r2,r2,r22
  80d308:	d9c00317 	ldw	r7,12(sp)
  80d30c:	5006d43a 	srli	r3,r10,16
  80d310:	da000417 	ldw	r8,16(sp)
  80d314:	d9800517 	ldw	r6,20(sp)
  80d318:	1887883a 	add	r3,r3,r2
  80d31c:	1d80022e 	bgeu	r3,r22,80d328 <__muldf3+0x390>
  80d320:	00800074 	movhi	r2,1
  80d324:	a0a9883a 	add	r20,r20,r2
  80d328:	1804d43a 	srli	r2,r3,16
  80d32c:	1806943a 	slli	r3,r3,16
  80d330:	982cd43a 	srli	r22,r19,16
  80d334:	9d7fffcc 	andi	r21,r19,65535
  80d338:	e009883a 	mov	r4,fp
  80d33c:	54ffffcc 	andi	r19,r10,65535
  80d340:	a80b883a 	mov	r5,r21
  80d344:	1ce7883a 	add	r19,r3,r19
  80d348:	d9800515 	stw	r6,20(sp)
  80d34c:	da000415 	stw	r8,16(sp)
  80d350:	d9c00315 	stw	r7,12(sp)
  80d354:	1529883a 	add	r20,r2,r20
  80d358:	08015040 	call	801504 <__mulsi3>
  80d35c:	e00b883a 	mov	r5,fp
  80d360:	b009883a 	mov	r4,r22
  80d364:	d8800215 	stw	r2,8(sp)
  80d368:	08015040 	call	801504 <__mulsi3>
  80d36c:	8809883a 	mov	r4,r17
  80d370:	b00b883a 	mov	r5,r22
  80d374:	1039883a 	mov	fp,r2
  80d378:	08015040 	call	801504 <__mulsi3>
  80d37c:	8809883a 	mov	r4,r17
  80d380:	a80b883a 	mov	r5,r21
  80d384:	1023883a 	mov	r17,r2
  80d388:	08015040 	call	801504 <__mulsi3>
  80d38c:	d8c00217 	ldw	r3,8(sp)
  80d390:	1705883a 	add	r2,r2,fp
  80d394:	d9c00317 	ldw	r7,12(sp)
  80d398:	1808d43a 	srli	r4,r3,16
  80d39c:	da000417 	ldw	r8,16(sp)
  80d3a0:	d9800517 	ldw	r6,20(sp)
  80d3a4:	2089883a 	add	r4,r4,r2
  80d3a8:	94e5883a 	add	r18,r18,r19
  80d3ac:	2700022e 	bgeu	r4,fp,80d3b8 <__muldf3+0x420>
  80d3b0:	00800074 	movhi	r2,1
  80d3b4:	88a3883a 	add	r17,r17,r2
  80d3b8:	2004d43a 	srli	r2,r4,16
  80d3bc:	2038943a 	slli	fp,r4,16
  80d3c0:	18ffffcc 	andi	r3,r3,65535
  80d3c4:	b809883a 	mov	r4,r23
  80d3c8:	a80b883a 	mov	r5,r21
  80d3cc:	d9800415 	stw	r6,16(sp)
  80d3d0:	da000315 	stw	r8,12(sp)
  80d3d4:	d9c00215 	stw	r7,8(sp)
  80d3d8:	e0f9883a 	add	fp,fp,r3
  80d3dc:	1463883a 	add	r17,r2,r17
  80d3e0:	08015040 	call	801504 <__mulsi3>
  80d3e4:	b80b883a 	mov	r5,r23
  80d3e8:	b009883a 	mov	r4,r22
  80d3ec:	102f883a 	mov	r23,r2
  80d3f0:	08015040 	call	801504 <__mulsi3>
  80d3f4:	b00b883a 	mov	r5,r22
  80d3f8:	8009883a 	mov	r4,r16
  80d3fc:	102d883a 	mov	r22,r2
  80d400:	08015040 	call	801504 <__mulsi3>
  80d404:	a80b883a 	mov	r5,r21
  80d408:	8009883a 	mov	r4,r16
  80d40c:	1021883a 	mov	r16,r2
  80d410:	08015040 	call	801504 <__mulsi3>
  80d414:	b80ad43a 	srli	r5,r23,16
  80d418:	1585883a 	add	r2,r2,r22
  80d41c:	d9c00217 	ldw	r7,8(sp)
  80d420:	288b883a 	add	r5,r5,r2
  80d424:	da000317 	ldw	r8,12(sp)
  80d428:	d9800417 	ldw	r6,16(sp)
  80d42c:	2d80022e 	bgeu	r5,r22,80d438 <__muldf3+0x4a0>
  80d430:	00800074 	movhi	r2,1
  80d434:	80a1883a 	add	r16,r16,r2
  80d438:	2806943a 	slli	r3,r5,16
  80d43c:	d8800017 	ldw	r2,0(sp)
  80d440:	bdffffcc 	andi	r23,r23,65535
  80d444:	1dc7883a 	add	r3,r3,r23
  80d448:	90ab883a 	add	r21,r18,r2
  80d44c:	acd5803a 	cmpltu	r10,r21,r19
  80d450:	1d07883a 	add	r3,r3,r20
  80d454:	af2b883a 	add	r21,r21,fp
  80d458:	1a97883a 	add	r11,r3,r10
  80d45c:	af09803a 	cmpltu	r4,r21,fp
  80d460:	2826d43a 	srli	r19,r5,16
  80d464:	5c53883a 	add	r9,r11,r17
  80d468:	4905883a 	add	r2,r9,r4
  80d46c:	1d29803a 	cmpltu	r20,r3,r20
  80d470:	5a95803a 	cmpltu	r10,r11,r10
  80d474:	1109803a 	cmpltu	r4,r2,r4
  80d478:	a2a8b03a 	or	r20,r20,r10
  80d47c:	4c63803a 	cmpltu	r17,r9,r17
  80d480:	a4e7883a 	add	r19,r20,r19
  80d484:	8908b03a 	or	r4,r17,r4
  80d488:	a824927a 	slli	r18,r21,9
  80d48c:	d8c00117 	ldw	r3,4(sp)
  80d490:	9927883a 	add	r19,r19,r4
  80d494:	9c27883a 	add	r19,r19,r16
  80d498:	9826927a 	slli	r19,r19,9
  80d49c:	a82ad5fa 	srli	r21,r21,23
  80d4a0:	100ad5fa 	srli	r5,r2,23
  80d4a4:	90e4b03a 	or	r18,r18,r3
  80d4a8:	1004927a 	slli	r2,r2,9
  80d4ac:	9024c03a 	cmpne	r18,r18,zero
  80d4b0:	9564b03a 	or	r18,r18,r21
  80d4b4:	98c0402c 	andhi	r3,r19,256
  80d4b8:	90a4b03a 	or	r18,r18,r2
  80d4bc:	9966b03a 	or	r19,r19,r5
  80d4c0:	18007f26 	beq	r3,zero,80d6c0 <__muldf3+0x728>
  80d4c4:	9006d07a 	srli	r3,r18,1
  80d4c8:	980497fa 	slli	r2,r19,31
  80d4cc:	9480004c 	andi	r18,r18,1
  80d4d0:	9826d07a 	srli	r19,r19,1
  80d4d4:	1c86b03a 	or	r3,r3,r18
  80d4d8:	18a4b03a 	or	r18,r3,r2
  80d4dc:	3900ffc4 	addi	r4,r7,1023
  80d4e0:	0100320e 	bge	zero,r4,80d5ac <__muldf3+0x614>
  80d4e4:	908001cc 	andi	r2,r18,7
  80d4e8:	10000726 	beq	r2,zero,80d508 <__muldf3+0x570>
  80d4ec:	908003cc 	andi	r2,r18,15
  80d4f0:	10800120 	cmpeqi	r2,r2,4
  80d4f4:	1000041e 	bne	r2,zero,80d508 <__muldf3+0x570>
  80d4f8:	90800104 	addi	r2,r18,4
  80d4fc:	14a5803a 	cmpltu	r18,r2,r18
  80d500:	9ca7883a 	add	r19,r19,r18
  80d504:	1025883a 	mov	r18,r2
  80d508:	9880402c 	andhi	r2,r19,256
  80d50c:	10000426 	beq	r2,zero,80d520 <__muldf3+0x588>
  80d510:	00bfc034 	movhi	r2,65280
  80d514:	10bfffc4 	addi	r2,r2,-1
  80d518:	98a6703a 	and	r19,r19,r2
  80d51c:	39010004 	addi	r4,r7,1024
  80d520:	2081ffc8 	cmpgei	r2,r4,2047
  80d524:	103f381e 	bne	r2,zero,80d208 <__muldf3+0x270>
  80d528:	9804977a 	slli	r2,r19,29
  80d52c:	9024d0fa 	srli	r18,r18,3
  80d530:	9826927a 	slli	r19,r19,9
  80d534:	20c1ffcc 	andi	r3,r4,2047
  80d538:	14a4b03a 	or	r18,r2,r18
  80d53c:	9826d33a 	srli	r19,r19,12
  80d540:	003ef106 	br	80d108 <__muldf3+0x170>
  80d544:	a00d883a 	mov	r6,r20
  80d548:	003ee606 	br	80d0e4 <__muldf3+0x14c>
  80d54c:	ad4000d4 	ori	r21,r21,3
  80d550:	e023883a 	mov	r17,fp
  80d554:	010000c4 	movi	r4,3
  80d558:	003ebe06 	br	80d054 <__muldf3+0xbc>
  80d55c:	ad400054 	ori	r21,r21,1
  80d560:	0021883a 	mov	r16,zero
  80d564:	01000044 	movi	r4,1
  80d568:	003eba06 	br	80d054 <__muldf3+0xbc>
  80d56c:	2025883a 	mov	r18,r4
  80d570:	05400304 	movi	r21,12
  80d574:	0201ffc4 	movi	r8,2047
  80d578:	058000c4 	movi	r22,3
  80d57c:	003ea406 	br	80d010 <__muldf3+0x78>
  80d580:	0027883a 	mov	r19,zero
  80d584:	05400104 	movi	r21,4
  80d588:	0011883a 	mov	r8,zero
  80d58c:	05800044 	movi	r22,1
  80d590:	003e9f06 	br	80d010 <__muldf3+0x78>
  80d594:	04c00434 	movhi	r19,16
  80d598:	000d883a 	mov	r6,zero
  80d59c:	9cffffc4 	addi	r19,r19,-1
  80d5a0:	04bfffc4 	movi	r18,-1
  80d5a4:	00c1ffc4 	movi	r3,2047
  80d5a8:	003ed706 	br	80d108 <__muldf3+0x170>
  80d5ac:	00800044 	movi	r2,1
  80d5b0:	1105c83a 	sub	r2,r2,r4
  80d5b4:	10c00e48 	cmpgei	r3,r2,57
  80d5b8:	183ed01e 	bne	r3,zero,80d0fc <__muldf3+0x164>
  80d5bc:	10c00808 	cmpgei	r3,r2,32
  80d5c0:	1800411e 	bne	r3,zero,80d6c8 <__muldf3+0x730>
  80d5c4:	39c10784 	addi	r7,r7,1054
  80d5c8:	99c6983a 	sll	r3,r19,r7
  80d5cc:	9088d83a 	srl	r4,r18,r2
  80d5d0:	91ce983a 	sll	r7,r18,r7
  80d5d4:	98a6d83a 	srl	r19,r19,r2
  80d5d8:	1904b03a 	or	r2,r3,r4
  80d5dc:	3824c03a 	cmpne	r18,r7,zero
  80d5e0:	1484b03a 	or	r2,r2,r18
  80d5e4:	10c001cc 	andi	r3,r2,7
  80d5e8:	18000726 	beq	r3,zero,80d608 <__muldf3+0x670>
  80d5ec:	10c003cc 	andi	r3,r2,15
  80d5f0:	18c00120 	cmpeqi	r3,r3,4
  80d5f4:	1800041e 	bne	r3,zero,80d608 <__muldf3+0x670>
  80d5f8:	10c00104 	addi	r3,r2,4
  80d5fc:	1885803a 	cmpltu	r2,r3,r2
  80d600:	98a7883a 	add	r19,r19,r2
  80d604:	1805883a 	mov	r2,r3
  80d608:	98c0202c 	andhi	r3,r19,128
  80d60c:	18004326 	beq	r3,zero,80d71c <__muldf3+0x784>
  80d610:	00c00044 	movi	r3,1
  80d614:	0027883a 	mov	r19,zero
  80d618:	0025883a 	mov	r18,zero
  80d61c:	003eba06 	br	80d108 <__muldf3+0x170>
  80d620:	9880022c 	andhi	r2,r19,8
  80d624:	10000926 	beq	r2,zero,80d64c <__muldf3+0x6b4>
  80d628:	8080022c 	andhi	r2,r16,8
  80d62c:	1000071e 	bne	r2,zero,80d64c <__muldf3+0x6b4>
  80d630:	00800434 	movhi	r2,16
  80d634:	84c00234 	orhi	r19,r16,8
  80d638:	10bfffc4 	addi	r2,r2,-1
  80d63c:	98a6703a 	and	r19,r19,r2
  80d640:	b80d883a 	mov	r6,r23
  80d644:	8825883a 	mov	r18,r17
  80d648:	003fd606 	br	80d5a4 <__muldf3+0x60c>
  80d64c:	00800434 	movhi	r2,16
  80d650:	9cc00234 	orhi	r19,r19,8
  80d654:	10bfffc4 	addi	r2,r2,-1
  80d658:	98a6703a 	and	r19,r19,r2
  80d65c:	a00d883a 	mov	r6,r20
  80d660:	003fd006 	br	80d5a4 <__muldf3+0x60c>
  80d664:	e009883a 	mov	r4,fp
  80d668:	08014b00 	call	8014b0 <__clzsi2>
  80d66c:	11400544 	addi	r5,r2,21
  80d670:	29000748 	cmpgei	r4,r5,29
  80d674:	1007883a 	mov	r3,r2
  80d678:	da000017 	ldw	r8,0(sp)
  80d67c:	10800804 	addi	r2,r2,32
  80d680:	203ed626 	beq	r4,zero,80d1dc <__muldf3+0x244>
  80d684:	1c3ffe04 	addi	r16,r3,-8
  80d688:	e420983a 	sll	r16,fp,r16
  80d68c:	0023883a 	mov	r17,zero
  80d690:	003ed906 	br	80d1f8 <__muldf3+0x260>
  80d694:	08014b00 	call	8014b0 <__clzsi2>
  80d698:	11000544 	addi	r4,r2,21
  80d69c:	21400748 	cmpgei	r5,r4,29
  80d6a0:	1007883a 	mov	r3,r2
  80d6a4:	d9c00017 	ldw	r7,0(sp)
  80d6a8:	10800804 	addi	r2,r2,32
  80d6ac:	283eb026 	beq	r5,zero,80d170 <__muldf3+0x1d8>
  80d6b0:	1cfffe04 	addi	r19,r3,-8
  80d6b4:	8ce6983a 	sll	r19,r17,r19
  80d6b8:	0025883a 	mov	r18,zero
  80d6bc:	003eb306 	br	80d18c <__muldf3+0x1f4>
  80d6c0:	400f883a 	mov	r7,r8
  80d6c4:	003f8506 	br	80d4dc <__muldf3+0x544>
  80d6c8:	00fff844 	movi	r3,-31
  80d6cc:	1907c83a 	sub	r3,r3,r4
  80d6d0:	10800820 	cmpeqi	r2,r2,32
  80d6d4:	98c6d83a 	srl	r3,r19,r3
  80d6d8:	1000031e 	bne	r2,zero,80d6e8 <__muldf3+0x750>
  80d6dc:	39c10f84 	addi	r7,r7,1086
  80d6e0:	99e6983a 	sll	r19,r19,r7
  80d6e4:	94e4b03a 	or	r18,r18,r19
  80d6e8:	9024c03a 	cmpne	r18,r18,zero
  80d6ec:	90c4b03a 	or	r2,r18,r3
  80d6f0:	148001cc 	andi	r18,r2,7
  80d6f4:	9000051e 	bne	r18,zero,80d70c <__muldf3+0x774>
  80d6f8:	0027883a 	mov	r19,zero
  80d6fc:	1004d0fa 	srli	r2,r2,3
  80d700:	0007883a 	mov	r3,zero
  80d704:	14a4b03a 	or	r18,r2,r18
  80d708:	003e7f06 	br	80d108 <__muldf3+0x170>
  80d70c:	10c003cc 	andi	r3,r2,15
  80d710:	18c00118 	cmpnei	r3,r3,4
  80d714:	0027883a 	mov	r19,zero
  80d718:	183fb71e 	bne	r3,zero,80d5f8 <__muldf3+0x660>
  80d71c:	9806927a 	slli	r3,r19,9
  80d720:	9824977a 	slli	r18,r19,29
  80d724:	1826d33a 	srli	r19,r3,12
  80d728:	003ff406 	br	80d6fc <__muldf3+0x764>
  80d72c:	00800434 	movhi	r2,16
  80d730:	9cc00234 	orhi	r19,r19,8
  80d734:	10bfffc4 	addi	r2,r2,-1
  80d738:	98a6703a 	and	r19,r19,r2
  80d73c:	003f9906 	br	80d5a4 <__muldf3+0x60c>

0080d740 <__subdf3>:
  80d740:	00c00434 	movhi	r3,16
  80d744:	3812d53a 	srli	r9,r7,20
  80d748:	18ffffc4 	addi	r3,r3,-1
  80d74c:	defffb04 	addi	sp,sp,-20
  80d750:	28d0703a 	and	r8,r5,r3
  80d754:	38c6703a 	and	r3,r7,r3
  80d758:	2804d7fa 	srli	r2,r5,31
  80d75c:	401090fa 	slli	r8,r8,3
  80d760:	280ad53a 	srli	r5,r5,20
  80d764:	180690fa 	slli	r3,r3,3
  80d768:	dcc00315 	stw	r19,12(sp)
  80d76c:	dc400115 	stw	r17,4(sp)
  80d770:	2026d77a 	srli	r19,r4,29
  80d774:	3022d77a 	srli	r17,r6,29
  80d778:	4b41ffcc 	andi	r13,r9,2047
  80d77c:	dc800215 	stw	r18,8(sp)
  80d780:	dc000015 	stw	r16,0(sp)
  80d784:	dfc00415 	stw	ra,16(sp)
  80d788:	6a41ffe0 	cmpeqi	r9,r13,2047
  80d78c:	1025883a 	mov	r18,r2
  80d790:	201690fa 	slli	r11,r4,3
  80d794:	380ed7fa 	srli	r7,r7,31
  80d798:	301490fa 	slli	r10,r6,3
  80d79c:	2c01ffcc 	andi	r16,r5,2047
  80d7a0:	10803fcc 	andi	r2,r2,255
  80d7a4:	9a10b03a 	or	r8,r19,r8
  80d7a8:	88c6b03a 	or	r3,r17,r3
  80d7ac:	48006e1e 	bne	r9,zero,80d968 <__subdf3+0x228>
  80d7b0:	3a40005c 	xori	r9,r7,1
  80d7b4:	834bc83a 	sub	r5,r16,r13
  80d7b8:	12405726 	beq	r2,r9,80d918 <__subdf3+0x1d8>
  80d7bc:	01406f0e 	bge	zero,r5,80d97c <__subdf3+0x23c>
  80d7c0:	68007a26 	beq	r13,zero,80d9ac <__subdf3+0x26c>
  80d7c4:	8081ffd8 	cmpnei	r2,r16,2047
  80d7c8:	10019f26 	beq	r2,zero,80de48 <__subdf3+0x708>
  80d7cc:	18c02034 	orhi	r3,r3,128
  80d7d0:	28800e48 	cmpgei	r2,r5,57
  80d7d4:	1000f91e 	bne	r2,zero,80dbbc <__subdf3+0x47c>
  80d7d8:	28800808 	cmpgei	r2,r5,32
  80d7dc:	1001451e 	bne	r2,zero,80dcf4 <__subdf3+0x5b4>
  80d7e0:	00800804 	movi	r2,32
  80d7e4:	1145c83a 	sub	r2,r2,r5
  80d7e8:	18a2983a 	sll	r17,r3,r2
  80d7ec:	5148d83a 	srl	r4,r10,r5
  80d7f0:	5084983a 	sll	r2,r10,r2
  80d7f4:	1946d83a 	srl	r3,r3,r5
  80d7f8:	8922b03a 	or	r17,r17,r4
  80d7fc:	1004c03a 	cmpne	r2,r2,zero
  80d800:	88a2b03a 	or	r17,r17,r2
  80d804:	40d1c83a 	sub	r8,r8,r3
  80d808:	5c63c83a 	sub	r17,r11,r17
  80d80c:	5c49803a 	cmpltu	r4,r11,r17
  80d810:	4109c83a 	sub	r4,r8,r4
  80d814:	2080202c 	andhi	r2,r4,128
  80d818:	1000a526 	beq	r2,zero,80dab0 <__subdf3+0x370>
  80d81c:	04c02034 	movhi	r19,128
  80d820:	9cffffc4 	addi	r19,r19,-1
  80d824:	24e6703a 	and	r19,r4,r19
  80d828:	9800db26 	beq	r19,zero,80db98 <__subdf3+0x458>
  80d82c:	9809883a 	mov	r4,r19
  80d830:	08014b00 	call	8014b0 <__clzsi2>
  80d834:	117ffe04 	addi	r5,r2,-8
  80d838:	01000804 	movi	r4,32
  80d83c:	2149c83a 	sub	r4,r4,r5
  80d840:	8906d83a 	srl	r3,r17,r4
  80d844:	9948983a 	sll	r4,r19,r5
  80d848:	8962983a 	sll	r17,r17,r5
  80d84c:	1908b03a 	or	r4,r3,r4
  80d850:	2c00cc16 	blt	r5,r16,80db84 <__subdf3+0x444>
  80d854:	2c0bc83a 	sub	r5,r5,r16
  80d858:	28c00044 	addi	r3,r5,1
  80d85c:	18800808 	cmpgei	r2,r3,32
  80d860:	1001171e 	bne	r2,zero,80dcc0 <__subdf3+0x580>
  80d864:	00800804 	movi	r2,32
  80d868:	10c5c83a 	sub	r2,r2,r3
  80d86c:	88cad83a 	srl	r5,r17,r3
  80d870:	88a2983a 	sll	r17,r17,r2
  80d874:	2084983a 	sll	r2,r4,r2
  80d878:	20c8d83a 	srl	r4,r4,r3
  80d87c:	8822c03a 	cmpne	r17,r17,zero
  80d880:	1144b03a 	or	r2,r2,r5
  80d884:	1462b03a 	or	r17,r2,r17
  80d888:	0021883a 	mov	r16,zero
  80d88c:	888001cc 	andi	r2,r17,7
  80d890:	10000726 	beq	r2,zero,80d8b0 <__subdf3+0x170>
  80d894:	888003cc 	andi	r2,r17,15
  80d898:	10800120 	cmpeqi	r2,r2,4
  80d89c:	1000041e 	bne	r2,zero,80d8b0 <__subdf3+0x170>
  80d8a0:	88c00104 	addi	r3,r17,4
  80d8a4:	1c63803a 	cmpltu	r17,r3,r17
  80d8a8:	2449883a 	add	r4,r4,r17
  80d8ac:	1823883a 	mov	r17,r3
  80d8b0:	2080202c 	andhi	r2,r4,128
  80d8b4:	10008026 	beq	r2,zero,80dab8 <__subdf3+0x378>
  80d8b8:	81400044 	addi	r5,r16,1
  80d8bc:	2881ffe0 	cmpeqi	r2,r5,2047
  80d8c0:	2941ffcc 	andi	r5,r5,2047
  80d8c4:	1000921e 	bne	r2,zero,80db10 <__subdf3+0x3d0>
  80d8c8:	00bfe034 	movhi	r2,65408
  80d8cc:	10bfffc4 	addi	r2,r2,-1
  80d8d0:	2088703a 	and	r4,r4,r2
  80d8d4:	2006927a 	slli	r3,r4,9
  80d8d8:	8822d0fa 	srli	r17,r17,3
  80d8dc:	2004977a 	slli	r2,r4,29
  80d8e0:	1806d33a 	srli	r3,r3,12
  80d8e4:	1444b03a 	or	r2,r2,r17
  80d8e8:	280a953a 	slli	r5,r5,20
  80d8ec:	94803fcc 	andi	r18,r18,255
  80d8f0:	902497fa 	slli	r18,r18,31
  80d8f4:	28c6b03a 	or	r3,r5,r3
  80d8f8:	1c86b03a 	or	r3,r3,r18
  80d8fc:	dfc00417 	ldw	ra,16(sp)
  80d900:	dcc00317 	ldw	r19,12(sp)
  80d904:	dc800217 	ldw	r18,8(sp)
  80d908:	dc400117 	ldw	r17,4(sp)
  80d90c:	dc000017 	ldw	r16,0(sp)
  80d910:	dec00504 	addi	sp,sp,20
  80d914:	f800283a 	ret
  80d918:	01402e0e 	bge	zero,r5,80d9d4 <__subdf3+0x294>
  80d91c:	68005526 	beq	r13,zero,80da74 <__subdf3+0x334>
  80d920:	8081ffd8 	cmpnei	r2,r16,2047
  80d924:	10013b26 	beq	r2,zero,80de14 <__subdf3+0x6d4>
  80d928:	18c02034 	orhi	r3,r3,128
  80d92c:	28800e48 	cmpgei	r2,r5,57
  80d930:	10006d1e 	bne	r2,zero,80dae8 <__subdf3+0x3a8>
  80d934:	28800808 	cmpgei	r2,r5,32
  80d938:	10010826 	beq	r2,zero,80dd5c <__subdf3+0x61c>
  80d93c:	2c7ff804 	addi	r17,r5,-32
  80d940:	29000820 	cmpeqi	r4,r5,32
  80d944:	1c44d83a 	srl	r2,r3,r17
  80d948:	2000041e 	bne	r4,zero,80d95c <__subdf3+0x21c>
  80d94c:	01001004 	movi	r4,64
  80d950:	214bc83a 	sub	r5,r4,r5
  80d954:	1946983a 	sll	r3,r3,r5
  80d958:	50d4b03a 	or	r10,r10,r3
  80d95c:	5022c03a 	cmpne	r17,r10,zero
  80d960:	88a2b03a 	or	r17,r17,r2
  80d964:	00006206 	br	80daf0 <__subdf3+0x3b0>
  80d968:	1a98b03a 	or	r12,r3,r10
  80d96c:	817e0044 	addi	r5,r16,-2047
  80d970:	6000161e 	bne	r12,zero,80d9cc <__subdf3+0x28c>
  80d974:	3a40005c 	xori	r9,r7,1
  80d978:	12401626 	beq	r2,r9,80d9d4 <__subdf3+0x294>
  80d97c:	28002e26 	beq	r5,zero,80da38 <__subdf3+0x2f8>
  80d980:	6c0bc83a 	sub	r5,r13,r16
  80d984:	4825883a 	mov	r18,r9
  80d988:	80009e1e 	bne	r16,zero,80dc04 <__subdf3+0x4c4>
  80d98c:	42c4b03a 	or	r2,r8,r11
  80d990:	10010926 	beq	r2,zero,80ddb8 <__subdf3+0x678>
  80d994:	28bfffc4 	addi	r2,r5,-1
  80d998:	10016826 	beq	r2,zero,80df3c <__subdf3+0x7fc>
  80d99c:	2941ffd8 	cmpnei	r5,r5,2047
  80d9a0:	28015f26 	beq	r5,zero,80df20 <__subdf3+0x7e0>
  80d9a4:	100b883a 	mov	r5,r2
  80d9a8:	00009906 	br	80dc10 <__subdf3+0x4d0>
  80d9ac:	1a84b03a 	or	r2,r3,r10
  80d9b0:	1000b126 	beq	r2,zero,80dc78 <__subdf3+0x538>
  80d9b4:	28bfffc4 	addi	r2,r5,-1
  80d9b8:	10011d26 	beq	r2,zero,80de30 <__subdf3+0x6f0>
  80d9bc:	2941ffd8 	cmpnei	r5,r5,2047
  80d9c0:	28011426 	beq	r5,zero,80de14 <__subdf3+0x6d4>
  80d9c4:	100b883a 	mov	r5,r2
  80d9c8:	003f8106 	br	80d7d0 <__subdf3+0x90>
  80d9cc:	3a403fcc 	andi	r9,r7,255
  80d9d0:	11ffea1e 	bne	r2,r7,80d97c <__subdf3+0x23c>
  80d9d4:	28007c26 	beq	r5,zero,80dbc8 <__subdf3+0x488>
  80d9d8:	6c0bc83a 	sub	r5,r13,r16
  80d9dc:	8000d726 	beq	r16,zero,80dd3c <__subdf3+0x5fc>
  80d9e0:	6881ffd8 	cmpnei	r2,r13,2047
  80d9e4:	10012626 	beq	r2,zero,80de80 <__subdf3+0x740>
  80d9e8:	42002034 	orhi	r8,r8,128
  80d9ec:	28800e48 	cmpgei	r2,r5,57
  80d9f0:	10012a1e 	bne	r2,zero,80de9c <__subdf3+0x75c>
  80d9f4:	28800808 	cmpgei	r2,r5,32
  80d9f8:	1001821e 	bne	r2,zero,80e004 <__subdf3+0x8c4>
  80d9fc:	00800804 	movi	r2,32
  80da00:	1145c83a 	sub	r2,r2,r5
  80da04:	40a2983a 	sll	r17,r8,r2
  80da08:	5948d83a 	srl	r4,r11,r5
  80da0c:	5884983a 	sll	r2,r11,r2
  80da10:	4150d83a 	srl	r8,r8,r5
  80da14:	8922b03a 	or	r17,r17,r4
  80da18:	1004c03a 	cmpne	r2,r2,zero
  80da1c:	88a2b03a 	or	r17,r17,r2
  80da20:	1a07883a 	add	r3,r3,r8
  80da24:	8aa3883a 	add	r17,r17,r10
  80da28:	8a89803a 	cmpltu	r4,r17,r10
  80da2c:	20c9883a 	add	r4,r4,r3
  80da30:	6821883a 	mov	r16,r13
  80da34:	00003106 	br	80dafc <__subdf3+0x3bc>
  80da38:	80800044 	addi	r2,r16,1
  80da3c:	1081ff8c 	andi	r2,r2,2046
  80da40:	1000821e 	bne	r2,zero,80dc4c <__subdf3+0x50c>
  80da44:	42ceb03a 	or	r7,r8,r11
  80da48:	1a84b03a 	or	r2,r3,r10
  80da4c:	8000e11e 	bne	r16,zero,80ddd4 <__subdf3+0x694>
  80da50:	38012a26 	beq	r7,zero,80defc <__subdf3+0x7bc>
  80da54:	1001461e 	bne	r2,zero,80df70 <__subdf3+0x830>
  80da58:	4004977a 	slli	r2,r8,29
  80da5c:	00c80034 	movhi	r3,8192
  80da60:	18ffffc4 	addi	r3,r3,-1
  80da64:	20c8703a 	and	r4,r4,r3
  80da68:	4010d0fa 	srli	r8,r8,3
  80da6c:	1104b03a 	or	r2,r2,r4
  80da70:	00001806 	br	80dad4 <__subdf3+0x394>
  80da74:	1a84b03a 	or	r2,r3,r10
  80da78:	1000fa26 	beq	r2,zero,80de64 <__subdf3+0x724>
  80da7c:	28bfffc4 	addi	r2,r5,-1
  80da80:	10000426 	beq	r2,zero,80da94 <__subdf3+0x354>
  80da84:	2941ffd8 	cmpnei	r5,r5,2047
  80da88:	28013226 	beq	r5,zero,80df54 <__subdf3+0x814>
  80da8c:	100b883a 	mov	r5,r2
  80da90:	003fa606 	br	80d92c <__subdf3+0x1ec>
  80da94:	5aa3883a 	add	r17,r11,r10
  80da98:	40c9883a 	add	r4,r8,r3
  80da9c:	8ad7803a 	cmpltu	r11,r17,r11
  80daa0:	22c9883a 	add	r4,r4,r11
  80daa4:	2080202c 	andhi	r2,r4,128
  80daa8:	10007a1e 	bne	r2,zero,80dc94 <__subdf3+0x554>
  80daac:	04000044 	movi	r16,1
  80dab0:	888001cc 	andi	r2,r17,7
  80dab4:	103f771e 	bne	r2,zero,80d894 <__subdf3+0x154>
  80dab8:	8822d0fa 	srli	r17,r17,3
  80dabc:	2004977a 	slli	r2,r4,29
  80dac0:	2010d0fa 	srli	r8,r4,3
  80dac4:	800b883a 	mov	r5,r16
  80dac8:	8884b03a 	or	r2,r17,r2
  80dacc:	28c1ffe0 	cmpeqi	r3,r5,2047
  80dad0:	1800241e 	bne	r3,zero,80db64 <__subdf3+0x424>
  80dad4:	00c00434 	movhi	r3,16
  80dad8:	18ffffc4 	addi	r3,r3,-1
  80dadc:	40c6703a 	and	r3,r8,r3
  80dae0:	2941ffcc 	andi	r5,r5,2047
  80dae4:	003f8006 	br	80d8e8 <__subdf3+0x1a8>
  80dae8:	1aa2b03a 	or	r17,r3,r10
  80daec:	8822c03a 	cmpne	r17,r17,zero
  80daf0:	8ae3883a 	add	r17,r17,r11
  80daf4:	8ac9803a 	cmpltu	r4,r17,r11
  80daf8:	2209883a 	add	r4,r4,r8
  80dafc:	2080202c 	andhi	r2,r4,128
  80db00:	103feb26 	beq	r2,zero,80dab0 <__subdf3+0x370>
  80db04:	84000044 	addi	r16,r16,1
  80db08:	8081ffe0 	cmpeqi	r2,r16,2047
  80db0c:	10006226 	beq	r2,zero,80dc98 <__subdf3+0x558>
  80db10:	0141ffc4 	movi	r5,2047
  80db14:	0007883a 	mov	r3,zero
  80db18:	0005883a 	mov	r2,zero
  80db1c:	003f7206 	br	80d8e8 <__subdf3+0x1a8>
  80db20:	400e977a 	slli	r7,r8,29
  80db24:	4010d0fa 	srli	r8,r8,3
  80db28:	1000ef26 	beq	r2,zero,80dee8 <__subdf3+0x7a8>
  80db2c:	01480034 	movhi	r5,8192
  80db30:	297fffc4 	addi	r5,r5,-1
  80db34:	2144703a 	and	r2,r4,r5
  80db38:	4100022c 	andhi	r4,r8,8
  80db3c:	11c4b03a 	or	r2,r2,r7
  80db40:	20000826 	beq	r4,zero,80db64 <__subdf3+0x424>
  80db44:	1808d0fa 	srli	r4,r3,3
  80db48:	21c0022c 	andhi	r7,r4,8
  80db4c:	3800051e 	bne	r7,zero,80db64 <__subdf3+0x424>
  80db50:	1804977a 	slli	r2,r3,29
  80db54:	314c703a 	and	r6,r6,r5
  80db58:	4825883a 	mov	r18,r9
  80db5c:	3084b03a 	or	r2,r6,r2
  80db60:	2011883a 	mov	r8,r4
  80db64:	1206b03a 	or	r3,r2,r8
  80db68:	18013e26 	beq	r3,zero,80e064 <__subdf3+0x924>
  80db6c:	01000434 	movhi	r4,16
  80db70:	40c00234 	orhi	r3,r8,8
  80db74:	213fffc4 	addi	r4,r4,-1
  80db78:	1906703a 	and	r3,r3,r4
  80db7c:	0141ffc4 	movi	r5,2047
  80db80:	003f5906 	br	80d8e8 <__subdf3+0x1a8>
  80db84:	00ffe034 	movhi	r3,65408
  80db88:	18ffffc4 	addi	r3,r3,-1
  80db8c:	8161c83a 	sub	r16,r16,r5
  80db90:	20c8703a 	and	r4,r4,r3
  80db94:	003f3d06 	br	80d88c <__subdf3+0x14c>
  80db98:	8809883a 	mov	r4,r17
  80db9c:	08014b00 	call	8014b0 <__clzsi2>
  80dba0:	11400604 	addi	r5,r2,24
  80dba4:	28c00808 	cmpgei	r3,r5,32
  80dba8:	183f2326 	beq	r3,zero,80d838 <__subdf3+0xf8>
  80dbac:	113ffe04 	addi	r4,r2,-8
  80dbb0:	8908983a 	sll	r4,r17,r4
  80dbb4:	0023883a 	mov	r17,zero
  80dbb8:	003f2506 	br	80d850 <__subdf3+0x110>
  80dbbc:	1aa2b03a 	or	r17,r3,r10
  80dbc0:	8822c03a 	cmpne	r17,r17,zero
  80dbc4:	003f1006 	br	80d808 <__subdf3+0xc8>
  80dbc8:	80800044 	addi	r2,r16,1
  80dbcc:	11c1ff8c 	andi	r7,r2,2046
  80dbd0:	38006d1e 	bne	r7,zero,80dd88 <__subdf3+0x648>
  80dbd4:	42c4b03a 	or	r2,r8,r11
  80dbd8:	8000be1e 	bne	r16,zero,80ded4 <__subdf3+0x794>
  80dbdc:	1000f726 	beq	r2,zero,80dfbc <__subdf3+0x87c>
  80dbe0:	1a84b03a 	or	r2,r3,r10
  80dbe4:	1000fc1e 	bne	r2,zero,80dfd8 <__subdf3+0x898>
  80dbe8:	4006977a 	slli	r3,r8,29
  80dbec:	00880034 	movhi	r2,8192
  80dbf0:	10bfffc4 	addi	r2,r2,-1
  80dbf4:	2084703a 	and	r2,r4,r2
  80dbf8:	4010d0fa 	srli	r8,r8,3
  80dbfc:	10c4b03a 	or	r2,r2,r3
  80dc00:	003fb406 	br	80dad4 <__subdf3+0x394>
  80dc04:	6881ffd8 	cmpnei	r2,r13,2047
  80dc08:	10009d26 	beq	r2,zero,80de80 <__subdf3+0x740>
  80dc0c:	42002034 	orhi	r8,r8,128
  80dc10:	28800e48 	cmpgei	r2,r5,57
  80dc14:	1000421e 	bne	r2,zero,80dd20 <__subdf3+0x5e0>
  80dc18:	28800808 	cmpgei	r2,r5,32
  80dc1c:	1000a21e 	bne	r2,zero,80dea8 <__subdf3+0x768>
  80dc20:	00800804 	movi	r2,32
  80dc24:	1145c83a 	sub	r2,r2,r5
  80dc28:	40a2983a 	sll	r17,r8,r2
  80dc2c:	5948d83a 	srl	r4,r11,r5
  80dc30:	5896983a 	sll	r11,r11,r2
  80dc34:	4150d83a 	srl	r8,r8,r5
  80dc38:	8922b03a 	or	r17,r17,r4
  80dc3c:	5816c03a 	cmpne	r11,r11,zero
  80dc40:	8ae2b03a 	or	r17,r17,r11
  80dc44:	1a07c83a 	sub	r3,r3,r8
  80dc48:	00003706 	br	80dd28 <__subdf3+0x5e8>
  80dc4c:	5aa3c83a 	sub	r17,r11,r10
  80dc50:	40e7c83a 	sub	r19,r8,r3
  80dc54:	5c49803a 	cmpltu	r4,r11,r17
  80dc58:	9927c83a 	sub	r19,r19,r4
  80dc5c:	9880202c 	andhi	r2,r19,128
  80dc60:	1000661e 	bne	r2,zero,80ddfc <__subdf3+0x6bc>
  80dc64:	8cc4b03a 	or	r2,r17,r19
  80dc68:	103eef1e 	bne	r2,zero,80d828 <__subdf3+0xe8>
  80dc6c:	0011883a 	mov	r8,zero
  80dc70:	0025883a 	mov	r18,zero
  80dc74:	003f9706 	br	80dad4 <__subdf3+0x394>
  80dc78:	4022977a 	slli	r17,r8,29
  80dc7c:	00880034 	movhi	r2,8192
  80dc80:	10bfffc4 	addi	r2,r2,-1
  80dc84:	2088703a 	and	r4,r4,r2
  80dc88:	4010d0fa 	srli	r8,r8,3
  80dc8c:	2444b03a 	or	r2,r4,r17
  80dc90:	003f8e06 	br	80dacc <__subdf3+0x38c>
  80dc94:	04000084 	movi	r16,2
  80dc98:	00bfe034 	movhi	r2,65408
  80dc9c:	10bfffc4 	addi	r2,r2,-1
  80dca0:	8806d07a 	srli	r3,r17,1
  80dca4:	2088703a 	and	r4,r4,r2
  80dca8:	200497fa 	slli	r2,r4,31
  80dcac:	8c40004c 	andi	r17,r17,1
  80dcb0:	1c62b03a 	or	r17,r3,r17
  80dcb4:	2008d07a 	srli	r4,r4,1
  80dcb8:	1462b03a 	or	r17,r2,r17
  80dcbc:	003ef306 	br	80d88c <__subdf3+0x14c>
  80dcc0:	297ff844 	addi	r5,r5,-31
  80dcc4:	18800820 	cmpeqi	r2,r3,32
  80dcc8:	214ad83a 	srl	r5,r4,r5
  80dccc:	1000041e 	bne	r2,zero,80dce0 <__subdf3+0x5a0>
  80dcd0:	00801004 	movi	r2,64
  80dcd4:	10c7c83a 	sub	r3,r2,r3
  80dcd8:	20c8983a 	sll	r4,r4,r3
  80dcdc:	8922b03a 	or	r17,r17,r4
  80dce0:	8822c03a 	cmpne	r17,r17,zero
  80dce4:	8962b03a 	or	r17,r17,r5
  80dce8:	0009883a 	mov	r4,zero
  80dcec:	0021883a 	mov	r16,zero
  80dcf0:	003f6f06 	br	80dab0 <__subdf3+0x370>
  80dcf4:	2c7ff804 	addi	r17,r5,-32
  80dcf8:	29000820 	cmpeqi	r4,r5,32
  80dcfc:	1c44d83a 	srl	r2,r3,r17
  80dd00:	2000041e 	bne	r4,zero,80dd14 <__subdf3+0x5d4>
  80dd04:	01001004 	movi	r4,64
  80dd08:	214bc83a 	sub	r5,r4,r5
  80dd0c:	1946983a 	sll	r3,r3,r5
  80dd10:	50d4b03a 	or	r10,r10,r3
  80dd14:	5022c03a 	cmpne	r17,r10,zero
  80dd18:	88a2b03a 	or	r17,r17,r2
  80dd1c:	003eba06 	br	80d808 <__subdf3+0xc8>
  80dd20:	42d0b03a 	or	r8,r8,r11
  80dd24:	4022c03a 	cmpne	r17,r8,zero
  80dd28:	5463c83a 	sub	r17,r10,r17
  80dd2c:	5449803a 	cmpltu	r4,r10,r17
  80dd30:	1909c83a 	sub	r4,r3,r4
  80dd34:	6821883a 	mov	r16,r13
  80dd38:	003eb606 	br	80d814 <__subdf3+0xd4>
  80dd3c:	42c4b03a 	or	r2,r8,r11
  80dd40:	10009726 	beq	r2,zero,80dfa0 <__subdf3+0x860>
  80dd44:	28bfffc4 	addi	r2,r5,-1
  80dd48:	1000b926 	beq	r2,zero,80e030 <__subdf3+0x8f0>
  80dd4c:	2941ffd8 	cmpnei	r5,r5,2047
  80dd50:	28007326 	beq	r5,zero,80df20 <__subdf3+0x7e0>
  80dd54:	100b883a 	mov	r5,r2
  80dd58:	003f2406 	br	80d9ec <__subdf3+0x2ac>
  80dd5c:	00800804 	movi	r2,32
  80dd60:	1145c83a 	sub	r2,r2,r5
  80dd64:	18a2983a 	sll	r17,r3,r2
  80dd68:	5148d83a 	srl	r4,r10,r5
  80dd6c:	5084983a 	sll	r2,r10,r2
  80dd70:	1946d83a 	srl	r3,r3,r5
  80dd74:	8922b03a 	or	r17,r17,r4
  80dd78:	1004c03a 	cmpne	r2,r2,zero
  80dd7c:	88a2b03a 	or	r17,r17,r2
  80dd80:	40d1883a 	add	r8,r8,r3
  80dd84:	003f5a06 	br	80daf0 <__subdf3+0x3b0>
  80dd88:	1101ffe0 	cmpeqi	r4,r2,2047
  80dd8c:	203f601e 	bne	r4,zero,80db10 <__subdf3+0x3d0>
  80dd90:	5a95883a 	add	r10,r11,r10
  80dd94:	52d7803a 	cmpltu	r11,r10,r11
  80dd98:	40c9883a 	add	r4,r8,r3
  80dd9c:	22c9883a 	add	r4,r4,r11
  80dda0:	202297fa 	slli	r17,r4,31
  80dda4:	5014d07a 	srli	r10,r10,1
  80dda8:	2008d07a 	srli	r4,r4,1
  80ddac:	1021883a 	mov	r16,r2
  80ddb0:	8aa2b03a 	or	r17,r17,r10
  80ddb4:	003f3e06 	br	80dab0 <__subdf3+0x370>
  80ddb8:	1808977a 	slli	r4,r3,29
  80ddbc:	00880034 	movhi	r2,8192
  80ddc0:	10bfffc4 	addi	r2,r2,-1
  80ddc4:	308c703a 	and	r6,r6,r2
  80ddc8:	1810d0fa 	srli	r8,r3,3
  80ddcc:	3104b03a 	or	r2,r6,r4
  80ddd0:	003f3e06 	br	80dacc <__subdf3+0x38c>
  80ddd4:	383f521e 	bne	r7,zero,80db20 <__subdf3+0x3e0>
  80ddd8:	10009d26 	beq	r2,zero,80e050 <__subdf3+0x910>
  80dddc:	1808977a 	slli	r4,r3,29
  80dde0:	00880034 	movhi	r2,8192
  80dde4:	10bfffc4 	addi	r2,r2,-1
  80dde8:	3084703a 	and	r2,r6,r2
  80ddec:	1810d0fa 	srli	r8,r3,3
  80ddf0:	1104b03a 	or	r2,r2,r4
  80ddf4:	4825883a 	mov	r18,r9
  80ddf8:	003f5a06 	br	80db64 <__subdf3+0x424>
  80ddfc:	52e3c83a 	sub	r17,r10,r11
  80de00:	1a09c83a 	sub	r4,r3,r8
  80de04:	5467803a 	cmpltu	r19,r10,r17
  80de08:	24e7c83a 	sub	r19,r4,r19
  80de0c:	4825883a 	mov	r18,r9
  80de10:	003e8506 	br	80d828 <__subdf3+0xe8>
  80de14:	4022977a 	slli	r17,r8,29
  80de18:	00880034 	movhi	r2,8192
  80de1c:	10bfffc4 	addi	r2,r2,-1
  80de20:	2088703a 	and	r4,r4,r2
  80de24:	4010d0fa 	srli	r8,r8,3
  80de28:	2444b03a 	or	r2,r4,r17
  80de2c:	003f4d06 	br	80db64 <__subdf3+0x424>
  80de30:	5aa3c83a 	sub	r17,r11,r10
  80de34:	40c9c83a 	sub	r4,r8,r3
  80de38:	5c57803a 	cmpltu	r11,r11,r17
  80de3c:	22c9c83a 	sub	r4,r4,r11
  80de40:	04000044 	movi	r16,1
  80de44:	003e7306 	br	80d814 <__subdf3+0xd4>
  80de48:	4004977a 	slli	r2,r8,29
  80de4c:	00c80034 	movhi	r3,8192
  80de50:	18ffffc4 	addi	r3,r3,-1
  80de54:	20c8703a 	and	r4,r4,r3
  80de58:	4010d0fa 	srli	r8,r8,3
  80de5c:	1104b03a 	or	r2,r2,r4
  80de60:	003f4006 	br	80db64 <__subdf3+0x424>
  80de64:	4004977a 	slli	r2,r8,29
  80de68:	00c80034 	movhi	r3,8192
  80de6c:	18ffffc4 	addi	r3,r3,-1
  80de70:	20c8703a 	and	r4,r4,r3
  80de74:	4010d0fa 	srli	r8,r8,3
  80de78:	1104b03a 	or	r2,r2,r4
  80de7c:	003f1306 	br	80dacc <__subdf3+0x38c>
  80de80:	1804977a 	slli	r2,r3,29
  80de84:	01080034 	movhi	r4,8192
  80de88:	213fffc4 	addi	r4,r4,-1
  80de8c:	310c703a 	and	r6,r6,r4
  80de90:	1810d0fa 	srli	r8,r3,3
  80de94:	1184b03a 	or	r2,r2,r6
  80de98:	003f3206 	br	80db64 <__subdf3+0x424>
  80de9c:	42d0b03a 	or	r8,r8,r11
  80dea0:	4022c03a 	cmpne	r17,r8,zero
  80dea4:	003edf06 	br	80da24 <__subdf3+0x2e4>
  80dea8:	2c7ff804 	addi	r17,r5,-32
  80deac:	29000820 	cmpeqi	r4,r5,32
  80deb0:	4444d83a 	srl	r2,r8,r17
  80deb4:	2000041e 	bne	r4,zero,80dec8 <__subdf3+0x788>
  80deb8:	01001004 	movi	r4,64
  80debc:	214bc83a 	sub	r5,r4,r5
  80dec0:	4150983a 	sll	r8,r8,r5
  80dec4:	5a16b03a 	or	r11,r11,r8
  80dec8:	5822c03a 	cmpne	r17,r11,zero
  80decc:	88a2b03a 	or	r17,r17,r2
  80ded0:	003f9506 	br	80dd28 <__subdf3+0x5e8>
  80ded4:	103fea26 	beq	r2,zero,80de80 <__subdf3+0x740>
  80ded8:	1a94b03a 	or	r10,r3,r10
  80dedc:	400e977a 	slli	r7,r8,29
  80dee0:	4010d0fa 	srli	r8,r8,3
  80dee4:	503f111e 	bne	r10,zero,80db2c <__subdf3+0x3ec>
  80dee8:	00880034 	movhi	r2,8192
  80deec:	10bfffc4 	addi	r2,r2,-1
  80def0:	2084703a 	and	r2,r4,r2
  80def4:	11c4b03a 	or	r2,r2,r7
  80def8:	003f1a06 	br	80db64 <__subdf3+0x424>
  80defc:	103f5b26 	beq	r2,zero,80dc6c <__subdf3+0x52c>
  80df00:	1804977a 	slli	r2,r3,29
  80df04:	01080034 	movhi	r4,8192
  80df08:	213fffc4 	addi	r4,r4,-1
  80df0c:	310c703a 	and	r6,r6,r4
  80df10:	1810d0fa 	srli	r8,r3,3
  80df14:	1184b03a 	or	r2,r2,r6
  80df18:	4825883a 	mov	r18,r9
  80df1c:	003eed06 	br	80dad4 <__subdf3+0x394>
  80df20:	1808977a 	slli	r4,r3,29
  80df24:	00880034 	movhi	r2,8192
  80df28:	10bfffc4 	addi	r2,r2,-1
  80df2c:	3084703a 	and	r2,r6,r2
  80df30:	1810d0fa 	srli	r8,r3,3
  80df34:	1104b03a 	or	r2,r2,r4
  80df38:	003f0a06 	br	80db64 <__subdf3+0x424>
  80df3c:	52e3c83a 	sub	r17,r10,r11
  80df40:	1a09c83a 	sub	r4,r3,r8
  80df44:	5455803a 	cmpltu	r10,r10,r17
  80df48:	2289c83a 	sub	r4,r4,r10
  80df4c:	04000044 	movi	r16,1
  80df50:	003e3006 	br	80d814 <__subdf3+0xd4>
  80df54:	4006977a 	slli	r3,r8,29
  80df58:	00880034 	movhi	r2,8192
  80df5c:	10bfffc4 	addi	r2,r2,-1
  80df60:	2084703a 	and	r2,r4,r2
  80df64:	4010d0fa 	srli	r8,r8,3
  80df68:	10c4b03a 	or	r2,r2,r3
  80df6c:	003efd06 	br	80db64 <__subdf3+0x424>
  80df70:	5aa3c83a 	sub	r17,r11,r10
  80df74:	5c45803a 	cmpltu	r2,r11,r17
  80df78:	40c9c83a 	sub	r4,r8,r3
  80df7c:	2089c83a 	sub	r4,r4,r2
  80df80:	2080202c 	andhi	r2,r4,128
  80df84:	10002f26 	beq	r2,zero,80e044 <__subdf3+0x904>
  80df88:	52e3c83a 	sub	r17,r10,r11
  80df8c:	1a09c83a 	sub	r4,r3,r8
  80df90:	5455803a 	cmpltu	r10,r10,r17
  80df94:	2289c83a 	sub	r4,r4,r10
  80df98:	4825883a 	mov	r18,r9
  80df9c:	003e3b06 	br	80d88c <__subdf3+0x14c>
  80dfa0:	1808977a 	slli	r4,r3,29
  80dfa4:	00880034 	movhi	r2,8192
  80dfa8:	10bfffc4 	addi	r2,r2,-1
  80dfac:	3084703a 	and	r2,r6,r2
  80dfb0:	1810d0fa 	srli	r8,r3,3
  80dfb4:	1104b03a 	or	r2,r2,r4
  80dfb8:	003ec406 	br	80dacc <__subdf3+0x38c>
  80dfbc:	1808977a 	slli	r4,r3,29
  80dfc0:	00880034 	movhi	r2,8192
  80dfc4:	10bfffc4 	addi	r2,r2,-1
  80dfc8:	3084703a 	and	r2,r6,r2
  80dfcc:	1810d0fa 	srli	r8,r3,3
  80dfd0:	1104b03a 	or	r2,r2,r4
  80dfd4:	003ebf06 	br	80dad4 <__subdf3+0x394>
  80dfd8:	5aa3883a 	add	r17,r11,r10
  80dfdc:	40c9883a 	add	r4,r8,r3
  80dfe0:	8ad7803a 	cmpltu	r11,r17,r11
  80dfe4:	22c9883a 	add	r4,r4,r11
  80dfe8:	2080202c 	andhi	r2,r4,128
  80dfec:	103eb026 	beq	r2,zero,80dab0 <__subdf3+0x370>
  80dff0:	00bfe034 	movhi	r2,65408
  80dff4:	10bfffc4 	addi	r2,r2,-1
  80dff8:	2088703a 	and	r4,r4,r2
  80dffc:	04000044 	movi	r16,1
  80e000:	003eab06 	br	80dab0 <__subdf3+0x370>
  80e004:	28bff804 	addi	r2,r5,-32
  80e008:	29000820 	cmpeqi	r4,r5,32
  80e00c:	4084d83a 	srl	r2,r8,r2
  80e010:	2000041e 	bne	r4,zero,80e024 <__subdf3+0x8e4>
  80e014:	01001004 	movi	r4,64
  80e018:	214bc83a 	sub	r5,r4,r5
  80e01c:	4150983a 	sll	r8,r8,r5
  80e020:	5a16b03a 	or	r11,r11,r8
  80e024:	5822c03a 	cmpne	r17,r11,zero
  80e028:	88a2b03a 	or	r17,r17,r2
  80e02c:	003e7d06 	br	80da24 <__subdf3+0x2e4>
  80e030:	5aa3883a 	add	r17,r11,r10
  80e034:	40c9883a 	add	r4,r8,r3
  80e038:	8a95803a 	cmpltu	r10,r17,r10
  80e03c:	2289883a 	add	r4,r4,r10
  80e040:	003e9806 	br	80daa4 <__subdf3+0x364>
  80e044:	8904b03a 	or	r2,r17,r4
  80e048:	103f0826 	beq	r2,zero,80dc6c <__subdf3+0x52c>
  80e04c:	003e9806 	br	80dab0 <__subdf3+0x370>
  80e050:	02000434 	movhi	r8,16
  80e054:	423fffc4 	addi	r8,r8,-1
  80e058:	0025883a 	mov	r18,zero
  80e05c:	00bfffc4 	movi	r2,-1
  80e060:	003ec206 	br	80db6c <__subdf3+0x42c>
  80e064:	0005883a 	mov	r2,zero
  80e068:	0141ffc4 	movi	r5,2047
  80e06c:	0007883a 	mov	r3,zero
  80e070:	003e1d06 	br	80d8e8 <__subdf3+0x1a8>

0080e074 <__unorddf2>:
  80e074:	2806d53a 	srli	r3,r5,20
  80e078:	3810d53a 	srli	r8,r7,20
  80e07c:	02400434 	movhi	r9,16
  80e080:	18c1ffcc 	andi	r3,r3,2047
  80e084:	4a7fffc4 	addi	r9,r9,-1
  80e088:	18c1ffd8 	cmpnei	r3,r3,2047
  80e08c:	2a4a703a 	and	r5,r5,r9
  80e090:	3a4e703a 	and	r7,r7,r9
  80e094:	4201ffcc 	andi	r8,r8,2047
  80e098:	18000426 	beq	r3,zero,80e0ac <__unorddf2+0x38>
  80e09c:	4201ffd8 	cmpnei	r8,r8,2047
  80e0a0:	40000626 	beq	r8,zero,80e0bc <__unorddf2+0x48>
  80e0a4:	0005883a 	mov	r2,zero
  80e0a8:	f800283a 	ret
  80e0ac:	214ab03a 	or	r5,r4,r5
  80e0b0:	283ffa26 	beq	r5,zero,80e09c <__unorddf2+0x28>
  80e0b4:	00800044 	movi	r2,1
  80e0b8:	f800283a 	ret
  80e0bc:	398eb03a 	or	r7,r7,r6
  80e0c0:	3804c03a 	cmpne	r2,r7,zero
  80e0c4:	f800283a 	ret

0080e0c8 <__fixdfsi>:
  80e0c8:	2806d53a 	srli	r3,r5,20
  80e0cc:	01800434 	movhi	r6,16
  80e0d0:	31bfffc4 	addi	r6,r6,-1
  80e0d4:	18c1ffcc 	andi	r3,r3,2047
  80e0d8:	19c0ffd0 	cmplti	r7,r3,1023
  80e0dc:	2810d7fa 	srli	r8,r5,31
  80e0e0:	298a703a 	and	r5,r5,r6
  80e0e4:	3800061e 	bne	r7,zero,80e100 <__fixdfsi+0x38>
  80e0e8:	18810790 	cmplti	r2,r3,1054
  80e0ec:	1000061e 	bne	r2,zero,80e108 <__fixdfsi+0x40>
  80e0f0:	00a00034 	movhi	r2,32768
  80e0f4:	10bfffc4 	addi	r2,r2,-1
  80e0f8:	4085883a 	add	r2,r8,r2
  80e0fc:	f800283a 	ret
  80e100:	0005883a 	mov	r2,zero
  80e104:	f800283a 	ret
  80e108:	01810cc4 	movi	r6,1075
  80e10c:	30cdc83a 	sub	r6,r6,r3
  80e110:	30800808 	cmpgei	r2,r6,32
  80e114:	29400434 	orhi	r5,r5,16
  80e118:	1000071e 	bne	r2,zero,80e138 <__fixdfsi+0x70>
  80e11c:	18befb44 	addi	r2,r3,-1043
  80e120:	2884983a 	sll	r2,r5,r2
  80e124:	2188d83a 	srl	r4,r4,r6
  80e128:	1104b03a 	or	r2,r2,r4
  80e12c:	403ff526 	beq	r8,zero,80e104 <__fixdfsi+0x3c>
  80e130:	0085c83a 	sub	r2,zero,r2
  80e134:	f800283a 	ret
  80e138:	008104c4 	movi	r2,1043
  80e13c:	10c5c83a 	sub	r2,r2,r3
  80e140:	2884d83a 	srl	r2,r5,r2
  80e144:	003ff906 	br	80e12c <__fixdfsi+0x64>

0080e148 <__floatsidf>:
  80e148:	defffd04 	addi	sp,sp,-12
  80e14c:	dfc00215 	stw	ra,8(sp)
  80e150:	dc400115 	stw	r17,4(sp)
  80e154:	dc000015 	stw	r16,0(sp)
  80e158:	20001326 	beq	r4,zero,80e1a8 <__floatsidf+0x60>
  80e15c:	2022d7fa 	srli	r17,r4,31
  80e160:	2021883a 	mov	r16,r4
  80e164:	20002516 	blt	r4,zero,80e1fc <__floatsidf+0xb4>
  80e168:	8009883a 	mov	r4,r16
  80e16c:	08014b00 	call	8014b0 <__clzsi2>
  80e170:	01410784 	movi	r5,1054
  80e174:	288bc83a 	sub	r5,r5,r2
  80e178:	10c002c8 	cmpgei	r3,r2,11
  80e17c:	2941ffcc 	andi	r5,r5,2047
  80e180:	1800171e 	bne	r3,zero,80e1e0 <__floatsidf+0x98>
  80e184:	00c002c4 	movi	r3,11
  80e188:	1887c83a 	sub	r3,r3,r2
  80e18c:	80c6d83a 	srl	r3,r16,r3
  80e190:	01000434 	movhi	r4,16
  80e194:	10800544 	addi	r2,r2,21
  80e198:	213fffc4 	addi	r4,r4,-1
  80e19c:	8084983a 	sll	r2,r16,r2
  80e1a0:	1906703a 	and	r3,r3,r4
  80e1a4:	00000406 	br	80e1b8 <__floatsidf+0x70>
  80e1a8:	0023883a 	mov	r17,zero
  80e1ac:	000b883a 	mov	r5,zero
  80e1b0:	0007883a 	mov	r3,zero
  80e1b4:	0005883a 	mov	r2,zero
  80e1b8:	280a953a 	slli	r5,r5,20
  80e1bc:	8c403fcc 	andi	r17,r17,255
  80e1c0:	882297fa 	slli	r17,r17,31
  80e1c4:	28c6b03a 	or	r3,r5,r3
  80e1c8:	1c46b03a 	or	r3,r3,r17
  80e1cc:	dfc00217 	ldw	ra,8(sp)
  80e1d0:	dc400117 	ldw	r17,4(sp)
  80e1d4:	dc000017 	ldw	r16,0(sp)
  80e1d8:	dec00304 	addi	sp,sp,12
  80e1dc:	f800283a 	ret
  80e1e0:	10bffd44 	addi	r2,r2,-11
  80e1e4:	8086983a 	sll	r3,r16,r2
  80e1e8:	00800434 	movhi	r2,16
  80e1ec:	10bfffc4 	addi	r2,r2,-1
  80e1f0:	1886703a 	and	r3,r3,r2
  80e1f4:	0005883a 	mov	r2,zero
  80e1f8:	003fef06 	br	80e1b8 <__floatsidf+0x70>
  80e1fc:	0121c83a 	sub	r16,zero,r4
  80e200:	003fd906 	br	80e168 <__floatsidf+0x20>

0080e204 <__floatunsidf>:
  80e204:	defffe04 	addi	sp,sp,-8
  80e208:	dc000015 	stw	r16,0(sp)
  80e20c:	dfc00115 	stw	ra,4(sp)
  80e210:	2021883a 	mov	r16,r4
  80e214:	20000f26 	beq	r4,zero,80e254 <__floatunsidf+0x50>
  80e218:	08014b00 	call	8014b0 <__clzsi2>
  80e21c:	00c10784 	movi	r3,1054
  80e220:	1887c83a 	sub	r3,r3,r2
  80e224:	110002c8 	cmpgei	r4,r2,11
  80e228:	18c1ffcc 	andi	r3,r3,2047
  80e22c:	2000121e 	bne	r4,zero,80e278 <__floatunsidf+0x74>
  80e230:	014002c4 	movi	r5,11
  80e234:	288bc83a 	sub	r5,r5,r2
  80e238:	814ad83a 	srl	r5,r16,r5
  80e23c:	01000434 	movhi	r4,16
  80e240:	10800544 	addi	r2,r2,21
  80e244:	213fffc4 	addi	r4,r4,-1
  80e248:	80a0983a 	sll	r16,r16,r2
  80e24c:	290a703a 	and	r5,r5,r4
  80e250:	00000206 	br	80e25c <__floatunsidf+0x58>
  80e254:	0007883a 	mov	r3,zero
  80e258:	000b883a 	mov	r5,zero
  80e25c:	1806953a 	slli	r3,r3,20
  80e260:	8005883a 	mov	r2,r16
  80e264:	1946b03a 	or	r3,r3,r5
  80e268:	dfc00117 	ldw	ra,4(sp)
  80e26c:	dc000017 	ldw	r16,0(sp)
  80e270:	dec00204 	addi	sp,sp,8
  80e274:	f800283a 	ret
  80e278:	10bffd44 	addi	r2,r2,-11
  80e27c:	808a983a 	sll	r5,r16,r2
  80e280:	00800434 	movhi	r2,16
  80e284:	10bfffc4 	addi	r2,r2,-1
  80e288:	288a703a 	and	r5,r5,r2
  80e28c:	0021883a 	mov	r16,zero
  80e290:	003ff206 	br	80e25c <__floatunsidf+0x58>

0080e294 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e294:	defffe04 	addi	sp,sp,-8
  80e298:	dfc00115 	stw	ra,4(sp)
  80e29c:	df000015 	stw	fp,0(sp)
  80e2a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e2a4:	d0a00e17 	ldw	r2,-32712(gp)
  80e2a8:	10000326 	beq	r2,zero,80e2b8 <alt_get_errno+0x24>
  80e2ac:	d0a00e17 	ldw	r2,-32712(gp)
  80e2b0:	103ee83a 	callr	r2
  80e2b4:	00000106 	br	80e2bc <alt_get_errno+0x28>
  80e2b8:	d0a71104 	addi	r2,gp,-25532
}
  80e2bc:	e037883a 	mov	sp,fp
  80e2c0:	dfc00117 	ldw	ra,4(sp)
  80e2c4:	df000017 	ldw	fp,0(sp)
  80e2c8:	dec00204 	addi	sp,sp,8
  80e2cc:	f800283a 	ret

0080e2d0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80e2d0:	defffb04 	addi	sp,sp,-20
  80e2d4:	dfc00415 	stw	ra,16(sp)
  80e2d8:	df000315 	stw	fp,12(sp)
  80e2dc:	df000304 	addi	fp,sp,12
  80e2e0:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80e2e4:	e0bffd17 	ldw	r2,-12(fp)
  80e2e8:	10000916 	blt	r2,zero,80e310 <close+0x40>
  80e2ec:	e0fffd17 	ldw	r3,-12(fp)
  80e2f0:	1805883a 	mov	r2,r3
  80e2f4:	1085883a 	add	r2,r2,r2
  80e2f8:	10c5883a 	add	r2,r2,r3
  80e2fc:	100490ba 	slli	r2,r2,2
  80e300:	00c02074 	movhi	r3,129
  80e304:	18c73804 	addi	r3,r3,7392
  80e308:	10c5883a 	add	r2,r2,r3
  80e30c:	00000106 	br	80e314 <close+0x44>
  80e310:	0005883a 	mov	r2,zero
  80e314:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  80e318:	e0bfff17 	ldw	r2,-4(fp)
  80e31c:	10001926 	beq	r2,zero,80e384 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80e320:	e0bfff17 	ldw	r2,-4(fp)
  80e324:	10800017 	ldw	r2,0(r2)
  80e328:	10800417 	ldw	r2,16(r2)
  80e32c:	10000626 	beq	r2,zero,80e348 <close+0x78>
  80e330:	e0bfff17 	ldw	r2,-4(fp)
  80e334:	10800017 	ldw	r2,0(r2)
  80e338:	10800417 	ldw	r2,16(r2)
  80e33c:	e13fff17 	ldw	r4,-4(fp)
  80e340:	103ee83a 	callr	r2
  80e344:	00000106 	br	80e34c <close+0x7c>
  80e348:	0005883a 	mov	r2,zero
  80e34c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80e350:	e13ffd17 	ldw	r4,-12(fp)
  80e354:	080eb8c0 	call	80eb8c <alt_release_fd>
    if (rval < 0)
  80e358:	e0bffe17 	ldw	r2,-8(fp)
  80e35c:	1000070e 	bge	r2,zero,80e37c <close+0xac>
    {
      ALT_ERRNO = -rval;
  80e360:	080e2940 	call	80e294 <alt_get_errno>
  80e364:	1007883a 	mov	r3,r2
  80e368:	e0bffe17 	ldw	r2,-8(fp)
  80e36c:	0085c83a 	sub	r2,zero,r2
  80e370:	18800015 	stw	r2,0(r3)
      return -1;
  80e374:	00bfffc4 	movi	r2,-1
  80e378:	00000706 	br	80e398 <close+0xc8>
    }
    return 0;
  80e37c:	0005883a 	mov	r2,zero
  80e380:	00000506 	br	80e398 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e384:	080e2940 	call	80e294 <alt_get_errno>
  80e388:	1007883a 	mov	r3,r2
  80e38c:	00801444 	movi	r2,81
  80e390:	18800015 	stw	r2,0(r3)
    return -1;
  80e394:	00bfffc4 	movi	r2,-1
  }
}
  80e398:	e037883a 	mov	sp,fp
  80e39c:	dfc00117 	ldw	ra,4(sp)
  80e3a0:	df000017 	ldw	fp,0(sp)
  80e3a4:	dec00204 	addi	sp,sp,8
  80e3a8:	f800283a 	ret

0080e3ac <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80e3ac:	defffc04 	addi	sp,sp,-16
  80e3b0:	df000315 	stw	fp,12(sp)
  80e3b4:	df000304 	addi	fp,sp,12
  80e3b8:	e13fff15 	stw	r4,-4(fp)
  80e3bc:	e17ffe15 	stw	r5,-8(fp)
  80e3c0:	e1bffd15 	stw	r6,-12(fp)
  return len;
  80e3c4:	e0bffd17 	ldw	r2,-12(fp)
}
  80e3c8:	e037883a 	mov	sp,fp
  80e3cc:	df000017 	ldw	fp,0(sp)
  80e3d0:	dec00104 	addi	sp,sp,4
  80e3d4:	f800283a 	ret

0080e3d8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80e3d8:	defffd04 	addi	sp,sp,-12
  80e3dc:	df000215 	stw	fp,8(sp)
  80e3e0:	df000204 	addi	fp,sp,8
  80e3e4:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80e3e8:	0001883a 	nop
  80e3ec:	e0bffe17 	ldw	r2,-8(fp)
  80e3f0:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80e3f4:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80e3f8:	10000226 	beq	r2,zero,80e404 <_exit+0x2c>
    ALT_SIM_FAIL();
  80e3fc:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  80e400:	00000106 	br	80e408 <_exit+0x30>
    ALT_SIM_PASS();
  80e404:	002af0b0 	cmpltui	zero,zero,43970
}
  80e408:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80e40c:	003fff06 	br	80e40c <_exit+0x34>

0080e410 <alt_get_errno>:
{
  80e410:	defffe04 	addi	sp,sp,-8
  80e414:	dfc00115 	stw	ra,4(sp)
  80e418:	df000015 	stw	fp,0(sp)
  80e41c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e420:	d0a00e17 	ldw	r2,-32712(gp)
  80e424:	10000326 	beq	r2,zero,80e434 <alt_get_errno+0x24>
  80e428:	d0a00e17 	ldw	r2,-32712(gp)
  80e42c:	103ee83a 	callr	r2
  80e430:	00000106 	br	80e438 <alt_get_errno+0x28>
  80e434:	d0a71104 	addi	r2,gp,-25532
}
  80e438:	e037883a 	mov	sp,fp
  80e43c:	dfc00117 	ldw	ra,4(sp)
  80e440:	df000017 	ldw	fp,0(sp)
  80e444:	dec00204 	addi	sp,sp,8
  80e448:	f800283a 	ret

0080e44c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80e44c:	defffb04 	addi	sp,sp,-20
  80e450:	dfc00415 	stw	ra,16(sp)
  80e454:	df000315 	stw	fp,12(sp)
  80e458:	df000304 	addi	fp,sp,12
  80e45c:	e13ffe15 	stw	r4,-8(fp)
  80e460:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e464:	e0bffe17 	ldw	r2,-8(fp)
  80e468:	10000916 	blt	r2,zero,80e490 <fstat+0x44>
  80e46c:	e0fffe17 	ldw	r3,-8(fp)
  80e470:	1805883a 	mov	r2,r3
  80e474:	1085883a 	add	r2,r2,r2
  80e478:	10c5883a 	add	r2,r2,r3
  80e47c:	100490ba 	slli	r2,r2,2
  80e480:	00c02074 	movhi	r3,129
  80e484:	18c73804 	addi	r3,r3,7392
  80e488:	10c5883a 	add	r2,r2,r3
  80e48c:	00000106 	br	80e494 <fstat+0x48>
  80e490:	0005883a 	mov	r2,zero
  80e494:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e498:	e0bfff17 	ldw	r2,-4(fp)
  80e49c:	10001026 	beq	r2,zero,80e4e0 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80e4a0:	e0bfff17 	ldw	r2,-4(fp)
  80e4a4:	10800017 	ldw	r2,0(r2)
  80e4a8:	10800817 	ldw	r2,32(r2)
  80e4ac:	10000726 	beq	r2,zero,80e4cc <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
  80e4b0:	e0bfff17 	ldw	r2,-4(fp)
  80e4b4:	10800017 	ldw	r2,0(r2)
  80e4b8:	10800817 	ldw	r2,32(r2)
  80e4bc:	e17ffd17 	ldw	r5,-12(fp)
  80e4c0:	e13fff17 	ldw	r4,-4(fp)
  80e4c4:	103ee83a 	callr	r2
  80e4c8:	00000a06 	br	80e4f4 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80e4cc:	e0bffd17 	ldw	r2,-12(fp)
  80e4d0:	00c80004 	movi	r3,8192
  80e4d4:	10c00115 	stw	r3,4(r2)
      return 0;
  80e4d8:	0005883a 	mov	r2,zero
  80e4dc:	00000506 	br	80e4f4 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e4e0:	080e4100 	call	80e410 <alt_get_errno>
  80e4e4:	1007883a 	mov	r3,r2
  80e4e8:	00801444 	movi	r2,81
  80e4ec:	18800015 	stw	r2,0(r3)
    return -1;
  80e4f0:	00bfffc4 	movi	r2,-1
  }
}
  80e4f4:	e037883a 	mov	sp,fp
  80e4f8:	dfc00117 	ldw	ra,4(sp)
  80e4fc:	df000017 	ldw	fp,0(sp)
  80e500:	dec00204 	addi	sp,sp,8
  80e504:	f800283a 	ret

0080e508 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  80e508:	deffff04 	addi	sp,sp,-4
  80e50c:	df000015 	stw	fp,0(sp)
  80e510:	d839883a 	mov	fp,sp
  return 0;
  80e514:	0005883a 	mov	r2,zero
}
  80e518:	e037883a 	mov	sp,fp
  80e51c:	df000017 	ldw	fp,0(sp)
  80e520:	dec00104 	addi	sp,sp,4
  80e524:	f800283a 	ret

0080e528 <alt_get_errno>:
{
  80e528:	defffe04 	addi	sp,sp,-8
  80e52c:	dfc00115 	stw	ra,4(sp)
  80e530:	df000015 	stw	fp,0(sp)
  80e534:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e538:	d0a00e17 	ldw	r2,-32712(gp)
  80e53c:	10000326 	beq	r2,zero,80e54c <alt_get_errno+0x24>
  80e540:	d0a00e17 	ldw	r2,-32712(gp)
  80e544:	103ee83a 	callr	r2
  80e548:	00000106 	br	80e550 <alt_get_errno+0x28>
  80e54c:	d0a71104 	addi	r2,gp,-25532
}
  80e550:	e037883a 	mov	sp,fp
  80e554:	dfc00117 	ldw	ra,4(sp)
  80e558:	df000017 	ldw	fp,0(sp)
  80e55c:	dec00204 	addi	sp,sp,8
  80e560:	f800283a 	ret

0080e564 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80e564:	deffea04 	addi	sp,sp,-88
  80e568:	dfc01515 	stw	ra,84(sp)
  80e56c:	df001415 	stw	fp,80(sp)
  80e570:	df001404 	addi	fp,sp,80
  80e574:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e578:	e0bfec17 	ldw	r2,-80(fp)
  80e57c:	10000916 	blt	r2,zero,80e5a4 <isatty+0x40>
  80e580:	e0ffec17 	ldw	r3,-80(fp)
  80e584:	1805883a 	mov	r2,r3
  80e588:	1085883a 	add	r2,r2,r2
  80e58c:	10c5883a 	add	r2,r2,r3
  80e590:	100490ba 	slli	r2,r2,2
  80e594:	00c02074 	movhi	r3,129
  80e598:	18c73804 	addi	r3,r3,7392
  80e59c:	10c5883a 	add	r2,r2,r3
  80e5a0:	00000106 	br	80e5a8 <isatty+0x44>
  80e5a4:	0005883a 	mov	r2,zero
  80e5a8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e5ac:	e0bfff17 	ldw	r2,-4(fp)
  80e5b0:	10000e26 	beq	r2,zero,80e5ec <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80e5b4:	e0bfff17 	ldw	r2,-4(fp)
  80e5b8:	10800017 	ldw	r2,0(r2)
  80e5bc:	10800817 	ldw	r2,32(r2)
  80e5c0:	1000021e 	bne	r2,zero,80e5cc <isatty+0x68>
    {
      return 1;
  80e5c4:	00800044 	movi	r2,1
  80e5c8:	00000d06 	br	80e600 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80e5cc:	e0bfed04 	addi	r2,fp,-76
  80e5d0:	100b883a 	mov	r5,r2
  80e5d4:	e13fec17 	ldw	r4,-80(fp)
  80e5d8:	080e44c0 	call	80e44c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80e5dc:	e0bfee17 	ldw	r2,-72(fp)
  80e5e0:	10880020 	cmpeqi	r2,r2,8192
  80e5e4:	10803fcc 	andi	r2,r2,255
  80e5e8:	00000506 	br	80e600 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e5ec:	080e5280 	call	80e528 <alt_get_errno>
  80e5f0:	1007883a 	mov	r3,r2
  80e5f4:	00801444 	movi	r2,81
  80e5f8:	18800015 	stw	r2,0(r3)
    return 0;
  80e5fc:	0005883a 	mov	r2,zero
  }
}
  80e600:	e037883a 	mov	sp,fp
  80e604:	dfc00117 	ldw	ra,4(sp)
  80e608:	df000017 	ldw	fp,0(sp)
  80e60c:	dec00204 	addi	sp,sp,8
  80e610:	f800283a 	ret

0080e614 <alt_get_errno>:
{
  80e614:	defffe04 	addi	sp,sp,-8
  80e618:	dfc00115 	stw	ra,4(sp)
  80e61c:	df000015 	stw	fp,0(sp)
  80e620:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e624:	d0a00e17 	ldw	r2,-32712(gp)
  80e628:	10000326 	beq	r2,zero,80e638 <alt_get_errno+0x24>
  80e62c:	d0a00e17 	ldw	r2,-32712(gp)
  80e630:	103ee83a 	callr	r2
  80e634:	00000106 	br	80e63c <alt_get_errno+0x28>
  80e638:	d0a71104 	addi	r2,gp,-25532
}
  80e63c:	e037883a 	mov	sp,fp
  80e640:	dfc00117 	ldw	ra,4(sp)
  80e644:	df000017 	ldw	fp,0(sp)
  80e648:	dec00204 	addi	sp,sp,8
  80e64c:	f800283a 	ret

0080e650 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  80e650:	defffb04 	addi	sp,sp,-20
  80e654:	dfc00415 	stw	ra,16(sp)
  80e658:	df000315 	stw	fp,12(sp)
  80e65c:	df000304 	addi	fp,sp,12
  80e660:	e13ffe15 	stw	r4,-8(fp)
  80e664:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  80e668:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  80e66c:	e0bffe17 	ldw	r2,-8(fp)
  80e670:	00802e16 	blt	zero,r2,80e72c <kill+0xdc>
  80e674:	e0bffd17 	ldw	r2,-12(fp)
  80e678:	10800828 	cmpgeui	r2,r2,32
  80e67c:	1000281e 	bne	r2,zero,80e720 <kill+0xd0>
  80e680:	e0bffd17 	ldw	r2,-12(fp)
  80e684:	100690ba 	slli	r3,r2,2
  80e688:	00802074 	movhi	r2,129
  80e68c:	1885883a 	add	r2,r3,r2
  80e690:	10b9a617 	ldw	r2,-6504(r2)
  80e694:	1000683a 	jmp	r2
  80e698:	0080e740 	call	80e74 <__alt_mem_sdram-0x77f18c>
  80e69c:	0080e720 	cmpeqi	r2,zero,924
  80e6a0:	0080e720 	cmpeqi	r2,zero,924
  80e6a4:	0080e718 	cmpnei	r2,zero,924
  80e6a8:	0080e718 	cmpnei	r2,zero,924
  80e6ac:	0080e718 	cmpnei	r2,zero,924
  80e6b0:	0080e718 	cmpnei	r2,zero,924
  80e6b4:	0080e720 	cmpeqi	r2,zero,924
  80e6b8:	0080e718 	cmpnei	r2,zero,924
  80e6bc:	0080e718 	cmpnei	r2,zero,924
  80e6c0:	0080e718 	cmpnei	r2,zero,924
  80e6c4:	0080e718 	cmpnei	r2,zero,924
  80e6c8:	0080e718 	cmpnei	r2,zero,924
  80e6cc:	0080e718 	cmpnei	r2,zero,924
  80e6d0:	0080e718 	cmpnei	r2,zero,924
  80e6d4:	0080e718 	cmpnei	r2,zero,924
  80e6d8:	0080e740 	call	80e74 <__alt_mem_sdram-0x77f18c>
  80e6dc:	0080e720 	cmpeqi	r2,zero,924
  80e6e0:	0080e720 	cmpeqi	r2,zero,924
  80e6e4:	0080e720 	cmpeqi	r2,zero,924
  80e6e8:	0080e740 	call	80e74 <__alt_mem_sdram-0x77f18c>
  80e6ec:	0080e720 	cmpeqi	r2,zero,924
  80e6f0:	0080e720 	cmpeqi	r2,zero,924
  80e6f4:	0080e718 	cmpnei	r2,zero,924
  80e6f8:	0080e718 	cmpnei	r2,zero,924
  80e6fc:	0080e718 	cmpnei	r2,zero,924
  80e700:	0080e718 	cmpnei	r2,zero,924
  80e704:	0080e718 	cmpnei	r2,zero,924
  80e708:	0080e720 	cmpeqi	r2,zero,924
  80e70c:	0080e720 	cmpeqi	r2,zero,924
  80e710:	0080e718 	cmpnei	r2,zero,924
  80e714:	0080e718 	cmpnei	r2,zero,924
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  80e718:	0009883a 	mov	r4,zero
  80e71c:	080e3d80 	call	80e3d8 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  80e720:	00800584 	movi	r2,22
  80e724:	e0bfff15 	stw	r2,-4(fp)
  80e728:	00000606 	br	80e744 <kill+0xf4>
    }
  }

  else if (pid > 0)
  80e72c:	e0bffe17 	ldw	r2,-8(fp)
  80e730:	0080040e 	bge	zero,r2,80e744 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  80e734:	008000c4 	movi	r2,3
  80e738:	e0bfff15 	stw	r2,-4(fp)
  80e73c:	00000106 	br	80e744 <kill+0xf4>
      break;
  80e740:	0001883a 	nop
  }

  if (status)
  80e744:	e0bfff17 	ldw	r2,-4(fp)
  80e748:	10000626 	beq	r2,zero,80e764 <kill+0x114>
  {
    ALT_ERRNO = status;
  80e74c:	080e6140 	call	80e614 <alt_get_errno>
  80e750:	1007883a 	mov	r3,r2
  80e754:	e0bfff17 	ldw	r2,-4(fp)
  80e758:	18800015 	stw	r2,0(r3)
    return -1;
  80e75c:	00bfffc4 	movi	r2,-1
  80e760:	00000106 	br	80e768 <kill+0x118>
  }

  return 0;
  80e764:	0005883a 	mov	r2,zero
}
  80e768:	e037883a 	mov	sp,fp
  80e76c:	dfc00117 	ldw	ra,4(sp)
  80e770:	df000017 	ldw	fp,0(sp)
  80e774:	dec00204 	addi	sp,sp,8
  80e778:	f800283a 	ret

0080e77c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80e77c:	defffc04 	addi	sp,sp,-16
  80e780:	df000315 	stw	fp,12(sp)
  80e784:	df000304 	addi	fp,sp,12
  80e788:	e13fff15 	stw	r4,-4(fp)
  80e78c:	e17ffe15 	stw	r5,-8(fp)
  80e790:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  80e794:	e0fffe17 	ldw	r3,-8(fp)
  80e798:	e0bfff17 	ldw	r2,-4(fp)
  80e79c:	18800c26 	beq	r3,r2,80e7d0 <alt_load_section+0x54>
  {
    while( to != end )
  80e7a0:	00000806 	br	80e7c4 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80e7a4:	e0ffff17 	ldw	r3,-4(fp)
  80e7a8:	18800104 	addi	r2,r3,4
  80e7ac:	e0bfff15 	stw	r2,-4(fp)
  80e7b0:	e0bffe17 	ldw	r2,-8(fp)
  80e7b4:	11000104 	addi	r4,r2,4
  80e7b8:	e13ffe15 	stw	r4,-8(fp)
  80e7bc:	18c00017 	ldw	r3,0(r3)
  80e7c0:	10c00015 	stw	r3,0(r2)
    while( to != end )
  80e7c4:	e0fffe17 	ldw	r3,-8(fp)
  80e7c8:	e0bffd17 	ldw	r2,-12(fp)
  80e7cc:	18bff51e 	bne	r3,r2,80e7a4 <alt_load_section+0x28>
    }
  }
}
  80e7d0:	0001883a 	nop
  80e7d4:	e037883a 	mov	sp,fp
  80e7d8:	df000017 	ldw	fp,0(sp)
  80e7dc:	dec00104 	addi	sp,sp,4
  80e7e0:	f800283a 	ret

0080e7e4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80e7e4:	defffe04 	addi	sp,sp,-8
  80e7e8:	dfc00115 	stw	ra,4(sp)
  80e7ec:	df000015 	stw	fp,0(sp)
  80e7f0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80e7f4:	01802074 	movhi	r6,129
  80e7f8:	318bc304 	addi	r6,r6,12044
  80e7fc:	01402074 	movhi	r5,129
  80e800:	2944c804 	addi	r5,r5,4896
  80e804:	01002074 	movhi	r4,129
  80e808:	210bc304 	addi	r4,r4,12044
  80e80c:	080e77c0 	call	80e77c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80e810:	01802034 	movhi	r6,128
  80e814:	31808e04 	addi	r6,r6,568
  80e818:	01402034 	movhi	r5,128
  80e81c:	29400804 	addi	r5,r5,32
  80e820:	01002034 	movhi	r4,128
  80e824:	21000804 	addi	r4,r4,32
  80e828:	080e77c0 	call	80e77c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80e82c:	01802074 	movhi	r6,129
  80e830:	3184c804 	addi	r6,r6,4896
  80e834:	01402074 	movhi	r5,129
  80e838:	29431a04 	addi	r5,r5,3176
  80e83c:	01002074 	movhi	r4,129
  80e840:	21031a04 	addi	r4,r4,3176
  80e844:	080e77c0 	call	80e77c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80e848:	080fdd00 	call	80fdd0 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80e84c:	080ffc80 	call	80ffc8 <alt_icache_flush_all>
}
  80e850:	0001883a 	nop
  80e854:	e037883a 	mov	sp,fp
  80e858:	dfc00117 	ldw	ra,4(sp)
  80e85c:	df000017 	ldw	fp,0(sp)
  80e860:	dec00204 	addi	sp,sp,8
  80e864:	f800283a 	ret

0080e868 <alt_get_errno>:
{
  80e868:	defffe04 	addi	sp,sp,-8
  80e86c:	dfc00115 	stw	ra,4(sp)
  80e870:	df000015 	stw	fp,0(sp)
  80e874:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e878:	d0a00e17 	ldw	r2,-32712(gp)
  80e87c:	10000326 	beq	r2,zero,80e88c <alt_get_errno+0x24>
  80e880:	d0a00e17 	ldw	r2,-32712(gp)
  80e884:	103ee83a 	callr	r2
  80e888:	00000106 	br	80e890 <alt_get_errno+0x28>
  80e88c:	d0a71104 	addi	r2,gp,-25532
}
  80e890:	e037883a 	mov	sp,fp
  80e894:	dfc00117 	ldw	ra,4(sp)
  80e898:	df000017 	ldw	fp,0(sp)
  80e89c:	dec00204 	addi	sp,sp,8
  80e8a0:	f800283a 	ret

0080e8a4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80e8a4:	defff904 	addi	sp,sp,-28
  80e8a8:	dfc00615 	stw	ra,24(sp)
  80e8ac:	df000515 	stw	fp,20(sp)
  80e8b0:	df000504 	addi	fp,sp,20
  80e8b4:	e13ffd15 	stw	r4,-12(fp)
  80e8b8:	e17ffc15 	stw	r5,-16(fp)
  80e8bc:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80e8c0:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e8c4:	e0bffd17 	ldw	r2,-12(fp)
  80e8c8:	10000916 	blt	r2,zero,80e8f0 <lseek+0x4c>
  80e8cc:	e0fffd17 	ldw	r3,-12(fp)
  80e8d0:	1805883a 	mov	r2,r3
  80e8d4:	1085883a 	add	r2,r2,r2
  80e8d8:	10c5883a 	add	r2,r2,r3
  80e8dc:	100490ba 	slli	r2,r2,2
  80e8e0:	00c02074 	movhi	r3,129
  80e8e4:	18c73804 	addi	r3,r3,7392
  80e8e8:	10c5883a 	add	r2,r2,r3
  80e8ec:	00000106 	br	80e8f4 <lseek+0x50>
  80e8f0:	0005883a 	mov	r2,zero
  80e8f4:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  80e8f8:	e0bffe17 	ldw	r2,-8(fp)
  80e8fc:	10001026 	beq	r2,zero,80e940 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80e900:	e0bffe17 	ldw	r2,-8(fp)
  80e904:	10800017 	ldw	r2,0(r2)
  80e908:	10800717 	ldw	r2,28(r2)
  80e90c:	10000926 	beq	r2,zero,80e934 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80e910:	e0bffe17 	ldw	r2,-8(fp)
  80e914:	10800017 	ldw	r2,0(r2)
  80e918:	10800717 	ldw	r2,28(r2)
  80e91c:	e1bffb17 	ldw	r6,-20(fp)
  80e920:	e17ffc17 	ldw	r5,-16(fp)
  80e924:	e13ffe17 	ldw	r4,-8(fp)
  80e928:	103ee83a 	callr	r2
  80e92c:	e0bfff15 	stw	r2,-4(fp)
  80e930:	00000506 	br	80e948 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80e934:	00bfde84 	movi	r2,-134
  80e938:	e0bfff15 	stw	r2,-4(fp)
  80e93c:	00000206 	br	80e948 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80e940:	00bfebc4 	movi	r2,-81
  80e944:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  80e948:	e0bfff17 	ldw	r2,-4(fp)
  80e94c:	1000070e 	bge	r2,zero,80e96c <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
  80e950:	080e8680 	call	80e868 <alt_get_errno>
  80e954:	1007883a 	mov	r3,r2
  80e958:	e0bfff17 	ldw	r2,-4(fp)
  80e95c:	0085c83a 	sub	r2,zero,r2
  80e960:	18800015 	stw	r2,0(r3)
    rc = -1;
  80e964:	00bfffc4 	movi	r2,-1
  80e968:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  80e96c:	e0bfff17 	ldw	r2,-4(fp)
}
  80e970:	e037883a 	mov	sp,fp
  80e974:	dfc00117 	ldw	ra,4(sp)
  80e978:	df000017 	ldw	fp,0(sp)
  80e97c:	dec00204 	addi	sp,sp,8
  80e980:	f800283a 	ret

0080e984 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80e984:	defffd04 	addi	sp,sp,-12
  80e988:	dfc00215 	stw	ra,8(sp)
  80e98c:	df000115 	stw	fp,4(sp)
  80e990:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80e994:	0009883a 	mov	r4,zero
  80e998:	080f0880 	call	80f088 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80e99c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80e9a0:	080f0c40 	call	80f0c4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80e9a4:	01802074 	movhi	r6,129
  80e9a8:	3184c004 	addi	r6,r6,4864
  80e9ac:	01402074 	movhi	r5,129
  80e9b0:	2944c004 	addi	r5,r5,4864
  80e9b4:	01002074 	movhi	r4,129
  80e9b8:	2104c004 	addi	r4,r4,4864
  80e9bc:	08103680 	call	810368 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80e9c0:	080ff000 	call	80ff00 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80e9c4:	01002074 	movhi	r4,129
  80e9c8:	213fd904 	addi	r4,r4,-156
  80e9cc:	08109f80 	call	8109f8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80e9d0:	d0a71317 	ldw	r2,-25524(gp)
  80e9d4:	d0e71417 	ldw	r3,-25520(gp)
  80e9d8:	d1271517 	ldw	r4,-25516(gp)
  80e9dc:	200d883a 	mov	r6,r4
  80e9e0:	180b883a 	mov	r5,r3
  80e9e4:	1009883a 	mov	r4,r2
  80e9e8:	08004b40 	call	8004b4 <main>
  80e9ec:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80e9f0:	01000044 	movi	r4,1
  80e9f4:	080e2d00 	call	80e2d0 <close>
  exit (result);
  80e9f8:	e13fff17 	ldw	r4,-4(fp)
  80e9fc:	0810a0c0 	call	810a0c <exit>

0080ea00 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80ea00:	defffe04 	addi	sp,sp,-8
  80ea04:	df000115 	stw	fp,4(sp)
  80ea08:	df000104 	addi	fp,sp,4
  80ea0c:	e13fff15 	stw	r4,-4(fp)
}
  80ea10:	0001883a 	nop
  80ea14:	e037883a 	mov	sp,fp
  80ea18:	df000017 	ldw	fp,0(sp)
  80ea1c:	dec00104 	addi	sp,sp,4
  80ea20:	f800283a 	ret

0080ea24 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80ea24:	defffe04 	addi	sp,sp,-8
  80ea28:	df000115 	stw	fp,4(sp)
  80ea2c:	df000104 	addi	fp,sp,4
  80ea30:	e13fff15 	stw	r4,-4(fp)
}
  80ea34:	0001883a 	nop
  80ea38:	e037883a 	mov	sp,fp
  80ea3c:	df000017 	ldw	fp,0(sp)
  80ea40:	dec00104 	addi	sp,sp,4
  80ea44:	f800283a 	ret

0080ea48 <alt_get_errno>:
{
  80ea48:	defffe04 	addi	sp,sp,-8
  80ea4c:	dfc00115 	stw	ra,4(sp)
  80ea50:	df000015 	stw	fp,0(sp)
  80ea54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ea58:	d0a00e17 	ldw	r2,-32712(gp)
  80ea5c:	10000326 	beq	r2,zero,80ea6c <alt_get_errno+0x24>
  80ea60:	d0a00e17 	ldw	r2,-32712(gp)
  80ea64:	103ee83a 	callr	r2
  80ea68:	00000106 	br	80ea70 <alt_get_errno+0x28>
  80ea6c:	d0a71104 	addi	r2,gp,-25532
}
  80ea70:	e037883a 	mov	sp,fp
  80ea74:	dfc00117 	ldw	ra,4(sp)
  80ea78:	df000017 	ldw	fp,0(sp)
  80ea7c:	dec00204 	addi	sp,sp,8
  80ea80:	f800283a 	ret

0080ea84 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80ea84:	defff904 	addi	sp,sp,-28
  80ea88:	dfc00615 	stw	ra,24(sp)
  80ea8c:	df000515 	stw	fp,20(sp)
  80ea90:	df000504 	addi	fp,sp,20
  80ea94:	e13ffd15 	stw	r4,-12(fp)
  80ea98:	e17ffc15 	stw	r5,-16(fp)
  80ea9c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80eaa0:	e0bffd17 	ldw	r2,-12(fp)
  80eaa4:	10000916 	blt	r2,zero,80eacc <read+0x48>
  80eaa8:	e0fffd17 	ldw	r3,-12(fp)
  80eaac:	1805883a 	mov	r2,r3
  80eab0:	1085883a 	add	r2,r2,r2
  80eab4:	10c5883a 	add	r2,r2,r3
  80eab8:	100490ba 	slli	r2,r2,2
  80eabc:	00c02074 	movhi	r3,129
  80eac0:	18c73804 	addi	r3,r3,7392
  80eac4:	10c5883a 	add	r2,r2,r3
  80eac8:	00000106 	br	80ead0 <read+0x4c>
  80eacc:	0005883a 	mov	r2,zero
  80ead0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80ead4:	e0bfff17 	ldw	r2,-4(fp)
  80ead8:	10002226 	beq	r2,zero,80eb64 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80eadc:	e0bfff17 	ldw	r2,-4(fp)
  80eae0:	10800217 	ldw	r2,8(r2)
  80eae4:	108000cc 	andi	r2,r2,3
  80eae8:	10800060 	cmpeqi	r2,r2,1
  80eaec:	1000181e 	bne	r2,zero,80eb50 <read+0xcc>
        (fd->dev->read))
  80eaf0:	e0bfff17 	ldw	r2,-4(fp)
  80eaf4:	10800017 	ldw	r2,0(r2)
  80eaf8:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80eafc:	10001426 	beq	r2,zero,80eb50 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80eb00:	e0bfff17 	ldw	r2,-4(fp)
  80eb04:	10800017 	ldw	r2,0(r2)
  80eb08:	10800517 	ldw	r2,20(r2)
  80eb0c:	e0fffb17 	ldw	r3,-20(fp)
  80eb10:	180d883a 	mov	r6,r3
  80eb14:	e17ffc17 	ldw	r5,-16(fp)
  80eb18:	e13fff17 	ldw	r4,-4(fp)
  80eb1c:	103ee83a 	callr	r2
  80eb20:	e0bffe15 	stw	r2,-8(fp)
  80eb24:	e0bffe17 	ldw	r2,-8(fp)
  80eb28:	1000070e 	bge	r2,zero,80eb48 <read+0xc4>
        {
          ALT_ERRNO = -rval;
  80eb2c:	080ea480 	call	80ea48 <alt_get_errno>
  80eb30:	1007883a 	mov	r3,r2
  80eb34:	e0bffe17 	ldw	r2,-8(fp)
  80eb38:	0085c83a 	sub	r2,zero,r2
  80eb3c:	18800015 	stw	r2,0(r3)
          return -1;
  80eb40:	00bfffc4 	movi	r2,-1
  80eb44:	00000c06 	br	80eb78 <read+0xf4>
        }
        return rval;
  80eb48:	e0bffe17 	ldw	r2,-8(fp)
  80eb4c:	00000a06 	br	80eb78 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80eb50:	080ea480 	call	80ea48 <alt_get_errno>
  80eb54:	1007883a 	mov	r3,r2
  80eb58:	00800344 	movi	r2,13
  80eb5c:	18800015 	stw	r2,0(r3)
  80eb60:	00000406 	br	80eb74 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80eb64:	080ea480 	call	80ea48 <alt_get_errno>
  80eb68:	1007883a 	mov	r3,r2
  80eb6c:	00801444 	movi	r2,81
  80eb70:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80eb74:	00bfffc4 	movi	r2,-1
}
  80eb78:	e037883a 	mov	sp,fp
  80eb7c:	dfc00117 	ldw	ra,4(sp)
  80eb80:	df000017 	ldw	fp,0(sp)
  80eb84:	dec00204 	addi	sp,sp,8
  80eb88:	f800283a 	ret

0080eb8c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80eb8c:	defffe04 	addi	sp,sp,-8
  80eb90:	df000115 	stw	fp,4(sp)
  80eb94:	df000104 	addi	fp,sp,4
  80eb98:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80eb9c:	e0bfff17 	ldw	r2,-4(fp)
  80eba0:	108000d0 	cmplti	r2,r2,3
  80eba4:	1000101e 	bne	r2,zero,80ebe8 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
  80eba8:	e0ffff17 	ldw	r3,-4(fp)
  80ebac:	1805883a 	mov	r2,r3
  80ebb0:	1085883a 	add	r2,r2,r2
  80ebb4:	10c5883a 	add	r2,r2,r3
  80ebb8:	100490ba 	slli	r2,r2,2
  80ebbc:	00c02074 	movhi	r3,129
  80ebc0:	10c7883a 	add	r3,r2,r3
  80ebc4:	18073a15 	stw	zero,7400(r3)
    alt_fd_list[fd].dev      = 0;
  80ebc8:	e0ffff17 	ldw	r3,-4(fp)
  80ebcc:	1805883a 	mov	r2,r3
  80ebd0:	1085883a 	add	r2,r2,r2
  80ebd4:	10c5883a 	add	r2,r2,r3
  80ebd8:	100490ba 	slli	r2,r2,2
  80ebdc:	00c02074 	movhi	r3,129
  80ebe0:	10c7883a 	add	r3,r2,r3
  80ebe4:	18073815 	stw	zero,7392(r3)
  }
}
  80ebe8:	0001883a 	nop
  80ebec:	e037883a 	mov	sp,fp
  80ebf0:	df000017 	ldw	fp,0(sp)
  80ebf4:	dec00104 	addi	sp,sp,4
  80ebf8:	f800283a 	ret

0080ebfc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80ebfc:	defff904 	addi	sp,sp,-28
  80ec00:	df000615 	stw	fp,24(sp)
  80ec04:	df000604 	addi	fp,sp,24
  80ec08:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  80ec0c:	0005303a 	rdctl	r2,status
  80ec10:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ec14:	e0fffd17 	ldw	r3,-12(fp)
  80ec18:	00bfff84 	movi	r2,-2
  80ec1c:	1884703a 	and	r2,r3,r2
  80ec20:	1001703a 	wrctl	status,r2
  return context;
  80ec24:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80ec28:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80ec2c:	d0a00f17 	ldw	r2,-32708(gp)
  80ec30:	10c000c4 	addi	r3,r2,3
  80ec34:	00bfff04 	movi	r2,-4
  80ec38:	1884703a 	and	r2,r3,r2
  80ec3c:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80ec40:	d0e00f17 	ldw	r3,-32708(gp)
  80ec44:	e0bffa17 	ldw	r2,-24(fp)
  80ec48:	1887883a 	add	r3,r3,r2
  80ec4c:	00804034 	movhi	r2,256
  80ec50:	10800004 	addi	r2,r2,0
  80ec54:	10c0072e 	bgeu	r2,r3,80ec74 <sbrk+0x78>
  80ec58:	e0bfff17 	ldw	r2,-4(fp)
  80ec5c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80ec60:	e0bffc17 	ldw	r2,-16(fp)
  80ec64:	1001703a 	wrctl	status,r2
}
  80ec68:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80ec6c:	00bfffc4 	movi	r2,-1
  80ec70:	00000c06 	br	80eca4 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80ec74:	d0a00f17 	ldw	r2,-32708(gp)
  80ec78:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  80ec7c:	d0e00f17 	ldw	r3,-32708(gp)
  80ec80:	e0bffa17 	ldw	r2,-24(fp)
  80ec84:	1885883a 	add	r2,r3,r2
  80ec88:	d0a00f15 	stw	r2,-32708(gp)
  80ec8c:	e0bfff17 	ldw	r2,-4(fp)
  80ec90:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80ec94:	e0bffb17 	ldw	r2,-20(fp)
  80ec98:	1001703a 	wrctl	status,r2
}
  80ec9c:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80eca0:	e0bffe17 	ldw	r2,-8(fp)
} 
  80eca4:	e037883a 	mov	sp,fp
  80eca8:	df000017 	ldw	fp,0(sp)
  80ecac:	dec00104 	addi	sp,sp,4
  80ecb0:	f800283a 	ret

0080ecb4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80ecb4:	defffa04 	addi	sp,sp,-24
  80ecb8:	df000515 	stw	fp,20(sp)
  80ecbc:	df000504 	addi	fp,sp,20
  80ecc0:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  80ecc4:	0005303a 	rdctl	r2,status
  80ecc8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eccc:	e0fffc17 	ldw	r3,-16(fp)
  80ecd0:	00bfff84 	movi	r2,-2
  80ecd4:	1884703a 	and	r2,r3,r2
  80ecd8:	1001703a 	wrctl	status,r2
  return context;
  80ecdc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80ece0:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  80ece4:	e0bffb17 	ldw	r2,-20(fp)
  80ece8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80ecec:	e0bffd17 	ldw	r2,-12(fp)
  80ecf0:	10800017 	ldw	r2,0(r2)
  80ecf4:	e0fffd17 	ldw	r3,-12(fp)
  80ecf8:	18c00117 	ldw	r3,4(r3)
  80ecfc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80ed00:	e0bffd17 	ldw	r2,-12(fp)
  80ed04:	10800117 	ldw	r2,4(r2)
  80ed08:	e0fffd17 	ldw	r3,-12(fp)
  80ed0c:	18c00017 	ldw	r3,0(r3)
  80ed10:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80ed14:	e0bffd17 	ldw	r2,-12(fp)
  80ed18:	e0fffd17 	ldw	r3,-12(fp)
  80ed1c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80ed20:	e0bffd17 	ldw	r2,-12(fp)
  80ed24:	e0fffd17 	ldw	r3,-12(fp)
  80ed28:	10c00015 	stw	r3,0(r2)
} 
  80ed2c:	0001883a 	nop
  80ed30:	e0bfff17 	ldw	r2,-4(fp)
  80ed34:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80ed38:	e0bffe17 	ldw	r2,-8(fp)
  80ed3c:	1001703a 	wrctl	status,r2
}
  80ed40:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  80ed44:	0001883a 	nop
  80ed48:	e037883a 	mov	sp,fp
  80ed4c:	df000017 	ldw	fp,0(sp)
  80ed50:	dec00104 	addi	sp,sp,4
  80ed54:	f800283a 	ret

0080ed58 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80ed58:	defffb04 	addi	sp,sp,-20
  80ed5c:	dfc00415 	stw	ra,16(sp)
  80ed60:	df000315 	stw	fp,12(sp)
  80ed64:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80ed68:	d0a01017 	ldw	r2,-32704(gp)
  80ed6c:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80ed70:	d0a71717 	ldw	r2,-25508(gp)
  80ed74:	10800044 	addi	r2,r2,1
  80ed78:	d0a71715 	stw	r2,-25508(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80ed7c:	00002e06 	br	80ee38 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80ed80:	e0bfff17 	ldw	r2,-4(fp)
  80ed84:	10800017 	ldw	r2,0(r2)
  80ed88:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80ed8c:	e0bfff17 	ldw	r2,-4(fp)
  80ed90:	10800403 	ldbu	r2,16(r2)
  80ed94:	10803fcc 	andi	r2,r2,255
  80ed98:	10000426 	beq	r2,zero,80edac <alt_tick+0x54>
  80ed9c:	d0a71717 	ldw	r2,-25508(gp)
  80eda0:	1000021e 	bne	r2,zero,80edac <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80eda4:	e0bfff17 	ldw	r2,-4(fp)
  80eda8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80edac:	e0bfff17 	ldw	r2,-4(fp)
  80edb0:	10800217 	ldw	r2,8(r2)
  80edb4:	d0e71717 	ldw	r3,-25508(gp)
  80edb8:	18801d36 	bltu	r3,r2,80ee30 <alt_tick+0xd8>
  80edbc:	e0bfff17 	ldw	r2,-4(fp)
  80edc0:	10800403 	ldbu	r2,16(r2)
  80edc4:	10803fcc 	andi	r2,r2,255
  80edc8:	1000191e 	bne	r2,zero,80ee30 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80edcc:	e0bfff17 	ldw	r2,-4(fp)
  80edd0:	10800317 	ldw	r2,12(r2)
  80edd4:	e0ffff17 	ldw	r3,-4(fp)
  80edd8:	18c00517 	ldw	r3,20(r3)
  80eddc:	1809883a 	mov	r4,r3
  80ede0:	103ee83a 	callr	r2
  80ede4:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80ede8:	e0bffd17 	ldw	r2,-12(fp)
  80edec:	1000031e 	bne	r2,zero,80edfc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80edf0:	e13fff17 	ldw	r4,-4(fp)
  80edf4:	080ecb40 	call	80ecb4 <alt_alarm_stop>
  80edf8:	00000d06 	br	80ee30 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80edfc:	e0bfff17 	ldw	r2,-4(fp)
  80ee00:	10c00217 	ldw	r3,8(r2)
  80ee04:	e0bffd17 	ldw	r2,-12(fp)
  80ee08:	1887883a 	add	r3,r3,r2
  80ee0c:	e0bfff17 	ldw	r2,-4(fp)
  80ee10:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80ee14:	e0bfff17 	ldw	r2,-4(fp)
  80ee18:	10c00217 	ldw	r3,8(r2)
  80ee1c:	d0a71717 	ldw	r2,-25508(gp)
  80ee20:	1880032e 	bgeu	r3,r2,80ee30 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80ee24:	e0bfff17 	ldw	r2,-4(fp)
  80ee28:	00c00044 	movi	r3,1
  80ee2c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80ee30:	e0bffe17 	ldw	r2,-8(fp)
  80ee34:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  80ee38:	e0ffff17 	ldw	r3,-4(fp)
  80ee3c:	d0a01004 	addi	r2,gp,-32704
  80ee40:	18bfcf1e 	bne	r3,r2,80ed80 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80ee44:	0001883a 	nop
}
  80ee48:	0001883a 	nop
  80ee4c:	e037883a 	mov	sp,fp
  80ee50:	dfc00117 	ldw	ra,4(sp)
  80ee54:	df000017 	ldw	fp,0(sp)
  80ee58:	dec00204 	addi	sp,sp,8
  80ee5c:	f800283a 	ret

0080ee60 <alt_get_errno>:
{
  80ee60:	defffe04 	addi	sp,sp,-8
  80ee64:	dfc00115 	stw	ra,4(sp)
  80ee68:	df000015 	stw	fp,0(sp)
  80ee6c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ee70:	d0a00e17 	ldw	r2,-32712(gp)
  80ee74:	10000326 	beq	r2,zero,80ee84 <alt_get_errno+0x24>
  80ee78:	d0a00e17 	ldw	r2,-32712(gp)
  80ee7c:	103ee83a 	callr	r2
  80ee80:	00000106 	br	80ee88 <alt_get_errno+0x28>
  80ee84:	d0a71104 	addi	r2,gp,-25532
}
  80ee88:	e037883a 	mov	sp,fp
  80ee8c:	dfc00117 	ldw	ra,4(sp)
  80ee90:	df000017 	ldw	fp,0(sp)
  80ee94:	dec00204 	addi	sp,sp,8
  80ee98:	f800283a 	ret

0080ee9c <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80ee9c:	defffc04 	addi	sp,sp,-16
  80eea0:	dfc00315 	stw	ra,12(sp)
  80eea4:	df000215 	stw	fp,8(sp)
  80eea8:	df000204 	addi	fp,sp,8
  80eeac:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80eeb0:	d0a71717 	ldw	r2,-25508(gp)
  clock_t ticks = alt_nticks(); 
  80eeb4:	e0bfff15 	stw	r2,-4(fp)
  return _alt_tick_rate;
  80eeb8:	d0a71617 	ldw	r2,-25512(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80eebc:	1000061e 	bne	r2,zero,80eed8 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80eec0:	080ee600 	call	80ee60 <alt_get_errno>
  80eec4:	1007883a 	mov	r3,r2
  80eec8:	00801604 	movi	r2,88
  80eecc:	18800015 	stw	r2,0(r3)
    return 0;
  80eed0:	0005883a 	mov	r2,zero
  80eed4:	00000a06 	br	80ef00 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80eed8:	e0bffe17 	ldw	r2,-8(fp)
  80eedc:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80eee0:	e0bffe17 	ldw	r2,-8(fp)
  80eee4:	e0ffff17 	ldw	r3,-4(fp)
  80eee8:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  80eeec:	e0bffe17 	ldw	r2,-8(fp)
  80eef0:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80eef4:	e0bffe17 	ldw	r2,-8(fp)
  80eef8:	10000315 	stw	zero,12(r2)

  return ticks;
  80eefc:	e0bfff17 	ldw	r2,-4(fp)
}
  80ef00:	e037883a 	mov	sp,fp
  80ef04:	dfc00117 	ldw	ra,4(sp)
  80ef08:	df000017 	ldw	fp,0(sp)
  80ef0c:	dec00204 	addi	sp,sp,8
  80ef10:	f800283a 	ret

0080ef14 <alt_get_errno>:
{
  80ef14:	defffe04 	addi	sp,sp,-8
  80ef18:	dfc00115 	stw	ra,4(sp)
  80ef1c:	df000015 	stw	fp,0(sp)
  80ef20:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ef24:	d0a00e17 	ldw	r2,-32712(gp)
  80ef28:	10000326 	beq	r2,zero,80ef38 <alt_get_errno+0x24>
  80ef2c:	d0a00e17 	ldw	r2,-32712(gp)
  80ef30:	103ee83a 	callr	r2
  80ef34:	00000106 	br	80ef3c <alt_get_errno+0x28>
  80ef38:	d0a71104 	addi	r2,gp,-25532
}
  80ef3c:	e037883a 	mov	sp,fp
  80ef40:	dfc00117 	ldw	ra,4(sp)
  80ef44:	df000017 	ldw	fp,0(sp)
  80ef48:	dec00204 	addi	sp,sp,8
  80ef4c:	f800283a 	ret

0080ef50 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80ef50:	defff904 	addi	sp,sp,-28
  80ef54:	dfc00615 	stw	ra,24(sp)
  80ef58:	df000515 	stw	fp,20(sp)
  80ef5c:	df000504 	addi	fp,sp,20
  80ef60:	e13ffd15 	stw	r4,-12(fp)
  80ef64:	e17ffc15 	stw	r5,-16(fp)
  80ef68:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ef6c:	e0bffd17 	ldw	r2,-12(fp)
  80ef70:	10000916 	blt	r2,zero,80ef98 <write+0x48>
  80ef74:	e0fffd17 	ldw	r3,-12(fp)
  80ef78:	1805883a 	mov	r2,r3
  80ef7c:	1085883a 	add	r2,r2,r2
  80ef80:	10c5883a 	add	r2,r2,r3
  80ef84:	100490ba 	slli	r2,r2,2
  80ef88:	00c02074 	movhi	r3,129
  80ef8c:	18c73804 	addi	r3,r3,7392
  80ef90:	10c5883a 	add	r2,r2,r3
  80ef94:	00000106 	br	80ef9c <write+0x4c>
  80ef98:	0005883a 	mov	r2,zero
  80ef9c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80efa0:	e0bfff17 	ldw	r2,-4(fp)
  80efa4:	10002126 	beq	r2,zero,80f02c <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80efa8:	e0bfff17 	ldw	r2,-4(fp)
  80efac:	10800217 	ldw	r2,8(r2)
  80efb0:	108000cc 	andi	r2,r2,3
  80efb4:	10001826 	beq	r2,zero,80f018 <write+0xc8>
  80efb8:	e0bfff17 	ldw	r2,-4(fp)
  80efbc:	10800017 	ldw	r2,0(r2)
  80efc0:	10800617 	ldw	r2,24(r2)
  80efc4:	10001426 	beq	r2,zero,80f018 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80efc8:	e0bfff17 	ldw	r2,-4(fp)
  80efcc:	10800017 	ldw	r2,0(r2)
  80efd0:	10800617 	ldw	r2,24(r2)
  80efd4:	e0fffb17 	ldw	r3,-20(fp)
  80efd8:	180d883a 	mov	r6,r3
  80efdc:	e17ffc17 	ldw	r5,-16(fp)
  80efe0:	e13fff17 	ldw	r4,-4(fp)
  80efe4:	103ee83a 	callr	r2
  80efe8:	e0bffe15 	stw	r2,-8(fp)
  80efec:	e0bffe17 	ldw	r2,-8(fp)
  80eff0:	1000070e 	bge	r2,zero,80f010 <write+0xc0>
      {
        ALT_ERRNO = -rval;
  80eff4:	080ef140 	call	80ef14 <alt_get_errno>
  80eff8:	1007883a 	mov	r3,r2
  80effc:	e0bffe17 	ldw	r2,-8(fp)
  80f000:	0085c83a 	sub	r2,zero,r2
  80f004:	18800015 	stw	r2,0(r3)
        return -1;
  80f008:	00bfffc4 	movi	r2,-1
  80f00c:	00000c06 	br	80f040 <write+0xf0>
      }
      return rval;
  80f010:	e0bffe17 	ldw	r2,-8(fp)
  80f014:	00000a06 	br	80f040 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80f018:	080ef140 	call	80ef14 <alt_get_errno>
  80f01c:	1007883a 	mov	r3,r2
  80f020:	00800344 	movi	r2,13
  80f024:	18800015 	stw	r2,0(r3)
  80f028:	00000406 	br	80f03c <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80f02c:	080ef140 	call	80ef14 <alt_get_errno>
  80f030:	1007883a 	mov	r3,r2
  80f034:	00801444 	movi	r2,81
  80f038:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80f03c:	00bfffc4 	movi	r2,-1
}
  80f040:	e037883a 	mov	sp,fp
  80f044:	dfc00117 	ldw	ra,4(sp)
  80f048:	df000017 	ldw	fp,0(sp)
  80f04c:	dec00204 	addi	sp,sp,8
  80f050:	f800283a 	ret

0080f054 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80f054:	defffd04 	addi	sp,sp,-12
  80f058:	dfc00215 	stw	ra,8(sp)
  80f05c:	df000115 	stw	fp,4(sp)
  80f060:	df000104 	addi	fp,sp,4
  80f064:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80f068:	d1600b04 	addi	r5,gp,-32724
  80f06c:	e13fff17 	ldw	r4,-4(fp)
  80f070:	080fe580 	call	80fe58 <alt_dev_llist_insert>
}
  80f074:	e037883a 	mov	sp,fp
  80f078:	dfc00117 	ldw	ra,4(sp)
  80f07c:	df000017 	ldw	fp,0(sp)
  80f080:	dec00204 	addi	sp,sp,8
  80f084:	f800283a 	ret

0080f088 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80f088:	defffd04 	addi	sp,sp,-12
  80f08c:	dfc00215 	stw	ra,8(sp)
  80f090:	df000115 	stw	fp,4(sp)
  80f094:	df000104 	addi	fp,sp,4
  80f098:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80f09c:	081065c0 	call	81065c <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80f0a0:	00800044 	movi	r2,1
  80f0a4:	1001703a 	wrctl	status,r2
}
  80f0a8:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  80f0ac:	0001883a 	nop
  80f0b0:	e037883a 	mov	sp,fp
  80f0b4:	dfc00117 	ldw	ra,4(sp)
  80f0b8:	df000017 	ldw	fp,0(sp)
  80f0bc:	dec00204 	addi	sp,sp,8
  80f0c0:	f800283a 	ret

0080f0c4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80f0c4:	defffe04 	addi	sp,sp,-8
  80f0c8:	dfc00115 	stw	ra,4(sp)
  80f0cc:	df000015 	stw	fp,0(sp)
  80f0d0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80f0d4:	01c0fa04 	movi	r7,1000
  80f0d8:	01800044 	movi	r6,1
  80f0dc:	000b883a 	mov	r5,zero
  80f0e0:	01004034 	movhi	r4,256
  80f0e4:	21040004 	addi	r4,r4,4096
  80f0e8:	080fc180 	call	80fc18 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80f0ec:	01800404 	movi	r6,16
  80f0f0:	000b883a 	mov	r5,zero
  80f0f4:	01002074 	movhi	r4,129
  80f0f8:	2107a204 	addi	r4,r4,7816
  80f0fc:	080f28c0 	call	80f28c <altera_avalon_jtag_uart_init>
  80f100:	01002074 	movhi	r4,129
  80f104:	21079804 	addi	r4,r4,7776
  80f108:	080f0540 	call	80f054 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80f10c:	0001883a 	nop
}
  80f110:	0001883a 	nop
  80f114:	e037883a 	mov	sp,fp
  80f118:	dfc00117 	ldw	ra,4(sp)
  80f11c:	df000017 	ldw	fp,0(sp)
  80f120:	dec00204 	addi	sp,sp,8
  80f124:	f800283a 	ret

0080f128 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80f128:	defffa04 	addi	sp,sp,-24
  80f12c:	dfc00515 	stw	ra,20(sp)
  80f130:	df000415 	stw	fp,16(sp)
  80f134:	df000404 	addi	fp,sp,16
  80f138:	e13ffe15 	stw	r4,-8(fp)
  80f13c:	e17ffd15 	stw	r5,-12(fp)
  80f140:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f144:	e0bffe17 	ldw	r2,-8(fp)
  80f148:	10800017 	ldw	r2,0(r2)
  80f14c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80f150:	e0bfff17 	ldw	r2,-4(fp)
  80f154:	10c00a04 	addi	r3,r2,40
  80f158:	e0bffe17 	ldw	r2,-8(fp)
  80f15c:	10800217 	ldw	r2,8(r2)
  80f160:	100f883a 	mov	r7,r2
  80f164:	e1bffc17 	ldw	r6,-16(fp)
  80f168:	e17ffd17 	ldw	r5,-12(fp)
  80f16c:	1809883a 	mov	r4,r3
  80f170:	080f7540 	call	80f754 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80f174:	e037883a 	mov	sp,fp
  80f178:	dfc00117 	ldw	ra,4(sp)
  80f17c:	df000017 	ldw	fp,0(sp)
  80f180:	dec00204 	addi	sp,sp,8
  80f184:	f800283a 	ret

0080f188 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80f188:	defffa04 	addi	sp,sp,-24
  80f18c:	dfc00515 	stw	ra,20(sp)
  80f190:	df000415 	stw	fp,16(sp)
  80f194:	df000404 	addi	fp,sp,16
  80f198:	e13ffe15 	stw	r4,-8(fp)
  80f19c:	e17ffd15 	stw	r5,-12(fp)
  80f1a0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f1a4:	e0bffe17 	ldw	r2,-8(fp)
  80f1a8:	10800017 	ldw	r2,0(r2)
  80f1ac:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80f1b0:	e0bfff17 	ldw	r2,-4(fp)
  80f1b4:	10c00a04 	addi	r3,r2,40
  80f1b8:	e0bffe17 	ldw	r2,-8(fp)
  80f1bc:	10800217 	ldw	r2,8(r2)
  80f1c0:	100f883a 	mov	r7,r2
  80f1c4:	e1bffc17 	ldw	r6,-16(fp)
  80f1c8:	e17ffd17 	ldw	r5,-12(fp)
  80f1cc:	1809883a 	mov	r4,r3
  80f1d0:	080f9740 	call	80f974 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80f1d4:	e037883a 	mov	sp,fp
  80f1d8:	dfc00117 	ldw	ra,4(sp)
  80f1dc:	df000017 	ldw	fp,0(sp)
  80f1e0:	dec00204 	addi	sp,sp,8
  80f1e4:	f800283a 	ret

0080f1e8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80f1e8:	defffc04 	addi	sp,sp,-16
  80f1ec:	dfc00315 	stw	ra,12(sp)
  80f1f0:	df000215 	stw	fp,8(sp)
  80f1f4:	df000204 	addi	fp,sp,8
  80f1f8:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f1fc:	e0bffe17 	ldw	r2,-8(fp)
  80f200:	10800017 	ldw	r2,0(r2)
  80f204:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80f208:	e0bfff17 	ldw	r2,-4(fp)
  80f20c:	10c00a04 	addi	r3,r2,40
  80f210:	e0bffe17 	ldw	r2,-8(fp)
  80f214:	10800217 	ldw	r2,8(r2)
  80f218:	100b883a 	mov	r5,r2
  80f21c:	1809883a 	mov	r4,r3
  80f220:	080f5f80 	call	80f5f8 <altera_avalon_jtag_uart_close>
}
  80f224:	e037883a 	mov	sp,fp
  80f228:	dfc00117 	ldw	ra,4(sp)
  80f22c:	df000017 	ldw	fp,0(sp)
  80f230:	dec00204 	addi	sp,sp,8
  80f234:	f800283a 	ret

0080f238 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80f238:	defffa04 	addi	sp,sp,-24
  80f23c:	dfc00515 	stw	ra,20(sp)
  80f240:	df000415 	stw	fp,16(sp)
  80f244:	df000404 	addi	fp,sp,16
  80f248:	e13ffe15 	stw	r4,-8(fp)
  80f24c:	e17ffd15 	stw	r5,-12(fp)
  80f250:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80f254:	e0bffe17 	ldw	r2,-8(fp)
  80f258:	10800017 	ldw	r2,0(r2)
  80f25c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80f260:	e0bfff17 	ldw	r2,-4(fp)
  80f264:	10800a04 	addi	r2,r2,40
  80f268:	e1bffc17 	ldw	r6,-16(fp)
  80f26c:	e17ffd17 	ldw	r5,-12(fp)
  80f270:	1009883a 	mov	r4,r2
  80f274:	080f6600 	call	80f660 <altera_avalon_jtag_uart_ioctl>
}
  80f278:	e037883a 	mov	sp,fp
  80f27c:	dfc00117 	ldw	ra,4(sp)
  80f280:	df000017 	ldw	fp,0(sp)
  80f284:	dec00204 	addi	sp,sp,8
  80f288:	f800283a 	ret

0080f28c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80f28c:	defffa04 	addi	sp,sp,-24
  80f290:	dfc00515 	stw	ra,20(sp)
  80f294:	df000415 	stw	fp,16(sp)
  80f298:	df000404 	addi	fp,sp,16
  80f29c:	e13fff15 	stw	r4,-4(fp)
  80f2a0:	e17ffe15 	stw	r5,-8(fp)
  80f2a4:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f2a8:	e0bfff17 	ldw	r2,-4(fp)
  80f2ac:	00c00044 	movi	r3,1
  80f2b0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80f2b4:	e0bfff17 	ldw	r2,-4(fp)
  80f2b8:	10800017 	ldw	r2,0(r2)
  80f2bc:	10800104 	addi	r2,r2,4
  80f2c0:	1007883a 	mov	r3,r2
  80f2c4:	e0bfff17 	ldw	r2,-4(fp)
  80f2c8:	10800817 	ldw	r2,32(r2)
  80f2cc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80f2d0:	e0bffe17 	ldw	r2,-8(fp)
  80f2d4:	e0fffd17 	ldw	r3,-12(fp)
  80f2d8:	d8000015 	stw	zero,0(sp)
  80f2dc:	e1ffff17 	ldw	r7,-4(fp)
  80f2e0:	01802074 	movhi	r6,129
  80f2e4:	31bcd304 	addi	r6,r6,-3252
  80f2e8:	180b883a 	mov	r5,r3
  80f2ec:	1009883a 	mov	r4,r2
  80f2f0:	080fffc0 	call	80fffc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80f2f4:	e0bfff17 	ldw	r2,-4(fp)
  80f2f8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80f2fc:	e0bfff17 	ldw	r2,-4(fp)
  80f300:	10800204 	addi	r2,r2,8
  80f304:	d0e71617 	ldw	r3,-25512(gp)
  80f308:	e1ffff17 	ldw	r7,-4(fp)
  80f30c:	01802074 	movhi	r6,129
  80f310:	31bd5604 	addi	r6,r6,-2728
  80f314:	180b883a 	mov	r5,r3
  80f318:	1009883a 	mov	r4,r2
  80f31c:	080fc9c0 	call	80fc9c <alt_alarm_start>
  80f320:	1000040e 	bge	r2,zero,80f334 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80f324:	e0ffff17 	ldw	r3,-4(fp)
  80f328:	00a00034 	movhi	r2,32768
  80f32c:	10bfffc4 	addi	r2,r2,-1
  80f330:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80f334:	0001883a 	nop
  80f338:	e037883a 	mov	sp,fp
  80f33c:	dfc00117 	ldw	ra,4(sp)
  80f340:	df000017 	ldw	fp,0(sp)
  80f344:	dec00204 	addi	sp,sp,8
  80f348:	f800283a 	ret

0080f34c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80f34c:	defff804 	addi	sp,sp,-32
  80f350:	df000715 	stw	fp,28(sp)
  80f354:	df000704 	addi	fp,sp,28
  80f358:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80f35c:	e0bff917 	ldw	r2,-28(fp)
  80f360:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  80f364:	e0bffd17 	ldw	r2,-12(fp)
  80f368:	10800017 	ldw	r2,0(r2)
  80f36c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f370:	e0bffc17 	ldw	r2,-16(fp)
  80f374:	10800104 	addi	r2,r2,4
  80f378:	10800037 	ldwio	r2,0(r2)
  80f37c:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80f380:	e0bffb17 	ldw	r2,-20(fp)
  80f384:	1080c00c 	andi	r2,r2,768
  80f388:	10006d26 	beq	r2,zero,80f540 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80f38c:	e0bffb17 	ldw	r2,-20(fp)
  80f390:	1080400c 	andi	r2,r2,256
  80f394:	10003526 	beq	r2,zero,80f46c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80f398:	00800074 	movhi	r2,1
  80f39c:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f3a0:	e0bffd17 	ldw	r2,-12(fp)
  80f3a4:	10800a17 	ldw	r2,40(r2)
  80f3a8:	10800044 	addi	r2,r2,1
  80f3ac:	1081ffcc 	andi	r2,r2,2047
  80f3b0:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80f3b4:	e0bffd17 	ldw	r2,-12(fp)
  80f3b8:	10800b17 	ldw	r2,44(r2)
  80f3bc:	e0fffa17 	ldw	r3,-24(fp)
  80f3c0:	18801526 	beq	r3,r2,80f418 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80f3c4:	e0bffc17 	ldw	r2,-16(fp)
  80f3c8:	10800037 	ldwio	r2,0(r2)
  80f3cc:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80f3d0:	e0bfff17 	ldw	r2,-4(fp)
  80f3d4:	10a0000c 	andi	r2,r2,32768
  80f3d8:	10001126 	beq	r2,zero,80f420 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80f3dc:	e0bffd17 	ldw	r2,-12(fp)
  80f3e0:	10800a17 	ldw	r2,40(r2)
  80f3e4:	e0ffff17 	ldw	r3,-4(fp)
  80f3e8:	1809883a 	mov	r4,r3
  80f3ec:	e0fffd17 	ldw	r3,-12(fp)
  80f3f0:	1885883a 	add	r2,r3,r2
  80f3f4:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f3f8:	e0bffd17 	ldw	r2,-12(fp)
  80f3fc:	10800a17 	ldw	r2,40(r2)
  80f400:	10800044 	addi	r2,r2,1
  80f404:	10c1ffcc 	andi	r3,r2,2047
  80f408:	e0bffd17 	ldw	r2,-12(fp)
  80f40c:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80f410:	0001883a 	nop
      {
  80f414:	003fe206 	br	80f3a0 <altera_avalon_jtag_uart_irq+0x54>
          break;
  80f418:	0001883a 	nop
  80f41c:	00000106 	br	80f424 <altera_avalon_jtag_uart_irq+0xd8>
          break;
  80f420:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80f424:	e0bfff17 	ldw	r2,-4(fp)
  80f428:	10bfffec 	andhi	r2,r2,65535
  80f42c:	10000f26 	beq	r2,zero,80f46c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f430:	e0bffd17 	ldw	r2,-12(fp)
  80f434:	10c00817 	ldw	r3,32(r2)
  80f438:	00bfff84 	movi	r2,-2
  80f43c:	1886703a 	and	r3,r3,r2
  80f440:	e0bffd17 	ldw	r2,-12(fp)
  80f444:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80f448:	e0bffc17 	ldw	r2,-16(fp)
  80f44c:	10800104 	addi	r2,r2,4
  80f450:	1007883a 	mov	r3,r2
  80f454:	e0bffd17 	ldw	r2,-12(fp)
  80f458:	10800817 	ldw	r2,32(r2)
  80f45c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f460:	e0bffc17 	ldw	r2,-16(fp)
  80f464:	10800104 	addi	r2,r2,4
  80f468:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80f46c:	e0bffb17 	ldw	r2,-20(fp)
  80f470:	1080800c 	andi	r2,r2,512
  80f474:	103fbe26 	beq	r2,zero,80f370 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80f478:	e0bffb17 	ldw	r2,-20(fp)
  80f47c:	1004d43a 	srli	r2,r2,16
  80f480:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f484:	00001406 	br	80f4d8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80f488:	e0bffc17 	ldw	r2,-16(fp)
  80f48c:	e0fffd17 	ldw	r3,-12(fp)
  80f490:	18c00d17 	ldw	r3,52(r3)
  80f494:	e13ffd17 	ldw	r4,-12(fp)
  80f498:	20c7883a 	add	r3,r4,r3
  80f49c:	18c20e03 	ldbu	r3,2104(r3)
  80f4a0:	18c03fcc 	andi	r3,r3,255
  80f4a4:	18c0201c 	xori	r3,r3,128
  80f4a8:	18ffe004 	addi	r3,r3,-128
  80f4ac:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f4b0:	e0bffd17 	ldw	r2,-12(fp)
  80f4b4:	10800d17 	ldw	r2,52(r2)
  80f4b8:	10800044 	addi	r2,r2,1
  80f4bc:	10c1ffcc 	andi	r3,r2,2047
  80f4c0:	e0bffd17 	ldw	r2,-12(fp)
  80f4c4:	10c00d15 	stw	r3,52(r2)
  80f4c8:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80f4cc:	e0bffe17 	ldw	r2,-8(fp)
  80f4d0:	10bfffc4 	addi	r2,r2,-1
  80f4d4:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  80f4d8:	e0bffe17 	ldw	r2,-8(fp)
  80f4dc:	10000526 	beq	r2,zero,80f4f4 <altera_avalon_jtag_uart_irq+0x1a8>
  80f4e0:	e0bffd17 	ldw	r2,-12(fp)
  80f4e4:	10c00d17 	ldw	r3,52(r2)
  80f4e8:	e0bffd17 	ldw	r2,-12(fp)
  80f4ec:	10800c17 	ldw	r2,48(r2)
  80f4f0:	18bfe51e 	bne	r3,r2,80f488 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
  80f4f4:	e0bffe17 	ldw	r2,-8(fp)
  80f4f8:	103f9d26 	beq	r2,zero,80f370 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f4fc:	e0bffd17 	ldw	r2,-12(fp)
  80f500:	10c00817 	ldw	r3,32(r2)
  80f504:	00bfff44 	movi	r2,-3
  80f508:	1886703a 	and	r3,r3,r2
  80f50c:	e0bffd17 	ldw	r2,-12(fp)
  80f510:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f514:	e0bffd17 	ldw	r2,-12(fp)
  80f518:	10800017 	ldw	r2,0(r2)
  80f51c:	10800104 	addi	r2,r2,4
  80f520:	1007883a 	mov	r3,r2
  80f524:	e0bffd17 	ldw	r2,-12(fp)
  80f528:	10800817 	ldw	r2,32(r2)
  80f52c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f530:	e0bffc17 	ldw	r2,-16(fp)
  80f534:	10800104 	addi	r2,r2,4
  80f538:	10800037 	ldwio	r2,0(r2)
  {
  80f53c:	003f8c06 	br	80f370 <altera_avalon_jtag_uart_irq+0x24>
      break;
  80f540:	0001883a 	nop
      }
    }
  }
}
  80f544:	0001883a 	nop
  80f548:	e037883a 	mov	sp,fp
  80f54c:	df000017 	ldw	fp,0(sp)
  80f550:	dec00104 	addi	sp,sp,4
  80f554:	f800283a 	ret

0080f558 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80f558:	defffc04 	addi	sp,sp,-16
  80f55c:	df000315 	stw	fp,12(sp)
  80f560:	df000304 	addi	fp,sp,12
  80f564:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80f568:	e0bffd17 	ldw	r2,-12(fp)
  80f56c:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80f570:	e0bfff17 	ldw	r2,-4(fp)
  80f574:	10800017 	ldw	r2,0(r2)
  80f578:	10800104 	addi	r2,r2,4
  80f57c:	10800037 	ldwio	r2,0(r2)
  80f580:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80f584:	e0bffe17 	ldw	r2,-8(fp)
  80f588:	1081000c 	andi	r2,r2,1024
  80f58c:	10000b26 	beq	r2,zero,80f5bc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80f590:	e0bfff17 	ldw	r2,-4(fp)
  80f594:	10800017 	ldw	r2,0(r2)
  80f598:	10800104 	addi	r2,r2,4
  80f59c:	1007883a 	mov	r3,r2
  80f5a0:	e0bfff17 	ldw	r2,-4(fp)
  80f5a4:	10800817 	ldw	r2,32(r2)
  80f5a8:	10810014 	ori	r2,r2,1024
  80f5ac:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80f5b0:	e0bfff17 	ldw	r2,-4(fp)
  80f5b4:	10000915 	stw	zero,36(r2)
  80f5b8:	00000a06 	br	80f5e4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80f5bc:	e0bfff17 	ldw	r2,-4(fp)
  80f5c0:	10c00917 	ldw	r3,36(r2)
  80f5c4:	00a00034 	movhi	r2,32768
  80f5c8:	10bfff04 	addi	r2,r2,-4
  80f5cc:	10c00536 	bltu	r2,r3,80f5e4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80f5d0:	e0bfff17 	ldw	r2,-4(fp)
  80f5d4:	10800917 	ldw	r2,36(r2)
  80f5d8:	10c00044 	addi	r3,r2,1
  80f5dc:	e0bfff17 	ldw	r2,-4(fp)
  80f5e0:	10c00915 	stw	r3,36(r2)
  80f5e4:	d0a71617 	ldw	r2,-25512(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80f5e8:	e037883a 	mov	sp,fp
  80f5ec:	df000017 	ldw	fp,0(sp)
  80f5f0:	dec00104 	addi	sp,sp,4
  80f5f4:	f800283a 	ret

0080f5f8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80f5f8:	defffd04 	addi	sp,sp,-12
  80f5fc:	df000215 	stw	fp,8(sp)
  80f600:	df000204 	addi	fp,sp,8
  80f604:	e13fff15 	stw	r4,-4(fp)
  80f608:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f60c:	00000506 	br	80f624 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80f610:	e0bffe17 	ldw	r2,-8(fp)
  80f614:	1090000c 	andi	r2,r2,16384
  80f618:	10000226 	beq	r2,zero,80f624 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80f61c:	00bffd44 	movi	r2,-11
  80f620:	00000b06 	br	80f650 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f624:	e0bfff17 	ldw	r2,-4(fp)
  80f628:	10c00d17 	ldw	r3,52(r2)
  80f62c:	e0bfff17 	ldw	r2,-4(fp)
  80f630:	10800c17 	ldw	r2,48(r2)
  80f634:	18800526 	beq	r3,r2,80f64c <altera_avalon_jtag_uart_close+0x54>
  80f638:	e0bfff17 	ldw	r2,-4(fp)
  80f63c:	10c00917 	ldw	r3,36(r2)
  80f640:	e0bfff17 	ldw	r2,-4(fp)
  80f644:	10800117 	ldw	r2,4(r2)
  80f648:	18bff136 	bltu	r3,r2,80f610 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  80f64c:	0005883a 	mov	r2,zero
}
  80f650:	e037883a 	mov	sp,fp
  80f654:	df000017 	ldw	fp,0(sp)
  80f658:	dec00104 	addi	sp,sp,4
  80f65c:	f800283a 	ret

0080f660 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80f660:	defffa04 	addi	sp,sp,-24
  80f664:	df000515 	stw	fp,20(sp)
  80f668:	df000504 	addi	fp,sp,20
  80f66c:	e13ffd15 	stw	r4,-12(fp)
  80f670:	e17ffc15 	stw	r5,-16(fp)
  80f674:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  80f678:	00bff9c4 	movi	r2,-25
  80f67c:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  80f680:	e0bffc17 	ldw	r2,-16(fp)
  80f684:	109a8060 	cmpeqi	r2,r2,27137
  80f688:	1000041e 	bne	r2,zero,80f69c <altera_avalon_jtag_uart_ioctl+0x3c>
  80f68c:	e0bffc17 	ldw	r2,-16(fp)
  80f690:	109a80a0 	cmpeqi	r2,r2,27138
  80f694:	1000181e 	bne	r2,zero,80f6f8 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  80f698:	00002906 	br	80f740 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  80f69c:	e0bffd17 	ldw	r2,-12(fp)
  80f6a0:	10c00117 	ldw	r3,4(r2)
  80f6a4:	00a00034 	movhi	r2,32768
  80f6a8:	10bfffc4 	addi	r2,r2,-1
  80f6ac:	18802126 	beq	r3,r2,80f734 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  80f6b0:	e0bffb17 	ldw	r2,-20(fp)
  80f6b4:	10800017 	ldw	r2,0(r2)
  80f6b8:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80f6bc:	e0bffe17 	ldw	r2,-8(fp)
  80f6c0:	10800090 	cmplti	r2,r2,2
  80f6c4:	1000061e 	bne	r2,zero,80f6e0 <altera_avalon_jtag_uart_ioctl+0x80>
  80f6c8:	e0fffe17 	ldw	r3,-8(fp)
  80f6cc:	00a00034 	movhi	r2,32768
  80f6d0:	10bfffc4 	addi	r2,r2,-1
  80f6d4:	18800226 	beq	r3,r2,80f6e0 <altera_avalon_jtag_uart_ioctl+0x80>
  80f6d8:	e0bffe17 	ldw	r2,-8(fp)
  80f6dc:	00000206 	br	80f6e8 <altera_avalon_jtag_uart_ioctl+0x88>
  80f6e0:	00a00034 	movhi	r2,32768
  80f6e4:	10bfff84 	addi	r2,r2,-2
  80f6e8:	e0fffd17 	ldw	r3,-12(fp)
  80f6ec:	18800115 	stw	r2,4(r3)
      rc = 0;
  80f6f0:	e03fff15 	stw	zero,-4(fp)
    break;
  80f6f4:	00000f06 	br	80f734 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  80f6f8:	e0bffd17 	ldw	r2,-12(fp)
  80f6fc:	10c00117 	ldw	r3,4(r2)
  80f700:	00a00034 	movhi	r2,32768
  80f704:	10bfffc4 	addi	r2,r2,-1
  80f708:	18800c26 	beq	r3,r2,80f73c <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80f70c:	e0bffd17 	ldw	r2,-12(fp)
  80f710:	10c00917 	ldw	r3,36(r2)
  80f714:	e0bffd17 	ldw	r2,-12(fp)
  80f718:	10800117 	ldw	r2,4(r2)
  80f71c:	1885803a 	cmpltu	r2,r3,r2
  80f720:	10c03fcc 	andi	r3,r2,255
  80f724:	e0bffb17 	ldw	r2,-20(fp)
  80f728:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80f72c:	e03fff15 	stw	zero,-4(fp)
    break;
  80f730:	00000206 	br	80f73c <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  80f734:	0001883a 	nop
  80f738:	00000106 	br	80f740 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  80f73c:	0001883a 	nop
  }

  return rc;
  80f740:	e0bfff17 	ldw	r2,-4(fp)
}
  80f744:	e037883a 	mov	sp,fp
  80f748:	df000017 	ldw	fp,0(sp)
  80f74c:	dec00104 	addi	sp,sp,4
  80f750:	f800283a 	ret

0080f754 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80f754:	defff304 	addi	sp,sp,-52
  80f758:	dfc00c15 	stw	ra,48(sp)
  80f75c:	df000b15 	stw	fp,44(sp)
  80f760:	df000b04 	addi	fp,sp,44
  80f764:	e13ff815 	stw	r4,-32(fp)
  80f768:	e17ff715 	stw	r5,-36(fp)
  80f76c:	e1bff615 	stw	r6,-40(fp)
  80f770:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  80f774:	e0bff717 	ldw	r2,-36(fp)
  80f778:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80f77c:	00004706 	br	80f89c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80f780:	e0bff817 	ldw	r2,-32(fp)
  80f784:	10800a17 	ldw	r2,40(r2)
  80f788:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  80f78c:	e0bff817 	ldw	r2,-32(fp)
  80f790:	10800b17 	ldw	r2,44(r2)
  80f794:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  80f798:	e0fffd17 	ldw	r3,-12(fp)
  80f79c:	e0bffc17 	ldw	r2,-16(fp)
  80f7a0:	18800536 	bltu	r3,r2,80f7b8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80f7a4:	e0fffd17 	ldw	r3,-12(fp)
  80f7a8:	e0bffc17 	ldw	r2,-16(fp)
  80f7ac:	1885c83a 	sub	r2,r3,r2
  80f7b0:	e0bffe15 	stw	r2,-8(fp)
  80f7b4:	00000406 	br	80f7c8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80f7b8:	00c20004 	movi	r3,2048
  80f7bc:	e0bffc17 	ldw	r2,-16(fp)
  80f7c0:	1885c83a 	sub	r2,r3,r2
  80f7c4:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80f7c8:	e0bffe17 	ldw	r2,-8(fp)
  80f7cc:	10001e26 	beq	r2,zero,80f848 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80f7d0:	e0fff617 	ldw	r3,-40(fp)
  80f7d4:	e0bffe17 	ldw	r2,-8(fp)
  80f7d8:	1880022e 	bgeu	r3,r2,80f7e4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80f7dc:	e0bff617 	ldw	r2,-40(fp)
  80f7e0:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80f7e4:	e0bff817 	ldw	r2,-32(fp)
  80f7e8:	10c00e04 	addi	r3,r2,56
  80f7ec:	e0bffc17 	ldw	r2,-16(fp)
  80f7f0:	1885883a 	add	r2,r3,r2
  80f7f4:	e1bffe17 	ldw	r6,-8(fp)
  80f7f8:	100b883a 	mov	r5,r2
  80f7fc:	e13fff17 	ldw	r4,-4(fp)
  80f800:	0806e700 	call	806e70 <memcpy>
      ptr   += n;
  80f804:	e0ffff17 	ldw	r3,-4(fp)
  80f808:	e0bffe17 	ldw	r2,-8(fp)
  80f80c:	1885883a 	add	r2,r3,r2
  80f810:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  80f814:	e0fff617 	ldw	r3,-40(fp)
  80f818:	e0bffe17 	ldw	r2,-8(fp)
  80f81c:	1885c83a 	sub	r2,r3,r2
  80f820:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f824:	e0fffc17 	ldw	r3,-16(fp)
  80f828:	e0bffe17 	ldw	r2,-8(fp)
  80f82c:	1885883a 	add	r2,r3,r2
  80f830:	10c1ffcc 	andi	r3,r2,2047
  80f834:	e0bff817 	ldw	r2,-32(fp)
  80f838:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80f83c:	e0bff617 	ldw	r2,-40(fp)
  80f840:	00bfcf16 	blt	zero,r2,80f780 <altera_avalon_jtag_uart_read+0x2c>
  80f844:	00000106 	br	80f84c <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  80f848:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  80f84c:	e0ffff17 	ldw	r3,-4(fp)
  80f850:	e0bff717 	ldw	r2,-36(fp)
  80f854:	1880141e 	bne	r3,r2,80f8a8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80f858:	e0bff517 	ldw	r2,-44(fp)
  80f85c:	1090000c 	andi	r2,r2,16384
  80f860:	1000131e 	bne	r2,zero,80f8b0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80f864:	0001883a 	nop
  80f868:	e0bff817 	ldw	r2,-32(fp)
  80f86c:	10800a17 	ldw	r2,40(r2)
  80f870:	e0fffd17 	ldw	r3,-12(fp)
  80f874:	1880051e 	bne	r3,r2,80f88c <altera_avalon_jtag_uart_read+0x138>
  80f878:	e0bff817 	ldw	r2,-32(fp)
  80f87c:	10c00917 	ldw	r3,36(r2)
  80f880:	e0bff817 	ldw	r2,-32(fp)
  80f884:	10800117 	ldw	r2,4(r2)
  80f888:	18bff736 	bltu	r3,r2,80f868 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80f88c:	e0bff817 	ldw	r2,-32(fp)
  80f890:	10800a17 	ldw	r2,40(r2)
  80f894:	e0fffd17 	ldw	r3,-12(fp)
  80f898:	18800726 	beq	r3,r2,80f8b8 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  80f89c:	e0bff617 	ldw	r2,-40(fp)
  80f8a0:	00bfb716 	blt	zero,r2,80f780 <altera_avalon_jtag_uart_read+0x2c>
  80f8a4:	00000506 	br	80f8bc <altera_avalon_jtag_uart_read+0x168>
      break;
  80f8a8:	0001883a 	nop
  80f8ac:	00000306 	br	80f8bc <altera_avalon_jtag_uart_read+0x168>
      break;
  80f8b0:	0001883a 	nop
  80f8b4:	00000106 	br	80f8bc <altera_avalon_jtag_uart_read+0x168>
      break;
  80f8b8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80f8bc:	e0ffff17 	ldw	r3,-4(fp)
  80f8c0:	e0bff717 	ldw	r2,-36(fp)
  80f8c4:	18801926 	beq	r3,r2,80f92c <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  80f8c8:	0005303a 	rdctl	r2,status
  80f8cc:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f8d0:	e0fff917 	ldw	r3,-28(fp)
  80f8d4:	00bfff84 	movi	r2,-2
  80f8d8:	1884703a 	and	r2,r3,r2
  80f8dc:	1001703a 	wrctl	status,r2
  return context;
  80f8e0:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80f8e4:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f8e8:	e0bff817 	ldw	r2,-32(fp)
  80f8ec:	10800817 	ldw	r2,32(r2)
  80f8f0:	10c00054 	ori	r3,r2,1
  80f8f4:	e0bff817 	ldw	r2,-32(fp)
  80f8f8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f8fc:	e0bff817 	ldw	r2,-32(fp)
  80f900:	10800017 	ldw	r2,0(r2)
  80f904:	10800104 	addi	r2,r2,4
  80f908:	1007883a 	mov	r3,r2
  80f90c:	e0bff817 	ldw	r2,-32(fp)
  80f910:	10800817 	ldw	r2,32(r2)
  80f914:	18800035 	stwio	r2,0(r3)
  80f918:	e0bffb17 	ldw	r2,-20(fp)
  80f91c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80f920:	e0bffa17 	ldw	r2,-24(fp)
  80f924:	1001703a 	wrctl	status,r2
}
  80f928:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80f92c:	e0ffff17 	ldw	r3,-4(fp)
  80f930:	e0bff717 	ldw	r2,-36(fp)
  80f934:	18800426 	beq	r3,r2,80f948 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  80f938:	e0ffff17 	ldw	r3,-4(fp)
  80f93c:	e0bff717 	ldw	r2,-36(fp)
  80f940:	1885c83a 	sub	r2,r3,r2
  80f944:	00000606 	br	80f960 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80f948:	e0bff517 	ldw	r2,-44(fp)
  80f94c:	1090000c 	andi	r2,r2,16384
  80f950:	10000226 	beq	r2,zero,80f95c <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  80f954:	00bffd44 	movi	r2,-11
  80f958:	00000106 	br	80f960 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80f95c:	00bffec4 	movi	r2,-5
}
  80f960:	e037883a 	mov	sp,fp
  80f964:	dfc00117 	ldw	ra,4(sp)
  80f968:	df000017 	ldw	fp,0(sp)
  80f96c:	dec00204 	addi	sp,sp,8
  80f970:	f800283a 	ret

0080f974 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80f974:	defff304 	addi	sp,sp,-52
  80f978:	dfc00c15 	stw	ra,48(sp)
  80f97c:	df000b15 	stw	fp,44(sp)
  80f980:	df000b04 	addi	fp,sp,44
  80f984:	e13ff815 	stw	r4,-32(fp)
  80f988:	e17ff715 	stw	r5,-36(fp)
  80f98c:	e1bff615 	stw	r6,-40(fp)
  80f990:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80f994:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80f998:	e0bff717 	ldw	r2,-36(fp)
  80f99c:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f9a0:	00003706 	br	80fa80 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80f9a4:	e0bff817 	ldw	r2,-32(fp)
  80f9a8:	10800c17 	ldw	r2,48(r2)
  80f9ac:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  80f9b0:	e0bff817 	ldw	r2,-32(fp)
  80f9b4:	10800d17 	ldw	r2,52(r2)
  80f9b8:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  80f9bc:	e0fffc17 	ldw	r3,-16(fp)
  80f9c0:	e0bfff17 	ldw	r2,-4(fp)
  80f9c4:	1880062e 	bgeu	r3,r2,80f9e0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80f9c8:	e0ffff17 	ldw	r3,-4(fp)
  80f9cc:	e0bffc17 	ldw	r2,-16(fp)
  80f9d0:	1885c83a 	sub	r2,r3,r2
  80f9d4:	10bfffc4 	addi	r2,r2,-1
  80f9d8:	e0bffe15 	stw	r2,-8(fp)
  80f9dc:	00000b06 	br	80fa0c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80f9e0:	e0bfff17 	ldw	r2,-4(fp)
  80f9e4:	10000526 	beq	r2,zero,80f9fc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80f9e8:	00c20004 	movi	r3,2048
  80f9ec:	e0bffc17 	ldw	r2,-16(fp)
  80f9f0:	1885c83a 	sub	r2,r3,r2
  80f9f4:	e0bffe15 	stw	r2,-8(fp)
  80f9f8:	00000406 	br	80fa0c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80f9fc:	00c1ffc4 	movi	r3,2047
  80fa00:	e0bffc17 	ldw	r2,-16(fp)
  80fa04:	1885c83a 	sub	r2,r3,r2
  80fa08:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80fa0c:	e0bffe17 	ldw	r2,-8(fp)
  80fa10:	10001e26 	beq	r2,zero,80fa8c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80fa14:	e0fff617 	ldw	r3,-40(fp)
  80fa18:	e0bffe17 	ldw	r2,-8(fp)
  80fa1c:	1880022e 	bgeu	r3,r2,80fa28 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80fa20:	e0bff617 	ldw	r2,-40(fp)
  80fa24:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80fa28:	e0bff817 	ldw	r2,-32(fp)
  80fa2c:	10c20e04 	addi	r3,r2,2104
  80fa30:	e0bffc17 	ldw	r2,-16(fp)
  80fa34:	1885883a 	add	r2,r3,r2
  80fa38:	e1bffe17 	ldw	r6,-8(fp)
  80fa3c:	e17ff717 	ldw	r5,-36(fp)
  80fa40:	1009883a 	mov	r4,r2
  80fa44:	0806e700 	call	806e70 <memcpy>
      ptr   += n;
  80fa48:	e0fff717 	ldw	r3,-36(fp)
  80fa4c:	e0bffe17 	ldw	r2,-8(fp)
  80fa50:	1885883a 	add	r2,r3,r2
  80fa54:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  80fa58:	e0fff617 	ldw	r3,-40(fp)
  80fa5c:	e0bffe17 	ldw	r2,-8(fp)
  80fa60:	1885c83a 	sub	r2,r3,r2
  80fa64:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80fa68:	e0fffc17 	ldw	r3,-16(fp)
  80fa6c:	e0bffe17 	ldw	r2,-8(fp)
  80fa70:	1885883a 	add	r2,r3,r2
  80fa74:	10c1ffcc 	andi	r3,r2,2047
  80fa78:	e0bff817 	ldw	r2,-32(fp)
  80fa7c:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  80fa80:	e0bff617 	ldw	r2,-40(fp)
  80fa84:	00bfc716 	blt	zero,r2,80f9a4 <altera_avalon_jtag_uart_write+0x30>
  80fa88:	00000106 	br	80fa90 <altera_avalon_jtag_uart_write+0x11c>
        break;
  80fa8c:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  80fa90:	0005303a 	rdctl	r2,status
  80fa94:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fa98:	e0fff917 	ldw	r3,-28(fp)
  80fa9c:	00bfff84 	movi	r2,-2
  80faa0:	1884703a 	and	r2,r3,r2
  80faa4:	1001703a 	wrctl	status,r2
  return context;
  80faa8:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80faac:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80fab0:	e0bff817 	ldw	r2,-32(fp)
  80fab4:	10800817 	ldw	r2,32(r2)
  80fab8:	10c00094 	ori	r3,r2,2
  80fabc:	e0bff817 	ldw	r2,-32(fp)
  80fac0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80fac4:	e0bff817 	ldw	r2,-32(fp)
  80fac8:	10800017 	ldw	r2,0(r2)
  80facc:	10800104 	addi	r2,r2,4
  80fad0:	1007883a 	mov	r3,r2
  80fad4:	e0bff817 	ldw	r2,-32(fp)
  80fad8:	10800817 	ldw	r2,32(r2)
  80fadc:	18800035 	stwio	r2,0(r3)
  80fae0:	e0bffb17 	ldw	r2,-20(fp)
  80fae4:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80fae8:	e0bffa17 	ldw	r2,-24(fp)
  80faec:	1001703a 	wrctl	status,r2
}
  80faf0:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80faf4:	e0bff617 	ldw	r2,-40(fp)
  80faf8:	0080100e 	bge	zero,r2,80fb3c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  80fafc:	e0bff517 	ldw	r2,-44(fp)
  80fb00:	1090000c 	andi	r2,r2,16384
  80fb04:	1000101e 	bne	r2,zero,80fb48 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80fb08:	0001883a 	nop
  80fb0c:	e0bff817 	ldw	r2,-32(fp)
  80fb10:	10800d17 	ldw	r2,52(r2)
  80fb14:	e0ffff17 	ldw	r3,-4(fp)
  80fb18:	1880051e 	bne	r3,r2,80fb30 <altera_avalon_jtag_uart_write+0x1bc>
  80fb1c:	e0bff817 	ldw	r2,-32(fp)
  80fb20:	10c00917 	ldw	r3,36(r2)
  80fb24:	e0bff817 	ldw	r2,-32(fp)
  80fb28:	10800117 	ldw	r2,4(r2)
  80fb2c:	18bff736 	bltu	r3,r2,80fb0c <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80fb30:	e0bff817 	ldw	r2,-32(fp)
  80fb34:	10800917 	ldw	r2,36(r2)
  80fb38:	1000051e 	bne	r2,zero,80fb50 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  80fb3c:	e0bff617 	ldw	r2,-40(fp)
  80fb40:	00bfcf16 	blt	zero,r2,80fa80 <altera_avalon_jtag_uart_write+0x10c>
  80fb44:	00000306 	br	80fb54 <altera_avalon_jtag_uart_write+0x1e0>
        break;
  80fb48:	0001883a 	nop
  80fb4c:	00000106 	br	80fb54 <altera_avalon_jtag_uart_write+0x1e0>
         break;
  80fb50:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80fb54:	e0fff717 	ldw	r3,-36(fp)
  80fb58:	e0bffd17 	ldw	r2,-12(fp)
  80fb5c:	18800426 	beq	r3,r2,80fb70 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  80fb60:	e0fff717 	ldw	r3,-36(fp)
  80fb64:	e0bffd17 	ldw	r2,-12(fp)
  80fb68:	1885c83a 	sub	r2,r3,r2
  80fb6c:	00000606 	br	80fb88 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  80fb70:	e0bff517 	ldw	r2,-44(fp)
  80fb74:	1090000c 	andi	r2,r2,16384
  80fb78:	10000226 	beq	r2,zero,80fb84 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  80fb7c:	00bffd44 	movi	r2,-11
  80fb80:	00000106 	br	80fb88 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80fb84:	00bffec4 	movi	r2,-5
}
  80fb88:	e037883a 	mov	sp,fp
  80fb8c:	dfc00117 	ldw	ra,4(sp)
  80fb90:	df000017 	ldw	fp,0(sp)
  80fb94:	dec00204 	addi	sp,sp,8
  80fb98:	f800283a 	ret

0080fb9c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80fb9c:	defffa04 	addi	sp,sp,-24
  80fba0:	dfc00515 	stw	ra,20(sp)
  80fba4:	df000415 	stw	fp,16(sp)
  80fba8:	df000404 	addi	fp,sp,16
  80fbac:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80fbb0:	0007883a 	mov	r3,zero
  80fbb4:	e0bffc17 	ldw	r2,-16(fp)
  80fbb8:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80fbbc:	e0bffc17 	ldw	r2,-16(fp)
  80fbc0:	10800104 	addi	r2,r2,4
  80fbc4:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
  80fbc8:	0005303a 	rdctl	r2,status
  80fbcc:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fbd0:	e0fffd17 	ldw	r3,-12(fp)
  80fbd4:	00bfff84 	movi	r2,-2
  80fbd8:	1884703a 	and	r2,r3,r2
  80fbdc:	1001703a 	wrctl	status,r2
  return context;
  80fbe0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80fbe4:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
  80fbe8:	080ed580 	call	80ed58 <alt_tick>
  80fbec:	e0bfff17 	ldw	r2,-4(fp)
  80fbf0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80fbf4:	e0bffe17 	ldw	r2,-8(fp)
  80fbf8:	1001703a 	wrctl	status,r2
}
  80fbfc:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
  80fc00:	0001883a 	nop
  80fc04:	e037883a 	mov	sp,fp
  80fc08:	dfc00117 	ldw	ra,4(sp)
  80fc0c:	df000017 	ldw	fp,0(sp)
  80fc10:	dec00204 	addi	sp,sp,8
  80fc14:	f800283a 	ret

0080fc18 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80fc18:	defff804 	addi	sp,sp,-32
  80fc1c:	dfc00715 	stw	ra,28(sp)
  80fc20:	df000615 	stw	fp,24(sp)
  80fc24:	df000604 	addi	fp,sp,24
  80fc28:	e13ffe15 	stw	r4,-8(fp)
  80fc2c:	e17ffd15 	stw	r5,-12(fp)
  80fc30:	e1bffc15 	stw	r6,-16(fp)
  80fc34:	e1fffb15 	stw	r7,-20(fp)
  80fc38:	e0bffb17 	ldw	r2,-20(fp)
  80fc3c:	e0bfff15 	stw	r2,-4(fp)
  if (! _alt_tick_rate)
  80fc40:	d0a71617 	ldw	r2,-25512(gp)
  80fc44:	1000031e 	bne	r2,zero,80fc54 <alt_avalon_timer_sc_init+0x3c>
    _alt_tick_rate = nticks;
  80fc48:	e0bfff17 	ldw	r2,-4(fp)
  80fc4c:	d0a71615 	stw	r2,-25512(gp)
    return 0;
  80fc50:	00000106 	br	80fc58 <alt_avalon_timer_sc_init+0x40>
    return -1;
  80fc54:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80fc58:	e0bffe17 	ldw	r2,-8(fp)
  80fc5c:	10800104 	addi	r2,r2,4
  80fc60:	00c001c4 	movi	r3,7
  80fc64:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80fc68:	d8000015 	stw	zero,0(sp)
  80fc6c:	e1fffe17 	ldw	r7,-8(fp)
  80fc70:	01802074 	movhi	r6,129
  80fc74:	31bee704 	addi	r6,r6,-1124
  80fc78:	e17ffc17 	ldw	r5,-16(fp)
  80fc7c:	e13ffd17 	ldw	r4,-12(fp)
  80fc80:	080fffc0 	call	80fffc <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80fc84:	0001883a 	nop
  80fc88:	e037883a 	mov	sp,fp
  80fc8c:	dfc00117 	ldw	ra,4(sp)
  80fc90:	df000017 	ldw	fp,0(sp)
  80fc94:	dec00204 	addi	sp,sp,8
  80fc98:	f800283a 	ret

0080fc9c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80fc9c:	defff504 	addi	sp,sp,-44
  80fca0:	df000a15 	stw	fp,40(sp)
  80fca4:	df000a04 	addi	fp,sp,40
  80fca8:	e13ff915 	stw	r4,-28(fp)
  80fcac:	e17ff815 	stw	r5,-32(fp)
  80fcb0:	e1bff715 	stw	r6,-36(fp)
  80fcb4:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80fcb8:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
  80fcbc:	d0a71617 	ldw	r2,-25512(gp)
  
  if (alt_ticks_per_second ())
  80fcc0:	10003e26 	beq	r2,zero,80fdbc <alt_alarm_start+0x120>
  {
    if (alarm)
  80fcc4:	e0bff917 	ldw	r2,-28(fp)
  80fcc8:	10003a26 	beq	r2,zero,80fdb4 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
  80fccc:	e0bff917 	ldw	r2,-28(fp)
  80fcd0:	e0fff717 	ldw	r3,-36(fp)
  80fcd4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80fcd8:	e0bff917 	ldw	r2,-28(fp)
  80fcdc:	e0fff617 	ldw	r3,-40(fp)
  80fce0:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  80fce4:	0005303a 	rdctl	r2,status
  80fce8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fcec:	e0fffd17 	ldw	r3,-12(fp)
  80fcf0:	00bfff84 	movi	r2,-2
  80fcf4:	1884703a 	and	r2,r3,r2
  80fcf8:	1001703a 	wrctl	status,r2
  return context;
  80fcfc:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
  80fd00:	e0bffe15 	stw	r2,-8(fp)
  return _alt_nticks;
  80fd04:	d0a71717 	ldw	r2,-25508(gp)
      
      current_nticks = alt_nticks();
  80fd08:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80fd0c:	e0fff817 	ldw	r3,-32(fp)
  80fd10:	e0bfff17 	ldw	r2,-4(fp)
  80fd14:	1885883a 	add	r2,r3,r2
  80fd18:	10c00044 	addi	r3,r2,1
  80fd1c:	e0bff917 	ldw	r2,-28(fp)
  80fd20:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80fd24:	e0bff917 	ldw	r2,-28(fp)
  80fd28:	10c00217 	ldw	r3,8(r2)
  80fd2c:	e0bfff17 	ldw	r2,-4(fp)
  80fd30:	1880042e 	bgeu	r3,r2,80fd44 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80fd34:	e0bff917 	ldw	r2,-28(fp)
  80fd38:	00c00044 	movi	r3,1
  80fd3c:	10c00405 	stb	r3,16(r2)
  80fd40:	00000206 	br	80fd4c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80fd44:	e0bff917 	ldw	r2,-28(fp)
  80fd48:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80fd4c:	e0bff917 	ldw	r2,-28(fp)
  80fd50:	d0e01004 	addi	r3,gp,-32704
  80fd54:	e0fffb15 	stw	r3,-20(fp)
  80fd58:	e0bffa15 	stw	r2,-24(fp)
  entry->previous = list;
  80fd5c:	e0bffa17 	ldw	r2,-24(fp)
  80fd60:	e0fffb17 	ldw	r3,-20(fp)
  80fd64:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fd68:	e0bffb17 	ldw	r2,-20(fp)
  80fd6c:	10c00017 	ldw	r3,0(r2)
  80fd70:	e0bffa17 	ldw	r2,-24(fp)
  80fd74:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80fd78:	e0bffb17 	ldw	r2,-20(fp)
  80fd7c:	10800017 	ldw	r2,0(r2)
  80fd80:	e0fffa17 	ldw	r3,-24(fp)
  80fd84:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fd88:	e0bffb17 	ldw	r2,-20(fp)
  80fd8c:	e0fffa17 	ldw	r3,-24(fp)
  80fd90:	10c00015 	stw	r3,0(r2)
}
  80fd94:	0001883a 	nop
  80fd98:	e0bffe17 	ldw	r2,-8(fp)
  80fd9c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80fda0:	e0bffc17 	ldw	r2,-16(fp)
  80fda4:	1001703a 	wrctl	status,r2
}
  80fda8:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  80fdac:	0005883a 	mov	r2,zero
  80fdb0:	00000306 	br	80fdc0 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
  80fdb4:	00bffa84 	movi	r2,-22
  80fdb8:	00000106 	br	80fdc0 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
  80fdbc:	00bfde84 	movi	r2,-134
  }
}
  80fdc0:	e037883a 	mov	sp,fp
  80fdc4:	df000017 	ldw	fp,0(sp)
  80fdc8:	dec00104 	addi	sp,sp,4
  80fdcc:	f800283a 	ret

0080fdd0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80fdd0:	defffe04 	addi	sp,sp,-8
  80fdd4:	df000115 	stw	fp,4(sp)
  80fdd8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fddc:	e03fff15 	stw	zero,-4(fp)
  80fde0:	00000506 	br	80fdf8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80fde4:	e0bfff17 	ldw	r2,-4(fp)
  80fde8:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fdec:	e0bfff17 	ldw	r2,-4(fp)
  80fdf0:	10800804 	addi	r2,r2,32
  80fdf4:	e0bfff15 	stw	r2,-4(fp)
  80fdf8:	e0bfff17 	ldw	r2,-4(fp)
  80fdfc:	10820030 	cmpltui	r2,r2,2048
  80fe00:	103ff81e 	bne	r2,zero,80fde4 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80fe04:	0001883a 	nop
  80fe08:	0001883a 	nop
  80fe0c:	e037883a 	mov	sp,fp
  80fe10:	df000017 	ldw	fp,0(sp)
  80fe14:	dec00104 	addi	sp,sp,4
  80fe18:	f800283a 	ret

0080fe1c <alt_get_errno>:
{
  80fe1c:	defffe04 	addi	sp,sp,-8
  80fe20:	dfc00115 	stw	ra,4(sp)
  80fe24:	df000015 	stw	fp,0(sp)
  80fe28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fe2c:	d0a00e17 	ldw	r2,-32712(gp)
  80fe30:	10000326 	beq	r2,zero,80fe40 <alt_get_errno+0x24>
  80fe34:	d0a00e17 	ldw	r2,-32712(gp)
  80fe38:	103ee83a 	callr	r2
  80fe3c:	00000106 	br	80fe44 <alt_get_errno+0x28>
  80fe40:	d0a71104 	addi	r2,gp,-25532
}
  80fe44:	e037883a 	mov	sp,fp
  80fe48:	dfc00117 	ldw	ra,4(sp)
  80fe4c:	df000017 	ldw	fp,0(sp)
  80fe50:	dec00204 	addi	sp,sp,8
  80fe54:	f800283a 	ret

0080fe58 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80fe58:	defffa04 	addi	sp,sp,-24
  80fe5c:	dfc00515 	stw	ra,20(sp)
  80fe60:	df000415 	stw	fp,16(sp)
  80fe64:	df000404 	addi	fp,sp,16
  80fe68:	e13ffd15 	stw	r4,-12(fp)
  80fe6c:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80fe70:	e0bffd17 	ldw	r2,-12(fp)
  80fe74:	10000326 	beq	r2,zero,80fe84 <alt_dev_llist_insert+0x2c>
  80fe78:	e0bffd17 	ldw	r2,-12(fp)
  80fe7c:	10800217 	ldw	r2,8(r2)
  80fe80:	1000061e 	bne	r2,zero,80fe9c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80fe84:	080fe1c0 	call	80fe1c <alt_get_errno>
  80fe88:	1007883a 	mov	r3,r2
  80fe8c:	00800584 	movi	r2,22
  80fe90:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80fe94:	00bffa84 	movi	r2,-22
  80fe98:	00001406 	br	80feec <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80fe9c:	e0bffd17 	ldw	r2,-12(fp)
  80fea0:	e0fffc17 	ldw	r3,-16(fp)
  80fea4:	e0ffff15 	stw	r3,-4(fp)
  80fea8:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  80feac:	e0bffe17 	ldw	r2,-8(fp)
  80feb0:	e0ffff17 	ldw	r3,-4(fp)
  80feb4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80feb8:	e0bfff17 	ldw	r2,-4(fp)
  80febc:	10c00017 	ldw	r3,0(r2)
  80fec0:	e0bffe17 	ldw	r2,-8(fp)
  80fec4:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80fec8:	e0bfff17 	ldw	r2,-4(fp)
  80fecc:	10800017 	ldw	r2,0(r2)
  80fed0:	e0fffe17 	ldw	r3,-8(fp)
  80fed4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fed8:	e0bfff17 	ldw	r2,-4(fp)
  80fedc:	e0fffe17 	ldw	r3,-8(fp)
  80fee0:	10c00015 	stw	r3,0(r2)
}
  80fee4:	0001883a 	nop

  return 0;  
  80fee8:	0005883a 	mov	r2,zero
}
  80feec:	e037883a 	mov	sp,fp
  80fef0:	dfc00117 	ldw	ra,4(sp)
  80fef4:	df000017 	ldw	fp,0(sp)
  80fef8:	dec00204 	addi	sp,sp,8
  80fefc:	f800283a 	ret

0080ff00 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80ff00:	defffd04 	addi	sp,sp,-12
  80ff04:	dfc00215 	stw	ra,8(sp)
  80ff08:	df000115 	stw	fp,4(sp)
  80ff0c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ff10:	00802074 	movhi	r2,129
  80ff14:	10831904 	addi	r2,r2,3172
  80ff18:	e0bfff15 	stw	r2,-4(fp)
  80ff1c:	00000606 	br	80ff38 <_do_ctors+0x38>
        (*ctor) (); 
  80ff20:	e0bfff17 	ldw	r2,-4(fp)
  80ff24:	10800017 	ldw	r2,0(r2)
  80ff28:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ff2c:	e0bfff17 	ldw	r2,-4(fp)
  80ff30:	10bfff04 	addi	r2,r2,-4
  80ff34:	e0bfff15 	stw	r2,-4(fp)
  80ff38:	e0ffff17 	ldw	r3,-4(fp)
  80ff3c:	00802074 	movhi	r2,129
  80ff40:	10831a04 	addi	r2,r2,3176
  80ff44:	18bff62e 	bgeu	r3,r2,80ff20 <_do_ctors+0x20>
}
  80ff48:	0001883a 	nop
  80ff4c:	0001883a 	nop
  80ff50:	e037883a 	mov	sp,fp
  80ff54:	dfc00117 	ldw	ra,4(sp)
  80ff58:	df000017 	ldw	fp,0(sp)
  80ff5c:	dec00204 	addi	sp,sp,8
  80ff60:	f800283a 	ret

0080ff64 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80ff64:	defffd04 	addi	sp,sp,-12
  80ff68:	dfc00215 	stw	ra,8(sp)
  80ff6c:	df000115 	stw	fp,4(sp)
  80ff70:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ff74:	00802074 	movhi	r2,129
  80ff78:	10831904 	addi	r2,r2,3172
  80ff7c:	e0bfff15 	stw	r2,-4(fp)
  80ff80:	00000606 	br	80ff9c <_do_dtors+0x38>
        (*dtor) (); 
  80ff84:	e0bfff17 	ldw	r2,-4(fp)
  80ff88:	10800017 	ldw	r2,0(r2)
  80ff8c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ff90:	e0bfff17 	ldw	r2,-4(fp)
  80ff94:	10bfff04 	addi	r2,r2,-4
  80ff98:	e0bfff15 	stw	r2,-4(fp)
  80ff9c:	e0ffff17 	ldw	r3,-4(fp)
  80ffa0:	00802074 	movhi	r2,129
  80ffa4:	10831a04 	addi	r2,r2,3176
  80ffa8:	18bff62e 	bgeu	r3,r2,80ff84 <_do_dtors+0x20>
}
  80ffac:	0001883a 	nop
  80ffb0:	0001883a 	nop
  80ffb4:	e037883a 	mov	sp,fp
  80ffb8:	dfc00117 	ldw	ra,4(sp)
  80ffbc:	df000017 	ldw	fp,0(sp)
  80ffc0:	dec00204 	addi	sp,sp,8
  80ffc4:	f800283a 	ret

0080ffc8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80ffc8:	defffe04 	addi	sp,sp,-8
  80ffcc:	dfc00115 	stw	ra,4(sp)
  80ffd0:	df000015 	stw	fp,0(sp)
  80ffd4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ffd8:	01420004 	movi	r5,2048
  80ffdc:	0009883a 	mov	r4,zero
  80ffe0:	08108d00 	call	8108d0 <alt_icache_flush>
#endif
}
  80ffe4:	0001883a 	nop
  80ffe8:	e037883a 	mov	sp,fp
  80ffec:	dfc00117 	ldw	ra,4(sp)
  80fff0:	df000017 	ldw	fp,0(sp)
  80fff4:	dec00204 	addi	sp,sp,8
  80fff8:	f800283a 	ret

0080fffc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80fffc:	defff904 	addi	sp,sp,-28
  810000:	dfc00615 	stw	ra,24(sp)
  810004:	df000515 	stw	fp,20(sp)
  810008:	df000504 	addi	fp,sp,20
  81000c:	e13fff15 	stw	r4,-4(fp)
  810010:	e17ffe15 	stw	r5,-8(fp)
  810014:	e1bffd15 	stw	r6,-12(fp)
  810018:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  81001c:	e0800217 	ldw	r2,8(fp)
  810020:	d8800015 	stw	r2,0(sp)
  810024:	e1fffc17 	ldw	r7,-16(fp)
  810028:	e1bffd17 	ldw	r6,-12(fp)
  81002c:	e17ffe17 	ldw	r5,-8(fp)
  810030:	e13fff17 	ldw	r4,-4(fp)
  810034:	08101ac0 	call	8101ac <alt_iic_isr_register>
}  
  810038:	e037883a 	mov	sp,fp
  81003c:	dfc00117 	ldw	ra,4(sp)
  810040:	df000017 	ldw	fp,0(sp)
  810044:	dec00204 	addi	sp,sp,8
  810048:	f800283a 	ret

0081004c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  81004c:	defff904 	addi	sp,sp,-28
  810050:	df000615 	stw	fp,24(sp)
  810054:	df000604 	addi	fp,sp,24
  810058:	e13ffb15 	stw	r4,-20(fp)
  81005c:	e17ffa15 	stw	r5,-24(fp)
  810060:	e0bffa17 	ldw	r2,-24(fp)
  810064:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  810068:	0005303a 	rdctl	r2,status
  81006c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810070:	e0fffe17 	ldw	r3,-8(fp)
  810074:	00bfff84 	movi	r2,-2
  810078:	1884703a 	and	r2,r3,r2
  81007c:	1001703a 	wrctl	status,r2
  return context;
  810080:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  810084:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  810088:	00c00044 	movi	r3,1
  81008c:	e0bfff17 	ldw	r2,-4(fp)
  810090:	1884983a 	sll	r2,r3,r2
  810094:	1007883a 	mov	r3,r2
  810098:	d0a71817 	ldw	r2,-25504(gp)
  81009c:	1884b03a 	or	r2,r3,r2
  8100a0:	d0a71815 	stw	r2,-25504(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8100a4:	d0a71817 	ldw	r2,-25504(gp)
  8100a8:	100170fa 	wrctl	ienable,r2
  8100ac:	e0bffd17 	ldw	r2,-12(fp)
  8100b0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  8100b4:	e0bffc17 	ldw	r2,-16(fp)
  8100b8:	1001703a 	wrctl	status,r2
}
  8100bc:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  8100c0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  8100c4:	e037883a 	mov	sp,fp
  8100c8:	df000017 	ldw	fp,0(sp)
  8100cc:	dec00104 	addi	sp,sp,4
  8100d0:	f800283a 	ret

008100d4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  8100d4:	defff904 	addi	sp,sp,-28
  8100d8:	df000615 	stw	fp,24(sp)
  8100dc:	df000604 	addi	fp,sp,24
  8100e0:	e13ffb15 	stw	r4,-20(fp)
  8100e4:	e17ffa15 	stw	r5,-24(fp)
  8100e8:	e0bffa17 	ldw	r2,-24(fp)
  8100ec:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  8100f0:	0005303a 	rdctl	r2,status
  8100f4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8100f8:	e0fffe17 	ldw	r3,-8(fp)
  8100fc:	00bfff84 	movi	r2,-2
  810100:	1884703a 	and	r2,r3,r2
  810104:	1001703a 	wrctl	status,r2
  return context;
  810108:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
  81010c:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
  810110:	00c00044 	movi	r3,1
  810114:	e0bfff17 	ldw	r2,-4(fp)
  810118:	1884983a 	sll	r2,r3,r2
  81011c:	0084303a 	nor	r2,zero,r2
  810120:	1007883a 	mov	r3,r2
  810124:	d0a71817 	ldw	r2,-25504(gp)
  810128:	1884703a 	and	r2,r3,r2
  81012c:	d0a71815 	stw	r2,-25504(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  810130:	d0a71817 	ldw	r2,-25504(gp)
  810134:	100170fa 	wrctl	ienable,r2
  810138:	e0bffd17 	ldw	r2,-12(fp)
  81013c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  810140:	e0bffc17 	ldw	r2,-16(fp)
  810144:	1001703a 	wrctl	status,r2
}
  810148:	0001883a 	nop
  return 0;
  81014c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  810150:	e037883a 	mov	sp,fp
  810154:	df000017 	ldw	fp,0(sp)
  810158:	dec00104 	addi	sp,sp,4
  81015c:	f800283a 	ret

00810160 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  810160:	defffc04 	addi	sp,sp,-16
  810164:	df000315 	stw	fp,12(sp)
  810168:	df000304 	addi	fp,sp,12
  81016c:	e13ffe15 	stw	r4,-8(fp)
  810170:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  810174:	000530fa 	rdctl	r2,ienable
  810178:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  81017c:	00c00044 	movi	r3,1
  810180:	e0bffd17 	ldw	r2,-12(fp)
  810184:	1884983a 	sll	r2,r3,r2
  810188:	1007883a 	mov	r3,r2
  81018c:	e0bfff17 	ldw	r2,-4(fp)
  810190:	1884703a 	and	r2,r3,r2
  810194:	1004c03a 	cmpne	r2,r2,zero
  810198:	10803fcc 	andi	r2,r2,255
}
  81019c:	e037883a 	mov	sp,fp
  8101a0:	df000017 	ldw	fp,0(sp)
  8101a4:	dec00104 	addi	sp,sp,4
  8101a8:	f800283a 	ret

008101ac <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  8101ac:	defff504 	addi	sp,sp,-44
  8101b0:	dfc00a15 	stw	ra,40(sp)
  8101b4:	df000915 	stw	fp,36(sp)
  8101b8:	df000904 	addi	fp,sp,36
  8101bc:	e13ffa15 	stw	r4,-24(fp)
  8101c0:	e17ff915 	stw	r5,-28(fp)
  8101c4:	e1bff815 	stw	r6,-32(fp)
  8101c8:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
  8101cc:	00bffa84 	movi	r2,-22
  8101d0:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  8101d4:	e0bff917 	ldw	r2,-28(fp)
  8101d8:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  8101dc:	e0bffe17 	ldw	r2,-8(fp)
  8101e0:	10800808 	cmpgei	r2,r2,32
  8101e4:	1000251e 	bne	r2,zero,81027c <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
  8101e8:	0005303a 	rdctl	r2,status
  8101ec:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8101f0:	e0fffc17 	ldw	r3,-16(fp)
  8101f4:	00bfff84 	movi	r2,-2
  8101f8:	1884703a 	and	r2,r3,r2
  8101fc:	1001703a 	wrctl	status,r2
  return context;
  810200:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  810204:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
  810208:	e0bffe17 	ldw	r2,-8(fp)
  81020c:	100890fa 	slli	r4,r2,3
  810210:	e0fff817 	ldw	r3,-32(fp)
  810214:	00802074 	movhi	r2,129
  810218:	2085883a 	add	r2,r4,r2
  81021c:	10d2d415 	stw	r3,19280(r2)
    alt_irq[id].context = isr_context;
  810220:	e0bffe17 	ldw	r2,-8(fp)
  810224:	100890fa 	slli	r4,r2,3
  810228:	e0fff717 	ldw	r3,-36(fp)
  81022c:	00802074 	movhi	r2,129
  810230:	2085883a 	add	r2,r4,r2
  810234:	10d2d515 	stw	r3,19284(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  810238:	e0bff817 	ldw	r2,-32(fp)
  81023c:	10000526 	beq	r2,zero,810254 <alt_iic_isr_register+0xa8>
  810240:	e0bffe17 	ldw	r2,-8(fp)
  810244:	100b883a 	mov	r5,r2
  810248:	e13ffa17 	ldw	r4,-24(fp)
  81024c:	081004c0 	call	81004c <alt_ic_irq_enable>
  810250:	00000406 	br	810264 <alt_iic_isr_register+0xb8>
  810254:	e0bffe17 	ldw	r2,-8(fp)
  810258:	100b883a 	mov	r5,r2
  81025c:	e13ffa17 	ldw	r4,-24(fp)
  810260:	08100d40 	call	8100d4 <alt_ic_irq_disable>
  810264:	e0bfff15 	stw	r2,-4(fp)
  810268:	e0bffd17 	ldw	r2,-12(fp)
  81026c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  810270:	e0bffb17 	ldw	r2,-20(fp)
  810274:	1001703a 	wrctl	status,r2
}
  810278:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
  81027c:	e0bfff17 	ldw	r2,-4(fp)
}
  810280:	e037883a 	mov	sp,fp
  810284:	dfc00117 	ldw	ra,4(sp)
  810288:	df000017 	ldw	fp,0(sp)
  81028c:	dec00204 	addi	sp,sp,8
  810290:	f800283a 	ret

00810294 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  810294:	defff904 	addi	sp,sp,-28
  810298:	dfc00615 	stw	ra,24(sp)
  81029c:	df000515 	stw	fp,20(sp)
  8102a0:	df000504 	addi	fp,sp,20
  8102a4:	e13ffe15 	stw	r4,-8(fp)
  8102a8:	e17ffd15 	stw	r5,-12(fp)
  8102ac:	e1bffc15 	stw	r6,-16(fp)
  8102b0:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  8102b4:	e1bffb17 	ldw	r6,-20(fp)
  8102b8:	e17ffc17 	ldw	r5,-16(fp)
  8102bc:	e13ffd17 	ldw	r4,-12(fp)
  8102c0:	08104fc0 	call	8104fc <open>
  8102c4:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  8102c8:	e0bfff17 	ldw	r2,-4(fp)
  8102cc:	10002016 	blt	r2,zero,810350 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
  8102d0:	e0ffff17 	ldw	r3,-4(fp)
  8102d4:	1805883a 	mov	r2,r3
  8102d8:	1085883a 	add	r2,r2,r2
  8102dc:	10c5883a 	add	r2,r2,r3
  8102e0:	100490ba 	slli	r2,r2,2
  8102e4:	00c02074 	movhi	r3,129
  8102e8:	10c7883a 	add	r3,r2,r3
  8102ec:	18c73817 	ldw	r3,7392(r3)
  8102f0:	e0bffe17 	ldw	r2,-8(fp)
  8102f4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  8102f8:	e0ffff17 	ldw	r3,-4(fp)
  8102fc:	1805883a 	mov	r2,r3
  810300:	1085883a 	add	r2,r2,r2
  810304:	10c5883a 	add	r2,r2,r3
  810308:	100490ba 	slli	r2,r2,2
  81030c:	00c02074 	movhi	r3,129
  810310:	10c7883a 	add	r3,r2,r3
  810314:	18c73917 	ldw	r3,7396(r3)
  810318:	e0bffe17 	ldw	r2,-8(fp)
  81031c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  810320:	e0ffff17 	ldw	r3,-4(fp)
  810324:	1805883a 	mov	r2,r3
  810328:	1085883a 	add	r2,r2,r2
  81032c:	10c5883a 	add	r2,r2,r3
  810330:	100490ba 	slli	r2,r2,2
  810334:	00c02074 	movhi	r3,129
  810338:	10c7883a 	add	r3,r2,r3
  81033c:	18c73a17 	ldw	r3,7400(r3)
  810340:	e0bffe17 	ldw	r2,-8(fp)
  810344:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  810348:	e13fff17 	ldw	r4,-4(fp)
  81034c:	080eb8c0 	call	80eb8c <alt_release_fd>
  }
} 
  810350:	0001883a 	nop
  810354:	e037883a 	mov	sp,fp
  810358:	dfc00117 	ldw	ra,4(sp)
  81035c:	df000017 	ldw	fp,0(sp)
  810360:	dec00204 	addi	sp,sp,8
  810364:	f800283a 	ret

00810368 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  810368:	defffb04 	addi	sp,sp,-20
  81036c:	dfc00415 	stw	ra,16(sp)
  810370:	df000315 	stw	fp,12(sp)
  810374:	df000304 	addi	fp,sp,12
  810378:	e13fff15 	stw	r4,-4(fp)
  81037c:	e17ffe15 	stw	r5,-8(fp)
  810380:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  810384:	01c07fc4 	movi	r7,511
  810388:	01800044 	movi	r6,1
  81038c:	e17fff17 	ldw	r5,-4(fp)
  810390:	01002074 	movhi	r4,129
  810394:	21073b04 	addi	r4,r4,7404
  810398:	08102940 	call	810294 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  81039c:	01c07fc4 	movi	r7,511
  8103a0:	000d883a 	mov	r6,zero
  8103a4:	e17ffe17 	ldw	r5,-8(fp)
  8103a8:	01002074 	movhi	r4,129
  8103ac:	21073804 	addi	r4,r4,7392
  8103b0:	08102940 	call	810294 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  8103b4:	01c07fc4 	movi	r7,511
  8103b8:	01800044 	movi	r6,1
  8103bc:	e17ffd17 	ldw	r5,-12(fp)
  8103c0:	01002074 	movhi	r4,129
  8103c4:	21073e04 	addi	r4,r4,7416
  8103c8:	08102940 	call	810294 <alt_open_fd>
}  
  8103cc:	0001883a 	nop
  8103d0:	e037883a 	mov	sp,fp
  8103d4:	dfc00117 	ldw	ra,4(sp)
  8103d8:	df000017 	ldw	fp,0(sp)
  8103dc:	dec00204 	addi	sp,sp,8
  8103e0:	f800283a 	ret

008103e4 <alt_get_errno>:
{
  8103e4:	defffe04 	addi	sp,sp,-8
  8103e8:	dfc00115 	stw	ra,4(sp)
  8103ec:	df000015 	stw	fp,0(sp)
  8103f0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8103f4:	d0a00e17 	ldw	r2,-32712(gp)
  8103f8:	10000326 	beq	r2,zero,810408 <alt_get_errno+0x24>
  8103fc:	d0a00e17 	ldw	r2,-32712(gp)
  810400:	103ee83a 	callr	r2
  810404:	00000106 	br	81040c <alt_get_errno+0x28>
  810408:	d0a71104 	addi	r2,gp,-25532
}
  81040c:	e037883a 	mov	sp,fp
  810410:	dfc00117 	ldw	ra,4(sp)
  810414:	df000017 	ldw	fp,0(sp)
  810418:	dec00204 	addi	sp,sp,8
  81041c:	f800283a 	ret

00810420 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  810420:	defffd04 	addi	sp,sp,-12
  810424:	df000215 	stw	fp,8(sp)
  810428:	df000204 	addi	fp,sp,8
  81042c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  810430:	e0bffe17 	ldw	r2,-8(fp)
  810434:	10800217 	ldw	r2,8(r2)
  810438:	10d00034 	orhi	r3,r2,16384
  81043c:	e0bffe17 	ldw	r2,-8(fp)
  810440:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  810444:	e03fff15 	stw	zero,-4(fp)
  810448:	00002306 	br	8104d8 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  81044c:	e0ffff17 	ldw	r3,-4(fp)
  810450:	1805883a 	mov	r2,r3
  810454:	1085883a 	add	r2,r2,r2
  810458:	10c5883a 	add	r2,r2,r3
  81045c:	100490ba 	slli	r2,r2,2
  810460:	00c02074 	movhi	r3,129
  810464:	10c7883a 	add	r3,r2,r3
  810468:	18c73817 	ldw	r3,7392(r3)
  81046c:	e0bffe17 	ldw	r2,-8(fp)
  810470:	10800017 	ldw	r2,0(r2)
  810474:	1880151e 	bne	r3,r2,8104cc <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  810478:	e0ffff17 	ldw	r3,-4(fp)
  81047c:	1805883a 	mov	r2,r3
  810480:	1085883a 	add	r2,r2,r2
  810484:	10c5883a 	add	r2,r2,r3
  810488:	100490ba 	slli	r2,r2,2
  81048c:	00c02074 	movhi	r3,129
  810490:	10c7883a 	add	r3,r2,r3
  810494:	18873a17 	ldw	r2,7400(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
  810498:	10000c0e 	bge	r2,zero,8104cc <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
  81049c:	e0ffff17 	ldw	r3,-4(fp)
  8104a0:	1805883a 	mov	r2,r3
  8104a4:	1085883a 	add	r2,r2,r2
  8104a8:	10c5883a 	add	r2,r2,r3
  8104ac:	100490ba 	slli	r2,r2,2
  8104b0:	00c02074 	movhi	r3,129
  8104b4:	18c73804 	addi	r3,r3,7392
  8104b8:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  8104bc:	e0fffe17 	ldw	r3,-8(fp)
  8104c0:	18800226 	beq	r3,r2,8104cc <alt_file_locked+0xac>
    {
      return -EACCES;
  8104c4:	00bffcc4 	movi	r2,-13
  8104c8:	00000806 	br	8104ec <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
  8104cc:	e0bfff17 	ldw	r2,-4(fp)
  8104d0:	10800044 	addi	r2,r2,1
  8104d4:	e0bfff15 	stw	r2,-4(fp)
  8104d8:	d0a00d17 	ldw	r2,-32716(gp)
  8104dc:	1007883a 	mov	r3,r2
  8104e0:	e0bfff17 	ldw	r2,-4(fp)
  8104e4:	18bfd92e 	bgeu	r3,r2,81044c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  8104e8:	0005883a 	mov	r2,zero
}
  8104ec:	e037883a 	mov	sp,fp
  8104f0:	df000017 	ldw	fp,0(sp)
  8104f4:	dec00104 	addi	sp,sp,4
  8104f8:	f800283a 	ret

008104fc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  8104fc:	defff604 	addi	sp,sp,-40
  810500:	dfc00915 	stw	ra,36(sp)
  810504:	df000815 	stw	fp,32(sp)
  810508:	df000804 	addi	fp,sp,32
  81050c:	e13ffa15 	stw	r4,-24(fp)
  810510:	e17ff915 	stw	r5,-28(fp)
  810514:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  810518:	00bfffc4 	movi	r2,-1
  81051c:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  810520:	00bffb44 	movi	r2,-19
  810524:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  810528:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  81052c:	d1600b04 	addi	r5,gp,-32724
  810530:	e13ffa17 	ldw	r4,-24(fp)
  810534:	08106800 	call	810680 <alt_find_dev>
  810538:	e0bfff15 	stw	r2,-4(fp)
  81053c:	e0bfff17 	ldw	r2,-4(fp)
  810540:	1000051e 	bne	r2,zero,810558 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  810544:	e13ffa17 	ldw	r4,-24(fp)
  810548:	08107100 	call	810710 <alt_find_file>
  81054c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  810550:	00800044 	movi	r2,1
  810554:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  810558:	e0bfff17 	ldw	r2,-4(fp)
  81055c:	10002c26 	beq	r2,zero,810610 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  810560:	e13fff17 	ldw	r4,-4(fp)
  810564:	08108180 	call	810818 <alt_get_fd>
  810568:	e0bffe15 	stw	r2,-8(fp)
  81056c:	e0bffe17 	ldw	r2,-8(fp)
  810570:	1000030e 	bge	r2,zero,810580 <open+0x84>
    {
      status = index;
  810574:	e0bffe17 	ldw	r2,-8(fp)
  810578:	e0bffd15 	stw	r2,-12(fp)
  81057c:	00002606 	br	810618 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  810580:	e0fffe17 	ldw	r3,-8(fp)
  810584:	1805883a 	mov	r2,r3
  810588:	1085883a 	add	r2,r2,r2
  81058c:	10c5883a 	add	r2,r2,r3
  810590:	100490ba 	slli	r2,r2,2
  810594:	00c02074 	movhi	r3,129
  810598:	18c73804 	addi	r3,r3,7392
  81059c:	10c5883a 	add	r2,r2,r3
  8105a0:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  8105a4:	e0fff917 	ldw	r3,-28(fp)
  8105a8:	00900034 	movhi	r2,16384
  8105ac:	10bfffc4 	addi	r2,r2,-1
  8105b0:	1886703a 	and	r3,r3,r2
  8105b4:	e0bffb17 	ldw	r2,-20(fp)
  8105b8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  8105bc:	e0bffc17 	ldw	r2,-16(fp)
  8105c0:	1000051e 	bne	r2,zero,8105d8 <open+0xdc>
  8105c4:	e13ffb17 	ldw	r4,-20(fp)
  8105c8:	08104200 	call	810420 <alt_file_locked>
  8105cc:	e0bffd15 	stw	r2,-12(fp)
  8105d0:	e0bffd17 	ldw	r2,-12(fp)
  8105d4:	10001016 	blt	r2,zero,810618 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  8105d8:	e0bfff17 	ldw	r2,-4(fp)
  8105dc:	10800317 	ldw	r2,12(r2)
  8105e0:	10000826 	beq	r2,zero,810604 <open+0x108>
  8105e4:	e0bfff17 	ldw	r2,-4(fp)
  8105e8:	10800317 	ldw	r2,12(r2)
  8105ec:	e1fff817 	ldw	r7,-32(fp)
  8105f0:	e1bff917 	ldw	r6,-28(fp)
  8105f4:	e17ffa17 	ldw	r5,-24(fp)
  8105f8:	e13ffb17 	ldw	r4,-20(fp)
  8105fc:	103ee83a 	callr	r2
  810600:	00000106 	br	810608 <open+0x10c>
  810604:	0005883a 	mov	r2,zero
  810608:	e0bffd15 	stw	r2,-12(fp)
  81060c:	00000206 	br	810618 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  810610:	00bffb44 	movi	r2,-19
  810614:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  810618:	e0bffd17 	ldw	r2,-12(fp)
  81061c:	1000090e 	bge	r2,zero,810644 <open+0x148>
  {
    alt_release_fd (index);  
  810620:	e13ffe17 	ldw	r4,-8(fp)
  810624:	080eb8c0 	call	80eb8c <alt_release_fd>
    ALT_ERRNO = -status;
  810628:	08103e40 	call	8103e4 <alt_get_errno>
  81062c:	1007883a 	mov	r3,r2
  810630:	e0bffd17 	ldw	r2,-12(fp)
  810634:	0085c83a 	sub	r2,zero,r2
  810638:	18800015 	stw	r2,0(r3)
    return -1;
  81063c:	00bfffc4 	movi	r2,-1
  810640:	00000106 	br	810648 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  810644:	e0bffe17 	ldw	r2,-8(fp)
}
  810648:	e037883a 	mov	sp,fp
  81064c:	dfc00117 	ldw	ra,4(sp)
  810650:	df000017 	ldw	fp,0(sp)
  810654:	dec00204 	addi	sp,sp,8
  810658:	f800283a 	ret

0081065c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  81065c:	deffff04 	addi	sp,sp,-4
  810660:	df000015 	stw	fp,0(sp)
  810664:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  810668:	000170fa 	wrctl	ienable,zero
}
  81066c:	0001883a 	nop
  810670:	e037883a 	mov	sp,fp
  810674:	df000017 	ldw	fp,0(sp)
  810678:	dec00104 	addi	sp,sp,4
  81067c:	f800283a 	ret

00810680 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  810680:	defffa04 	addi	sp,sp,-24
  810684:	dfc00515 	stw	ra,20(sp)
  810688:	df000415 	stw	fp,16(sp)
  81068c:	df000404 	addi	fp,sp,16
  810690:	e13ffd15 	stw	r4,-12(fp)
  810694:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  810698:	e0bffc17 	ldw	r2,-16(fp)
  81069c:	10800017 	ldw	r2,0(r2)
  8106a0:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  8106a4:	e13ffd17 	ldw	r4,-12(fp)
  8106a8:	08016700 	call	801670 <strlen>
  8106ac:	10800044 	addi	r2,r2,1
  8106b0:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  8106b4:	00000d06 	br	8106ec <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  8106b8:	e0bfff17 	ldw	r2,-4(fp)
  8106bc:	10800217 	ldw	r2,8(r2)
  8106c0:	e0fffe17 	ldw	r3,-8(fp)
  8106c4:	180d883a 	mov	r6,r3
  8106c8:	e17ffd17 	ldw	r5,-12(fp)
  8106cc:	1009883a 	mov	r4,r2
  8106d0:	0810a400 	call	810a40 <memcmp>
  8106d4:	1000021e 	bne	r2,zero,8106e0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  8106d8:	e0bfff17 	ldw	r2,-4(fp)
  8106dc:	00000706 	br	8106fc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  8106e0:	e0bfff17 	ldw	r2,-4(fp)
  8106e4:	10800017 	ldw	r2,0(r2)
  8106e8:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  8106ec:	e0ffff17 	ldw	r3,-4(fp)
  8106f0:	e0bffc17 	ldw	r2,-16(fp)
  8106f4:	18bff01e 	bne	r3,r2,8106b8 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  8106f8:	0005883a 	mov	r2,zero
}
  8106fc:	e037883a 	mov	sp,fp
  810700:	dfc00117 	ldw	ra,4(sp)
  810704:	df000017 	ldw	fp,0(sp)
  810708:	dec00204 	addi	sp,sp,8
  81070c:	f800283a 	ret

00810710 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  810710:	defffb04 	addi	sp,sp,-20
  810714:	dfc00415 	stw	ra,16(sp)
  810718:	df000315 	stw	fp,12(sp)
  81071c:	df000304 	addi	fp,sp,12
  810720:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  810724:	d0a00917 	ldw	r2,-32732(gp)
  810728:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81072c:	00003106 	br	8107f4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  810730:	e0bfff17 	ldw	r2,-4(fp)
  810734:	10800217 	ldw	r2,8(r2)
  810738:	1009883a 	mov	r4,r2
  81073c:	08016700 	call	801670 <strlen>
  810740:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  810744:	e0bfff17 	ldw	r2,-4(fp)
  810748:	10c00217 	ldw	r3,8(r2)
  81074c:	e0bffe17 	ldw	r2,-8(fp)
  810750:	10bfffc4 	addi	r2,r2,-1
  810754:	1885883a 	add	r2,r3,r2
  810758:	10800003 	ldbu	r2,0(r2)
  81075c:	10803fcc 	andi	r2,r2,255
  810760:	1080201c 	xori	r2,r2,128
  810764:	10bfe004 	addi	r2,r2,-128
  810768:	10800bd8 	cmpnei	r2,r2,47
  81076c:	1000031e 	bne	r2,zero,81077c <alt_find_file+0x6c>
    {
      len -= 1;
  810770:	e0bffe17 	ldw	r2,-8(fp)
  810774:	10bfffc4 	addi	r2,r2,-1
  810778:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81077c:	e0bffe17 	ldw	r2,-8(fp)
  810780:	e0fffd17 	ldw	r3,-12(fp)
  810784:	1885883a 	add	r2,r3,r2
  810788:	10800003 	ldbu	r2,0(r2)
  81078c:	10803fcc 	andi	r2,r2,255
  810790:	1080201c 	xori	r2,r2,128
  810794:	10bfe004 	addi	r2,r2,-128
  810798:	10800be0 	cmpeqi	r2,r2,47
  81079c:	1000081e 	bne	r2,zero,8107c0 <alt_find_file+0xb0>
  8107a0:	e0bffe17 	ldw	r2,-8(fp)
  8107a4:	e0fffd17 	ldw	r3,-12(fp)
  8107a8:	1885883a 	add	r2,r3,r2
  8107ac:	10800003 	ldbu	r2,0(r2)
  8107b0:	10803fcc 	andi	r2,r2,255
  8107b4:	1080201c 	xori	r2,r2,128
  8107b8:	10bfe004 	addi	r2,r2,-128
  8107bc:	10000a1e 	bne	r2,zero,8107e8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  8107c0:	e0bfff17 	ldw	r2,-4(fp)
  8107c4:	10800217 	ldw	r2,8(r2)
  8107c8:	e0fffe17 	ldw	r3,-8(fp)
  8107cc:	180d883a 	mov	r6,r3
  8107d0:	e17ffd17 	ldw	r5,-12(fp)
  8107d4:	1009883a 	mov	r4,r2
  8107d8:	0810a400 	call	810a40 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  8107dc:	1000021e 	bne	r2,zero,8107e8 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  8107e0:	e0bfff17 	ldw	r2,-4(fp)
  8107e4:	00000706 	br	810804 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  8107e8:	e0bfff17 	ldw	r2,-4(fp)
  8107ec:	10800017 	ldw	r2,0(r2)
  8107f0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  8107f4:	e0ffff17 	ldw	r3,-4(fp)
  8107f8:	d0a00904 	addi	r2,gp,-32732
  8107fc:	18bfcc1e 	bne	r3,r2,810730 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  810800:	0005883a 	mov	r2,zero
}
  810804:	e037883a 	mov	sp,fp
  810808:	dfc00117 	ldw	ra,4(sp)
  81080c:	df000017 	ldw	fp,0(sp)
  810810:	dec00204 	addi	sp,sp,8
  810814:	f800283a 	ret

00810818 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  810818:	defffc04 	addi	sp,sp,-16
  81081c:	df000315 	stw	fp,12(sp)
  810820:	df000304 	addi	fp,sp,12
  810824:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  810828:	00bffa04 	movi	r2,-24
  81082c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  810830:	e03fff15 	stw	zero,-4(fp)
  810834:	00001d06 	br	8108ac <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  810838:	e0ffff17 	ldw	r3,-4(fp)
  81083c:	1805883a 	mov	r2,r3
  810840:	1085883a 	add	r2,r2,r2
  810844:	10c5883a 	add	r2,r2,r3
  810848:	100490ba 	slli	r2,r2,2
  81084c:	00c02074 	movhi	r3,129
  810850:	10c7883a 	add	r3,r2,r3
  810854:	18873817 	ldw	r2,7392(r3)
  810858:	1000111e 	bne	r2,zero,8108a0 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  81085c:	e0ffff17 	ldw	r3,-4(fp)
  810860:	1805883a 	mov	r2,r3
  810864:	1085883a 	add	r2,r2,r2
  810868:	10c5883a 	add	r2,r2,r3
  81086c:	100490ba 	slli	r2,r2,2
  810870:	e13ffd17 	ldw	r4,-12(fp)
  810874:	00c02074 	movhi	r3,129
  810878:	10c7883a 	add	r3,r2,r3
  81087c:	19073815 	stw	r4,7392(r3)
      if (i > alt_max_fd)
  810880:	d0e00d17 	ldw	r3,-32716(gp)
  810884:	e0bfff17 	ldw	r2,-4(fp)
  810888:	1880020e 	bge	r3,r2,810894 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  81088c:	e0bfff17 	ldw	r2,-4(fp)
  810890:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
  810894:	e0bfff17 	ldw	r2,-4(fp)
  810898:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  81089c:	00000706 	br	8108bc <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
  8108a0:	e0bfff17 	ldw	r2,-4(fp)
  8108a4:	10800044 	addi	r2,r2,1
  8108a8:	e0bfff15 	stw	r2,-4(fp)
  8108ac:	e0bfff17 	ldw	r2,-4(fp)
  8108b0:	10800810 	cmplti	r2,r2,32
  8108b4:	103fe01e 	bne	r2,zero,810838 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  8108b8:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  8108bc:	e0bffe17 	ldw	r2,-8(fp)
}
  8108c0:	e037883a 	mov	sp,fp
  8108c4:	df000017 	ldw	fp,0(sp)
  8108c8:	dec00104 	addi	sp,sp,4
  8108cc:	f800283a 	ret

008108d0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  8108d0:	defffb04 	addi	sp,sp,-20
  8108d4:	df000415 	stw	fp,16(sp)
  8108d8:	df000404 	addi	fp,sp,16
  8108dc:	e13ffd15 	stw	r4,-12(fp)
  8108e0:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  8108e4:	e0bffc17 	ldw	r2,-16(fp)
  8108e8:	10820070 	cmpltui	r2,r2,2049
  8108ec:	1000021e 	bne	r2,zero,8108f8 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  8108f0:	00820004 	movi	r2,2048
  8108f4:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
  8108f8:	e0fffd17 	ldw	r3,-12(fp)
  8108fc:	e0bffc17 	ldw	r2,-16(fp)
  810900:	1885883a 	add	r2,r3,r2
  810904:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810908:	e0bffd17 	ldw	r2,-12(fp)
  81090c:	e0bfff15 	stw	r2,-4(fp)
  810910:	00000506 	br	810928 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  810914:	e0bfff17 	ldw	r2,-4(fp)
  810918:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81091c:	e0bfff17 	ldw	r2,-4(fp)
  810920:	10800804 	addi	r2,r2,32
  810924:	e0bfff15 	stw	r2,-4(fp)
  810928:	e0ffff17 	ldw	r3,-4(fp)
  81092c:	e0bffe17 	ldw	r2,-8(fp)
  810930:	18bff836 	bltu	r3,r2,810914 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  810934:	e0bffd17 	ldw	r2,-12(fp)
  810938:	108007cc 	andi	r2,r2,31
  81093c:	10000226 	beq	r2,zero,810948 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  810940:	e0bfff17 	ldw	r2,-4(fp)
  810944:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  810948:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  81094c:	0001883a 	nop
  810950:	e037883a 	mov	sp,fp
  810954:	df000017 	ldw	fp,0(sp)
  810958:	dec00104 	addi	sp,sp,4
  81095c:	f800283a 	ret

00810960 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  810960:	defffe04 	addi	sp,sp,-8
  810964:	df000115 	stw	fp,4(sp)
  810968:	df000104 	addi	fp,sp,4
  81096c:	e13fff15 	stw	r4,-4(fp)
  810970:	e0bfff17 	ldw	r2,-4(fp)
  810974:	10bffe84 	addi	r2,r2,-6
  810978:	10c00428 	cmpgeui	r3,r2,16
  81097c:	1800191e 	bne	r3,zero,8109e4 <alt_exception_cause_generated_bad_addr+0x84>
  810980:	100690ba 	slli	r3,r2,2
  810984:	00802074 	movhi	r2,129
  810988:	1885883a 	add	r2,r3,r2
  81098c:	10826517 	ldw	r2,2452(r2)
  810990:	1000683a 	jmp	r2
  810994:	008109d4 	movui	r2,1063
  810998:	008109d4 	movui	r2,1063
  81099c:	008109e4 	muli	r2,zero,1063
  8109a0:	008109e4 	muli	r2,zero,1063
  8109a4:	008109e4 	muli	r2,zero,1063
  8109a8:	008109d4 	movui	r2,1063
  8109ac:	008109dc 	xori	r2,zero,1063
  8109b0:	008109e4 	muli	r2,zero,1063
  8109b4:	008109d4 	movui	r2,1063
  8109b8:	008109d4 	movui	r2,1063
  8109bc:	008109e4 	muli	r2,zero,1063
  8109c0:	008109d4 	movui	r2,1063
  8109c4:	008109dc 	xori	r2,zero,1063
  8109c8:	008109e4 	muli	r2,zero,1063
  8109cc:	008109e4 	muli	r2,zero,1063
  8109d0:	008109d4 	movui	r2,1063
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  8109d4:	00800044 	movi	r2,1
  8109d8:	00000306 	br	8109e8 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  8109dc:	0005883a 	mov	r2,zero
  8109e0:	00000106 	br	8109e8 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  8109e4:	0005883a 	mov	r2,zero
  }
}
  8109e8:	e037883a 	mov	sp,fp
  8109ec:	df000017 	ldw	fp,0(sp)
  8109f0:	dec00104 	addi	sp,sp,4
  8109f4:	f800283a 	ret

008109f8 <atexit>:
  8109f8:	200b883a 	mov	r5,r4
  8109fc:	000f883a 	mov	r7,zero
  810a00:	000d883a 	mov	r6,zero
  810a04:	0009883a 	mov	r4,zero
  810a08:	0810ab81 	jmpi	810ab8 <__register_exitproc>

00810a0c <exit>:
  810a0c:	defffe04 	addi	sp,sp,-8
  810a10:	000b883a 	mov	r5,zero
  810a14:	dc000015 	stw	r16,0(sp)
  810a18:	dfc00115 	stw	ra,4(sp)
  810a1c:	2021883a 	mov	r16,r4
  810a20:	0810b480 	call	810b48 <__call_exitprocs>
  810a24:	00802074 	movhi	r2,129
  810a28:	110bb517 	ldw	r4,11988(r2)
  810a2c:	20800f17 	ldw	r2,60(r4)
  810a30:	10000126 	beq	r2,zero,810a38 <exit+0x2c>
  810a34:	103ee83a 	callr	r2
  810a38:	8009883a 	mov	r4,r16
  810a3c:	080e3d80 	call	80e3d8 <_exit>

00810a40 <memcmp>:
  810a40:	30800130 	cmpltui	r2,r6,4
  810a44:	10000b1e 	bne	r2,zero,810a74 <memcmp+0x34>
  810a48:	2144b03a 	or	r2,r4,r5
  810a4c:	108000cc 	andi	r2,r2,3
  810a50:	1000171e 	bne	r2,zero,810ab0 <memcmp+0x70>
  810a54:	20c00017 	ldw	r3,0(r4)
  810a58:	28800017 	ldw	r2,0(r5)
  810a5c:	1880141e 	bne	r3,r2,810ab0 <memcmp+0x70>
  810a60:	31bfff04 	addi	r6,r6,-4
  810a64:	30800128 	cmpgeui	r2,r6,4
  810a68:	21000104 	addi	r4,r4,4
  810a6c:	29400104 	addi	r5,r5,4
  810a70:	103ff81e 	bne	r2,zero,810a54 <memcmp+0x14>
  810a74:	30bfffc4 	addi	r2,r6,-1
  810a78:	30000b26 	beq	r6,zero,810aa8 <memcmp+0x68>
  810a7c:	11800044 	addi	r6,r2,1
  810a80:	298d883a 	add	r6,r5,r6
  810a84:	00000106 	br	810a8c <memcmp+0x4c>
  810a88:	29800726 	beq	r5,r6,810aa8 <memcmp+0x68>
  810a8c:	20800003 	ldbu	r2,0(r4)
  810a90:	28c00003 	ldbu	r3,0(r5)
  810a94:	21000044 	addi	r4,r4,1
  810a98:	29400044 	addi	r5,r5,1
  810a9c:	10fffa26 	beq	r2,r3,810a88 <memcmp+0x48>
  810aa0:	10c5c83a 	sub	r2,r2,r3
  810aa4:	f800283a 	ret
  810aa8:	0005883a 	mov	r2,zero
  810aac:	f800283a 	ret
  810ab0:	30bfffc4 	addi	r2,r6,-1
  810ab4:	003ff106 	br	810a7c <memcmp+0x3c>

00810ab8 <__register_exitproc>:
  810ab8:	00802074 	movhi	r2,129
  810abc:	10cbb517 	ldw	r3,11988(r2)
  810ac0:	18805217 	ldw	r2,328(r3)
  810ac4:	10001726 	beq	r2,zero,810b24 <__register_exitproc+0x6c>
  810ac8:	10c00117 	ldw	r3,4(r2)
  810acc:	1a000808 	cmpgei	r8,r3,32
  810ad0:	40001b1e 	bne	r8,zero,810b40 <__register_exitproc+0x88>
  810ad4:	20000b26 	beq	r4,zero,810b04 <__register_exitproc+0x4c>
  810ad8:	181090ba 	slli	r8,r3,2
  810adc:	02400044 	movi	r9,1
  810ae0:	48d2983a 	sll	r9,r9,r3
  810ae4:	1211883a 	add	r8,r2,r8
  810ae8:	41802215 	stw	r6,136(r8)
  810aec:	11806217 	ldw	r6,392(r2)
  810af0:	21000098 	cmpnei	r4,r4,2
  810af4:	324cb03a 	or	r6,r6,r9
  810af8:	11806215 	stw	r6,392(r2)
  810afc:	41c04215 	stw	r7,264(r8)
  810b00:	20000b26 	beq	r4,zero,810b30 <__register_exitproc+0x78>
  810b04:	19000084 	addi	r4,r3,2
  810b08:	200890ba 	slli	r4,r4,2
  810b0c:	18c00044 	addi	r3,r3,1
  810b10:	10c00115 	stw	r3,4(r2)
  810b14:	1105883a 	add	r2,r2,r4
  810b18:	11400015 	stw	r5,0(r2)
  810b1c:	0005883a 	mov	r2,zero
  810b20:	f800283a 	ret
  810b24:	18805304 	addi	r2,r3,332
  810b28:	18805215 	stw	r2,328(r3)
  810b2c:	003fe606 	br	810ac8 <__register_exitproc+0x10>
  810b30:	11006317 	ldw	r4,396(r2)
  810b34:	2252b03a 	or	r9,r4,r9
  810b38:	12406315 	stw	r9,396(r2)
  810b3c:	003ff106 	br	810b04 <__register_exitproc+0x4c>
  810b40:	00bfffc4 	movi	r2,-1
  810b44:	f800283a 	ret

00810b48 <__call_exitprocs>:
  810b48:	defff704 	addi	sp,sp,-36
  810b4c:	00802074 	movhi	r2,129
  810b50:	dcc00315 	stw	r19,12(sp)
  810b54:	14cbb517 	ldw	r19,11988(r2)
  810b58:	dc800215 	stw	r18,8(sp)
  810b5c:	dfc00815 	stw	ra,32(sp)
  810b60:	9c805217 	ldw	r18,328(r19)
  810b64:	ddc00715 	stw	r23,28(sp)
  810b68:	dd800615 	stw	r22,24(sp)
  810b6c:	dd400515 	stw	r21,20(sp)
  810b70:	dd000415 	stw	r20,16(sp)
  810b74:	dc400115 	stw	r17,4(sp)
  810b78:	dc000015 	stw	r16,0(sp)
  810b7c:	90001026 	beq	r18,zero,810bc0 <__call_exitprocs+0x78>
  810b80:	202b883a 	mov	r21,r4
  810b84:	282d883a 	mov	r22,r5
  810b88:	05000044 	movi	r20,1
  810b8c:	94000117 	ldw	r16,4(r18)
  810b90:	847fffc4 	addi	r17,r16,-1
  810b94:	88000a16 	blt	r17,zero,810bc0 <__call_exitprocs+0x78>
  810b98:	84000044 	addi	r16,r16,1
  810b9c:	802090ba 	slli	r16,r16,2
  810ba0:	9421883a 	add	r16,r18,r16
  810ba4:	b0001126 	beq	r22,zero,810bec <__call_exitprocs+0xa4>
  810ba8:	80804017 	ldw	r2,256(r16)
  810bac:	15800f26 	beq	r2,r22,810bec <__call_exitprocs+0xa4>
  810bb0:	8c7fffc4 	addi	r17,r17,-1
  810bb4:	88bfffd8 	cmpnei	r2,r17,-1
  810bb8:	843fff04 	addi	r16,r16,-4
  810bbc:	103ff91e 	bne	r2,zero,810ba4 <__call_exitprocs+0x5c>
  810bc0:	dfc00817 	ldw	ra,32(sp)
  810bc4:	ddc00717 	ldw	r23,28(sp)
  810bc8:	dd800617 	ldw	r22,24(sp)
  810bcc:	dd400517 	ldw	r21,20(sp)
  810bd0:	dd000417 	ldw	r20,16(sp)
  810bd4:	dcc00317 	ldw	r19,12(sp)
  810bd8:	dc800217 	ldw	r18,8(sp)
  810bdc:	dc400117 	ldw	r17,4(sp)
  810be0:	dc000017 	ldw	r16,0(sp)
  810be4:	dec00904 	addi	sp,sp,36
  810be8:	f800283a 	ret
  810bec:	90800117 	ldw	r2,4(r18)
  810bf0:	81800017 	ldw	r6,0(r16)
  810bf4:	10bfffc4 	addi	r2,r2,-1
  810bf8:	14401726 	beq	r2,r17,810c58 <__call_exitprocs+0x110>
  810bfc:	80000015 	stw	zero,0(r16)
  810c00:	303feb26 	beq	r6,zero,810bb0 <__call_exitprocs+0x68>
  810c04:	a446983a 	sll	r3,r20,r17
  810c08:	90806217 	ldw	r2,392(r18)
  810c0c:	95c00117 	ldw	r23,4(r18)
  810c10:	1884703a 	and	r2,r3,r2
  810c14:	1000081e 	bne	r2,zero,810c38 <__call_exitprocs+0xf0>
  810c18:	303ee83a 	callr	r6
  810c1c:	90c00117 	ldw	r3,4(r18)
  810c20:	98805217 	ldw	r2,328(r19)
  810c24:	1dc0011e 	bne	r3,r23,810c2c <__call_exitprocs+0xe4>
  810c28:	90bfe126 	beq	r18,r2,810bb0 <__call_exitprocs+0x68>
  810c2c:	103fe426 	beq	r2,zero,810bc0 <__call_exitprocs+0x78>
  810c30:	1025883a 	mov	r18,r2
  810c34:	003fd506 	br	810b8c <__call_exitprocs+0x44>
  810c38:	90806317 	ldw	r2,396(r18)
  810c3c:	81002017 	ldw	r4,128(r16)
  810c40:	1886703a 	and	r3,r3,r2
  810c44:	1800061e 	bne	r3,zero,810c60 <__call_exitprocs+0x118>
  810c48:	200b883a 	mov	r5,r4
  810c4c:	a809883a 	mov	r4,r21
  810c50:	303ee83a 	callr	r6
  810c54:	003ff106 	br	810c1c <__call_exitprocs+0xd4>
  810c58:	94400115 	stw	r17,4(r18)
  810c5c:	003fe806 	br	810c00 <__call_exitprocs+0xb8>
  810c60:	303ee83a 	callr	r6
  810c64:	003fed06 	br	810c1c <__call_exitprocs+0xd4>
