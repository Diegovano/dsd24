
task6_fp_mult.elf:     file format elf32-littlenios2
task6_fp_mult.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800238

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x000105d0 memsz 0x000105d0 flags r-x
    LOAD off    0x000115f0 vaddr 0x008105f0 paddr 0x008121c8 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00013da0 vaddr 0x00813da0 paddr 0x00813da0 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fd18  00800238  00800238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006a0  0080ff50  0080ff50  00010f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  008105f0  008121c8  000115f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00813da0  00813da0  00013da0  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00813ef8  00813ef8  000131c8  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000131c8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000010c0  00000000  00000000  000131f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002e285  00000000  00000000  000142b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000b877  00000000  00000000  0004253d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0001762b  00000000  00000000  0004ddb4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002508  00000000  00000000  000653e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00003eb8  00000000  00000000  000678e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001eb71  00000000  00000000  0006b7a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000030  00000000  00000000  0008a314  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000025e0  00000000  00000000  0008a348  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  0008fd22  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0008fd25  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008fd28  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008fd29  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0008fd2a  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0008fd2e  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0008fd32  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0008fd36  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0008fd3f  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0008fd48  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0008fd51  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000038  00000000  00000000  0008fd63  2**0
                  CONTENTS, READONLY
 29 .jdi          00005099  00000000  00000000  0008fd9b  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003d4cf  00000000  00000000  00094e34  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800238 l    d  .text	00000000 .text
0080ff50 l    d  .rodata	00000000 .rodata
008105f0 l    d  .rwdata	00000000 .rwdata
00813da0 l    d  .bss	00000000 .bss
00813ef8 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task6_fp_mult_bsp//obj/HAL/src/crt0.o
00800280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00802bcc l     F .text	000000c0 __sbprintf
00810100 l     O .rodata	00000010 blanks.1
008100f0 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00802df0 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00804a40 l     F .text	00000008 __fp_lock
00804a54 l     F .text	00000008 __fp_unlock
00804a5c l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
008105f0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
008101ac l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807e7c l     F .text	000000f4 __sprint_r.part.0
008092d8 l     F .text	000000c0 __sbprintf
008102e0 l     O .rodata	00000010 blanks.1
008102d0 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00809580 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d648 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d754 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d7b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d8c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0080d9a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080db0c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080dbf8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080ddcc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008121b8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080e014 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080e0c8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080e1fc l     F .text	00000034 alt_dev_reg
00811130 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e4f4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080e700 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080ed44 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080efc4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080f43c l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080f568 l     F .text	0000003c alt_get_errno
0080f5a4 l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00813dcc g     O .bss	00000004 alt_instruction_exception_handler
00807634 g     F .text	00000070 _mprec_log10
00807720 g     F .text	00000060 __any_on
008099d8 g     F .text	00000058 _isatty_r
008101b8 g     O .rodata	00000028 __mprec_tinytens
0080dd08 g     F .text	0000007c alt_main
00800948 g     F .text	000000cc _puts_r
00813df8 g     O .bss	00000100 alt_irq
00809b24 g     F .text	00000064 _lseek_r
008121c8 g       *ABS*	00000000 __flash_rwdata_start
0080c2b4 g     F .text	00000080 .hidden __eqdf2
00813ef8 g       *ABS*	00000000 __alt_heap_start
0080a48c g     F .text	00000060 _kill_r
00800910 g     F .text	00000038 printf
00809e58 g     F .text	0000006c _wcrtomb_r
00809ffc g     F .text	00000098 _signal_r
00807e18 g     F .text	0000005c __sseek
00804d94 g     F .text	00000010 __sinit
00809cf8 g     F .text	00000148 __swbuf_r
00809a30 g     F .text	00000074 _setlocale_r
00804bc4 g     F .text	00000068 __sfmoreglue
0080dda8 g     F .text	00000024 __malloc_unlock
00806404 g     F .text	0000012c memmove
00804d80 g     F .text	00000014 _cleanup
00806620 g     F .text	000000a4 _Balloc
0080c334 g     F .text	000000e8 .hidden __gtdf2
0080f95c g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0080e050 g     F .text	00000078 times
008057ec g     F .text	00000008 __localeconv_l
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809978 g     F .text	00000060 _fstat_r
00813dac g     O .bss	00000004 errno
00807d90 g     F .text	00000008 __seofread
00813db8 g     O .bss	00000004 alt_argv
0081a190 g       *ABS*	00000000 _gp
0080d8a4 g     F .text	00000020 getpid
00810fb0 g     O .rwdata	00000180 alt_fd_list
0080f980 g     F .text	00000090 alt_find_dev
00806304 g     F .text	00000100 memcpy
00804a48 g     F .text	0000000c _cleanup_r
0080d500 g     F .text	000000b8 .hidden __floatsidf
0080f4ec g     F .text	0000007c alt_io_redirect
0080c41c g     F .text	000000e8 .hidden __ltdf2
0080ff50 g       *ABS*	00000000 __DTOR_END__
00800a14 g     F .text	00000010 puts
0080fc48 g     F .text	00000098 alt_exception_cause_generated_bad_addr
0080758c g     F .text	000000a8 __ratio
008092bc g     F .text	0000001c __vfiprintf_internal
0080e8fc g     F .text	00000220 altera_avalon_jtag_uart_read
008008e0 g     F .text	00000030 _printf_r
0080b0a8 g     F .text	00000064 .hidden __udivsi3
0080d900 g     F .text	000000a4 isatty
0080a094 g     F .text	000000c4 _raise_r
00809454 g     F .text	00000064 __assert_func
00810208 g     O .rodata	000000c8 __mprec_tens
0080fbb8 g     F .text	00000090 alt_icache_flush
00813da8 g     O .bss	00000004 __malloc_top_pad
0080a4ec g     F .text	00000004 _getpid_r
008057f4 g     F .text	0000000c _localeconv_r
00806a6c g     F .text	000000b0 __i2b
008051f4 g     F .text	000004b8 __sfvwrite_r
0080a158 g     F .text	000000bc __sigtramp_r
00807ce4 g     F .text	00000058 _sbrk_r
00809bd8 g     F .text	00000064 _read_r
008121b0 g     O .rwdata	00000004 alt_max_fd
00809640 g     F .text	00000070 _fclose_r
008049bc g     F .text	00000084 fflush
00813da4 g     O .bss	00000004 __malloc_max_sbrked_mem
00800790 g     F .text	000000fc .hidden __extendsfdf2
0080b168 g     F .text	000008f0 .hidden __adddf3
00807320 g     F .text	00000108 __b2d
0080aa80 g     F .text	00000534 .hidden __umoddi3
0080dc34 g     F .text	000000d4 lseek
00812190 g     O .rwdata	00000004 _global_impure_ptr
00807780 g     F .text	00000564 _realloc_r
00813ef8 g       *ABS*	00000000 __bss_end
0080f354 g     F .text	000000e8 alt_iic_isr_register
0080f854 g     F .text	00000108 alt_tick
0080a4f0 g     F .text	00000590 .hidden __udivdi3
008098dc g     F .text	00000024 _fputwc_r
008101e0 g     O .rodata	00000028 __mprec_bigtens
00806820 g     F .text	00000138 __s2b
00809f88 g     F .text	00000018 abort
0080d5b8 g     F .text	00000090 .hidden __floatunsidf
00807040 g     F .text	00000058 __mcmp
00804db4 g     F .text	00000014 __fp_lock_all
0080f308 g     F .text	0000004c alt_ic_irq_enabled
0080f7b0 g     F .text	000000a4 alt_alarm_stop
00813dc0 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000c8 alt_irq_handler
00810f88 g     O .rwdata	00000028 alt_dev_null
0080ef78 g     F .text	0000004c alt_dcache_flush_all
00806958 g     F .text	00000064 __hi0bits
0080d480 g     F .text	00000080 .hidden __fixdfsi
008121c8 g       *ABS*	00000000 __ram_rwdata_end
008121a8 g     O .rwdata	00000008 alt_dev_list
0080e104 g     F .text	000000f8 write
008105f0 g       *ABS*	00000000 __ram_rodata_end
0080d7f4 g     F .text	000000b0 fstat
0080d9e0 g     F .text	0000012c kill
0080c41c g     F .text	000000e8 .hidden __ledf2
00806d70 g     F .text	00000148 __pow5mult
00807f88 g     F .text	00001334 ___vfiprintf_internal_r
0080b10c g     F .text	0000005c .hidden __umodsi3
00813ef8 g       *ABS*	00000000 end
0080e434 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
0080ff50 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080edc0 g     F .text	00000084 alt_avalon_timer_sc_init
0080088c g     F .text	00000054 .hidden __clzsi2
0080eb1c g     F .text	00000228 altera_avalon_jtag_uart_write
00804da4 g     F .text	00000004 __sfp_lock_acquire
00806234 g     F .text	000000d0 memchr
00800abc g     F .text	000020f4 ___vfprintf_internal_r
00804ef8 g     F .text	000002fc _free_r
00810444 g     O .rodata	00000180 _ctype_b
00809aa4 g     F .text	0000000c __locale_mb_cur_max
0080fe30 g     F .text	00000120 __call_exitprocs
00812198 g     O .rwdata	00000004 __malloc_sbrk_base
00800238 g     F .text	0000004c _start
00813dc4 g     O .bss	00000004 _alt_tick_rate
00806eb8 g     F .text	00000188 __lshift
00813dc8 g     O .bss	00000004 _alt_nticks
0080a2d0 g     F .text	000000a0 signal
0080de08 g     F .text	000000fc read
0080e26c g     F .text	00000064 alt_sys_init
0080fda0 g     F .text	00000090 __register_exitproc
00806b1c g     F .text	00000254 __multiply
0080e7a0 g     F .text	00000068 altera_avalon_jtag_uart_close
008105f0 g       *ABS*	00000000 __ram_rwdata_start
0080ff50 g       *ABS*	00000000 __ram_rodata_start
00813dd0 g     O .bss	00000028 __malloc_current_mallinfo
00807428 g     F .text	00000164 __d2b
0080e2d0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080fb18 g     F .text	000000a0 alt_get_fd
008093fc g     F .text	00000058 _close_r
0080fd28 g     F .text	00000078 memcmp
0080e390 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00813ef8 g       *ABS*	00000000 __alt_stack_base
0080e3e0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802c8c g     F .text	00000164 __swsetup_r
0080ba58 g     F .text	0000085c .hidden __divdf3
00804c2c g     F .text	00000154 __sfp
008076a4 g     F .text	0000007c __copybits
00810a14 g     O .rwdata	00000408 __malloc_av_
00804db0 g     F .text	00000004 __sinit_lock_release
0080c504 g     F .text	00000674 .hidden __muldf3
00807d3c g     F .text	00000054 __sread
0080fa10 g     F .text	00000108 alt_find_file
0080f000 g     F .text	000000a8 alt_dev_llist_insert
0080dd84 g     F .text	00000024 __malloc_lock
0080df5c g     F .text	000000b8 sbrk
0080495c g     F .text	00000060 _fflush_r
008094cc g     F .text	000000b4 _calloc_r
00813da0 g       *ABS*	00000000 __bss_start
00806530 g     F .text	000000f0 memset
00800284 g     F .text	00000158 main
00813dbc g     O .bss	00000004 alt_envp
00813da0 g     O .bss	00000004 __malloc_max_total_mem
0080e330 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809e40 g     F .text	00000018 __swbuf
00807e74 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
008096b0 g     F .text	00000070 fclose
00802fec g     F .text	00001748 _dtoa_r
00805a54 g     F .text	000007e0 _malloc_r
00809f58 g     F .text	00000030 __ascii_wctomb
008121b4 g     O .rwdata	00000004 alt_errno
00809720 g     F .text	00000020 _fiprintf_r
0080a370 g     F .text	00000060 _init_signal
008056ac g     F .text	00000098 _fwalk
00809b88 g     F .text	0000000c _mbtowc_r
0080afb4 g     F .text	00000080 .hidden __divsi3
00804ddc g     F .text	0000011c _malloc_trim_r
0080ff50 g       *ABS*	00000000 __CTOR_END__
008003dc g     F .text	000003b4 .hidden __mulsf3
00809c3c g     F .text	000000b8 strcmp
0080ff50 g       *ABS*	00000000 __flash_rodata_start
0080ff50 g       *ABS*	00000000 __DTOR_LIST__
0080c2b4 g     F .text	00000080 .hidden __nedf2
0080e230 g     F .text	0000003c alt_irq_init
0080df04 g     F .text	00000058 alt_release_fd
0080ffa8 g     O .rodata	00000100 .hidden __clz_tab
00813db0 g     O .bss	00000004 _PathLocale
0080fce0 g     F .text	00000014 atexit
00809398 g     F .text	00000064 _write_r
00809ab0 g     F .text	00000074 setlocale
00812194 g     O .rwdata	00000004 _impure_ptr
00813db4 g     O .bss	00000004 alt_argc
00804734 g     F .text	00000228 __sflush_r
0080f10c g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
00809b94 g     F .text	00000044 __ascii_mbtowc
008072c4 g     F .text	0000005c __ulp
00804dc8 g     F .text	00000014 __fp_unlock_all
008121a0 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00805800 g     F .text	0000000c localeconv
008059bc g     F .text	00000098 __swhatbuf_r
0080f1a4 g     F .text	00000050 alt_ic_isr_register
008121c8 g       *ABS*	00000000 _edata
00813ef8 g       *ABS*	00000000 _end
00809778 g     F .text	00000164 __fputwc
00800238 g       *ABS*	00000000 __ram_exceptions_end
0080e808 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0080f27c g     F .text	0000008c alt_ic_irq_disable
00807d98 g     F .text	00000080 __swrite
0081219c g     O .rwdata	00000004 __malloc_trim_threshold
0080fcf4 g     F .text	00000034 exit
00809740 g     F .text	00000038 fiprintf
00809cf4 g     F .text	00000004 _vfiprintf_r
00805744 g     F .text	000000a8 _fwalk_reent
00807098 g     F .text	0000022c __mdiff
0080b034 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00804da8 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00810340 g     O .rodata	00000101 _ctype_
0080d42c g     F .text	00000054 .hidden __unorddf2
0080d780 g     F .text	00000038 _exit
0080ee44 g     F .text	00000134 alt_alarm_start
0080580c g     F .text	000001b0 __smakebuf_r
00800a24 g     F .text	00000098 strlen
00809fa0 g     F .text	0000005c _init_signal_r
0080f65c g     F .text	00000154 open
0080c334 g     F .text	000000e8 .hidden __gedf2
008094b8 g     F .text	00000014 __assert
00807f70 g     F .text	00000018 __sprint_r
0080f170 g     F .text	00000034 alt_icache_flush_all
008121bc g     O .rwdata	00000004 alt_priority_mask
0080f1f4 g     F .text	00000088 alt_ic_irq_enable
00802bb0 g     F .text	0000001c __vfprintf_internal
00809f4c g     F .text	0000000c _wctomb_r
0080cb78 g     F .text	000008b4 .hidden __subdf3
008069bc g     F .text	000000b0 __lo0bits
008121c0 g     O .rwdata	00000008 alt_alarm_list
0080f0a8 g     F .text	00000064 _do_ctors
0080a3d0 g     F .text	000000bc __sigtramp
00809ec4 g     F .text	00000088 wcrtomb
0080d684 g     F .text	000000d0 close
00810e1c g     O .rwdata	0000016c __global_locale
0080db74 g     F .text	00000084 alt_load
00809900 g     F .text	00000078 fputwc
0080a214 g     F .text	000000bc raise
00804dac g     F .text	00000004 __sinit_lock_acquire
008066e8 g     F .text	00000138 __multadd
008066c4 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08408e14 	ori	at,at,568
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001c40 	call	8001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0ffff17 	ldw	r3,-4(fp)
  800130:	e0bffe17 	ldw	r2,-8(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001126 	beq	r2,zero,800180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	e0bffd17 	ldw	r2,-12(fp)
  800140:	100690fa 	slli	r3,r2,3
  800144:	00802074 	movhi	r2,129
  800148:	1885883a 	add	r2,r3,r2
  80014c:	10cf7e17 	ldw	r3,15864(r2)
  800150:	e0bffd17 	ldw	r2,-12(fp)
  800154:	100890fa 	slli	r4,r2,3
  800158:	00802074 	movhi	r2,129
  80015c:	2085883a 	add	r2,r4,r2
  800160:	108f7f17 	ldw	r2,15868(r2)
  800164:	1009883a 	mov	r4,r2
  800168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  80016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  800170:	0005313a 	rdctl	r2,ipending
  800174:	e0bffb15 	stw	r2,-20(fp)
  return active;
  800178:	e0bffb17 	ldw	r2,-20(fp)
  80017c:	00000706 	br	80019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
  800180:	e0bffe17 	ldw	r2,-8(fp)
  800184:	1085883a 	add	r2,r2,r2
  800188:	e0bffe15 	stw	r2,-8(fp)
      i++;
  80018c:	e0bffd17 	ldw	r2,-12(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  800198:	003fe406 	br	80012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  80019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  8001a0:	e0bfff17 	ldw	r2,-4(fp)
  8001a4:	103fde1e 	bne	r2,zero,800120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a8:	0001883a 	nop
}
  8001ac:	0001883a 	nop
  8001b0:	e037883a 	mov	sp,fp
  8001b4:	dfc00117 	ldw	ra,4(sp)
  8001b8:	df000017 	ldw	fp,0(sp)
  8001bc:	dec00204 	addi	sp,sp,8
  8001c0:	f800283a 	ret

008001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001c4:	defffb04 	addi	sp,sp,-20
  8001c8:	dfc00415 	stw	ra,16(sp)
  8001cc:	df000315 	stw	fp,12(sp)
  8001d0:	df000304 	addi	fp,sp,12
  8001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001d8:	000531fa 	rdctl	r2,exception
  8001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001e0:	e0bfff17 	ldw	r2,-4(fp)
  8001e4:	1004d0ba 	srli	r2,r2,2
  8001e8:	108007cc 	andi	r2,r2,31
  8001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001f0:	0005333a 	rdctl	r2,badaddr
  8001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001f8:	d0a70f17 	ldw	r2,-25540(gp)
  8001fc:	10000726 	beq	r2,zero,80021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800200:	d0a70f17 	ldw	r2,-25540(gp)
  800204:	e0ffff17 	ldw	r3,-4(fp)
  800208:	e1bffe17 	ldw	r6,-8(fp)
  80020c:	e17ffd17 	ldw	r5,-12(fp)
  800210:	1809883a 	mov	r4,r3
  800214:	103ee83a 	callr	r2
  800218:	00000206 	br	800224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  80021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800220:	0005883a 	mov	r2,zero
}
  800224:	e037883a 	mov	sp,fp
  800228:	dfc00117 	ldw	ra,4(sp)
  80022c:	df000017 	ldw	fp,0(sp)
  800230:	dec00204 	addi	sp,sp,8
  800234:	f800283a 	ret

Disassembly of section .text:

00800238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  80023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800244:	00bffd16 	blt	zero,r2,80023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800248:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  80024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800250:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800254:	d6a86414 	ori	gp,gp,41360
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800258:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  80025c:	108f6814 	ori	r2,r2,15776

    movhi r3, %hi(__bss_end)
  800260:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800264:	18cfbe14 	ori	r3,r3,16120

    beq r2, r3, 1f
  800268:	10c00326 	beq	r2,r3,800278 <_start+0x40>

0:
    stw zero, (r2)
  80026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800274:	10fffd36 	bltu	r2,r3,80026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800278:	080db740 	call	80db74 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  80027c:	080dd080 	call	80dd08 <alt_main>

00800280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800280:	003fff06 	br	800280 <alt_after_alt_main>

00800284 <main>:

// #define ALT_CI_FP_MULT_0(A,B) __builtin_custom_fnff(ALT_CI_FP_MULT_0_N,(A),(B))
// #define ALT_CI_FP_MULT_0_N 0x0

int main()
{
  800284:	defff604 	addi	sp,sp,-40
  800288:	dfc00915 	stw	ra,36(sp)
  80028c:	df000815 	stw	fp,32(sp)
  800290:	df000804 	addi	fp,sp,32
  printf("Hello from Nios II!\n");
  800294:	01002074 	movhi	r4,129
  800298:	213fd404 	addi	r4,r4,-176
  80029c:	0800a140 	call	800a14 <puts>

  volatile clock_t exec_t1, exec_t2;


  const float e= 14.6, f= 34.5;
  8002a0:	00905ab4 	movhi	r2,16746
  8002a4:	10a66684 	addi	r2,r2,-26214
  8002a8:	e0bffd15 	stw	r2,-12(fp)
  8002ac:	009082b4 	movhi	r2,16906
  8002b0:	e0bffc15 	stw	r2,-16(fp)
  volatile float g, h;

  exec_t1 = times(NULL);
  8002b4:	0009883a 	mov	r4,zero
  8002b8:	080e0500 	call	80e050 <times>
  8002bc:	e0bffb15 	stw	r2,-20(fp)
  for (int i = 0; i < 1000000; i++){
  8002c0:	e03fff15 	stw	zero,-4(fp)
  8002c4:	00000906 	br	8002ec <main+0x68>
    g = e * f;
  8002c8:	e17ffc17 	ldw	r5,-16(fp)
  8002cc:	e13ffd17 	ldw	r4,-12(fp)
  8002d0:	08003dc0 	call	8003dc <__mulsf3>
  8002d4:	1007883a 	mov	r3,r2
  8002d8:	1805883a 	mov	r2,r3
  8002dc:	e0bff915 	stw	r2,-28(fp)
  for (int i = 0; i < 1000000; i++){
  8002e0:	e0bfff17 	ldw	r2,-4(fp)
  8002e4:	10800044 	addi	r2,r2,1
  8002e8:	e0bfff15 	stw	r2,-4(fp)
  8002ec:	e0ffff17 	ldw	r3,-4(fp)
  8002f0:	008003f4 	movhi	r2,15
  8002f4:	10908fc4 	addi	r2,r2,16959
  8002f8:	10fff30e 	bge	r2,r3,8002c8 <main+0x44>
  }
  exec_t2 = times(NULL);
  8002fc:	0009883a 	mov	r4,zero
  800300:	080e0500 	call	80e050 <times>
  800304:	e0bffa15 	stw	r2,-24(fp)

  printf("Float mul result: %f, %d ticks\n", g, exec_t2 - exec_t1);
  800308:	e0bff917 	ldw	r2,-28(fp)
  80030c:	1009883a 	mov	r4,r2
  800310:	08007900 	call	800790 <__extendsfdf2>
  800314:	1011883a 	mov	r8,r2
  800318:	1813883a 	mov	r9,r3
  80031c:	e0fffa17 	ldw	r3,-24(fp)
  800320:	e0bffb17 	ldw	r2,-20(fp)
  800324:	1885c83a 	sub	r2,r3,r2
  800328:	100f883a 	mov	r7,r2
  80032c:	400b883a 	mov	r5,r8
  800330:	480d883a 	mov	r6,r9
  800334:	01002074 	movhi	r4,129
  800338:	213fd904 	addi	r4,r4,-156
  80033c:	08009100 	call	800910 <printf>

  exec_t1 = times(NULL);
  800340:	0009883a 	mov	r4,zero
  800344:	080e0500 	call	80e050 <times>
  800348:	e0bffb15 	stw	r2,-20(fp)
  for (int i = 0; i < 1000000; i++){
  80034c:	e03ffe15 	stw	zero,-8(fp)
  800350:	00000706 	br	800370 <main+0xec>
    h = ALT_CI_FP_MULT(e, f);
  800354:	e0bffd17 	ldw	r2,-12(fp)
  800358:	e0fffc17 	ldw	r3,-16(fp)
  80035c:	10c5c032 	custom	0,r2,r2,r3
  800360:	e0bff815 	stw	r2,-32(fp)
  for (int i = 0; i < 1000000; i++){
  800364:	e0bffe17 	ldw	r2,-8(fp)
  800368:	10800044 	addi	r2,r2,1
  80036c:	e0bffe15 	stw	r2,-8(fp)
  800370:	e0fffe17 	ldw	r3,-8(fp)
  800374:	008003f4 	movhi	r2,15
  800378:	10908fc4 	addi	r2,r2,16959
  80037c:	10fff50e 	bge	r2,r3,800354 <main+0xd0>
  }
  exec_t2 = times(NULL);
  800380:	0009883a 	mov	r4,zero
  800384:	080e0500 	call	80e050 <times>
  800388:	e0bffa15 	stw	r2,-24(fp)
  printf("Float mul res custom: %f, %d ticks\n", h, exec_t2 - exec_t1);
  80038c:	e0bff817 	ldw	r2,-32(fp)
  800390:	1009883a 	mov	r4,r2
  800394:	08007900 	call	800790 <__extendsfdf2>
  800398:	1011883a 	mov	r8,r2
  80039c:	1813883a 	mov	r9,r3
  8003a0:	e0fffa17 	ldw	r3,-24(fp)
  8003a4:	e0bffb17 	ldw	r2,-20(fp)
  8003a8:	1885c83a 	sub	r2,r3,r2
  8003ac:	100f883a 	mov	r7,r2
  8003b0:	400b883a 	mov	r5,r8
  8003b4:	480d883a 	mov	r6,r9
  8003b8:	01002074 	movhi	r4,129
  8003bc:	213fe104 	addi	r4,r4,-124
  8003c0:	08009100 	call	800910 <printf>

  return 0;
  8003c4:	0005883a 	mov	r2,zero
}
  8003c8:	e037883a 	mov	sp,fp
  8003cc:	dfc00117 	ldw	ra,4(sp)
  8003d0:	df000017 	ldw	fp,0(sp)
  8003d4:	dec00204 	addi	sp,sp,8
  8003d8:	f800283a 	ret

008003dc <__mulsf3>:
  8003dc:	defff704 	addi	sp,sp,-36
  8003e0:	dc400215 	stw	r17,8(sp)
  8003e4:	2022d5fa 	srli	r17,r4,23
  8003e8:	dc000115 	stw	r16,4(sp)
  8003ec:	04002034 	movhi	r16,128
  8003f0:	dd000515 	stw	r20,20(sp)
  8003f4:	843fffc4 	addi	r16,r16,-1
  8003f8:	dfc00815 	stw	ra,32(sp)
  8003fc:	dd800715 	stw	r22,28(sp)
  800400:	dd400615 	stw	r21,24(sp)
  800404:	dcc00415 	stw	r19,16(sp)
  800408:	dc800315 	stw	r18,12(sp)
  80040c:	8c403fcc 	andi	r17,r17,255
  800410:	2028d7fa 	srli	r20,r4,31
  800414:	8120703a 	and	r16,r16,r4
  800418:	88008026 	beq	r17,zero,80061c <__mulsf3+0x240>
  80041c:	88803fe0 	cmpeqi	r2,r17,255
  800420:	1000831e 	bne	r2,zero,800630 <__mulsf3+0x254>
  800424:	802090fa 	slli	r16,r16,3
  800428:	8c7fe044 	addi	r17,r17,-127
  80042c:	002d883a 	mov	r22,zero
  800430:	84010034 	orhi	r16,r16,1024
  800434:	0027883a 	mov	r19,zero
  800438:	2804d5fa 	srli	r2,r5,23
  80043c:	01002034 	movhi	r4,128
  800440:	213fffc4 	addi	r4,r4,-1
  800444:	10803fcc 	andi	r2,r2,255
  800448:	282ad7fa 	srli	r21,r5,31
  80044c:	2164703a 	and	r18,r4,r5
  800450:	10006e26 	beq	r2,zero,80060c <__mulsf3+0x230>
  800454:	11003fe0 	cmpeqi	r4,r2,255
  800458:	20007a1e 	bne	r4,zero,800644 <__mulsf3+0x268>
  80045c:	900890fa 	slli	r4,r18,3
  800460:	10bfe044 	addi	r2,r2,-127
  800464:	88a3883a 	add	r17,r17,r2
  800468:	24810034 	orhi	r18,r4,1024
  80046c:	0009883a 	mov	r4,zero
  800470:	b1800428 	cmpgeui	r6,r22,16
  800474:	a544f03a 	xor	r2,r20,r21
  800478:	89c00044 	addi	r7,r17,1
  80047c:	3000321e 	bne	r6,zero,800548 <__mulsf3+0x16c>
  800480:	b00690ba 	slli	r3,r22,2
  800484:	01802034 	movhi	r6,128
  800488:	198d883a 	add	r6,r3,r6
  80048c:	30c12517 	ldw	r3,1172(r6)
  800490:	1800683a 	jmp	r3
  800494:	00800548 	cmpgei	r2,zero,21
  800498:	008004d8 	cmpnei	r2,zero,19
  80049c:	008004d8 	cmpnei	r2,zero,19
  8004a0:	008004d4 	movui	r2,19
  8004a4:	008004e0 	cmpeqi	r2,zero,19
  8004a8:	008004e0 	cmpeqi	r2,zero,19
  8004ac:	008006d0 	cmplti	r2,zero,27
  8004b0:	008004d4 	movui	r2,19
  8004b4:	008004e0 	cmpeqi	r2,zero,19
  8004b8:	008006d0 	cmplti	r2,zero,27
  8004bc:	008004e0 	cmpeqi	r2,zero,19
  8004c0:	008004d4 	movui	r2,19
  8004c4:	00800658 	cmpnei	r2,zero,25
  8004c8:	00800658 	cmpnei	r2,zero,25
  8004cc:	00800658 	cmpnei	r2,zero,25
  8004d0:	00800734 	movhi	r2,28
  8004d4:	a805883a 	mov	r2,r21
  8004d8:	9021883a 	mov	r16,r18
  8004dc:	2027883a 	mov	r19,r4
  8004e0:	98c000a0 	cmpeqi	r3,r19,2
  8004e4:	1800151e 	bne	r3,zero,80053c <__mulsf3+0x160>
  8004e8:	98c000e0 	cmpeqi	r3,r19,3
  8004ec:	1800a31e 	bne	r3,zero,80077c <__mulsf3+0x3a0>
  8004f0:	98c00060 	cmpeqi	r3,r19,1
  8004f4:	18003226 	beq	r3,zero,8005c0 <__mulsf3+0x1e4>
  8004f8:	0007883a 	mov	r3,zero
  8004fc:	0009883a 	mov	r4,zero
  800500:	1c003fcc 	andi	r16,r3,255
  800504:	802095fa 	slli	r16,r16,23
  800508:	100497fa 	slli	r2,r2,31
  80050c:	8120b03a 	or	r16,r16,r4
  800510:	8084b03a 	or	r2,r16,r2
  800514:	dfc00817 	ldw	ra,32(sp)
  800518:	dd800717 	ldw	r22,28(sp)
  80051c:	dd400617 	ldw	r21,24(sp)
  800520:	dd000517 	ldw	r20,20(sp)
  800524:	dcc00417 	ldw	r19,16(sp)
  800528:	dc800317 	ldw	r18,12(sp)
  80052c:	dc400217 	ldw	r17,8(sp)
  800530:	dc000117 	ldw	r16,4(sp)
  800534:	dec00904 	addi	sp,sp,36
  800538:	f800283a 	ret
  80053c:	00ffffc4 	movi	r3,-1
  800540:	0009883a 	mov	r4,zero
  800544:	003fee06 	br	800500 <__mulsf3+0x124>
  800548:	9012d43a 	srli	r9,r18,16
  80054c:	80ffffcc 	andi	r3,r16,65535
  800550:	8010d43a 	srli	r8,r16,16
  800554:	913fffcc 	andi	r4,r18,65535
  800558:	190b383a 	mul	r5,r3,r4
  80055c:	4125383a 	mul	r18,r8,r4
  800560:	48cd383a 	mul	r6,r9,r3
  800564:	2806d43a 	srli	r3,r5,16
  800568:	4251383a 	mul	r8,r8,r9
  80056c:	348d883a 	add	r6,r6,r18
  800570:	1987883a 	add	r3,r3,r6
  800574:	1c80022e 	bgeu	r3,r18,800580 <__mulsf3+0x1a4>
  800578:	01000074 	movhi	r4,1
  80057c:	4111883a 	add	r8,r8,r4
  800580:	1808943a 	slli	r4,r3,16
  800584:	1820d43a 	srli	r16,r3,16
  800588:	297fffcc 	andi	r5,r5,65535
  80058c:	2149883a 	add	r4,r4,r5
  800590:	200691ba 	slli	r3,r4,6
  800594:	8221883a 	add	r16,r16,r8
  800598:	802091ba 	slli	r16,r16,6
  80059c:	2008d6ba 	srli	r4,r4,26
  8005a0:	1806c03a 	cmpne	r3,r3,zero
  8005a4:	8142002c 	andhi	r5,r16,2048
  8005a8:	1908b03a 	or	r4,r3,r4
  8005ac:	8120b03a 	or	r16,r16,r4
  8005b0:	28007026 	beq	r5,zero,800774 <__mulsf3+0x398>
  8005b4:	8006d07a 	srli	r3,r16,1
  8005b8:	8400004c 	andi	r16,r16,1
  8005bc:	1c20b03a 	or	r16,r3,r16
  8005c0:	38c01fc4 	addi	r3,r7,127
  8005c4:	00c0470e 	bge	zero,r3,8006e4 <__mulsf3+0x308>
  8005c8:	810001cc 	andi	r4,r16,7
  8005cc:	20000426 	beq	r4,zero,8005e0 <__mulsf3+0x204>
  8005d0:	810003cc 	andi	r4,r16,15
  8005d4:	21000120 	cmpeqi	r4,r4,4
  8005d8:	2000011e 	bne	r4,zero,8005e0 <__mulsf3+0x204>
  8005dc:	84000104 	addi	r16,r16,4
  8005e0:	8102002c 	andhi	r4,r16,2048
  8005e4:	20000426 	beq	r4,zero,8005f8 <__mulsf3+0x21c>
  8005e8:	00fe0034 	movhi	r3,63488
  8005ec:	18ffffc4 	addi	r3,r3,-1
  8005f0:	80e0703a 	and	r16,r16,r3
  8005f4:	38c02004 	addi	r3,r7,128
  8005f8:	19003fc8 	cmpgei	r4,r3,255
  8005fc:	203fcf1e 	bne	r4,zero,80053c <__mulsf3+0x160>
  800600:	802091ba 	slli	r16,r16,6
  800604:	8008d27a 	srli	r4,r16,9
  800608:	003fbd06 	br	800500 <__mulsf3+0x124>
  80060c:	9000281e 	bne	r18,zero,8006b0 <__mulsf3+0x2d4>
  800610:	b5800054 	ori	r22,r22,1
  800614:	01000044 	movi	r4,1
  800618:	003f9506 	br	800470 <__mulsf3+0x94>
  80061c:	8000191e 	bne	r16,zero,800684 <__mulsf3+0x2a8>
  800620:	05800104 	movi	r22,4
  800624:	0023883a 	mov	r17,zero
  800628:	04c00044 	movi	r19,1
  80062c:	003f8206 	br	800438 <__mulsf3+0x5c>
  800630:	8000101e 	bne	r16,zero,800674 <__mulsf3+0x298>
  800634:	05800204 	movi	r22,8
  800638:	04403fc4 	movi	r17,255
  80063c:	04c00084 	movi	r19,2
  800640:	003f7d06 	br	800438 <__mulsf3+0x5c>
  800644:	8c403fc4 	addi	r17,r17,255
  800648:	9000071e 	bne	r18,zero,800668 <__mulsf3+0x28c>
  80064c:	b5800094 	ori	r22,r22,2
  800650:	01000084 	movi	r4,2
  800654:	003f8606 	br	800470 <__mulsf3+0x94>
  800658:	98c000a0 	cmpeqi	r3,r19,2
  80065c:	a005883a 	mov	r2,r20
  800660:	183fa126 	beq	r3,zero,8004e8 <__mulsf3+0x10c>
  800664:	003fb506 	br	80053c <__mulsf3+0x160>
  800668:	b58000d4 	ori	r22,r22,3
  80066c:	010000c4 	movi	r4,3
  800670:	003f7f06 	br	800470 <__mulsf3+0x94>
  800674:	05800304 	movi	r22,12
  800678:	04403fc4 	movi	r17,255
  80067c:	04c000c4 	movi	r19,3
  800680:	003f6d06 	br	800438 <__mulsf3+0x5c>
  800684:	8009883a 	mov	r4,r16
  800688:	d9400015 	stw	r5,0(sp)
  80068c:	080088c0 	call	80088c <__clzsi2>
  800690:	10fffec4 	addi	r3,r2,-5
  800694:	047fe284 	movi	r17,-118
  800698:	80e0983a 	sll	r16,r16,r3
  80069c:	d9400017 	ldw	r5,0(sp)
  8006a0:	88a3c83a 	sub	r17,r17,r2
  8006a4:	002d883a 	mov	r22,zero
  8006a8:	0027883a 	mov	r19,zero
  8006ac:	003f6206 	br	800438 <__mulsf3+0x5c>
  8006b0:	9009883a 	mov	r4,r18
  8006b4:	080088c0 	call	80088c <__clzsi2>
  8006b8:	10fffec4 	addi	r3,r2,-5
  8006bc:	88a3c83a 	sub	r17,r17,r2
  8006c0:	90e4983a 	sll	r18,r18,r3
  8006c4:	8c7fe284 	addi	r17,r17,-118
  8006c8:	0009883a 	mov	r4,zero
  8006cc:	003f6806 	br	800470 <__mulsf3+0x94>
  8006d0:	01002034 	movhi	r4,128
  8006d4:	0005883a 	mov	r2,zero
  8006d8:	213fffc4 	addi	r4,r4,-1
  8006dc:	00ffffc4 	movi	r3,-1
  8006e0:	003f8706 	br	800500 <__mulsf3+0x124>
  8006e4:	01000044 	movi	r4,1
  8006e8:	20c7c83a 	sub	r3,r4,r3
  8006ec:	19000708 	cmpgei	r4,r3,28
  8006f0:	203f811e 	bne	r4,zero,8004f8 <__mulsf3+0x11c>
  8006f4:	39002784 	addi	r4,r7,158
  8006f8:	8108983a 	sll	r4,r16,r4
  8006fc:	80e0d83a 	srl	r16,r16,r3
  800700:	2008c03a 	cmpne	r4,r4,zero
  800704:	8120b03a 	or	r16,r16,r4
  800708:	80c001cc 	andi	r3,r16,7
  80070c:	18000426 	beq	r3,zero,800720 <__mulsf3+0x344>
  800710:	80c003cc 	andi	r3,r16,15
  800714:	18c00120 	cmpeqi	r3,r3,4
  800718:	1800011e 	bne	r3,zero,800720 <__mulsf3+0x344>
  80071c:	84000104 	addi	r16,r16,4
  800720:	80c1002c 	andhi	r3,r16,1024
  800724:	183fb626 	beq	r3,zero,800600 <__mulsf3+0x224>
  800728:	00c00044 	movi	r3,1
  80072c:	0009883a 	mov	r4,zero
  800730:	003f7306 	br	800500 <__mulsf3+0x124>
  800734:	8080102c 	andhi	r2,r16,64
  800738:	10000826 	beq	r2,zero,80075c <__mulsf3+0x380>
  80073c:	9080102c 	andhi	r2,r18,64
  800740:	1000061e 	bne	r2,zero,80075c <__mulsf3+0x380>
  800744:	00802034 	movhi	r2,128
  800748:	10bfffc4 	addi	r2,r2,-1
  80074c:	91001034 	orhi	r4,r18,64
  800750:	2088703a 	and	r4,r4,r2
  800754:	a805883a 	mov	r2,r21
  800758:	003fe006 	br	8006dc <__mulsf3+0x300>
  80075c:	00802034 	movhi	r2,128
  800760:	10bfffc4 	addi	r2,r2,-1
  800764:	81001034 	orhi	r4,r16,64
  800768:	2088703a 	and	r4,r4,r2
  80076c:	a005883a 	mov	r2,r20
  800770:	003fda06 	br	8006dc <__mulsf3+0x300>
  800774:	880f883a 	mov	r7,r17
  800778:	003f9106 	br	8005c0 <__mulsf3+0x1e4>
  80077c:	00c02034 	movhi	r3,128
  800780:	81001034 	orhi	r4,r16,64
  800784:	18ffffc4 	addi	r3,r3,-1
  800788:	20c8703a 	and	r4,r4,r3
  80078c:	003fd306 	br	8006dc <__mulsf3+0x300>

00800790 <__extendsfdf2>:
  800790:	200ad5fa 	srli	r5,r4,23
  800794:	defffd04 	addi	sp,sp,-12
  800798:	dc000015 	stw	r16,0(sp)
  80079c:	29403fcc 	andi	r5,r5,255
  8007a0:	04002034 	movhi	r16,128
  8007a4:	28800044 	addi	r2,r5,1
  8007a8:	dc400115 	stw	r17,4(sp)
  8007ac:	843fffc4 	addi	r16,r16,-1
  8007b0:	dfc00215 	stw	ra,8(sp)
  8007b4:	10803f8c 	andi	r2,r2,254
  8007b8:	2022d7fa 	srli	r17,r4,31
  8007bc:	8120703a 	and	r16,r16,r4
  8007c0:	10000d26 	beq	r2,zero,8007f8 <__extendsfdf2+0x68>
  8007c4:	8008d0fa 	srli	r4,r16,3
  8007c8:	8020977a 	slli	r16,r16,29
  8007cc:	28c0e004 	addi	r3,r5,896
  8007d0:	180a953a 	slli	r5,r3,20
  8007d4:	880697fa 	slli	r3,r17,31
  8007d8:	8005883a 	mov	r2,r16
  8007dc:	290ab03a 	or	r5,r5,r4
  8007e0:	28c6b03a 	or	r3,r5,r3
  8007e4:	dfc00217 	ldw	ra,8(sp)
  8007e8:	dc400117 	ldw	r17,4(sp)
  8007ec:	dc000017 	ldw	r16,0(sp)
  8007f0:	dec00304 	addi	sp,sp,12
  8007f4:	f800283a 	ret
  8007f8:	2800111e 	bne	r5,zero,800840 <__extendsfdf2+0xb0>
  8007fc:	80001926 	beq	r16,zero,800864 <__extendsfdf2+0xd4>
  800800:	8009883a 	mov	r4,r16
  800804:	080088c0 	call	80088c <__clzsi2>
  800808:	10c002c8 	cmpgei	r3,r2,11
  80080c:	18001b1e 	bne	r3,zero,80087c <__extendsfdf2+0xec>
  800810:	010002c4 	movi	r4,11
  800814:	2089c83a 	sub	r4,r4,r2
  800818:	10c00544 	addi	r3,r2,21
  80081c:	810ad83a 	srl	r5,r16,r4
  800820:	80e0983a 	sll	r16,r16,r3
  800824:	01000434 	movhi	r4,16
  800828:	00c0e244 	movi	r3,905
  80082c:	213fffc4 	addi	r4,r4,-1
  800830:	1887c83a 	sub	r3,r3,r2
  800834:	2908703a 	and	r4,r5,r4
  800838:	18c1ffcc 	andi	r3,r3,2047
  80083c:	003fe406 	br	8007d0 <__extendsfdf2+0x40>
  800840:	80000b26 	beq	r16,zero,800870 <__extendsfdf2+0xe0>
  800844:	800ad0fa 	srli	r5,r16,3
  800848:	00800434 	movhi	r2,16
  80084c:	10bfffc4 	addi	r2,r2,-1
  800850:	29000234 	orhi	r4,r5,8
  800854:	8020977a 	slli	r16,r16,29
  800858:	2088703a 	and	r4,r4,r2
  80085c:	00c1ffc4 	movi	r3,2047
  800860:	003fdb06 	br	8007d0 <__extendsfdf2+0x40>
  800864:	0007883a 	mov	r3,zero
  800868:	0009883a 	mov	r4,zero
  80086c:	003fd806 	br	8007d0 <__extendsfdf2+0x40>
  800870:	00c1ffc4 	movi	r3,2047
  800874:	0009883a 	mov	r4,zero
  800878:	003fd506 	br	8007d0 <__extendsfdf2+0x40>
  80087c:	113ffd44 	addi	r4,r2,-11
  800880:	810a983a 	sll	r5,r16,r4
  800884:	0021883a 	mov	r16,zero
  800888:	003fe606 	br	800824 <__extendsfdf2+0x94>

0080088c <__clzsi2>:
  80088c:	00bfffd4 	movui	r2,65535
  800890:	11000436 	bltu	r2,r4,8008a4 <__clzsi2+0x18>
  800894:	20804030 	cmpltui	r2,r4,256
  800898:	10000e26 	beq	r2,zero,8008d4 <__clzsi2+0x48>
  80089c:	01400804 	movi	r5,32
  8008a0:	00000406 	br	8008b4 <__clzsi2+0x28>
  8008a4:	00804034 	movhi	r2,256
  8008a8:	20800736 	bltu	r4,r2,8008c8 <__clzsi2+0x3c>
  8008ac:	2008d63a 	srli	r4,r4,24
  8008b0:	01400204 	movi	r5,8
  8008b4:	00c02074 	movhi	r3,129
  8008b8:	20c7883a 	add	r3,r4,r3
  8008bc:	18bfea03 	ldbu	r2,-88(r3)
  8008c0:	2885c83a 	sub	r2,r5,r2
  8008c4:	f800283a 	ret
  8008c8:	2008d43a 	srli	r4,r4,16
  8008cc:	01400404 	movi	r5,16
  8008d0:	003ff806 	br	8008b4 <__clzsi2+0x28>
  8008d4:	2008d23a 	srli	r4,r4,8
  8008d8:	01400604 	movi	r5,24
  8008dc:	003ff506 	br	8008b4 <__clzsi2+0x28>

008008e0 <_printf_r>:
  8008e0:	defffd04 	addi	sp,sp,-12
  8008e4:	2805883a 	mov	r2,r5
  8008e8:	dfc00015 	stw	ra,0(sp)
  8008ec:	d9800115 	stw	r6,4(sp)
  8008f0:	d9c00215 	stw	r7,8(sp)
  8008f4:	21400217 	ldw	r5,8(r4)
  8008f8:	d9c00104 	addi	r7,sp,4
  8008fc:	100d883a 	mov	r6,r2
  800900:	0800abc0 	call	800abc <___vfprintf_internal_r>
  800904:	dfc00017 	ldw	ra,0(sp)
  800908:	dec00304 	addi	sp,sp,12
  80090c:	f800283a 	ret

00800910 <printf>:
  800910:	defffc04 	addi	sp,sp,-16
  800914:	dfc00015 	stw	ra,0(sp)
  800918:	d9400115 	stw	r5,4(sp)
  80091c:	d9800215 	stw	r6,8(sp)
  800920:	d9c00315 	stw	r7,12(sp)
  800924:	00802074 	movhi	r2,129
  800928:	10886517 	ldw	r2,8596(r2)
  80092c:	200b883a 	mov	r5,r4
  800930:	d9800104 	addi	r6,sp,4
  800934:	11000217 	ldw	r4,8(r2)
  800938:	0802bb00 	call	802bb0 <__vfprintf_internal>
  80093c:	dfc00017 	ldw	ra,0(sp)
  800940:	dec00404 	addi	sp,sp,16
  800944:	f800283a 	ret

00800948 <_puts_r>:
  800948:	defff504 	addi	sp,sp,-44
  80094c:	dc000815 	stw	r16,32(sp)
  800950:	2021883a 	mov	r16,r4
  800954:	2809883a 	mov	r4,r5
  800958:	dc400915 	stw	r17,36(sp)
  80095c:	dfc00a15 	stw	ra,40(sp)
  800960:	2823883a 	mov	r17,r5
  800964:	0800a240 	call	800a24 <strlen>
  800968:	11000044 	addi	r4,r2,1
  80096c:	d8800515 	stw	r2,20(sp)
  800970:	00800044 	movi	r2,1
  800974:	00c02074 	movhi	r3,129
  800978:	d8800715 	stw	r2,28(sp)
  80097c:	d8800404 	addi	r2,sp,16
  800980:	18c02a04 	addi	r3,r3,168
  800984:	d8800115 	stw	r2,4(sp)
  800988:	00800084 	movi	r2,2
  80098c:	dc400415 	stw	r17,16(sp)
  800990:	d8c00615 	stw	r3,24(sp)
  800994:	d9000315 	stw	r4,12(sp)
  800998:	d8800215 	stw	r2,8(sp)
  80099c:	81400217 	ldw	r5,8(r16)
  8009a0:	80000226 	beq	r16,zero,8009ac <_puts_r+0x64>
  8009a4:	80800e17 	ldw	r2,56(r16)
  8009a8:	10001326 	beq	r2,zero,8009f8 <_puts_r+0xb0>
  8009ac:	2880030b 	ldhu	r2,12(r5)
  8009b0:	10c8000c 	andi	r3,r2,8192
  8009b4:	1800061e 	bne	r3,zero,8009d0 <_puts_r+0x88>
  8009b8:	28c01917 	ldw	r3,100(r5)
  8009bc:	0137ffc4 	movi	r4,-8193
  8009c0:	10880014 	ori	r2,r2,8192
  8009c4:	1906703a 	and	r3,r3,r4
  8009c8:	2880030d 	sth	r2,12(r5)
  8009cc:	28c01915 	stw	r3,100(r5)
  8009d0:	d9800104 	addi	r6,sp,4
  8009d4:	8009883a 	mov	r4,r16
  8009d8:	08051f40 	call	8051f4 <__sfvwrite_r>
  8009dc:	10000b1e 	bne	r2,zero,800a0c <_puts_r+0xc4>
  8009e0:	00800284 	movi	r2,10
  8009e4:	dfc00a17 	ldw	ra,40(sp)
  8009e8:	dc400917 	ldw	r17,36(sp)
  8009ec:	dc000817 	ldw	r16,32(sp)
  8009f0:	dec00b04 	addi	sp,sp,44
  8009f4:	f800283a 	ret
  8009f8:	8009883a 	mov	r4,r16
  8009fc:	d9400015 	stw	r5,0(sp)
  800a00:	0804d940 	call	804d94 <__sinit>
  800a04:	d9400017 	ldw	r5,0(sp)
  800a08:	003fe806 	br	8009ac <_puts_r+0x64>
  800a0c:	00bfffc4 	movi	r2,-1
  800a10:	003ff406 	br	8009e4 <_puts_r+0x9c>

00800a14 <puts>:
  800a14:	00802074 	movhi	r2,129
  800a18:	200b883a 	mov	r5,r4
  800a1c:	11086517 	ldw	r4,8596(r2)
  800a20:	08009481 	jmpi	800948 <_puts_r>

00800a24 <strlen>:
  800a24:	208000cc 	andi	r2,r4,3
  800a28:	10000926 	beq	r2,zero,800a50 <strlen+0x2c>
  800a2c:	2005883a 	mov	r2,r4
  800a30:	00000306 	br	800a40 <strlen+0x1c>
  800a34:	10800044 	addi	r2,r2,1
  800a38:	10c000cc 	andi	r3,r2,3
  800a3c:	18000526 	beq	r3,zero,800a54 <strlen+0x30>
  800a40:	10c00007 	ldb	r3,0(r2)
  800a44:	183ffb1e 	bne	r3,zero,800a34 <strlen+0x10>
  800a48:	1105c83a 	sub	r2,r2,r4
  800a4c:	f800283a 	ret
  800a50:	2005883a 	mov	r2,r4
  800a54:	11400017 	ldw	r5,0(r2)
  800a58:	01ffbff4 	movhi	r7,65279
  800a5c:	39ffbfc4 	addi	r7,r7,-257
  800a60:	29c7883a 	add	r3,r5,r7
  800a64:	01a02074 	movhi	r6,32897
  800a68:	014a303a 	nor	r5,zero,r5
  800a6c:	1946703a 	and	r3,r3,r5
  800a70:	31a02004 	addi	r6,r6,-32640
  800a74:	1986703a 	and	r3,r3,r6
  800a78:	1800071e 	bne	r3,zero,800a98 <strlen+0x74>
  800a7c:	11400117 	ldw	r5,4(r2)
  800a80:	10800104 	addi	r2,r2,4
  800a84:	29c7883a 	add	r3,r5,r7
  800a88:	014a303a 	nor	r5,zero,r5
  800a8c:	1946703a 	and	r3,r3,r5
  800a90:	1986703a 	and	r3,r3,r6
  800a94:	183ff926 	beq	r3,zero,800a7c <strlen+0x58>
  800a98:	10c00007 	ldb	r3,0(r2)
  800a9c:	183fea26 	beq	r3,zero,800a48 <strlen+0x24>
  800aa0:	10c00047 	ldb	r3,1(r2)
  800aa4:	10800044 	addi	r2,r2,1
  800aa8:	183fe726 	beq	r3,zero,800a48 <strlen+0x24>
  800aac:	10c00047 	ldb	r3,1(r2)
  800ab0:	10800044 	addi	r2,r2,1
  800ab4:	183ffa1e 	bne	r3,zero,800aa0 <strlen+0x7c>
  800ab8:	003fe306 	br	800a48 <strlen+0x24>

00800abc <___vfprintf_internal_r>:
  800abc:	deffbf04 	addi	sp,sp,-260
  800ac0:	dfc04015 	stw	ra,256(sp)
  800ac4:	dd803d15 	stw	r22,244(sp)
  800ac8:	dcc03a15 	stw	r19,232(sp)
  800acc:	dc803915 	stw	r18,228(sp)
  800ad0:	2027883a 	mov	r19,r4
  800ad4:	2825883a 	mov	r18,r5
  800ad8:	302d883a 	mov	r22,r6
  800adc:	d9c00615 	stw	r7,24(sp)
  800ae0:	df003f15 	stw	fp,252(sp)
  800ae4:	ddc03e15 	stw	r23,248(sp)
  800ae8:	dd403c15 	stw	r21,240(sp)
  800aec:	dd003b15 	stw	r20,236(sp)
  800af0:	dc403815 	stw	r17,224(sp)
  800af4:	dc003715 	stw	r16,220(sp)
  800af8:	08057f40 	call	8057f4 <_localeconv_r>
  800afc:	10800017 	ldw	r2,0(r2)
  800b00:	1009883a 	mov	r4,r2
  800b04:	d8800d15 	stw	r2,52(sp)
  800b08:	0800a240 	call	800a24 <strlen>
  800b0c:	d8800b15 	stw	r2,44(sp)
  800b10:	98000226 	beq	r19,zero,800b1c <___vfprintf_internal_r+0x60>
  800b14:	98800e17 	ldw	r2,56(r19)
  800b18:	1001de26 	beq	r2,zero,801294 <___vfprintf_internal_r+0x7d8>
  800b1c:	9080030b 	ldhu	r2,12(r18)
  800b20:	10c8000c 	andi	r3,r2,8192
  800b24:	1800061e 	bne	r3,zero,800b40 <___vfprintf_internal_r+0x84>
  800b28:	90c01917 	ldw	r3,100(r18)
  800b2c:	0137ffc4 	movi	r4,-8193
  800b30:	10880014 	ori	r2,r2,8192
  800b34:	1906703a 	and	r3,r3,r4
  800b38:	9080030d 	sth	r2,12(r18)
  800b3c:	90c01915 	stw	r3,100(r18)
  800b40:	10c0020c 	andi	r3,r2,8
  800b44:	1800fa26 	beq	r3,zero,800f30 <___vfprintf_internal_r+0x474>
  800b48:	90c00417 	ldw	r3,16(r18)
  800b4c:	1800f826 	beq	r3,zero,800f30 <___vfprintf_internal_r+0x474>
  800b50:	1080068c 	andi	r2,r2,26
  800b54:	10800298 	cmpnei	r2,r2,10
  800b58:	1000fd26 	beq	r2,zero,800f50 <___vfprintf_internal_r+0x494>
  800b5c:	d8802704 	addi	r2,sp,156
  800b60:	b02f883a 	mov	r23,r22
  800b64:	d8801a15 	stw	r2,104(sp)
  800b68:	d8001c15 	stw	zero,112(sp)
  800b6c:	d8001b15 	stw	zero,108(sp)
  800b70:	d8000815 	stw	zero,32(sp)
  800b74:	d8000915 	stw	zero,36(sp)
  800b78:	d8000a15 	stw	zero,40(sp)
  800b7c:	d8000c15 	stw	zero,48(sp)
  800b80:	d8001015 	stw	zero,64(sp)
  800b84:	d8000515 	stw	zero,20(sp)
  800b88:	102d883a 	mov	r22,r2
  800b8c:	b8800007 	ldb	r2,0(r23)
  800b90:	1000d526 	beq	r2,zero,800ee8 <___vfprintf_internal_r+0x42c>
  800b94:	b821883a 	mov	r16,r23
  800b98:	00000306 	br	800ba8 <___vfprintf_internal_r+0xec>
  800b9c:	80800047 	ldb	r2,1(r16)
  800ba0:	84000044 	addi	r16,r16,1
  800ba4:	10012026 	beq	r2,zero,801028 <___vfprintf_internal_r+0x56c>
  800ba8:	10800958 	cmpnei	r2,r2,37
  800bac:	103ffb1e 	bne	r2,zero,800b9c <___vfprintf_internal_r+0xe0>
  800bb0:	85e3c83a 	sub	r17,r16,r23
  800bb4:	85c11e1e 	bne	r16,r23,801030 <___vfprintf_internal_r+0x574>
  800bb8:	80800003 	ldbu	r2,0(r16)
  800bbc:	10803fcc 	andi	r2,r2,255
  800bc0:	1080201c 	xori	r2,r2,128
  800bc4:	10bfe004 	addi	r2,r2,-128
  800bc8:	1000c726 	beq	r2,zero,800ee8 <___vfprintf_internal_r+0x42c>
  800bcc:	82c00047 	ldb	r11,1(r16)
  800bd0:	85c00044 	addi	r23,r16,1
  800bd4:	d8001345 	stb	zero,77(sp)
  800bd8:	0009883a 	mov	r4,zero
  800bdc:	000b883a 	mov	r5,zero
  800be0:	023fffc4 	movi	r8,-1
  800be4:	0021883a 	mov	r16,zero
  800be8:	0019883a 	mov	r12,zero
  800bec:	bdc00044 	addi	r23,r23,1
  800bf0:	5839883a 	mov	fp,r11
  800bf4:	e0bff804 	addi	r2,fp,-32
  800bf8:	10c01668 	cmpgeui	r3,r2,89
  800bfc:	18006a1e 	bne	r3,zero,800da8 <___vfprintf_internal_r+0x2ec>
  800c00:	100490ba 	slli	r2,r2,2
  800c04:	00c02034 	movhi	r3,128
  800c08:	10c7883a 	add	r3,r2,r3
  800c0c:	18830517 	ldw	r2,3092(r3)
  800c10:	1000683a 	jmp	r2
  800c14:	00801554 	movui	r2,85
  800c18:	00800da8 	cmpgeui	r2,zero,54
  800c1c:	00800da8 	cmpgeui	r2,zero,54
  800c20:	00801548 	cmpgei	r2,zero,85
  800c24:	00800da8 	cmpgeui	r2,zero,54
  800c28:	00800da8 	cmpgeui	r2,zero,54
  800c2c:	00800da8 	cmpgeui	r2,zero,54
  800c30:	00800da8 	cmpgeui	r2,zero,54
  800c34:	00800da8 	cmpgeui	r2,zero,54
  800c38:	00800da8 	cmpgeui	r2,zero,54
  800c3c:	00801520 	cmpeqi	r2,zero,84
  800c40:	00801510 	cmplti	r2,zero,84
  800c44:	00800da8 	cmpgeui	r2,zero,54
  800c48:	008014f8 	rdprs	r2,zero,83
  800c4c:	008014b4 	movhi	r2,82
  800c50:	00800da8 	cmpgeui	r2,zero,54
  800c54:	008014a8 	cmpgeui	r2,zero,82
  800c58:	00800d78 	rdprs	r2,zero,53
  800c5c:	00800d78 	rdprs	r2,zero,53
  800c60:	00800d78 	rdprs	r2,zero,53
  800c64:	00800d78 	rdprs	r2,zero,53
  800c68:	00800d78 	rdprs	r2,zero,53
  800c6c:	00800d78 	rdprs	r2,zero,53
  800c70:	00800d78 	rdprs	r2,zero,53
  800c74:	00800d78 	rdprs	r2,zero,53
  800c78:	00800d78 	rdprs	r2,zero,53
  800c7c:	00800da8 	cmpgeui	r2,zero,54
  800c80:	00800da8 	cmpgeui	r2,zero,54
  800c84:	00800da8 	cmpgeui	r2,zero,54
  800c88:	00800da8 	cmpgeui	r2,zero,54
  800c8c:	00800da8 	cmpgeui	r2,zero,54
  800c90:	00800da8 	cmpgeui	r2,zero,54
  800c94:	00800da8 	cmpgeui	r2,zero,54
  800c98:	00800da8 	cmpgeui	r2,zero,54
  800c9c:	00800da8 	cmpgeui	r2,zero,54
  800ca0:	00800da8 	cmpgeui	r2,zero,54
  800ca4:	008013c0 	call	8013c <__alt_mem_sdram-0x77fec4>
  800ca8:	0080108c 	andi	r2,zero,66
  800cac:	00800da8 	cmpgeui	r2,zero,54
  800cb0:	0080108c 	andi	r2,zero,66
  800cb4:	00800da8 	cmpgeui	r2,zero,54
  800cb8:	00800da8 	cmpgeui	r2,zero,54
  800cbc:	00800da8 	cmpgeui	r2,zero,54
  800cc0:	00800da8 	cmpgeui	r2,zero,54
  800cc4:	008013b4 	movhi	r2,78
  800cc8:	00800da8 	cmpgeui	r2,zero,54
  800ccc:	00800da8 	cmpgeui	r2,zero,54
  800cd0:	00800fc0 	call	800fc <__alt_mem_sdram-0x77ff04>
  800cd4:	00800da8 	cmpgeui	r2,zero,54
  800cd8:	00800da8 	cmpgeui	r2,zero,54
  800cdc:	00800da8 	cmpgeui	r2,zero,54
  800ce0:	00800da8 	cmpgeui	r2,zero,54
  800ce4:	00800da8 	cmpgeui	r2,zero,54
  800ce8:	00800f98 	cmpnei	r2,zero,62
  800cec:	00800da8 	cmpgeui	r2,zero,54
  800cf0:	00800da8 	cmpgeui	r2,zero,54
  800cf4:	0080136c 	andhi	r2,zero,77
  800cf8:	00800da8 	cmpgeui	r2,zero,54
  800cfc:	00800da8 	cmpgeui	r2,zero,54
  800d00:	00800da8 	cmpgeui	r2,zero,54
  800d04:	00800da8 	cmpgeui	r2,zero,54
  800d08:	00800da8 	cmpgeui	r2,zero,54
  800d0c:	00800da8 	cmpgeui	r2,zero,54
  800d10:	00800da8 	cmpgeui	r2,zero,54
  800d14:	00800da8 	cmpgeui	r2,zero,54
  800d18:	00800da8 	cmpgeui	r2,zero,54
  800d1c:	00800da8 	cmpgeui	r2,zero,54
  800d20:	00801344 	movi	r2,77
  800d24:	008012a0 	cmpeqi	r2,zero,74
  800d28:	0080108c 	andi	r2,zero,66
  800d2c:	0080108c 	andi	r2,zero,66
  800d30:	0080108c 	andi	r2,zero,66
  800d34:	00801338 	rdprs	r2,zero,76
  800d38:	008012a0 	cmpeqi	r2,zero,74
  800d3c:	00800da8 	cmpgeui	r2,zero,54
  800d40:	00800da8 	cmpgeui	r2,zero,54
  800d44:	008016a8 	cmpgeui	r2,zero,90
  800d48:	00800da8 	cmpgeui	r2,zero,54
  800d4c:	0080166c 	andhi	r2,zero,89
  800d50:	00800fc4 	movi	r2,63
  800d54:	0080162c 	andhi	r2,zero,88
  800d58:	00801620 	cmpeqi	r2,zero,88
  800d5c:	00800da8 	cmpgeui	r2,zero,54
  800d60:	008015c8 	cmpgei	r2,zero,87
  800d64:	00800da8 	cmpgeui	r2,zero,54
  800d68:	00800f9c 	xori	r2,zero,62
  800d6c:	00800da8 	cmpgeui	r2,zero,54
  800d70:	00800da8 	cmpgeui	r2,zero,54
  800d74:	00801580 	call	80158 <__alt_mem_sdram-0x77fea8>
  800d78:	0021883a 	mov	r16,zero
  800d7c:	e0bff404 	addi	r2,fp,-48
  800d80:	bf000007 	ldb	fp,0(r23)
  800d84:	840002a4 	muli	r16,r16,10
  800d88:	bdc00044 	addi	r23,r23,1
  800d8c:	1421883a 	add	r16,r2,r16
  800d90:	e0bff404 	addi	r2,fp,-48
  800d94:	10c002b0 	cmpltui	r3,r2,10
  800d98:	183ff91e 	bne	r3,zero,800d80 <___vfprintf_internal_r+0x2c4>
  800d9c:	e0bff804 	addi	r2,fp,-32
  800da0:	10c01668 	cmpgeui	r3,r2,89
  800da4:	183f9626 	beq	r3,zero,800c00 <___vfprintf_internal_r+0x144>
  800da8:	21003fcc 	andi	r4,r4,255
  800dac:	2006851e 	bne	r4,zero,8027c4 <___vfprintf_internal_r+0x1d08>
  800db0:	e0004d26 	beq	fp,zero,800ee8 <___vfprintf_internal_r+0x42c>
  800db4:	df001d05 	stb	fp,116(sp)
  800db8:	d8001345 	stb	zero,77(sp)
  800dbc:	05000044 	movi	r20,1
  800dc0:	05400044 	movi	r21,1
  800dc4:	dc401d04 	addi	r17,sp,116
  800dc8:	db000415 	stw	r12,16(sp)
  800dcc:	0011883a 	mov	r8,zero
  800dd0:	d8000715 	stw	zero,28(sp)
  800dd4:	d8800417 	ldw	r2,16(sp)
  800dd8:	1380008c 	andi	r14,r2,2
  800ddc:	70000126 	beq	r14,zero,800de4 <___vfprintf_internal_r+0x328>
  800de0:	a5000084 	addi	r20,r20,2
  800de4:	d8800417 	ldw	r2,16(sp)
  800de8:	d8c01c17 	ldw	r3,112(sp)
  800dec:	1340210c 	andi	r13,r2,132
  800df0:	6800021e 	bne	r13,zero,800dfc <___vfprintf_internal_r+0x340>
  800df4:	850fc83a 	sub	r7,r16,r20
  800df8:	01c34316 	blt	zero,r7,801b08 <___vfprintf_internal_r+0x104c>
  800dfc:	d8801347 	ldb	r2,77(sp)
  800e00:	10000c26 	beq	r2,zero,800e34 <___vfprintf_internal_r+0x378>
  800e04:	d8801b17 	ldw	r2,108(sp)
  800e08:	d9001344 	addi	r4,sp,77
  800e0c:	18c00044 	addi	r3,r3,1
  800e10:	10800044 	addi	r2,r2,1
  800e14:	b1000015 	stw	r4,0(r22)
  800e18:	01000044 	movi	r4,1
  800e1c:	d8801b15 	stw	r2,108(sp)
  800e20:	b1000115 	stw	r4,4(r22)
  800e24:	d8c01c15 	stw	r3,112(sp)
  800e28:	10800208 	cmpgei	r2,r2,8
  800e2c:	1003771e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x1150>
  800e30:	b5800204 	addi	r22,r22,8
  800e34:	70000c26 	beq	r14,zero,800e68 <___vfprintf_internal_r+0x3ac>
  800e38:	d8801b17 	ldw	r2,108(sp)
  800e3c:	d9001384 	addi	r4,sp,78
  800e40:	18c00084 	addi	r3,r3,2
  800e44:	10800044 	addi	r2,r2,1
  800e48:	b1000015 	stw	r4,0(r22)
  800e4c:	01000084 	movi	r4,2
  800e50:	d8801b15 	stw	r2,108(sp)
  800e54:	b1000115 	stw	r4,4(r22)
  800e58:	d8c01c15 	stw	r3,112(sp)
  800e5c:	10800208 	cmpgei	r2,r2,8
  800e60:	1003781e 	bne	r2,zero,801c44 <___vfprintf_internal_r+0x1188>
  800e64:	b5800204 	addi	r22,r22,8
  800e68:	6b402018 	cmpnei	r13,r13,128
  800e6c:	68025926 	beq	r13,zero,8017d4 <___vfprintf_internal_r+0xd18>
  800e70:	4551c83a 	sub	r8,r8,r21
  800e74:	02029116 	blt	zero,r8,8018bc <___vfprintf_internal_r+0xe00>
  800e78:	d8800417 	ldw	r2,16(sp)
  800e7c:	1080400c 	andi	r2,r2,256
  800e80:	10020e1e 	bne	r2,zero,8016bc <___vfprintf_internal_r+0xc00>
  800e84:	d8801b17 	ldw	r2,108(sp)
  800e88:	1d47883a 	add	r3,r3,r21
  800e8c:	b4400015 	stw	r17,0(r22)
  800e90:	10800044 	addi	r2,r2,1
  800e94:	b5400115 	stw	r21,4(r22)
  800e98:	d8801b15 	stw	r2,108(sp)
  800e9c:	d8c01c15 	stw	r3,112(sp)
  800ea0:	10800208 	cmpgei	r2,r2,8
  800ea4:	10030e1e 	bne	r2,zero,801ae0 <___vfprintf_internal_r+0x1024>
  800ea8:	b5800204 	addi	r22,r22,8
  800eac:	d8800417 	ldw	r2,16(sp)
  800eb0:	1440010c 	andi	r17,r2,4
  800eb4:	88000226 	beq	r17,zero,800ec0 <___vfprintf_internal_r+0x404>
  800eb8:	8523c83a 	sub	r17,r16,r20
  800ebc:	0440c616 	blt	zero,r17,8011d8 <___vfprintf_internal_r+0x71c>
  800ec0:	8500010e 	bge	r16,r20,800ec8 <___vfprintf_internal_r+0x40c>
  800ec4:	a021883a 	mov	r16,r20
  800ec8:	d8800517 	ldw	r2,20(sp)
  800ecc:	1405883a 	add	r2,r2,r16
  800ed0:	d8800515 	stw	r2,20(sp)
  800ed4:	1802c01e 	bne	r3,zero,8019d8 <___vfprintf_internal_r+0xf1c>
  800ed8:	b8800007 	ldb	r2,0(r23)
  800edc:	d8001b15 	stw	zero,108(sp)
  800ee0:	dd802704 	addi	r22,sp,156
  800ee4:	103f2b1e 	bne	r2,zero,800b94 <___vfprintf_internal_r+0xd8>
  800ee8:	d8801c17 	ldw	r2,112(sp)
  800eec:	1006371e 	bne	r2,zero,8027cc <___vfprintf_internal_r+0x1d10>
  800ef0:	9080030b 	ldhu	r2,12(r18)
  800ef4:	1080100c 	andi	r2,r2,64
  800ef8:	1006cd1e 	bne	r2,zero,802a30 <___vfprintf_internal_r+0x1f74>
  800efc:	d8800517 	ldw	r2,20(sp)
  800f00:	dfc04017 	ldw	ra,256(sp)
  800f04:	df003f17 	ldw	fp,252(sp)
  800f08:	ddc03e17 	ldw	r23,248(sp)
  800f0c:	dd803d17 	ldw	r22,244(sp)
  800f10:	dd403c17 	ldw	r21,240(sp)
  800f14:	dd003b17 	ldw	r20,236(sp)
  800f18:	dcc03a17 	ldw	r19,232(sp)
  800f1c:	dc803917 	ldw	r18,228(sp)
  800f20:	dc403817 	ldw	r17,224(sp)
  800f24:	dc003717 	ldw	r16,220(sp)
  800f28:	dec04104 	addi	sp,sp,260
  800f2c:	f800283a 	ret
  800f30:	900b883a 	mov	r5,r18
  800f34:	9809883a 	mov	r4,r19
  800f38:	0802c8c0 	call	802c8c <__swsetup_r>
  800f3c:	1006bc1e 	bne	r2,zero,802a30 <___vfprintf_internal_r+0x1f74>
  800f40:	9080030b 	ldhu	r2,12(r18)
  800f44:	1080068c 	andi	r2,r2,26
  800f48:	10800298 	cmpnei	r2,r2,10
  800f4c:	103f031e 	bne	r2,zero,800b5c <___vfprintf_internal_r+0xa0>
  800f50:	9080038f 	ldh	r2,14(r18)
  800f54:	103f0116 	blt	r2,zero,800b5c <___vfprintf_internal_r+0xa0>
  800f58:	d9c00617 	ldw	r7,24(sp)
  800f5c:	b00d883a 	mov	r6,r22
  800f60:	900b883a 	mov	r5,r18
  800f64:	9809883a 	mov	r4,r19
  800f68:	dfc04017 	ldw	ra,256(sp)
  800f6c:	df003f17 	ldw	fp,252(sp)
  800f70:	ddc03e17 	ldw	r23,248(sp)
  800f74:	dd803d17 	ldw	r22,244(sp)
  800f78:	dd403c17 	ldw	r21,240(sp)
  800f7c:	dd003b17 	ldw	r20,236(sp)
  800f80:	dcc03a17 	ldw	r19,232(sp)
  800f84:	dc803917 	ldw	r18,228(sp)
  800f88:	dc403817 	ldw	r17,224(sp)
  800f8c:	dc003717 	ldw	r16,220(sp)
  800f90:	dec04104 	addi	sp,sp,260
  800f94:	0802bcc1 	jmpi	802bcc <__sbprintf>
  800f98:	63000414 	ori	r12,r12,16
  800f9c:	6080080c 	andi	r2,r12,32
  800fa0:	10008126 	beq	r2,zero,8011a8 <___vfprintf_internal_r+0x6ec>
  800fa4:	d8c00617 	ldw	r3,24(sp)
  800fa8:	00800044 	movi	r2,1
  800fac:	1d000017 	ldw	r20,0(r3)
  800fb0:	1d400117 	ldw	r21,4(r3)
  800fb4:	18c00204 	addi	r3,r3,8
  800fb8:	d8c00615 	stw	r3,24(sp)
  800fbc:	00000906 	br	800fe4 <___vfprintf_internal_r+0x528>
  800fc0:	63000414 	ori	r12,r12,16
  800fc4:	6080080c 	andi	r2,r12,32
  800fc8:	10006b26 	beq	r2,zero,801178 <___vfprintf_internal_r+0x6bc>
  800fcc:	d8c00617 	ldw	r3,24(sp)
  800fd0:	0005883a 	mov	r2,zero
  800fd4:	1d000017 	ldw	r20,0(r3)
  800fd8:	1d400117 	ldw	r21,4(r3)
  800fdc:	18c00204 	addi	r3,r3,8
  800fe0:	d8c00615 	stw	r3,24(sp)
  800fe4:	d8001345 	stb	zero,77(sp)
  800fe8:	40ffffe0 	cmpeqi	r3,r8,-1
  800fec:	001b883a 	mov	r13,zero
  800ff0:	18010e1e 	bne	r3,zero,80142c <___vfprintf_internal_r+0x970>
  800ff4:	047fdfc4 	movi	r17,-129
  800ff8:	6448703a 	and	r4,r12,r17
  800ffc:	a546b03a 	or	r3,r20,r21
  801000:	d9000415 	stw	r4,16(sp)
  801004:	1802be1e 	bne	r3,zero,801b00 <___vfprintf_internal_r+0x1044>
  801008:	40025d1e 	bne	r8,zero,801980 <___vfprintf_internal_r+0xec4>
  80100c:	1003731e 	bne	r2,zero,801ddc <___vfprintf_internal_r+0x1320>
  801010:	6540004c 	andi	r21,r12,1
  801014:	a803ae26 	beq	r21,zero,801ed0 <___vfprintf_internal_r+0x1414>
  801018:	00800c04 	movi	r2,48
  80101c:	d88026c5 	stb	r2,155(sp)
  801020:	dc4026c4 	addi	r17,sp,155
  801024:	0000ba06 	br	801310 <___vfprintf_internal_r+0x854>
  801028:	85e3c83a 	sub	r17,r16,r23
  80102c:	85ffae26 	beq	r16,r23,800ee8 <___vfprintf_internal_r+0x42c>
  801030:	d8c01c17 	ldw	r3,112(sp)
  801034:	d8801b17 	ldw	r2,108(sp)
  801038:	b5c00015 	stw	r23,0(r22)
  80103c:	1c47883a 	add	r3,r3,r17
  801040:	10800044 	addi	r2,r2,1
  801044:	d8801b15 	stw	r2,108(sp)
  801048:	b4400115 	stw	r17,4(r22)
  80104c:	d8c01c15 	stw	r3,112(sp)
  801050:	10800208 	cmpgei	r2,r2,8
  801054:	1000061e 	bne	r2,zero,801070 <___vfprintf_internal_r+0x5b4>
  801058:	b5800204 	addi	r22,r22,8
  80105c:	d8c00517 	ldw	r3,20(sp)
  801060:	80800003 	ldbu	r2,0(r16)
  801064:	1c47883a 	add	r3,r3,r17
  801068:	d8c00515 	stw	r3,20(sp)
  80106c:	003ed306 	br	800bbc <___vfprintf_internal_r+0x100>
  801070:	d9801a04 	addi	r6,sp,104
  801074:	900b883a 	mov	r5,r18
  801078:	9809883a 	mov	r4,r19
  80107c:	0807f700 	call	807f70 <__sprint_r>
  801080:	103f9b1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801084:	dd802704 	addi	r22,sp,156
  801088:	003ff406 	br	80105c <___vfprintf_internal_r+0x5a0>
  80108c:	21003fcc 	andi	r4,r4,255
  801090:	2006651e 	bne	r4,zero,802a28 <___vfprintf_internal_r+0x1f6c>
  801094:	d8c00617 	ldw	r3,24(sp)
  801098:	6080020c 	andi	r2,r12,8
  80109c:	19000204 	addi	r4,r3,8
  8010a0:	d9000e15 	stw	r4,56(sp)
  8010a4:	1003a51e 	bne	r2,zero,801f3c <___vfprintf_internal_r+0x1480>
  8010a8:	d8800617 	ldw	r2,24(sp)
  8010ac:	10c00017 	ldw	r3,0(r2)
  8010b0:	10800117 	ldw	r2,4(r2)
  8010b4:	d8c00915 	stw	r3,36(sp)
  8010b8:	d8800a15 	stw	r2,40(sp)
  8010bc:	dd400a17 	ldw	r21,40(sp)
  8010c0:	dd000917 	ldw	r20,36(sp)
  8010c4:	00a00034 	movhi	r2,32768
  8010c8:	10bfffc4 	addi	r2,r2,-1
  8010cc:	a8a2703a 	and	r17,r21,r2
  8010d0:	01dffc34 	movhi	r7,32752
  8010d4:	01bfffc4 	movi	r6,-1
  8010d8:	39ffffc4 	addi	r7,r7,-1
  8010dc:	a009883a 	mov	r4,r20
  8010e0:	880b883a 	mov	r5,r17
  8010e4:	da000615 	stw	r8,24(sp)
  8010e8:	db000415 	stw	r12,16(sp)
  8010ec:	080d42c0 	call	80d42c <__unorddf2>
  8010f0:	db000417 	ldw	r12,16(sp)
  8010f4:	da000617 	ldw	r8,24(sp)
  8010f8:	1004621e 	bne	r2,zero,802284 <___vfprintf_internal_r+0x17c8>
  8010fc:	01dffc34 	movhi	r7,32752
  801100:	01bfffc4 	movi	r6,-1
  801104:	39ffffc4 	addi	r7,r7,-1
  801108:	a009883a 	mov	r4,r20
  80110c:	880b883a 	mov	r5,r17
  801110:	080c41c0 	call	80c41c <__ledf2>
  801114:	db000417 	ldw	r12,16(sp)
  801118:	da000617 	ldw	r8,24(sp)
  80111c:	0084590e 	bge	zero,r2,802284 <___vfprintf_internal_r+0x17c8>
  801120:	000d883a 	mov	r6,zero
  801124:	000f883a 	mov	r7,zero
  801128:	a009883a 	mov	r4,r20
  80112c:	a80b883a 	mov	r5,r21
  801130:	080c41c0 	call	80c41c <__ledf2>
  801134:	db000417 	ldw	r12,16(sp)
  801138:	10058f16 	blt	r2,zero,802778 <___vfprintf_internal_r+0x1cbc>
  80113c:	db401343 	ldbu	r13,77(sp)
  801140:	e0801210 	cmplti	r2,fp,72
  801144:	1005371e 	bne	r2,zero,802624 <___vfprintf_internal_r+0x1b68>
  801148:	04402074 	movhi	r17,129
  80114c:	8c402c04 	addi	r17,r17,176
  801150:	00bfdfc4 	movi	r2,-129
  801154:	6084703a 	and	r2,r12,r2
  801158:	d8800415 	stw	r2,16(sp)
  80115c:	d8800e17 	ldw	r2,56(sp)
  801160:	050000c4 	movi	r20,3
  801164:	054000c4 	movi	r21,3
  801168:	d8800615 	stw	r2,24(sp)
  80116c:	0011883a 	mov	r8,zero
  801170:	d8000715 	stw	zero,28(sp)
  801174:	00006a06 	br	801320 <___vfprintf_internal_r+0x864>
  801178:	d9000617 	ldw	r4,24(sp)
  80117c:	6080040c 	andi	r2,r12,16
  801180:	20c00104 	addi	r3,r4,4
  801184:	1003681e 	bne	r2,zero,801f28 <___vfprintf_internal_r+0x146c>
  801188:	6080100c 	andi	r2,r12,64
  80118c:	10051f26 	beq	r2,zero,80260c <___vfprintf_internal_r+0x1b50>
  801190:	d8800617 	ldw	r2,24(sp)
  801194:	002b883a 	mov	r21,zero
  801198:	d8c00615 	stw	r3,24(sp)
  80119c:	1500000b 	ldhu	r20,0(r2)
  8011a0:	0005883a 	mov	r2,zero
  8011a4:	003f8f06 	br	800fe4 <___vfprintf_internal_r+0x528>
  8011a8:	d9000617 	ldw	r4,24(sp)
  8011ac:	6080040c 	andi	r2,r12,16
  8011b0:	20c00104 	addi	r3,r4,4
  8011b4:	10034e1e 	bne	r2,zero,801ef0 <___vfprintf_internal_r+0x1434>
  8011b8:	6080100c 	andi	r2,r12,64
  8011bc:	10055726 	beq	r2,zero,80271c <___vfprintf_internal_r+0x1c60>
  8011c0:	d8800617 	ldw	r2,24(sp)
  8011c4:	002b883a 	mov	r21,zero
  8011c8:	d8c00615 	stw	r3,24(sp)
  8011cc:	1500000b 	ldhu	r20,0(r2)
  8011d0:	00800044 	movi	r2,1
  8011d4:	003f8306 	br	800fe4 <___vfprintf_internal_r+0x528>
  8011d8:	03002074 	movhi	r12,129
  8011dc:	89000450 	cmplti	r4,r17,17
  8011e0:	d8801b17 	ldw	r2,108(sp)
  8011e4:	63004004 	addi	r12,r12,256
  8011e8:	20001b1e 	bne	r4,zero,801258 <___vfprintf_internal_r+0x79c>
  8011ec:	05400404 	movi	r21,16
  8011f0:	6039883a 	mov	fp,r12
  8011f4:	00000406 	br	801208 <___vfprintf_internal_r+0x74c>
  8011f8:	8c7ffc04 	addi	r17,r17,-16
  8011fc:	89000448 	cmpgei	r4,r17,17
  801200:	b5800204 	addi	r22,r22,8
  801204:	20001326 	beq	r4,zero,801254 <___vfprintf_internal_r+0x798>
  801208:	10800044 	addi	r2,r2,1
  80120c:	18c00404 	addi	r3,r3,16
  801210:	b7000015 	stw	fp,0(r22)
  801214:	b5400115 	stw	r21,4(r22)
  801218:	d8c01c15 	stw	r3,112(sp)
  80121c:	d8801b15 	stw	r2,108(sp)
  801220:	11000208 	cmpgei	r4,r2,8
  801224:	203ff426 	beq	r4,zero,8011f8 <___vfprintf_internal_r+0x73c>
  801228:	d9801a04 	addi	r6,sp,104
  80122c:	900b883a 	mov	r5,r18
  801230:	9809883a 	mov	r4,r19
  801234:	0807f700 	call	807f70 <__sprint_r>
  801238:	103f2d1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  80123c:	8c7ffc04 	addi	r17,r17,-16
  801240:	89000448 	cmpgei	r4,r17,17
  801244:	d8c01c17 	ldw	r3,112(sp)
  801248:	d8801b17 	ldw	r2,108(sp)
  80124c:	dd802704 	addi	r22,sp,156
  801250:	203fed1e 	bne	r4,zero,801208 <___vfprintf_internal_r+0x74c>
  801254:	e019883a 	mov	r12,fp
  801258:	10800044 	addi	r2,r2,1
  80125c:	1c47883a 	add	r3,r3,r17
  801260:	d8801b15 	stw	r2,108(sp)
  801264:	b3000015 	stw	r12,0(r22)
  801268:	b4400115 	stw	r17,4(r22)
  80126c:	d8c01c15 	stw	r3,112(sp)
  801270:	10800210 	cmplti	r2,r2,8
  801274:	103f121e 	bne	r2,zero,800ec0 <___vfprintf_internal_r+0x404>
  801278:	d9801a04 	addi	r6,sp,104
  80127c:	900b883a 	mov	r5,r18
  801280:	9809883a 	mov	r4,r19
  801284:	0807f700 	call	807f70 <__sprint_r>
  801288:	103f191e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  80128c:	d8c01c17 	ldw	r3,112(sp)
  801290:	003f0b06 	br	800ec0 <___vfprintf_internal_r+0x404>
  801294:	9809883a 	mov	r4,r19
  801298:	0804d940 	call	804d94 <__sinit>
  80129c:	003e1f06 	br	800b1c <___vfprintf_internal_r+0x60>
  8012a0:	21003fcc 	andi	r4,r4,255
  8012a4:	2005dc1e 	bne	r4,zero,802a18 <___vfprintf_internal_r+0x1f5c>
  8012a8:	6080080c 	andi	r2,r12,32
  8012ac:	10004926 	beq	r2,zero,8013d4 <___vfprintf_internal_r+0x918>
  8012b0:	d8c00617 	ldw	r3,24(sp)
  8012b4:	18800117 	ldw	r2,4(r3)
  8012b8:	1d000017 	ldw	r20,0(r3)
  8012bc:	18c00204 	addi	r3,r3,8
  8012c0:	d8c00615 	stw	r3,24(sp)
  8012c4:	102b883a 	mov	r21,r2
  8012c8:	10004e16 	blt	r2,zero,801404 <___vfprintf_internal_r+0x948>
  8012cc:	40bfffd8 	cmpnei	r2,r8,-1
  8012d0:	db401343 	ldbu	r13,77(sp)
  8012d4:	10000626 	beq	r2,zero,8012f0 <___vfprintf_internal_r+0x834>
  8012d8:	047fdfc4 	movi	r17,-129
  8012dc:	6446703a 	and	r3,r12,r17
  8012e0:	a544b03a 	or	r2,r20,r21
  8012e4:	d8c00415 	stw	r3,16(sp)
  8012e8:	1002bb26 	beq	r2,zero,801dd8 <___vfprintf_internal_r+0x131c>
  8012ec:	db000417 	ldw	r12,16(sp)
  8012f0:	a8036e1e 	bne	r21,zero,8020ac <___vfprintf_internal_r+0x15f0>
  8012f4:	a08002a8 	cmpgeui	r2,r20,10
  8012f8:	10036c1e 	bne	r2,zero,8020ac <___vfprintf_internal_r+0x15f0>
  8012fc:	a5000c04 	addi	r20,r20,48
  801300:	dd0026c5 	stb	r20,155(sp)
  801304:	db000415 	stw	r12,16(sp)
  801308:	05400044 	movi	r21,1
  80130c:	dc4026c4 	addi	r17,sp,155
  801310:	4029883a 	mov	r20,r8
  801314:	4540010e 	bge	r8,r21,80131c <___vfprintf_internal_r+0x860>
  801318:	a829883a 	mov	r20,r21
  80131c:	d8000715 	stw	zero,28(sp)
  801320:	6b403fcc 	andi	r13,r13,255
  801324:	6b40201c 	xori	r13,r13,128
  801328:	6b7fe004 	addi	r13,r13,-128
  80132c:	683ea926 	beq	r13,zero,800dd4 <___vfprintf_internal_r+0x318>
  801330:	a5000044 	addi	r20,r20,1
  801334:	003ea706 	br	800dd4 <___vfprintf_internal_r+0x318>
  801338:	bac00007 	ldb	r11,0(r23)
  80133c:	63001014 	ori	r12,r12,64
  801340:	003e2a06 	br	800bec <___vfprintf_internal_r+0x130>
  801344:	d8c00617 	ldw	r3,24(sp)
  801348:	d8001345 	stb	zero,77(sp)
  80134c:	05000044 	movi	r20,1
  801350:	18800017 	ldw	r2,0(r3)
  801354:	18c00104 	addi	r3,r3,4
  801358:	d8c00615 	stw	r3,24(sp)
  80135c:	d8801d05 	stb	r2,116(sp)
  801360:	05400044 	movi	r21,1
  801364:	dc401d04 	addi	r17,sp,116
  801368:	003e9706 	br	800dc8 <___vfprintf_internal_r+0x30c>
  80136c:	21003fcc 	andi	r4,r4,255
  801370:	2005a51e 	bne	r4,zero,802a08 <___vfprintf_internal_r+0x1f4c>
  801374:	00802074 	movhi	r2,129
  801378:	10803404 	addi	r2,r2,208
  80137c:	d8800c15 	stw	r2,48(sp)
  801380:	6080080c 	andi	r2,r12,32
  801384:	10008526 	beq	r2,zero,80159c <___vfprintf_internal_r+0xae0>
  801388:	d8800617 	ldw	r2,24(sp)
  80138c:	15000017 	ldw	r20,0(r2)
  801390:	15400117 	ldw	r21,4(r2)
  801394:	10800204 	addi	r2,r2,8
  801398:	d8800615 	stw	r2,24(sp)
  80139c:	6080004c 	andi	r2,r12,1
  8013a0:	10000226 	beq	r2,zero,8013ac <___vfprintf_internal_r+0x8f0>
  8013a4:	a544b03a 	or	r2,r20,r21
  8013a8:	1002cb1e 	bne	r2,zero,801ed8 <___vfprintf_internal_r+0x141c>
  8013ac:	00800084 	movi	r2,2
  8013b0:	003f0c06 	br	800fe4 <___vfprintf_internal_r+0x528>
  8013b4:	bac00007 	ldb	r11,0(r23)
  8013b8:	63000214 	ori	r12,r12,8
  8013bc:	003e0b06 	br	800bec <___vfprintf_internal_r+0x130>
  8013c0:	21003fcc 	andi	r4,r4,255
  8013c4:	2005961e 	bne	r4,zero,802a20 <___vfprintf_internal_r+0x1f64>
  8013c8:	63000414 	ori	r12,r12,16
  8013cc:	6080080c 	andi	r2,r12,32
  8013d0:	103fb71e 	bne	r2,zero,8012b0 <___vfprintf_internal_r+0x7f4>
  8013d4:	d9000617 	ldw	r4,24(sp)
  8013d8:	6080040c 	andi	r2,r12,16
  8013dc:	20c00104 	addi	r3,r4,4
  8013e0:	1002db1e 	bne	r2,zero,801f50 <___vfprintf_internal_r+0x1494>
  8013e4:	6080100c 	andi	r2,r12,64
  8013e8:	10048226 	beq	r2,zero,8025f4 <___vfprintf_internal_r+0x1b38>
  8013ec:	d8800617 	ldw	r2,24(sp)
  8013f0:	d8c00615 	stw	r3,24(sp)
  8013f4:	1500000f 	ldh	r20,0(r2)
  8013f8:	a02bd7fa 	srai	r21,r20,31
  8013fc:	a805883a 	mov	r2,r21
  801400:	103fb20e 	bge	r2,zero,8012cc <___vfprintf_internal_r+0x810>
  801404:	a004c03a 	cmpne	r2,r20,zero
  801408:	056bc83a 	sub	r21,zero,r21
  80140c:	a8abc83a 	sub	r21,r21,r2
  801410:	00800b44 	movi	r2,45
  801414:	d8801345 	stb	r2,77(sp)
  801418:	40ffffe0 	cmpeqi	r3,r8,-1
  80141c:	0529c83a 	sub	r20,zero,r20
  801420:	03400b44 	movi	r13,45
  801424:	00800044 	movi	r2,1
  801428:	183ef226 	beq	r3,zero,800ff4 <___vfprintf_internal_r+0x538>
  80142c:	10c00060 	cmpeqi	r3,r2,1
  801430:	183faf1e 	bne	r3,zero,8012f0 <___vfprintf_internal_r+0x834>
  801434:	108000a0 	cmpeqi	r2,r2,2
  801438:	1001561e 	bne	r2,zero,801994 <___vfprintf_internal_r+0xed8>
  80143c:	dc402704 	addi	r17,sp,156
  801440:	a006d0fa 	srli	r3,r20,3
  801444:	a808977a 	slli	r4,r21,29
  801448:	a82ad0fa 	srli	r21,r21,3
  80144c:	a50001cc 	andi	r20,r20,7
  801450:	a0800c04 	addi	r2,r20,48
  801454:	20e8b03a 	or	r20,r4,r3
  801458:	88bfffc5 	stb	r2,-1(r17)
  80145c:	a546b03a 	or	r3,r20,r21
  801460:	880b883a 	mov	r5,r17
  801464:	8c7fffc4 	addi	r17,r17,-1
  801468:	183ff51e 	bne	r3,zero,801440 <___vfprintf_internal_r+0x984>
  80146c:	60c0004c 	andi	r3,r12,1
  801470:	18015526 	beq	r3,zero,8019c8 <___vfprintf_internal_r+0xf0c>
  801474:	10803fcc 	andi	r2,r2,255
  801478:	1080201c 	xori	r2,r2,128
  80147c:	10bfe004 	addi	r2,r2,-128
  801480:	10800c18 	cmpnei	r2,r2,48
  801484:	10015026 	beq	r2,zero,8019c8 <___vfprintf_internal_r+0xf0c>
  801488:	00800c04 	movi	r2,48
  80148c:	297fff84 	addi	r5,r5,-2
  801490:	88bfffc5 	stb	r2,-1(r17)
  801494:	d8802704 	addi	r2,sp,156
  801498:	116bc83a 	sub	r21,r2,r5
  80149c:	db000415 	stw	r12,16(sp)
  8014a0:	2823883a 	mov	r17,r5
  8014a4:	003f9a06 	br	801310 <___vfprintf_internal_r+0x854>
  8014a8:	bac00007 	ldb	r11,0(r23)
  8014ac:	63002014 	ori	r12,r12,128
  8014b0:	003dce06 	br	800bec <___vfprintf_internal_r+0x130>
  8014b4:	bf000007 	ldb	fp,0(r23)
  8014b8:	b8c00044 	addi	r3,r23,1
  8014bc:	e0800aa0 	cmpeqi	r2,fp,42
  8014c0:	1005af1e 	bne	r2,zero,802b80 <___vfprintf_internal_r+0x20c4>
  8014c4:	e0bff404 	addi	r2,fp,-48
  8014c8:	118002b0 	cmpltui	r6,r2,10
  8014cc:	182f883a 	mov	r23,r3
  8014d0:	0011883a 	mov	r8,zero
  8014d4:	303dc726 	beq	r6,zero,800bf4 <___vfprintf_internal_r+0x138>
  8014d8:	bf000007 	ldb	fp,0(r23)
  8014dc:	420002a4 	muli	r8,r8,10
  8014e0:	bdc00044 	addi	r23,r23,1
  8014e4:	4091883a 	add	r8,r8,r2
  8014e8:	e0bff404 	addi	r2,fp,-48
  8014ec:	10c002b0 	cmpltui	r3,r2,10
  8014f0:	183ff91e 	bne	r3,zero,8014d8 <___vfprintf_internal_r+0xa1c>
  8014f4:	003dbf06 	br	800bf4 <___vfprintf_internal_r+0x138>
  8014f8:	bf000003 	ldbu	fp,0(r23)
  8014fc:	e2c03fcc 	andi	r11,fp,255
  801500:	5ac0201c 	xori	r11,r11,128
  801504:	63000114 	ori	r12,r12,4
  801508:	5affe004 	addi	r11,r11,-128
  80150c:	003db706 	br	800bec <___vfprintf_internal_r+0x130>
  801510:	bac00007 	ldb	r11,0(r23)
  801514:	01000044 	movi	r4,1
  801518:	01400ac4 	movi	r5,43
  80151c:	003db306 	br	800bec <___vfprintf_internal_r+0x130>
  801520:	d8800617 	ldw	r2,24(sp)
  801524:	bf000003 	ldbu	fp,0(r23)
  801528:	14000017 	ldw	r16,0(r2)
  80152c:	10800104 	addi	r2,r2,4
  801530:	80028c16 	blt	r16,zero,801f64 <___vfprintf_internal_r+0x14a8>
  801534:	d8800615 	stw	r2,24(sp)
  801538:	e2c03fcc 	andi	r11,fp,255
  80153c:	5ac0201c 	xori	r11,r11,128
  801540:	5affe004 	addi	r11,r11,-128
  801544:	003da906 	br	800bec <___vfprintf_internal_r+0x130>
  801548:	bac00007 	ldb	r11,0(r23)
  80154c:	63000054 	ori	r12,r12,1
  801550:	003da606 	br	800bec <___vfprintf_internal_r+0x130>
  801554:	28803fcc 	andi	r2,r5,255
  801558:	1080201c 	xori	r2,r2,128
  80155c:	10bfe004 	addi	r2,r2,-128
  801560:	bf000003 	ldbu	fp,0(r23)
  801564:	103ff41e 	bne	r2,zero,801538 <___vfprintf_internal_r+0xa7c>
  801568:	e2c03fcc 	andi	r11,fp,255
  80156c:	5ac0201c 	xori	r11,r11,128
  801570:	01000044 	movi	r4,1
  801574:	01400804 	movi	r5,32
  801578:	5affe004 	addi	r11,r11,-128
  80157c:	003d9b06 	br	800bec <___vfprintf_internal_r+0x130>
  801580:	21003fcc 	andi	r4,r4,255
  801584:	20051e1e 	bne	r4,zero,802a00 <___vfprintf_internal_r+0x1f44>
  801588:	00802074 	movhi	r2,129
  80158c:	10802f04 	addi	r2,r2,188
  801590:	d8800c15 	stw	r2,48(sp)
  801594:	6080080c 	andi	r2,r12,32
  801598:	103f7b1e 	bne	r2,zero,801388 <___vfprintf_internal_r+0x8cc>
  80159c:	d9000617 	ldw	r4,24(sp)
  8015a0:	6080040c 	andi	r2,r12,16
  8015a4:	20c00104 	addi	r3,r4,4
  8015a8:	10025b1e 	bne	r2,zero,801f18 <___vfprintf_internal_r+0x145c>
  8015ac:	6080100c 	andi	r2,r12,64
  8015b0:	10046026 	beq	r2,zero,802734 <___vfprintf_internal_r+0x1c78>
  8015b4:	d8800617 	ldw	r2,24(sp)
  8015b8:	002b883a 	mov	r21,zero
  8015bc:	d8c00615 	stw	r3,24(sp)
  8015c0:	1500000b 	ldhu	r20,0(r2)
  8015c4:	003f7506 	br	80139c <___vfprintf_internal_r+0x8e0>
  8015c8:	d8800617 	ldw	r2,24(sp)
  8015cc:	d8001345 	stb	zero,77(sp)
  8015d0:	14400017 	ldw	r17,0(r2)
  8015d4:	10c00104 	addi	r3,r2,4
  8015d8:	88028e26 	beq	r17,zero,802014 <___vfprintf_internal_r+0x1558>
  8015dc:	40bfffe0 	cmpeqi	r2,r8,-1
  8015e0:	1003c01e 	bne	r2,zero,8024e4 <___vfprintf_internal_r+0x1a28>
  8015e4:	400d883a 	mov	r6,r8
  8015e8:	000b883a 	mov	r5,zero
  8015ec:	8809883a 	mov	r4,r17
  8015f0:	d8c00715 	stw	r3,28(sp)
  8015f4:	db000615 	stw	r12,24(sp)
  8015f8:	da000415 	stw	r8,16(sp)
  8015fc:	08062340 	call	806234 <memchr>
  801600:	da000417 	ldw	r8,16(sp)
  801604:	db000617 	ldw	r12,24(sp)
  801608:	d8c00717 	ldw	r3,28(sp)
  80160c:	1004ec26 	beq	r2,zero,8029c0 <___vfprintf_internal_r+0x1f04>
  801610:	146bc83a 	sub	r21,r2,r17
  801614:	a829883a 	mov	r20,r21
  801618:	d8c00615 	stw	r3,24(sp)
  80161c:	003dea06 	br	800dc8 <___vfprintf_internal_r+0x30c>
  801620:	bac00007 	ldb	r11,0(r23)
  801624:	63000814 	ori	r12,r12,32
  801628:	003d7006 	br	800bec <___vfprintf_internal_r+0x130>
  80162c:	d8c00617 	ldw	r3,24(sp)
  801630:	00800c04 	movi	r2,48
  801634:	d8801385 	stb	r2,78(sp)
  801638:	00801e04 	movi	r2,120
  80163c:	01002074 	movhi	r4,129
  801640:	d88013c5 	stb	r2,79(sp)
  801644:	18800104 	addi	r2,r3,4
  801648:	d8800615 	stw	r2,24(sp)
  80164c:	20802f04 	addi	r2,r4,188
  801650:	d8800c15 	stw	r2,48(sp)
  801654:	1d000017 	ldw	r20,0(r3)
  801658:	002b883a 	mov	r21,zero
  80165c:	63000094 	ori	r12,r12,2
  801660:	00800084 	movi	r2,2
  801664:	07001e04 	movi	fp,120
  801668:	003e5e06 	br	800fe4 <___vfprintf_internal_r+0x528>
  80166c:	21003fcc 	andi	r4,r4,255
  801670:	2004e71e 	bne	r4,zero,802a10 <___vfprintf_internal_r+0x1f54>
  801674:	d9000617 	ldw	r4,24(sp)
  801678:	6080080c 	andi	r2,r12,32
  80167c:	20c00017 	ldw	r3,0(r4)
  801680:	21000104 	addi	r4,r4,4
  801684:	d9000615 	stw	r4,24(sp)
  801688:	10021e1e 	bne	r2,zero,801f04 <___vfprintf_internal_r+0x1448>
  80168c:	6080040c 	andi	r2,r12,16
  801690:	1002ae1e 	bne	r2,zero,80214c <___vfprintf_internal_r+0x1690>
  801694:	6300100c 	andi	r12,r12,64
  801698:	6002ac26 	beq	r12,zero,80214c <___vfprintf_internal_r+0x1690>
  80169c:	d8800517 	ldw	r2,20(sp)
  8016a0:	1880000d 	sth	r2,0(r3)
  8016a4:	003d3906 	br	800b8c <___vfprintf_internal_r+0xd0>
  8016a8:	bac00007 	ldb	r11,0(r23)
  8016ac:	58801b18 	cmpnei	r2,r11,108
  8016b0:	10024926 	beq	r2,zero,801fd8 <___vfprintf_internal_r+0x151c>
  8016b4:	63000414 	ori	r12,r12,16
  8016b8:	003d4c06 	br	800bec <___vfprintf_internal_r+0x130>
  8016bc:	e2c01990 	cmplti	r11,fp,102
  8016c0:	5800cb1e 	bne	r11,zero,8019f0 <___vfprintf_internal_r+0xf34>
  8016c4:	d9000917 	ldw	r4,36(sp)
  8016c8:	d9400a17 	ldw	r5,40(sp)
  8016cc:	000d883a 	mov	r6,zero
  8016d0:	000f883a 	mov	r7,zero
  8016d4:	d8c00e15 	stw	r3,56(sp)
  8016d8:	080c2b40 	call	80c2b4 <__eqdf2>
  8016dc:	d8c00e17 	ldw	r3,56(sp)
  8016e0:	1001641e 	bne	r2,zero,801c74 <___vfprintf_internal_r+0x11b8>
  8016e4:	d8801b17 	ldw	r2,108(sp)
  8016e8:	01002074 	movhi	r4,129
  8016ec:	21003b04 	addi	r4,r4,236
  8016f0:	10800044 	addi	r2,r2,1
  8016f4:	18c00044 	addi	r3,r3,1
  8016f8:	b1000015 	stw	r4,0(r22)
  8016fc:	01000044 	movi	r4,1
  801700:	d8801b15 	stw	r2,108(sp)
  801704:	b1000115 	stw	r4,4(r22)
  801708:	d8c01c15 	stw	r3,112(sp)
  80170c:	10800208 	cmpgei	r2,r2,8
  801710:	1003621e 	bne	r2,zero,80249c <___vfprintf_internal_r+0x19e0>
  801714:	b5800204 	addi	r22,r22,8
  801718:	d8801417 	ldw	r2,80(sp)
  80171c:	d9000817 	ldw	r4,32(sp)
  801720:	1101e70e 	bge	r2,r4,801ec0 <___vfprintf_internal_r+0x1404>
  801724:	d8800d17 	ldw	r2,52(sp)
  801728:	d9000b17 	ldw	r4,44(sp)
  80172c:	b0800015 	stw	r2,0(r22)
  801730:	d8801b17 	ldw	r2,108(sp)
  801734:	1907883a 	add	r3,r3,r4
  801738:	b1000115 	stw	r4,4(r22)
  80173c:	10800044 	addi	r2,r2,1
  801740:	d8801b15 	stw	r2,108(sp)
  801744:	d8c01c15 	stw	r3,112(sp)
  801748:	10800208 	cmpgei	r2,r2,8
  80174c:	1002291e 	bne	r2,zero,801ff4 <___vfprintf_internal_r+0x1538>
  801750:	b5800204 	addi	r22,r22,8
  801754:	d8800817 	ldw	r2,32(sp)
  801758:	157fffc4 	addi	r21,r2,-1
  80175c:	057dd30e 	bge	zero,r21,800eac <___vfprintf_internal_r+0x3f0>
  801760:	01c02074 	movhi	r7,129
  801764:	a9000450 	cmplti	r4,r21,17
  801768:	d8801b17 	ldw	r2,108(sp)
  80176c:	39c03c04 	addi	r7,r7,240
  801770:	2003461e 	bne	r4,zero,80248c <___vfprintf_internal_r+0x19d0>
  801774:	07000404 	movi	fp,16
  801778:	3823883a 	mov	r17,r7
  80177c:	00000406 	br	801790 <___vfprintf_internal_r+0xcd4>
  801780:	b5800204 	addi	r22,r22,8
  801784:	ad7ffc04 	addi	r21,r21,-16
  801788:	a9000448 	cmpgei	r4,r21,17
  80178c:	20033e26 	beq	r4,zero,802488 <___vfprintf_internal_r+0x19cc>
  801790:	10800044 	addi	r2,r2,1
  801794:	18c00404 	addi	r3,r3,16
  801798:	b4400015 	stw	r17,0(r22)
  80179c:	b7000115 	stw	fp,4(r22)
  8017a0:	d8c01c15 	stw	r3,112(sp)
  8017a4:	d8801b15 	stw	r2,108(sp)
  8017a8:	11000208 	cmpgei	r4,r2,8
  8017ac:	203ff426 	beq	r4,zero,801780 <___vfprintf_internal_r+0xcc4>
  8017b0:	d9801a04 	addi	r6,sp,104
  8017b4:	900b883a 	mov	r5,r18
  8017b8:	9809883a 	mov	r4,r19
  8017bc:	0807f700 	call	807f70 <__sprint_r>
  8017c0:	103dcb1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  8017c4:	d8c01c17 	ldw	r3,112(sp)
  8017c8:	d8801b17 	ldw	r2,108(sp)
  8017cc:	dd802704 	addi	r22,sp,156
  8017d0:	003fec06 	br	801784 <___vfprintf_internal_r+0xcc8>
  8017d4:	8519c83a 	sub	r12,r16,r20
  8017d8:	033da50e 	bge	zero,r12,800e70 <___vfprintf_internal_r+0x3b4>
  8017dc:	01c02074 	movhi	r7,129
  8017e0:	61000450 	cmplti	r4,r12,17
  8017e4:	d8801b17 	ldw	r2,108(sp)
  8017e8:	39c03c04 	addi	r7,r7,240
  8017ec:	2000281e 	bne	r4,zero,801890 <___vfprintf_internal_r+0xdd4>
  8017f0:	dc400e15 	stw	r17,56(sp)
  8017f4:	dc000f15 	stw	r16,60(sp)
  8017f8:	b009883a 	mov	r4,r22
  8017fc:	03400404 	movi	r13,16
  801800:	a02d883a 	mov	r22,r20
  801804:	6021883a 	mov	r16,r12
  801808:	4029883a 	mov	r20,r8
  80180c:	3823883a 	mov	r17,r7
  801810:	00000406 	br	801824 <___vfprintf_internal_r+0xd68>
  801814:	843ffc04 	addi	r16,r16,-16
  801818:	81400448 	cmpgei	r5,r16,17
  80181c:	21000204 	addi	r4,r4,8
  801820:	28001426 	beq	r5,zero,801874 <___vfprintf_internal_r+0xdb8>
  801824:	10800044 	addi	r2,r2,1
  801828:	18c00404 	addi	r3,r3,16
  80182c:	24400015 	stw	r17,0(r4)
  801830:	23400115 	stw	r13,4(r4)
  801834:	d8c01c15 	stw	r3,112(sp)
  801838:	d8801b15 	stw	r2,108(sp)
  80183c:	11400208 	cmpgei	r5,r2,8
  801840:	283ff426 	beq	r5,zero,801814 <___vfprintf_internal_r+0xd58>
  801844:	d9801a04 	addi	r6,sp,104
  801848:	900b883a 	mov	r5,r18
  80184c:	9809883a 	mov	r4,r19
  801850:	0807f700 	call	807f70 <__sprint_r>
  801854:	103da61e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801858:	843ffc04 	addi	r16,r16,-16
  80185c:	81400448 	cmpgei	r5,r16,17
  801860:	d8c01c17 	ldw	r3,112(sp)
  801864:	d8801b17 	ldw	r2,108(sp)
  801868:	d9002704 	addi	r4,sp,156
  80186c:	03400404 	movi	r13,16
  801870:	283fec1e 	bne	r5,zero,801824 <___vfprintf_internal_r+0xd68>
  801874:	8019883a 	mov	r12,r16
  801878:	880f883a 	mov	r7,r17
  80187c:	dc000f17 	ldw	r16,60(sp)
  801880:	dc400e17 	ldw	r17,56(sp)
  801884:	a011883a 	mov	r8,r20
  801888:	b029883a 	mov	r20,r22
  80188c:	202d883a 	mov	r22,r4
  801890:	10800044 	addi	r2,r2,1
  801894:	1b07883a 	add	r3,r3,r12
  801898:	d8801b15 	stw	r2,108(sp)
  80189c:	b1c00015 	stw	r7,0(r22)
  8018a0:	b3000115 	stw	r12,4(r22)
  8018a4:	d8c01c15 	stw	r3,112(sp)
  8018a8:	10800208 	cmpgei	r2,r2,8
  8018ac:	1003031e 	bne	r2,zero,8024bc <___vfprintf_internal_r+0x1a00>
  8018b0:	4551c83a 	sub	r8,r8,r21
  8018b4:	b5800204 	addi	r22,r22,8
  8018b8:	023d6f0e 	bge	zero,r8,800e78 <___vfprintf_internal_r+0x3bc>
  8018bc:	01c02074 	movhi	r7,129
  8018c0:	41000450 	cmplti	r4,r8,17
  8018c4:	d8801b17 	ldw	r2,108(sp)
  8018c8:	39c03c04 	addi	r7,r7,240
  8018cc:	2000221e 	bne	r4,zero,801958 <___vfprintf_internal_r+0xe9c>
  8018d0:	dc400e15 	stw	r17,56(sp)
  8018d4:	dc000f15 	stw	r16,60(sp)
  8018d8:	03000404 	movi	r12,16
  8018dc:	4021883a 	mov	r16,r8
  8018e0:	3823883a 	mov	r17,r7
  8018e4:	00000406 	br	8018f8 <___vfprintf_internal_r+0xe3c>
  8018e8:	843ffc04 	addi	r16,r16,-16
  8018ec:	81000448 	cmpgei	r4,r16,17
  8018f0:	b5800204 	addi	r22,r22,8
  8018f4:	20001426 	beq	r4,zero,801948 <___vfprintf_internal_r+0xe8c>
  8018f8:	10800044 	addi	r2,r2,1
  8018fc:	18c00404 	addi	r3,r3,16
  801900:	b4400015 	stw	r17,0(r22)
  801904:	b3000115 	stw	r12,4(r22)
  801908:	d8c01c15 	stw	r3,112(sp)
  80190c:	d8801b15 	stw	r2,108(sp)
  801910:	11000208 	cmpgei	r4,r2,8
  801914:	203ff426 	beq	r4,zero,8018e8 <___vfprintf_internal_r+0xe2c>
  801918:	d9801a04 	addi	r6,sp,104
  80191c:	900b883a 	mov	r5,r18
  801920:	9809883a 	mov	r4,r19
  801924:	0807f700 	call	807f70 <__sprint_r>
  801928:	103d711e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  80192c:	843ffc04 	addi	r16,r16,-16
  801930:	81000448 	cmpgei	r4,r16,17
  801934:	d8c01c17 	ldw	r3,112(sp)
  801938:	d8801b17 	ldw	r2,108(sp)
  80193c:	dd802704 	addi	r22,sp,156
  801940:	03000404 	movi	r12,16
  801944:	203fec1e 	bne	r4,zero,8018f8 <___vfprintf_internal_r+0xe3c>
  801948:	8011883a 	mov	r8,r16
  80194c:	880f883a 	mov	r7,r17
  801950:	dc000f17 	ldw	r16,60(sp)
  801954:	dc400e17 	ldw	r17,56(sp)
  801958:	10800044 	addi	r2,r2,1
  80195c:	1a07883a 	add	r3,r3,r8
  801960:	d8801b15 	stw	r2,108(sp)
  801964:	b1c00015 	stw	r7,0(r22)
  801968:	b2000115 	stw	r8,4(r22)
  80196c:	d8c01c15 	stw	r3,112(sp)
  801970:	10800208 	cmpgei	r2,r2,8
  801974:	10014a1e 	bne	r2,zero,801ea0 <___vfprintf_internal_r+0x13e4>
  801978:	b5800204 	addi	r22,r22,8
  80197c:	003d3e06 	br	800e78 <___vfprintf_internal_r+0x3bc>
  801980:	10c00060 	cmpeqi	r3,r2,1
  801984:	1803bc1e 	bne	r3,zero,802878 <___vfprintf_internal_r+0x1dbc>
  801988:	108000a0 	cmpeqi	r2,r2,2
  80198c:	db000417 	ldw	r12,16(sp)
  801990:	103eaa26 	beq	r2,zero,80143c <___vfprintf_internal_r+0x980>
  801994:	d9000c17 	ldw	r4,48(sp)
  801998:	dc402704 	addi	r17,sp,156
  80199c:	a08003cc 	andi	r2,r20,15
  8019a0:	a806973a 	slli	r3,r21,28
  8019a4:	a028d13a 	srli	r20,r20,4
  8019a8:	2085883a 	add	r2,r4,r2
  8019ac:	10800003 	ldbu	r2,0(r2)
  8019b0:	a82ad13a 	srli	r21,r21,4
  8019b4:	1d28b03a 	or	r20,r3,r20
  8019b8:	88bfffc5 	stb	r2,-1(r17)
  8019bc:	a544b03a 	or	r2,r20,r21
  8019c0:	8c7fffc4 	addi	r17,r17,-1
  8019c4:	103ff51e 	bne	r2,zero,80199c <___vfprintf_internal_r+0xee0>
  8019c8:	d8802704 	addi	r2,sp,156
  8019cc:	146bc83a 	sub	r21,r2,r17
  8019d0:	db000415 	stw	r12,16(sp)
  8019d4:	003e4e06 	br	801310 <___vfprintf_internal_r+0x854>
  8019d8:	d9801a04 	addi	r6,sp,104
  8019dc:	900b883a 	mov	r5,r18
  8019e0:	9809883a 	mov	r4,r19
  8019e4:	0807f700 	call	807f70 <__sprint_r>
  8019e8:	103d3b26 	beq	r2,zero,800ed8 <___vfprintf_internal_r+0x41c>
  8019ec:	003d4006 	br	800ef0 <___vfprintf_internal_r+0x434>
  8019f0:	d8800817 	ldw	r2,32(sp)
  8019f4:	da001b17 	ldw	r8,108(sp)
  8019f8:	18c00044 	addi	r3,r3,1
  8019fc:	10800088 	cmpgei	r2,r2,2
  801a00:	45400044 	addi	r21,r8,1
  801a04:	b7000204 	addi	fp,r22,8
  801a08:	1000f826 	beq	r2,zero,801dec <___vfprintf_internal_r+0x1330>
  801a0c:	00800044 	movi	r2,1
  801a10:	b0800115 	stw	r2,4(r22)
  801a14:	b4400015 	stw	r17,0(r22)
  801a18:	d8c01c15 	stw	r3,112(sp)
  801a1c:	dd401b15 	stw	r21,108(sp)
  801a20:	a8800210 	cmplti	r2,r21,8
  801a24:	1001cc26 	beq	r2,zero,802158 <___vfprintf_internal_r+0x169c>
  801a28:	d8800b17 	ldw	r2,44(sp)
  801a2c:	d9000d17 	ldw	r4,52(sp)
  801a30:	ad400044 	addi	r21,r21,1
  801a34:	1887883a 	add	r3,r3,r2
  801a38:	e0800115 	stw	r2,4(fp)
  801a3c:	e1000015 	stw	r4,0(fp)
  801a40:	d8c01c15 	stw	r3,112(sp)
  801a44:	dd401b15 	stw	r21,108(sp)
  801a48:	a8800208 	cmpgei	r2,r21,8
  801a4c:	1001cb1e 	bne	r2,zero,80217c <___vfprintf_internal_r+0x16c0>
  801a50:	e7000204 	addi	fp,fp,8
  801a54:	d9000917 	ldw	r4,36(sp)
  801a58:	d9400a17 	ldw	r5,40(sp)
  801a5c:	aa000044 	addi	r8,r21,1
  801a60:	000d883a 	mov	r6,zero
  801a64:	000f883a 	mov	r7,zero
  801a68:	d8c00e15 	stw	r3,56(sp)
  801a6c:	da000715 	stw	r8,28(sp)
  801a70:	080c2b40 	call	80c2b4 <__eqdf2>
  801a74:	d8c00817 	ldw	r3,32(sp)
  801a78:	da000717 	ldw	r8,28(sp)
  801a7c:	e5800204 	addi	r22,fp,8
  801a80:	1affffc4 	addi	r11,r3,-1
  801a84:	d8c00e17 	ldw	r3,56(sp)
  801a88:	1000e526 	beq	r2,zero,801e20 <___vfprintf_internal_r+0x1364>
  801a8c:	8a400044 	addi	r9,r17,1
  801a90:	1ac7883a 	add	r3,r3,r11
  801a94:	da001b15 	stw	r8,108(sp)
  801a98:	e2400015 	stw	r9,0(fp)
  801a9c:	e2c00115 	stw	r11,4(fp)
  801aa0:	d8c01c15 	stw	r3,112(sp)
  801aa4:	42000208 	cmpgei	r8,r8,8
  801aa8:	40013e1e 	bne	r8,zero,801fa4 <___vfprintf_internal_r+0x14e8>
  801aac:	e0800404 	addi	r2,fp,16
  801ab0:	aa000084 	addi	r8,r21,2
  801ab4:	b039883a 	mov	fp,r22
  801ab8:	102d883a 	mov	r22,r2
  801abc:	d9001017 	ldw	r4,64(sp)
  801ac0:	d8801644 	addi	r2,sp,89
  801ac4:	da001b15 	stw	r8,108(sp)
  801ac8:	20c7883a 	add	r3,r4,r3
  801acc:	e0800015 	stw	r2,0(fp)
  801ad0:	e1000115 	stw	r4,4(fp)
  801ad4:	d8c01c15 	stw	r3,112(sp)
  801ad8:	42000210 	cmplti	r8,r8,8
  801adc:	403cf31e 	bne	r8,zero,800eac <___vfprintf_internal_r+0x3f0>
  801ae0:	d9801a04 	addi	r6,sp,104
  801ae4:	900b883a 	mov	r5,r18
  801ae8:	9809883a 	mov	r4,r19
  801aec:	0807f700 	call	807f70 <__sprint_r>
  801af0:	103cff1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801af4:	d8c01c17 	ldw	r3,112(sp)
  801af8:	dd802704 	addi	r22,sp,156
  801afc:	003ceb06 	br	800eac <___vfprintf_internal_r+0x3f0>
  801b00:	db000417 	ldw	r12,16(sp)
  801b04:	003e4906 	br	80142c <___vfprintf_internal_r+0x970>
  801b08:	03002074 	movhi	r12,129
  801b0c:	39000450 	cmplti	r4,r7,17
  801b10:	d8801b17 	ldw	r2,108(sp)
  801b14:	63004004 	addi	r12,r12,256
  801b18:	2000321e 	bne	r4,zero,801be4 <___vfprintf_internal_r+0x1128>
  801b1c:	dc401115 	stw	r17,68(sp)
  801b20:	b009883a 	mov	r4,r22
  801b24:	9023883a 	mov	r17,r18
  801b28:	a82d883a 	mov	r22,r21
  801b2c:	ddc01215 	stw	r23,72(sp)
  801b30:	03c00404 	movi	r15,16
  801b34:	a02f883a 	mov	r23,r20
  801b38:	db800e15 	stw	r14,56(sp)
  801b3c:	8029883a 	mov	r20,r16
  801b40:	db400f15 	stw	r13,60(sp)
  801b44:	402b883a 	mov	r21,r8
  801b48:	3821883a 	mov	r16,r7
  801b4c:	6025883a 	mov	r18,r12
  801b50:	00000406 	br	801b64 <___vfprintf_internal_r+0x10a8>
  801b54:	843ffc04 	addi	r16,r16,-16
  801b58:	81800448 	cmpgei	r6,r16,17
  801b5c:	21000204 	addi	r4,r4,8
  801b60:	30001426 	beq	r6,zero,801bb4 <___vfprintf_internal_r+0x10f8>
  801b64:	10800044 	addi	r2,r2,1
  801b68:	18c00404 	addi	r3,r3,16
  801b6c:	24800015 	stw	r18,0(r4)
  801b70:	23c00115 	stw	r15,4(r4)
  801b74:	d8c01c15 	stw	r3,112(sp)
  801b78:	d8801b15 	stw	r2,108(sp)
  801b7c:	11800208 	cmpgei	r6,r2,8
  801b80:	303ff426 	beq	r6,zero,801b54 <___vfprintf_internal_r+0x1098>
  801b84:	d9801a04 	addi	r6,sp,104
  801b88:	880b883a 	mov	r5,r17
  801b8c:	9809883a 	mov	r4,r19
  801b90:	0807f700 	call	807f70 <__sprint_r>
  801b94:	1001b91e 	bne	r2,zero,80227c <___vfprintf_internal_r+0x17c0>
  801b98:	843ffc04 	addi	r16,r16,-16
  801b9c:	81800448 	cmpgei	r6,r16,17
  801ba0:	d8c01c17 	ldw	r3,112(sp)
  801ba4:	d8801b17 	ldw	r2,108(sp)
  801ba8:	d9002704 	addi	r4,sp,156
  801bac:	03c00404 	movi	r15,16
  801bb0:	303fec1e 	bne	r6,zero,801b64 <___vfprintf_internal_r+0x10a8>
  801bb4:	800f883a 	mov	r7,r16
  801bb8:	9019883a 	mov	r12,r18
  801bbc:	a021883a 	mov	r16,r20
  801bc0:	8825883a 	mov	r18,r17
  801bc4:	b829883a 	mov	r20,r23
  801bc8:	db800e17 	ldw	r14,56(sp)
  801bcc:	db400f17 	ldw	r13,60(sp)
  801bd0:	ddc01217 	ldw	r23,72(sp)
  801bd4:	dc401117 	ldw	r17,68(sp)
  801bd8:	a811883a 	mov	r8,r21
  801bdc:	b02b883a 	mov	r21,r22
  801be0:	202d883a 	mov	r22,r4
  801be4:	10800044 	addi	r2,r2,1
  801be8:	19c7883a 	add	r3,r3,r7
  801bec:	d8801b15 	stw	r2,108(sp)
  801bf0:	b3000015 	stw	r12,0(r22)
  801bf4:	b1c00115 	stw	r7,4(r22)
  801bf8:	d8c01c15 	stw	r3,112(sp)
  801bfc:	10800208 	cmpgei	r2,r2,8
  801c00:	1001671e 	bne	r2,zero,8021a0 <___vfprintf_internal_r+0x16e4>
  801c04:	b5800204 	addi	r22,r22,8
  801c08:	003c7c06 	br	800dfc <___vfprintf_internal_r+0x340>
  801c0c:	d9801a04 	addi	r6,sp,104
  801c10:	900b883a 	mov	r5,r18
  801c14:	9809883a 	mov	r4,r19
  801c18:	da001115 	stw	r8,68(sp)
  801c1c:	db400f15 	stw	r13,60(sp)
  801c20:	db800e15 	stw	r14,56(sp)
  801c24:	0807f700 	call	807f70 <__sprint_r>
  801c28:	103cb11e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801c2c:	d8c01c17 	ldw	r3,112(sp)
  801c30:	da001117 	ldw	r8,68(sp)
  801c34:	db400f17 	ldw	r13,60(sp)
  801c38:	db800e17 	ldw	r14,56(sp)
  801c3c:	dd802704 	addi	r22,sp,156
  801c40:	003c7c06 	br	800e34 <___vfprintf_internal_r+0x378>
  801c44:	d9801a04 	addi	r6,sp,104
  801c48:	900b883a 	mov	r5,r18
  801c4c:	9809883a 	mov	r4,r19
  801c50:	da000f15 	stw	r8,60(sp)
  801c54:	db400e15 	stw	r13,56(sp)
  801c58:	0807f700 	call	807f70 <__sprint_r>
  801c5c:	103ca41e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801c60:	d8c01c17 	ldw	r3,112(sp)
  801c64:	da000f17 	ldw	r8,60(sp)
  801c68:	db400e17 	ldw	r13,56(sp)
  801c6c:	dd802704 	addi	r22,sp,156
  801c70:	003c7d06 	br	800e68 <___vfprintf_internal_r+0x3ac>
  801c74:	d9401417 	ldw	r5,80(sp)
  801c78:	0141570e 	bge	zero,r5,8021d8 <___vfprintf_internal_r+0x171c>
  801c7c:	d8800717 	ldw	r2,28(sp)
  801c80:	d9000817 	ldw	r4,32(sp)
  801c84:	102b883a 	mov	r21,r2
  801c88:	2080b916 	blt	r4,r2,801f70 <___vfprintf_internal_r+0x14b4>
  801c8c:	05400a0e 	bge	zero,r21,801cb8 <___vfprintf_internal_r+0x11fc>
  801c90:	d8801b17 	ldw	r2,108(sp)
  801c94:	1d47883a 	add	r3,r3,r21
  801c98:	b4400015 	stw	r17,0(r22)
  801c9c:	10800044 	addi	r2,r2,1
  801ca0:	d8801b15 	stw	r2,108(sp)
  801ca4:	b5400115 	stw	r21,4(r22)
  801ca8:	d8c01c15 	stw	r3,112(sp)
  801cac:	10800208 	cmpgei	r2,r2,8
  801cb0:	10032d1e 	bne	r2,zero,802968 <___vfprintf_internal_r+0x1eac>
  801cb4:	b5800204 	addi	r22,r22,8
  801cb8:	a800c516 	blt	r21,zero,801fd0 <___vfprintf_internal_r+0x1514>
  801cbc:	d8800717 	ldw	r2,28(sp)
  801cc0:	156bc83a 	sub	r21,r2,r21
  801cc4:	0540db16 	blt	zero,r21,802034 <___vfprintf_internal_r+0x1578>
  801cc8:	dd401417 	ldw	r21,80(sp)
  801ccc:	d8800817 	ldw	r2,32(sp)
  801cd0:	a880aa0e 	bge	r21,r2,801f7c <___vfprintf_internal_r+0x14c0>
  801cd4:	d8800d17 	ldw	r2,52(sp)
  801cd8:	d9000b17 	ldw	r4,44(sp)
  801cdc:	b0800015 	stw	r2,0(r22)
  801ce0:	d8801b17 	ldw	r2,108(sp)
  801ce4:	1907883a 	add	r3,r3,r4
  801ce8:	b1000115 	stw	r4,4(r22)
  801cec:	10800044 	addi	r2,r2,1
  801cf0:	d8801b15 	stw	r2,108(sp)
  801cf4:	d8c01c15 	stw	r3,112(sp)
  801cf8:	10800208 	cmpgei	r2,r2,8
  801cfc:	1003111e 	bne	r2,zero,802944 <___vfprintf_internal_r+0x1e88>
  801d00:	b5800204 	addi	r22,r22,8
  801d04:	d9000817 	ldw	r4,32(sp)
  801d08:	d9400717 	ldw	r5,28(sp)
  801d0c:	2545c83a 	sub	r2,r4,r21
  801d10:	2149c83a 	sub	r4,r4,r5
  801d14:	102b883a 	mov	r21,r2
  801d18:	2080010e 	bge	r4,r2,801d20 <___vfprintf_internal_r+0x1264>
  801d1c:	202b883a 	mov	r21,r4
  801d20:	05400c0e 	bge	zero,r21,801d54 <___vfprintf_internal_r+0x1298>
  801d24:	d9000717 	ldw	r4,28(sp)
  801d28:	1d47883a 	add	r3,r3,r21
  801d2c:	b5400115 	stw	r21,4(r22)
  801d30:	8913883a 	add	r9,r17,r4
  801d34:	d9001b17 	ldw	r4,108(sp)
  801d38:	b2400015 	stw	r9,0(r22)
  801d3c:	d8c01c15 	stw	r3,112(sp)
  801d40:	21000044 	addi	r4,r4,1
  801d44:	d9001b15 	stw	r4,108(sp)
  801d48:	21000208 	cmpgei	r4,r4,8
  801d4c:	2003111e 	bne	r4,zero,802994 <___vfprintf_internal_r+0x1ed8>
  801d50:	b5800204 	addi	r22,r22,8
  801d54:	a800010e 	bge	r21,zero,801d5c <___vfprintf_internal_r+0x12a0>
  801d58:	002b883a 	mov	r21,zero
  801d5c:	156bc83a 	sub	r21,r2,r21
  801d60:	057c520e 	bge	zero,r21,800eac <___vfprintf_internal_r+0x3f0>
  801d64:	01c02074 	movhi	r7,129
  801d68:	a9000450 	cmplti	r4,r21,17
  801d6c:	d8801b17 	ldw	r2,108(sp)
  801d70:	39c03c04 	addi	r7,r7,240
  801d74:	2001c51e 	bne	r4,zero,80248c <___vfprintf_internal_r+0x19d0>
  801d78:	07000404 	movi	fp,16
  801d7c:	3823883a 	mov	r17,r7
  801d80:	00000406 	br	801d94 <___vfprintf_internal_r+0x12d8>
  801d84:	b5800204 	addi	r22,r22,8
  801d88:	ad7ffc04 	addi	r21,r21,-16
  801d8c:	a9000448 	cmpgei	r4,r21,17
  801d90:	2001bd26 	beq	r4,zero,802488 <___vfprintf_internal_r+0x19cc>
  801d94:	10800044 	addi	r2,r2,1
  801d98:	18c00404 	addi	r3,r3,16
  801d9c:	b4400015 	stw	r17,0(r22)
  801da0:	b7000115 	stw	fp,4(r22)
  801da4:	d8c01c15 	stw	r3,112(sp)
  801da8:	d8801b15 	stw	r2,108(sp)
  801dac:	11000208 	cmpgei	r4,r2,8
  801db0:	203ff426 	beq	r4,zero,801d84 <___vfprintf_internal_r+0x12c8>
  801db4:	d9801a04 	addi	r6,sp,104
  801db8:	900b883a 	mov	r5,r18
  801dbc:	9809883a 	mov	r4,r19
  801dc0:	0807f700 	call	807f70 <__sprint_r>
  801dc4:	103c4a1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801dc8:	d8c01c17 	ldw	r3,112(sp)
  801dcc:	d8801b17 	ldw	r2,108(sp)
  801dd0:	dd802704 	addi	r22,sp,156
  801dd4:	003fec06 	br	801d88 <___vfprintf_internal_r+0x12cc>
  801dd8:	4002a71e 	bne	r8,zero,802878 <___vfprintf_internal_r+0x1dbc>
  801ddc:	0011883a 	mov	r8,zero
  801de0:	002b883a 	mov	r21,zero
  801de4:	dc402704 	addi	r17,sp,156
  801de8:	003d4906 	br	801310 <___vfprintf_internal_r+0x854>
  801dec:	d8800417 	ldw	r2,16(sp)
  801df0:	1080004c 	andi	r2,r2,1
  801df4:	103f051e 	bne	r2,zero,801a0c <___vfprintf_internal_r+0xf50>
  801df8:	00800044 	movi	r2,1
  801dfc:	dd401b15 	stw	r21,108(sp)
  801e00:	b4400015 	stw	r17,0(r22)
  801e04:	b0800115 	stw	r2,4(r22)
  801e08:	d8c01c15 	stw	r3,112(sp)
  801e0c:	ad400208 	cmpgei	r21,r21,8
  801e10:	a800641e 	bne	r21,zero,801fa4 <___vfprintf_internal_r+0x14e8>
  801e14:	42000084 	addi	r8,r8,2
  801e18:	b5800404 	addi	r22,r22,16
  801e1c:	003f2706 	br	801abc <___vfprintf_internal_r+0x1000>
  801e20:	02ff260e 	bge	zero,r11,801abc <___vfprintf_internal_r+0x1000>
  801e24:	58800450 	cmplti	r2,r11,17
  801e28:	01c02074 	movhi	r7,129
  801e2c:	10034c1e 	bne	r2,zero,802b60 <___vfprintf_internal_r+0x20a4>
  801e30:	39c03c04 	addi	r7,r7,240
  801e34:	dc000715 	stw	r16,28(sp)
  801e38:	05800404 	movi	r22,16
  801e3c:	5823883a 	mov	r17,r11
  801e40:	3821883a 	mov	r16,r7
  801e44:	402b883a 	mov	r21,r8
  801e48:	00000506 	br	801e60 <___vfprintf_internal_r+0x13a4>
  801e4c:	e7000204 	addi	fp,fp,8
  801e50:	8c7ffc04 	addi	r17,r17,-16
  801e54:	88800448 	cmpgei	r2,r17,17
  801e58:	1001d626 	beq	r2,zero,8025b4 <___vfprintf_internal_r+0x1af8>
  801e5c:	ad400044 	addi	r21,r21,1
  801e60:	18c00404 	addi	r3,r3,16
  801e64:	e4000015 	stw	r16,0(fp)
  801e68:	e5800115 	stw	r22,4(fp)
  801e6c:	d8c01c15 	stw	r3,112(sp)
  801e70:	dd401b15 	stw	r21,108(sp)
  801e74:	a8800208 	cmpgei	r2,r21,8
  801e78:	103ff426 	beq	r2,zero,801e4c <___vfprintf_internal_r+0x1390>
  801e7c:	d9801a04 	addi	r6,sp,104
  801e80:	900b883a 	mov	r5,r18
  801e84:	9809883a 	mov	r4,r19
  801e88:	0807f700 	call	807f70 <__sprint_r>
  801e8c:	103c181e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801e90:	dd401b17 	ldw	r21,108(sp)
  801e94:	d8c01c17 	ldw	r3,112(sp)
  801e98:	df002704 	addi	fp,sp,156
  801e9c:	003fec06 	br	801e50 <___vfprintf_internal_r+0x1394>
  801ea0:	d9801a04 	addi	r6,sp,104
  801ea4:	900b883a 	mov	r5,r18
  801ea8:	9809883a 	mov	r4,r19
  801eac:	0807f700 	call	807f70 <__sprint_r>
  801eb0:	103c0f1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801eb4:	d8c01c17 	ldw	r3,112(sp)
  801eb8:	dd802704 	addi	r22,sp,156
  801ebc:	003bee06 	br	800e78 <___vfprintf_internal_r+0x3bc>
  801ec0:	d8800417 	ldw	r2,16(sp)
  801ec4:	1080004c 	andi	r2,r2,1
  801ec8:	103bf826 	beq	r2,zero,800eac <___vfprintf_internal_r+0x3f0>
  801ecc:	003e1506 	br	801724 <___vfprintf_internal_r+0xc68>
  801ed0:	dc402704 	addi	r17,sp,156
  801ed4:	003d0e06 	br	801310 <___vfprintf_internal_r+0x854>
  801ed8:	00800c04 	movi	r2,48
  801edc:	d8801385 	stb	r2,78(sp)
  801ee0:	df0013c5 	stb	fp,79(sp)
  801ee4:	63000094 	ori	r12,r12,2
  801ee8:	00800084 	movi	r2,2
  801eec:	003c3d06 	br	800fe4 <___vfprintf_internal_r+0x528>
  801ef0:	25000017 	ldw	r20,0(r4)
  801ef4:	002b883a 	mov	r21,zero
  801ef8:	d8c00615 	stw	r3,24(sp)
  801efc:	00800044 	movi	r2,1
  801f00:	003c3806 	br	800fe4 <___vfprintf_internal_r+0x528>
  801f04:	d9000517 	ldw	r4,20(sp)
  801f08:	2005d7fa 	srai	r2,r4,31
  801f0c:	19000015 	stw	r4,0(r3)
  801f10:	18800115 	stw	r2,4(r3)
  801f14:	003b1d06 	br	800b8c <___vfprintf_internal_r+0xd0>
  801f18:	25000017 	ldw	r20,0(r4)
  801f1c:	002b883a 	mov	r21,zero
  801f20:	d8c00615 	stw	r3,24(sp)
  801f24:	003d1d06 	br	80139c <___vfprintf_internal_r+0x8e0>
  801f28:	25000017 	ldw	r20,0(r4)
  801f2c:	002b883a 	mov	r21,zero
  801f30:	d8c00615 	stw	r3,24(sp)
  801f34:	0005883a 	mov	r2,zero
  801f38:	003c2a06 	br	800fe4 <___vfprintf_internal_r+0x528>
  801f3c:	18800017 	ldw	r2,0(r3)
  801f40:	d8800915 	stw	r2,36(sp)
  801f44:	18800117 	ldw	r2,4(r3)
  801f48:	d8800a15 	stw	r2,40(sp)
  801f4c:	003c5b06 	br	8010bc <___vfprintf_internal_r+0x600>
  801f50:	25000017 	ldw	r20,0(r4)
  801f54:	d8c00615 	stw	r3,24(sp)
  801f58:	a02bd7fa 	srai	r21,r20,31
  801f5c:	a805883a 	mov	r2,r21
  801f60:	003cd906 	br	8012c8 <___vfprintf_internal_r+0x80c>
  801f64:	0421c83a 	sub	r16,zero,r16
  801f68:	d8800615 	stw	r2,24(sp)
  801f6c:	003d6306 	br	8014fc <___vfprintf_internal_r+0xa40>
  801f70:	202b883a 	mov	r21,r4
  801f74:	057f4616 	blt	zero,r21,801c90 <___vfprintf_internal_r+0x11d4>
  801f78:	003f4f06 	br	801cb8 <___vfprintf_internal_r+0x11fc>
  801f7c:	d8800417 	ldw	r2,16(sp)
  801f80:	1080004c 	andi	r2,r2,1
  801f84:	103f531e 	bne	r2,zero,801cd4 <___vfprintf_internal_r+0x1218>
  801f88:	d9000817 	ldw	r4,32(sp)
  801f8c:	d9400717 	ldw	r5,28(sp)
  801f90:	2545c83a 	sub	r2,r4,r21
  801f94:	216bc83a 	sub	r21,r4,r5
  801f98:	157f6e0e 	bge	r2,r21,801d54 <___vfprintf_internal_r+0x1298>
  801f9c:	102b883a 	mov	r21,r2
  801fa0:	003f6c06 	br	801d54 <___vfprintf_internal_r+0x1298>
  801fa4:	d9801a04 	addi	r6,sp,104
  801fa8:	900b883a 	mov	r5,r18
  801fac:	9809883a 	mov	r4,r19
  801fb0:	0807f700 	call	807f70 <__sprint_r>
  801fb4:	103bce1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  801fb8:	da001b17 	ldw	r8,108(sp)
  801fbc:	d8c01c17 	ldw	r3,112(sp)
  801fc0:	dd802904 	addi	r22,sp,164
  801fc4:	42000044 	addi	r8,r8,1
  801fc8:	df002704 	addi	fp,sp,156
  801fcc:	003ebb06 	br	801abc <___vfprintf_internal_r+0x1000>
  801fd0:	002b883a 	mov	r21,zero
  801fd4:	003f3906 	br	801cbc <___vfprintf_internal_r+0x1200>
  801fd8:	bf000043 	ldbu	fp,1(r23)
  801fdc:	63000814 	ori	r12,r12,32
  801fe0:	bdc00044 	addi	r23,r23,1
  801fe4:	e2c03fcc 	andi	r11,fp,255
  801fe8:	5ac0201c 	xori	r11,r11,128
  801fec:	5affe004 	addi	r11,r11,-128
  801ff0:	003afe06 	br	800bec <___vfprintf_internal_r+0x130>
  801ff4:	d9801a04 	addi	r6,sp,104
  801ff8:	900b883a 	mov	r5,r18
  801ffc:	9809883a 	mov	r4,r19
  802000:	0807f700 	call	807f70 <__sprint_r>
  802004:	103bba1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  802008:	d8c01c17 	ldw	r3,112(sp)
  80200c:	dd802704 	addi	r22,sp,156
  802010:	003dd006 	br	801754 <___vfprintf_internal_r+0xc98>
  802014:	408001f0 	cmpltui	r2,r8,7
  802018:	402b883a 	mov	r21,r8
  80201c:	1001e726 	beq	r2,zero,8027bc <___vfprintf_internal_r+0x1d00>
  802020:	04402074 	movhi	r17,129
  802024:	a829883a 	mov	r20,r21
  802028:	d8c00615 	stw	r3,24(sp)
  80202c:	8c403904 	addi	r17,r17,228
  802030:	003b6506 	br	800dc8 <___vfprintf_internal_r+0x30c>
  802034:	01c02074 	movhi	r7,129
  802038:	a9000450 	cmplti	r4,r21,17
  80203c:	d8801b17 	ldw	r2,108(sp)
  802040:	39c03c04 	addi	r7,r7,240
  802044:	2001c21e 	bne	r4,zero,802750 <___vfprintf_internal_r+0x1c94>
  802048:	dc000e15 	stw	r16,56(sp)
  80204c:	07000404 	movi	fp,16
  802050:	3821883a 	mov	r16,r7
  802054:	00000406 	br	802068 <___vfprintf_internal_r+0x15ac>
  802058:	b5800204 	addi	r22,r22,8
  80205c:	ad7ffc04 	addi	r21,r21,-16
  802060:	a9000448 	cmpgei	r4,r21,17
  802064:	2001b826 	beq	r4,zero,802748 <___vfprintf_internal_r+0x1c8c>
  802068:	10800044 	addi	r2,r2,1
  80206c:	18c00404 	addi	r3,r3,16
  802070:	b4000015 	stw	r16,0(r22)
  802074:	b7000115 	stw	fp,4(r22)
  802078:	d8c01c15 	stw	r3,112(sp)
  80207c:	d8801b15 	stw	r2,108(sp)
  802080:	11000208 	cmpgei	r4,r2,8
  802084:	203ff426 	beq	r4,zero,802058 <___vfprintf_internal_r+0x159c>
  802088:	d9801a04 	addi	r6,sp,104
  80208c:	900b883a 	mov	r5,r18
  802090:	9809883a 	mov	r4,r19
  802094:	0807f700 	call	807f70 <__sprint_r>
  802098:	103b951e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  80209c:	d8c01c17 	ldw	r3,112(sp)
  8020a0:	d8801b17 	ldw	r2,108(sp)
  8020a4:	dd802704 	addi	r22,sp,156
  8020a8:	003fec06 	br	80205c <___vfprintf_internal_r+0x15a0>
  8020ac:	dc402704 	addi	r17,sp,156
  8020b0:	a805883a 	mov	r2,r21
  8020b4:	dc000715 	stw	r16,28(sp)
  8020b8:	902b883a 	mov	r21,r18
  8020bc:	8821883a 	mov	r16,r17
  8020c0:	db000415 	stw	r12,16(sp)
  8020c4:	a023883a 	mov	r17,r20
  8020c8:	da000e15 	stw	r8,56(sp)
  8020cc:	9829883a 	mov	r20,r19
  8020d0:	1025883a 	mov	r18,r2
  8020d4:	6827883a 	mov	r19,r13
  8020d8:	8809883a 	mov	r4,r17
  8020dc:	900b883a 	mov	r5,r18
  8020e0:	01800284 	movi	r6,10
  8020e4:	000f883a 	mov	r7,zero
  8020e8:	080aa800 	call	80aa80 <__umoddi3>
  8020ec:	10800c04 	addi	r2,r2,48
  8020f0:	8809883a 	mov	r4,r17
  8020f4:	900b883a 	mov	r5,r18
  8020f8:	01800284 	movi	r6,10
  8020fc:	000f883a 	mov	r7,zero
  802100:	80bfffc5 	stb	r2,-1(r16)
  802104:	080a4f00 	call	80a4f0 <__udivdi3>
  802108:	900d883a 	mov	r6,r18
  80210c:	880f883a 	mov	r7,r17
  802110:	843fffc4 	addi	r16,r16,-1
  802114:	1023883a 	mov	r17,r2
  802118:	1825883a 	mov	r18,r3
  80211c:	303fee1e 	bne	r6,zero,8020d8 <___vfprintf_internal_r+0x161c>
  802120:	39c002a8 	cmpgeui	r7,r7,10
  802124:	383fec1e 	bne	r7,zero,8020d8 <___vfprintf_internal_r+0x161c>
  802128:	8023883a 	mov	r17,r16
  80212c:	d8802704 	addi	r2,sp,156
  802130:	981b883a 	mov	r13,r19
  802134:	a825883a 	mov	r18,r21
  802138:	dc000717 	ldw	r16,28(sp)
  80213c:	da000e17 	ldw	r8,56(sp)
  802140:	a027883a 	mov	r19,r20
  802144:	146bc83a 	sub	r21,r2,r17
  802148:	003c7106 	br	801310 <___vfprintf_internal_r+0x854>
  80214c:	d8800517 	ldw	r2,20(sp)
  802150:	18800015 	stw	r2,0(r3)
  802154:	003a8d06 	br	800b8c <___vfprintf_internal_r+0xd0>
  802158:	d9801a04 	addi	r6,sp,104
  80215c:	900b883a 	mov	r5,r18
  802160:	9809883a 	mov	r4,r19
  802164:	0807f700 	call	807f70 <__sprint_r>
  802168:	103b611e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  80216c:	d8c01c17 	ldw	r3,112(sp)
  802170:	dd401b17 	ldw	r21,108(sp)
  802174:	df002704 	addi	fp,sp,156
  802178:	003e2b06 	br	801a28 <___vfprintf_internal_r+0xf6c>
  80217c:	d9801a04 	addi	r6,sp,104
  802180:	900b883a 	mov	r5,r18
  802184:	9809883a 	mov	r4,r19
  802188:	0807f700 	call	807f70 <__sprint_r>
  80218c:	103b581e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  802190:	d8c01c17 	ldw	r3,112(sp)
  802194:	dd401b17 	ldw	r21,108(sp)
  802198:	df002704 	addi	fp,sp,156
  80219c:	003e2d06 	br	801a54 <___vfprintf_internal_r+0xf98>
  8021a0:	d9801a04 	addi	r6,sp,104
  8021a4:	900b883a 	mov	r5,r18
  8021a8:	9809883a 	mov	r4,r19
  8021ac:	da001115 	stw	r8,68(sp)
  8021b0:	db400f15 	stw	r13,60(sp)
  8021b4:	db800e15 	stw	r14,56(sp)
  8021b8:	0807f700 	call	807f70 <__sprint_r>
  8021bc:	103b4c1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  8021c0:	d8c01c17 	ldw	r3,112(sp)
  8021c4:	da001117 	ldw	r8,68(sp)
  8021c8:	db400f17 	ldw	r13,60(sp)
  8021cc:	db800e17 	ldw	r14,56(sp)
  8021d0:	dd802704 	addi	r22,sp,156
  8021d4:	003b0906 	br	800dfc <___vfprintf_internal_r+0x340>
  8021d8:	d8801b17 	ldw	r2,108(sp)
  8021dc:	01002074 	movhi	r4,129
  8021e0:	21003b04 	addi	r4,r4,236
  8021e4:	10800044 	addi	r2,r2,1
  8021e8:	18c00044 	addi	r3,r3,1
  8021ec:	b1000015 	stw	r4,0(r22)
  8021f0:	01000044 	movi	r4,1
  8021f4:	d8801b15 	stw	r2,108(sp)
  8021f8:	b1000115 	stw	r4,4(r22)
  8021fc:	d8c01c15 	stw	r3,112(sp)
  802200:	10800208 	cmpgei	r2,r2,8
  802204:	1001641e 	bne	r2,zero,802798 <___vfprintf_internal_r+0x1cdc>
  802208:	b5800204 	addi	r22,r22,8
  80220c:	2800bd1e 	bne	r5,zero,802504 <___vfprintf_internal_r+0x1a48>
  802210:	d8800417 	ldw	r2,16(sp)
  802214:	d9000817 	ldw	r4,32(sp)
  802218:	1080004c 	andi	r2,r2,1
  80221c:	1104b03a 	or	r2,r2,r4
  802220:	103b2226 	beq	r2,zero,800eac <___vfprintf_internal_r+0x3f0>
  802224:	d8800d17 	ldw	r2,52(sp)
  802228:	d9000b17 	ldw	r4,44(sp)
  80222c:	b0800015 	stw	r2,0(r22)
  802230:	d8801b17 	ldw	r2,108(sp)
  802234:	20c7883a 	add	r3,r4,r3
  802238:	b1000115 	stw	r4,4(r22)
  80223c:	10800044 	addi	r2,r2,1
  802240:	d8c01c15 	stw	r3,112(sp)
  802244:	d8801b15 	stw	r2,108(sp)
  802248:	11000208 	cmpgei	r4,r2,8
  80224c:	2001771e 	bne	r4,zero,80282c <___vfprintf_internal_r+0x1d70>
  802250:	b5800204 	addi	r22,r22,8
  802254:	d9000817 	ldw	r4,32(sp)
  802258:	10800044 	addi	r2,r2,1
  80225c:	d8801b15 	stw	r2,108(sp)
  802260:	20c7883a 	add	r3,r4,r3
  802264:	b4400015 	stw	r17,0(r22)
  802268:	b1000115 	stw	r4,4(r22)
  80226c:	d8c01c15 	stw	r3,112(sp)
  802270:	10800208 	cmpgei	r2,r2,8
  802274:	103b0c26 	beq	r2,zero,800ea8 <___vfprintf_internal_r+0x3ec>
  802278:	003e1906 	br	801ae0 <___vfprintf_internal_r+0x1024>
  80227c:	8825883a 	mov	r18,r17
  802280:	003b1b06 	br	800ef0 <___vfprintf_internal_r+0x434>
  802284:	d9000917 	ldw	r4,36(sp)
  802288:	d9400a17 	ldw	r5,40(sp)
  80228c:	da000615 	stw	r8,24(sp)
  802290:	200d883a 	mov	r6,r4
  802294:	280f883a 	mov	r7,r5
  802298:	db000415 	stw	r12,16(sp)
  80229c:	080d42c0 	call	80d42c <__unorddf2>
  8022a0:	db000417 	ldw	r12,16(sp)
  8022a4:	da000617 	ldw	r8,24(sp)
  8022a8:	1002061e 	bne	r2,zero,802ac4 <___vfprintf_internal_r+0x2008>
  8022ac:	057ff7c4 	movi	r21,-33
  8022b0:	40bfffe0 	cmpeqi	r2,r8,-1
  8022b4:	e56a703a 	and	r21,fp,r21
  8022b8:	1001b41e 	bne	r2,zero,80298c <___vfprintf_internal_r+0x1ed0>
  8022bc:	a88011d8 	cmpnei	r2,r21,71
  8022c0:	10015726 	beq	r2,zero,802820 <___vfprintf_internal_r+0x1d64>
  8022c4:	60804014 	ori	r2,r12,256
  8022c8:	d8800415 	stw	r2,16(sp)
  8022cc:	d8800a17 	ldw	r2,40(sp)
  8022d0:	10012d16 	blt	r2,zero,802788 <___vfprintf_internal_r+0x1ccc>
  8022d4:	dd000a17 	ldw	r20,40(sp)
  8022d8:	d8000605 	stb	zero,24(sp)
  8022dc:	e08019a0 	cmpeqi	r2,fp,102
  8022e0:	d8800f15 	stw	r2,60(sp)
  8022e4:	1000d21e 	bne	r2,zero,802630 <___vfprintf_internal_r+0x1b74>
  8022e8:	e08011a0 	cmpeqi	r2,fp,70
  8022ec:	1000d01e 	bne	r2,zero,802630 <___vfprintf_internal_r+0x1b74>
  8022f0:	a8801158 	cmpnei	r2,r21,69
  8022f4:	10016226 	beq	r2,zero,802880 <___vfprintf_internal_r+0x1dc4>
  8022f8:	d8801804 	addi	r2,sp,96
  8022fc:	d8800315 	stw	r2,12(sp)
  802300:	d9400917 	ldw	r5,36(sp)
  802304:	d8801504 	addi	r2,sp,84
  802308:	d8800215 	stw	r2,8(sp)
  80230c:	d8801404 	addi	r2,sp,80
  802310:	da000015 	stw	r8,0(sp)
  802314:	9809883a 	mov	r4,r19
  802318:	d8800115 	stw	r2,4(sp)
  80231c:	01c00084 	movi	r7,2
  802320:	a00d883a 	mov	r6,r20
  802324:	db000815 	stw	r12,32(sp)
  802328:	da000715 	stw	r8,28(sp)
  80232c:	0802fec0 	call	802fec <_dtoa_r>
  802330:	da000717 	ldw	r8,28(sp)
  802334:	e10019d8 	cmpnei	r4,fp,103
  802338:	db000817 	ldw	r12,32(sp)
  80233c:	1023883a 	mov	r17,r2
  802340:	4007883a 	mov	r3,r8
  802344:	2001621e 	bne	r4,zero,8028d0 <___vfprintf_internal_r+0x1e14>
  802348:	6080004c 	andi	r2,r12,1
  80234c:	1001621e 	bne	r2,zero,8028d8 <___vfprintf_internal_r+0x1e1c>
  802350:	d8801417 	ldw	r2,80(sp)
  802354:	ad4011e0 	cmpeqi	r21,r21,71
  802358:	d8800715 	stw	r2,28(sp)
  80235c:	d8801817 	ldw	r2,96(sp)
  802360:	1445c83a 	sub	r2,r2,r17
  802364:	d8800815 	stw	r2,32(sp)
  802368:	a8000526 	beq	r21,zero,802380 <___vfprintf_internal_r+0x18c4>
  80236c:	d8c00717 	ldw	r3,28(sp)
  802370:	18bfff50 	cmplti	r2,r3,-3
  802374:	1000011e 	bne	r2,zero,80237c <___vfprintf_internal_r+0x18c0>
  802378:	40c1670e 	bge	r8,r3,802918 <___vfprintf_internal_r+0x1e5c>
  80237c:	e73fff84 	addi	fp,fp,-2
  802380:	d8800717 	ldw	r2,28(sp)
  802384:	df001645 	stb	fp,89(sp)
  802388:	157fffc4 	addi	r21,r2,-1
  80238c:	dd401415 	stw	r21,80(sp)
  802390:	a801d416 	blt	r21,zero,802ae4 <___vfprintf_internal_r+0x2028>
  802394:	00800ac4 	movi	r2,43
  802398:	d8801685 	stb	r2,90(sp)
  80239c:	a8800290 	cmplti	r2,r21,10
  8023a0:	1001c11e 	bne	r2,zero,802aa8 <___vfprintf_internal_r+0x1fec>
  8023a4:	d98019c4 	addi	r6,sp,103
  8023a8:	9029883a 	mov	r20,r18
  8023ac:	dc400715 	stw	r17,28(sp)
  8023b0:	8025883a 	mov	r18,r16
  8023b4:	db000f15 	stw	r12,60(sp)
  8023b8:	3021883a 	mov	r16,r6
  8023bc:	a809883a 	mov	r4,r21
  8023c0:	01400284 	movi	r5,10
  8023c4:	080b0340 	call	80b034 <__modsi3>
  8023c8:	10800c04 	addi	r2,r2,48
  8023cc:	a809883a 	mov	r4,r21
  8023d0:	80bfffc5 	stb	r2,-1(r16)
  8023d4:	01400284 	movi	r5,10
  8023d8:	080afb40 	call	80afb4 <__divsi3>
  8023dc:	a9001908 	cmpgei	r4,r21,100
  8023e0:	8023883a 	mov	r17,r16
  8023e4:	102b883a 	mov	r21,r2
  8023e8:	843fffc4 	addi	r16,r16,-1
  8023ec:	203ff31e 	bne	r4,zero,8023bc <___vfprintf_internal_r+0x1900>
  8023f0:	800d883a 	mov	r6,r16
  8023f4:	11000c04 	addi	r4,r2,48
  8023f8:	9021883a 	mov	r16,r18
  8023fc:	a025883a 	mov	r18,r20
  802400:	8829883a 	mov	r20,r17
  802404:	a0bfff84 	addi	r2,r20,-2
  802408:	313fffc5 	stb	r4,-1(r6)
  80240c:	d8c019c4 	addi	r3,sp,103
  802410:	db000f17 	ldw	r12,60(sp)
  802414:	dc400717 	ldw	r17,28(sp)
  802418:	10c1d62e 	bgeu	r2,r3,802b74 <___vfprintf_internal_r+0x20b8>
  80241c:	d8c016c4 	addi	r3,sp,91
  802420:	00000106 	br	802428 <___vfprintf_internal_r+0x196c>
  802424:	11000003 	ldbu	r4,0(r2)
  802428:	19000005 	stb	r4,0(r3)
  80242c:	10800044 	addi	r2,r2,1
  802430:	d90019c4 	addi	r4,sp,103
  802434:	18c00044 	addi	r3,r3,1
  802438:	113ffa1e 	bne	r2,r4,802424 <___vfprintf_internal_r+0x1968>
  80243c:	d8801a44 	addi	r2,sp,105
  802440:	d8c016c4 	addi	r3,sp,91
  802444:	1505c83a 	sub	r2,r2,r20
  802448:	1885883a 	add	r2,r3,r2
  80244c:	d8c01644 	addi	r3,sp,89
  802450:	10c5c83a 	sub	r2,r2,r3
  802454:	d8801015 	stw	r2,64(sp)
  802458:	d8c00817 	ldw	r3,32(sp)
  80245c:	d9001017 	ldw	r4,64(sp)
  802460:	18800088 	cmpgei	r2,r3,2
  802464:	192b883a 	add	r21,r3,r4
  802468:	1001aa26 	beq	r2,zero,802b14 <___vfprintf_internal_r+0x2058>
  80246c:	d8800b17 	ldw	r2,44(sp)
  802470:	a8ab883a 	add	r21,r21,r2
  802474:	a829883a 	mov	r20,r21
  802478:	a800010e 	bge	r21,zero,802480 <___vfprintf_internal_r+0x19c4>
  80247c:	0029883a 	mov	r20,zero
  802480:	d8000715 	stw	zero,28(sp)
  802484:	00009d06 	br	8026fc <___vfprintf_internal_r+0x1c40>
  802488:	880f883a 	mov	r7,r17
  80248c:	10800044 	addi	r2,r2,1
  802490:	1d47883a 	add	r3,r3,r21
  802494:	b1c00015 	stw	r7,0(r22)
  802498:	003a7e06 	br	800e94 <___vfprintf_internal_r+0x3d8>
  80249c:	d9801a04 	addi	r6,sp,104
  8024a0:	900b883a 	mov	r5,r18
  8024a4:	9809883a 	mov	r4,r19
  8024a8:	0807f700 	call	807f70 <__sprint_r>
  8024ac:	103a901e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  8024b0:	d8c01c17 	ldw	r3,112(sp)
  8024b4:	dd802704 	addi	r22,sp,156
  8024b8:	003c9706 	br	801718 <___vfprintf_internal_r+0xc5c>
  8024bc:	d9801a04 	addi	r6,sp,104
  8024c0:	900b883a 	mov	r5,r18
  8024c4:	9809883a 	mov	r4,r19
  8024c8:	da000e15 	stw	r8,56(sp)
  8024cc:	0807f700 	call	807f70 <__sprint_r>
  8024d0:	103a871e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  8024d4:	d8c01c17 	ldw	r3,112(sp)
  8024d8:	da000e17 	ldw	r8,56(sp)
  8024dc:	dd802704 	addi	r22,sp,156
  8024e0:	003a6306 	br	800e70 <___vfprintf_internal_r+0x3b4>
  8024e4:	8809883a 	mov	r4,r17
  8024e8:	db000415 	stw	r12,16(sp)
  8024ec:	d8c00615 	stw	r3,24(sp)
  8024f0:	0800a240 	call	800a24 <strlen>
  8024f4:	db000417 	ldw	r12,16(sp)
  8024f8:	102b883a 	mov	r21,r2
  8024fc:	1029883a 	mov	r20,r2
  802500:	003a3106 	br	800dc8 <___vfprintf_internal_r+0x30c>
  802504:	d8800d17 	ldw	r2,52(sp)
  802508:	d9000b17 	ldw	r4,44(sp)
  80250c:	b0800015 	stw	r2,0(r22)
  802510:	d8801b17 	ldw	r2,108(sp)
  802514:	20c7883a 	add	r3,r4,r3
  802518:	b1000115 	stw	r4,4(r22)
  80251c:	10800044 	addi	r2,r2,1
  802520:	d8c01c15 	stw	r3,112(sp)
  802524:	d8801b15 	stw	r2,108(sp)
  802528:	11000208 	cmpgei	r4,r2,8
  80252c:	2000bf1e 	bne	r4,zero,80282c <___vfprintf_internal_r+0x1d70>
  802530:	b5800204 	addi	r22,r22,8
  802534:	283f470e 	bge	r5,zero,802254 <___vfprintf_internal_r+0x1798>
  802538:	01c02074 	movhi	r7,129
  80253c:	293ffc08 	cmpgei	r4,r5,-16
  802540:	39c03c04 	addi	r7,r7,240
  802544:	0179c83a 	sub	fp,zero,r5
  802548:	20013f1e 	bne	r4,zero,802a48 <___vfprintf_internal_r+0x1f8c>
  80254c:	dc000715 	stw	r16,28(sp)
  802550:	05400404 	movi	r21,16
  802554:	9021883a 	mov	r16,r18
  802558:	3825883a 	mov	r18,r7
  80255c:	00000406 	br	802570 <___vfprintf_internal_r+0x1ab4>
  802560:	b5800204 	addi	r22,r22,8
  802564:	e73ffc04 	addi	fp,fp,-16
  802568:	e1800448 	cmpgei	r6,fp,17
  80256c:	30013326 	beq	r6,zero,802a3c <___vfprintf_internal_r+0x1f80>
  802570:	10800044 	addi	r2,r2,1
  802574:	18c00404 	addi	r3,r3,16
  802578:	b4800015 	stw	r18,0(r22)
  80257c:	b5400115 	stw	r21,4(r22)
  802580:	d8c01c15 	stw	r3,112(sp)
  802584:	d8801b15 	stw	r2,108(sp)
  802588:	11800208 	cmpgei	r6,r2,8
  80258c:	303ff426 	beq	r6,zero,802560 <___vfprintf_internal_r+0x1aa4>
  802590:	d9801a04 	addi	r6,sp,104
  802594:	800b883a 	mov	r5,r16
  802598:	9809883a 	mov	r4,r19
  80259c:	0807f700 	call	807f70 <__sprint_r>
  8025a0:	1001721e 	bne	r2,zero,802b6c <___vfprintf_internal_r+0x20b0>
  8025a4:	d8c01c17 	ldw	r3,112(sp)
  8025a8:	d8801b17 	ldw	r2,108(sp)
  8025ac:	dd802704 	addi	r22,sp,156
  8025b0:	003fec06 	br	802564 <___vfprintf_internal_r+0x1aa8>
  8025b4:	800f883a 	mov	r7,r16
  8025b8:	dc000717 	ldw	r16,28(sp)
  8025bc:	8817883a 	mov	r11,r17
  8025c0:	aa000044 	addi	r8,r21,1
  8025c4:	e0800204 	addi	r2,fp,8
  8025c8:	1ac7883a 	add	r3,r3,r11
  8025cc:	e1c00015 	stw	r7,0(fp)
  8025d0:	e2c00115 	stw	r11,4(fp)
  8025d4:	d8c01c15 	stw	r3,112(sp)
  8025d8:	da001b15 	stw	r8,108(sp)
  8025dc:	41000208 	cmpgei	r4,r8,8
  8025e0:	203e701e 	bne	r4,zero,801fa4 <___vfprintf_internal_r+0x14e8>
  8025e4:	42000044 	addi	r8,r8,1
  8025e8:	15800204 	addi	r22,r2,8
  8025ec:	1039883a 	mov	fp,r2
  8025f0:	003d3206 	br	801abc <___vfprintf_internal_r+0x1000>
  8025f4:	d8800617 	ldw	r2,24(sp)
  8025f8:	d8c00615 	stw	r3,24(sp)
  8025fc:	15000017 	ldw	r20,0(r2)
  802600:	a02bd7fa 	srai	r21,r20,31
  802604:	a805883a 	mov	r2,r21
  802608:	003b2f06 	br	8012c8 <___vfprintf_internal_r+0x80c>
  80260c:	d8800617 	ldw	r2,24(sp)
  802610:	002b883a 	mov	r21,zero
  802614:	d8c00615 	stw	r3,24(sp)
  802618:	15000017 	ldw	r20,0(r2)
  80261c:	0005883a 	mov	r2,zero
  802620:	003a7006 	br	800fe4 <___vfprintf_internal_r+0x528>
  802624:	04402074 	movhi	r17,129
  802628:	8c402b04 	addi	r17,r17,172
  80262c:	003ac806 	br	801150 <___vfprintf_internal_r+0x694>
  802630:	d8801804 	addi	r2,sp,96
  802634:	d8800315 	stw	r2,12(sp)
  802638:	d9400917 	ldw	r5,36(sp)
  80263c:	d8801504 	addi	r2,sp,84
  802640:	d8800215 	stw	r2,8(sp)
  802644:	d8801404 	addi	r2,sp,80
  802648:	da000015 	stw	r8,0(sp)
  80264c:	d8800115 	stw	r2,4(sp)
  802650:	01c000c4 	movi	r7,3
  802654:	a00d883a 	mov	r6,r20
  802658:	9809883a 	mov	r4,r19
  80265c:	db000815 	stw	r12,32(sp)
  802660:	da000715 	stw	r8,28(sp)
  802664:	0802fec0 	call	802fec <_dtoa_r>
  802668:	da000717 	ldw	r8,28(sp)
  80266c:	1023883a 	mov	r17,r2
  802670:	db000817 	ldw	r12,32(sp)
  802674:	1207883a 	add	r3,r2,r8
  802678:	88800007 	ldb	r2,0(r17)
  80267c:	10800c20 	cmpeqi	r2,r2,48
  802680:	1000571e 	bne	r2,zero,8027e0 <___vfprintf_internal_r+0x1d24>
  802684:	d8801417 	ldw	r2,80(sp)
  802688:	1893883a 	add	r9,r3,r2
  80268c:	d9000917 	ldw	r4,36(sp)
  802690:	000d883a 	mov	r6,zero
  802694:	000f883a 	mov	r7,zero
  802698:	a00b883a 	mov	r5,r20
  80269c:	da401115 	stw	r9,68(sp)
  8026a0:	da000815 	stw	r8,32(sp)
  8026a4:	db000715 	stw	r12,28(sp)
  8026a8:	080c2b40 	call	80c2b4 <__eqdf2>
  8026ac:	db000717 	ldw	r12,28(sp)
  8026b0:	da000817 	ldw	r8,32(sp)
  8026b4:	da401117 	ldw	r9,68(sp)
  8026b8:	1000891e 	bne	r2,zero,8028e0 <___vfprintf_internal_r+0x1e24>
  8026bc:	4805883a 	mov	r2,r9
  8026c0:	d8c01417 	ldw	r3,80(sp)
  8026c4:	1445c83a 	sub	r2,r2,r17
  8026c8:	ad4011d8 	cmpnei	r21,r21,71
  8026cc:	d8c00715 	stw	r3,28(sp)
  8026d0:	d8800815 	stw	r2,32(sp)
  8026d4:	a83f2526 	beq	r21,zero,80236c <___vfprintf_internal_r+0x18b0>
  8026d8:	d8800f17 	ldw	r2,60(sp)
  8026dc:	103f2826 	beq	r2,zero,802380 <___vfprintf_internal_r+0x18c4>
  8026e0:	d8c00717 	ldw	r3,28(sp)
  8026e4:	6080004c 	andi	r2,r12,1
  8026e8:	1204b03a 	or	r2,r2,r8
  8026ec:	00c1140e 	bge	zero,r3,802b40 <___vfprintf_internal_r+0x2084>
  8026f0:	1001011e 	bne	r2,zero,802af8 <___vfprintf_internal_r+0x203c>
  8026f4:	dd400717 	ldw	r21,28(sp)
  8026f8:	a829883a 	mov	r20,r21
  8026fc:	d8800607 	ldb	r2,24(sp)
  802700:	10008026 	beq	r2,zero,802904 <___vfprintf_internal_r+0x1e48>
  802704:	00800b44 	movi	r2,45
  802708:	d8801345 	stb	r2,77(sp)
  80270c:	d8800e17 	ldw	r2,56(sp)
  802710:	0011883a 	mov	r8,zero
  802714:	d8800615 	stw	r2,24(sp)
  802718:	003b0506 	br	801330 <___vfprintf_internal_r+0x874>
  80271c:	d8800617 	ldw	r2,24(sp)
  802720:	002b883a 	mov	r21,zero
  802724:	d8c00615 	stw	r3,24(sp)
  802728:	15000017 	ldw	r20,0(r2)
  80272c:	00800044 	movi	r2,1
  802730:	003a2c06 	br	800fe4 <___vfprintf_internal_r+0x528>
  802734:	d8800617 	ldw	r2,24(sp)
  802738:	002b883a 	mov	r21,zero
  80273c:	d8c00615 	stw	r3,24(sp)
  802740:	15000017 	ldw	r20,0(r2)
  802744:	003b1506 	br	80139c <___vfprintf_internal_r+0x8e0>
  802748:	800f883a 	mov	r7,r16
  80274c:	dc000e17 	ldw	r16,56(sp)
  802750:	10800044 	addi	r2,r2,1
  802754:	1d47883a 	add	r3,r3,r21
  802758:	d8801b15 	stw	r2,108(sp)
  80275c:	b1c00015 	stw	r7,0(r22)
  802760:	b5400115 	stw	r21,4(r22)
  802764:	d8c01c15 	stw	r3,112(sp)
  802768:	10800208 	cmpgei	r2,r2,8
  80276c:	10003a1e 	bne	r2,zero,802858 <___vfprintf_internal_r+0x1d9c>
  802770:	b5800204 	addi	r22,r22,8
  802774:	003d5406 	br	801cc8 <___vfprintf_internal_r+0x120c>
  802778:	00800b44 	movi	r2,45
  80277c:	d8801345 	stb	r2,77(sp)
  802780:	03400b44 	movi	r13,45
  802784:	003a6e06 	br	801140 <___vfprintf_internal_r+0x684>
  802788:	1520003c 	xorhi	r20,r2,32768
  80278c:	00800b44 	movi	r2,45
  802790:	d8800605 	stb	r2,24(sp)
  802794:	003ed106 	br	8022dc <___vfprintf_internal_r+0x1820>
  802798:	d9801a04 	addi	r6,sp,104
  80279c:	900b883a 	mov	r5,r18
  8027a0:	9809883a 	mov	r4,r19
  8027a4:	0807f700 	call	807f70 <__sprint_r>
  8027a8:	1039d11e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  8027ac:	d9401417 	ldw	r5,80(sp)
  8027b0:	d8c01c17 	ldw	r3,112(sp)
  8027b4:	dd802704 	addi	r22,sp,156
  8027b8:	003e9406 	br	80220c <___vfprintf_internal_r+0x1750>
  8027bc:	05400184 	movi	r21,6
  8027c0:	003e1706 	br	802020 <___vfprintf_internal_r+0x1564>
  8027c4:	d9401345 	stb	r5,77(sp)
  8027c8:	00397906 	br	800db0 <___vfprintf_internal_r+0x2f4>
  8027cc:	d9801a04 	addi	r6,sp,104
  8027d0:	900b883a 	mov	r5,r18
  8027d4:	9809883a 	mov	r4,r19
  8027d8:	0807f700 	call	807f70 <__sprint_r>
  8027dc:	0039c406 	br	800ef0 <___vfprintf_internal_r+0x434>
  8027e0:	d9000917 	ldw	r4,36(sp)
  8027e4:	000d883a 	mov	r6,zero
  8027e8:	000f883a 	mov	r7,zero
  8027ec:	a00b883a 	mov	r5,r20
  8027f0:	d8c01115 	stw	r3,68(sp)
  8027f4:	da000815 	stw	r8,32(sp)
  8027f8:	db000715 	stw	r12,28(sp)
  8027fc:	080c2b40 	call	80c2b4 <__eqdf2>
  802800:	db000717 	ldw	r12,28(sp)
  802804:	da000817 	ldw	r8,32(sp)
  802808:	d8c01117 	ldw	r3,68(sp)
  80280c:	103f9d26 	beq	r2,zero,802684 <___vfprintf_internal_r+0x1bc8>
  802810:	00800044 	movi	r2,1
  802814:	1205c83a 	sub	r2,r2,r8
  802818:	d8801415 	stw	r2,80(sp)
  80281c:	003f9a06 	br	802688 <___vfprintf_internal_r+0x1bcc>
  802820:	403ea81e 	bne	r8,zero,8022c4 <___vfprintf_internal_r+0x1808>
  802824:	02000044 	movi	r8,1
  802828:	003ea606 	br	8022c4 <___vfprintf_internal_r+0x1808>
  80282c:	d9801a04 	addi	r6,sp,104
  802830:	900b883a 	mov	r5,r18
  802834:	9809883a 	mov	r4,r19
  802838:	0807f700 	call	807f70 <__sprint_r>
  80283c:	1039ac1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  802840:	d9401417 	ldw	r5,80(sp)
  802844:	d8c01c17 	ldw	r3,112(sp)
  802848:	d8801b17 	ldw	r2,108(sp)
  80284c:	dd802704 	addi	r22,sp,156
  802850:	283e800e 	bge	r5,zero,802254 <___vfprintf_internal_r+0x1798>
  802854:	003f3806 	br	802538 <___vfprintf_internal_r+0x1a7c>
  802858:	d9801a04 	addi	r6,sp,104
  80285c:	900b883a 	mov	r5,r18
  802860:	9809883a 	mov	r4,r19
  802864:	0807f700 	call	807f70 <__sprint_r>
  802868:	1039a11e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  80286c:	d8c01c17 	ldw	r3,112(sp)
  802870:	dd802704 	addi	r22,sp,156
  802874:	003d1406 	br	801cc8 <___vfprintf_internal_r+0x120c>
  802878:	db000417 	ldw	r12,16(sp)
  80287c:	003a9f06 	br	8012fc <___vfprintf_internal_r+0x840>
  802880:	d8801804 	addi	r2,sp,96
  802884:	d8800315 	stw	r2,12(sp)
  802888:	d9400917 	ldw	r5,36(sp)
  80288c:	d8801504 	addi	r2,sp,84
  802890:	40c00044 	addi	r3,r8,1
  802894:	d8800215 	stw	r2,8(sp)
  802898:	d8801404 	addi	r2,sp,80
  80289c:	d8c00015 	stw	r3,0(sp)
  8028a0:	d8800115 	stw	r2,4(sp)
  8028a4:	01c00084 	movi	r7,2
  8028a8:	a00d883a 	mov	r6,r20
  8028ac:	9809883a 	mov	r4,r19
  8028b0:	db001115 	stw	r12,68(sp)
  8028b4:	da000815 	stw	r8,32(sp)
  8028b8:	d8c00715 	stw	r3,28(sp)
  8028bc:	0802fec0 	call	802fec <_dtoa_r>
  8028c0:	d8c00717 	ldw	r3,28(sp)
  8028c4:	da000817 	ldw	r8,32(sp)
  8028c8:	db001117 	ldw	r12,68(sp)
  8028cc:	1023883a 	mov	r17,r2
  8028d0:	e08011d8 	cmpnei	r2,fp,71
  8028d4:	103e9c26 	beq	r2,zero,802348 <___vfprintf_internal_r+0x188c>
  8028d8:	88d3883a 	add	r9,r17,r3
  8028dc:	003f6b06 	br	80268c <___vfprintf_internal_r+0x1bd0>
  8028e0:	d8801817 	ldw	r2,96(sp)
  8028e4:	127f762e 	bgeu	r2,r9,8026c0 <___vfprintf_internal_r+0x1c04>
  8028e8:	01000c04 	movi	r4,48
  8028ec:	10c00044 	addi	r3,r2,1
  8028f0:	d8c01815 	stw	r3,96(sp)
  8028f4:	11000005 	stb	r4,0(r2)
  8028f8:	d8801817 	ldw	r2,96(sp)
  8028fc:	127ffb36 	bltu	r2,r9,8028ec <___vfprintf_internal_r+0x1e30>
  802900:	003f6f06 	br	8026c0 <___vfprintf_internal_r+0x1c04>
  802904:	d8800e17 	ldw	r2,56(sp)
  802908:	db401343 	ldbu	r13,77(sp)
  80290c:	0011883a 	mov	r8,zero
  802910:	d8800615 	stw	r2,24(sp)
  802914:	003a8206 	br	801320 <___vfprintf_internal_r+0x864>
  802918:	d8800717 	ldw	r2,28(sp)
  80291c:	d8c00817 	ldw	r3,32(sp)
  802920:	10c02b16 	blt	r2,r3,8029d0 <___vfprintf_internal_r+0x1f14>
  802924:	6300004c 	andi	r12,r12,1
  802928:	6000581e 	bne	r12,zero,802a8c <___vfprintf_internal_r+0x1fd0>
  80292c:	1029883a 	mov	r20,r2
  802930:	1000010e 	bge	r2,zero,802938 <___vfprintf_internal_r+0x1e7c>
  802934:	0029883a 	mov	r20,zero
  802938:	dd400717 	ldw	r21,28(sp)
  80293c:	070019c4 	movi	fp,103
  802940:	003f6e06 	br	8026fc <___vfprintf_internal_r+0x1c40>
  802944:	d9801a04 	addi	r6,sp,104
  802948:	900b883a 	mov	r5,r18
  80294c:	9809883a 	mov	r4,r19
  802950:	0807f700 	call	807f70 <__sprint_r>
  802954:	1039661e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  802958:	dd401417 	ldw	r21,80(sp)
  80295c:	d8c01c17 	ldw	r3,112(sp)
  802960:	dd802704 	addi	r22,sp,156
  802964:	003ce706 	br	801d04 <___vfprintf_internal_r+0x1248>
  802968:	d9801a04 	addi	r6,sp,104
  80296c:	900b883a 	mov	r5,r18
  802970:	9809883a 	mov	r4,r19
  802974:	0807f700 	call	807f70 <__sprint_r>
  802978:	10395d1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  80297c:	d8c01c17 	ldw	r3,112(sp)
  802980:	dd802704 	addi	r22,sp,156
  802984:	a83ccd0e 	bge	r21,zero,801cbc <___vfprintf_internal_r+0x1200>
  802988:	003d9106 	br	801fd0 <___vfprintf_internal_r+0x1514>
  80298c:	02000184 	movi	r8,6
  802990:	003e4c06 	br	8022c4 <___vfprintf_internal_r+0x1808>
  802994:	d9801a04 	addi	r6,sp,104
  802998:	900b883a 	mov	r5,r18
  80299c:	9809883a 	mov	r4,r19
  8029a0:	0807f700 	call	807f70 <__sprint_r>
  8029a4:	1039521e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  8029a8:	d8801417 	ldw	r2,80(sp)
  8029ac:	d9000817 	ldw	r4,32(sp)
  8029b0:	d8c01c17 	ldw	r3,112(sp)
  8029b4:	dd802704 	addi	r22,sp,156
  8029b8:	2085c83a 	sub	r2,r4,r2
  8029bc:	003ce506 	br	801d54 <___vfprintf_internal_r+0x1298>
  8029c0:	4029883a 	mov	r20,r8
  8029c4:	d8c00615 	stw	r3,24(sp)
  8029c8:	402b883a 	mov	r21,r8
  8029cc:	0038fe06 	br	800dc8 <___vfprintf_internal_r+0x30c>
  8029d0:	d8800817 	ldw	r2,32(sp)
  8029d4:	d8c00b17 	ldw	r3,44(sp)
  8029d8:	10eb883a 	add	r21,r2,r3
  8029dc:	d8800717 	ldw	r2,28(sp)
  8029e0:	00800316 	blt	zero,r2,8029f0 <___vfprintf_internal_r+0x1f34>
  8029e4:	d8800717 	ldw	r2,28(sp)
  8029e8:	a8abc83a 	sub	r21,r21,r2
  8029ec:	ad400044 	addi	r21,r21,1
  8029f0:	a829883a 	mov	r20,r21
  8029f4:	a8002a16 	blt	r21,zero,802aa0 <___vfprintf_internal_r+0x1fe4>
  8029f8:	070019c4 	movi	fp,103
  8029fc:	003f3f06 	br	8026fc <___vfprintf_internal_r+0x1c40>
  802a00:	d9401345 	stb	r5,77(sp)
  802a04:	003ae006 	br	801588 <___vfprintf_internal_r+0xacc>
  802a08:	d9401345 	stb	r5,77(sp)
  802a0c:	003a5906 	br	801374 <___vfprintf_internal_r+0x8b8>
  802a10:	d9401345 	stb	r5,77(sp)
  802a14:	003b1706 	br	801674 <___vfprintf_internal_r+0xbb8>
  802a18:	d9401345 	stb	r5,77(sp)
  802a1c:	003a2206 	br	8012a8 <___vfprintf_internal_r+0x7ec>
  802a20:	d9401345 	stb	r5,77(sp)
  802a24:	003a6806 	br	8013c8 <___vfprintf_internal_r+0x90c>
  802a28:	d9401345 	stb	r5,77(sp)
  802a2c:	00399906 	br	801094 <___vfprintf_internal_r+0x5d8>
  802a30:	00bfffc4 	movi	r2,-1
  802a34:	d8800515 	stw	r2,20(sp)
  802a38:	00393006 	br	800efc <___vfprintf_internal_r+0x440>
  802a3c:	900f883a 	mov	r7,r18
  802a40:	8025883a 	mov	r18,r16
  802a44:	dc000717 	ldw	r16,28(sp)
  802a48:	10800044 	addi	r2,r2,1
  802a4c:	1f07883a 	add	r3,r3,fp
  802a50:	b1c00015 	stw	r7,0(r22)
  802a54:	b7000115 	stw	fp,4(r22)
  802a58:	d8c01c15 	stw	r3,112(sp)
  802a5c:	d8801b15 	stw	r2,108(sp)
  802a60:	11000208 	cmpgei	r4,r2,8
  802a64:	203dfa26 	beq	r4,zero,802250 <___vfprintf_internal_r+0x1794>
  802a68:	d9801a04 	addi	r6,sp,104
  802a6c:	900b883a 	mov	r5,r18
  802a70:	9809883a 	mov	r4,r19
  802a74:	0807f700 	call	807f70 <__sprint_r>
  802a78:	10391d1e 	bne	r2,zero,800ef0 <___vfprintf_internal_r+0x434>
  802a7c:	d8c01c17 	ldw	r3,112(sp)
  802a80:	d8801b17 	ldw	r2,108(sp)
  802a84:	dd802704 	addi	r22,sp,156
  802a88:	003df206 	br	802254 <___vfprintf_internal_r+0x1798>
  802a8c:	d8800717 	ldw	r2,28(sp)
  802a90:	d8c00b17 	ldw	r3,44(sp)
  802a94:	10eb883a 	add	r21,r2,r3
  802a98:	a829883a 	mov	r20,r21
  802a9c:	a83fd60e 	bge	r21,zero,8029f8 <___vfprintf_internal_r+0x1f3c>
  802aa0:	0029883a 	mov	r20,zero
  802aa4:	003fd406 	br	8029f8 <___vfprintf_internal_r+0x1f3c>
  802aa8:	00800c04 	movi	r2,48
  802aac:	ad400c04 	addi	r21,r21,48
  802ab0:	d88016c5 	stb	r2,91(sp)
  802ab4:	00800104 	movi	r2,4
  802ab8:	dd401705 	stb	r21,92(sp)
  802abc:	d8801015 	stw	r2,64(sp)
  802ac0:	003e6506 	br	802458 <___vfprintf_internal_r+0x199c>
  802ac4:	d8800a17 	ldw	r2,40(sp)
  802ac8:	10001916 	blt	r2,zero,802b30 <___vfprintf_internal_r+0x2074>
  802acc:	db401343 	ldbu	r13,77(sp)
  802ad0:	e0801210 	cmplti	r2,fp,72
  802ad4:	1000131e 	bne	r2,zero,802b24 <___vfprintf_internal_r+0x2068>
  802ad8:	04402074 	movhi	r17,129
  802adc:	8c402e04 	addi	r17,r17,184
  802ae0:	00399b06 	br	801150 <___vfprintf_internal_r+0x694>
  802ae4:	05400044 	movi	r21,1
  802ae8:	a8abc83a 	sub	r21,r21,r2
  802aec:	00800b44 	movi	r2,45
  802af0:	d8801685 	stb	r2,90(sp)
  802af4:	003e2906 	br	80239c <___vfprintf_internal_r+0x18e0>
  802af8:	d8800b17 	ldw	r2,44(sp)
  802afc:	18ab883a 	add	r21,r3,r2
  802b00:	aa2b883a 	add	r21,r21,r8
  802b04:	a829883a 	mov	r20,r21
  802b08:	a83efc0e 	bge	r21,zero,8026fc <___vfprintf_internal_r+0x1c40>
  802b0c:	0029883a 	mov	r20,zero
  802b10:	003efa06 	br	8026fc <___vfprintf_internal_r+0x1c40>
  802b14:	6080004c 	andi	r2,r12,1
  802b18:	d8800715 	stw	r2,28(sp)
  802b1c:	103e531e 	bne	r2,zero,80246c <___vfprintf_internal_r+0x19b0>
  802b20:	003ff806 	br	802b04 <___vfprintf_internal_r+0x2048>
  802b24:	04402074 	movhi	r17,129
  802b28:	8c402d04 	addi	r17,r17,180
  802b2c:	00398806 	br	801150 <___vfprintf_internal_r+0x694>
  802b30:	00800b44 	movi	r2,45
  802b34:	d8801345 	stb	r2,77(sp)
  802b38:	03400b44 	movi	r13,45
  802b3c:	003fe406 	br	802ad0 <___vfprintf_internal_r+0x2014>
  802b40:	1000031e 	bne	r2,zero,802b50 <___vfprintf_internal_r+0x2094>
  802b44:	05000044 	movi	r20,1
  802b48:	05400044 	movi	r21,1
  802b4c:	003eeb06 	br	8026fc <___vfprintf_internal_r+0x1c40>
  802b50:	d8800b17 	ldw	r2,44(sp)
  802b54:	15400044 	addi	r21,r2,1
  802b58:	aa2b883a 	add	r21,r21,r8
  802b5c:	003fe906 	br	802b04 <___vfprintf_internal_r+0x2048>
  802b60:	b005883a 	mov	r2,r22
  802b64:	39c03c04 	addi	r7,r7,240
  802b68:	003e9706 	br	8025c8 <___vfprintf_internal_r+0x1b0c>
  802b6c:	8025883a 	mov	r18,r16
  802b70:	0038df06 	br	800ef0 <___vfprintf_internal_r+0x434>
  802b74:	00800084 	movi	r2,2
  802b78:	d8801015 	stw	r2,64(sp)
  802b7c:	003e3606 	br	802458 <___vfprintf_internal_r+0x199c>
  802b80:	d8800617 	ldw	r2,24(sp)
  802b84:	12000017 	ldw	r8,0(r2)
  802b88:	10800104 	addi	r2,r2,4
  802b8c:	4000010e 	bge	r8,zero,802b94 <___vfprintf_internal_r+0x20d8>
  802b90:	023fffc4 	movi	r8,-1
  802b94:	bf000043 	ldbu	fp,1(r23)
  802b98:	d8800615 	stw	r2,24(sp)
  802b9c:	182f883a 	mov	r23,r3
  802ba0:	e2c03fcc 	andi	r11,fp,255
  802ba4:	5ac0201c 	xori	r11,r11,128
  802ba8:	5affe004 	addi	r11,r11,-128
  802bac:	00380f06 	br	800bec <___vfprintf_internal_r+0x130>

00802bb0 <__vfprintf_internal>:
  802bb0:	00c02074 	movhi	r3,129
  802bb4:	2005883a 	mov	r2,r4
  802bb8:	19086517 	ldw	r4,8596(r3)
  802bbc:	300f883a 	mov	r7,r6
  802bc0:	280d883a 	mov	r6,r5
  802bc4:	100b883a 	mov	r5,r2
  802bc8:	0800abc1 	jmpi	800abc <___vfprintf_internal_r>

00802bcc <__sbprintf>:
  802bcc:	2880030b 	ldhu	r2,12(r5)
  802bd0:	2b001917 	ldw	r12,100(r5)
  802bd4:	2ac0038b 	ldhu	r11,14(r5)
  802bd8:	2a800717 	ldw	r10,28(r5)
  802bdc:	2a400917 	ldw	r9,36(r5)
  802be0:	defee204 	addi	sp,sp,-1144
  802be4:	da001a04 	addi	r8,sp,104
  802be8:	00c10004 	movi	r3,1024
  802bec:	dc011a15 	stw	r16,1128(sp)
  802bf0:	10bfff4c 	andi	r2,r2,65533
  802bf4:	2821883a 	mov	r16,r5
  802bf8:	d80b883a 	mov	r5,sp
  802bfc:	dc811c15 	stw	r18,1136(sp)
  802c00:	dc411b15 	stw	r17,1132(sp)
  802c04:	dfc11d15 	stw	ra,1140(sp)
  802c08:	2025883a 	mov	r18,r4
  802c0c:	d880030d 	sth	r2,12(sp)
  802c10:	db001915 	stw	r12,100(sp)
  802c14:	dac0038d 	sth	r11,14(sp)
  802c18:	da800715 	stw	r10,28(sp)
  802c1c:	da400915 	stw	r9,36(sp)
  802c20:	da000015 	stw	r8,0(sp)
  802c24:	da000415 	stw	r8,16(sp)
  802c28:	d8c00215 	stw	r3,8(sp)
  802c2c:	d8c00515 	stw	r3,20(sp)
  802c30:	d8000615 	stw	zero,24(sp)
  802c34:	0800abc0 	call	800abc <___vfprintf_internal_r>
  802c38:	1023883a 	mov	r17,r2
  802c3c:	10000d0e 	bge	r2,zero,802c74 <__sbprintf+0xa8>
  802c40:	d880030b 	ldhu	r2,12(sp)
  802c44:	1080100c 	andi	r2,r2,64
  802c48:	10000326 	beq	r2,zero,802c58 <__sbprintf+0x8c>
  802c4c:	8080030b 	ldhu	r2,12(r16)
  802c50:	10801014 	ori	r2,r2,64
  802c54:	8080030d 	sth	r2,12(r16)
  802c58:	8805883a 	mov	r2,r17
  802c5c:	dfc11d17 	ldw	ra,1140(sp)
  802c60:	dc811c17 	ldw	r18,1136(sp)
  802c64:	dc411b17 	ldw	r17,1132(sp)
  802c68:	dc011a17 	ldw	r16,1128(sp)
  802c6c:	dec11e04 	addi	sp,sp,1144
  802c70:	f800283a 	ret
  802c74:	d80b883a 	mov	r5,sp
  802c78:	9009883a 	mov	r4,r18
  802c7c:	080495c0 	call	80495c <_fflush_r>
  802c80:	103fef26 	beq	r2,zero,802c40 <__sbprintf+0x74>
  802c84:	047fffc4 	movi	r17,-1
  802c88:	003fed06 	br	802c40 <__sbprintf+0x74>

00802c8c <__swsetup_r>:
  802c8c:	00802074 	movhi	r2,129
  802c90:	10886517 	ldw	r2,8596(r2)
  802c94:	defffd04 	addi	sp,sp,-12
  802c98:	dc400115 	stw	r17,4(sp)
  802c9c:	dc000015 	stw	r16,0(sp)
  802ca0:	dfc00215 	stw	ra,8(sp)
  802ca4:	2023883a 	mov	r17,r4
  802ca8:	2821883a 	mov	r16,r5
  802cac:	10000226 	beq	r2,zero,802cb8 <__swsetup_r+0x2c>
  802cb0:	10c00e17 	ldw	r3,56(r2)
  802cb4:	18001f26 	beq	r3,zero,802d34 <__swsetup_r+0xa8>
  802cb8:	8180030b 	ldhu	r6,12(r16)
  802cbc:	30c0020c 	andi	r3,r6,8
  802cc0:	3005883a 	mov	r2,r6
  802cc4:	18002126 	beq	r3,zero,802d4c <__swsetup_r+0xc0>
  802cc8:	80c00417 	ldw	r3,16(r16)
  802ccc:	18002826 	beq	r3,zero,802d70 <__swsetup_r+0xe4>
  802cd0:	1100004c 	andi	r4,r2,1
  802cd4:	20000b1e 	bne	r4,zero,802d04 <__swsetup_r+0x78>
  802cd8:	1100008c 	andi	r4,r2,2
  802cdc:	20002e1e 	bne	r4,zero,802d98 <__swsetup_r+0x10c>
  802ce0:	81000517 	ldw	r4,20(r16)
  802ce4:	81000215 	stw	r4,8(r16)
  802ce8:	18000b26 	beq	r3,zero,802d18 <__swsetup_r+0x8c>
  802cec:	0005883a 	mov	r2,zero
  802cf0:	dfc00217 	ldw	ra,8(sp)
  802cf4:	dc400117 	ldw	r17,4(sp)
  802cf8:	dc000017 	ldw	r16,0(sp)
  802cfc:	dec00304 	addi	sp,sp,12
  802d00:	f800283a 	ret
  802d04:	81000517 	ldw	r4,20(r16)
  802d08:	80000215 	stw	zero,8(r16)
  802d0c:	0109c83a 	sub	r4,zero,r4
  802d10:	81000615 	stw	r4,24(r16)
  802d14:	183ff51e 	bne	r3,zero,802cec <__swsetup_r+0x60>
  802d18:	10c0200c 	andi	r3,r2,128
  802d1c:	0005883a 	mov	r2,zero
  802d20:	183ff326 	beq	r3,zero,802cf0 <__swsetup_r+0x64>
  802d24:	31801014 	ori	r6,r6,64
  802d28:	8180030d 	sth	r6,12(r16)
  802d2c:	00bfffc4 	movi	r2,-1
  802d30:	003fef06 	br	802cf0 <__swsetup_r+0x64>
  802d34:	1009883a 	mov	r4,r2
  802d38:	0804d940 	call	804d94 <__sinit>
  802d3c:	8180030b 	ldhu	r6,12(r16)
  802d40:	30c0020c 	andi	r3,r6,8
  802d44:	3005883a 	mov	r2,r6
  802d48:	183fdf1e 	bne	r3,zero,802cc8 <__swsetup_r+0x3c>
  802d4c:	3080040c 	andi	r2,r6,16
  802d50:	10002126 	beq	r2,zero,802dd8 <__swsetup_r+0x14c>
  802d54:	3080010c 	andi	r2,r6,4
  802d58:	1000111e 	bne	r2,zero,802da0 <__swsetup_r+0x114>
  802d5c:	80c00417 	ldw	r3,16(r16)
  802d60:	30800214 	ori	r2,r6,8
  802d64:	8080030d 	sth	r2,12(r16)
  802d68:	100d883a 	mov	r6,r2
  802d6c:	183fd81e 	bne	r3,zero,802cd0 <__swsetup_r+0x44>
  802d70:	1100a00c 	andi	r4,r2,640
  802d74:	21008020 	cmpeqi	r4,r4,512
  802d78:	203fd51e 	bne	r4,zero,802cd0 <__swsetup_r+0x44>
  802d7c:	800b883a 	mov	r5,r16
  802d80:	8809883a 	mov	r4,r17
  802d84:	080580c0 	call	80580c <__smakebuf_r>
  802d88:	8180030b 	ldhu	r6,12(r16)
  802d8c:	80c00417 	ldw	r3,16(r16)
  802d90:	3005883a 	mov	r2,r6
  802d94:	003fce06 	br	802cd0 <__swsetup_r+0x44>
  802d98:	0009883a 	mov	r4,zero
  802d9c:	003fd106 	br	802ce4 <__swsetup_r+0x58>
  802da0:	81400c17 	ldw	r5,48(r16)
  802da4:	28000626 	beq	r5,zero,802dc0 <__swsetup_r+0x134>
  802da8:	80801004 	addi	r2,r16,64
  802dac:	28800326 	beq	r5,r2,802dbc <__swsetup_r+0x130>
  802db0:	8809883a 	mov	r4,r17
  802db4:	0804ef80 	call	804ef8 <_free_r>
  802db8:	8180030b 	ldhu	r6,12(r16)
  802dbc:	80000c15 	stw	zero,48(r16)
  802dc0:	80c00417 	ldw	r3,16(r16)
  802dc4:	00bff6c4 	movi	r2,-37
  802dc8:	118c703a 	and	r6,r2,r6
  802dcc:	80000115 	stw	zero,4(r16)
  802dd0:	80c00015 	stw	r3,0(r16)
  802dd4:	003fe206 	br	802d60 <__swsetup_r+0xd4>
  802dd8:	00800244 	movi	r2,9
  802ddc:	88800015 	stw	r2,0(r17)
  802de0:	31801014 	ori	r6,r6,64
  802de4:	8180030d 	sth	r6,12(r16)
  802de8:	00bfffc4 	movi	r2,-1
  802dec:	003fc006 	br	802cf0 <__swsetup_r+0x64>

00802df0 <quorem>:
  802df0:	defff504 	addi	sp,sp,-44
  802df4:	dc800315 	stw	r18,12(sp)
  802df8:	20800417 	ldw	r2,16(r4)
  802dfc:	2c800417 	ldw	r18,16(r5)
  802e00:	dfc00a15 	stw	ra,40(sp)
  802e04:	df000915 	stw	fp,36(sp)
  802e08:	ddc00815 	stw	r23,32(sp)
  802e0c:	dd800715 	stw	r22,28(sp)
  802e10:	dd400615 	stw	r21,24(sp)
  802e14:	dd000515 	stw	r20,20(sp)
  802e18:	dcc00415 	stw	r19,16(sp)
  802e1c:	dc400215 	stw	r17,8(sp)
  802e20:	dc000115 	stw	r16,4(sp)
  802e24:	14806f16 	blt	r2,r18,802fe4 <quorem+0x1f4>
  802e28:	94bfffc4 	addi	r18,r18,-1
  802e2c:	902c90ba 	slli	r22,r18,2
  802e30:	2c000504 	addi	r16,r5,20
  802e34:	25000504 	addi	r20,r4,20
  802e38:	85a7883a 	add	r19,r16,r22
  802e3c:	9f000017 	ldw	fp,0(r19)
  802e40:	a5ad883a 	add	r22,r20,r22
  802e44:	202b883a 	mov	r21,r4
  802e48:	b1000017 	ldw	r4,0(r22)
  802e4c:	e7000044 	addi	fp,fp,1
  802e50:	282f883a 	mov	r23,r5
  802e54:	e00b883a 	mov	r5,fp
  802e58:	d9000015 	stw	r4,0(sp)
  802e5c:	080b0a80 	call	80b0a8 <__udivsi3>
  802e60:	d9000017 	ldw	r4,0(sp)
  802e64:	1023883a 	mov	r17,r2
  802e68:	27002a36 	bltu	r4,fp,802f14 <quorem+0x124>
  802e6c:	800b883a 	mov	r5,r16
  802e70:	a009883a 	mov	r4,r20
  802e74:	0013883a 	mov	r9,zero
  802e78:	0007883a 	mov	r3,zero
  802e7c:	2a000017 	ldw	r8,0(r5)
  802e80:	21800017 	ldw	r6,0(r4)
  802e84:	21000104 	addi	r4,r4,4
  802e88:	40bfffcc 	andi	r2,r8,65535
  802e8c:	1445383a 	mul	r2,r2,r17
  802e90:	400ed43a 	srli	r7,r8,16
  802e94:	32bfffcc 	andi	r10,r6,65535
  802e98:	1245883a 	add	r2,r2,r9
  802e9c:	1012d43a 	srli	r9,r2,16
  802ea0:	123fffcc 	andi	r8,r2,65535
  802ea4:	3c4f383a 	mul	r7,r7,r17
  802ea8:	1a07c83a 	sub	r3,r3,r8
  802eac:	1a91883a 	add	r8,r3,r10
  802eb0:	3006d43a 	srli	r3,r6,16
  802eb4:	4005d43a 	srai	r2,r8,16
  802eb8:	3a4f883a 	add	r7,r7,r9
  802ebc:	39bfffcc 	andi	r6,r7,65535
  802ec0:	1987c83a 	sub	r3,r3,r6
  802ec4:	1887883a 	add	r3,r3,r2
  802ec8:	1804943a 	slli	r2,r3,16
  802ecc:	423fffcc 	andi	r8,r8,65535
  802ed0:	29400104 	addi	r5,r5,4
  802ed4:	1210b03a 	or	r8,r2,r8
  802ed8:	223fff15 	stw	r8,-4(r4)
  802edc:	3812d43a 	srli	r9,r7,16
  802ee0:	1807d43a 	srai	r3,r3,16
  802ee4:	997fe52e 	bgeu	r19,r5,802e7c <quorem+0x8c>
  802ee8:	b0800017 	ldw	r2,0(r22)
  802eec:	1000091e 	bne	r2,zero,802f14 <quorem+0x124>
  802ef0:	b5bfff04 	addi	r22,r22,-4
  802ef4:	a5800336 	bltu	r20,r22,802f04 <quorem+0x114>
  802ef8:	00000506 	br	802f10 <quorem+0x120>
  802efc:	94bfffc4 	addi	r18,r18,-1
  802f00:	a580032e 	bgeu	r20,r22,802f10 <quorem+0x120>
  802f04:	b0800017 	ldw	r2,0(r22)
  802f08:	b5bfff04 	addi	r22,r22,-4
  802f0c:	103ffb26 	beq	r2,zero,802efc <quorem+0x10c>
  802f10:	ac800415 	stw	r18,16(r21)
  802f14:	b80b883a 	mov	r5,r23
  802f18:	a809883a 	mov	r4,r21
  802f1c:	08070400 	call	807040 <__mcmp>
  802f20:	10002316 	blt	r2,zero,802fb0 <quorem+0x1c0>
  802f24:	8c400044 	addi	r17,r17,1
  802f28:	a00d883a 	mov	r6,r20
  802f2c:	0007883a 	mov	r3,zero
  802f30:	81000017 	ldw	r4,0(r16)
  802f34:	31400017 	ldw	r5,0(r6)
  802f38:	31800104 	addi	r6,r6,4
  802f3c:	20bfffcc 	andi	r2,r4,65535
  802f40:	1887c83a 	sub	r3,r3,r2
  802f44:	28bfffcc 	andi	r2,r5,65535
  802f48:	1885883a 	add	r2,r3,r2
  802f4c:	2008d43a 	srli	r4,r4,16
  802f50:	2806d43a 	srli	r3,r5,16
  802f54:	100fd43a 	srai	r7,r2,16
  802f58:	117fffcc 	andi	r5,r2,65535
  802f5c:	1907c83a 	sub	r3,r3,r4
  802f60:	19c7883a 	add	r3,r3,r7
  802f64:	1804943a 	slli	r2,r3,16
  802f68:	84000104 	addi	r16,r16,4
  802f6c:	1807d43a 	srai	r3,r3,16
  802f70:	1144b03a 	or	r2,r2,r5
  802f74:	30bfff15 	stw	r2,-4(r6)
  802f78:	9c3fed2e 	bgeu	r19,r16,802f30 <quorem+0x140>
  802f7c:	900490ba 	slli	r2,r18,2
  802f80:	a085883a 	add	r2,r20,r2
  802f84:	10c00017 	ldw	r3,0(r2)
  802f88:	1800091e 	bne	r3,zero,802fb0 <quorem+0x1c0>
  802f8c:	10bfff04 	addi	r2,r2,-4
  802f90:	a0800336 	bltu	r20,r2,802fa0 <quorem+0x1b0>
  802f94:	00000506 	br	802fac <quorem+0x1bc>
  802f98:	94bfffc4 	addi	r18,r18,-1
  802f9c:	a080032e 	bgeu	r20,r2,802fac <quorem+0x1bc>
  802fa0:	10c00017 	ldw	r3,0(r2)
  802fa4:	10bfff04 	addi	r2,r2,-4
  802fa8:	183ffb26 	beq	r3,zero,802f98 <quorem+0x1a8>
  802fac:	ac800415 	stw	r18,16(r21)
  802fb0:	8805883a 	mov	r2,r17
  802fb4:	dfc00a17 	ldw	ra,40(sp)
  802fb8:	df000917 	ldw	fp,36(sp)
  802fbc:	ddc00817 	ldw	r23,32(sp)
  802fc0:	dd800717 	ldw	r22,28(sp)
  802fc4:	dd400617 	ldw	r21,24(sp)
  802fc8:	dd000517 	ldw	r20,20(sp)
  802fcc:	dcc00417 	ldw	r19,16(sp)
  802fd0:	dc800317 	ldw	r18,12(sp)
  802fd4:	dc400217 	ldw	r17,8(sp)
  802fd8:	dc000117 	ldw	r16,4(sp)
  802fdc:	dec00b04 	addi	sp,sp,44
  802fe0:	f800283a 	ret
  802fe4:	0005883a 	mov	r2,zero
  802fe8:	003ff206 	br	802fb4 <quorem+0x1c4>

00802fec <_dtoa_r>:
  802fec:	20801017 	ldw	r2,64(r4)
  802ff0:	deffe204 	addi	sp,sp,-120
  802ff4:	ddc01b15 	stw	r23,108(sp)
  802ff8:	dcc01715 	stw	r19,92(sp)
  802ffc:	dc801615 	stw	r18,88(sp)
  803000:	dc401515 	stw	r17,84(sp)
  803004:	dc001415 	stw	r16,80(sp)
  803008:	dfc01d15 	stw	ra,116(sp)
  80300c:	df001c15 	stw	fp,112(sp)
  803010:	dd801a15 	stw	r22,104(sp)
  803014:	dd401915 	stw	r21,100(sp)
  803018:	dd001815 	stw	r20,96(sp)
  80301c:	d9c00215 	stw	r7,8(sp)
  803020:	dc002017 	ldw	r16,128(sp)
  803024:	202f883a 	mov	r23,r4
  803028:	3025883a 	mov	r18,r6
  80302c:	2827883a 	mov	r19,r5
  803030:	3023883a 	mov	r17,r6
  803034:	10000826 	beq	r2,zero,803058 <_dtoa_r+0x6c>
  803038:	21801117 	ldw	r6,68(r4)
  80303c:	00c00044 	movi	r3,1
  803040:	100b883a 	mov	r5,r2
  803044:	1986983a 	sll	r3,r3,r6
  803048:	11800115 	stw	r6,4(r2)
  80304c:	10c00215 	stw	r3,8(r2)
  803050:	08066c40 	call	8066c4 <_Bfree>
  803054:	b8001015 	stw	zero,64(r23)
  803058:	90018816 	blt	r18,zero,80367c <_dtoa_r+0x690>
  80305c:	80000015 	stw	zero,0(r16)
  803060:	909ffc2c 	andhi	r2,r18,32752
  803064:	00dffc34 	movhi	r3,32752
  803068:	10c18d26 	beq	r2,r3,8036a0 <_dtoa_r+0x6b4>
  80306c:	000d883a 	mov	r6,zero
  803070:	000f883a 	mov	r7,zero
  803074:	9809883a 	mov	r4,r19
  803078:	880b883a 	mov	r5,r17
  80307c:	080c2b40 	call	80c2b4 <__eqdf2>
  803080:	1000191e 	bne	r2,zero,8030e8 <_dtoa_r+0xfc>
  803084:	d8c01f17 	ldw	r3,124(sp)
  803088:	00800044 	movi	r2,1
  80308c:	18800015 	stw	r2,0(r3)
  803090:	d8802117 	ldw	r2,132(sp)
  803094:	1002f926 	beq	r2,zero,803c7c <_dtoa_r+0xc90>
  803098:	d9002117 	ldw	r4,132(sp)
  80309c:	00802074 	movhi	r2,129
  8030a0:	10803b44 	addi	r2,r2,237
  8030a4:	00c02074 	movhi	r3,129
  8030a8:	20800015 	stw	r2,0(r4)
  8030ac:	18803b04 	addi	r2,r3,236
  8030b0:	d8800115 	stw	r2,4(sp)
  8030b4:	d8800117 	ldw	r2,4(sp)
  8030b8:	dfc01d17 	ldw	ra,116(sp)
  8030bc:	df001c17 	ldw	fp,112(sp)
  8030c0:	ddc01b17 	ldw	r23,108(sp)
  8030c4:	dd801a17 	ldw	r22,104(sp)
  8030c8:	dd401917 	ldw	r21,100(sp)
  8030cc:	dd001817 	ldw	r20,96(sp)
  8030d0:	dcc01717 	ldw	r19,92(sp)
  8030d4:	dc801617 	ldw	r18,88(sp)
  8030d8:	dc401517 	ldw	r17,84(sp)
  8030dc:	dc001417 	ldw	r16,80(sp)
  8030e0:	dec01e04 	addi	sp,sp,120
  8030e4:	f800283a 	ret
  8030e8:	d8801204 	addi	r2,sp,72
  8030ec:	9020d53a 	srli	r16,r18,20
  8030f0:	d8800015 	stw	r2,0(sp)
  8030f4:	d9c01304 	addi	r7,sp,76
  8030f8:	980b883a 	mov	r5,r19
  8030fc:	880d883a 	mov	r6,r17
  803100:	b809883a 	mov	r4,r23
  803104:	08074280 	call	807428 <__d2b>
  803108:	1039883a 	mov	fp,r2
  80310c:	8001771e 	bne	r16,zero,8036ec <_dtoa_r+0x700>
  803110:	dd001217 	ldw	r20,72(sp)
  803114:	dc001317 	ldw	r16,76(sp)
  803118:	a421883a 	add	r16,r20,r16
  80311c:	80810c84 	addi	r2,r16,1074
  803120:	10c00850 	cmplti	r3,r2,33
  803124:	1802e51e 	bne	r3,zero,803cbc <_dtoa_r+0xcd0>
  803128:	01001004 	movi	r4,64
  80312c:	2085c83a 	sub	r2,r4,r2
  803130:	81010484 	addi	r4,r16,1042
  803134:	90a4983a 	sll	r18,r18,r2
  803138:	9908d83a 	srl	r4,r19,r4
  80313c:	9108b03a 	or	r4,r18,r4
  803140:	080d5b80 	call	80d5b8 <__floatunsidf>
  803144:	1009883a 	mov	r4,r2
  803148:	017f8434 	movhi	r5,65040
  80314c:	00800044 	movi	r2,1
  803150:	194b883a 	add	r5,r3,r5
  803154:	843fffc4 	addi	r16,r16,-1
  803158:	d8800a15 	stw	r2,40(sp)
  80315c:	000d883a 	mov	r6,zero
  803160:	01cffe34 	movhi	r7,16376
  803164:	080cb780 	call	80cb78 <__subdf3>
  803168:	0198dbf4 	movhi	r6,25455
  80316c:	01cff4f4 	movhi	r7,16339
  803170:	3190d844 	addi	r6,r6,17249
  803174:	39e1e9c4 	addi	r7,r7,-30809
  803178:	1009883a 	mov	r4,r2
  80317c:	180b883a 	mov	r5,r3
  803180:	080c5040 	call	80c504 <__muldf3>
  803184:	01a2d874 	movhi	r6,35681
  803188:	01cff1f4 	movhi	r7,16327
  80318c:	31b22cc4 	addi	r6,r6,-14157
  803190:	39e28a04 	addi	r7,r7,-30168
  803194:	180b883a 	mov	r5,r3
  803198:	1009883a 	mov	r4,r2
  80319c:	080b1680 	call	80b168 <__adddf3>
  8031a0:	8009883a 	mov	r4,r16
  8031a4:	102b883a 	mov	r21,r2
  8031a8:	1825883a 	mov	r18,r3
  8031ac:	080d5000 	call	80d500 <__floatsidf>
  8031b0:	019427f4 	movhi	r6,20639
  8031b4:	01cff4f4 	movhi	r7,16339
  8031b8:	319e7ec4 	addi	r6,r6,31227
  8031bc:	39d104c4 	addi	r7,r7,17427
  8031c0:	1009883a 	mov	r4,r2
  8031c4:	180b883a 	mov	r5,r3
  8031c8:	080c5040 	call	80c504 <__muldf3>
  8031cc:	100d883a 	mov	r6,r2
  8031d0:	180f883a 	mov	r7,r3
  8031d4:	a809883a 	mov	r4,r21
  8031d8:	900b883a 	mov	r5,r18
  8031dc:	080b1680 	call	80b168 <__adddf3>
  8031e0:	1009883a 	mov	r4,r2
  8031e4:	180b883a 	mov	r5,r3
  8031e8:	1025883a 	mov	r18,r2
  8031ec:	182d883a 	mov	r22,r3
  8031f0:	080d4800 	call	80d480 <__fixdfsi>
  8031f4:	000d883a 	mov	r6,zero
  8031f8:	000f883a 	mov	r7,zero
  8031fc:	9009883a 	mov	r4,r18
  803200:	b00b883a 	mov	r5,r22
  803204:	102b883a 	mov	r21,r2
  803208:	d8800315 	stw	r2,12(sp)
  80320c:	080c41c0 	call	80c41c <__ledf2>
  803210:	10028f16 	blt	r2,zero,803c50 <_dtoa_r+0xc64>
  803214:	dc800317 	ldw	r18,12(sp)
  803218:	a421c83a 	sub	r16,r20,r16
  80321c:	85bfffc4 	addi	r22,r16,-1
  803220:	908005e8 	cmpgeui	r2,r18,23
  803224:	1002821e 	bne	r2,zero,803c30 <_dtoa_r+0xc44>
  803228:	900690fa 	slli	r3,r18,3
  80322c:	00802074 	movhi	r2,129
  803230:	10808204 	addi	r2,r2,520
  803234:	10c5883a 	add	r2,r2,r3
  803238:	11800017 	ldw	r6,0(r2)
  80323c:	11c00117 	ldw	r7,4(r2)
  803240:	9809883a 	mov	r4,r19
  803244:	880b883a 	mov	r5,r17
  803248:	080c41c0 	call	80c41c <__ledf2>
  80324c:	1002550e 	bge	r2,zero,803ba4 <_dtoa_r+0xbb8>
  803250:	90bfffc4 	addi	r2,r18,-1
  803254:	d8800315 	stw	r2,12(sp)
  803258:	d8000915 	stw	zero,36(sp)
  80325c:	b0027716 	blt	r22,zero,803c3c <_dtoa_r+0xc50>
  803260:	d8000615 	stw	zero,24(sp)
  803264:	d8800317 	ldw	r2,12(sp)
  803268:	1002510e 	bge	r2,zero,803bb0 <_dtoa_r+0xbc4>
  80326c:	d8800317 	ldw	r2,12(sp)
  803270:	d8c00617 	ldw	r3,24(sp)
  803274:	d8000315 	stw	zero,12(sp)
  803278:	d8800415 	stw	r2,16(sp)
  80327c:	1887c83a 	sub	r3,r3,r2
  803280:	d8c00615 	stw	r3,24(sp)
  803284:	0087c83a 	sub	r3,zero,r2
  803288:	d8c00815 	stw	r3,32(sp)
  80328c:	d8c00217 	ldw	r3,8(sp)
  803290:	188002a8 	cmpgeui	r2,r3,10
  803294:	10024d1e 	bne	r2,zero,803bcc <_dtoa_r+0xbe0>
  803298:	18800190 	cmplti	r2,r3,6
  80329c:	10028b1e 	bne	r2,zero,803ccc <_dtoa_r+0xce0>
  8032a0:	18bfff04 	addi	r2,r3,-4
  8032a4:	d8800215 	stw	r2,8(sp)
  8032a8:	0021883a 	mov	r16,zero
  8032ac:	d8c00217 	ldw	r3,8(sp)
  8032b0:	18800120 	cmpeqi	r2,r3,4
  8032b4:	10035d1e 	bne	r2,zero,80402c <_dtoa_r+0x1040>
  8032b8:	18800160 	cmpeqi	r2,r3,5
  8032bc:	10031b1e 	bne	r2,zero,803f2c <_dtoa_r+0xf40>
  8032c0:	188000a0 	cmpeqi	r2,r3,2
  8032c4:	10024d26 	beq	r2,zero,803bfc <_dtoa_r+0xc10>
  8032c8:	d8000715 	stw	zero,28(sp)
  8032cc:	d8801e17 	ldw	r2,120(sp)
  8032d0:	0083260e 	bge	zero,r2,803f6c <_dtoa_r+0xf80>
  8032d4:	d8800b15 	stw	r2,44(sp)
  8032d8:	d8800515 	stw	r2,20(sp)
  8032dc:	100d883a 	mov	r6,r2
  8032e0:	b8001115 	stw	zero,68(r23)
  8032e4:	30800610 	cmplti	r2,r6,24
  8032e8:	1004f11e 	bne	r2,zero,8046b0 <_dtoa_r+0x16c4>
  8032ec:	00c00044 	movi	r3,1
  8032f0:	00800104 	movi	r2,4
  8032f4:	1085883a 	add	r2,r2,r2
  8032f8:	11000504 	addi	r4,r2,20
  8032fc:	180b883a 	mov	r5,r3
  803300:	18c00044 	addi	r3,r3,1
  803304:	313ffb2e 	bgeu	r6,r4,8032f4 <_dtoa_r+0x308>
  803308:	b9401115 	stw	r5,68(r23)
  80330c:	b809883a 	mov	r4,r23
  803310:	08066200 	call	806620 <_Balloc>
  803314:	d8800115 	stw	r2,4(sp)
  803318:	1004de26 	beq	r2,zero,804694 <_dtoa_r+0x16a8>
  80331c:	d8800117 	ldw	r2,4(sp)
  803320:	b8801015 	stw	r2,64(r23)
  803324:	d8800517 	ldw	r2,20(sp)
  803328:	108003e8 	cmpgeui	r2,r2,15
  80332c:	1001021e 	bne	r2,zero,803738 <_dtoa_r+0x74c>
  803330:	80010126 	beq	r16,zero,803738 <_dtoa_r+0x74c>
  803334:	d9000417 	ldw	r4,16(sp)
  803338:	01038b0e 	bge	zero,r4,804168 <_dtoa_r+0x117c>
  80333c:	208003cc 	andi	r2,r4,15
  803340:	100690fa 	slli	r3,r2,3
  803344:	2029d13a 	srai	r20,r4,4
  803348:	00802074 	movhi	r2,129
  80334c:	10808204 	addi	r2,r2,520
  803350:	10c5883a 	add	r2,r2,r3
  803354:	a0c0040c 	andi	r3,r20,16
  803358:	12800017 	ldw	r10,0(r2)
  80335c:	12400117 	ldw	r9,4(r2)
  803360:	18032c26 	beq	r3,zero,804014 <_dtoa_r+0x1028>
  803364:	00802074 	movhi	r2,129
  803368:	10807804 	addi	r2,r2,480
  80336c:	11800817 	ldw	r6,32(r2)
  803370:	11c00917 	ldw	r7,36(r2)
  803374:	9809883a 	mov	r4,r19
  803378:	880b883a 	mov	r5,r17
  80337c:	da400e15 	stw	r9,56(sp)
  803380:	da800d15 	stw	r10,52(sp)
  803384:	080ba580 	call	80ba58 <__divdf3>
  803388:	da800d17 	ldw	r10,52(sp)
  80338c:	da400e17 	ldw	r9,56(sp)
  803390:	a50003cc 	andi	r20,r20,15
  803394:	d8800c15 	stw	r2,48(sp)
  803398:	1825883a 	mov	r18,r3
  80339c:	054000c4 	movi	r21,3
  8033a0:	a0001126 	beq	r20,zero,8033e8 <_dtoa_r+0x3fc>
  8033a4:	04002074 	movhi	r16,129
  8033a8:	84007804 	addi	r16,r16,480
  8033ac:	5009883a 	mov	r4,r10
  8033b0:	480b883a 	mov	r5,r9
  8033b4:	a180004c 	andi	r6,r20,1
  8033b8:	30000626 	beq	r6,zero,8033d4 <_dtoa_r+0x3e8>
  8033bc:	81800017 	ldw	r6,0(r16)
  8033c0:	81c00117 	ldw	r7,4(r16)
  8033c4:	ad400044 	addi	r21,r21,1
  8033c8:	080c5040 	call	80c504 <__muldf3>
  8033cc:	1009883a 	mov	r4,r2
  8033d0:	180b883a 	mov	r5,r3
  8033d4:	a029d07a 	srai	r20,r20,1
  8033d8:	84000204 	addi	r16,r16,8
  8033dc:	a03ff51e 	bne	r20,zero,8033b4 <_dtoa_r+0x3c8>
  8033e0:	2015883a 	mov	r10,r4
  8033e4:	2813883a 	mov	r9,r5
  8033e8:	d9000c17 	ldw	r4,48(sp)
  8033ec:	900b883a 	mov	r5,r18
  8033f0:	500d883a 	mov	r6,r10
  8033f4:	480f883a 	mov	r7,r9
  8033f8:	080ba580 	call	80ba58 <__divdf3>
  8033fc:	1021883a 	mov	r16,r2
  803400:	1825883a 	mov	r18,r3
  803404:	d8800917 	ldw	r2,36(sp)
  803408:	10000626 	beq	r2,zero,803424 <_dtoa_r+0x438>
  80340c:	000d883a 	mov	r6,zero
  803410:	01cffc34 	movhi	r7,16368
  803414:	8009883a 	mov	r4,r16
  803418:	900b883a 	mov	r5,r18
  80341c:	080c41c0 	call	80c41c <__ledf2>
  803420:	10044416 	blt	r2,zero,804534 <_dtoa_r+0x1548>
  803424:	a809883a 	mov	r4,r21
  803428:	080d5000 	call	80d500 <__floatsidf>
  80342c:	800d883a 	mov	r6,r16
  803430:	900f883a 	mov	r7,r18
  803434:	1009883a 	mov	r4,r2
  803438:	180b883a 	mov	r5,r3
  80343c:	080c5040 	call	80c504 <__muldf3>
  803440:	000d883a 	mov	r6,zero
  803444:	01d00734 	movhi	r7,16412
  803448:	1009883a 	mov	r4,r2
  80344c:	180b883a 	mov	r5,r3
  803450:	080b1680 	call	80b168 <__adddf3>
  803454:	1029883a 	mov	r20,r2
  803458:	00bf3034 	movhi	r2,64704
  80345c:	1885883a 	add	r2,r3,r2
  803460:	d8800c15 	stw	r2,48(sp)
  803464:	d8800517 	ldw	r2,20(sp)
  803468:	10032226 	beq	r2,zero,8040f4 <_dtoa_r+0x1108>
  80346c:	d8800417 	ldw	r2,16(sp)
  803470:	d8801115 	stw	r2,68(sp)
  803474:	d8800517 	ldw	r2,20(sp)
  803478:	d8800d15 	stw	r2,52(sp)
  80347c:	d8800d17 	ldw	r2,52(sp)
  803480:	900b883a 	mov	r5,r18
  803484:	8009883a 	mov	r4,r16
  803488:	10bfffc4 	addi	r2,r2,-1
  80348c:	100690fa 	slli	r3,r2,3
  803490:	00802074 	movhi	r2,129
  803494:	10808204 	addi	r2,r2,520
  803498:	10c5883a 	add	r2,r2,r3
  80349c:	12800017 	ldw	r10,0(r2)
  8034a0:	12c00117 	ldw	r11,4(r2)
  8034a4:	da800f15 	stw	r10,60(sp)
  8034a8:	dac00e15 	stw	r11,56(sp)
  8034ac:	080d4800 	call	80d480 <__fixdfsi>
  8034b0:	1009883a 	mov	r4,r2
  8034b4:	10800c04 	addi	r2,r2,48
  8034b8:	d8801015 	stw	r2,64(sp)
  8034bc:	080d5000 	call	80d500 <__floatsidf>
  8034c0:	8009883a 	mov	r4,r16
  8034c4:	100d883a 	mov	r6,r2
  8034c8:	180f883a 	mov	r7,r3
  8034cc:	900b883a 	mov	r5,r18
  8034d0:	080cb780 	call	80cb78 <__subdf3>
  8034d4:	d9000117 	ldw	r4,4(sp)
  8034d8:	dac00e17 	ldw	r11,56(sp)
  8034dc:	da800f17 	ldw	r10,60(sp)
  8034e0:	1825883a 	mov	r18,r3
  8034e4:	d8c00717 	ldw	r3,28(sp)
  8034e8:	25400044 	addi	r21,r4,1
  8034ec:	1021883a 	mov	r16,r2
  8034f0:	500d883a 	mov	r6,r10
  8034f4:	580f883a 	mov	r7,r11
  8034f8:	1803b626 	beq	r3,zero,8043d4 <_dtoa_r+0x13e8>
  8034fc:	0009883a 	mov	r4,zero
  803500:	014ff834 	movhi	r5,16352
  803504:	080ba580 	call	80ba58 <__divdf3>
  803508:	d9c00c17 	ldw	r7,48(sp)
  80350c:	a00d883a 	mov	r6,r20
  803510:	1009883a 	mov	r4,r2
  803514:	180b883a 	mov	r5,r3
  803518:	080cb780 	call	80cb78 <__subdf3>
  80351c:	d9000117 	ldw	r4,4(sp)
  803520:	1029883a 	mov	r20,r2
  803524:	d8801017 	ldw	r2,64(sp)
  803528:	800d883a 	mov	r6,r16
  80352c:	900f883a 	mov	r7,r18
  803530:	20800005 	stb	r2,0(r4)
  803534:	180b883a 	mov	r5,r3
  803538:	a009883a 	mov	r4,r20
  80353c:	d8c00c15 	stw	r3,48(sp)
  803540:	080c3340 	call	80c334 <__gedf2>
  803544:	0083e716 	blt	zero,r2,8044e4 <_dtoa_r+0x14f8>
  803548:	0005883a 	mov	r2,zero
  80354c:	dd800e15 	stw	r22,56(sp)
  803550:	dc400f15 	stw	r17,60(sp)
  803554:	dd800d17 	ldw	r22,52(sp)
  803558:	dc400c17 	ldw	r17,48(sp)
  80355c:	ddc00d15 	stw	r23,52(sp)
  803560:	dcc00c15 	stw	r19,48(sp)
  803564:	1027883a 	mov	r19,r2
  803568:	00002606 	br	803604 <_dtoa_r+0x618>
  80356c:	9cc00044 	addi	r19,r19,1
  803570:	9d806d0e 	bge	r19,r22,803728 <_dtoa_r+0x73c>
  803574:	a009883a 	mov	r4,r20
  803578:	880b883a 	mov	r5,r17
  80357c:	000d883a 	mov	r6,zero
  803580:	01d00934 	movhi	r7,16420
  803584:	080c5040 	call	80c504 <__muldf3>
  803588:	000d883a 	mov	r6,zero
  80358c:	01d00934 	movhi	r7,16420
  803590:	8009883a 	mov	r4,r16
  803594:	900b883a 	mov	r5,r18
  803598:	1029883a 	mov	r20,r2
  80359c:	1823883a 	mov	r17,r3
  8035a0:	080c5040 	call	80c504 <__muldf3>
  8035a4:	180b883a 	mov	r5,r3
  8035a8:	1009883a 	mov	r4,r2
  8035ac:	1821883a 	mov	r16,r3
  8035b0:	1025883a 	mov	r18,r2
  8035b4:	080d4800 	call	80d480 <__fixdfsi>
  8035b8:	1009883a 	mov	r4,r2
  8035bc:	102f883a 	mov	r23,r2
  8035c0:	080d5000 	call	80d500 <__floatsidf>
  8035c4:	9009883a 	mov	r4,r18
  8035c8:	800b883a 	mov	r5,r16
  8035cc:	100d883a 	mov	r6,r2
  8035d0:	180f883a 	mov	r7,r3
  8035d4:	080cb780 	call	80cb78 <__subdf3>
  8035d8:	ad400044 	addi	r21,r21,1
  8035dc:	ba000c04 	addi	r8,r23,48
  8035e0:	aa3fffc5 	stb	r8,-1(r21)
  8035e4:	a00d883a 	mov	r6,r20
  8035e8:	880f883a 	mov	r7,r17
  8035ec:	1009883a 	mov	r4,r2
  8035f0:	180b883a 	mov	r5,r3
  8035f4:	1021883a 	mov	r16,r2
  8035f8:	1825883a 	mov	r18,r3
  8035fc:	080c41c0 	call	80c41c <__ledf2>
  803600:	10040516 	blt	r2,zero,804618 <_dtoa_r+0x162c>
  803604:	800d883a 	mov	r6,r16
  803608:	900f883a 	mov	r7,r18
  80360c:	0009883a 	mov	r4,zero
  803610:	014ffc34 	movhi	r5,16368
  803614:	080cb780 	call	80cb78 <__subdf3>
  803618:	a00d883a 	mov	r6,r20
  80361c:	880f883a 	mov	r7,r17
  803620:	1009883a 	mov	r4,r2
  803624:	180b883a 	mov	r5,r3
  803628:	080c41c0 	call	80c41c <__ledf2>
  80362c:	103fcf0e 	bge	r2,zero,80356c <_dtoa_r+0x580>
  803630:	d8801117 	ldw	r2,68(sp)
  803634:	ddc00d17 	ldw	r23,52(sp)
  803638:	d9000117 	ldw	r4,4(sp)
  80363c:	10800044 	addi	r2,r2,1
  803640:	d8800415 	stw	r2,16(sp)
  803644:	a829883a 	mov	r20,r21
  803648:	00000106 	br	803650 <_dtoa_r+0x664>
  80364c:	a103da26 	beq	r20,r4,8045b8 <_dtoa_r+0x15cc>
  803650:	a0ffffc3 	ldbu	r3,-1(r20)
  803654:	a02b883a 	mov	r21,r20
  803658:	a53fffc4 	addi	r20,r20,-1
  80365c:	18803fcc 	andi	r2,r3,255
  803660:	1080201c 	xori	r2,r2,128
  803664:	10bfe004 	addi	r2,r2,-128
  803668:	10800e60 	cmpeqi	r2,r2,57
  80366c:	103ff71e 	bne	r2,zero,80364c <_dtoa_r+0x660>
  803670:	18c00044 	addi	r3,r3,1
  803674:	a0c00005 	stb	r3,0(r20)
  803678:	00013f06 	br	803b78 <_dtoa_r+0xb8c>
  80367c:	04600034 	movhi	r17,32768
  803680:	8c7fffc4 	addi	r17,r17,-1
  803684:	9462703a 	and	r17,r18,r17
  803688:	00800044 	movi	r2,1
  80368c:	8825883a 	mov	r18,r17
  803690:	80800015 	stw	r2,0(r16)
  803694:	00dffc34 	movhi	r3,32752
  803698:	909ffc2c 	andhi	r2,r18,32752
  80369c:	10fe731e 	bne	r2,r3,80306c <_dtoa_r+0x80>
  8036a0:	d9001f17 	ldw	r4,124(sp)
  8036a4:	00800434 	movhi	r2,16
  8036a8:	10bfffc4 	addi	r2,r2,-1
  8036ac:	9084703a 	and	r2,r18,r2
  8036b0:	00c9c3c4 	movi	r3,9999
  8036b4:	20c00015 	stw	r3,0(r4)
  8036b8:	14e6b03a 	or	r19,r2,r19
  8036bc:	9800141e 	bne	r19,zero,803710 <_dtoa_r+0x724>
  8036c0:	d8802117 	ldw	r2,132(sp)
  8036c4:	10041226 	beq	r2,zero,804710 <_dtoa_r+0x1724>
  8036c8:	00802074 	movhi	r2,129
  8036cc:	1007883a 	mov	r3,r2
  8036d0:	18c04504 	addi	r3,r3,276
  8036d4:	00802074 	movhi	r2,129
  8036d8:	d8c00115 	stw	r3,4(sp)
  8036dc:	10804704 	addi	r2,r2,284
  8036e0:	d8c02117 	ldw	r3,132(sp)
  8036e4:	18800015 	stw	r2,0(r3)
  8036e8:	003e7206 	br	8030b4 <_dtoa_r+0xc8>
  8036ec:	01400434 	movhi	r5,16
  8036f0:	297fffc4 	addi	r5,r5,-1
  8036f4:	894a703a 	and	r5,r17,r5
  8036f8:	dd001217 	ldw	r20,72(sp)
  8036fc:	9809883a 	mov	r4,r19
  803700:	294ffc34 	orhi	r5,r5,16368
  803704:	843f0044 	addi	r16,r16,-1023
  803708:	d8000a15 	stw	zero,40(sp)
  80370c:	003e9306 	br	80315c <_dtoa_r+0x170>
  803710:	d8802117 	ldw	r2,132(sp)
  803714:	1001fe1e 	bne	r2,zero,803f10 <_dtoa_r+0xf24>
  803718:	00802074 	movhi	r2,129
  80371c:	10804404 	addi	r2,r2,272
  803720:	d8800115 	stw	r2,4(sp)
  803724:	003e6306 	br	8030b4 <_dtoa_r+0xc8>
  803728:	dd800e17 	ldw	r22,56(sp)
  80372c:	ddc00d17 	ldw	r23,52(sp)
  803730:	dc400f17 	ldw	r17,60(sp)
  803734:	dcc00c17 	ldw	r19,48(sp)
  803738:	d8801317 	ldw	r2,76(sp)
  80373c:	10006e16 	blt	r2,zero,8038f8 <_dtoa_r+0x90c>
  803740:	d9000417 	ldw	r4,16(sp)
  803744:	20c003c8 	cmpgei	r3,r4,15
  803748:	18006b1e 	bne	r3,zero,8038f8 <_dtoa_r+0x90c>
  80374c:	200690fa 	slli	r3,r4,3
  803750:	00802074 	movhi	r2,129
  803754:	10808204 	addi	r2,r2,520
  803758:	10c5883a 	add	r2,r2,r3
  80375c:	14000017 	ldw	r16,0(r2)
  803760:	14800117 	ldw	r18,4(r2)
  803764:	d8801e17 	ldw	r2,120(sp)
  803768:	1000150e 	bge	r2,zero,8037c0 <_dtoa_r+0x7d4>
  80376c:	d8800517 	ldw	r2,20(sp)
  803770:	00801316 	blt	zero,r2,8037c0 <_dtoa_r+0x7d4>
  803774:	d8800517 	ldw	r2,20(sp)
  803778:	1002721e 	bne	r2,zero,804144 <_dtoa_r+0x1158>
  80377c:	8009883a 	mov	r4,r16
  803780:	000d883a 	mov	r6,zero
  803784:	01d00534 	movhi	r7,16404
  803788:	900b883a 	mov	r5,r18
  80378c:	080c5040 	call	80c504 <__muldf3>
  803790:	100d883a 	mov	r6,r2
  803794:	180f883a 	mov	r7,r3
  803798:	9809883a 	mov	r4,r19
  80379c:	880b883a 	mov	r5,r17
  8037a0:	080c41c0 	call	80c41c <__ledf2>
  8037a4:	0029883a 	mov	r20,zero
  8037a8:	0021883a 	mov	r16,zero
  8037ac:	00820216 	blt	zero,r2,803fb8 <_dtoa_r+0xfcc>
  8037b0:	d8801e17 	ldw	r2,120(sp)
  8037b4:	dd400117 	ldw	r21,4(sp)
  8037b8:	00a2303a 	nor	r17,zero,r2
  8037bc:	00020406 	br	803fd0 <_dtoa_r+0xfe4>
  8037c0:	800d883a 	mov	r6,r16
  8037c4:	900f883a 	mov	r7,r18
  8037c8:	9809883a 	mov	r4,r19
  8037cc:	880b883a 	mov	r5,r17
  8037d0:	080ba580 	call	80ba58 <__divdf3>
  8037d4:	180b883a 	mov	r5,r3
  8037d8:	1009883a 	mov	r4,r2
  8037dc:	080d4800 	call	80d480 <__fixdfsi>
  8037e0:	1009883a 	mov	r4,r2
  8037e4:	102b883a 	mov	r21,r2
  8037e8:	080d5000 	call	80d500 <__floatsidf>
  8037ec:	800d883a 	mov	r6,r16
  8037f0:	900f883a 	mov	r7,r18
  8037f4:	1009883a 	mov	r4,r2
  8037f8:	180b883a 	mov	r5,r3
  8037fc:	080c5040 	call	80c504 <__muldf3>
  803800:	100d883a 	mov	r6,r2
  803804:	9809883a 	mov	r4,r19
  803808:	880b883a 	mov	r5,r17
  80380c:	180f883a 	mov	r7,r3
  803810:	080cb780 	call	80cb78 <__subdf3>
  803814:	d9800117 	ldw	r6,4(sp)
  803818:	dd800517 	ldw	r22,20(sp)
  80381c:	1009883a 	mov	r4,r2
  803820:	a8800c04 	addi	r2,r21,48
  803824:	30800005 	stb	r2,0(r6)
  803828:	b0800060 	cmpeqi	r2,r22,1
  80382c:	180b883a 	mov	r5,r3
  803830:	35000044 	addi	r20,r6,1
  803834:	10029f1e 	bne	r2,zero,8042b4 <_dtoa_r+0x12c8>
  803838:	04400044 	movi	r17,1
  80383c:	ddc00215 	stw	r23,8(sp)
  803840:	00001c06 	br	8038b4 <_dtoa_r+0x8c8>
  803844:	800d883a 	mov	r6,r16
  803848:	900f883a 	mov	r7,r18
  80384c:	a809883a 	mov	r4,r21
  803850:	980b883a 	mov	r5,r19
  803854:	080ba580 	call	80ba58 <__divdf3>
  803858:	180b883a 	mov	r5,r3
  80385c:	1009883a 	mov	r4,r2
  803860:	080d4800 	call	80d480 <__fixdfsi>
  803864:	1009883a 	mov	r4,r2
  803868:	102f883a 	mov	r23,r2
  80386c:	080d5000 	call	80d500 <__floatsidf>
  803870:	800d883a 	mov	r6,r16
  803874:	900f883a 	mov	r7,r18
  803878:	1009883a 	mov	r4,r2
  80387c:	180b883a 	mov	r5,r3
  803880:	080c5040 	call	80c504 <__muldf3>
  803884:	a809883a 	mov	r4,r21
  803888:	980b883a 	mov	r5,r19
  80388c:	100d883a 	mov	r6,r2
  803890:	180f883a 	mov	r7,r3
  803894:	080cb780 	call	80cb78 <__subdf3>
  803898:	b9000c04 	addi	r4,r23,48
  80389c:	a1000005 	stb	r4,0(r20)
  8038a0:	8c400044 	addi	r17,r17,1
  8038a4:	a5000044 	addi	r20,r20,1
  8038a8:	1009883a 	mov	r4,r2
  8038ac:	180b883a 	mov	r5,r3
  8038b0:	8d827e26 	beq	r17,r22,8042ac <_dtoa_r+0x12c0>
  8038b4:	000d883a 	mov	r6,zero
  8038b8:	01d00934 	movhi	r7,16420
  8038bc:	080c5040 	call	80c504 <__muldf3>
  8038c0:	000d883a 	mov	r6,zero
  8038c4:	000f883a 	mov	r7,zero
  8038c8:	1009883a 	mov	r4,r2
  8038cc:	180b883a 	mov	r5,r3
  8038d0:	102b883a 	mov	r21,r2
  8038d4:	1827883a 	mov	r19,r3
  8038d8:	080c2b40 	call	80c2b4 <__eqdf2>
  8038dc:	103fd91e 	bne	r2,zero,803844 <_dtoa_r+0x858>
  8038e0:	d8800417 	ldw	r2,16(sp)
  8038e4:	ddc00217 	ldw	r23,8(sp)
  8038e8:	a02b883a 	mov	r21,r20
  8038ec:	10800044 	addi	r2,r2,1
  8038f0:	d8800415 	stw	r2,16(sp)
  8038f4:	0000a006 	br	803b78 <_dtoa_r+0xb8c>
  8038f8:	d8c00717 	ldw	r3,28(sp)
  8038fc:	1800e326 	beq	r3,zero,803c8c <_dtoa_r+0xca0>
  803900:	d8c00217 	ldw	r3,8(sp)
  803904:	18c00088 	cmpgei	r3,r3,2
  803908:	1801e026 	beq	r3,zero,80408c <_dtoa_r+0x10a0>
  80390c:	d8800517 	ldw	r2,20(sp)
  803910:	153fffc4 	addi	r20,r2,-1
  803914:	d8800817 	ldw	r2,32(sp)
  803918:	1501bc0e 	bge	r2,r20,80400c <_dtoa_r+0x1020>
  80391c:	d8800817 	ldw	r2,32(sp)
  803920:	d8c00317 	ldw	r3,12(sp)
  803924:	dd000815 	stw	r20,32(sp)
  803928:	a085c83a 	sub	r2,r20,r2
  80392c:	1885883a 	add	r2,r3,r2
  803930:	d8800315 	stw	r2,12(sp)
  803934:	0029883a 	mov	r20,zero
  803938:	d8800517 	ldw	r2,20(sp)
  80393c:	10028b16 	blt	r2,zero,80436c <_dtoa_r+0x1380>
  803940:	d8c00617 	ldw	r3,24(sp)
  803944:	b0ad883a 	add	r22,r22,r2
  803948:	1885883a 	add	r2,r3,r2
  80394c:	1825883a 	mov	r18,r3
  803950:	d8800615 	stw	r2,24(sp)
  803954:	01400044 	movi	r5,1
  803958:	b809883a 	mov	r4,r23
  80395c:	0806a6c0 	call	806a6c <__i2b>
  803960:	1021883a 	mov	r16,r2
  803964:	0480080e 	bge	zero,r18,803988 <_dtoa_r+0x99c>
  803968:	0580070e 	bge	zero,r22,803988 <_dtoa_r+0x99c>
  80396c:	9005883a 	mov	r2,r18
  803970:	b4819e16 	blt	r22,r18,803fec <_dtoa_r+0x1000>
  803974:	d8c00617 	ldw	r3,24(sp)
  803978:	90a5c83a 	sub	r18,r18,r2
  80397c:	b0adc83a 	sub	r22,r22,r2
  803980:	1887c83a 	sub	r3,r3,r2
  803984:	d8c00615 	stw	r3,24(sp)
  803988:	d8800817 	ldw	r2,32(sp)
  80398c:	10001426 	beq	r2,zero,8039e0 <_dtoa_r+0x9f4>
  803990:	d8800717 	ldw	r2,28(sp)
  803994:	1001ee26 	beq	r2,zero,804150 <_dtoa_r+0x1164>
  803998:	05000e0e 	bge	zero,r20,8039d4 <_dtoa_r+0x9e8>
  80399c:	800b883a 	mov	r5,r16
  8039a0:	a00d883a 	mov	r6,r20
  8039a4:	b809883a 	mov	r4,r23
  8039a8:	0806d700 	call	806d70 <__pow5mult>
  8039ac:	e00d883a 	mov	r6,fp
  8039b0:	100b883a 	mov	r5,r2
  8039b4:	b809883a 	mov	r4,r23
  8039b8:	1021883a 	mov	r16,r2
  8039bc:	0806b1c0 	call	806b1c <__multiply>
  8039c0:	102b883a 	mov	r21,r2
  8039c4:	e00b883a 	mov	r5,fp
  8039c8:	b809883a 	mov	r4,r23
  8039cc:	08066c40 	call	8066c4 <_Bfree>
  8039d0:	a839883a 	mov	fp,r21
  8039d4:	d8800817 	ldw	r2,32(sp)
  8039d8:	150dc83a 	sub	r6,r2,r20
  8039dc:	15025e1e 	bne	r2,r20,804358 <_dtoa_r+0x136c>
  8039e0:	01400044 	movi	r5,1
  8039e4:	b809883a 	mov	r4,r23
  8039e8:	0806a6c0 	call	806a6c <__i2b>
  8039ec:	d9800317 	ldw	r6,12(sp)
  8039f0:	1029883a 	mov	r20,r2
  8039f4:	0180b716 	blt	zero,r6,803cd4 <_dtoa_r+0xce8>
  8039f8:	d8800217 	ldw	r2,8(sp)
  8039fc:	10800088 	cmpgei	r2,r2,2
  803a00:	10014d26 	beq	r2,zero,803f38 <_dtoa_r+0xf4c>
  803a04:	0023883a 	mov	r17,zero
  803a08:	d8c00317 	ldw	r3,12(sp)
  803a0c:	00800044 	movi	r2,1
  803a10:	1800b81e 	bne	r3,zero,803cf4 <_dtoa_r+0xd08>
  803a14:	1585883a 	add	r2,r2,r22
  803a18:	108007cc 	andi	r2,r2,31
  803a1c:	1000a526 	beq	r2,zero,803cb4 <_dtoa_r+0xcc8>
  803a20:	00c00804 	movi	r3,32
  803a24:	1887c83a 	sub	r3,r3,r2
  803a28:	19000150 	cmplti	r4,r3,5
  803a2c:	20033c1e 	bne	r4,zero,804720 <_dtoa_r+0x1734>
  803a30:	00c00704 	movi	r3,28
  803a34:	1885c83a 	sub	r2,r3,r2
  803a38:	d8c00617 	ldw	r3,24(sp)
  803a3c:	90a5883a 	add	r18,r18,r2
  803a40:	b0ad883a 	add	r22,r22,r2
  803a44:	1887883a 	add	r3,r3,r2
  803a48:	d8c00615 	stw	r3,24(sp)
  803a4c:	d8800617 	ldw	r2,24(sp)
  803a50:	00809216 	blt	zero,r2,803c9c <_dtoa_r+0xcb0>
  803a54:	0580050e 	bge	zero,r22,803a6c <_dtoa_r+0xa80>
  803a58:	a00b883a 	mov	r5,r20
  803a5c:	b00d883a 	mov	r6,r22
  803a60:	b809883a 	mov	r4,r23
  803a64:	0806eb80 	call	806eb8 <__lshift>
  803a68:	1029883a 	mov	r20,r2
  803a6c:	d8800917 	ldw	r2,36(sp)
  803a70:	1001151e 	bne	r2,zero,803ec8 <_dtoa_r+0xedc>
  803a74:	d8800517 	ldw	r2,20(sp)
  803a78:	0081020e 	bge	zero,r2,803e84 <_dtoa_r+0xe98>
  803a7c:	d8800717 	ldw	r2,28(sp)
  803a80:	1000af1e 	bne	r2,zero,803d40 <_dtoa_r+0xd54>
  803a84:	d8800417 	ldw	r2,16(sp)
  803a88:	10800044 	addi	r2,r2,1
  803a8c:	d8800415 	stw	r2,16(sp)
  803a90:	dc800517 	ldw	r18,20(sp)
  803a94:	dd400117 	ldw	r21,4(sp)
  803a98:	04400044 	movi	r17,1
  803a9c:	00000706 	br	803abc <_dtoa_r+0xad0>
  803aa0:	e00b883a 	mov	r5,fp
  803aa4:	000f883a 	mov	r7,zero
  803aa8:	01800284 	movi	r6,10
  803aac:	b809883a 	mov	r4,r23
  803ab0:	08066e80 	call	8066e8 <__multadd>
  803ab4:	1039883a 	mov	fp,r2
  803ab8:	8c400044 	addi	r17,r17,1
  803abc:	a00b883a 	mov	r5,r20
  803ac0:	e009883a 	mov	r4,fp
  803ac4:	0802df00 	call	802df0 <quorem>
  803ac8:	14c00c04 	addi	r19,r2,48
  803acc:	ac45883a 	add	r2,r21,r17
  803ad0:	14ffffc5 	stb	r19,-1(r2)
  803ad4:	8cbff216 	blt	r17,r18,803aa0 <_dtoa_r+0xab4>
  803ad8:	d8800517 	ldw	r2,20(sp)
  803adc:	0081510e 	bge	zero,r2,804024 <_dtoa_r+0x1038>
  803ae0:	d8c00117 	ldw	r3,4(sp)
  803ae4:	0023883a 	mov	r17,zero
  803ae8:	18ab883a 	add	r21,r3,r2
  803aec:	e00b883a 	mov	r5,fp
  803af0:	01800044 	movi	r6,1
  803af4:	b809883a 	mov	r4,r23
  803af8:	0806eb80 	call	806eb8 <__lshift>
  803afc:	1009883a 	mov	r4,r2
  803b00:	a00b883a 	mov	r5,r20
  803b04:	1039883a 	mov	fp,r2
  803b08:	08070400 	call	807040 <__mcmp>
  803b0c:	a93fffc3 	ldbu	r4,-1(r21)
  803b10:	0081490e 	bge	zero,r2,804038 <_dtoa_r+0x104c>
  803b14:	d9400117 	ldw	r5,4(sp)
  803b18:	00000306 	br	803b28 <_dtoa_r+0xb3c>
  803b1c:	19415426 	beq	r3,r5,804070 <_dtoa_r+0x1084>
  803b20:	193fffc3 	ldbu	r4,-1(r3)
  803b24:	182b883a 	mov	r21,r3
  803b28:	20803fcc 	andi	r2,r4,255
  803b2c:	1080201c 	xori	r2,r2,128
  803b30:	10bfe004 	addi	r2,r2,-128
  803b34:	10800e60 	cmpeqi	r2,r2,57
  803b38:	a8ffffc4 	addi	r3,r21,-1
  803b3c:	103ff71e 	bne	r2,zero,803b1c <_dtoa_r+0xb30>
  803b40:	21000044 	addi	r4,r4,1
  803b44:	19000005 	stb	r4,0(r3)
  803b48:	a00b883a 	mov	r5,r20
  803b4c:	b809883a 	mov	r4,r23
  803b50:	08066c40 	call	8066c4 <_Bfree>
  803b54:	80000826 	beq	r16,zero,803b78 <_dtoa_r+0xb8c>
  803b58:	88000426 	beq	r17,zero,803b6c <_dtoa_r+0xb80>
  803b5c:	8c000326 	beq	r17,r16,803b6c <_dtoa_r+0xb80>
  803b60:	880b883a 	mov	r5,r17
  803b64:	b809883a 	mov	r4,r23
  803b68:	08066c40 	call	8066c4 <_Bfree>
  803b6c:	800b883a 	mov	r5,r16
  803b70:	b809883a 	mov	r4,r23
  803b74:	08066c40 	call	8066c4 <_Bfree>
  803b78:	e00b883a 	mov	r5,fp
  803b7c:	b809883a 	mov	r4,r23
  803b80:	08066c40 	call	8066c4 <_Bfree>
  803b84:	d8801f17 	ldw	r2,124(sp)
  803b88:	d8c00417 	ldw	r3,16(sp)
  803b8c:	a8000005 	stb	zero,0(r21)
  803b90:	10c00015 	stw	r3,0(r2)
  803b94:	d8802117 	ldw	r2,132(sp)
  803b98:	103d4626 	beq	r2,zero,8030b4 <_dtoa_r+0xc8>
  803b9c:	15400015 	stw	r21,0(r2)
  803ba0:	003d4406 	br	8030b4 <_dtoa_r+0xc8>
  803ba4:	d8000915 	stw	zero,36(sp)
  803ba8:	b0002416 	blt	r22,zero,803c3c <_dtoa_r+0xc50>
  803bac:	d8000615 	stw	zero,24(sp)
  803bb0:	d8800317 	ldw	r2,12(sp)
  803bb4:	d8c00217 	ldw	r3,8(sp)
  803bb8:	d8000815 	stw	zero,32(sp)
  803bbc:	b0ad883a 	add	r22,r22,r2
  803bc0:	d8800415 	stw	r2,16(sp)
  803bc4:	188002a8 	cmpgeui	r2,r3,10
  803bc8:	103db326 	beq	r2,zero,803298 <_dtoa_r+0x2ac>
  803bcc:	00800044 	movi	r2,1
  803bd0:	d8800715 	stw	r2,28(sp)
  803bd4:	00bfffc4 	movi	r2,-1
  803bd8:	04000044 	movi	r16,1
  803bdc:	d8000215 	stw	zero,8(sp)
  803be0:	d8800515 	stw	r2,20(sp)
  803be4:	d8001e15 	stw	zero,120(sp)
  803be8:	d8800517 	ldw	r2,20(sp)
  803bec:	b8001115 	stw	zero,68(r23)
  803bf0:	000b883a 	mov	r5,zero
  803bf4:	d8800b15 	stw	r2,44(sp)
  803bf8:	003dc406 	br	80330c <_dtoa_r+0x320>
  803bfc:	188000e0 	cmpeqi	r2,r3,3
  803c00:	d8000715 	stw	zero,28(sp)
  803c04:	1002ac26 	beq	r2,zero,8046b8 <_dtoa_r+0x16cc>
  803c08:	d8801e17 	ldw	r2,120(sp)
  803c0c:	d8c00417 	ldw	r3,16(sp)
  803c10:	10c5883a 	add	r2,r2,r3
  803c14:	d8800b15 	stw	r2,44(sp)
  803c18:	10800044 	addi	r2,r2,1
  803c1c:	d8800515 	stw	r2,20(sp)
  803c20:	100d883a 	mov	r6,r2
  803c24:	00bdae16 	blt	zero,r2,8032e0 <_dtoa_r+0x2f4>
  803c28:	01800044 	movi	r6,1
  803c2c:	003dac06 	br	8032e0 <_dtoa_r+0x2f4>
  803c30:	00800044 	movi	r2,1
  803c34:	d8800915 	stw	r2,36(sp)
  803c38:	b03d890e 	bge	r22,zero,803260 <_dtoa_r+0x274>
  803c3c:	00800044 	movi	r2,1
  803c40:	1405c83a 	sub	r2,r2,r16
  803c44:	d8800615 	stw	r2,24(sp)
  803c48:	002d883a 	mov	r22,zero
  803c4c:	003d8506 	br	803264 <_dtoa_r+0x278>
  803c50:	a809883a 	mov	r4,r21
  803c54:	080d5000 	call	80d500 <__floatsidf>
  803c58:	900d883a 	mov	r6,r18
  803c5c:	b00f883a 	mov	r7,r22
  803c60:	1009883a 	mov	r4,r2
  803c64:	180b883a 	mov	r5,r3
  803c68:	080c2b40 	call	80c2b4 <__eqdf2>
  803c6c:	103d6926 	beq	r2,zero,803214 <_dtoa_r+0x228>
  803c70:	a8bfffc4 	addi	r2,r21,-1
  803c74:	d8800315 	stw	r2,12(sp)
  803c78:	003d6606 	br	803214 <_dtoa_r+0x228>
  803c7c:	00802074 	movhi	r2,129
  803c80:	10803b04 	addi	r2,r2,236
  803c84:	d8800115 	stw	r2,4(sp)
  803c88:	003d0a06 	br	8030b4 <_dtoa_r+0xc8>
  803c8c:	dd000817 	ldw	r20,32(sp)
  803c90:	dc800617 	ldw	r18,24(sp)
  803c94:	0021883a 	mov	r16,zero
  803c98:	003f3206 	br	803964 <_dtoa_r+0x978>
  803c9c:	e00b883a 	mov	r5,fp
  803ca0:	100d883a 	mov	r6,r2
  803ca4:	b809883a 	mov	r4,r23
  803ca8:	0806eb80 	call	806eb8 <__lshift>
  803cac:	1039883a 	mov	fp,r2
  803cb0:	003f6806 	br	803a54 <_dtoa_r+0xa68>
  803cb4:	00800704 	movi	r2,28
  803cb8:	003f5f06 	br	803a38 <_dtoa_r+0xa4c>
  803cbc:	01000804 	movi	r4,32
  803cc0:	2089c83a 	sub	r4,r4,r2
  803cc4:	9908983a 	sll	r4,r19,r4
  803cc8:	003d1d06 	br	803140 <_dtoa_r+0x154>
  803ccc:	04000044 	movi	r16,1
  803cd0:	003d7606 	br	8032ac <_dtoa_r+0x2c0>
  803cd4:	100b883a 	mov	r5,r2
  803cd8:	b809883a 	mov	r4,r23
  803cdc:	0806d700 	call	806d70 <__pow5mult>
  803ce0:	d8c00217 	ldw	r3,8(sp)
  803ce4:	1029883a 	mov	r20,r2
  803ce8:	18c00090 	cmplti	r3,r3,2
  803cec:	1801511e 	bne	r3,zero,804234 <_dtoa_r+0x1248>
  803cf0:	0023883a 	mov	r17,zero
  803cf4:	a0800417 	ldw	r2,16(r20)
  803cf8:	10800104 	addi	r2,r2,4
  803cfc:	100490ba 	slli	r2,r2,2
  803d00:	a085883a 	add	r2,r20,r2
  803d04:	11000017 	ldw	r4,0(r2)
  803d08:	08069580 	call	806958 <__hi0bits>
  803d0c:	00c00804 	movi	r3,32
  803d10:	1885c83a 	sub	r2,r3,r2
  803d14:	003f3f06 	br	803a14 <_dtoa_r+0xa28>
  803d18:	800b883a 	mov	r5,r16
  803d1c:	000f883a 	mov	r7,zero
  803d20:	01800284 	movi	r6,10
  803d24:	b809883a 	mov	r4,r23
  803d28:	08066e80 	call	8066e8 <__multadd>
  803d2c:	1021883a 	mov	r16,r2
  803d30:	d8800b17 	ldw	r2,44(sp)
  803d34:	00824b0e 	bge	zero,r2,804664 <_dtoa_r+0x1678>
  803d38:	dd400415 	stw	r21,16(sp)
  803d3c:	d8800515 	stw	r2,20(sp)
  803d40:	0480ac16 	blt	zero,r18,803ff4 <_dtoa_r+0x1008>
  803d44:	8801731e 	bne	r17,zero,804314 <_dtoa_r+0x1328>
  803d48:	8025883a 	mov	r18,r16
  803d4c:	dd800117 	ldw	r22,4(sp)
  803d50:	d9000517 	ldw	r4,20(sp)
  803d54:	98c0004c 	andi	r3,r19,1
  803d58:	b0bfffc4 	addi	r2,r22,-1
  803d5c:	1105883a 	add	r2,r2,r4
  803d60:	d8800515 	stw	r2,20(sp)
  803d64:	d8800217 	ldw	r2,8(sp)
  803d68:	d8c00815 	stw	r3,32(sp)
  803d6c:	1884b03a 	or	r2,r3,r2
  803d70:	d8800715 	stw	r2,28(sp)
  803d74:	00002906 	br	803e1c <_dtoa_r+0xe30>
  803d78:	e009883a 	mov	r4,fp
  803d7c:	08070400 	call	807040 <__mcmp>
  803d80:	980b883a 	mov	r5,r19
  803d84:	b809883a 	mov	r4,r23
  803d88:	d8800315 	stw	r2,12(sp)
  803d8c:	08066c40 	call	8066c4 <_Bfree>
  803d90:	d8800317 	ldw	r2,12(sp)
  803d94:	1000021e 	bne	r2,zero,803da0 <_dtoa_r+0xdb4>
  803d98:	d8c00717 	ldw	r3,28(sp)
  803d9c:	18022326 	beq	r3,zero,80462c <_dtoa_r+0x1640>
  803da0:	b4c00044 	addi	r19,r22,1
  803da4:	88012916 	blt	r17,zero,80424c <_dtoa_r+0x1260>
  803da8:	d8c00217 	ldw	r3,8(sp)
  803dac:	88e2b03a 	or	r17,r17,r3
  803db0:	d8c00817 	ldw	r3,32(sp)
  803db4:	1c62b03a 	or	r17,r3,r17
  803db8:	88012426 	beq	r17,zero,80424c <_dtoa_r+0x1260>
  803dbc:	00816f16 	blt	zero,r2,80437c <_dtoa_r+0x1390>
  803dc0:	d8800517 	ldw	r2,20(sp)
  803dc4:	b5400005 	stb	r21,0(r22)
  803dc8:	15817926 	beq	r2,r22,8043b0 <_dtoa_r+0x13c4>
  803dcc:	e00b883a 	mov	r5,fp
  803dd0:	000f883a 	mov	r7,zero
  803dd4:	01800284 	movi	r6,10
  803dd8:	b809883a 	mov	r4,r23
  803ddc:	08066e80 	call	8066e8 <__multadd>
  803de0:	1039883a 	mov	fp,r2
  803de4:	800b883a 	mov	r5,r16
  803de8:	000f883a 	mov	r7,zero
  803dec:	01800284 	movi	r6,10
  803df0:	b809883a 	mov	r4,r23
  803df4:	84801f26 	beq	r16,r18,803e74 <_dtoa_r+0xe88>
  803df8:	08066e80 	call	8066e8 <__multadd>
  803dfc:	900b883a 	mov	r5,r18
  803e00:	000f883a 	mov	r7,zero
  803e04:	01800284 	movi	r6,10
  803e08:	b809883a 	mov	r4,r23
  803e0c:	1021883a 	mov	r16,r2
  803e10:	08066e80 	call	8066e8 <__multadd>
  803e14:	1025883a 	mov	r18,r2
  803e18:	982d883a 	mov	r22,r19
  803e1c:	a00b883a 	mov	r5,r20
  803e20:	e009883a 	mov	r4,fp
  803e24:	0802df00 	call	802df0 <quorem>
  803e28:	800b883a 	mov	r5,r16
  803e2c:	e009883a 	mov	r4,fp
  803e30:	102b883a 	mov	r21,r2
  803e34:	d8800615 	stw	r2,24(sp)
  803e38:	08070400 	call	807040 <__mcmp>
  803e3c:	a00b883a 	mov	r5,r20
  803e40:	900d883a 	mov	r6,r18
  803e44:	b809883a 	mov	r4,r23
  803e48:	1023883a 	mov	r17,r2
  803e4c:	08070980 	call	807098 <__mdiff>
  803e50:	1027883a 	mov	r19,r2
  803e54:	10800317 	ldw	r2,12(r2)
  803e58:	ad400c04 	addi	r21,r21,48
  803e5c:	980b883a 	mov	r5,r19
  803e60:	103fc526 	beq	r2,zero,803d78 <_dtoa_r+0xd8c>
  803e64:	b809883a 	mov	r4,r23
  803e68:	08066c40 	call	8066c4 <_Bfree>
  803e6c:	00800044 	movi	r2,1
  803e70:	003fcb06 	br	803da0 <_dtoa_r+0xdb4>
  803e74:	08066e80 	call	8066e8 <__multadd>
  803e78:	1021883a 	mov	r16,r2
  803e7c:	1025883a 	mov	r18,r2
  803e80:	003fe506 	br	803e18 <_dtoa_r+0xe2c>
  803e84:	d8800217 	ldw	r2,8(sp)
  803e88:	108000d0 	cmplti	r2,r2,3
  803e8c:	10003e26 	beq	r2,zero,803f88 <_dtoa_r+0xf9c>
  803e90:	d8800717 	ldw	r2,28(sp)
  803e94:	103faa1e 	bne	r2,zero,803d40 <_dtoa_r+0xd54>
  803e98:	a00b883a 	mov	r5,r20
  803e9c:	e009883a 	mov	r4,fp
  803ea0:	0802df00 	call	802df0 <quorem>
  803ea4:	14c00c04 	addi	r19,r2,48
  803ea8:	d8800117 	ldw	r2,4(sp)
  803eac:	0023883a 	mov	r17,zero
  803eb0:	15400044 	addi	r21,r2,1
  803eb4:	14c00005 	stb	r19,0(r2)
  803eb8:	d8800417 	ldw	r2,16(sp)
  803ebc:	10800044 	addi	r2,r2,1
  803ec0:	d8800415 	stw	r2,16(sp)
  803ec4:	003f0906 	br	803aec <_dtoa_r+0xb00>
  803ec8:	a00b883a 	mov	r5,r20
  803ecc:	e009883a 	mov	r4,fp
  803ed0:	08070400 	call	807040 <__mcmp>
  803ed4:	103ee70e 	bge	r2,zero,803a74 <_dtoa_r+0xa88>
  803ed8:	e00b883a 	mov	r5,fp
  803edc:	000f883a 	mov	r7,zero
  803ee0:	01800284 	movi	r6,10
  803ee4:	b809883a 	mov	r4,r23
  803ee8:	08066e80 	call	8066e8 <__multadd>
  803eec:	d8c00417 	ldw	r3,16(sp)
  803ef0:	1039883a 	mov	fp,r2
  803ef4:	d8800717 	ldw	r2,28(sp)
  803ef8:	1d7fffc4 	addi	r21,r3,-1
  803efc:	103f861e 	bne	r2,zero,803d18 <_dtoa_r+0xd2c>
  803f00:	d8800b17 	ldw	r2,44(sp)
  803f04:	0081d20e 	bge	zero,r2,804650 <_dtoa_r+0x1664>
  803f08:	d8800515 	stw	r2,20(sp)
  803f0c:	003ee006 	br	803a90 <_dtoa_r+0xaa4>
  803f10:	00802074 	movhi	r2,129
  803f14:	1007883a 	mov	r3,r2
  803f18:	18c04404 	addi	r3,r3,272
  803f1c:	00802074 	movhi	r2,129
  803f20:	d8c00115 	stw	r3,4(sp)
  803f24:	108044c4 	addi	r2,r2,275
  803f28:	003ded06 	br	8036e0 <_dtoa_r+0x6f4>
  803f2c:	00800044 	movi	r2,1
  803f30:	d8800715 	stw	r2,28(sp)
  803f34:	003f3406 	br	803c08 <_dtoa_r+0xc1c>
  803f38:	983eb21e 	bne	r19,zero,803a04 <_dtoa_r+0xa18>
  803f3c:	00800434 	movhi	r2,16
  803f40:	10bfffc4 	addi	r2,r2,-1
  803f44:	8884703a 	and	r2,r17,r2
  803f48:	103eae1e 	bne	r2,zero,803a04 <_dtoa_r+0xa18>
  803f4c:	8c5ffc2c 	andhi	r17,r17,32752
  803f50:	883eac26 	beq	r17,zero,803a04 <_dtoa_r+0xa18>
  803f54:	d8800617 	ldw	r2,24(sp)
  803f58:	b5800044 	addi	r22,r22,1
  803f5c:	04400044 	movi	r17,1
  803f60:	10800044 	addi	r2,r2,1
  803f64:	d8800615 	stw	r2,24(sp)
  803f68:	003ea706 	br	803a08 <_dtoa_r+0xa1c>
  803f6c:	00800044 	movi	r2,1
  803f70:	d8800515 	stw	r2,20(sp)
  803f74:	d8801e15 	stw	r2,120(sp)
  803f78:	003f1b06 	br	803be8 <_dtoa_r+0xbfc>
  803f7c:	d8800b17 	ldw	r2,44(sp)
  803f80:	dd400415 	stw	r21,16(sp)
  803f84:	d8800515 	stw	r2,20(sp)
  803f88:	d8800517 	ldw	r2,20(sp)
  803f8c:	103e081e 	bne	r2,zero,8037b0 <_dtoa_r+0x7c4>
  803f90:	a00b883a 	mov	r5,r20
  803f94:	b809883a 	mov	r4,r23
  803f98:	000f883a 	mov	r7,zero
  803f9c:	01800144 	movi	r6,5
  803fa0:	08066e80 	call	8066e8 <__multadd>
  803fa4:	100b883a 	mov	r5,r2
  803fa8:	e009883a 	mov	r4,fp
  803fac:	1029883a 	mov	r20,r2
  803fb0:	08070400 	call	807040 <__mcmp>
  803fb4:	00bdfe0e 	bge	zero,r2,8037b0 <_dtoa_r+0x7c4>
  803fb8:	d8c00117 	ldw	r3,4(sp)
  803fbc:	00800c44 	movi	r2,49
  803fc0:	18800005 	stb	r2,0(r3)
  803fc4:	d8800417 	ldw	r2,16(sp)
  803fc8:	1d400044 	addi	r21,r3,1
  803fcc:	14400044 	addi	r17,r2,1
  803fd0:	a00b883a 	mov	r5,r20
  803fd4:	b809883a 	mov	r4,r23
  803fd8:	08066c40 	call	8066c4 <_Bfree>
  803fdc:	88800044 	addi	r2,r17,1
  803fe0:	d8800415 	stw	r2,16(sp)
  803fe4:	803ee11e 	bne	r16,zero,803b6c <_dtoa_r+0xb80>
  803fe8:	003ee306 	br	803b78 <_dtoa_r+0xb8c>
  803fec:	b005883a 	mov	r2,r22
  803ff0:	003e6006 	br	803974 <_dtoa_r+0x988>
  803ff4:	800b883a 	mov	r5,r16
  803ff8:	900d883a 	mov	r6,r18
  803ffc:	b809883a 	mov	r4,r23
  804000:	0806eb80 	call	806eb8 <__lshift>
  804004:	1021883a 	mov	r16,r2
  804008:	003f4e06 	br	803d44 <_dtoa_r+0xd58>
  80400c:	1529c83a 	sub	r20,r2,r20
  804010:	003e4906 	br	803938 <_dtoa_r+0x94c>
  804014:	dcc00c15 	stw	r19,48(sp)
  804018:	8825883a 	mov	r18,r17
  80401c:	05400084 	movi	r21,2
  804020:	003cdf06 	br	8033a0 <_dtoa_r+0x3b4>
  804024:	00800044 	movi	r2,1
  804028:	003ead06 	br	803ae0 <_dtoa_r+0xaf4>
  80402c:	00800044 	movi	r2,1
  804030:	d8800715 	stw	r2,28(sp)
  804034:	003ca506 	br	8032cc <_dtoa_r+0x2e0>
  804038:	1000021e 	bne	r2,zero,804044 <_dtoa_r+0x1058>
  80403c:	98c0004c 	andi	r3,r19,1
  804040:	183eb41e 	bne	r3,zero,803b14 <_dtoa_r+0xb28>
  804044:	2005883a 	mov	r2,r4
  804048:	00000206 	br	804054 <_dtoa_r+0x1068>
  80404c:	a8bfff83 	ldbu	r2,-2(r21)
  804050:	182b883a 	mov	r21,r3
  804054:	10803fcc 	andi	r2,r2,255
  804058:	1080201c 	xori	r2,r2,128
  80405c:	10bfe004 	addi	r2,r2,-128
  804060:	10800c18 	cmpnei	r2,r2,48
  804064:	a8ffffc4 	addi	r3,r21,-1
  804068:	103ff826 	beq	r2,zero,80404c <_dtoa_r+0x1060>
  80406c:	003eb606 	br	803b48 <_dtoa_r+0xb5c>
  804070:	d8c00117 	ldw	r3,4(sp)
  804074:	00800c44 	movi	r2,49
  804078:	18800005 	stb	r2,0(r3)
  80407c:	d8800417 	ldw	r2,16(sp)
  804080:	10800044 	addi	r2,r2,1
  804084:	d8800415 	stw	r2,16(sp)
  804088:	003eaf06 	br	803b48 <_dtoa_r+0xb5c>
  80408c:	d8c00a17 	ldw	r3,40(sp)
  804090:	18011826 	beq	r3,zero,8044f4 <_dtoa_r+0x1508>
  804094:	d8c00617 	ldw	r3,24(sp)
  804098:	10810cc4 	addi	r2,r2,1075
  80409c:	b0ad883a 	add	r22,r22,r2
  8040a0:	1885883a 	add	r2,r3,r2
  8040a4:	dd000817 	ldw	r20,32(sp)
  8040a8:	1825883a 	mov	r18,r3
  8040ac:	d8800615 	stw	r2,24(sp)
  8040b0:	003e2806 	br	803954 <_dtoa_r+0x968>
  8040b4:	a809883a 	mov	r4,r21
  8040b8:	080d5000 	call	80d500 <__floatsidf>
  8040bc:	800d883a 	mov	r6,r16
  8040c0:	900f883a 	mov	r7,r18
  8040c4:	1009883a 	mov	r4,r2
  8040c8:	180b883a 	mov	r5,r3
  8040cc:	080c5040 	call	80c504 <__muldf3>
  8040d0:	000d883a 	mov	r6,zero
  8040d4:	01d00734 	movhi	r7,16412
  8040d8:	1009883a 	mov	r4,r2
  8040dc:	180b883a 	mov	r5,r3
  8040e0:	080b1680 	call	80b168 <__adddf3>
  8040e4:	1029883a 	mov	r20,r2
  8040e8:	00bf3034 	movhi	r2,64704
  8040ec:	1885883a 	add	r2,r3,r2
  8040f0:	d8800c15 	stw	r2,48(sp)
  8040f4:	8009883a 	mov	r4,r16
  8040f8:	900b883a 	mov	r5,r18
  8040fc:	000d883a 	mov	r6,zero
  804100:	01d00534 	movhi	r7,16404
  804104:	080cb780 	call	80cb78 <__subdf3>
  804108:	dd400c17 	ldw	r21,48(sp)
  80410c:	a00d883a 	mov	r6,r20
  804110:	1009883a 	mov	r4,r2
  804114:	a80f883a 	mov	r7,r21
  804118:	180b883a 	mov	r5,r3
  80411c:	1025883a 	mov	r18,r2
  804120:	1821883a 	mov	r16,r3
  804124:	080c3340 	call	80c334 <__gedf2>
  804128:	00812f16 	blt	zero,r2,8045e8 <_dtoa_r+0x15fc>
  80412c:	a9e0003c 	xorhi	r7,r21,32768
  804130:	a00d883a 	mov	r6,r20
  804134:	9009883a 	mov	r4,r18
  804138:	800b883a 	mov	r5,r16
  80413c:	080c41c0 	call	80c41c <__ledf2>
  804140:	103d7d0e 	bge	r2,zero,803738 <_dtoa_r+0x74c>
  804144:	0029883a 	mov	r20,zero
  804148:	0021883a 	mov	r16,zero
  80414c:	003d9806 	br	8037b0 <_dtoa_r+0x7c4>
  804150:	d9800817 	ldw	r6,32(sp)
  804154:	e00b883a 	mov	r5,fp
  804158:	b809883a 	mov	r4,r23
  80415c:	0806d700 	call	806d70 <__pow5mult>
  804160:	1039883a 	mov	fp,r2
  804164:	003e1e06 	br	8039e0 <_dtoa_r+0x9f4>
  804168:	d8800417 	ldw	r2,16(sp)
  80416c:	1000ed26 	beq	r2,zero,804524 <_dtoa_r+0x1538>
  804170:	00a9c83a 	sub	r20,zero,r2
  804174:	a08003cc 	andi	r2,r20,15
  804178:	100690fa 	slli	r3,r2,3
  80417c:	00802074 	movhi	r2,129
  804180:	10808204 	addi	r2,r2,520
  804184:	10c5883a 	add	r2,r2,r3
  804188:	11800017 	ldw	r6,0(r2)
  80418c:	11c00117 	ldw	r7,4(r2)
  804190:	a029d13a 	srai	r20,r20,4
  804194:	9809883a 	mov	r4,r19
  804198:	880b883a 	mov	r5,r17
  80419c:	080c5040 	call	80c504 <__muldf3>
  8041a0:	1021883a 	mov	r16,r2
  8041a4:	1825883a 	mov	r18,r3
  8041a8:	a0013826 	beq	r20,zero,80468c <_dtoa_r+0x16a0>
  8041ac:	02002074 	movhi	r8,129
  8041b0:	05400084 	movi	r21,2
  8041b4:	42007804 	addi	r8,r8,480
  8041b8:	1009883a 	mov	r4,r2
  8041bc:	9805883a 	mov	r2,r19
  8041c0:	180b883a 	mov	r5,r3
  8041c4:	dc000c15 	stw	r16,48(sp)
  8041c8:	8827883a 	mov	r19,r17
  8041cc:	0007883a 	mov	r3,zero
  8041d0:	a823883a 	mov	r17,r21
  8041d4:	4021883a 	mov	r16,r8
  8041d8:	102b883a 	mov	r21,r2
  8041dc:	a180004c 	andi	r6,r20,1
  8041e0:	30000726 	beq	r6,zero,804200 <_dtoa_r+0x1214>
  8041e4:	81800017 	ldw	r6,0(r16)
  8041e8:	81c00117 	ldw	r7,4(r16)
  8041ec:	8c400044 	addi	r17,r17,1
  8041f0:	080c5040 	call	80c504 <__muldf3>
  8041f4:	180b883a 	mov	r5,r3
  8041f8:	1009883a 	mov	r4,r2
  8041fc:	00c00044 	movi	r3,1
  804200:	a029d07a 	srai	r20,r20,1
  804204:	84000204 	addi	r16,r16,8
  804208:	a03ff41e 	bne	r20,zero,8041dc <_dtoa_r+0x11f0>
  80420c:	a805883a 	mov	r2,r21
  804210:	18c03fcc 	andi	r3,r3,255
  804214:	882b883a 	mov	r21,r17
  804218:	dc000c17 	ldw	r16,48(sp)
  80421c:	9823883a 	mov	r17,r19
  804220:	1027883a 	mov	r19,r2
  804224:	183c7726 	beq	r3,zero,803404 <_dtoa_r+0x418>
  804228:	2021883a 	mov	r16,r4
  80422c:	2825883a 	mov	r18,r5
  804230:	003c7406 	br	803404 <_dtoa_r+0x418>
  804234:	983eae1e 	bne	r19,zero,803cf0 <_dtoa_r+0xd04>
  804238:	00800434 	movhi	r2,16
  80423c:	10bfffc4 	addi	r2,r2,-1
  804240:	8884703a 	and	r2,r17,r2
  804244:	103f4126 	beq	r2,zero,803f4c <_dtoa_r+0xf60>
  804248:	003ea906 	br	803cf0 <_dtoa_r+0xd04>
  80424c:	9807883a 	mov	r3,r19
  804250:	a827883a 	mov	r19,r21
  804254:	182b883a 	mov	r21,r3
  804258:	d8c00417 	ldw	r3,16(sp)
  80425c:	18c00044 	addi	r3,r3,1
  804260:	d8c00415 	stw	r3,16(sp)
  804264:	00800d0e 	bge	zero,r2,80429c <_dtoa_r+0x12b0>
  804268:	e00b883a 	mov	r5,fp
  80426c:	b809883a 	mov	r4,r23
  804270:	01800044 	movi	r6,1
  804274:	0806eb80 	call	806eb8 <__lshift>
  804278:	a00b883a 	mov	r5,r20
  80427c:	1009883a 	mov	r4,r2
  804280:	1039883a 	mov	fp,r2
  804284:	08070400 	call	807040 <__mcmp>
  804288:	0080df0e 	bge	zero,r2,804608 <_dtoa_r+0x161c>
  80428c:	98c00e60 	cmpeqi	r3,r19,57
  804290:	1800ce1e 	bne	r3,zero,8045cc <_dtoa_r+0x15e0>
  804294:	d8800617 	ldw	r2,24(sp)
  804298:	14c00c44 	addi	r19,r2,49
  80429c:	8023883a 	mov	r17,r16
  8042a0:	b4c00005 	stb	r19,0(r22)
  8042a4:	9021883a 	mov	r16,r18
  8042a8:	003e2706 	br	803b48 <_dtoa_r+0xb5c>
  8042ac:	b82b883a 	mov	r21,r23
  8042b0:	ddc00217 	ldw	r23,8(sp)
  8042b4:	200d883a 	mov	r6,r4
  8042b8:	280f883a 	mov	r7,r5
  8042bc:	080b1680 	call	80b168 <__adddf3>
  8042c0:	180b883a 	mov	r5,r3
  8042c4:	800d883a 	mov	r6,r16
  8042c8:	900f883a 	mov	r7,r18
  8042cc:	1009883a 	mov	r4,r2
  8042d0:	1823883a 	mov	r17,r3
  8042d4:	1027883a 	mov	r19,r2
  8042d8:	080c3340 	call	80c334 <__gedf2>
  8042dc:	d8c00417 	ldw	r3,16(sp)
  8042e0:	18c00044 	addi	r3,r3,1
  8042e4:	d8c00415 	stw	r3,16(sp)
  8042e8:	00808c16 	blt	zero,r2,80451c <_dtoa_r+0x1530>
  8042ec:	800d883a 	mov	r6,r16
  8042f0:	900f883a 	mov	r7,r18
  8042f4:	9809883a 	mov	r4,r19
  8042f8:	880b883a 	mov	r5,r17
  8042fc:	080c2b40 	call	80c2b4 <__eqdf2>
  804300:	1000021e 	bne	r2,zero,80430c <_dtoa_r+0x1320>
  804304:	ad40004c 	andi	r21,r21,1
  804308:	a800841e 	bne	r21,zero,80451c <_dtoa_r+0x1530>
  80430c:	a02b883a 	mov	r21,r20
  804310:	003e1906 	br	803b78 <_dtoa_r+0xb8c>
  804314:	81400117 	ldw	r5,4(r16)
  804318:	b809883a 	mov	r4,r23
  80431c:	08066200 	call	806620 <_Balloc>
  804320:	1023883a 	mov	r17,r2
  804324:	1000f326 	beq	r2,zero,8046f4 <_dtoa_r+0x1708>
  804328:	81800417 	ldw	r6,16(r16)
  80432c:	81400304 	addi	r5,r16,12
  804330:	11000304 	addi	r4,r2,12
  804334:	31800084 	addi	r6,r6,2
  804338:	300c90ba 	slli	r6,r6,2
  80433c:	08063040 	call	806304 <memcpy>
  804340:	01800044 	movi	r6,1
  804344:	880b883a 	mov	r5,r17
  804348:	b809883a 	mov	r4,r23
  80434c:	0806eb80 	call	806eb8 <__lshift>
  804350:	1025883a 	mov	r18,r2
  804354:	003e7d06 	br	803d4c <_dtoa_r+0xd60>
  804358:	e00b883a 	mov	r5,fp
  80435c:	b809883a 	mov	r4,r23
  804360:	0806d700 	call	806d70 <__pow5mult>
  804364:	1039883a 	mov	fp,r2
  804368:	003d9d06 	br	8039e0 <_dtoa_r+0x9f4>
  80436c:	d8800617 	ldw	r2,24(sp)
  804370:	d8c00517 	ldw	r3,20(sp)
  804374:	10e5c83a 	sub	r18,r2,r3
  804378:	003d7606 	br	803954 <_dtoa_r+0x968>
  80437c:	d8c00417 	ldw	r3,16(sp)
  804380:	9805883a 	mov	r2,r19
  804384:	a827883a 	mov	r19,r21
  804388:	18c00044 	addi	r3,r3,1
  80438c:	102b883a 	mov	r21,r2
  804390:	d8c00415 	stw	r3,16(sp)
  804394:	98800e58 	cmpnei	r2,r19,57
  804398:	10008c26 	beq	r2,zero,8045cc <_dtoa_r+0x15e0>
  80439c:	98c00044 	addi	r3,r19,1
  8043a0:	8023883a 	mov	r17,r16
  8043a4:	b0c00005 	stb	r3,0(r22)
  8043a8:	9021883a 	mov	r16,r18
  8043ac:	003de606 	br	803b48 <_dtoa_r+0xb5c>
  8043b0:	9805883a 	mov	r2,r19
  8043b4:	a827883a 	mov	r19,r21
  8043b8:	102b883a 	mov	r21,r2
  8043bc:	d8800417 	ldw	r2,16(sp)
  8043c0:	8023883a 	mov	r17,r16
  8043c4:	9021883a 	mov	r16,r18
  8043c8:	10800044 	addi	r2,r2,1
  8043cc:	d8800415 	stw	r2,16(sp)
  8043d0:	003dc606 	br	803aec <_dtoa_r+0xb00>
  8043d4:	d9400c17 	ldw	r5,48(sp)
  8043d8:	a009883a 	mov	r4,r20
  8043dc:	080c5040 	call	80c504 <__muldf3>
  8043e0:	d9800d17 	ldw	r6,52(sp)
  8043e4:	d9400117 	ldw	r5,4(sp)
  8043e8:	d9001017 	ldw	r4,64(sp)
  8043ec:	d8800c15 	stw	r2,48(sp)
  8043f0:	d8c00d15 	stw	r3,52(sp)
  8043f4:	29000005 	stb	r4,0(r5)
  8043f8:	31000058 	cmpnei	r4,r6,1
  8043fc:	29a9883a 	add	r20,r5,r6
  804400:	2000a026 	beq	r4,zero,804684 <_dtoa_r+0x1698>
  804404:	dc400e15 	stw	r17,56(sp)
  804408:	8009883a 	mov	r4,r16
  80440c:	900b883a 	mov	r5,r18
  804410:	a823883a 	mov	r17,r21
  804414:	000d883a 	mov	r6,zero
  804418:	01d00934 	movhi	r7,16420
  80441c:	080c5040 	call	80c504 <__muldf3>
  804420:	180b883a 	mov	r5,r3
  804424:	1009883a 	mov	r4,r2
  804428:	1825883a 	mov	r18,r3
  80442c:	102b883a 	mov	r21,r2
  804430:	080d4800 	call	80d480 <__fixdfsi>
  804434:	1009883a 	mov	r4,r2
  804438:	1021883a 	mov	r16,r2
  80443c:	080d5000 	call	80d500 <__floatsidf>
  804440:	a809883a 	mov	r4,r21
  804444:	900b883a 	mov	r5,r18
  804448:	100d883a 	mov	r6,r2
  80444c:	180f883a 	mov	r7,r3
  804450:	8c400044 	addi	r17,r17,1
  804454:	84000c04 	addi	r16,r16,48
  804458:	080cb780 	call	80cb78 <__subdf3>
  80445c:	8c3fffc5 	stb	r16,-1(r17)
  804460:	1009883a 	mov	r4,r2
  804464:	180b883a 	mov	r5,r3
  804468:	a47fea1e 	bne	r20,r17,804414 <_dtoa_r+0x1428>
  80446c:	dc400e17 	ldw	r17,56(sp)
  804470:	1021883a 	mov	r16,r2
  804474:	1825883a 	mov	r18,r3
  804478:	d9000c17 	ldw	r4,48(sp)
  80447c:	d9400d17 	ldw	r5,52(sp)
  804480:	000d883a 	mov	r6,zero
  804484:	01cff834 	movhi	r7,16352
  804488:	080b1680 	call	80b168 <__adddf3>
  80448c:	800d883a 	mov	r6,r16
  804490:	900f883a 	mov	r7,r18
  804494:	1009883a 	mov	r4,r2
  804498:	180b883a 	mov	r5,r3
  80449c:	080c41c0 	call	80c41c <__ledf2>
  8044a0:	10005416 	blt	r2,zero,8045f4 <_dtoa_r+0x1608>
  8044a4:	d9800c17 	ldw	r6,48(sp)
  8044a8:	d9c00d17 	ldw	r7,52(sp)
  8044ac:	0009883a 	mov	r4,zero
  8044b0:	014ff834 	movhi	r5,16352
  8044b4:	080cb780 	call	80cb78 <__subdf3>
  8044b8:	800d883a 	mov	r6,r16
  8044bc:	900f883a 	mov	r7,r18
  8044c0:	1009883a 	mov	r4,r2
  8044c4:	180b883a 	mov	r5,r3
  8044c8:	080c3340 	call	80c334 <__gedf2>
  8044cc:	00bc9a0e 	bge	zero,r2,803738 <_dtoa_r+0x74c>
  8044d0:	a0bfffc7 	ldb	r2,-1(r20)
  8044d4:	a02b883a 	mov	r21,r20
  8044d8:	a53fffc4 	addi	r20,r20,-1
  8044dc:	10800c20 	cmpeqi	r2,r2,48
  8044e0:	103ffb1e 	bne	r2,zero,8044d0 <_dtoa_r+0x14e4>
  8044e4:	d8801117 	ldw	r2,68(sp)
  8044e8:	10800044 	addi	r2,r2,1
  8044ec:	d8800415 	stw	r2,16(sp)
  8044f0:	003da106 	br	803b78 <_dtoa_r+0xb8c>
  8044f4:	d8c01217 	ldw	r3,72(sp)
  8044f8:	d9000617 	ldw	r4,24(sp)
  8044fc:	00800d84 	movi	r2,54
  804500:	10c5c83a 	sub	r2,r2,r3
  804504:	b0ad883a 	add	r22,r22,r2
  804508:	2085883a 	add	r2,r4,r2
  80450c:	dd000817 	ldw	r20,32(sp)
  804510:	2025883a 	mov	r18,r4
  804514:	d8800615 	stw	r2,24(sp)
  804518:	003d0e06 	br	803954 <_dtoa_r+0x968>
  80451c:	d9000117 	ldw	r4,4(sp)
  804520:	003c4b06 	br	803650 <_dtoa_r+0x664>
  804524:	9821883a 	mov	r16,r19
  804528:	8825883a 	mov	r18,r17
  80452c:	05400084 	movi	r21,2
  804530:	003bb406 	br	803404 <_dtoa_r+0x418>
  804534:	d8800517 	ldw	r2,20(sp)
  804538:	103ede26 	beq	r2,zero,8040b4 <_dtoa_r+0x10c8>
  80453c:	d8800b17 	ldw	r2,44(sp)
  804540:	00bc7d0e 	bge	zero,r2,803738 <_dtoa_r+0x74c>
  804544:	900b883a 	mov	r5,r18
  804548:	8009883a 	mov	r4,r16
  80454c:	000d883a 	mov	r6,zero
  804550:	01d00934 	movhi	r7,16420
  804554:	080c5040 	call	80c504 <__muldf3>
  804558:	a9000044 	addi	r4,r21,1
  80455c:	1021883a 	mov	r16,r2
  804560:	1825883a 	mov	r18,r3
  804564:	080d5000 	call	80d500 <__floatsidf>
  804568:	800d883a 	mov	r6,r16
  80456c:	900f883a 	mov	r7,r18
  804570:	1009883a 	mov	r4,r2
  804574:	180b883a 	mov	r5,r3
  804578:	080c5040 	call	80c504 <__muldf3>
  80457c:	1009883a 	mov	r4,r2
  804580:	000d883a 	mov	r6,zero
  804584:	01d00734 	movhi	r7,16412
  804588:	180b883a 	mov	r5,r3
  80458c:	080b1680 	call	80b168 <__adddf3>
  804590:	d9000417 	ldw	r4,16(sp)
  804594:	1029883a 	mov	r20,r2
  804598:	00bf3034 	movhi	r2,64704
  80459c:	1887883a 	add	r3,r3,r2
  8045a0:	d8800b17 	ldw	r2,44(sp)
  8045a4:	213fffc4 	addi	r4,r4,-1
  8045a8:	d9001115 	stw	r4,68(sp)
  8045ac:	d8c00c15 	stw	r3,48(sp)
  8045b0:	d8800d15 	stw	r2,52(sp)
  8045b4:	003bb106 	br	80347c <_dtoa_r+0x490>
  8045b8:	d8800417 	ldw	r2,16(sp)
  8045bc:	00c00c44 	movi	r3,49
  8045c0:	10800044 	addi	r2,r2,1
  8045c4:	d8800415 	stw	r2,16(sp)
  8045c8:	003c2a06 	br	803674 <_dtoa_r+0x688>
  8045cc:	00800e44 	movi	r2,57
  8045d0:	8023883a 	mov	r17,r16
  8045d4:	d9400117 	ldw	r5,4(sp)
  8045d8:	b0800005 	stb	r2,0(r22)
  8045dc:	9021883a 	mov	r16,r18
  8045e0:	01000e44 	movi	r4,57
  8045e4:	003d5006 	br	803b28 <_dtoa_r+0xb3c>
  8045e8:	0029883a 	mov	r20,zero
  8045ec:	0021883a 	mov	r16,zero
  8045f0:	003e7106 	br	803fb8 <_dtoa_r+0xfcc>
  8045f4:	d8801117 	ldw	r2,68(sp)
  8045f8:	d9000117 	ldw	r4,4(sp)
  8045fc:	10800044 	addi	r2,r2,1
  804600:	d8800415 	stw	r2,16(sp)
  804604:	003c1206 	br	803650 <_dtoa_r+0x664>
  804608:	103f241e 	bne	r2,zero,80429c <_dtoa_r+0x12b0>
  80460c:	9880004c 	andi	r2,r19,1
  804610:	103f1e1e 	bne	r2,zero,80428c <_dtoa_r+0x12a0>
  804614:	003f2106 	br	80429c <_dtoa_r+0x12b0>
  804618:	d8801117 	ldw	r2,68(sp)
  80461c:	ddc00d17 	ldw	r23,52(sp)
  804620:	10800044 	addi	r2,r2,1
  804624:	d8800415 	stw	r2,16(sp)
  804628:	003d5306 	br	803b78 <_dtoa_r+0xb8c>
  80462c:	d8c00417 	ldw	r3,16(sp)
  804630:	a8800e60 	cmpeqi	r2,r21,57
  804634:	a827883a 	mov	r19,r21
  804638:	18c00044 	addi	r3,r3,1
  80463c:	d8c00415 	stw	r3,16(sp)
  804640:	b5400044 	addi	r21,r22,1
  804644:	103fe11e 	bne	r2,zero,8045cc <_dtoa_r+0x15e0>
  804648:	047f1216 	blt	zero,r17,804294 <_dtoa_r+0x12a8>
  80464c:	003f1306 	br	80429c <_dtoa_r+0x12b0>
  804650:	d8800217 	ldw	r2,8(sp)
  804654:	108000c8 	cmpgei	r2,r2,3
  804658:	103e481e 	bne	r2,zero,803f7c <_dtoa_r+0xf90>
  80465c:	dd400415 	stw	r21,16(sp)
  804660:	003e0d06 	br	803e98 <_dtoa_r+0xeac>
  804664:	d8800217 	ldw	r2,8(sp)
  804668:	108000c8 	cmpgei	r2,r2,3
  80466c:	103e431e 	bne	r2,zero,803f7c <_dtoa_r+0xf90>
  804670:	d8800b17 	ldw	r2,44(sp)
  804674:	dd400415 	stw	r21,16(sp)
  804678:	d8800515 	stw	r2,20(sp)
  80467c:	04bdb10e 	bge	zero,r18,803d44 <_dtoa_r+0xd58>
  804680:	003e5c06 	br	803ff4 <_dtoa_r+0x1008>
  804684:	a829883a 	mov	r20,r21
  804688:	003f7b06 	br	804478 <_dtoa_r+0x148c>
  80468c:	05400084 	movi	r21,2
  804690:	003b5c06 	br	803404 <_dtoa_r+0x418>
  804694:	01c02074 	movhi	r7,129
  804698:	01002074 	movhi	r4,129
  80469c:	39c04804 	addi	r7,r7,288
  8046a0:	000d883a 	mov	r6,zero
  8046a4:	01406a84 	movi	r5,426
  8046a8:	21004d04 	addi	r4,r4,308
  8046ac:	08094540 	call	809454 <__assert_func>
  8046b0:	000b883a 	mov	r5,zero
  8046b4:	003b1506 	br	80330c <_dtoa_r+0x320>
  8046b8:	b8001115 	stw	zero,68(r23)
  8046bc:	000b883a 	mov	r5,zero
  8046c0:	b809883a 	mov	r4,r23
  8046c4:	08066200 	call	806620 <_Balloc>
  8046c8:	d8800115 	stw	r2,4(sp)
  8046cc:	103ff126 	beq	r2,zero,804694 <_dtoa_r+0x16a8>
  8046d0:	d8800117 	ldw	r2,4(sp)
  8046d4:	d8001e15 	stw	zero,120(sp)
  8046d8:	b8801015 	stw	r2,64(r23)
  8046dc:	00bfffc4 	movi	r2,-1
  8046e0:	d8800515 	stw	r2,20(sp)
  8046e4:	d8800b15 	stw	r2,44(sp)
  8046e8:	00800044 	movi	r2,1
  8046ec:	d8800715 	stw	r2,28(sp)
  8046f0:	003c1106 	br	803738 <_dtoa_r+0x74c>
  8046f4:	01c02074 	movhi	r7,129
  8046f8:	01002074 	movhi	r4,129
  8046fc:	39c04804 	addi	r7,r7,288
  804700:	000d883a 	mov	r6,zero
  804704:	0140ba84 	movi	r5,746
  804708:	21004d04 	addi	r4,r4,308
  80470c:	08094540 	call	809454 <__assert_func>
  804710:	00802074 	movhi	r2,129
  804714:	10804504 	addi	r2,r2,276
  804718:	d8800115 	stw	r2,4(sp)
  80471c:	003a6506 	br	8030b4 <_dtoa_r+0xc8>
  804720:	18c00120 	cmpeqi	r3,r3,4
  804724:	183cc91e 	bne	r3,zero,803a4c <_dtoa_r+0xa60>
  804728:	00c00f04 	movi	r3,60
  80472c:	1885c83a 	sub	r2,r3,r2
  804730:	003cc106 	br	803a38 <_dtoa_r+0xa4c>

00804734 <__sflush_r>:
  804734:	2880030b 	ldhu	r2,12(r5)
  804738:	defffb04 	addi	sp,sp,-20
  80473c:	dcc00315 	stw	r19,12(sp)
  804740:	dc000015 	stw	r16,0(sp)
  804744:	dfc00415 	stw	ra,16(sp)
  804748:	dc800215 	stw	r18,8(sp)
  80474c:	dc400115 	stw	r17,4(sp)
  804750:	10c0020c 	andi	r3,r2,8
  804754:	2821883a 	mov	r16,r5
  804758:	2027883a 	mov	r19,r4
  80475c:	18003f1e 	bne	r3,zero,80485c <__sflush_r+0x128>
  804760:	28c00117 	ldw	r3,4(r5)
  804764:	10820014 	ori	r2,r2,2048
  804768:	2880030d 	sth	r2,12(r5)
  80476c:	00c0550e 	bge	zero,r3,8048c4 <__sflush_r+0x190>
  804770:	82000a17 	ldw	r8,40(r16)
  804774:	40003126 	beq	r8,zero,80483c <__sflush_r+0x108>
  804778:	9c400017 	ldw	r17,0(r19)
  80477c:	1104000c 	andi	r4,r2,4096
  804780:	98000015 	stw	zero,0(r19)
  804784:	81400717 	ldw	r5,28(r16)
  804788:	1007883a 	mov	r3,r2
  80478c:	2000521e 	bne	r4,zero,8048d8 <__sflush_r+0x1a4>
  804790:	01c00044 	movi	r7,1
  804794:	000d883a 	mov	r6,zero
  804798:	9809883a 	mov	r4,r19
  80479c:	403ee83a 	callr	r8
  8047a0:	10ffffd8 	cmpnei	r3,r2,-1
  8047a4:	18005826 	beq	r3,zero,804908 <__sflush_r+0x1d4>
  8047a8:	80c0030b 	ldhu	r3,12(r16)
  8047ac:	82000a17 	ldw	r8,40(r16)
  8047b0:	81400717 	ldw	r5,28(r16)
  8047b4:	18c0010c 	andi	r3,r3,4
  8047b8:	18000626 	beq	r3,zero,8047d4 <__sflush_r+0xa0>
  8047bc:	81000117 	ldw	r4,4(r16)
  8047c0:	80c00c17 	ldw	r3,48(r16)
  8047c4:	1105c83a 	sub	r2,r2,r4
  8047c8:	18000226 	beq	r3,zero,8047d4 <__sflush_r+0xa0>
  8047cc:	80c00f17 	ldw	r3,60(r16)
  8047d0:	10c5c83a 	sub	r2,r2,r3
  8047d4:	100d883a 	mov	r6,r2
  8047d8:	000f883a 	mov	r7,zero
  8047dc:	9809883a 	mov	r4,r19
  8047e0:	403ee83a 	callr	r8
  8047e4:	10ffffd8 	cmpnei	r3,r2,-1
  8047e8:	18003d1e 	bne	r3,zero,8048e0 <__sflush_r+0x1ac>
  8047ec:	99000017 	ldw	r4,0(r19)
  8047f0:	80c0030b 	ldhu	r3,12(r16)
  8047f4:	20004e26 	beq	r4,zero,804930 <__sflush_r+0x1fc>
  8047f8:	21400760 	cmpeqi	r5,r4,29
  8047fc:	2800021e 	bne	r5,zero,804808 <__sflush_r+0xd4>
  804800:	210005a0 	cmpeqi	r4,r4,22
  804804:	20002c26 	beq	r4,zero,8048b8 <__sflush_r+0x184>
  804808:	80800417 	ldw	r2,16(r16)
  80480c:	18fdffcc 	andi	r3,r3,63487
  804810:	80c0030d 	sth	r3,12(r16)
  804814:	80000115 	stw	zero,4(r16)
  804818:	80800015 	stw	r2,0(r16)
  80481c:	81400c17 	ldw	r5,48(r16)
  804820:	9c400015 	stw	r17,0(r19)
  804824:	28000526 	beq	r5,zero,80483c <__sflush_r+0x108>
  804828:	80801004 	addi	r2,r16,64
  80482c:	28800226 	beq	r5,r2,804838 <__sflush_r+0x104>
  804830:	9809883a 	mov	r4,r19
  804834:	0804ef80 	call	804ef8 <_free_r>
  804838:	80000c15 	stw	zero,48(r16)
  80483c:	0005883a 	mov	r2,zero
  804840:	dfc00417 	ldw	ra,16(sp)
  804844:	dcc00317 	ldw	r19,12(sp)
  804848:	dc800217 	ldw	r18,8(sp)
  80484c:	dc400117 	ldw	r17,4(sp)
  804850:	dc000017 	ldw	r16,0(sp)
  804854:	dec00504 	addi	sp,sp,20
  804858:	f800283a 	ret
  80485c:	2c800417 	ldw	r18,16(r5)
  804860:	903ff626 	beq	r18,zero,80483c <__sflush_r+0x108>
  804864:	2c400017 	ldw	r17,0(r5)
  804868:	108000cc 	andi	r2,r2,3
  80486c:	2c800015 	stw	r18,0(r5)
  804870:	8ca3c83a 	sub	r17,r17,r18
  804874:	1000161e 	bne	r2,zero,8048d0 <__sflush_r+0x19c>
  804878:	28800517 	ldw	r2,20(r5)
  80487c:	80800215 	stw	r2,8(r16)
  804880:	04400316 	blt	zero,r17,804890 <__sflush_r+0x15c>
  804884:	003fed06 	br	80483c <__sflush_r+0x108>
  804888:	90a5883a 	add	r18,r18,r2
  80488c:	047feb0e 	bge	zero,r17,80483c <__sflush_r+0x108>
  804890:	80800917 	ldw	r2,36(r16)
  804894:	81400717 	ldw	r5,28(r16)
  804898:	880f883a 	mov	r7,r17
  80489c:	900d883a 	mov	r6,r18
  8048a0:	9809883a 	mov	r4,r19
  8048a4:	103ee83a 	callr	r2
  8048a8:	88a3c83a 	sub	r17,r17,r2
  8048ac:	00bff616 	blt	zero,r2,804888 <__sflush_r+0x154>
  8048b0:	80c0030b 	ldhu	r3,12(r16)
  8048b4:	00bfffc4 	movi	r2,-1
  8048b8:	18c01014 	ori	r3,r3,64
  8048bc:	80c0030d 	sth	r3,12(r16)
  8048c0:	003fdf06 	br	804840 <__sflush_r+0x10c>
  8048c4:	28c00f17 	ldw	r3,60(r5)
  8048c8:	00ffa916 	blt	zero,r3,804770 <__sflush_r+0x3c>
  8048cc:	003fdb06 	br	80483c <__sflush_r+0x108>
  8048d0:	0005883a 	mov	r2,zero
  8048d4:	003fe906 	br	80487c <__sflush_r+0x148>
  8048d8:	80801417 	ldw	r2,80(r16)
  8048dc:	003fb506 	br	8047b4 <__sflush_r+0x80>
  8048e0:	80c0030b 	ldhu	r3,12(r16)
  8048e4:	81000417 	ldw	r4,16(r16)
  8048e8:	80000115 	stw	zero,4(r16)
  8048ec:	197dffcc 	andi	r5,r3,63487
  8048f0:	8140030d 	sth	r5,12(r16)
  8048f4:	81000015 	stw	r4,0(r16)
  8048f8:	18c4000c 	andi	r3,r3,4096
  8048fc:	183fc726 	beq	r3,zero,80481c <__sflush_r+0xe8>
  804900:	80801415 	stw	r2,80(r16)
  804904:	003fc506 	br	80481c <__sflush_r+0xe8>
  804908:	98c00017 	ldw	r3,0(r19)
  80490c:	183fa626 	beq	r3,zero,8047a8 <__sflush_r+0x74>
  804910:	19000760 	cmpeqi	r4,r3,29
  804914:	20000e1e 	bne	r4,zero,804950 <__sflush_r+0x21c>
  804918:	18c00598 	cmpnei	r3,r3,22
  80491c:	18000c26 	beq	r3,zero,804950 <__sflush_r+0x21c>
  804920:	80c0030b 	ldhu	r3,12(r16)
  804924:	18c01014 	ori	r3,r3,64
  804928:	80c0030d 	sth	r3,12(r16)
  80492c:	003fc406 	br	804840 <__sflush_r+0x10c>
  804930:	81000417 	ldw	r4,16(r16)
  804934:	197dffcc 	andi	r5,r3,63487
  804938:	8140030d 	sth	r5,12(r16)
  80493c:	80000115 	stw	zero,4(r16)
  804940:	81000015 	stw	r4,0(r16)
  804944:	18c4000c 	andi	r3,r3,4096
  804948:	183fb426 	beq	r3,zero,80481c <__sflush_r+0xe8>
  80494c:	003fec06 	br	804900 <__sflush_r+0x1cc>
  804950:	9c400015 	stw	r17,0(r19)
  804954:	0005883a 	mov	r2,zero
  804958:	003fb906 	br	804840 <__sflush_r+0x10c>

0080495c <_fflush_r>:
  80495c:	defffd04 	addi	sp,sp,-12
  804960:	dc000115 	stw	r16,4(sp)
  804964:	dfc00215 	stw	ra,8(sp)
  804968:	2021883a 	mov	r16,r4
  80496c:	20000226 	beq	r4,zero,804978 <_fflush_r+0x1c>
  804970:	20800e17 	ldw	r2,56(r4)
  804974:	10000726 	beq	r2,zero,804994 <_fflush_r+0x38>
  804978:	2880030f 	ldh	r2,12(r5)
  80497c:	10000a1e 	bne	r2,zero,8049a8 <_fflush_r+0x4c>
  804980:	0005883a 	mov	r2,zero
  804984:	dfc00217 	ldw	ra,8(sp)
  804988:	dc000117 	ldw	r16,4(sp)
  80498c:	dec00304 	addi	sp,sp,12
  804990:	f800283a 	ret
  804994:	d9400015 	stw	r5,0(sp)
  804998:	0804d940 	call	804d94 <__sinit>
  80499c:	d9400017 	ldw	r5,0(sp)
  8049a0:	2880030f 	ldh	r2,12(r5)
  8049a4:	103ff626 	beq	r2,zero,804980 <_fflush_r+0x24>
  8049a8:	8009883a 	mov	r4,r16
  8049ac:	dfc00217 	ldw	ra,8(sp)
  8049b0:	dc000117 	ldw	r16,4(sp)
  8049b4:	dec00304 	addi	sp,sp,12
  8049b8:	08047341 	jmpi	804734 <__sflush_r>

008049bc <fflush>:
  8049bc:	20001726 	beq	r4,zero,804a1c <fflush+0x60>
  8049c0:	00802074 	movhi	r2,129
  8049c4:	200b883a 	mov	r5,r4
  8049c8:	11086517 	ldw	r4,8596(r2)
  8049cc:	20000226 	beq	r4,zero,8049d8 <fflush+0x1c>
  8049d0:	20800e17 	ldw	r2,56(r4)
  8049d4:	10000526 	beq	r2,zero,8049ec <fflush+0x30>
  8049d8:	2880030f 	ldh	r2,12(r5)
  8049dc:	1000021e 	bne	r2,zero,8049e8 <fflush+0x2c>
  8049e0:	0005883a 	mov	r2,zero
  8049e4:	f800283a 	ret
  8049e8:	08047341 	jmpi	804734 <__sflush_r>
  8049ec:	defffd04 	addi	sp,sp,-12
  8049f0:	d9400115 	stw	r5,4(sp)
  8049f4:	d9000015 	stw	r4,0(sp)
  8049f8:	dfc00215 	stw	ra,8(sp)
  8049fc:	0804d940 	call	804d94 <__sinit>
  804a00:	d9400117 	ldw	r5,4(sp)
  804a04:	d9000017 	ldw	r4,0(sp)
  804a08:	2880030f 	ldh	r2,12(r5)
  804a0c:	10000826 	beq	r2,zero,804a30 <fflush+0x74>
  804a10:	dfc00217 	ldw	ra,8(sp)
  804a14:	dec00304 	addi	sp,sp,12
  804a18:	08047341 	jmpi	804734 <__sflush_r>
  804a1c:	00802074 	movhi	r2,129
  804a20:	11086417 	ldw	r4,8592(r2)
  804a24:	01402034 	movhi	r5,128
  804a28:	29525704 	addi	r5,r5,18780
  804a2c:	08057441 	jmpi	805744 <_fwalk_reent>
  804a30:	0005883a 	mov	r2,zero
  804a34:	dfc00217 	ldw	ra,8(sp)
  804a38:	dec00304 	addi	sp,sp,12
  804a3c:	f800283a 	ret

00804a40 <__fp_lock>:
  804a40:	0005883a 	mov	r2,zero
  804a44:	f800283a 	ret

00804a48 <_cleanup_r>:
  804a48:	01402074 	movhi	r5,129
  804a4c:	29659004 	addi	r5,r5,-27072
  804a50:	08057441 	jmpi	805744 <_fwalk_reent>

00804a54 <__fp_unlock>:
  804a54:	0005883a 	mov	r2,zero
  804a58:	f800283a 	ret

00804a5c <__sinit.part.0>:
  804a5c:	00c02034 	movhi	r3,128
  804a60:	20800117 	ldw	r2,4(r4)
  804a64:	18d29204 	addi	r3,r3,19016
  804a68:	20c00f15 	stw	r3,60(r4)
  804a6c:	2140bb04 	addi	r5,r4,748
  804a70:	00c000c4 	movi	r3,3
  804a74:	20c0b915 	stw	r3,740(r4)
  804a78:	2140ba15 	stw	r5,744(r4)
  804a7c:	2000b815 	stw	zero,736(r4)
  804a80:	10001705 	stb	zero,92(r2)
  804a84:	10001745 	stb	zero,93(r2)
  804a88:	10001785 	stb	zero,94(r2)
  804a8c:	100017c5 	stb	zero,95(r2)
  804a90:	10001805 	stb	zero,96(r2)
  804a94:	10001845 	stb	zero,97(r2)
  804a98:	10001885 	stb	zero,98(r2)
  804a9c:	100018c5 	stb	zero,99(r2)
  804aa0:	00c00104 	movi	r3,4
  804aa4:	10c00315 	stw	r3,12(r2)
  804aa8:	02002034 	movhi	r8,128
  804aac:	20c00217 	ldw	r3,8(r4)
  804ab0:	01c02034 	movhi	r7,128
  804ab4:	01802034 	movhi	r6,128
  804ab8:	01402034 	movhi	r5,128
  804abc:	421f4f04 	addi	r8,r8,32060
  804ac0:	39df6604 	addi	r7,r7,32152
  804ac4:	319f8604 	addi	r6,r6,32280
  804ac8:	295f9d04 	addi	r5,r5,32372
  804acc:	02400074 	movhi	r9,1
  804ad0:	10001915 	stw	zero,100(r2)
  804ad4:	10000015 	stw	zero,0(r2)
  804ad8:	10000115 	stw	zero,4(r2)
  804adc:	10000215 	stw	zero,8(r2)
  804ae0:	10000415 	stw	zero,16(r2)
  804ae4:	10000515 	stw	zero,20(r2)
  804ae8:	10000615 	stw	zero,24(r2)
  804aec:	10800715 	stw	r2,28(r2)
  804af0:	12000815 	stw	r8,32(r2)
  804af4:	11c00915 	stw	r7,36(r2)
  804af8:	11800a15 	stw	r6,40(r2)
  804afc:	11400b15 	stw	r5,44(r2)
  804b00:	4a400284 	addi	r9,r9,10
  804b04:	1a400315 	stw	r9,12(r3)
  804b08:	18001915 	stw	zero,100(r3)
  804b0c:	18000015 	stw	zero,0(r3)
  804b10:	18000115 	stw	zero,4(r3)
  804b14:	18000215 	stw	zero,8(r3)
  804b18:	18000415 	stw	zero,16(r3)
  804b1c:	18001705 	stb	zero,92(r3)
  804b20:	18001745 	stb	zero,93(r3)
  804b24:	18001785 	stb	zero,94(r3)
  804b28:	180017c5 	stb	zero,95(r3)
  804b2c:	18001805 	stb	zero,96(r3)
  804b30:	18001845 	stb	zero,97(r3)
  804b34:	18001885 	stb	zero,98(r3)
  804b38:	180018c5 	stb	zero,99(r3)
  804b3c:	20800317 	ldw	r2,12(r4)
  804b40:	024000b4 	movhi	r9,2
  804b44:	18000515 	stw	zero,20(r3)
  804b48:	18000615 	stw	zero,24(r3)
  804b4c:	18c00715 	stw	r3,28(r3)
  804b50:	1a000815 	stw	r8,32(r3)
  804b54:	19c00915 	stw	r7,36(r3)
  804b58:	19800a15 	stw	r6,40(r3)
  804b5c:	19400b15 	stw	r5,44(r3)
  804b60:	4a400484 	addi	r9,r9,18
  804b64:	10001915 	stw	zero,100(r2)
  804b68:	10000015 	stw	zero,0(r2)
  804b6c:	10000115 	stw	zero,4(r2)
  804b70:	10000215 	stw	zero,8(r2)
  804b74:	12400315 	stw	r9,12(r2)
  804b78:	10000415 	stw	zero,16(r2)
  804b7c:	10000515 	stw	zero,20(r2)
  804b80:	10000615 	stw	zero,24(r2)
  804b84:	10001705 	stb	zero,92(r2)
  804b88:	10001745 	stb	zero,93(r2)
  804b8c:	10001785 	stb	zero,94(r2)
  804b90:	100017c5 	stb	zero,95(r2)
  804b94:	10001805 	stb	zero,96(r2)
  804b98:	10001845 	stb	zero,97(r2)
  804b9c:	10001885 	stb	zero,98(r2)
  804ba0:	100018c5 	stb	zero,99(r2)
  804ba4:	10800715 	stw	r2,28(r2)
  804ba8:	12000815 	stw	r8,32(r2)
  804bac:	11c00915 	stw	r7,36(r2)
  804bb0:	11800a15 	stw	r6,40(r2)
  804bb4:	11400b15 	stw	r5,44(r2)
  804bb8:	00800044 	movi	r2,1
  804bbc:	20800e15 	stw	r2,56(r4)
  804bc0:	f800283a 	ret

00804bc4 <__sfmoreglue>:
  804bc4:	defffc04 	addi	sp,sp,-16
  804bc8:	dc400115 	stw	r17,4(sp)
  804bcc:	2c7fffc4 	addi	r17,r5,-1
  804bd0:	8c401a24 	muli	r17,r17,104
  804bd4:	dc800215 	stw	r18,8(sp)
  804bd8:	2825883a 	mov	r18,r5
  804bdc:	89401d04 	addi	r5,r17,116
  804be0:	dc000015 	stw	r16,0(sp)
  804be4:	dfc00315 	stw	ra,12(sp)
  804be8:	0805a540 	call	805a54 <_malloc_r>
  804bec:	1021883a 	mov	r16,r2
  804bf0:	10000726 	beq	r2,zero,804c10 <__sfmoreglue+0x4c>
  804bf4:	11000304 	addi	r4,r2,12
  804bf8:	10000015 	stw	zero,0(r2)
  804bfc:	14800115 	stw	r18,4(r2)
  804c00:	11000215 	stw	r4,8(r2)
  804c04:	89801a04 	addi	r6,r17,104
  804c08:	000b883a 	mov	r5,zero
  804c0c:	08065300 	call	806530 <memset>
  804c10:	8005883a 	mov	r2,r16
  804c14:	dfc00317 	ldw	ra,12(sp)
  804c18:	dc800217 	ldw	r18,8(sp)
  804c1c:	dc400117 	ldw	r17,4(sp)
  804c20:	dc000017 	ldw	r16,0(sp)
  804c24:	dec00404 	addi	sp,sp,16
  804c28:	f800283a 	ret

00804c2c <__sfp>:
  804c2c:	defffb04 	addi	sp,sp,-20
  804c30:	00802074 	movhi	r2,129
  804c34:	dc000015 	stw	r16,0(sp)
  804c38:	14086417 	ldw	r16,8592(r2)
  804c3c:	dc400115 	stw	r17,4(sp)
  804c40:	dfc00415 	stw	ra,16(sp)
  804c44:	80800e17 	ldw	r2,56(r16)
  804c48:	dcc00315 	stw	r19,12(sp)
  804c4c:	dc800215 	stw	r18,8(sp)
  804c50:	2023883a 	mov	r17,r4
  804c54:	10003126 	beq	r2,zero,804d1c <__sfp+0xf0>
  804c58:	8100ba17 	ldw	r4,744(r16)
  804c5c:	8140b917 	ldw	r5,740(r16)
  804c60:	04c00104 	movi	r19,4
  804c64:	8400b804 	addi	r16,r16,736
  804c68:	297fffc4 	addi	r5,r5,-1
  804c6c:	2800050e 	bge	r5,zero,804c84 <__sfp+0x58>
  804c70:	00002406 	br	804d04 <__sfp+0xd8>
  804c74:	297fffc4 	addi	r5,r5,-1
  804c78:	28bfffd8 	cmpnei	r2,r5,-1
  804c7c:	21001a04 	addi	r4,r4,104
  804c80:	10002026 	beq	r2,zero,804d04 <__sfp+0xd8>
  804c84:	2080030f 	ldh	r2,12(r4)
  804c88:	103ffa1e 	bne	r2,zero,804c74 <__sfp+0x48>
  804c8c:	00bffff4 	movhi	r2,65535
  804c90:	10800044 	addi	r2,r2,1
  804c94:	20001915 	stw	zero,100(r4)
  804c98:	20000015 	stw	zero,0(r4)
  804c9c:	20000115 	stw	zero,4(r4)
  804ca0:	20000215 	stw	zero,8(r4)
  804ca4:	20800315 	stw	r2,12(r4)
  804ca8:	20000415 	stw	zero,16(r4)
  804cac:	20000515 	stw	zero,20(r4)
  804cb0:	20000615 	stw	zero,24(r4)
  804cb4:	20001705 	stb	zero,92(r4)
  804cb8:	20001745 	stb	zero,93(r4)
  804cbc:	20001785 	stb	zero,94(r4)
  804cc0:	200017c5 	stb	zero,95(r4)
  804cc4:	20001805 	stb	zero,96(r4)
  804cc8:	20001845 	stb	zero,97(r4)
  804ccc:	20001885 	stb	zero,98(r4)
  804cd0:	200018c5 	stb	zero,99(r4)
  804cd4:	20000c15 	stw	zero,48(r4)
  804cd8:	20000d15 	stw	zero,52(r4)
  804cdc:	20001115 	stw	zero,68(r4)
  804ce0:	20001215 	stw	zero,72(r4)
  804ce4:	2005883a 	mov	r2,r4
  804ce8:	dfc00417 	ldw	ra,16(sp)
  804cec:	dcc00317 	ldw	r19,12(sp)
  804cf0:	dc800217 	ldw	r18,8(sp)
  804cf4:	dc400117 	ldw	r17,4(sp)
  804cf8:	dc000017 	ldw	r16,0(sp)
  804cfc:	dec00504 	addi	sp,sp,20
  804d00:	f800283a 	ret
  804d04:	80800017 	ldw	r2,0(r16)
  804d08:	10000726 	beq	r2,zero,804d28 <__sfp+0xfc>
  804d0c:	11000217 	ldw	r4,8(r2)
  804d10:	11400117 	ldw	r5,4(r2)
  804d14:	1021883a 	mov	r16,r2
  804d18:	003fd306 	br	804c68 <__sfp+0x3c>
  804d1c:	8009883a 	mov	r4,r16
  804d20:	0804a5c0 	call	804a5c <__sinit.part.0>
  804d24:	003fcc06 	br	804c58 <__sfp+0x2c>
  804d28:	01406b04 	movi	r5,428
  804d2c:	8809883a 	mov	r4,r17
  804d30:	0805a540 	call	805a54 <_malloc_r>
  804d34:	1025883a 	mov	r18,r2
  804d38:	10000c26 	beq	r2,zero,804d6c <__sfp+0x140>
  804d3c:	11000304 	addi	r4,r2,12
  804d40:	11000215 	stw	r4,8(r2)
  804d44:	000b883a 	mov	r5,zero
  804d48:	10000015 	stw	zero,0(r2)
  804d4c:	14c00115 	stw	r19,4(r2)
  804d50:	01806804 	movi	r6,416
  804d54:	08065300 	call	806530 <memset>
  804d58:	1009883a 	mov	r4,r2
  804d5c:	84800015 	stw	r18,0(r16)
  804d60:	014000c4 	movi	r5,3
  804d64:	9021883a 	mov	r16,r18
  804d68:	003fc606 	br	804c84 <__sfp+0x58>
  804d6c:	80000015 	stw	zero,0(r16)
  804d70:	00800304 	movi	r2,12
  804d74:	88800015 	stw	r2,0(r17)
  804d78:	0009883a 	mov	r4,zero
  804d7c:	003fd906 	br	804ce4 <__sfp+0xb8>

00804d80 <_cleanup>:
  804d80:	00802074 	movhi	r2,129
  804d84:	11086417 	ldw	r4,8592(r2)
  804d88:	01402074 	movhi	r5,129
  804d8c:	29659004 	addi	r5,r5,-27072
  804d90:	08057441 	jmpi	805744 <_fwalk_reent>

00804d94 <__sinit>:
  804d94:	20800e17 	ldw	r2,56(r4)
  804d98:	10000126 	beq	r2,zero,804da0 <__sinit+0xc>
  804d9c:	f800283a 	ret
  804da0:	0804a5c1 	jmpi	804a5c <__sinit.part.0>

00804da4 <__sfp_lock_acquire>:
  804da4:	f800283a 	ret

00804da8 <__sfp_lock_release>:
  804da8:	f800283a 	ret

00804dac <__sinit_lock_acquire>:
  804dac:	f800283a 	ret

00804db0 <__sinit_lock_release>:
  804db0:	f800283a 	ret

00804db4 <__fp_lock_all>:
  804db4:	00802074 	movhi	r2,129
  804db8:	11086517 	ldw	r4,8596(r2)
  804dbc:	01402034 	movhi	r5,128
  804dc0:	29529004 	addi	r5,r5,19008
  804dc4:	08056ac1 	jmpi	8056ac <_fwalk>

00804dc8 <__fp_unlock_all>:
  804dc8:	00802074 	movhi	r2,129
  804dcc:	11086517 	ldw	r4,8596(r2)
  804dd0:	01402034 	movhi	r5,128
  804dd4:	29529504 	addi	r5,r5,19028
  804dd8:	08056ac1 	jmpi	8056ac <_fwalk>

00804ddc <_malloc_trim_r>:
  804ddc:	defffb04 	addi	sp,sp,-20
  804de0:	dcc00315 	stw	r19,12(sp)
  804de4:	04c02074 	movhi	r19,129
  804de8:	dc800215 	stw	r18,8(sp)
  804dec:	dc400115 	stw	r17,4(sp)
  804df0:	dc000015 	stw	r16,0(sp)
  804df4:	dfc00415 	stw	ra,16(sp)
  804df8:	2821883a 	mov	r16,r5
  804dfc:	9cc28504 	addi	r19,r19,2580
  804e00:	2025883a 	mov	r18,r4
  804e04:	080dd840 	call	80dd84 <__malloc_lock>
  804e08:	98800217 	ldw	r2,8(r19)
  804e0c:	14400117 	ldw	r17,4(r2)
  804e10:	00bfff04 	movi	r2,-4
  804e14:	88a2703a 	and	r17,r17,r2
  804e18:	8c21c83a 	sub	r16,r17,r16
  804e1c:	8403fbc4 	addi	r16,r16,4079
  804e20:	8020d33a 	srli	r16,r16,12
  804e24:	843fffc4 	addi	r16,r16,-1
  804e28:	8020933a 	slli	r16,r16,12
  804e2c:	80840008 	cmpgei	r2,r16,4096
  804e30:	10000626 	beq	r2,zero,804e4c <_malloc_trim_r+0x70>
  804e34:	000b883a 	mov	r5,zero
  804e38:	9009883a 	mov	r4,r18
  804e3c:	0807ce40 	call	807ce4 <_sbrk_r>
  804e40:	98c00217 	ldw	r3,8(r19)
  804e44:	1c47883a 	add	r3,r3,r17
  804e48:	10c00a26 	beq	r2,r3,804e74 <_malloc_trim_r+0x98>
  804e4c:	9009883a 	mov	r4,r18
  804e50:	080dda80 	call	80dda8 <__malloc_unlock>
  804e54:	0005883a 	mov	r2,zero
  804e58:	dfc00417 	ldw	ra,16(sp)
  804e5c:	dcc00317 	ldw	r19,12(sp)
  804e60:	dc800217 	ldw	r18,8(sp)
  804e64:	dc400117 	ldw	r17,4(sp)
  804e68:	dc000017 	ldw	r16,0(sp)
  804e6c:	dec00504 	addi	sp,sp,20
  804e70:	f800283a 	ret
  804e74:	040bc83a 	sub	r5,zero,r16
  804e78:	9009883a 	mov	r4,r18
  804e7c:	0807ce40 	call	807ce4 <_sbrk_r>
  804e80:	10bfffd8 	cmpnei	r2,r2,-1
  804e84:	10000d26 	beq	r2,zero,804ebc <_malloc_trim_r+0xe0>
  804e88:	00802074 	movhi	r2,129
  804e8c:	108f7417 	ldw	r2,15824(r2)
  804e90:	98c00217 	ldw	r3,8(r19)
  804e94:	8c23c83a 	sub	r17,r17,r16
  804e98:	8c400054 	ori	r17,r17,1
  804e9c:	1421c83a 	sub	r16,r2,r16
  804ea0:	1c400115 	stw	r17,4(r3)
  804ea4:	00802074 	movhi	r2,129
  804ea8:	9009883a 	mov	r4,r18
  804eac:	140f7415 	stw	r16,15824(r2)
  804eb0:	080dda80 	call	80dda8 <__malloc_unlock>
  804eb4:	00800044 	movi	r2,1
  804eb8:	003fe706 	br	804e58 <_malloc_trim_r+0x7c>
  804ebc:	000b883a 	mov	r5,zero
  804ec0:	9009883a 	mov	r4,r18
  804ec4:	0807ce40 	call	807ce4 <_sbrk_r>
  804ec8:	99000217 	ldw	r4,8(r19)
  804ecc:	1107c83a 	sub	r3,r2,r4
  804ed0:	19400410 	cmplti	r5,r3,16
  804ed4:	283fdd1e 	bne	r5,zero,804e4c <_malloc_trim_r+0x70>
  804ed8:	01402074 	movhi	r5,129
  804edc:	29486617 	ldw	r5,8600(r5)
  804ee0:	18c00054 	ori	r3,r3,1
  804ee4:	20c00115 	stw	r3,4(r4)
  804ee8:	1145c83a 	sub	r2,r2,r5
  804eec:	01402074 	movhi	r5,129
  804ef0:	288f7415 	stw	r2,15824(r5)
  804ef4:	003fd506 	br	804e4c <_malloc_trim_r+0x70>

00804ef8 <_free_r>:
  804ef8:	28004f26 	beq	r5,zero,805038 <_free_r+0x140>
  804efc:	defffd04 	addi	sp,sp,-12
  804f00:	dc400115 	stw	r17,4(sp)
  804f04:	dc000015 	stw	r16,0(sp)
  804f08:	2023883a 	mov	r17,r4
  804f0c:	2821883a 	mov	r16,r5
  804f10:	dfc00215 	stw	ra,8(sp)
  804f14:	080dd840 	call	80dd84 <__malloc_lock>
  804f18:	81ffff17 	ldw	r7,-4(r16)
  804f1c:	00bfff84 	movi	r2,-2
  804f20:	80fffe04 	addi	r3,r16,-8
  804f24:	3884703a 	and	r2,r7,r2
  804f28:	01002074 	movhi	r4,129
  804f2c:	188d883a 	add	r6,r3,r2
  804f30:	21028504 	addi	r4,r4,2580
  804f34:	31400117 	ldw	r5,4(r6)
  804f38:	22000217 	ldw	r8,8(r4)
  804f3c:	027fff04 	movi	r9,-4
  804f40:	2a4a703a 	and	r5,r5,r9
  804f44:	41806426 	beq	r8,r6,8050d8 <_free_r+0x1e0>
  804f48:	31400115 	stw	r5,4(r6)
  804f4c:	39c0004c 	andi	r7,r7,1
  804f50:	3151883a 	add	r8,r6,r5
  804f54:	3800281e 	bne	r7,zero,804ff8 <_free_r+0x100>
  804f58:	82bffe17 	ldw	r10,-8(r16)
  804f5c:	42000117 	ldw	r8,4(r8)
  804f60:	01c02074 	movhi	r7,129
  804f64:	1a87c83a 	sub	r3,r3,r10
  804f68:	1a400217 	ldw	r9,8(r3)
  804f6c:	39c28704 	addi	r7,r7,2588
  804f70:	1285883a 	add	r2,r2,r10
  804f74:	4200004c 	andi	r8,r8,1
  804f78:	49c04c26 	beq	r9,r7,8050ac <_free_r+0x1b4>
  804f7c:	1a800317 	ldw	r10,12(r3)
  804f80:	4a800315 	stw	r10,12(r9)
  804f84:	52400215 	stw	r9,8(r10)
  804f88:	40007126 	beq	r8,zero,805150 <_free_r+0x258>
  804f8c:	11400054 	ori	r5,r2,1
  804f90:	19400115 	stw	r5,4(r3)
  804f94:	30800015 	stw	r2,0(r6)
  804f98:	11408028 	cmpgeui	r5,r2,512
  804f9c:	28002c1e 	bne	r5,zero,805050 <_free_r+0x158>
  804fa0:	100ad0fa 	srli	r5,r2,3
  804fa4:	100cd17a 	srli	r6,r2,5
  804fa8:	00800044 	movi	r2,1
  804fac:	29400044 	addi	r5,r5,1
  804fb0:	280a90fa 	slli	r5,r5,3
  804fb4:	21c00117 	ldw	r7,4(r4)
  804fb8:	1184983a 	sll	r2,r2,r6
  804fbc:	214b883a 	add	r5,r4,r5
  804fc0:	29800017 	ldw	r6,0(r5)
  804fc4:	11c4b03a 	or	r2,r2,r7
  804fc8:	29fffe04 	addi	r7,r5,-8
  804fcc:	19c00315 	stw	r7,12(r3)
  804fd0:	19800215 	stw	r6,8(r3)
  804fd4:	20800115 	stw	r2,4(r4)
  804fd8:	28c00015 	stw	r3,0(r5)
  804fdc:	30c00315 	stw	r3,12(r6)
  804fe0:	8809883a 	mov	r4,r17
  804fe4:	dfc00217 	ldw	ra,8(sp)
  804fe8:	dc400117 	ldw	r17,4(sp)
  804fec:	dc000017 	ldw	r16,0(sp)
  804ff0:	dec00304 	addi	sp,sp,12
  804ff4:	080dda81 	jmpi	80dda8 <__malloc_unlock>
  804ff8:	41c00117 	ldw	r7,4(r8)
  804ffc:	39c0004c 	andi	r7,r7,1
  805000:	38000e1e 	bne	r7,zero,80503c <_free_r+0x144>
  805004:	01c02074 	movhi	r7,129
  805008:	1145883a 	add	r2,r2,r5
  80500c:	39c28704 	addi	r7,r7,2588
  805010:	31400217 	ldw	r5,8(r6)
  805014:	12400054 	ori	r9,r2,1
  805018:	1891883a 	add	r8,r3,r2
  80501c:	29c05226 	beq	r5,r7,805168 <_free_r+0x270>
  805020:	31800317 	ldw	r6,12(r6)
  805024:	29800315 	stw	r6,12(r5)
  805028:	31400215 	stw	r5,8(r6)
  80502c:	1a400115 	stw	r9,4(r3)
  805030:	40800015 	stw	r2,0(r8)
  805034:	003fd806 	br	804f98 <_free_r+0xa0>
  805038:	f800283a 	ret
  80503c:	11400054 	ori	r5,r2,1
  805040:	817fff15 	stw	r5,-4(r16)
  805044:	30800015 	stw	r2,0(r6)
  805048:	11408028 	cmpgeui	r5,r2,512
  80504c:	283fd426 	beq	r5,zero,804fa0 <_free_r+0xa8>
  805050:	100ad27a 	srli	r5,r2,9
  805054:	29800168 	cmpgeui	r6,r5,5
  805058:	3000341e 	bne	r6,zero,80512c <_free_r+0x234>
  80505c:	100ad1ba 	srli	r5,r2,6
  805060:	29800e44 	addi	r6,r5,57
  805064:	300c90fa 	slli	r6,r6,3
  805068:	29c00e04 	addi	r7,r5,56
  80506c:	218d883a 	add	r6,r4,r6
  805070:	31400017 	ldw	r5,0(r6)
  805074:	31bffe04 	addi	r6,r6,-8
  805078:	31404226 	beq	r6,r5,805184 <_free_r+0x28c>
  80507c:	01ffff04 	movi	r7,-4
  805080:	29000117 	ldw	r4,4(r5)
  805084:	21c8703a 	and	r4,r4,r7
  805088:	1100022e 	bgeu	r2,r4,805094 <_free_r+0x19c>
  80508c:	29400217 	ldw	r5,8(r5)
  805090:	317ffb1e 	bne	r6,r5,805080 <_free_r+0x188>
  805094:	29800317 	ldw	r6,12(r5)
  805098:	19800315 	stw	r6,12(r3)
  80509c:	19400215 	stw	r5,8(r3)
  8050a0:	30c00215 	stw	r3,8(r6)
  8050a4:	28c00315 	stw	r3,12(r5)
  8050a8:	003fcd06 	br	804fe0 <_free_r+0xe8>
  8050ac:	40004d1e 	bne	r8,zero,8051e4 <_free_r+0x2ec>
  8050b0:	31000317 	ldw	r4,12(r6)
  8050b4:	31800217 	ldw	r6,8(r6)
  8050b8:	2885883a 	add	r2,r5,r2
  8050bc:	11400054 	ori	r5,r2,1
  8050c0:	31000315 	stw	r4,12(r6)
  8050c4:	21800215 	stw	r6,8(r4)
  8050c8:	19400115 	stw	r5,4(r3)
  8050cc:	1887883a 	add	r3,r3,r2
  8050d0:	18800015 	stw	r2,0(r3)
  8050d4:	003fc206 	br	804fe0 <_free_r+0xe8>
  8050d8:	39c0004c 	andi	r7,r7,1
  8050dc:	1145883a 	add	r2,r2,r5
  8050e0:	3800071e 	bne	r7,zero,805100 <_free_r+0x208>
  8050e4:	81fffe17 	ldw	r7,-8(r16)
  8050e8:	19c7c83a 	sub	r3,r3,r7
  8050ec:	19400317 	ldw	r5,12(r3)
  8050f0:	19800217 	ldw	r6,8(r3)
  8050f4:	11c5883a 	add	r2,r2,r7
  8050f8:	31400315 	stw	r5,12(r6)
  8050fc:	29800215 	stw	r6,8(r5)
  805100:	01402074 	movhi	r5,129
  805104:	11800054 	ori	r6,r2,1
  805108:	29486717 	ldw	r5,8604(r5)
  80510c:	19800115 	stw	r6,4(r3)
  805110:	20c00215 	stw	r3,8(r4)
  805114:	117fb236 	bltu	r2,r5,804fe0 <_free_r+0xe8>
  805118:	00802074 	movhi	r2,129
  80511c:	114f6a17 	ldw	r5,15784(r2)
  805120:	8809883a 	mov	r4,r17
  805124:	0804ddc0 	call	804ddc <_malloc_trim_r>
  805128:	003fad06 	br	804fe0 <_free_r+0xe8>
  80512c:	29800568 	cmpgeui	r6,r5,21
  805130:	30000926 	beq	r6,zero,805158 <_free_r+0x260>
  805134:	29801568 	cmpgeui	r6,r5,85
  805138:	3000191e 	bne	r6,zero,8051a0 <_free_r+0x2a8>
  80513c:	100ad33a 	srli	r5,r2,12
  805140:	29801bc4 	addi	r6,r5,111
  805144:	300c90fa 	slli	r6,r6,3
  805148:	29c01b84 	addi	r7,r5,110
  80514c:	003fc706 	br	80506c <_free_r+0x174>
  805150:	1145883a 	add	r2,r2,r5
  805154:	003fae06 	br	805010 <_free_r+0x118>
  805158:	29801704 	addi	r6,r5,92
  80515c:	300c90fa 	slli	r6,r6,3
  805160:	29c016c4 	addi	r7,r5,91
  805164:	003fc106 	br	80506c <_free_r+0x174>
  805168:	20c00515 	stw	r3,20(r4)
  80516c:	20c00415 	stw	r3,16(r4)
  805170:	19c00315 	stw	r7,12(r3)
  805174:	19c00215 	stw	r7,8(r3)
  805178:	1a400115 	stw	r9,4(r3)
  80517c:	40800015 	stw	r2,0(r8)
  805180:	003f9706 	br	804fe0 <_free_r+0xe8>
  805184:	380fd0ba 	srai	r7,r7,2
  805188:	00800044 	movi	r2,1
  80518c:	22000117 	ldw	r8,4(r4)
  805190:	11ce983a 	sll	r7,r2,r7
  805194:	3a0eb03a 	or	r7,r7,r8
  805198:	21c00115 	stw	r7,4(r4)
  80519c:	003fbe06 	br	805098 <_free_r+0x1a0>
  8051a0:	29805568 	cmpgeui	r6,r5,341
  8051a4:	3000051e 	bne	r6,zero,8051bc <_free_r+0x2c4>
  8051a8:	100ad3fa 	srli	r5,r2,15
  8051ac:	29801e04 	addi	r6,r5,120
  8051b0:	300c90fa 	slli	r6,r6,3
  8051b4:	29c01dc4 	addi	r7,r5,119
  8051b8:	003fac06 	br	80506c <_free_r+0x174>
  8051bc:	29415568 	cmpgeui	r5,r5,1365
  8051c0:	2800051e 	bne	r5,zero,8051d8 <_free_r+0x2e0>
  8051c4:	100ad4ba 	srli	r5,r2,18
  8051c8:	29801f44 	addi	r6,r5,125
  8051cc:	300c90fa 	slli	r6,r6,3
  8051d0:	29c01f04 	addi	r7,r5,124
  8051d4:	003fa506 	br	80506c <_free_r+0x174>
  8051d8:	0180fe04 	movi	r6,1016
  8051dc:	01c01f84 	movi	r7,126
  8051e0:	003fa206 	br	80506c <_free_r+0x174>
  8051e4:	11000054 	ori	r4,r2,1
  8051e8:	19000115 	stw	r4,4(r3)
  8051ec:	30800015 	stw	r2,0(r6)
  8051f0:	003f7b06 	br	804fe0 <_free_r+0xe8>

008051f4 <__sfvwrite_r>:
  8051f4:	30800217 	ldw	r2,8(r6)
  8051f8:	1000a226 	beq	r2,zero,805484 <__sfvwrite_r+0x290>
  8051fc:	29c0030b 	ldhu	r7,12(r5)
  805200:	defff404 	addi	sp,sp,-48
  805204:	ddc00915 	stw	r23,36(sp)
  805208:	dd400715 	stw	r21,28(sp)
  80520c:	dc000215 	stw	r16,8(sp)
  805210:	dfc00b15 	stw	ra,44(sp)
  805214:	df000a15 	stw	fp,40(sp)
  805218:	dd800815 	stw	r22,32(sp)
  80521c:	dd000615 	stw	r20,24(sp)
  805220:	dcc00515 	stw	r19,20(sp)
  805224:	dc800415 	stw	r18,16(sp)
  805228:	dc400315 	stw	r17,12(sp)
  80522c:	3880020c 	andi	r2,r7,8
  805230:	302f883a 	mov	r23,r6
  805234:	202b883a 	mov	r21,r4
  805238:	2821883a 	mov	r16,r5
  80523c:	10002226 	beq	r2,zero,8052c8 <__sfvwrite_r+0xd4>
  805240:	28800417 	ldw	r2,16(r5)
  805244:	10002026 	beq	r2,zero,8052c8 <__sfvwrite_r+0xd4>
  805248:	3880008c 	andi	r2,r7,2
  80524c:	bc400017 	ldw	r17,0(r23)
  805250:	10002526 	beq	r2,zero,8052e8 <__sfvwrite_r+0xf4>
  805254:	80800917 	ldw	r2,36(r16)
  805258:	81400717 	ldw	r5,28(r16)
  80525c:	05200034 	movhi	r20,32768
  805260:	0027883a 	mov	r19,zero
  805264:	0025883a 	mov	r18,zero
  805268:	a53f0004 	addi	r20,r20,-1024
  80526c:	980d883a 	mov	r6,r19
  805270:	a809883a 	mov	r4,r21
  805274:	90001026 	beq	r18,zero,8052b8 <__sfvwrite_r+0xc4>
  805278:	900f883a 	mov	r7,r18
  80527c:	a480012e 	bgeu	r20,r18,805284 <__sfvwrite_r+0x90>
  805280:	a00f883a 	mov	r7,r20
  805284:	103ee83a 	callr	r2
  805288:	0080790e 	bge	zero,r2,805470 <__sfvwrite_r+0x27c>
  80528c:	b9000217 	ldw	r4,8(r23)
  805290:	98a7883a 	add	r19,r19,r2
  805294:	90a5c83a 	sub	r18,r18,r2
  805298:	2085c83a 	sub	r2,r4,r2
  80529c:	b8800215 	stw	r2,8(r23)
  8052a0:	10006226 	beq	r2,zero,80542c <__sfvwrite_r+0x238>
  8052a4:	80800917 	ldw	r2,36(r16)
  8052a8:	81400717 	ldw	r5,28(r16)
  8052ac:	980d883a 	mov	r6,r19
  8052b0:	a809883a 	mov	r4,r21
  8052b4:	903ff01e 	bne	r18,zero,805278 <__sfvwrite_r+0x84>
  8052b8:	8cc00017 	ldw	r19,0(r17)
  8052bc:	8c800117 	ldw	r18,4(r17)
  8052c0:	8c400204 	addi	r17,r17,8
  8052c4:	003fe906 	br	80526c <__sfvwrite_r+0x78>
  8052c8:	800b883a 	mov	r5,r16
  8052cc:	a809883a 	mov	r4,r21
  8052d0:	0802c8c0 	call	802c8c <__swsetup_r>
  8052d4:	1000f31e 	bne	r2,zero,8056a4 <__sfvwrite_r+0x4b0>
  8052d8:	81c0030b 	ldhu	r7,12(r16)
  8052dc:	bc400017 	ldw	r17,0(r23)
  8052e0:	3880008c 	andi	r2,r7,2
  8052e4:	103fdb1e 	bne	r2,zero,805254 <__sfvwrite_r+0x60>
  8052e8:	3880004c 	andi	r2,r7,1
  8052ec:	84800217 	ldw	r18,8(r16)
  8052f0:	82000017 	ldw	r8,0(r16)
  8052f4:	1000651e 	bne	r2,zero,80548c <__sfvwrite_r+0x298>
  8052f8:	00a00034 	movhi	r2,32768
  8052fc:	10bfff84 	addi	r2,r2,-2
  805300:	00e00034 	movhi	r3,32768
  805304:	d8800015 	stw	r2,0(sp)
  805308:	18bfffc4 	addi	r2,r3,-1
  80530c:	0039883a 	mov	fp,zero
  805310:	0027883a 	mov	r19,zero
  805314:	d8800115 	stw	r2,4(sp)
  805318:	98004026 	beq	r19,zero,80541c <__sfvwrite_r+0x228>
  80531c:	3880800c 	andi	r2,r7,512
  805320:	10009626 	beq	r2,zero,80557c <__sfvwrite_r+0x388>
  805324:	902d883a 	mov	r22,r18
  805328:	9c80ba36 	bltu	r19,r18,805614 <__sfvwrite_r+0x420>
  80532c:	3881200c 	andi	r2,r7,1152
  805330:	10002526 	beq	r2,zero,8053c8 <__sfvwrite_r+0x1d4>
  805334:	81000517 	ldw	r4,20(r16)
  805338:	81400417 	ldw	r5,16(r16)
  80533c:	98800044 	addi	r2,r19,1
  805340:	210000e4 	muli	r4,r4,3
  805344:	4165c83a 	sub	r18,r8,r5
  805348:	1485883a 	add	r2,r2,r18
  80534c:	2028d7fa 	srli	r20,r4,31
  805350:	a109883a 	add	r4,r20,r4
  805354:	2029d07a 	srai	r20,r4,1
  805358:	a00d883a 	mov	r6,r20
  80535c:	a080022e 	bgeu	r20,r2,805368 <__sfvwrite_r+0x174>
  805360:	1029883a 	mov	r20,r2
  805364:	100d883a 	mov	r6,r2
  805368:	39c1000c 	andi	r7,r7,1024
  80536c:	3800bd26 	beq	r7,zero,805664 <__sfvwrite_r+0x470>
  805370:	a809883a 	mov	r4,r21
  805374:	300b883a 	mov	r5,r6
  805378:	0805a540 	call	805a54 <_malloc_r>
  80537c:	1009883a 	mov	r4,r2
  805380:	1000c426 	beq	r2,zero,805694 <__sfvwrite_r+0x4a0>
  805384:	81400417 	ldw	r5,16(r16)
  805388:	900d883a 	mov	r6,r18
  80538c:	08063040 	call	806304 <memcpy>
  805390:	1009883a 	mov	r4,r2
  805394:	8080030b 	ldhu	r2,12(r16)
  805398:	00fedfc4 	movi	r3,-1153
  80539c:	10c4703a 	and	r2,r2,r3
  8053a0:	10802014 	ori	r2,r2,128
  8053a4:	8080030d 	sth	r2,12(r16)
  8053a8:	2491883a 	add	r8,r4,r18
  8053ac:	a485c83a 	sub	r2,r20,r18
  8053b0:	81000415 	stw	r4,16(r16)
  8053b4:	82000015 	stw	r8,0(r16)
  8053b8:	85000515 	stw	r20,20(r16)
  8053bc:	9825883a 	mov	r18,r19
  8053c0:	80800215 	stw	r2,8(r16)
  8053c4:	982d883a 	mov	r22,r19
  8053c8:	4009883a 	mov	r4,r8
  8053cc:	b00d883a 	mov	r6,r22
  8053d0:	e00b883a 	mov	r5,fp
  8053d4:	08064040 	call	806404 <memmove>
  8053d8:	81000217 	ldw	r4,8(r16)
  8053dc:	80800017 	ldw	r2,0(r16)
  8053e0:	9829883a 	mov	r20,r19
  8053e4:	24a5c83a 	sub	r18,r4,r18
  8053e8:	1585883a 	add	r2,r2,r22
  8053ec:	84800215 	stw	r18,8(r16)
  8053f0:	80800015 	stw	r2,0(r16)
  8053f4:	0027883a 	mov	r19,zero
  8053f8:	b8800217 	ldw	r2,8(r23)
  8053fc:	e539883a 	add	fp,fp,r20
  805400:	1529c83a 	sub	r20,r2,r20
  805404:	bd000215 	stw	r20,8(r23)
  805408:	a0000826 	beq	r20,zero,80542c <__sfvwrite_r+0x238>
  80540c:	81c0030b 	ldhu	r7,12(r16)
  805410:	84800217 	ldw	r18,8(r16)
  805414:	82000017 	ldw	r8,0(r16)
  805418:	983fc01e 	bne	r19,zero,80531c <__sfvwrite_r+0x128>
  80541c:	8f000017 	ldw	fp,0(r17)
  805420:	8cc00117 	ldw	r19,4(r17)
  805424:	8c400204 	addi	r17,r17,8
  805428:	003fbb06 	br	805318 <__sfvwrite_r+0x124>
  80542c:	0005883a 	mov	r2,zero
  805430:	dfc00b17 	ldw	ra,44(sp)
  805434:	df000a17 	ldw	fp,40(sp)
  805438:	ddc00917 	ldw	r23,36(sp)
  80543c:	dd800817 	ldw	r22,32(sp)
  805440:	dd400717 	ldw	r21,28(sp)
  805444:	dd000617 	ldw	r20,24(sp)
  805448:	dcc00517 	ldw	r19,20(sp)
  80544c:	dc800417 	ldw	r18,16(sp)
  805450:	dc400317 	ldw	r17,12(sp)
  805454:	dc000217 	ldw	r16,8(sp)
  805458:	dec00c04 	addi	sp,sp,48
  80545c:	f800283a 	ret
  805460:	800b883a 	mov	r5,r16
  805464:	a809883a 	mov	r4,r21
  805468:	080495c0 	call	80495c <_fflush_r>
  80546c:	10002026 	beq	r2,zero,8054f0 <__sfvwrite_r+0x2fc>
  805470:	8080030b 	ldhu	r2,12(r16)
  805474:	10801014 	ori	r2,r2,64
  805478:	8080030d 	sth	r2,12(r16)
  80547c:	00bfffc4 	movi	r2,-1
  805480:	003feb06 	br	805430 <__sfvwrite_r+0x23c>
  805484:	0005883a 	mov	r2,zero
  805488:	f800283a 	ret
  80548c:	002d883a 	mov	r22,zero
  805490:	0027883a 	mov	r19,zero
  805494:	0005883a 	mov	r2,zero
  805498:	0039883a 	mov	fp,zero
  80549c:	b0001d26 	beq	r22,zero,805514 <__sfvwrite_r+0x320>
  8054a0:	10002026 	beq	r2,zero,805524 <__sfvwrite_r+0x330>
  8054a4:	9829883a 	mov	r20,r19
  8054a8:	b500012e 	bgeu	r22,r20,8054b0 <__sfvwrite_r+0x2bc>
  8054ac:	b029883a 	mov	r20,r22
  8054b0:	80800417 	ldw	r2,16(r16)
  8054b4:	81c00517 	ldw	r7,20(r16)
  8054b8:	1200022e 	bgeu	r2,r8,8054c4 <__sfvwrite_r+0x2d0>
  8054bc:	3ca5883a 	add	r18,r7,r18
  8054c0:	95002216 	blt	r18,r20,80554c <__sfvwrite_r+0x358>
  8054c4:	a1c05616 	blt	r20,r7,805620 <__sfvwrite_r+0x42c>
  8054c8:	80800917 	ldw	r2,36(r16)
  8054cc:	81400717 	ldw	r5,28(r16)
  8054d0:	e00d883a 	mov	r6,fp
  8054d4:	a809883a 	mov	r4,r21
  8054d8:	103ee83a 	callr	r2
  8054dc:	1025883a 	mov	r18,r2
  8054e0:	00bfe30e 	bge	zero,r2,805470 <__sfvwrite_r+0x27c>
  8054e4:	9ca7c83a 	sub	r19,r19,r18
  8054e8:	983fdd26 	beq	r19,zero,805460 <__sfvwrite_r+0x26c>
  8054ec:	00800044 	movi	r2,1
  8054f0:	b9800217 	ldw	r6,8(r23)
  8054f4:	e4b9883a 	add	fp,fp,r18
  8054f8:	b4adc83a 	sub	r22,r22,r18
  8054fc:	34a5c83a 	sub	r18,r6,r18
  805500:	bc800215 	stw	r18,8(r23)
  805504:	903fc926 	beq	r18,zero,80542c <__sfvwrite_r+0x238>
  805508:	84800217 	ldw	r18,8(r16)
  80550c:	82000017 	ldw	r8,0(r16)
  805510:	b03fe31e 	bne	r22,zero,8054a0 <__sfvwrite_r+0x2ac>
  805514:	8d800117 	ldw	r22,4(r17)
  805518:	8f000017 	ldw	fp,0(r17)
  80551c:	8c400204 	addi	r17,r17,8
  805520:	b03ffc26 	beq	r22,zero,805514 <__sfvwrite_r+0x320>
  805524:	b00d883a 	mov	r6,r22
  805528:	01400284 	movi	r5,10
  80552c:	e009883a 	mov	r4,fp
  805530:	da000015 	stw	r8,0(sp)
  805534:	08062340 	call	806234 <memchr>
  805538:	da000017 	ldw	r8,0(sp)
  80553c:	10004626 	beq	r2,zero,805658 <__sfvwrite_r+0x464>
  805540:	10800044 	addi	r2,r2,1
  805544:	1727c83a 	sub	r19,r2,fp
  805548:	003fd606 	br	8054a4 <__sfvwrite_r+0x2b0>
  80554c:	e00b883a 	mov	r5,fp
  805550:	4009883a 	mov	r4,r8
  805554:	900d883a 	mov	r6,r18
  805558:	08064040 	call	806404 <memmove>
  80555c:	80800017 	ldw	r2,0(r16)
  805560:	800b883a 	mov	r5,r16
  805564:	a809883a 	mov	r4,r21
  805568:	1485883a 	add	r2,r2,r18
  80556c:	80800015 	stw	r2,0(r16)
  805570:	080495c0 	call	80495c <_fflush_r>
  805574:	103fdb26 	beq	r2,zero,8054e4 <__sfvwrite_r+0x2f0>
  805578:	003fbd06 	br	805470 <__sfvwrite_r+0x27c>
  80557c:	80800417 	ldw	r2,16(r16)
  805580:	12001136 	bltu	r2,r8,8055c8 <__sfvwrite_r+0x3d4>
  805584:	85000517 	ldw	r20,20(r16)
  805588:	9d000f36 	bltu	r19,r20,8055c8 <__sfvwrite_r+0x3d4>
  80558c:	d8800017 	ldw	r2,0(sp)
  805590:	14c02f2e 	bgeu	r2,r19,805650 <__sfvwrite_r+0x45c>
  805594:	d9000117 	ldw	r4,4(sp)
  805598:	a00b883a 	mov	r5,r20
  80559c:	080afb40 	call	80afb4 <__divsi3>
  8055a0:	150f383a 	mul	r7,r2,r20
  8055a4:	82000917 	ldw	r8,36(r16)
  8055a8:	81400717 	ldw	r5,28(r16)
  8055ac:	e00d883a 	mov	r6,fp
  8055b0:	a809883a 	mov	r4,r21
  8055b4:	403ee83a 	callr	r8
  8055b8:	1029883a 	mov	r20,r2
  8055bc:	00bfac0e 	bge	zero,r2,805470 <__sfvwrite_r+0x27c>
  8055c0:	9d27c83a 	sub	r19,r19,r20
  8055c4:	003f8c06 	br	8053f8 <__sfvwrite_r+0x204>
  8055c8:	9029883a 	mov	r20,r18
  8055cc:	9c80012e 	bgeu	r19,r18,8055d4 <__sfvwrite_r+0x3e0>
  8055d0:	9829883a 	mov	r20,r19
  8055d4:	4009883a 	mov	r4,r8
  8055d8:	a00d883a 	mov	r6,r20
  8055dc:	e00b883a 	mov	r5,fp
  8055e0:	08064040 	call	806404 <memmove>
  8055e4:	80800217 	ldw	r2,8(r16)
  8055e8:	81000017 	ldw	r4,0(r16)
  8055ec:	1505c83a 	sub	r2,r2,r20
  8055f0:	2509883a 	add	r4,r4,r20
  8055f4:	80800215 	stw	r2,8(r16)
  8055f8:	81000015 	stw	r4,0(r16)
  8055fc:	103ff01e 	bne	r2,zero,8055c0 <__sfvwrite_r+0x3cc>
  805600:	800b883a 	mov	r5,r16
  805604:	a809883a 	mov	r4,r21
  805608:	080495c0 	call	80495c <_fflush_r>
  80560c:	103fec26 	beq	r2,zero,8055c0 <__sfvwrite_r+0x3cc>
  805610:	003f9706 	br	805470 <__sfvwrite_r+0x27c>
  805614:	9825883a 	mov	r18,r19
  805618:	982d883a 	mov	r22,r19
  80561c:	003f6a06 	br	8053c8 <__sfvwrite_r+0x1d4>
  805620:	4009883a 	mov	r4,r8
  805624:	a00d883a 	mov	r6,r20
  805628:	e00b883a 	mov	r5,fp
  80562c:	08064040 	call	806404 <memmove>
  805630:	81000217 	ldw	r4,8(r16)
  805634:	80800017 	ldw	r2,0(r16)
  805638:	a025883a 	mov	r18,r20
  80563c:	2509c83a 	sub	r4,r4,r20
  805640:	1505883a 	add	r2,r2,r20
  805644:	81000215 	stw	r4,8(r16)
  805648:	80800015 	stw	r2,0(r16)
  80564c:	003fa506 	br	8054e4 <__sfvwrite_r+0x2f0>
  805650:	9809883a 	mov	r4,r19
  805654:	003fd006 	br	805598 <__sfvwrite_r+0x3a4>
  805658:	b5000044 	addi	r20,r22,1
  80565c:	a027883a 	mov	r19,r20
  805660:	003f9106 	br	8054a8 <__sfvwrite_r+0x2b4>
  805664:	a809883a 	mov	r4,r21
  805668:	08077800 	call	807780 <_realloc_r>
  80566c:	1009883a 	mov	r4,r2
  805670:	103f4d1e 	bne	r2,zero,8053a8 <__sfvwrite_r+0x1b4>
  805674:	81400417 	ldw	r5,16(r16)
  805678:	a809883a 	mov	r4,r21
  80567c:	0804ef80 	call	804ef8 <_free_r>
  805680:	8080030b 	ldhu	r2,12(r16)
  805684:	00c00304 	movi	r3,12
  805688:	a8c00015 	stw	r3,0(r21)
  80568c:	10bfdfcc 	andi	r2,r2,65407
  805690:	003f7806 	br	805474 <__sfvwrite_r+0x280>
  805694:	00c00304 	movi	r3,12
  805698:	8080030b 	ldhu	r2,12(r16)
  80569c:	a8c00015 	stw	r3,0(r21)
  8056a0:	003f7406 	br	805474 <__sfvwrite_r+0x280>
  8056a4:	00bfffc4 	movi	r2,-1
  8056a8:	003f6106 	br	805430 <__sfvwrite_r+0x23c>

008056ac <_fwalk>:
  8056ac:	defffa04 	addi	sp,sp,-24
  8056b0:	dd000415 	stw	r20,16(sp)
  8056b4:	dcc00315 	stw	r19,12(sp)
  8056b8:	dc800215 	stw	r18,8(sp)
  8056bc:	dfc00515 	stw	ra,20(sp)
  8056c0:	dc400115 	stw	r17,4(sp)
  8056c4:	dc000015 	stw	r16,0(sp)
  8056c8:	2827883a 	mov	r19,r5
  8056cc:	2480b804 	addi	r18,r4,736
  8056d0:	0029883a 	mov	r20,zero
  8056d4:	94400117 	ldw	r17,4(r18)
  8056d8:	94000217 	ldw	r16,8(r18)
  8056dc:	8c7fffc4 	addi	r17,r17,-1
  8056e0:	88000d16 	blt	r17,zero,805718 <_fwalk+0x6c>
  8056e4:	8080030b 	ldhu	r2,12(r16)
  8056e8:	8c7fffc4 	addi	r17,r17,-1
  8056ec:	108000b0 	cmpltui	r2,r2,2
  8056f0:	1000061e 	bne	r2,zero,80570c <_fwalk+0x60>
  8056f4:	8080038f 	ldh	r2,14(r16)
  8056f8:	8009883a 	mov	r4,r16
  8056fc:	10bfffe0 	cmpeqi	r2,r2,-1
  805700:	1000021e 	bne	r2,zero,80570c <_fwalk+0x60>
  805704:	983ee83a 	callr	r19
  805708:	a0a8b03a 	or	r20,r20,r2
  80570c:	88bfffd8 	cmpnei	r2,r17,-1
  805710:	84001a04 	addi	r16,r16,104
  805714:	103ff31e 	bne	r2,zero,8056e4 <_fwalk+0x38>
  805718:	94800017 	ldw	r18,0(r18)
  80571c:	903fed1e 	bne	r18,zero,8056d4 <_fwalk+0x28>
  805720:	a005883a 	mov	r2,r20
  805724:	dfc00517 	ldw	ra,20(sp)
  805728:	dd000417 	ldw	r20,16(sp)
  80572c:	dcc00317 	ldw	r19,12(sp)
  805730:	dc800217 	ldw	r18,8(sp)
  805734:	dc400117 	ldw	r17,4(sp)
  805738:	dc000017 	ldw	r16,0(sp)
  80573c:	dec00604 	addi	sp,sp,24
  805740:	f800283a 	ret

00805744 <_fwalk_reent>:
  805744:	defff904 	addi	sp,sp,-28
  805748:	dd400515 	stw	r21,20(sp)
  80574c:	dd000415 	stw	r20,16(sp)
  805750:	dcc00315 	stw	r19,12(sp)
  805754:	dc800215 	stw	r18,8(sp)
  805758:	dfc00615 	stw	ra,24(sp)
  80575c:	dc400115 	stw	r17,4(sp)
  805760:	dc000015 	stw	r16,0(sp)
  805764:	202b883a 	mov	r21,r4
  805768:	2827883a 	mov	r19,r5
  80576c:	2480b804 	addi	r18,r4,736
  805770:	0029883a 	mov	r20,zero
  805774:	94400117 	ldw	r17,4(r18)
  805778:	94000217 	ldw	r16,8(r18)
  80577c:	8c7fffc4 	addi	r17,r17,-1
  805780:	88000e16 	blt	r17,zero,8057bc <_fwalk_reent+0x78>
  805784:	8080030b 	ldhu	r2,12(r16)
  805788:	8c7fffc4 	addi	r17,r17,-1
  80578c:	108000b0 	cmpltui	r2,r2,2
  805790:	1000071e 	bne	r2,zero,8057b0 <_fwalk_reent+0x6c>
  805794:	8080038f 	ldh	r2,14(r16)
  805798:	800b883a 	mov	r5,r16
  80579c:	a809883a 	mov	r4,r21
  8057a0:	10bfffe0 	cmpeqi	r2,r2,-1
  8057a4:	1000021e 	bne	r2,zero,8057b0 <_fwalk_reent+0x6c>
  8057a8:	983ee83a 	callr	r19
  8057ac:	a0a8b03a 	or	r20,r20,r2
  8057b0:	88bfffd8 	cmpnei	r2,r17,-1
  8057b4:	84001a04 	addi	r16,r16,104
  8057b8:	103ff21e 	bne	r2,zero,805784 <_fwalk_reent+0x40>
  8057bc:	94800017 	ldw	r18,0(r18)
  8057c0:	903fec1e 	bne	r18,zero,805774 <_fwalk_reent+0x30>
  8057c4:	a005883a 	mov	r2,r20
  8057c8:	dfc00617 	ldw	ra,24(sp)
  8057cc:	dd400517 	ldw	r21,20(sp)
  8057d0:	dd000417 	ldw	r20,16(sp)
  8057d4:	dcc00317 	ldw	r19,12(sp)
  8057d8:	dc800217 	ldw	r18,8(sp)
  8057dc:	dc400117 	ldw	r17,4(sp)
  8057e0:	dc000017 	ldw	r16,0(sp)
  8057e4:	dec00704 	addi	sp,sp,28
  8057e8:	f800283a 	ret

008057ec <__localeconv_l>:
  8057ec:	20803c04 	addi	r2,r4,240
  8057f0:	f800283a 	ret

008057f4 <_localeconv_r>:
  8057f4:	00802074 	movhi	r2,129
  8057f8:	1083c304 	addi	r2,r2,3852
  8057fc:	f800283a 	ret

00805800 <localeconv>:
  805800:	00802074 	movhi	r2,129
  805804:	1083c304 	addi	r2,r2,3852
  805808:	f800283a 	ret

0080580c <__smakebuf_r>:
  80580c:	2880030b 	ldhu	r2,12(r5)
  805810:	deffe804 	addi	sp,sp,-96
  805814:	dc001215 	stw	r16,72(sp)
  805818:	dfc01715 	stw	ra,92(sp)
  80581c:	dd001615 	stw	r20,88(sp)
  805820:	dcc01515 	stw	r19,84(sp)
  805824:	dc801415 	stw	r18,80(sp)
  805828:	dc401315 	stw	r17,76(sp)
  80582c:	10c0008c 	andi	r3,r2,2
  805830:	2821883a 	mov	r16,r5
  805834:	18000d26 	beq	r3,zero,80586c <__smakebuf_r+0x60>
  805838:	288010c4 	addi	r2,r5,67
  80583c:	28800015 	stw	r2,0(r5)
  805840:	28800415 	stw	r2,16(r5)
  805844:	00800044 	movi	r2,1
  805848:	28800515 	stw	r2,20(r5)
  80584c:	dfc01717 	ldw	ra,92(sp)
  805850:	dd001617 	ldw	r20,88(sp)
  805854:	dcc01517 	ldw	r19,84(sp)
  805858:	dc801417 	ldw	r18,80(sp)
  80585c:	dc401317 	ldw	r17,76(sp)
  805860:	dc001217 	ldw	r16,72(sp)
  805864:	dec01804 	addi	sp,sp,96
  805868:	f800283a 	ret
  80586c:	2940038f 	ldh	r5,14(r5)
  805870:	2023883a 	mov	r17,r4
  805874:	28002816 	blt	r5,zero,805918 <__smakebuf_r+0x10c>
  805878:	d80d883a 	mov	r6,sp
  80587c:	08099780 	call	809978 <_fstat_r>
  805880:	10002416 	blt	r2,zero,805914 <__smakebuf_r+0x108>
  805884:	d8800117 	ldw	r2,4(sp)
  805888:	10bc000c 	andi	r2,r2,61440
  80588c:	10880018 	cmpnei	r2,r2,8192
  805890:	1000461e 	bne	r2,zero,8059ac <__smakebuf_r+0x1a0>
  805894:	8140038f 	ldh	r5,14(r16)
  805898:	8809883a 	mov	r4,r17
  80589c:	08099d80 	call	8099d8 <_isatty_r>
  8058a0:	10003e26 	beq	r2,zero,80599c <__smakebuf_r+0x190>
  8058a4:	8080030b 	ldhu	r2,12(r16)
  8058a8:	80c010c4 	addi	r3,r16,67
  8058ac:	80c00015 	stw	r3,0(r16)
  8058b0:	10800054 	ori	r2,r2,1
  8058b4:	8080030d 	sth	r2,12(r16)
  8058b8:	00800044 	movi	r2,1
  8058bc:	80c00415 	stw	r3,16(r16)
  8058c0:	80800515 	stw	r2,20(r16)
  8058c4:	04c00044 	movi	r19,1
  8058c8:	05010004 	movi	r20,1024
  8058cc:	04820004 	movi	r18,2048
  8058d0:	a00b883a 	mov	r5,r20
  8058d4:	8809883a 	mov	r4,r17
  8058d8:	0805a540 	call	805a54 <_malloc_r>
  8058dc:	10001726 	beq	r2,zero,80593c <__smakebuf_r+0x130>
  8058e0:	80c0030b 	ldhu	r3,12(r16)
  8058e4:	01002034 	movhi	r4,128
  8058e8:	21129204 	addi	r4,r4,19016
  8058ec:	89000f15 	stw	r4,60(r17)
  8058f0:	18c02014 	ori	r3,r3,128
  8058f4:	80c0030d 	sth	r3,12(r16)
  8058f8:	80800015 	stw	r2,0(r16)
  8058fc:	80800415 	stw	r2,16(r16)
  805900:	85000515 	stw	r20,20(r16)
  805904:	98001d1e 	bne	r19,zero,80597c <__smakebuf_r+0x170>
  805908:	90c6b03a 	or	r3,r18,r3
  80590c:	80c0030d 	sth	r3,12(r16)
  805910:	003fce06 	br	80584c <__smakebuf_r+0x40>
  805914:	8080030b 	ldhu	r2,12(r16)
  805918:	1080200c 	andi	r2,r2,128
  80591c:	0027883a 	mov	r19,zero
  805920:	10001326 	beq	r2,zero,805970 <__smakebuf_r+0x164>
  805924:	05001004 	movi	r20,64
  805928:	a00b883a 	mov	r5,r20
  80592c:	8809883a 	mov	r4,r17
  805930:	0025883a 	mov	r18,zero
  805934:	0805a540 	call	805a54 <_malloc_r>
  805938:	103fe91e 	bne	r2,zero,8058e0 <__smakebuf_r+0xd4>
  80593c:	8080030b 	ldhu	r2,12(r16)
  805940:	10c0800c 	andi	r3,r2,512
  805944:	183fc11e 	bne	r3,zero,80584c <__smakebuf_r+0x40>
  805948:	00ffff04 	movi	r3,-4
  80594c:	10c4703a 	and	r2,r2,r3
  805950:	10800094 	ori	r2,r2,2
  805954:	80c010c4 	addi	r3,r16,67
  805958:	8080030d 	sth	r2,12(r16)
  80595c:	00800044 	movi	r2,1
  805960:	80c00015 	stw	r3,0(r16)
  805964:	80c00415 	stw	r3,16(r16)
  805968:	80800515 	stw	r2,20(r16)
  80596c:	003fb706 	br	80584c <__smakebuf_r+0x40>
  805970:	05010004 	movi	r20,1024
  805974:	0025883a 	mov	r18,zero
  805978:	003fd506 	br	8058d0 <__smakebuf_r+0xc4>
  80597c:	8140038f 	ldh	r5,14(r16)
  805980:	8809883a 	mov	r4,r17
  805984:	08099d80 	call	8099d8 <_isatty_r>
  805988:	80c0030b 	ldhu	r3,12(r16)
  80598c:	103fde26 	beq	r2,zero,805908 <__smakebuf_r+0xfc>
  805990:	18ffff0c 	andi	r3,r3,65532
  805994:	18c00054 	ori	r3,r3,1
  805998:	003fdb06 	br	805908 <__smakebuf_r+0xfc>
  80599c:	04c00044 	movi	r19,1
  8059a0:	05010004 	movi	r20,1024
  8059a4:	04820004 	movi	r18,2048
  8059a8:	003fc906 	br	8058d0 <__smakebuf_r+0xc4>
  8059ac:	0027883a 	mov	r19,zero
  8059b0:	05010004 	movi	r20,1024
  8059b4:	04820004 	movi	r18,2048
  8059b8:	003fc506 	br	8058d0 <__smakebuf_r+0xc4>

008059bc <__swhatbuf_r>:
  8059bc:	deffea04 	addi	sp,sp,-88
  8059c0:	dc001215 	stw	r16,72(sp)
  8059c4:	2821883a 	mov	r16,r5
  8059c8:	2940038f 	ldh	r5,14(r5)
  8059cc:	dc801415 	stw	r18,80(sp)
  8059d0:	dc401315 	stw	r17,76(sp)
  8059d4:	dfc01515 	stw	ra,84(sp)
  8059d8:	3023883a 	mov	r17,r6
  8059dc:	3825883a 	mov	r18,r7
  8059e0:	28001016 	blt	r5,zero,805a24 <__swhatbuf_r+0x68>
  8059e4:	d80d883a 	mov	r6,sp
  8059e8:	08099780 	call	809978 <_fstat_r>
  8059ec:	10000d16 	blt	r2,zero,805a24 <__swhatbuf_r+0x68>
  8059f0:	d8c00117 	ldw	r3,4(sp)
  8059f4:	00820004 	movi	r2,2048
  8059f8:	18fc000c 	andi	r3,r3,61440
  8059fc:	18c80020 	cmpeqi	r3,r3,8192
  805a00:	90c00015 	stw	r3,0(r18)
  805a04:	00c10004 	movi	r3,1024
  805a08:	88c00015 	stw	r3,0(r17)
  805a0c:	dfc01517 	ldw	ra,84(sp)
  805a10:	dc801417 	ldw	r18,80(sp)
  805a14:	dc401317 	ldw	r17,76(sp)
  805a18:	dc001217 	ldw	r16,72(sp)
  805a1c:	dec01604 	addi	sp,sp,88
  805a20:	f800283a 	ret
  805a24:	8080030b 	ldhu	r2,12(r16)
  805a28:	90000015 	stw	zero,0(r18)
  805a2c:	1080200c 	andi	r2,r2,128
  805a30:	10000426 	beq	r2,zero,805a44 <__swhatbuf_r+0x88>
  805a34:	00801004 	movi	r2,64
  805a38:	88800015 	stw	r2,0(r17)
  805a3c:	0005883a 	mov	r2,zero
  805a40:	003ff206 	br	805a0c <__swhatbuf_r+0x50>
  805a44:	00810004 	movi	r2,1024
  805a48:	88800015 	stw	r2,0(r17)
  805a4c:	0005883a 	mov	r2,zero
  805a50:	003fee06 	br	805a0c <__swhatbuf_r+0x50>

00805a54 <_malloc_r>:
  805a54:	defff604 	addi	sp,sp,-40
  805a58:	dc400115 	stw	r17,4(sp)
  805a5c:	2c4002c4 	addi	r17,r5,11
  805a60:	dc800215 	stw	r18,8(sp)
  805a64:	dfc00915 	stw	ra,36(sp)
  805a68:	df000815 	stw	fp,32(sp)
  805a6c:	ddc00715 	stw	r23,28(sp)
  805a70:	dd800615 	stw	r22,24(sp)
  805a74:	dd400515 	stw	r21,20(sp)
  805a78:	dd000415 	stw	r20,16(sp)
  805a7c:	dcc00315 	stw	r19,12(sp)
  805a80:	dc000015 	stw	r16,0(sp)
  805a84:	888005e8 	cmpgeui	r2,r17,23
  805a88:	2025883a 	mov	r18,r4
  805a8c:	10001b1e 	bne	r2,zero,805afc <_malloc_r+0xa8>
  805a90:	29400468 	cmpgeui	r5,r5,17
  805a94:	2800821e 	bne	r5,zero,805ca0 <_malloc_r+0x24c>
  805a98:	080dd840 	call	80dd84 <__malloc_lock>
  805a9c:	04400404 	movi	r17,16
  805aa0:	00800604 	movi	r2,24
  805aa4:	01c00084 	movi	r7,2
  805aa8:	04c02074 	movhi	r19,129
  805aac:	9cc28504 	addi	r19,r19,2580
  805ab0:	9885883a 	add	r2,r19,r2
  805ab4:	14000117 	ldw	r16,4(r2)
  805ab8:	10fffe04 	addi	r3,r2,-8
  805abc:	80c08b26 	beq	r16,r3,805cec <_malloc_r+0x298>
  805ac0:	80800117 	ldw	r2,4(r16)
  805ac4:	81000317 	ldw	r4,12(r16)
  805ac8:	00ffff04 	movi	r3,-4
  805acc:	10c4703a 	and	r2,r2,r3
  805ad0:	81400217 	ldw	r5,8(r16)
  805ad4:	8085883a 	add	r2,r16,r2
  805ad8:	10c00117 	ldw	r3,4(r2)
  805adc:	29000315 	stw	r4,12(r5)
  805ae0:	21400215 	stw	r5,8(r4)
  805ae4:	18c00054 	ori	r3,r3,1
  805ae8:	10c00115 	stw	r3,4(r2)
  805aec:	9009883a 	mov	r4,r18
  805af0:	080dda80 	call	80dda8 <__malloc_unlock>
  805af4:	80800204 	addi	r2,r16,8
  805af8:	00006c06 	br	805cac <_malloc_r+0x258>
  805afc:	00bffe04 	movi	r2,-8
  805b00:	88a2703a 	and	r17,r17,r2
  805b04:	88006616 	blt	r17,zero,805ca0 <_malloc_r+0x24c>
  805b08:	89406536 	bltu	r17,r5,805ca0 <_malloc_r+0x24c>
  805b0c:	080dd840 	call	80dd84 <__malloc_lock>
  805b10:	88807e28 	cmpgeui	r2,r17,504
  805b14:	10012226 	beq	r2,zero,805fa0 <_malloc_r+0x54c>
  805b18:	8804d27a 	srli	r2,r17,9
  805b1c:	10006f26 	beq	r2,zero,805cdc <_malloc_r+0x288>
  805b20:	10c00168 	cmpgeui	r3,r2,5
  805b24:	1800fe1e 	bne	r3,zero,805f20 <_malloc_r+0x4cc>
  805b28:	8804d1ba 	srli	r2,r17,6
  805b2c:	11c00e44 	addi	r7,r2,57
  805b30:	380890fa 	slli	r4,r7,3
  805b34:	12000e04 	addi	r8,r2,56
  805b38:	04c02074 	movhi	r19,129
  805b3c:	9cc28504 	addi	r19,r19,2580
  805b40:	9909883a 	add	r4,r19,r4
  805b44:	24000117 	ldw	r16,4(r4)
  805b48:	213ffe04 	addi	r4,r4,-8
  805b4c:	24000b26 	beq	r4,r16,805b7c <_malloc_r+0x128>
  805b50:	01bfff04 	movi	r6,-4
  805b54:	00000306 	br	805b64 <_malloc_r+0x110>
  805b58:	1800d60e 	bge	r3,zero,805eb4 <_malloc_r+0x460>
  805b5c:	84000317 	ldw	r16,12(r16)
  805b60:	24000626 	beq	r4,r16,805b7c <_malloc_r+0x128>
  805b64:	80800117 	ldw	r2,4(r16)
  805b68:	1184703a 	and	r2,r2,r6
  805b6c:	1447c83a 	sub	r3,r2,r17
  805b70:	19400408 	cmpgei	r5,r3,16
  805b74:	283ff826 	beq	r5,zero,805b58 <_malloc_r+0x104>
  805b78:	400f883a 	mov	r7,r8
  805b7c:	9c000417 	ldw	r16,16(r19)
  805b80:	02402074 	movhi	r9,129
  805b84:	4a428704 	addi	r9,r9,2588
  805b88:	82405f26 	beq	r16,r9,805d08 <_malloc_r+0x2b4>
  805b8c:	80c00117 	ldw	r3,4(r16)
  805b90:	00bfff04 	movi	r2,-4
  805b94:	1884703a 	and	r2,r3,r2
  805b98:	1447c83a 	sub	r3,r2,r17
  805b9c:	19000410 	cmplti	r4,r3,16
  805ba0:	20010a26 	beq	r4,zero,805fcc <_malloc_r+0x578>
  805ba4:	9a400515 	stw	r9,20(r19)
  805ba8:	9a400415 	stw	r9,16(r19)
  805bac:	1800ff0e 	bge	r3,zero,805fac <_malloc_r+0x558>
  805bb0:	10c08028 	cmpgeui	r3,r2,512
  805bb4:	1800c11e 	bne	r3,zero,805ebc <_malloc_r+0x468>
  805bb8:	1006d0fa 	srli	r3,r2,3
  805bbc:	1008d17a 	srli	r4,r2,5
  805bc0:	00800044 	movi	r2,1
  805bc4:	18c00044 	addi	r3,r3,1
  805bc8:	180690fa 	slli	r3,r3,3
  805bcc:	99400117 	ldw	r5,4(r19)
  805bd0:	1104983a 	sll	r2,r2,r4
  805bd4:	98c7883a 	add	r3,r19,r3
  805bd8:	19000017 	ldw	r4,0(r3)
  805bdc:	1144b03a 	or	r2,r2,r5
  805be0:	197ffe04 	addi	r5,r3,-8
  805be4:	81400315 	stw	r5,12(r16)
  805be8:	81000215 	stw	r4,8(r16)
  805bec:	98800115 	stw	r2,4(r19)
  805bf0:	1c000015 	stw	r16,0(r3)
  805bf4:	24000315 	stw	r16,12(r4)
  805bf8:	3807d0ba 	srai	r3,r7,2
  805bfc:	01000044 	movi	r4,1
  805c00:	20c8983a 	sll	r4,r4,r3
  805c04:	11004536 	bltu	r2,r4,805d1c <_malloc_r+0x2c8>
  805c08:	2086703a 	and	r3,r4,r2
  805c0c:	18000a1e 	bne	r3,zero,805c38 <_malloc_r+0x1e4>
  805c10:	00ffff04 	movi	r3,-4
  805c14:	2109883a 	add	r4,r4,r4
  805c18:	38ce703a 	and	r7,r7,r3
  805c1c:	2086703a 	and	r3,r4,r2
  805c20:	39c00104 	addi	r7,r7,4
  805c24:	1800041e 	bne	r3,zero,805c38 <_malloc_r+0x1e4>
  805c28:	2109883a 	add	r4,r4,r4
  805c2c:	2086703a 	and	r3,r4,r2
  805c30:	39c00104 	addi	r7,r7,4
  805c34:	183ffc26 	beq	r3,zero,805c28 <_malloc_r+0x1d4>
  805c38:	02bfff04 	movi	r10,-4
  805c3c:	381690fa 	slli	r11,r7,3
  805c40:	3819883a 	mov	r12,r7
  805c44:	9ad7883a 	add	r11,r19,r11
  805c48:	5811883a 	mov	r8,r11
  805c4c:	40800317 	ldw	r2,12(r8)
  805c50:	4080bc26 	beq	r8,r2,805f44 <_malloc_r+0x4f0>
  805c54:	10c00117 	ldw	r3,4(r2)
  805c58:	1021883a 	mov	r16,r2
  805c5c:	10800317 	ldw	r2,12(r2)
  805c60:	1a86703a 	and	r3,r3,r10
  805c64:	1c4bc83a 	sub	r5,r3,r17
  805c68:	29800410 	cmplti	r6,r5,16
  805c6c:	3000ba26 	beq	r6,zero,805f58 <_malloc_r+0x504>
  805c70:	283ff716 	blt	r5,zero,805c50 <_malloc_r+0x1fc>
  805c74:	80c7883a 	add	r3,r16,r3
  805c78:	19400117 	ldw	r5,4(r3)
  805c7c:	81800217 	ldw	r6,8(r16)
  805c80:	9009883a 	mov	r4,r18
  805c84:	29400054 	ori	r5,r5,1
  805c88:	19400115 	stw	r5,4(r3)
  805c8c:	30800315 	stw	r2,12(r6)
  805c90:	11800215 	stw	r6,8(r2)
  805c94:	080dda80 	call	80dda8 <__malloc_unlock>
  805c98:	80800204 	addi	r2,r16,8
  805c9c:	00000306 	br	805cac <_malloc_r+0x258>
  805ca0:	00800304 	movi	r2,12
  805ca4:	90800015 	stw	r2,0(r18)
  805ca8:	0005883a 	mov	r2,zero
  805cac:	dfc00917 	ldw	ra,36(sp)
  805cb0:	df000817 	ldw	fp,32(sp)
  805cb4:	ddc00717 	ldw	r23,28(sp)
  805cb8:	dd800617 	ldw	r22,24(sp)
  805cbc:	dd400517 	ldw	r21,20(sp)
  805cc0:	dd000417 	ldw	r20,16(sp)
  805cc4:	dcc00317 	ldw	r19,12(sp)
  805cc8:	dc800217 	ldw	r18,8(sp)
  805ccc:	dc400117 	ldw	r17,4(sp)
  805cd0:	dc000017 	ldw	r16,0(sp)
  805cd4:	dec00a04 	addi	sp,sp,40
  805cd8:	f800283a 	ret
  805cdc:	01008004 	movi	r4,512
  805ce0:	01c01004 	movi	r7,64
  805ce4:	02000fc4 	movi	r8,63
  805ce8:	003f9306 	br	805b38 <_malloc_r+0xe4>
  805cec:	14000317 	ldw	r16,12(r2)
  805cf0:	39c00084 	addi	r7,r7,2
  805cf4:	143f721e 	bne	r2,r16,805ac0 <_malloc_r+0x6c>
  805cf8:	9c000417 	ldw	r16,16(r19)
  805cfc:	02402074 	movhi	r9,129
  805d00:	4a428704 	addi	r9,r9,2588
  805d04:	827fa11e 	bne	r16,r9,805b8c <_malloc_r+0x138>
  805d08:	3807d0ba 	srai	r3,r7,2
  805d0c:	01000044 	movi	r4,1
  805d10:	98800117 	ldw	r2,4(r19)
  805d14:	20c8983a 	sll	r4,r4,r3
  805d18:	113fbb2e 	bgeu	r2,r4,805c08 <_malloc_r+0x1b4>
  805d1c:	9c000217 	ldw	r16,8(r19)
  805d20:	00bfff04 	movi	r2,-4
  805d24:	85400117 	ldw	r21,4(r16)
  805d28:	a8ac703a 	and	r22,r21,r2
  805d2c:	b4400336 	bltu	r22,r17,805d3c <_malloc_r+0x2e8>
  805d30:	b445c83a 	sub	r2,r22,r17
  805d34:	10c00408 	cmpgei	r3,r2,16
  805d38:	1800541e 	bne	r3,zero,805e8c <_malloc_r+0x438>
  805d3c:	00802074 	movhi	r2,129
  805d40:	10886617 	ldw	r2,8600(r2)
  805d44:	00c02074 	movhi	r3,129
  805d48:	1d4f6a17 	ldw	r21,15784(r3)
  805d4c:	10bfffd8 	cmpnei	r2,r2,-1
  805d50:	85b9883a 	add	fp,r16,r22
  805d54:	8d6b883a 	add	r21,r17,r21
  805d58:	1000d626 	beq	r2,zero,8060b4 <_malloc_r+0x660>
  805d5c:	ad4403c4 	addi	r21,r21,4111
  805d60:	00bc0004 	movi	r2,-4096
  805d64:	a8aa703a 	and	r21,r21,r2
  805d68:	a80b883a 	mov	r5,r21
  805d6c:	9009883a 	mov	r4,r18
  805d70:	0807ce40 	call	807ce4 <_sbrk_r>
  805d74:	102f883a 	mov	r23,r2
  805d78:	10bfffd8 	cmpnei	r2,r2,-1
  805d7c:	1000a826 	beq	r2,zero,806020 <_malloc_r+0x5cc>
  805d80:	bf00a636 	bltu	r23,fp,80601c <_malloc_r+0x5c8>
  805d84:	00802074 	movhi	r2,129
  805d88:	150f7417 	ldw	r20,15824(r2)
  805d8c:	ad29883a 	add	r20,r21,r20
  805d90:	150f7415 	stw	r20,15824(r2)
  805d94:	a007883a 	mov	r3,r20
  805d98:	e5c0ec26 	beq	fp,r23,80614c <_malloc_r+0x6f8>
  805d9c:	00802074 	movhi	r2,129
  805da0:	10886617 	ldw	r2,8600(r2)
  805da4:	10bfffd8 	cmpnei	r2,r2,-1
  805da8:	1000ef26 	beq	r2,zero,806168 <_malloc_r+0x714>
  805dac:	bf39c83a 	sub	fp,r23,fp
  805db0:	e0c7883a 	add	r3,fp,r3
  805db4:	00802074 	movhi	r2,129
  805db8:	10cf7415 	stw	r3,15824(r2)
  805dbc:	bf0001cc 	andi	fp,r23,7
  805dc0:	e000c526 	beq	fp,zero,8060d8 <_malloc_r+0x684>
  805dc4:	bf2fc83a 	sub	r23,r23,fp
  805dc8:	bdc00204 	addi	r23,r23,8
  805dcc:	05040204 	movi	r20,4104
  805dd0:	a729c83a 	sub	r20,r20,fp
  805dd4:	bd6b883a 	add	r21,r23,r21
  805dd8:	a569c83a 	sub	r20,r20,r21
  805ddc:	a503ffcc 	andi	r20,r20,4095
  805de0:	a00b883a 	mov	r5,r20
  805de4:	9009883a 	mov	r4,r18
  805de8:	0807ce40 	call	807ce4 <_sbrk_r>
  805dec:	10ffffe0 	cmpeqi	r3,r2,-1
  805df0:	1800f31e 	bne	r3,zero,8061c0 <_malloc_r+0x76c>
  805df4:	15c5c83a 	sub	r2,r2,r23
  805df8:	152b883a 	add	r21,r2,r20
  805dfc:	00802074 	movhi	r2,129
  805e00:	114f7417 	ldw	r5,15824(r2)
  805e04:	9dc00215 	stw	r23,8(r19)
  805e08:	ad400054 	ori	r21,r21,1
  805e0c:	a169883a 	add	r20,r20,r5
  805e10:	150f7415 	stw	r20,15824(r2)
  805e14:	bd400115 	stw	r21,4(r23)
  805e18:	84c0d626 	beq	r16,r19,806174 <_malloc_r+0x720>
  805e1c:	b0800428 	cmpgeui	r2,r22,16
  805e20:	1000d626 	beq	r2,zero,80617c <_malloc_r+0x728>
  805e24:	80c00117 	ldw	r3,4(r16)
  805e28:	013ffe04 	movi	r4,-8
  805e2c:	b0bffd04 	addi	r2,r22,-12
  805e30:	1104703a 	and	r2,r2,r4
  805e34:	18c0004c 	andi	r3,r3,1
  805e38:	1886b03a 	or	r3,r3,r2
  805e3c:	80c00115 	stw	r3,4(r16)
  805e40:	01000144 	movi	r4,5
  805e44:	8087883a 	add	r3,r16,r2
  805e48:	19000115 	stw	r4,4(r3)
  805e4c:	19000215 	stw	r4,8(r3)
  805e50:	10800428 	cmpgeui	r2,r2,16
  805e54:	1000df1e 	bne	r2,zero,8061d4 <_malloc_r+0x780>
  805e58:	bd400117 	ldw	r21,4(r23)
  805e5c:	b821883a 	mov	r16,r23
  805e60:	00802074 	movhi	r2,129
  805e64:	108f6917 	ldw	r2,15780(r2)
  805e68:	1500022e 	bgeu	r2,r20,805e74 <_malloc_r+0x420>
  805e6c:	00802074 	movhi	r2,129
  805e70:	150f6915 	stw	r20,15780(r2)
  805e74:	00802074 	movhi	r2,129
  805e78:	108f6817 	ldw	r2,15776(r2)
  805e7c:	15006a2e 	bgeu	r2,r20,806028 <_malloc_r+0x5d4>
  805e80:	00802074 	movhi	r2,129
  805e84:	150f6815 	stw	r20,15776(r2)
  805e88:	00006706 	br	806028 <_malloc_r+0x5d4>
  805e8c:	88c00054 	ori	r3,r17,1
  805e90:	80c00115 	stw	r3,4(r16)
  805e94:	8463883a 	add	r17,r16,r17
  805e98:	10800054 	ori	r2,r2,1
  805e9c:	9c400215 	stw	r17,8(r19)
  805ea0:	88800115 	stw	r2,4(r17)
  805ea4:	9009883a 	mov	r4,r18
  805ea8:	080dda80 	call	80dda8 <__malloc_unlock>
  805eac:	80800204 	addi	r2,r16,8
  805eb0:	003f7e06 	br	805cac <_malloc_r+0x258>
  805eb4:	81000317 	ldw	r4,12(r16)
  805eb8:	003f0506 	br	805ad0 <_malloc_r+0x7c>
  805ebc:	1006d27a 	srli	r3,r2,9
  805ec0:	19000168 	cmpgeui	r4,r3,5
  805ec4:	20005026 	beq	r4,zero,806008 <_malloc_r+0x5b4>
  805ec8:	19000568 	cmpgeui	r4,r3,21
  805ecc:	20008c1e 	bne	r4,zero,806100 <_malloc_r+0x6ac>
  805ed0:	19401704 	addi	r5,r3,92
  805ed4:	280a90fa 	slli	r5,r5,3
  805ed8:	190016c4 	addi	r4,r3,91
  805edc:	994b883a 	add	r5,r19,r5
  805ee0:	28c00017 	ldw	r3,0(r5)
  805ee4:	297ffe04 	addi	r5,r5,-8
  805ee8:	28c07426 	beq	r5,r3,8060bc <_malloc_r+0x668>
  805eec:	01bfff04 	movi	r6,-4
  805ef0:	19000117 	ldw	r4,4(r3)
  805ef4:	2188703a 	and	r4,r4,r6
  805ef8:	1100022e 	bgeu	r2,r4,805f04 <_malloc_r+0x4b0>
  805efc:	18c00217 	ldw	r3,8(r3)
  805f00:	28fffb1e 	bne	r5,r3,805ef0 <_malloc_r+0x49c>
  805f04:	19400317 	ldw	r5,12(r3)
  805f08:	98800117 	ldw	r2,4(r19)
  805f0c:	81400315 	stw	r5,12(r16)
  805f10:	80c00215 	stw	r3,8(r16)
  805f14:	2c000215 	stw	r16,8(r5)
  805f18:	1c000315 	stw	r16,12(r3)
  805f1c:	003f3606 	br	805bf8 <_malloc_r+0x1a4>
  805f20:	10c00568 	cmpgeui	r3,r2,21
  805f24:	18004a26 	beq	r3,zero,806050 <_malloc_r+0x5fc>
  805f28:	10c01568 	cmpgeui	r3,r2,85
  805f2c:	18007b1e 	bne	r3,zero,80611c <_malloc_r+0x6c8>
  805f30:	8804d33a 	srli	r2,r17,12
  805f34:	11c01bc4 	addi	r7,r2,111
  805f38:	380890fa 	slli	r4,r7,3
  805f3c:	12001b84 	addi	r8,r2,110
  805f40:	003efd06 	br	805b38 <_malloc_r+0xe4>
  805f44:	63000044 	addi	r12,r12,1
  805f48:	608000cc 	andi	r2,r12,3
  805f4c:	42000204 	addi	r8,r8,8
  805f50:	103f3e1e 	bne	r2,zero,805c4c <_malloc_r+0x1f8>
  805f54:	00004506 	br	80606c <_malloc_r+0x618>
  805f58:	81000217 	ldw	r4,8(r16)
  805f5c:	89800054 	ori	r6,r17,1
  805f60:	81800115 	stw	r6,4(r16)
  805f64:	20800315 	stw	r2,12(r4)
  805f68:	11000215 	stw	r4,8(r2)
  805f6c:	8463883a 	add	r17,r16,r17
  805f70:	9c400515 	stw	r17,20(r19)
  805f74:	9c400415 	stw	r17,16(r19)
  805f78:	28800054 	ori	r2,r5,1
  805f7c:	88800115 	stw	r2,4(r17)
  805f80:	8a400315 	stw	r9,12(r17)
  805f84:	8a400215 	stw	r9,8(r17)
  805f88:	80c7883a 	add	r3,r16,r3
  805f8c:	19400015 	stw	r5,0(r3)
  805f90:	9009883a 	mov	r4,r18
  805f94:	080dda80 	call	80dda8 <__malloc_unlock>
  805f98:	80800204 	addi	r2,r16,8
  805f9c:	003f4306 	br	805cac <_malloc_r+0x258>
  805fa0:	880ed0fa 	srli	r7,r17,3
  805fa4:	88800204 	addi	r2,r17,8
  805fa8:	003ebf06 	br	805aa8 <_malloc_r+0x54>
  805fac:	8085883a 	add	r2,r16,r2
  805fb0:	10c00117 	ldw	r3,4(r2)
  805fb4:	9009883a 	mov	r4,r18
  805fb8:	18c00054 	ori	r3,r3,1
  805fbc:	10c00115 	stw	r3,4(r2)
  805fc0:	080dda80 	call	80dda8 <__malloc_unlock>
  805fc4:	80800204 	addi	r2,r16,8
  805fc8:	003f3806 	br	805cac <_malloc_r+0x258>
  805fcc:	89000054 	ori	r4,r17,1
  805fd0:	81000115 	stw	r4,4(r16)
  805fd4:	8463883a 	add	r17,r16,r17
  805fd8:	9c400515 	stw	r17,20(r19)
  805fdc:	9c400415 	stw	r17,16(r19)
  805fe0:	19000054 	ori	r4,r3,1
  805fe4:	89000115 	stw	r4,4(r17)
  805fe8:	8085883a 	add	r2,r16,r2
  805fec:	8a400315 	stw	r9,12(r17)
  805ff0:	8a400215 	stw	r9,8(r17)
  805ff4:	10c00015 	stw	r3,0(r2)
  805ff8:	9009883a 	mov	r4,r18
  805ffc:	080dda80 	call	80dda8 <__malloc_unlock>
  806000:	80800204 	addi	r2,r16,8
  806004:	003f2906 	br	805cac <_malloc_r+0x258>
  806008:	1006d1ba 	srli	r3,r2,6
  80600c:	19400e44 	addi	r5,r3,57
  806010:	280a90fa 	slli	r5,r5,3
  806014:	19000e04 	addi	r4,r3,56
  806018:	003fb006 	br	805edc <_malloc_r+0x488>
  80601c:	84c04626 	beq	r16,r19,806138 <_malloc_r+0x6e4>
  806020:	9c000217 	ldw	r16,8(r19)
  806024:	85400117 	ldw	r21,4(r16)
  806028:	00bfff04 	movi	r2,-4
  80602c:	a8aa703a 	and	r21,r21,r2
  806030:	ac45c83a 	sub	r2,r21,r17
  806034:	ac400236 	bltu	r21,r17,806040 <_malloc_r+0x5ec>
  806038:	10c00408 	cmpgei	r3,r2,16
  80603c:	183f931e 	bne	r3,zero,805e8c <_malloc_r+0x438>
  806040:	9009883a 	mov	r4,r18
  806044:	080dda80 	call	80dda8 <__malloc_unlock>
  806048:	0005883a 	mov	r2,zero
  80604c:	003f1706 	br	805cac <_malloc_r+0x258>
  806050:	11c01704 	addi	r7,r2,92
  806054:	380890fa 	slli	r4,r7,3
  806058:	120016c4 	addi	r8,r2,91
  80605c:	003eb606 	br	805b38 <_malloc_r+0xe4>
  806060:	58800217 	ldw	r2,8(r11)
  806064:	39ffffc4 	addi	r7,r7,-1
  806068:	12c0701e 	bne	r2,r11,80622c <_malloc_r+0x7d8>
  80606c:	388000cc 	andi	r2,r7,3
  806070:	5afffe04 	addi	r11,r11,-8
  806074:	103ffa1e 	bne	r2,zero,806060 <_malloc_r+0x60c>
  806078:	98c00117 	ldw	r3,4(r19)
  80607c:	0104303a 	nor	r2,zero,r4
  806080:	10c4703a 	and	r2,r2,r3
  806084:	98800115 	stw	r2,4(r19)
  806088:	2109883a 	add	r4,r4,r4
  80608c:	113f2336 	bltu	r2,r4,805d1c <_malloc_r+0x2c8>
  806090:	203f2226 	beq	r4,zero,805d1c <_malloc_r+0x2c8>
  806094:	2086703a 	and	r3,r4,r2
  806098:	1800041e 	bne	r3,zero,8060ac <_malloc_r+0x658>
  80609c:	2109883a 	add	r4,r4,r4
  8060a0:	2086703a 	and	r3,r4,r2
  8060a4:	63000104 	addi	r12,r12,4
  8060a8:	183ffc26 	beq	r3,zero,80609c <_malloc_r+0x648>
  8060ac:	600f883a 	mov	r7,r12
  8060b0:	003ee206 	br	805c3c <_malloc_r+0x1e8>
  8060b4:	ad400404 	addi	r21,r21,16
  8060b8:	003f2b06 	br	805d68 <_malloc_r+0x314>
  8060bc:	2009d0ba 	srai	r4,r4,2
  8060c0:	00800044 	movi	r2,1
  8060c4:	99800117 	ldw	r6,4(r19)
  8060c8:	1104983a 	sll	r2,r2,r4
  8060cc:	1184b03a 	or	r2,r2,r6
  8060d0:	98800115 	stw	r2,4(r19)
  8060d4:	003f8d06 	br	805f0c <_malloc_r+0x4b8>
  8060d8:	bd69883a 	add	r20,r23,r21
  8060dc:	0529c83a 	sub	r20,zero,r20
  8060e0:	a503ffcc 	andi	r20,r20,4095
  8060e4:	a00b883a 	mov	r5,r20
  8060e8:	9009883a 	mov	r4,r18
  8060ec:	0807ce40 	call	807ce4 <_sbrk_r>
  8060f0:	10ffffe0 	cmpeqi	r3,r2,-1
  8060f4:	183f3f26 	beq	r3,zero,805df4 <_malloc_r+0x3a0>
  8060f8:	0029883a 	mov	r20,zero
  8060fc:	003f3f06 	br	805dfc <_malloc_r+0x3a8>
  806100:	19001568 	cmpgeui	r4,r3,85
  806104:	2000201e 	bne	r4,zero,806188 <_malloc_r+0x734>
  806108:	1006d33a 	srli	r3,r2,12
  80610c:	19401bc4 	addi	r5,r3,111
  806110:	280a90fa 	slli	r5,r5,3
  806114:	19001b84 	addi	r4,r3,110
  806118:	003f7006 	br	805edc <_malloc_r+0x488>
  80611c:	10c05568 	cmpgeui	r3,r2,341
  806120:	1800201e 	bne	r3,zero,8061a4 <_malloc_r+0x750>
  806124:	8804d3fa 	srli	r2,r17,15
  806128:	11c01e04 	addi	r7,r2,120
  80612c:	380890fa 	slli	r4,r7,3
  806130:	12001dc4 	addi	r8,r2,119
  806134:	003e8006 	br	805b38 <_malloc_r+0xe4>
  806138:	00802074 	movhi	r2,129
  80613c:	10cf7417 	ldw	r3,15824(r2)
  806140:	a8c7883a 	add	r3,r21,r3
  806144:	10cf7415 	stw	r3,15824(r2)
  806148:	003f1406 	br	805d9c <_malloc_r+0x348>
  80614c:	e083ffcc 	andi	r2,fp,4095
  806150:	103f121e 	bne	r2,zero,805d9c <_malloc_r+0x348>
  806154:	9c000217 	ldw	r16,8(r19)
  806158:	b56b883a 	add	r21,r22,r21
  80615c:	ad400054 	ori	r21,r21,1
  806160:	85400115 	stw	r21,4(r16)
  806164:	003f3e06 	br	805e60 <_malloc_r+0x40c>
  806168:	00802074 	movhi	r2,129
  80616c:	15c86615 	stw	r23,8600(r2)
  806170:	003f1206 	br	805dbc <_malloc_r+0x368>
  806174:	b821883a 	mov	r16,r23
  806178:	003f3906 	br	805e60 <_malloc_r+0x40c>
  80617c:	00800044 	movi	r2,1
  806180:	b8800115 	stw	r2,4(r23)
  806184:	003fae06 	br	806040 <_malloc_r+0x5ec>
  806188:	19005568 	cmpgeui	r4,r3,341
  80618c:	2000191e 	bne	r4,zero,8061f4 <_malloc_r+0x7a0>
  806190:	1006d3fa 	srli	r3,r2,15
  806194:	19401e04 	addi	r5,r3,120
  806198:	280a90fa 	slli	r5,r5,3
  80619c:	19001dc4 	addi	r4,r3,119
  8061a0:	003f4e06 	br	805edc <_malloc_r+0x488>
  8061a4:	10815568 	cmpgeui	r2,r2,1365
  8061a8:	1000191e 	bne	r2,zero,806210 <_malloc_r+0x7bc>
  8061ac:	8804d4ba 	srli	r2,r17,18
  8061b0:	11c01f44 	addi	r7,r2,125
  8061b4:	380890fa 	slli	r4,r7,3
  8061b8:	12001f04 	addi	r8,r2,124
  8061bc:	003e5e06 	br	805b38 <_malloc_r+0xe4>
  8061c0:	e73ffe04 	addi	fp,fp,-8
  8061c4:	af2b883a 	add	r21,r21,fp
  8061c8:	adebc83a 	sub	r21,r21,r23
  8061cc:	0029883a 	mov	r20,zero
  8061d0:	003f0a06 	br	805dfc <_malloc_r+0x3a8>
  8061d4:	81400204 	addi	r5,r16,8
  8061d8:	9009883a 	mov	r4,r18
  8061dc:	0804ef80 	call	804ef8 <_free_r>
  8061e0:	9c000217 	ldw	r16,8(r19)
  8061e4:	00802074 	movhi	r2,129
  8061e8:	150f7417 	ldw	r20,15824(r2)
  8061ec:	85400117 	ldw	r21,4(r16)
  8061f0:	003f1b06 	br	805e60 <_malloc_r+0x40c>
  8061f4:	18c15568 	cmpgeui	r3,r3,1365
  8061f8:	1800091e 	bne	r3,zero,806220 <_malloc_r+0x7cc>
  8061fc:	1006d4ba 	srli	r3,r2,18
  806200:	19401f44 	addi	r5,r3,125
  806204:	280a90fa 	slli	r5,r5,3
  806208:	19001f04 	addi	r4,r3,124
  80620c:	003f3306 	br	805edc <_malloc_r+0x488>
  806210:	0100fe04 	movi	r4,1016
  806214:	01c01fc4 	movi	r7,127
  806218:	02001f84 	movi	r8,126
  80621c:	003e4606 	br	805b38 <_malloc_r+0xe4>
  806220:	0140fe04 	movi	r5,1016
  806224:	01001f84 	movi	r4,126
  806228:	003f2c06 	br	805edc <_malloc_r+0x488>
  80622c:	98800117 	ldw	r2,4(r19)
  806230:	003f9506 	br	806088 <_malloc_r+0x634>

00806234 <memchr>:
  806234:	208000cc 	andi	r2,r4,3
  806238:	280f883a 	mov	r7,r5
  80623c:	10000e26 	beq	r2,zero,806278 <memchr+0x44>
  806240:	30bfffc4 	addi	r2,r6,-1
  806244:	30001726 	beq	r6,zero,8062a4 <memchr+0x70>
  806248:	29803fcc 	andi	r6,r5,255
  80624c:	00000606 	br	806268 <memchr+0x34>
  806250:	21000044 	addi	r4,r4,1
  806254:	20c000cc 	andi	r3,r4,3
  806258:	18000826 	beq	r3,zero,80627c <memchr+0x48>
  80625c:	10bfffc4 	addi	r2,r2,-1
  806260:	10ffffe0 	cmpeqi	r3,r2,-1
  806264:	18000f1e 	bne	r3,zero,8062a4 <memchr+0x70>
  806268:	20c00003 	ldbu	r3,0(r4)
  80626c:	19bff81e 	bne	r3,r6,806250 <memchr+0x1c>
  806270:	2005883a 	mov	r2,r4
  806274:	f800283a 	ret
  806278:	3005883a 	mov	r2,r6
  80627c:	10c00128 	cmpgeui	r3,r2,4
  806280:	18000a1e 	bne	r3,zero,8062ac <memchr+0x78>
  806284:	10001e26 	beq	r2,zero,806300 <memchr+0xcc>
  806288:	2087883a 	add	r3,r4,r2
  80628c:	39803fcc 	andi	r6,r7,255
  806290:	2005883a 	mov	r2,r4
  806294:	11000003 	ldbu	r4,0(r2)
  806298:	21bff626 	beq	r4,r6,806274 <memchr+0x40>
  80629c:	10800044 	addi	r2,r2,1
  8062a0:	18bffc1e 	bne	r3,r2,806294 <memchr+0x60>
  8062a4:	0005883a 	mov	r2,zero
  8062a8:	f800283a 	ret
  8062ac:	29403fcc 	andi	r5,r5,255
  8062b0:	280c923a 	slli	r6,r5,8
  8062b4:	027fbff4 	movhi	r9,65279
  8062b8:	02202074 	movhi	r8,32897
  8062bc:	314ab03a 	or	r5,r6,r5
  8062c0:	280c943a 	slli	r6,r5,16
  8062c4:	4a7fbfc4 	addi	r9,r9,-257
  8062c8:	42202004 	addi	r8,r8,-32640
  8062cc:	314cb03a 	or	r6,r6,r5
  8062d0:	20c00017 	ldw	r3,0(r4)
  8062d4:	30c6f03a 	xor	r3,r6,r3
  8062d8:	1a4b883a 	add	r5,r3,r9
  8062dc:	00c6303a 	nor	r3,zero,r3
  8062e0:	28c6703a 	and	r3,r5,r3
  8062e4:	1a06703a 	and	r3,r3,r8
  8062e8:	183fe71e 	bne	r3,zero,806288 <memchr+0x54>
  8062ec:	10bfff04 	addi	r2,r2,-4
  8062f0:	10c00128 	cmpgeui	r3,r2,4
  8062f4:	21000104 	addi	r4,r4,4
  8062f8:	183ff51e 	bne	r3,zero,8062d0 <memchr+0x9c>
  8062fc:	003fe106 	br	806284 <memchr+0x50>
  806300:	f800283a 	ret

00806304 <memcpy>:
  806304:	30c00430 	cmpltui	r3,r6,16
  806308:	2005883a 	mov	r2,r4
  80630c:	18002d1e 	bne	r3,zero,8063c4 <memcpy+0xc0>
  806310:	2906b03a 	or	r3,r5,r4
  806314:	18c000cc 	andi	r3,r3,3
  806318:	1800351e 	bne	r3,zero,8063f0 <memcpy+0xec>
  80631c:	32fffc04 	addi	r11,r6,-16
  806320:	5816d13a 	srli	r11,r11,4
  806324:	280f883a 	mov	r7,r5
  806328:	2007883a 	mov	r3,r4
  80632c:	5ac00044 	addi	r11,r11,1
  806330:	5816913a 	slli	r11,r11,4
  806334:	22d5883a 	add	r10,r4,r11
  806338:	39000117 	ldw	r4,4(r7)
  80633c:	3a400017 	ldw	r9,0(r7)
  806340:	3a000217 	ldw	r8,8(r7)
  806344:	19000115 	stw	r4,4(r3)
  806348:	39000317 	ldw	r4,12(r7)
  80634c:	1a400015 	stw	r9,0(r3)
  806350:	1a000215 	stw	r8,8(r3)
  806354:	19000315 	stw	r4,12(r3)
  806358:	18c00404 	addi	r3,r3,16
  80635c:	39c00404 	addi	r7,r7,16
  806360:	50fff51e 	bne	r10,r3,806338 <memcpy+0x34>
  806364:	3100030c 	andi	r4,r6,12
  806368:	2acb883a 	add	r5,r5,r11
  80636c:	320003cc 	andi	r8,r6,15
  806370:	20002226 	beq	r4,zero,8063fc <memcpy+0xf8>
  806374:	280f883a 	mov	r7,r5
  806378:	1813883a 	mov	r9,r3
  80637c:	39c00104 	addi	r7,r7,4
  806380:	3abfff17 	ldw	r10,-4(r7)
  806384:	41c9c83a 	sub	r4,r8,r7
  806388:	2909883a 	add	r4,r5,r4
  80638c:	4a800015 	stw	r10,0(r9)
  806390:	21000128 	cmpgeui	r4,r4,4
  806394:	4a400104 	addi	r9,r9,4
  806398:	203ff81e 	bne	r4,zero,80637c <memcpy+0x78>
  80639c:	413fff04 	addi	r4,r8,-4
  8063a0:	2008d0ba 	srli	r4,r4,2
  8063a4:	318000cc 	andi	r6,r6,3
  8063a8:	31ffffc4 	addi	r7,r6,-1
  8063ac:	21000044 	addi	r4,r4,1
  8063b0:	200890ba 	slli	r4,r4,2
  8063b4:	1907883a 	add	r3,r3,r4
  8063b8:	290b883a 	add	r5,r5,r4
  8063bc:	3000041e 	bne	r6,zero,8063d0 <memcpy+0xcc>
  8063c0:	f800283a 	ret
  8063c4:	2007883a 	mov	r3,r4
  8063c8:	31ffffc4 	addi	r7,r6,-1
  8063cc:	303ffc26 	beq	r6,zero,8063c0 <memcpy+0xbc>
  8063d0:	39c00044 	addi	r7,r7,1
  8063d4:	19cf883a 	add	r7,r3,r7
  8063d8:	29800003 	ldbu	r6,0(r5)
  8063dc:	18c00044 	addi	r3,r3,1
  8063e0:	29400044 	addi	r5,r5,1
  8063e4:	19bfffc5 	stb	r6,-1(r3)
  8063e8:	38fffb1e 	bne	r7,r3,8063d8 <memcpy+0xd4>
  8063ec:	f800283a 	ret
  8063f0:	31ffffc4 	addi	r7,r6,-1
  8063f4:	2007883a 	mov	r3,r4
  8063f8:	003ff506 	br	8063d0 <memcpy+0xcc>
  8063fc:	400d883a 	mov	r6,r8
  806400:	003ff106 	br	8063c8 <memcpy+0xc4>

00806404 <memmove>:
  806404:	2005883a 	mov	r2,r4
  806408:	29000a2e 	bgeu	r5,r4,806434 <memmove+0x30>
  80640c:	2989883a 	add	r4,r5,r6
  806410:	1100082e 	bgeu	r2,r4,806434 <memmove+0x30>
  806414:	1187883a 	add	r3,r2,r6
  806418:	30003e26 	beq	r6,zero,806514 <memmove+0x110>
  80641c:	217fffc3 	ldbu	r5,-1(r4)
  806420:	18ffffc4 	addi	r3,r3,-1
  806424:	213fffc4 	addi	r4,r4,-1
  806428:	19400005 	stb	r5,0(r3)
  80642c:	10fffb1e 	bne	r2,r3,80641c <memmove+0x18>
  806430:	f800283a 	ret
  806434:	30c00430 	cmpltui	r3,r6,16
  806438:	18000b26 	beq	r3,zero,806468 <memmove+0x64>
  80643c:	1007883a 	mov	r3,r2
  806440:	31ffffc4 	addi	r7,r6,-1
  806444:	30003726 	beq	r6,zero,806524 <memmove+0x120>
  806448:	39c00044 	addi	r7,r7,1
  80644c:	29cf883a 	add	r7,r5,r7
  806450:	29800003 	ldbu	r6,0(r5)
  806454:	29400044 	addi	r5,r5,1
  806458:	18c00044 	addi	r3,r3,1
  80645c:	19bfffc5 	stb	r6,-1(r3)
  806460:	29fffb1e 	bne	r5,r7,806450 <memmove+0x4c>
  806464:	f800283a 	ret
  806468:	2886b03a 	or	r3,r5,r2
  80646c:	18c000cc 	andi	r3,r3,3
  806470:	1800291e 	bne	r3,zero,806518 <memmove+0x114>
  806474:	327ffc04 	addi	r9,r6,-16
  806478:	4812d13a 	srli	r9,r9,4
  80647c:	280f883a 	mov	r7,r5
  806480:	1007883a 	mov	r3,r2
  806484:	4a400044 	addi	r9,r9,1
  806488:	4812913a 	slli	r9,r9,4
  80648c:	1251883a 	add	r8,r2,r9
  806490:	39000017 	ldw	r4,0(r7)
  806494:	39c00404 	addi	r7,r7,16
  806498:	18c00404 	addi	r3,r3,16
  80649c:	193ffc15 	stw	r4,-16(r3)
  8064a0:	393ffd17 	ldw	r4,-12(r7)
  8064a4:	193ffd15 	stw	r4,-12(r3)
  8064a8:	393ffe17 	ldw	r4,-8(r7)
  8064ac:	193ffe15 	stw	r4,-8(r3)
  8064b0:	393fff17 	ldw	r4,-4(r7)
  8064b4:	193fff15 	stw	r4,-4(r3)
  8064b8:	40fff51e 	bne	r8,r3,806490 <memmove+0x8c>
  8064bc:	3100030c 	andi	r4,r6,12
  8064c0:	2a4b883a 	add	r5,r5,r9
  8064c4:	320003cc 	andi	r8,r6,15
  8064c8:	20001726 	beq	r4,zero,806528 <memmove+0x124>
  8064cc:	2813883a 	mov	r9,r5
  8064d0:	180f883a 	mov	r7,r3
  8064d4:	4a800017 	ldw	r10,0(r9)
  8064d8:	39c00104 	addi	r7,r7,4
  8064dc:	41c9c83a 	sub	r4,r8,r7
  8064e0:	1909883a 	add	r4,r3,r4
  8064e4:	21000128 	cmpgeui	r4,r4,4
  8064e8:	3abfff15 	stw	r10,-4(r7)
  8064ec:	4a400104 	addi	r9,r9,4
  8064f0:	203ff81e 	bne	r4,zero,8064d4 <memmove+0xd0>
  8064f4:	413fff04 	addi	r4,r8,-4
  8064f8:	2008d0ba 	srli	r4,r4,2
  8064fc:	318000cc 	andi	r6,r6,3
  806500:	21000044 	addi	r4,r4,1
  806504:	200890ba 	slli	r4,r4,2
  806508:	1907883a 	add	r3,r3,r4
  80650c:	290b883a 	add	r5,r5,r4
  806510:	003fcb06 	br	806440 <memmove+0x3c>
  806514:	f800283a 	ret
  806518:	31ffffc4 	addi	r7,r6,-1
  80651c:	1007883a 	mov	r3,r2
  806520:	003fc906 	br	806448 <memmove+0x44>
  806524:	f800283a 	ret
  806528:	400d883a 	mov	r6,r8
  80652c:	003fc406 	br	806440 <memmove+0x3c>

00806530 <memset>:
  806530:	20c000cc 	andi	r3,r4,3
  806534:	2005883a 	mov	r2,r4
  806538:	18003626 	beq	r3,zero,806614 <memset+0xe4>
  80653c:	31ffffc4 	addi	r7,r6,-1
  806540:	30003326 	beq	r6,zero,806610 <memset+0xe0>
  806544:	2811883a 	mov	r8,r5
  806548:	2007883a 	mov	r3,r4
  80654c:	00000306 	br	80655c <memset+0x2c>
  806550:	39ffffc4 	addi	r7,r7,-1
  806554:	39bfffe0 	cmpeqi	r6,r7,-1
  806558:	30002d1e 	bne	r6,zero,806610 <memset+0xe0>
  80655c:	18c00044 	addi	r3,r3,1
  806560:	198000cc 	andi	r6,r3,3
  806564:	1a3fffc5 	stb	r8,-1(r3)
  806568:	303ff91e 	bne	r6,zero,806550 <memset+0x20>
  80656c:	39000130 	cmpltui	r4,r7,4
  806570:	2000221e 	bne	r4,zero,8065fc <memset+0xcc>
  806574:	29003fcc 	andi	r4,r5,255
  806578:	200c923a 	slli	r6,r4,8
  80657c:	3a000430 	cmpltui	r8,r7,16
  806580:	3108b03a 	or	r4,r6,r4
  806584:	200c943a 	slli	r6,r4,16
  806588:	310cb03a 	or	r6,r6,r4
  80658c:	40000e1e 	bne	r8,zero,8065c8 <memset+0x98>
  806590:	393ffc04 	addi	r4,r7,-16
  806594:	2008d13a 	srli	r4,r4,4
  806598:	21000044 	addi	r4,r4,1
  80659c:	2008913a 	slli	r4,r4,4
  8065a0:	1909883a 	add	r4,r3,r4
  8065a4:	19800015 	stw	r6,0(r3)
  8065a8:	19800115 	stw	r6,4(r3)
  8065ac:	19800215 	stw	r6,8(r3)
  8065b0:	19800315 	stw	r6,12(r3)
  8065b4:	18c00404 	addi	r3,r3,16
  8065b8:	20fffa1e 	bne	r4,r3,8065a4 <memset+0x74>
  8065bc:	3900030c 	andi	r4,r7,12
  8065c0:	39c003cc 	andi	r7,r7,15
  8065c4:	20000d26 	beq	r4,zero,8065fc <memset+0xcc>
  8065c8:	1811883a 	mov	r8,r3
  8065cc:	42000104 	addi	r8,r8,4
  8065d0:	3a09c83a 	sub	r4,r7,r8
  8065d4:	1909883a 	add	r4,r3,r4
  8065d8:	21000128 	cmpgeui	r4,r4,4
  8065dc:	41bfff15 	stw	r6,-4(r8)
  8065e0:	203ffa1e 	bne	r4,zero,8065cc <memset+0x9c>
  8065e4:	393fff04 	addi	r4,r7,-4
  8065e8:	2008d0ba 	srli	r4,r4,2
  8065ec:	39c000cc 	andi	r7,r7,3
  8065f0:	21000044 	addi	r4,r4,1
  8065f4:	200890ba 	slli	r4,r4,2
  8065f8:	1907883a 	add	r3,r3,r4
  8065fc:	38000426 	beq	r7,zero,806610 <memset+0xe0>
  806600:	19cf883a 	add	r7,r3,r7
  806604:	18c00044 	addi	r3,r3,1
  806608:	197fffc5 	stb	r5,-1(r3)
  80660c:	38fffd1e 	bne	r7,r3,806604 <memset+0xd4>
  806610:	f800283a 	ret
  806614:	2007883a 	mov	r3,r4
  806618:	300f883a 	mov	r7,r6
  80661c:	003fd306 	br	80656c <memset+0x3c>

00806620 <_Balloc>:
  806620:	20801317 	ldw	r2,76(r4)
  806624:	defffc04 	addi	sp,sp,-16
  806628:	dc400115 	stw	r17,4(sp)
  80662c:	dc000015 	stw	r16,0(sp)
  806630:	dfc00315 	stw	ra,12(sp)
  806634:	dc800215 	stw	r18,8(sp)
  806638:	2021883a 	mov	r16,r4
  80663c:	2823883a 	mov	r17,r5
  806640:	10000e26 	beq	r2,zero,80667c <_Balloc+0x5c>
  806644:	880690ba 	slli	r3,r17,2
  806648:	10c7883a 	add	r3,r2,r3
  80664c:	18800017 	ldw	r2,0(r3)
  806650:	10001126 	beq	r2,zero,806698 <_Balloc+0x78>
  806654:	11000017 	ldw	r4,0(r2)
  806658:	19000015 	stw	r4,0(r3)
  80665c:	10000415 	stw	zero,16(r2)
  806660:	10000315 	stw	zero,12(r2)
  806664:	dfc00317 	ldw	ra,12(sp)
  806668:	dc800217 	ldw	r18,8(sp)
  80666c:	dc400117 	ldw	r17,4(sp)
  806670:	dc000017 	ldw	r16,0(sp)
  806674:	dec00404 	addi	sp,sp,16
  806678:	f800283a 	ret
  80667c:	01800844 	movi	r6,33
  806680:	01400104 	movi	r5,4
  806684:	08094cc0 	call	8094cc <_calloc_r>
  806688:	80801315 	stw	r2,76(r16)
  80668c:	103fed1e 	bne	r2,zero,806644 <_Balloc+0x24>
  806690:	0005883a 	mov	r2,zero
  806694:	003ff306 	br	806664 <_Balloc+0x44>
  806698:	04800044 	movi	r18,1
  80669c:	9464983a 	sll	r18,r18,r17
  8066a0:	01400044 	movi	r5,1
  8066a4:	8009883a 	mov	r4,r16
  8066a8:	91800144 	addi	r6,r18,5
  8066ac:	300c90ba 	slli	r6,r6,2
  8066b0:	08094cc0 	call	8094cc <_calloc_r>
  8066b4:	103ff626 	beq	r2,zero,806690 <_Balloc+0x70>
  8066b8:	14400115 	stw	r17,4(r2)
  8066bc:	14800215 	stw	r18,8(r2)
  8066c0:	003fe606 	br	80665c <_Balloc+0x3c>

008066c4 <_Bfree>:
  8066c4:	28000726 	beq	r5,zero,8066e4 <_Bfree+0x20>
  8066c8:	28c00117 	ldw	r3,4(r5)
  8066cc:	20801317 	ldw	r2,76(r4)
  8066d0:	180690ba 	slli	r3,r3,2
  8066d4:	10c5883a 	add	r2,r2,r3
  8066d8:	10c00017 	ldw	r3,0(r2)
  8066dc:	28c00015 	stw	r3,0(r5)
  8066e0:	11400015 	stw	r5,0(r2)
  8066e4:	f800283a 	ret

008066e8 <__multadd>:
  8066e8:	defffa04 	addi	sp,sp,-24
  8066ec:	dc400115 	stw	r17,4(sp)
  8066f0:	2c400417 	ldw	r17,16(r5)
  8066f4:	dcc00315 	stw	r19,12(sp)
  8066f8:	dc800215 	stw	r18,8(sp)
  8066fc:	dc000015 	stw	r16,0(sp)
  806700:	dfc00515 	stw	ra,20(sp)
  806704:	dd000415 	stw	r20,16(sp)
  806708:	2825883a 	mov	r18,r5
  80670c:	2027883a 	mov	r19,r4
  806710:	3821883a 	mov	r16,r7
  806714:	2a400504 	addi	r9,r5,20
  806718:	0015883a 	mov	r10,zero
  80671c:	48c00017 	ldw	r3,0(r9)
  806720:	4a400104 	addi	r9,r9,4
  806724:	52800044 	addi	r10,r10,1
  806728:	1a3fffcc 	andi	r8,r3,65535
  80672c:	4191383a 	mul	r8,r8,r6
  806730:	180ed43a 	srli	r7,r3,16
  806734:	4407883a 	add	r3,r8,r16
  806738:	1810d43a 	srli	r8,r3,16
  80673c:	398f383a 	mul	r7,r7,r6
  806740:	18ffffcc 	andi	r3,r3,65535
  806744:	3a0f883a 	add	r7,r7,r8
  806748:	3810943a 	slli	r8,r7,16
  80674c:	3820d43a 	srli	r16,r7,16
  806750:	40c7883a 	add	r3,r8,r3
  806754:	48ffff15 	stw	r3,-4(r9)
  806758:	547ff016 	blt	r10,r17,80671c <__multadd+0x34>
  80675c:	80000826 	beq	r16,zero,806780 <__multadd+0x98>
  806760:	90800217 	ldw	r2,8(r18)
  806764:	88800f0e 	bge	r17,r2,8067a4 <__multadd+0xbc>
  806768:	88800144 	addi	r2,r17,5
  80676c:	100490ba 	slli	r2,r2,2
  806770:	8c400044 	addi	r17,r17,1
  806774:	9085883a 	add	r2,r18,r2
  806778:	14000015 	stw	r16,0(r2)
  80677c:	94400415 	stw	r17,16(r18)
  806780:	9005883a 	mov	r2,r18
  806784:	dfc00517 	ldw	ra,20(sp)
  806788:	dd000417 	ldw	r20,16(sp)
  80678c:	dcc00317 	ldw	r19,12(sp)
  806790:	dc800217 	ldw	r18,8(sp)
  806794:	dc400117 	ldw	r17,4(sp)
  806798:	dc000017 	ldw	r16,0(sp)
  80679c:	dec00604 	addi	sp,sp,24
  8067a0:	f800283a 	ret
  8067a4:	91400117 	ldw	r5,4(r18)
  8067a8:	9809883a 	mov	r4,r19
  8067ac:	29400044 	addi	r5,r5,1
  8067b0:	08066200 	call	806620 <_Balloc>
  8067b4:	1029883a 	mov	r20,r2
  8067b8:	10001226 	beq	r2,zero,806804 <__multadd+0x11c>
  8067bc:	91800417 	ldw	r6,16(r18)
  8067c0:	91400304 	addi	r5,r18,12
  8067c4:	11000304 	addi	r4,r2,12
  8067c8:	31800084 	addi	r6,r6,2
  8067cc:	300c90ba 	slli	r6,r6,2
  8067d0:	08063040 	call	806304 <memcpy>
  8067d4:	90000926 	beq	r18,zero,8067fc <__multadd+0x114>
  8067d8:	90c00117 	ldw	r3,4(r18)
  8067dc:	98801317 	ldw	r2,76(r19)
  8067e0:	180690ba 	slli	r3,r3,2
  8067e4:	10c5883a 	add	r2,r2,r3
  8067e8:	10c00017 	ldw	r3,0(r2)
  8067ec:	90c00015 	stw	r3,0(r18)
  8067f0:	14800015 	stw	r18,0(r2)
  8067f4:	a025883a 	mov	r18,r20
  8067f8:	003fdb06 	br	806768 <__multadd+0x80>
  8067fc:	a025883a 	mov	r18,r20
  806800:	003fd906 	br	806768 <__multadd+0x80>
  806804:	01c02074 	movhi	r7,129
  806808:	01002074 	movhi	r4,129
  80680c:	39c04804 	addi	r7,r7,288
  806810:	000d883a 	mov	r6,zero
  806814:	01402d44 	movi	r5,181
  806818:	21005c04 	addi	r4,r4,368
  80681c:	08094540 	call	809454 <__assert_func>

00806820 <__s2b>:
  806820:	defff904 	addi	sp,sp,-28
  806824:	dc800215 	stw	r18,8(sp)
  806828:	dc000015 	stw	r16,0(sp)
  80682c:	2025883a 	mov	r18,r4
  806830:	2821883a 	mov	r16,r5
  806834:	39000204 	addi	r4,r7,8
  806838:	01400244 	movi	r5,9
  80683c:	dcc00315 	stw	r19,12(sp)
  806840:	dc400115 	stw	r17,4(sp)
  806844:	dfc00615 	stw	ra,24(sp)
  806848:	3823883a 	mov	r17,r7
  80684c:	dd400515 	stw	r21,20(sp)
  806850:	dd000415 	stw	r20,16(sp)
  806854:	3027883a 	mov	r19,r6
  806858:	080afb40 	call	80afb4 <__divsi3>
  80685c:	88c00290 	cmplti	r3,r17,10
  806860:	1800341e 	bne	r3,zero,806934 <__s2b+0x114>
  806864:	00c00044 	movi	r3,1
  806868:	000b883a 	mov	r5,zero
  80686c:	18c7883a 	add	r3,r3,r3
  806870:	29400044 	addi	r5,r5,1
  806874:	18bffd16 	blt	r3,r2,80686c <__s2b+0x4c>
  806878:	9009883a 	mov	r4,r18
  80687c:	08066200 	call	806620 <_Balloc>
  806880:	100b883a 	mov	r5,r2
  806884:	10002d26 	beq	r2,zero,80693c <__s2b+0x11c>
  806888:	d8800717 	ldw	r2,28(sp)
  80688c:	28800515 	stw	r2,20(r5)
  806890:	00800044 	movi	r2,1
  806894:	28800415 	stw	r2,16(r5)
  806898:	98800290 	cmplti	r2,r19,10
  80689c:	1000221e 	bne	r2,zero,806928 <__s2b+0x108>
  8068a0:	85400244 	addi	r21,r16,9
  8068a4:	a829883a 	mov	r20,r21
  8068a8:	84e1883a 	add	r16,r16,r19
  8068ac:	a1c00007 	ldb	r7,0(r20)
  8068b0:	01800284 	movi	r6,10
  8068b4:	9009883a 	mov	r4,r18
  8068b8:	39fff404 	addi	r7,r7,-48
  8068bc:	08066e80 	call	8066e8 <__multadd>
  8068c0:	a5000044 	addi	r20,r20,1
  8068c4:	100b883a 	mov	r5,r2
  8068c8:	a43ff81e 	bne	r20,r16,8068ac <__s2b+0x8c>
  8068cc:	9c3ffe04 	addi	r16,r19,-8
  8068d0:	ac21883a 	add	r16,r21,r16
  8068d4:	9c400a0e 	bge	r19,r17,806900 <__s2b+0xe0>
  8068d8:	8ce3c83a 	sub	r17,r17,r19
  8068dc:	8463883a 	add	r17,r16,r17
  8068e0:	81c00007 	ldb	r7,0(r16)
  8068e4:	01800284 	movi	r6,10
  8068e8:	9009883a 	mov	r4,r18
  8068ec:	39fff404 	addi	r7,r7,-48
  8068f0:	08066e80 	call	8066e8 <__multadd>
  8068f4:	84000044 	addi	r16,r16,1
  8068f8:	100b883a 	mov	r5,r2
  8068fc:	8c3ff81e 	bne	r17,r16,8068e0 <__s2b+0xc0>
  806900:	2805883a 	mov	r2,r5
  806904:	dfc00617 	ldw	ra,24(sp)
  806908:	dd400517 	ldw	r21,20(sp)
  80690c:	dd000417 	ldw	r20,16(sp)
  806910:	dcc00317 	ldw	r19,12(sp)
  806914:	dc800217 	ldw	r18,8(sp)
  806918:	dc400117 	ldw	r17,4(sp)
  80691c:	dc000017 	ldw	r16,0(sp)
  806920:	dec00704 	addi	sp,sp,28
  806924:	f800283a 	ret
  806928:	84000284 	addi	r16,r16,10
  80692c:	04c00244 	movi	r19,9
  806930:	003fe806 	br	8068d4 <__s2b+0xb4>
  806934:	000b883a 	mov	r5,zero
  806938:	003fcf06 	br	806878 <__s2b+0x58>
  80693c:	01c02074 	movhi	r7,129
  806940:	01002074 	movhi	r4,129
  806944:	39c04804 	addi	r7,r7,288
  806948:	000d883a 	mov	r6,zero
  80694c:	01403384 	movi	r5,206
  806950:	21005c04 	addi	r4,r4,368
  806954:	08094540 	call	809454 <__assert_func>

00806958 <__hi0bits>:
  806958:	20bfffec 	andhi	r2,r4,65535
  80695c:	1000131e 	bne	r2,zero,8069ac <__hi0bits+0x54>
  806960:	2008943a 	slli	r4,r4,16
  806964:	00800404 	movi	r2,16
  806968:	20ffc02c 	andhi	r3,r4,65280
  80696c:	1800021e 	bne	r3,zero,806978 <__hi0bits+0x20>
  806970:	2008923a 	slli	r4,r4,8
  806974:	10800204 	addi	r2,r2,8
  806978:	20fc002c 	andhi	r3,r4,61440
  80697c:	1800021e 	bne	r3,zero,806988 <__hi0bits+0x30>
  806980:	2008913a 	slli	r4,r4,4
  806984:	10800104 	addi	r2,r2,4
  806988:	20f0002c 	andhi	r3,r4,49152
  80698c:	1800021e 	bne	r3,zero,806998 <__hi0bits+0x40>
  806990:	200890ba 	slli	r4,r4,2
  806994:	10800084 	addi	r2,r2,2
  806998:	20000316 	blt	r4,zero,8069a8 <__hi0bits+0x50>
  80699c:	2110002c 	andhi	r4,r4,16384
  8069a0:	10800044 	addi	r2,r2,1
  8069a4:	20000326 	beq	r4,zero,8069b4 <__hi0bits+0x5c>
  8069a8:	f800283a 	ret
  8069ac:	0005883a 	mov	r2,zero
  8069b0:	003fed06 	br	806968 <__hi0bits+0x10>
  8069b4:	00800804 	movi	r2,32
  8069b8:	f800283a 	ret

008069bc <__lo0bits>:
  8069bc:	20c00017 	ldw	r3,0(r4)
  8069c0:	188001cc 	andi	r2,r3,7
  8069c4:	10000826 	beq	r2,zero,8069e8 <__lo0bits+0x2c>
  8069c8:	1880004c 	andi	r2,r3,1
  8069cc:	10001f1e 	bne	r2,zero,806a4c <__lo0bits+0x90>
  8069d0:	1880008c 	andi	r2,r3,2
  8069d4:	10002126 	beq	r2,zero,806a5c <__lo0bits+0xa0>
  8069d8:	1806d07a 	srli	r3,r3,1
  8069dc:	00800044 	movi	r2,1
  8069e0:	20c00015 	stw	r3,0(r4)
  8069e4:	f800283a 	ret
  8069e8:	18bfffcc 	andi	r2,r3,65535
  8069ec:	10001426 	beq	r2,zero,806a40 <__lo0bits+0x84>
  8069f0:	0005883a 	mov	r2,zero
  8069f4:	19403fcc 	andi	r5,r3,255
  8069f8:	2800021e 	bne	r5,zero,806a04 <__lo0bits+0x48>
  8069fc:	1806d23a 	srli	r3,r3,8
  806a00:	10800204 	addi	r2,r2,8
  806a04:	194003cc 	andi	r5,r3,15
  806a08:	2800021e 	bne	r5,zero,806a14 <__lo0bits+0x58>
  806a0c:	1806d13a 	srli	r3,r3,4
  806a10:	10800104 	addi	r2,r2,4
  806a14:	194000cc 	andi	r5,r3,3
  806a18:	2800021e 	bne	r5,zero,806a24 <__lo0bits+0x68>
  806a1c:	1806d0ba 	srli	r3,r3,2
  806a20:	10800084 	addi	r2,r2,2
  806a24:	1940004c 	andi	r5,r3,1
  806a28:	2800031e 	bne	r5,zero,806a38 <__lo0bits+0x7c>
  806a2c:	1806d07a 	srli	r3,r3,1
  806a30:	10800044 	addi	r2,r2,1
  806a34:	18000726 	beq	r3,zero,806a54 <__lo0bits+0x98>
  806a38:	20c00015 	stw	r3,0(r4)
  806a3c:	f800283a 	ret
  806a40:	1806d43a 	srli	r3,r3,16
  806a44:	00800404 	movi	r2,16
  806a48:	003fea06 	br	8069f4 <__lo0bits+0x38>
  806a4c:	0005883a 	mov	r2,zero
  806a50:	f800283a 	ret
  806a54:	00800804 	movi	r2,32
  806a58:	f800283a 	ret
  806a5c:	1806d0ba 	srli	r3,r3,2
  806a60:	00800084 	movi	r2,2
  806a64:	20c00015 	stw	r3,0(r4)
  806a68:	f800283a 	ret

00806a6c <__i2b>:
  806a6c:	20c01317 	ldw	r3,76(r4)
  806a70:	defffd04 	addi	sp,sp,-12
  806a74:	dc400115 	stw	r17,4(sp)
  806a78:	dc000015 	stw	r16,0(sp)
  806a7c:	dfc00215 	stw	ra,8(sp)
  806a80:	2021883a 	mov	r16,r4
  806a84:	2823883a 	mov	r17,r5
  806a88:	18000d26 	beq	r3,zero,806ac0 <__i2b+0x54>
  806a8c:	18800117 	ldw	r2,4(r3)
  806a90:	10001826 	beq	r2,zero,806af4 <__i2b+0x88>
  806a94:	11000017 	ldw	r4,0(r2)
  806a98:	19000115 	stw	r4,4(r3)
  806a9c:	00c00044 	movi	r3,1
  806aa0:	10000315 	stw	zero,12(r2)
  806aa4:	14400515 	stw	r17,20(r2)
  806aa8:	10c00415 	stw	r3,16(r2)
  806aac:	dfc00217 	ldw	ra,8(sp)
  806ab0:	dc400117 	ldw	r17,4(sp)
  806ab4:	dc000017 	ldw	r16,0(sp)
  806ab8:	dec00304 	addi	sp,sp,12
  806abc:	f800283a 	ret
  806ac0:	01800844 	movi	r6,33
  806ac4:	01400104 	movi	r5,4
  806ac8:	08094cc0 	call	8094cc <_calloc_r>
  806acc:	80801315 	stw	r2,76(r16)
  806ad0:	1007883a 	mov	r3,r2
  806ad4:	103fed1e 	bne	r2,zero,806a8c <__i2b+0x20>
  806ad8:	01c02074 	movhi	r7,129
  806adc:	01002074 	movhi	r4,129
  806ae0:	39c04804 	addi	r7,r7,288
  806ae4:	000d883a 	mov	r6,zero
  806ae8:	01405004 	movi	r5,320
  806aec:	21005c04 	addi	r4,r4,368
  806af0:	08094540 	call	809454 <__assert_func>
  806af4:	01800704 	movi	r6,28
  806af8:	01400044 	movi	r5,1
  806afc:	8009883a 	mov	r4,r16
  806b00:	08094cc0 	call	8094cc <_calloc_r>
  806b04:	103ff426 	beq	r2,zero,806ad8 <__i2b+0x6c>
  806b08:	00c00044 	movi	r3,1
  806b0c:	10c00115 	stw	r3,4(r2)
  806b10:	00c00084 	movi	r3,2
  806b14:	10c00215 	stw	r3,8(r2)
  806b18:	003fe006 	br	806a9c <__i2b+0x30>

00806b1c <__multiply>:
  806b1c:	defff804 	addi	sp,sp,-32
  806b20:	dd400515 	stw	r21,20(sp)
  806b24:	dd000415 	stw	r20,16(sp)
  806b28:	35400417 	ldw	r21,16(r6)
  806b2c:	2d000417 	ldw	r20,16(r5)
  806b30:	dd800615 	stw	r22,24(sp)
  806b34:	dcc00315 	stw	r19,12(sp)
  806b38:	dfc00715 	stw	ra,28(sp)
  806b3c:	dc800215 	stw	r18,8(sp)
  806b40:	dc400115 	stw	r17,4(sp)
  806b44:	dc000015 	stw	r16,0(sp)
  806b48:	282d883a 	mov	r22,r5
  806b4c:	3027883a 	mov	r19,r6
  806b50:	a5400516 	blt	r20,r21,806b68 <__multiply+0x4c>
  806b54:	a807883a 	mov	r3,r21
  806b58:	2827883a 	mov	r19,r5
  806b5c:	a02b883a 	mov	r21,r20
  806b60:	302d883a 	mov	r22,r6
  806b64:	1829883a 	mov	r20,r3
  806b68:	98800217 	ldw	r2,8(r19)
  806b6c:	ad23883a 	add	r17,r21,r20
  806b70:	99400117 	ldw	r5,4(r19)
  806b74:	1440010e 	bge	r2,r17,806b7c <__multiply+0x60>
  806b78:	29400044 	addi	r5,r5,1
  806b7c:	08066200 	call	806620 <_Balloc>
  806b80:	1025883a 	mov	r18,r2
  806b84:	10007326 	beq	r2,zero,806d54 <__multiply+0x238>
  806b88:	882090ba 	slli	r16,r17,2
  806b8c:	11000504 	addi	r4,r2,20
  806b90:	2421883a 	add	r16,r4,r16
  806b94:	2400082e 	bgeu	r4,r16,806bb8 <__multiply+0x9c>
  806b98:	808dc83a 	sub	r6,r16,r2
  806b9c:	31bffac4 	addi	r6,r6,-21
  806ba0:	300cd0ba 	srli	r6,r6,2
  806ba4:	000b883a 	mov	r5,zero
  806ba8:	31800044 	addi	r6,r6,1
  806bac:	300c90ba 	slli	r6,r6,2
  806bb0:	08065300 	call	806530 <memset>
  806bb4:	1009883a 	mov	r4,r2
  806bb8:	a01290ba 	slli	r9,r20,2
  806bbc:	a80e90ba 	slli	r7,r21,2
  806bc0:	b0800504 	addi	r2,r22,20
  806bc4:	9a800504 	addi	r10,r19,20
  806bc8:	1253883a 	add	r9,r2,r9
  806bcc:	51cf883a 	add	r7,r10,r7
  806bd0:	12404b2e 	bgeu	r2,r9,806d00 <__multiply+0x1e4>
  806bd4:	98c00544 	addi	r3,r19,21
  806bd8:	38c05c36 	bltu	r7,r3,806d4c <__multiply+0x230>
  806bdc:	3cd1c83a 	sub	r8,r7,r19
  806be0:	423ffac4 	addi	r8,r8,-21
  806be4:	4010d0ba 	srli	r8,r8,2
  806be8:	42000044 	addi	r8,r8,1
  806bec:	401090ba 	slli	r8,r8,2
  806bf0:	00000506 	br	806c08 <__multiply+0xec>
  806bf4:	6018d43a 	srli	r12,r12,16
  806bf8:	6000231e 	bne	r12,zero,806c88 <__multiply+0x16c>
  806bfc:	10800104 	addi	r2,r2,4
  806c00:	21000104 	addi	r4,r4,4
  806c04:	12403e2e 	bgeu	r2,r9,806d00 <__multiply+0x1e4>
  806c08:	13000017 	ldw	r12,0(r2)
  806c0c:	63bfffcc 	andi	r14,r12,65535
  806c10:	703ff826 	beq	r14,zero,806bf4 <__multiply+0xd8>
  806c14:	201b883a 	mov	r13,r4
  806c18:	5019883a 	mov	r12,r10
  806c1c:	001f883a 	mov	r15,zero
  806c20:	61400017 	ldw	r5,0(r12)
  806c24:	6ac00017 	ldw	r11,0(r13)
  806c28:	6b400104 	addi	r13,r13,4
  806c2c:	29bfffcc 	andi	r6,r5,65535
  806c30:	338d383a 	mul	r6,r6,r14
  806c34:	2806d43a 	srli	r3,r5,16
  806c38:	597fffcc 	andi	r5,r11,65535
  806c3c:	314d883a 	add	r6,r6,r5
  806c40:	33cd883a 	add	r6,r6,r15
  806c44:	1b87383a 	mul	r3,r3,r14
  806c48:	5816d43a 	srli	r11,r11,16
  806c4c:	300ad43a 	srli	r5,r6,16
  806c50:	31bfffcc 	andi	r6,r6,65535
  806c54:	1ac7883a 	add	r3,r3,r11
  806c58:	1947883a 	add	r3,r3,r5
  806c5c:	180a943a 	slli	r5,r3,16
  806c60:	63000104 	addi	r12,r12,4
  806c64:	181ed43a 	srli	r15,r3,16
  806c68:	298cb03a 	or	r6,r5,r6
  806c6c:	69bfff15 	stw	r6,-4(r13)
  806c70:	61ffeb36 	bltu	r12,r7,806c20 <__multiply+0x104>
  806c74:	2207883a 	add	r3,r4,r8
  806c78:	1bc00015 	stw	r15,0(r3)
  806c7c:	13000017 	ldw	r12,0(r2)
  806c80:	6018d43a 	srli	r12,r12,16
  806c84:	603fdd26 	beq	r12,zero,806bfc <__multiply+0xe0>
  806c88:	20c00017 	ldw	r3,0(r4)
  806c8c:	201b883a 	mov	r13,r4
  806c90:	5017883a 	mov	r11,r10
  806c94:	181d883a 	mov	r14,r3
  806c98:	001f883a 	mov	r15,zero
  806c9c:	5980000b 	ldhu	r6,0(r11)
  806ca0:	703ed43a 	srli	ra,r14,16
  806ca4:	197fffcc 	andi	r5,r3,65535
  806ca8:	3307383a 	mul	r3,r6,r12
  806cac:	5ac00104 	addi	r11,r11,4
  806cb0:	6b800117 	ldw	r14,4(r13)
  806cb4:	1fc7883a 	add	r3,r3,ra
  806cb8:	1bc7883a 	add	r3,r3,r15
  806cbc:	181e943a 	slli	r15,r3,16
  806cc0:	180cd43a 	srli	r6,r3,16
  806cc4:	77ffffcc 	andi	ra,r14,65535
  806cc8:	794ab03a 	or	r5,r15,r5
  806ccc:	69400015 	stw	r5,0(r13)
  806cd0:	58ffff8b 	ldhu	r3,-2(r11)
  806cd4:	6b400104 	addi	r13,r13,4
  806cd8:	1b07383a 	mul	r3,r3,r12
  806cdc:	1fc7883a 	add	r3,r3,ra
  806ce0:	1987883a 	add	r3,r3,r6
  806ce4:	181ed43a 	srli	r15,r3,16
  806ce8:	59ffec36 	bltu	r11,r7,806c9c <__multiply+0x180>
  806cec:	220b883a 	add	r5,r4,r8
  806cf0:	28c00015 	stw	r3,0(r5)
  806cf4:	10800104 	addi	r2,r2,4
  806cf8:	21000104 	addi	r4,r4,4
  806cfc:	127fc236 	bltu	r2,r9,806c08 <__multiply+0xec>
  806d00:	04400316 	blt	zero,r17,806d10 <__multiply+0x1f4>
  806d04:	00000506 	br	806d1c <__multiply+0x200>
  806d08:	8c7fffc4 	addi	r17,r17,-1
  806d0c:	88000326 	beq	r17,zero,806d1c <__multiply+0x200>
  806d10:	80bfff17 	ldw	r2,-4(r16)
  806d14:	843fff04 	addi	r16,r16,-4
  806d18:	103ffb26 	beq	r2,zero,806d08 <__multiply+0x1ec>
  806d1c:	9005883a 	mov	r2,r18
  806d20:	94400415 	stw	r17,16(r18)
  806d24:	dfc00717 	ldw	ra,28(sp)
  806d28:	dd800617 	ldw	r22,24(sp)
  806d2c:	dd400517 	ldw	r21,20(sp)
  806d30:	dd000417 	ldw	r20,16(sp)
  806d34:	dcc00317 	ldw	r19,12(sp)
  806d38:	dc800217 	ldw	r18,8(sp)
  806d3c:	dc400117 	ldw	r17,4(sp)
  806d40:	dc000017 	ldw	r16,0(sp)
  806d44:	dec00804 	addi	sp,sp,32
  806d48:	f800283a 	ret
  806d4c:	02000104 	movi	r8,4
  806d50:	003fad06 	br	806c08 <__multiply+0xec>
  806d54:	01c02074 	movhi	r7,129
  806d58:	01002074 	movhi	r4,129
  806d5c:	39c04804 	addi	r7,r7,288
  806d60:	000d883a 	mov	r6,zero
  806d64:	01405744 	movi	r5,349
  806d68:	21005c04 	addi	r4,r4,368
  806d6c:	08094540 	call	809454 <__assert_func>

00806d70 <__pow5mult>:
  806d70:	defffb04 	addi	sp,sp,-20
  806d74:	dcc00315 	stw	r19,12(sp)
  806d78:	dc000015 	stw	r16,0(sp)
  806d7c:	dfc00415 	stw	ra,16(sp)
  806d80:	dc800215 	stw	r18,8(sp)
  806d84:	dc400115 	stw	r17,4(sp)
  806d88:	308000cc 	andi	r2,r6,3
  806d8c:	3021883a 	mov	r16,r6
  806d90:	2027883a 	mov	r19,r4
  806d94:	10002d1e 	bne	r2,zero,806e4c <__pow5mult+0xdc>
  806d98:	2825883a 	mov	r18,r5
  806d9c:	8021d0ba 	srai	r16,r16,2
  806da0:	80001926 	beq	r16,zero,806e08 <__pow5mult+0x98>
  806da4:	9c401217 	ldw	r17,72(r19)
  806da8:	8800061e 	bne	r17,zero,806dc4 <__pow5mult+0x54>
  806dac:	00002f06 	br	806e6c <__pow5mult+0xfc>
  806db0:	8021d07a 	srai	r16,r16,1
  806db4:	80001426 	beq	r16,zero,806e08 <__pow5mult+0x98>
  806db8:	88800017 	ldw	r2,0(r17)
  806dbc:	10001a26 	beq	r2,zero,806e28 <__pow5mult+0xb8>
  806dc0:	1023883a 	mov	r17,r2
  806dc4:	8080004c 	andi	r2,r16,1
  806dc8:	103ff926 	beq	r2,zero,806db0 <__pow5mult+0x40>
  806dcc:	880d883a 	mov	r6,r17
  806dd0:	900b883a 	mov	r5,r18
  806dd4:	9809883a 	mov	r4,r19
  806dd8:	0806b1c0 	call	806b1c <__multiply>
  806ddc:	90001926 	beq	r18,zero,806e44 <__pow5mult+0xd4>
  806de0:	91000117 	ldw	r4,4(r18)
  806de4:	98c01317 	ldw	r3,76(r19)
  806de8:	8021d07a 	srai	r16,r16,1
  806dec:	200890ba 	slli	r4,r4,2
  806df0:	1907883a 	add	r3,r3,r4
  806df4:	19000017 	ldw	r4,0(r3)
  806df8:	91000015 	stw	r4,0(r18)
  806dfc:	1c800015 	stw	r18,0(r3)
  806e00:	1025883a 	mov	r18,r2
  806e04:	803fec1e 	bne	r16,zero,806db8 <__pow5mult+0x48>
  806e08:	9005883a 	mov	r2,r18
  806e0c:	dfc00417 	ldw	ra,16(sp)
  806e10:	dcc00317 	ldw	r19,12(sp)
  806e14:	dc800217 	ldw	r18,8(sp)
  806e18:	dc400117 	ldw	r17,4(sp)
  806e1c:	dc000017 	ldw	r16,0(sp)
  806e20:	dec00504 	addi	sp,sp,20
  806e24:	f800283a 	ret
  806e28:	880d883a 	mov	r6,r17
  806e2c:	880b883a 	mov	r5,r17
  806e30:	9809883a 	mov	r4,r19
  806e34:	0806b1c0 	call	806b1c <__multiply>
  806e38:	88800015 	stw	r2,0(r17)
  806e3c:	10000015 	stw	zero,0(r2)
  806e40:	003fdf06 	br	806dc0 <__pow5mult+0x50>
  806e44:	1025883a 	mov	r18,r2
  806e48:	003fd906 	br	806db0 <__pow5mult+0x40>
  806e4c:	100490ba 	slli	r2,r2,2
  806e50:	00c02074 	movhi	r3,129
  806e54:	000f883a 	mov	r7,zero
  806e58:	10c7883a 	add	r3,r2,r3
  806e5c:	19806a17 	ldw	r6,424(r3)
  806e60:	08066e80 	call	8066e8 <__multadd>
  806e64:	1025883a 	mov	r18,r2
  806e68:	003fcc06 	br	806d9c <__pow5mult+0x2c>
  806e6c:	01400044 	movi	r5,1
  806e70:	9809883a 	mov	r4,r19
  806e74:	08066200 	call	806620 <_Balloc>
  806e78:	1023883a 	mov	r17,r2
  806e7c:	10000726 	beq	r2,zero,806e9c <__pow5mult+0x12c>
  806e80:	00809c44 	movi	r2,625
  806e84:	88800515 	stw	r2,20(r17)
  806e88:	00800044 	movi	r2,1
  806e8c:	88800415 	stw	r2,16(r17)
  806e90:	9c401215 	stw	r17,72(r19)
  806e94:	88000015 	stw	zero,0(r17)
  806e98:	003fca06 	br	806dc4 <__pow5mult+0x54>
  806e9c:	01c02074 	movhi	r7,129
  806ea0:	01002074 	movhi	r4,129
  806ea4:	39c04804 	addi	r7,r7,288
  806ea8:	000d883a 	mov	r6,zero
  806eac:	01405004 	movi	r5,320
  806eb0:	21005c04 	addi	r4,r4,368
  806eb4:	08094540 	call	809454 <__assert_func>

00806eb8 <__lshift>:
  806eb8:	defff804 	addi	sp,sp,-32
  806ebc:	dd800615 	stw	r22,24(sp)
  806ec0:	dc000015 	stw	r16,0(sp)
  806ec4:	302dd17a 	srai	r22,r6,5
  806ec8:	2c000417 	ldw	r16,16(r5)
  806ecc:	28800217 	ldw	r2,8(r5)
  806ed0:	dd000415 	stw	r20,16(sp)
  806ed4:	b421883a 	add	r16,r22,r16
  806ed8:	dcc00315 	stw	r19,12(sp)
  806edc:	dc800215 	stw	r18,8(sp)
  806ee0:	dc400115 	stw	r17,4(sp)
  806ee4:	dfc00715 	stw	ra,28(sp)
  806ee8:	dd400515 	stw	r21,20(sp)
  806eec:	85000044 	addi	r20,r16,1
  806ef0:	2827883a 	mov	r19,r5
  806ef4:	3025883a 	mov	r18,r6
  806ef8:	29400117 	ldw	r5,4(r5)
  806efc:	2023883a 	mov	r17,r4
  806f00:	1500030e 	bge	r2,r20,806f10 <__lshift+0x58>
  806f04:	1085883a 	add	r2,r2,r2
  806f08:	29400044 	addi	r5,r5,1
  806f0c:	153ffd16 	blt	r2,r20,806f04 <__lshift+0x4c>
  806f10:	8809883a 	mov	r4,r17
  806f14:	08066200 	call	806620 <_Balloc>
  806f18:	102b883a 	mov	r21,r2
  806f1c:	10004126 	beq	r2,zero,807024 <__lshift+0x16c>
  806f20:	11000504 	addi	r4,r2,20
  806f24:	0580050e 	bge	zero,r22,806f3c <__lshift+0x84>
  806f28:	b02c90ba 	slli	r22,r22,2
  806f2c:	000b883a 	mov	r5,zero
  806f30:	b00d883a 	mov	r6,r22
  806f34:	08065300 	call	806530 <memset>
  806f38:	1589883a 	add	r4,r2,r22
  806f3c:	9a000417 	ldw	r8,16(r19)
  806f40:	98c00504 	addi	r3,r19,20
  806f44:	948007cc 	andi	r18,r18,31
  806f48:	401090ba 	slli	r8,r8,2
  806f4c:	1a11883a 	add	r8,r3,r8
  806f50:	90002c26 	beq	r18,zero,807004 <__lshift+0x14c>
  806f54:	01400804 	movi	r5,32
  806f58:	2c8bc83a 	sub	r5,r5,r18
  806f5c:	2005883a 	mov	r2,r4
  806f60:	000f883a 	mov	r7,zero
  806f64:	19800017 	ldw	r6,0(r3)
  806f68:	10800104 	addi	r2,r2,4
  806f6c:	18c00104 	addi	r3,r3,4
  806f70:	348c983a 	sll	r6,r6,r18
  806f74:	31ccb03a 	or	r6,r6,r7
  806f78:	11bfff15 	stw	r6,-4(r2)
  806f7c:	19bfff17 	ldw	r6,-4(r3)
  806f80:	314ed83a 	srl	r7,r6,r5
  806f84:	1a3ff736 	bltu	r3,r8,806f64 <__lshift+0xac>
  806f88:	98800544 	addi	r2,r19,21
  806f8c:	40802336 	bltu	r8,r2,80701c <__lshift+0x164>
  806f90:	44c7c83a 	sub	r3,r8,r19
  806f94:	18fffac4 	addi	r3,r3,-21
  806f98:	1806d0ba 	srli	r3,r3,2
  806f9c:	18c00044 	addi	r3,r3,1
  806fa0:	180690ba 	slli	r3,r3,2
  806fa4:	20c9883a 	add	r4,r4,r3
  806fa8:	21c00015 	stw	r7,0(r4)
  806fac:	38000126 	beq	r7,zero,806fb4 <__lshift+0xfc>
  806fb0:	a021883a 	mov	r16,r20
  806fb4:	ac000415 	stw	r16,16(r21)
  806fb8:	98000726 	beq	r19,zero,806fd8 <__lshift+0x120>
  806fbc:	98c00117 	ldw	r3,4(r19)
  806fc0:	88801317 	ldw	r2,76(r17)
  806fc4:	180690ba 	slli	r3,r3,2
  806fc8:	10c5883a 	add	r2,r2,r3
  806fcc:	10c00017 	ldw	r3,0(r2)
  806fd0:	98c00015 	stw	r3,0(r19)
  806fd4:	14c00015 	stw	r19,0(r2)
  806fd8:	a805883a 	mov	r2,r21
  806fdc:	dfc00717 	ldw	ra,28(sp)
  806fe0:	dd800617 	ldw	r22,24(sp)
  806fe4:	dd400517 	ldw	r21,20(sp)
  806fe8:	dd000417 	ldw	r20,16(sp)
  806fec:	dcc00317 	ldw	r19,12(sp)
  806ff0:	dc800217 	ldw	r18,8(sp)
  806ff4:	dc400117 	ldw	r17,4(sp)
  806ff8:	dc000017 	ldw	r16,0(sp)
  806ffc:	dec00804 	addi	sp,sp,32
  807000:	f800283a 	ret
  807004:	18800017 	ldw	r2,0(r3)
  807008:	18c00104 	addi	r3,r3,4
  80700c:	21000104 	addi	r4,r4,4
  807010:	20bfff15 	stw	r2,-4(r4)
  807014:	1a3ffb36 	bltu	r3,r8,807004 <__lshift+0x14c>
  807018:	003fe606 	br	806fb4 <__lshift+0xfc>
  80701c:	00c00104 	movi	r3,4
  807020:	003fe006 	br	806fa4 <__lshift+0xec>
  807024:	01c02074 	movhi	r7,129
  807028:	01002074 	movhi	r4,129
  80702c:	39c04804 	addi	r7,r7,288
  807030:	000d883a 	mov	r6,zero
  807034:	01407644 	movi	r5,473
  807038:	21005c04 	addi	r4,r4,368
  80703c:	08094540 	call	809454 <__assert_func>

00807040 <__mcmp>:
  807040:	21800417 	ldw	r6,16(r4)
  807044:	28c00417 	ldw	r3,16(r5)
  807048:	30c5c83a 	sub	r2,r6,r3
  80704c:	30c00e1e 	bne	r6,r3,807088 <__mcmp+0x48>
  807050:	180690ba 	slli	r3,r3,2
  807054:	21c00504 	addi	r7,r4,20
  807058:	29400504 	addi	r5,r5,20
  80705c:	38c9883a 	add	r4,r7,r3
  807060:	28c7883a 	add	r3,r5,r3
  807064:	00000106 	br	80706c <__mcmp+0x2c>
  807068:	3900082e 	bgeu	r7,r4,80708c <__mcmp+0x4c>
  80706c:	21bfff17 	ldw	r6,-4(r4)
  807070:	197fff17 	ldw	r5,-4(r3)
  807074:	213fff04 	addi	r4,r4,-4
  807078:	18ffff04 	addi	r3,r3,-4
  80707c:	317ffa26 	beq	r6,r5,807068 <__mcmp+0x28>
  807080:	3140032e 	bgeu	r6,r5,807090 <__mcmp+0x50>
  807084:	00bfffc4 	movi	r2,-1
  807088:	f800283a 	ret
  80708c:	f800283a 	ret
  807090:	00800044 	movi	r2,1
  807094:	f800283a 	ret

00807098 <__mdiff>:
  807098:	28800417 	ldw	r2,16(r5)
  80709c:	30c00417 	ldw	r3,16(r6)
  8070a0:	defffc04 	addi	sp,sp,-16
  8070a4:	dc800215 	stw	r18,8(sp)
  8070a8:	dc400115 	stw	r17,4(sp)
  8070ac:	dc000015 	stw	r16,0(sp)
  8070b0:	dfc00315 	stw	ra,12(sp)
  8070b4:	2823883a 	mov	r17,r5
  8070b8:	3021883a 	mov	r16,r6
  8070bc:	10e5c83a 	sub	r18,r2,r3
  8070c0:	10c0641e 	bne	r2,r3,807254 <__mdiff+0x1bc>
  8070c4:	180c90ba 	slli	r6,r3,2
  8070c8:	29400504 	addi	r5,r5,20
  8070cc:	80c00504 	addi	r3,r16,20
  8070d0:	2985883a 	add	r2,r5,r6
  8070d4:	1987883a 	add	r3,r3,r6
  8070d8:	00000106 	br	8070e0 <__mdiff+0x48>
  8070dc:	2880642e 	bgeu	r5,r2,807270 <__mdiff+0x1d8>
  8070e0:	11bfff17 	ldw	r6,-4(r2)
  8070e4:	19ffff17 	ldw	r7,-4(r3)
  8070e8:	10bfff04 	addi	r2,r2,-4
  8070ec:	18ffff04 	addi	r3,r3,-4
  8070f0:	31fffa26 	beq	r6,r7,8070dc <__mdiff+0x44>
  8070f4:	31c05236 	bltu	r6,r7,807240 <__mdiff+0x1a8>
  8070f8:	89400117 	ldw	r5,4(r17)
  8070fc:	08066200 	call	806620 <_Balloc>
  807100:	10006226 	beq	r2,zero,80728c <__mdiff+0x1f4>
  807104:	8a400417 	ldw	r9,16(r17)
  807108:	83000417 	ldw	r12,16(r16)
  80710c:	8ac00504 	addi	r11,r17,20
  807110:	481090ba 	slli	r8,r9,2
  807114:	601890ba 	slli	r12,r12,2
  807118:	81800504 	addi	r6,r16,20
  80711c:	13400504 	addi	r13,r2,20
  807120:	14800315 	stw	r18,12(r2)
  807124:	5a11883a 	add	r8,r11,r8
  807128:	3319883a 	add	r12,r6,r12
  80712c:	681d883a 	mov	r14,r13
  807130:	5815883a 	mov	r10,r11
  807134:	0007883a 	mov	r3,zero
  807138:	51000017 	ldw	r4,0(r10)
  80713c:	31c00017 	ldw	r7,0(r6)
  807140:	73800104 	addi	r14,r14,4
  807144:	217fffcc 	andi	r5,r4,65535
  807148:	28cb883a 	add	r5,r5,r3
  80714c:	38ffffcc 	andi	r3,r7,65535
  807150:	28cbc83a 	sub	r5,r5,r3
  807154:	380ed43a 	srli	r7,r7,16
  807158:	2006d43a 	srli	r3,r4,16
  80715c:	2809d43a 	srai	r4,r5,16
  807160:	297fffcc 	andi	r5,r5,65535
  807164:	19c7c83a 	sub	r3,r3,r7
  807168:	1907883a 	add	r3,r3,r4
  80716c:	1808943a 	slli	r4,r3,16
  807170:	31800104 	addi	r6,r6,4
  807174:	1807d43a 	srai	r3,r3,16
  807178:	214ab03a 	or	r5,r4,r5
  80717c:	717fff15 	stw	r5,-4(r14)
  807180:	52800104 	addi	r10,r10,4
  807184:	333fec36 	bltu	r6,r12,807138 <__mdiff+0xa0>
  807188:	640fc83a 	sub	r7,r12,r16
  80718c:	39fffac4 	addi	r7,r7,-21
  807190:	84000544 	addi	r16,r16,21
  807194:	380ed0ba 	srli	r7,r7,2
  807198:	64003336 	bltu	r12,r16,807268 <__mdiff+0x1d0>
  80719c:	380890ba 	slli	r4,r7,2
  8071a0:	6909883a 	add	r4,r13,r4
  8071a4:	64002e36 	bltu	r12,r16,807260 <__mdiff+0x1c8>
  8071a8:	39800044 	addi	r6,r7,1
  8071ac:	300c90ba 	slli	r6,r6,2
  8071b0:	5997883a 	add	r11,r11,r6
  8071b4:	699b883a 	add	r13,r13,r6
  8071b8:	5a00152e 	bgeu	r11,r8,807210 <__mdiff+0x178>
  8071bc:	680f883a 	mov	r7,r13
  8071c0:	580d883a 	mov	r6,r11
  8071c4:	31000017 	ldw	r4,0(r6)
  8071c8:	39c00104 	addi	r7,r7,4
  8071cc:	31800104 	addi	r6,r6,4
  8071d0:	217fffcc 	andi	r5,r4,65535
  8071d4:	28cb883a 	add	r5,r5,r3
  8071d8:	2815d43a 	srai	r10,r5,16
  8071dc:	2006d43a 	srli	r3,r4,16
  8071e0:	297fffcc 	andi	r5,r5,65535
  8071e4:	1a87883a 	add	r3,r3,r10
  8071e8:	1814943a 	slli	r10,r3,16
  8071ec:	1807d43a 	srai	r3,r3,16
  8071f0:	514ab03a 	or	r5,r10,r5
  8071f4:	397fff15 	stw	r5,-4(r7)
  8071f8:	323ff236 	bltu	r6,r8,8071c4 <__mdiff+0x12c>
  8071fc:	413fffc4 	addi	r4,r8,-1
  807200:	22c9c83a 	sub	r4,r4,r11
  807204:	2008d0ba 	srli	r4,r4,2
  807208:	200890ba 	slli	r4,r4,2
  80720c:	6909883a 	add	r4,r13,r4
  807210:	2800041e 	bne	r5,zero,807224 <__mdiff+0x18c>
  807214:	20ffff17 	ldw	r3,-4(r4)
  807218:	4a7fffc4 	addi	r9,r9,-1
  80721c:	213fff04 	addi	r4,r4,-4
  807220:	183ffc26 	beq	r3,zero,807214 <__mdiff+0x17c>
  807224:	12400415 	stw	r9,16(r2)
  807228:	dfc00317 	ldw	ra,12(sp)
  80722c:	dc800217 	ldw	r18,8(sp)
  807230:	dc400117 	ldw	r17,4(sp)
  807234:	dc000017 	ldw	r16,0(sp)
  807238:	dec00404 	addi	sp,sp,16
  80723c:	f800283a 	ret
  807240:	8805883a 	mov	r2,r17
  807244:	04800044 	movi	r18,1
  807248:	8023883a 	mov	r17,r16
  80724c:	1021883a 	mov	r16,r2
  807250:	003fa906 	br	8070f8 <__mdiff+0x60>
  807254:	903ffa16 	blt	r18,zero,807240 <__mdiff+0x1a8>
  807258:	0025883a 	mov	r18,zero
  80725c:	003fa606 	br	8070f8 <__mdiff+0x60>
  807260:	01800104 	movi	r6,4
  807264:	003fd206 	br	8071b0 <__mdiff+0x118>
  807268:	0009883a 	mov	r4,zero
  80726c:	003fcc06 	br	8071a0 <__mdiff+0x108>
  807270:	000b883a 	mov	r5,zero
  807274:	08066200 	call	806620 <_Balloc>
  807278:	10000b26 	beq	r2,zero,8072a8 <__mdiff+0x210>
  80727c:	00c00044 	movi	r3,1
  807280:	10c00415 	stw	r3,16(r2)
  807284:	10000515 	stw	zero,20(r2)
  807288:	003fe706 	br	807228 <__mdiff+0x190>
  80728c:	01c02074 	movhi	r7,129
  807290:	01002074 	movhi	r4,129
  807294:	39c04804 	addi	r7,r7,288
  807298:	000d883a 	mov	r6,zero
  80729c:	01409004 	movi	r5,576
  8072a0:	21005c04 	addi	r4,r4,368
  8072a4:	08094540 	call	809454 <__assert_func>
  8072a8:	01c02074 	movhi	r7,129
  8072ac:	01002074 	movhi	r4,129
  8072b0:	39c04804 	addi	r7,r7,288
  8072b4:	000d883a 	mov	r6,zero
  8072b8:	01408c84 	movi	r5,562
  8072bc:	21005c04 	addi	r4,r4,368
  8072c0:	08094540 	call	809454 <__assert_func>

008072c4 <__ulp>:
  8072c4:	28dffc2c 	andhi	r3,r5,32752
  8072c8:	017f3034 	movhi	r5,64704
  8072cc:	1947883a 	add	r3,r3,r5
  8072d0:	00c0020e 	bge	zero,r3,8072dc <__ulp+0x18>
  8072d4:	0005883a 	mov	r2,zero
  8072d8:	f800283a 	ret
  8072dc:	00c7c83a 	sub	r3,zero,r3
  8072e0:	1807d53a 	srai	r3,r3,20
  8072e4:	18800508 	cmpgei	r2,r3,20
  8072e8:	1000041e 	bne	r2,zero,8072fc <__ulp+0x38>
  8072ec:	00800234 	movhi	r2,8
  8072f0:	10c7d83a 	sra	r3,r2,r3
  8072f4:	0005883a 	mov	r2,zero
  8072f8:	f800283a 	ret
  8072fc:	193ffb04 	addi	r4,r3,-20
  807300:	208007c8 	cmpgei	r2,r4,31
  807304:	0007883a 	mov	r3,zero
  807308:	1000031e 	bne	r2,zero,807318 <__ulp+0x54>
  80730c:	00a00034 	movhi	r2,32768
  807310:	1104d83a 	srl	r2,r2,r4
  807314:	f800283a 	ret
  807318:	00800044 	movi	r2,1
  80731c:	f800283a 	ret

00807320 <__b2d>:
  807320:	defffa04 	addi	sp,sp,-24
  807324:	dc400115 	stw	r17,4(sp)
  807328:	24400417 	ldw	r17,16(r4)
  80732c:	dc000015 	stw	r16,0(sp)
  807330:	24000504 	addi	r16,r4,20
  807334:	882290ba 	slli	r17,r17,2
  807338:	dc800215 	stw	r18,8(sp)
  80733c:	dd000415 	stw	r20,16(sp)
  807340:	8463883a 	add	r17,r16,r17
  807344:	8cbfff17 	ldw	r18,-4(r17)
  807348:	dcc00315 	stw	r19,12(sp)
  80734c:	dfc00515 	stw	ra,20(sp)
  807350:	9009883a 	mov	r4,r18
  807354:	2827883a 	mov	r19,r5
  807358:	08069580 	call	806958 <__hi0bits>
  80735c:	00c00804 	movi	r3,32
  807360:	1889c83a 	sub	r4,r3,r2
  807364:	99000015 	stw	r4,0(r19)
  807368:	110002c8 	cmpgei	r4,r2,11
  80736c:	8d3fff04 	addi	r20,r17,-4
  807370:	20002026 	beq	r4,zero,8073f4 <__b2d+0xd4>
  807374:	10bffd44 	addi	r2,r2,-11
  807378:	85000e2e 	bgeu	r16,r20,8073b4 <__b2d+0x94>
  80737c:	897ffe17 	ldw	r5,-8(r17)
  807380:	10001226 	beq	r2,zero,8073cc <__b2d+0xac>
  807384:	1889c83a 	sub	r4,r3,r2
  807388:	90a4983a 	sll	r18,r18,r2
  80738c:	2906d83a 	srl	r3,r5,r4
  807390:	89bffe04 	addi	r6,r17,-8
  807394:	2884983a 	sll	r2,r5,r2
  807398:	90e4b03a 	or	r18,r18,r3
  80739c:	90cffc34 	orhi	r3,r18,16368
  8073a0:	81800c2e 	bgeu	r16,r6,8073d4 <__b2d+0xb4>
  8073a4:	897ffd17 	ldw	r5,-12(r17)
  8073a8:	2908d83a 	srl	r4,r5,r4
  8073ac:	1104b03a 	or	r2,r2,r4
  8073b0:	00000806 	br	8073d4 <__b2d+0xb4>
  8073b4:	10000426 	beq	r2,zero,8073c8 <__b2d+0xa8>
  8073b8:	90a4983a 	sll	r18,r18,r2
  8073bc:	0005883a 	mov	r2,zero
  8073c0:	90cffc34 	orhi	r3,r18,16368
  8073c4:	00000306 	br	8073d4 <__b2d+0xb4>
  8073c8:	000b883a 	mov	r5,zero
  8073cc:	90cffc34 	orhi	r3,r18,16368
  8073d0:	2805883a 	mov	r2,r5
  8073d4:	dfc00517 	ldw	ra,20(sp)
  8073d8:	dd000417 	ldw	r20,16(sp)
  8073dc:	dcc00317 	ldw	r19,12(sp)
  8073e0:	dc800217 	ldw	r18,8(sp)
  8073e4:	dc400117 	ldw	r17,4(sp)
  8073e8:	dc000017 	ldw	r16,0(sp)
  8073ec:	dec00604 	addi	sp,sp,24
  8073f0:	f800283a 	ret
  8073f4:	014002c4 	movi	r5,11
  8073f8:	2889c83a 	sub	r4,r5,r2
  8073fc:	9106d83a 	srl	r3,r18,r4
  807400:	18cffc34 	orhi	r3,r3,16368
  807404:	85000536 	bltu	r16,r20,80741c <__b2d+0xfc>
  807408:	000b883a 	mov	r5,zero
  80740c:	10800544 	addi	r2,r2,21
  807410:	9084983a 	sll	r2,r18,r2
  807414:	1144b03a 	or	r2,r2,r5
  807418:	003fee06 	br	8073d4 <__b2d+0xb4>
  80741c:	897ffe17 	ldw	r5,-8(r17)
  807420:	290ad83a 	srl	r5,r5,r4
  807424:	003ff906 	br	80740c <__b2d+0xec>

00807428 <__d2b>:
  807428:	defff804 	addi	sp,sp,-32
  80742c:	dd000615 	stw	r20,24(sp)
  807430:	2829883a 	mov	r20,r5
  807434:	01400044 	movi	r5,1
  807438:	dcc00515 	stw	r19,20(sp)
  80743c:	dc000215 	stw	r16,8(sp)
  807440:	dfc00715 	stw	ra,28(sp)
  807444:	dc800415 	stw	r18,16(sp)
  807448:	dc400315 	stw	r17,12(sp)
  80744c:	3021883a 	mov	r16,r6
  807450:	3827883a 	mov	r19,r7
  807454:	08066200 	call	806620 <_Balloc>
  807458:	10004526 	beq	r2,zero,807570 <__d2b+0x148>
  80745c:	8024d53a 	srli	r18,r16,20
  807460:	01800434 	movhi	r6,16
  807464:	31bfffc4 	addi	r6,r6,-1
  807468:	9481ffcc 	andi	r18,r18,2047
  80746c:	1023883a 	mov	r17,r2
  807470:	81a0703a 	and	r16,r16,r6
  807474:	90000126 	beq	r18,zero,80747c <__d2b+0x54>
  807478:	84000434 	orhi	r16,r16,16
  80747c:	dc000115 	stw	r16,4(sp)
  807480:	a0002226 	beq	r20,zero,80750c <__d2b+0xe4>
  807484:	d809883a 	mov	r4,sp
  807488:	dd000015 	stw	r20,0(sp)
  80748c:	08069bc0 	call	8069bc <__lo0bits>
  807490:	d8c00117 	ldw	r3,4(sp)
  807494:	10003326 	beq	r2,zero,807564 <__d2b+0x13c>
  807498:	01000804 	movi	r4,32
  80749c:	2089c83a 	sub	r4,r4,r2
  8074a0:	1908983a 	sll	r4,r3,r4
  8074a4:	d9400017 	ldw	r5,0(sp)
  8074a8:	1886d83a 	srl	r3,r3,r2
  8074ac:	2148b03a 	or	r4,r4,r5
  8074b0:	89000515 	stw	r4,20(r17)
  8074b4:	d8c00115 	stw	r3,4(sp)
  8074b8:	88c00615 	stw	r3,24(r17)
  8074bc:	1800271e 	bne	r3,zero,80755c <__d2b+0x134>
  8074c0:	04000044 	movi	r16,1
  8074c4:	8c000415 	stw	r16,16(r17)
  8074c8:	90001926 	beq	r18,zero,807530 <__d2b+0x108>
  8074cc:	00c00d44 	movi	r3,53
  8074d0:	94bef344 	addi	r18,r18,-1075
  8074d4:	90a5883a 	add	r18,r18,r2
  8074d8:	1885c83a 	sub	r2,r3,r2
  8074dc:	d8c00817 	ldw	r3,32(sp)
  8074e0:	9c800015 	stw	r18,0(r19)
  8074e4:	18800015 	stw	r2,0(r3)
  8074e8:	8805883a 	mov	r2,r17
  8074ec:	dfc00717 	ldw	ra,28(sp)
  8074f0:	dd000617 	ldw	r20,24(sp)
  8074f4:	dcc00517 	ldw	r19,20(sp)
  8074f8:	dc800417 	ldw	r18,16(sp)
  8074fc:	dc400317 	ldw	r17,12(sp)
  807500:	dc000217 	ldw	r16,8(sp)
  807504:	dec00804 	addi	sp,sp,32
  807508:	f800283a 	ret
  80750c:	d9000104 	addi	r4,sp,4
  807510:	08069bc0 	call	8069bc <__lo0bits>
  807514:	00c00044 	movi	r3,1
  807518:	88c00415 	stw	r3,16(r17)
  80751c:	d8c00117 	ldw	r3,4(sp)
  807520:	10800804 	addi	r2,r2,32
  807524:	04000044 	movi	r16,1
  807528:	88c00515 	stw	r3,20(r17)
  80752c:	903fe71e 	bne	r18,zero,8074cc <__d2b+0xa4>
  807530:	800690ba 	slli	r3,r16,2
  807534:	10bef384 	addi	r2,r2,-1074
  807538:	98800015 	stw	r2,0(r19)
  80753c:	88c5883a 	add	r2,r17,r3
  807540:	11000417 	ldw	r4,16(r2)
  807544:	8020917a 	slli	r16,r16,5
  807548:	08069580 	call	806958 <__hi0bits>
  80754c:	80a1c83a 	sub	r16,r16,r2
  807550:	d8800817 	ldw	r2,32(sp)
  807554:	14000015 	stw	r16,0(r2)
  807558:	003fe306 	br	8074e8 <__d2b+0xc0>
  80755c:	04000084 	movi	r16,2
  807560:	003fd806 	br	8074c4 <__d2b+0x9c>
  807564:	d9000017 	ldw	r4,0(sp)
  807568:	89000515 	stw	r4,20(r17)
  80756c:	003fd206 	br	8074b8 <__d2b+0x90>
  807570:	01c02074 	movhi	r7,129
  807574:	01002074 	movhi	r4,129
  807578:	39c04804 	addi	r7,r7,288
  80757c:	000d883a 	mov	r6,zero
  807580:	0140c284 	movi	r5,778
  807584:	21005c04 	addi	r4,r4,368
  807588:	08094540 	call	809454 <__assert_func>

0080758c <__ratio>:
  80758c:	defff904 	addi	sp,sp,-28
  807590:	dc400315 	stw	r17,12(sp)
  807594:	2823883a 	mov	r17,r5
  807598:	d80b883a 	mov	r5,sp
  80759c:	dfc00615 	stw	ra,24(sp)
  8075a0:	dcc00515 	stw	r19,20(sp)
  8075a4:	dc800415 	stw	r18,16(sp)
  8075a8:	2027883a 	mov	r19,r4
  8075ac:	dc000215 	stw	r16,8(sp)
  8075b0:	08073200 	call	807320 <__b2d>
  8075b4:	d9400104 	addi	r5,sp,4
  8075b8:	8809883a 	mov	r4,r17
  8075bc:	1025883a 	mov	r18,r2
  8075c0:	1821883a 	mov	r16,r3
  8075c4:	08073200 	call	807320 <__b2d>
  8075c8:	89000417 	ldw	r4,16(r17)
  8075cc:	9a000417 	ldw	r8,16(r19)
  8075d0:	d9400117 	ldw	r5,4(sp)
  8075d4:	100d883a 	mov	r6,r2
  8075d8:	4111c83a 	sub	r8,r8,r4
  8075dc:	d9000017 	ldw	r4,0(sp)
  8075e0:	4010917a 	slli	r8,r8,5
  8075e4:	180f883a 	mov	r7,r3
  8075e8:	2149c83a 	sub	r4,r4,r5
  8075ec:	4111883a 	add	r8,r8,r4
  8075f0:	02000c0e 	bge	zero,r8,807624 <__ratio+0x98>
  8075f4:	4010953a 	slli	r8,r8,20
  8075f8:	4421883a 	add	r16,r8,r16
  8075fc:	9009883a 	mov	r4,r18
  807600:	800b883a 	mov	r5,r16
  807604:	080ba580 	call	80ba58 <__divdf3>
  807608:	dfc00617 	ldw	ra,24(sp)
  80760c:	dcc00517 	ldw	r19,20(sp)
  807610:	dc800417 	ldw	r18,16(sp)
  807614:	dc400317 	ldw	r17,12(sp)
  807618:	dc000217 	ldw	r16,8(sp)
  80761c:	dec00704 	addi	sp,sp,28
  807620:	f800283a 	ret
  807624:	00bffc34 	movhi	r2,65520
  807628:	4091383a 	mul	r8,r8,r2
  80762c:	40cf883a 	add	r7,r8,r3
  807630:	003ff206 	br	8075fc <__ratio+0x70>

00807634 <_mprec_log10>:
  807634:	defffe04 	addi	sp,sp,-8
  807638:	dc000015 	stw	r16,0(sp)
  80763c:	dfc00115 	stw	ra,4(sp)
  807640:	20800608 	cmpgei	r2,r4,24
  807644:	2021883a 	mov	r16,r4
  807648:	10000f26 	beq	r2,zero,807688 <_mprec_log10+0x54>
  80764c:	0009883a 	mov	r4,zero
  807650:	014ffc34 	movhi	r5,16368
  807654:	000d883a 	mov	r6,zero
  807658:	01d00934 	movhi	r7,16420
  80765c:	080c5040 	call	80c504 <__muldf3>
  807660:	843fffc4 	addi	r16,r16,-1
  807664:	1009883a 	mov	r4,r2
  807668:	180b883a 	mov	r5,r3
  80766c:	803ff91e 	bne	r16,zero,807654 <_mprec_log10+0x20>
  807670:	2005883a 	mov	r2,r4
  807674:	2807883a 	mov	r3,r5
  807678:	dfc00117 	ldw	ra,4(sp)
  80767c:	dc000017 	ldw	r16,0(sp)
  807680:	dec00204 	addi	sp,sp,8
  807684:	f800283a 	ret
  807688:	202090fa 	slli	r16,r4,3
  80768c:	00802074 	movhi	r2,129
  807690:	10808204 	addi	r2,r2,520
  807694:	1421883a 	add	r16,r2,r16
  807698:	81000017 	ldw	r4,0(r16)
  80769c:	81400117 	ldw	r5,4(r16)
  8076a0:	003ff306 	br	807670 <_mprec_log10+0x3c>

008076a4 <__copybits>:
  8076a4:	297fffc4 	addi	r5,r5,-1
  8076a8:	280fd17a 	srai	r7,r5,5
  8076ac:	31400417 	ldw	r5,16(r6)
  8076b0:	30800504 	addi	r2,r6,20
  8076b4:	39c00044 	addi	r7,r7,1
  8076b8:	280a90ba 	slli	r5,r5,2
  8076bc:	380e90ba 	slli	r7,r7,2
  8076c0:	114b883a 	add	r5,r2,r5
  8076c4:	21cf883a 	add	r7,r4,r7
  8076c8:	11400c2e 	bgeu	r2,r5,8076fc <__copybits+0x58>
  8076cc:	2007883a 	mov	r3,r4
  8076d0:	12000017 	ldw	r8,0(r2)
  8076d4:	10800104 	addi	r2,r2,4
  8076d8:	18c00104 	addi	r3,r3,4
  8076dc:	1a3fff15 	stw	r8,-4(r3)
  8076e0:	117ffb36 	bltu	r2,r5,8076d0 <__copybits+0x2c>
  8076e4:	2985c83a 	sub	r2,r5,r6
  8076e8:	10bffac4 	addi	r2,r2,-21
  8076ec:	1004d0ba 	srli	r2,r2,2
  8076f0:	10800044 	addi	r2,r2,1
  8076f4:	100490ba 	slli	r2,r2,2
  8076f8:	2089883a 	add	r4,r4,r2
  8076fc:	21c0072e 	bgeu	r4,r7,80771c <__copybits+0x78>
  807700:	39bfffc4 	addi	r6,r7,-1
  807704:	310dc83a 	sub	r6,r6,r4
  807708:	300cd0ba 	srli	r6,r6,2
  80770c:	000b883a 	mov	r5,zero
  807710:	31800044 	addi	r6,r6,1
  807714:	300c90ba 	slli	r6,r6,2
  807718:	08065301 	jmpi	806530 <memset>
  80771c:	f800283a 	ret

00807720 <__any_on>:
  807720:	20c00417 	ldw	r3,16(r4)
  807724:	280dd17a 	srai	r6,r5,5
  807728:	21000504 	addi	r4,r4,20
  80772c:	1980080e 	bge	r3,r6,807750 <__any_on+0x30>
  807730:	180490ba 	slli	r2,r3,2
  807734:	2085883a 	add	r2,r4,r2
  807738:	20800f2e 	bgeu	r4,r2,807778 <__any_on+0x58>
  80773c:	10ffff17 	ldw	r3,-4(r2)
  807740:	10bfff04 	addi	r2,r2,-4
  807744:	183ffc26 	beq	r3,zero,807738 <__any_on+0x18>
  807748:	00800044 	movi	r2,1
  80774c:	f800283a 	ret
  807750:	300490ba 	slli	r2,r6,2
  807754:	2085883a 	add	r2,r4,r2
  807758:	30fff70e 	bge	r6,r3,807738 <__any_on+0x18>
  80775c:	294007cc 	andi	r5,r5,31
  807760:	283ff526 	beq	r5,zero,807738 <__any_on+0x18>
  807764:	11800017 	ldw	r6,0(r2)
  807768:	3146d83a 	srl	r3,r6,r5
  80776c:	194a983a 	sll	r5,r3,r5
  807770:	317ff51e 	bne	r6,r5,807748 <__any_on+0x28>
  807774:	003ff006 	br	807738 <__any_on+0x18>
  807778:	0005883a 	mov	r2,zero
  80777c:	f800283a 	ret

00807780 <_realloc_r>:
  807780:	defff504 	addi	sp,sp,-44
  807784:	dc800315 	stw	r18,12(sp)
  807788:	dfc00a15 	stw	ra,40(sp)
  80778c:	df000915 	stw	fp,36(sp)
  807790:	ddc00815 	stw	r23,32(sp)
  807794:	dd800715 	stw	r22,28(sp)
  807798:	dd400615 	stw	r21,24(sp)
  80779c:	dd000515 	stw	r20,20(sp)
  8077a0:	dcc00415 	stw	r19,16(sp)
  8077a4:	dc400215 	stw	r17,8(sp)
  8077a8:	dc000115 	stw	r16,4(sp)
  8077ac:	3025883a 	mov	r18,r6
  8077b0:	28008b26 	beq	r5,zero,8079e0 <_realloc_r+0x260>
  8077b4:	2821883a 	mov	r16,r5
  8077b8:	2027883a 	mov	r19,r4
  8077bc:	944002c4 	addi	r17,r18,11
  8077c0:	080dd840 	call	80dd84 <__malloc_lock>
  8077c4:	888005f0 	cmpltui	r2,r17,23
  8077c8:	1000521e 	bne	r2,zero,807914 <_realloc_r+0x194>
  8077cc:	017ffe04 	movi	r5,-8
  8077d0:	8962703a 	and	r17,r17,r5
  8077d4:	8807883a 	mov	r3,r17
  8077d8:	88005116 	blt	r17,zero,807920 <_realloc_r+0x1a0>
  8077dc:	8c805036 	bltu	r17,r18,807920 <_realloc_r+0x1a0>
  8077e0:	80bfff17 	ldw	r2,-4(r16)
  8077e4:	017fff04 	movi	r5,-4
  8077e8:	857ffe04 	addi	r21,r16,-8
  8077ec:	1168703a 	and	r20,r2,r5
  8077f0:	ad2d883a 	add	r22,r21,r20
  8077f4:	a0c0390e 	bge	r20,r3,8078dc <_realloc_r+0x15c>
  8077f8:	07002074 	movhi	fp,129
  8077fc:	e7028504 	addi	fp,fp,2580
  807800:	e2000217 	ldw	r8,8(fp)
  807804:	b1000117 	ldw	r4,4(r22)
  807808:	45808e26 	beq	r8,r22,807a44 <_realloc_r+0x2c4>
  80780c:	01bfff84 	movi	r6,-2
  807810:	218c703a 	and	r6,r4,r6
  807814:	b18d883a 	add	r6,r22,r6
  807818:	31800117 	ldw	r6,4(r6)
  80781c:	3180004c 	andi	r6,r6,1
  807820:	30004f1e 	bne	r6,zero,807960 <_realloc_r+0x1e0>
  807824:	2148703a 	and	r4,r4,r5
  807828:	a10b883a 	add	r5,r20,r4
  80782c:	28c0bf0e 	bge	r5,r3,807b2c <_realloc_r+0x3ac>
  807830:	1080004c 	andi	r2,r2,1
  807834:	10004c1e 	bne	r2,zero,807968 <_realloc_r+0x1e8>
  807838:	81fffe17 	ldw	r7,-8(r16)
  80783c:	00bfff04 	movi	r2,-4
  807840:	a9cfc83a 	sub	r7,r21,r7
  807844:	39400117 	ldw	r5,4(r7)
  807848:	288a703a 	and	r5,r5,r2
  80784c:	b0000426 	beq	r22,zero,807860 <_realloc_r+0xe0>
  807850:	a16f883a 	add	r23,r20,r5
  807854:	b92f883a 	add	r23,r23,r4
  807858:	4580bf26 	beq	r8,r22,807b58 <_realloc_r+0x3d8>
  80785c:	b8c0930e 	bge	r23,r3,807aac <_realloc_r+0x32c>
  807860:	38004126 	beq	r7,zero,807968 <_realloc_r+0x1e8>
  807864:	a16f883a 	add	r23,r20,r5
  807868:	b8c03f16 	blt	r23,r3,807968 <_realloc_r+0x1e8>
  80786c:	38800317 	ldw	r2,12(r7)
  807870:	38c00217 	ldw	r3,8(r7)
  807874:	a1bfff04 	addi	r6,r20,-4
  807878:	31400968 	cmpgeui	r5,r6,37
  80787c:	18800315 	stw	r2,12(r3)
  807880:	10c00215 	stw	r3,8(r2)
  807884:	39000204 	addi	r4,r7,8
  807888:	3ded883a 	add	r22,r7,r23
  80788c:	2800941e 	bne	r5,zero,807ae0 <_realloc_r+0x360>
  807890:	30800530 	cmpltui	r2,r6,20
  807894:	80c00017 	ldw	r3,0(r16)
  807898:	1000df1e 	bne	r2,zero,807c18 <_realloc_r+0x498>
  80789c:	38c00215 	stw	r3,8(r7)
  8078a0:	80c00117 	ldw	r3,4(r16)
  8078a4:	30800728 	cmpgeui	r2,r6,28
  8078a8:	38c00315 	stw	r3,12(r7)
  8078ac:	1000dc1e 	bne	r2,zero,807c20 <_realloc_r+0x4a0>
  8078b0:	80c00217 	ldw	r3,8(r16)
  8078b4:	38800404 	addi	r2,r7,16
  8078b8:	84000204 	addi	r16,r16,8
  8078bc:	10c00015 	stw	r3,0(r2)
  8078c0:	80c00117 	ldw	r3,4(r16)
  8078c4:	b829883a 	mov	r20,r23
  8078c8:	382b883a 	mov	r21,r7
  8078cc:	10c00115 	stw	r3,4(r2)
  8078d0:	80c00217 	ldw	r3,8(r16)
  8078d4:	2021883a 	mov	r16,r4
  8078d8:	10c00215 	stw	r3,8(r2)
  8078dc:	a9800117 	ldw	r6,4(r21)
  8078e0:	a445c83a 	sub	r2,r20,r17
  8078e4:	10c00430 	cmpltui	r3,r2,16
  8078e8:	3180004c 	andi	r6,r6,1
  8078ec:	18004926 	beq	r3,zero,807a14 <_realloc_r+0x294>
  8078f0:	a18cb03a 	or	r6,r20,r6
  8078f4:	a9800115 	stw	r6,4(r21)
  8078f8:	b0800117 	ldw	r2,4(r22)
  8078fc:	10800054 	ori	r2,r2,1
  807900:	b0800115 	stw	r2,4(r22)
  807904:	9809883a 	mov	r4,r19
  807908:	080dda80 	call	80dda8 <__malloc_unlock>
  80790c:	8025883a 	mov	r18,r16
  807910:	00000606 	br	80792c <_realloc_r+0x1ac>
  807914:	04400404 	movi	r17,16
  807918:	00c00404 	movi	r3,16
  80791c:	8cbfb02e 	bgeu	r17,r18,8077e0 <_realloc_r+0x60>
  807920:	00800304 	movi	r2,12
  807924:	98800015 	stw	r2,0(r19)
  807928:	0025883a 	mov	r18,zero
  80792c:	9005883a 	mov	r2,r18
  807930:	dfc00a17 	ldw	ra,40(sp)
  807934:	df000917 	ldw	fp,36(sp)
  807938:	ddc00817 	ldw	r23,32(sp)
  80793c:	dd800717 	ldw	r22,28(sp)
  807940:	dd400617 	ldw	r21,24(sp)
  807944:	dd000517 	ldw	r20,20(sp)
  807948:	dcc00417 	ldw	r19,16(sp)
  80794c:	dc800317 	ldw	r18,12(sp)
  807950:	dc400217 	ldw	r17,8(sp)
  807954:	dc000117 	ldw	r16,4(sp)
  807958:	dec00b04 	addi	sp,sp,44
  80795c:	f800283a 	ret
  807960:	1080004c 	andi	r2,r2,1
  807964:	10006c26 	beq	r2,zero,807b18 <_realloc_r+0x398>
  807968:	900b883a 	mov	r5,r18
  80796c:	9809883a 	mov	r4,r19
  807970:	0805a540 	call	805a54 <_malloc_r>
  807974:	1025883a 	mov	r18,r2
  807978:	10001626 	beq	r2,zero,8079d4 <_realloc_r+0x254>
  80797c:	80bfff17 	ldw	r2,-4(r16)
  807980:	013fff84 	movi	r4,-2
  807984:	90fffe04 	addi	r3,r18,-8
  807988:	1104703a 	and	r2,r2,r4
  80798c:	a885883a 	add	r2,r21,r2
  807990:	10c05b26 	beq	r2,r3,807b00 <_realloc_r+0x380>
  807994:	a1bfff04 	addi	r6,r20,-4
  807998:	30800968 	cmpgeui	r2,r6,37
  80799c:	10006a1e 	bne	r2,zero,807b48 <_realloc_r+0x3c8>
  8079a0:	30800530 	cmpltui	r2,r6,20
  8079a4:	81000017 	ldw	r4,0(r16)
  8079a8:	10003726 	beq	r2,zero,807a88 <_realloc_r+0x308>
  8079ac:	9005883a 	mov	r2,r18
  8079b0:	8007883a 	mov	r3,r16
  8079b4:	11000015 	stw	r4,0(r2)
  8079b8:	19000117 	ldw	r4,4(r3)
  8079bc:	11000115 	stw	r4,4(r2)
  8079c0:	18c00217 	ldw	r3,8(r3)
  8079c4:	10c00215 	stw	r3,8(r2)
  8079c8:	800b883a 	mov	r5,r16
  8079cc:	9809883a 	mov	r4,r19
  8079d0:	0804ef80 	call	804ef8 <_free_r>
  8079d4:	9809883a 	mov	r4,r19
  8079d8:	080dda80 	call	80dda8 <__malloc_unlock>
  8079dc:	003fd306 	br	80792c <_realloc_r+0x1ac>
  8079e0:	300b883a 	mov	r5,r6
  8079e4:	dfc00a17 	ldw	ra,40(sp)
  8079e8:	df000917 	ldw	fp,36(sp)
  8079ec:	ddc00817 	ldw	r23,32(sp)
  8079f0:	dd800717 	ldw	r22,28(sp)
  8079f4:	dd400617 	ldw	r21,24(sp)
  8079f8:	dd000517 	ldw	r20,20(sp)
  8079fc:	dcc00417 	ldw	r19,16(sp)
  807a00:	dc800317 	ldw	r18,12(sp)
  807a04:	dc400217 	ldw	r17,8(sp)
  807a08:	dc000117 	ldw	r16,4(sp)
  807a0c:	dec00b04 	addi	sp,sp,44
  807a10:	0805a541 	jmpi	805a54 <_malloc_r>
  807a14:	344cb03a 	or	r6,r6,r17
  807a18:	a9800115 	stw	r6,4(r21)
  807a1c:	ac4b883a 	add	r5,r21,r17
  807a20:	10800054 	ori	r2,r2,1
  807a24:	28800115 	stw	r2,4(r5)
  807a28:	b0800117 	ldw	r2,4(r22)
  807a2c:	29400204 	addi	r5,r5,8
  807a30:	9809883a 	mov	r4,r19
  807a34:	10800054 	ori	r2,r2,1
  807a38:	b0800115 	stw	r2,4(r22)
  807a3c:	0804ef80 	call	804ef8 <_free_r>
  807a40:	003fb006 	br	807904 <_realloc_r+0x184>
  807a44:	2148703a 	and	r4,r4,r5
  807a48:	a10b883a 	add	r5,r20,r4
  807a4c:	89800404 	addi	r6,r17,16
  807a50:	29bf7716 	blt	r5,r6,807830 <_realloc_r+0xb0>
  807a54:	ac6b883a 	add	r21,r21,r17
  807a58:	2c45c83a 	sub	r2,r5,r17
  807a5c:	e5400215 	stw	r21,8(fp)
  807a60:	10800054 	ori	r2,r2,1
  807a64:	a8800115 	stw	r2,4(r21)
  807a68:	80bfff17 	ldw	r2,-4(r16)
  807a6c:	9809883a 	mov	r4,r19
  807a70:	8025883a 	mov	r18,r16
  807a74:	1080004c 	andi	r2,r2,1
  807a78:	1462b03a 	or	r17,r2,r17
  807a7c:	847fff15 	stw	r17,-4(r16)
  807a80:	080dda80 	call	80dda8 <__malloc_unlock>
  807a84:	003fa906 	br	80792c <_realloc_r+0x1ac>
  807a88:	91000015 	stw	r4,0(r18)
  807a8c:	80c00117 	ldw	r3,4(r16)
  807a90:	30800728 	cmpgeui	r2,r6,28
  807a94:	90c00115 	stw	r3,4(r18)
  807a98:	1000551e 	bne	r2,zero,807bf0 <_realloc_r+0x470>
  807a9c:	81000217 	ldw	r4,8(r16)
  807aa0:	80c00204 	addi	r3,r16,8
  807aa4:	90800204 	addi	r2,r18,8
  807aa8:	003fc206 	br	8079b4 <_realloc_r+0x234>
  807aac:	b0800317 	ldw	r2,12(r22)
  807ab0:	b0c00217 	ldw	r3,8(r22)
  807ab4:	a1bfff04 	addi	r6,r20,-4
  807ab8:	31400968 	cmpgeui	r5,r6,37
  807abc:	18800315 	stw	r2,12(r3)
  807ac0:	10c00215 	stw	r3,8(r2)
  807ac4:	38c00217 	ldw	r3,8(r7)
  807ac8:	38800317 	ldw	r2,12(r7)
  807acc:	39000204 	addi	r4,r7,8
  807ad0:	3ded883a 	add	r22,r7,r23
  807ad4:	18800315 	stw	r2,12(r3)
  807ad8:	10c00215 	stw	r3,8(r2)
  807adc:	283f6c26 	beq	r5,zero,807890 <_realloc_r+0x110>
  807ae0:	800b883a 	mov	r5,r16
  807ae4:	d9c00015 	stw	r7,0(sp)
  807ae8:	08064040 	call	806404 <memmove>
  807aec:	d9c00017 	ldw	r7,0(sp)
  807af0:	1021883a 	mov	r16,r2
  807af4:	b829883a 	mov	r20,r23
  807af8:	382b883a 	mov	r21,r7
  807afc:	003f7706 	br	8078dc <_realloc_r+0x15c>
  807b00:	90bfff17 	ldw	r2,-4(r18)
  807b04:	00ffff04 	movi	r3,-4
  807b08:	10c4703a 	and	r2,r2,r3
  807b0c:	a0a9883a 	add	r20,r20,r2
  807b10:	ad2d883a 	add	r22,r21,r20
  807b14:	003f7106 	br	8078dc <_realloc_r+0x15c>
  807b18:	81fffe17 	ldw	r7,-8(r16)
  807b1c:	a9cfc83a 	sub	r7,r21,r7
  807b20:	38800117 	ldw	r2,4(r7)
  807b24:	114a703a 	and	r5,r2,r5
  807b28:	003f4d06 	br	807860 <_realloc_r+0xe0>
  807b2c:	b0800317 	ldw	r2,12(r22)
  807b30:	b0c00217 	ldw	r3,8(r22)
  807b34:	2829883a 	mov	r20,r5
  807b38:	a96d883a 	add	r22,r21,r5
  807b3c:	18800315 	stw	r2,12(r3)
  807b40:	10c00215 	stw	r3,8(r2)
  807b44:	003f6506 	br	8078dc <_realloc_r+0x15c>
  807b48:	800b883a 	mov	r5,r16
  807b4c:	9009883a 	mov	r4,r18
  807b50:	08064040 	call	806404 <memmove>
  807b54:	003f9c06 	br	8079c8 <_realloc_r+0x248>
  807b58:	88800404 	addi	r2,r17,16
  807b5c:	b8bf4016 	blt	r23,r2,807860 <_realloc_r+0xe0>
  807b60:	38800317 	ldw	r2,12(r7)
  807b64:	38c00217 	ldw	r3,8(r7)
  807b68:	a1bfff04 	addi	r6,r20,-4
  807b6c:	31000968 	cmpgeui	r4,r6,37
  807b70:	18800315 	stw	r2,12(r3)
  807b74:	10c00215 	stw	r3,8(r2)
  807b78:	3c800204 	addi	r18,r7,8
  807b7c:	20003b1e 	bne	r4,zero,807c6c <_realloc_r+0x4ec>
  807b80:	30800530 	cmpltui	r2,r6,20
  807b84:	80c00017 	ldw	r3,0(r16)
  807b88:	1000361e 	bne	r2,zero,807c64 <_realloc_r+0x4e4>
  807b8c:	38c00215 	stw	r3,8(r7)
  807b90:	80c00117 	ldw	r3,4(r16)
  807b94:	30800728 	cmpgeui	r2,r6,28
  807b98:	38c00315 	stw	r3,12(r7)
  807b9c:	1000401e 	bne	r2,zero,807ca0 <_realloc_r+0x520>
  807ba0:	80c00217 	ldw	r3,8(r16)
  807ba4:	38800404 	addi	r2,r7,16
  807ba8:	84000204 	addi	r16,r16,8
  807bac:	10c00015 	stw	r3,0(r2)
  807bb0:	80c00117 	ldw	r3,4(r16)
  807bb4:	10c00115 	stw	r3,4(r2)
  807bb8:	80c00217 	ldw	r3,8(r16)
  807bbc:	10c00215 	stw	r3,8(r2)
  807bc0:	3c47883a 	add	r3,r7,r17
  807bc4:	bc45c83a 	sub	r2,r23,r17
  807bc8:	e0c00215 	stw	r3,8(fp)
  807bcc:	10800054 	ori	r2,r2,1
  807bd0:	18800115 	stw	r2,4(r3)
  807bd4:	38800117 	ldw	r2,4(r7)
  807bd8:	9809883a 	mov	r4,r19
  807bdc:	1080004c 	andi	r2,r2,1
  807be0:	1462b03a 	or	r17,r2,r17
  807be4:	3c400115 	stw	r17,4(r7)
  807be8:	080dda80 	call	80dda8 <__malloc_unlock>
  807bec:	003f4f06 	br	80792c <_realloc_r+0x1ac>
  807bf0:	80800217 	ldw	r2,8(r16)
  807bf4:	31800920 	cmpeqi	r6,r6,36
  807bf8:	90800215 	stw	r2,8(r18)
  807bfc:	80800317 	ldw	r2,12(r16)
  807c00:	90800315 	stw	r2,12(r18)
  807c04:	81000417 	ldw	r4,16(r16)
  807c08:	30000f1e 	bne	r6,zero,807c48 <_realloc_r+0x4c8>
  807c0c:	80c00404 	addi	r3,r16,16
  807c10:	90800404 	addi	r2,r18,16
  807c14:	003f6706 	br	8079b4 <_realloc_r+0x234>
  807c18:	2005883a 	mov	r2,r4
  807c1c:	003f2706 	br	8078bc <_realloc_r+0x13c>
  807c20:	80800217 	ldw	r2,8(r16)
  807c24:	31800920 	cmpeqi	r6,r6,36
  807c28:	38800415 	stw	r2,16(r7)
  807c2c:	80800317 	ldw	r2,12(r16)
  807c30:	38800515 	stw	r2,20(r7)
  807c34:	80c00417 	ldw	r3,16(r16)
  807c38:	3000121e 	bne	r6,zero,807c84 <_realloc_r+0x504>
  807c3c:	38800604 	addi	r2,r7,24
  807c40:	84000404 	addi	r16,r16,16
  807c44:	003f1d06 	br	8078bc <_realloc_r+0x13c>
  807c48:	91000415 	stw	r4,16(r18)
  807c4c:	81000517 	ldw	r4,20(r16)
  807c50:	80c00604 	addi	r3,r16,24
  807c54:	90800604 	addi	r2,r18,24
  807c58:	91000515 	stw	r4,20(r18)
  807c5c:	81000617 	ldw	r4,24(r16)
  807c60:	003f5406 	br	8079b4 <_realloc_r+0x234>
  807c64:	9005883a 	mov	r2,r18
  807c68:	003fd006 	br	807bac <_realloc_r+0x42c>
  807c6c:	800b883a 	mov	r5,r16
  807c70:	9009883a 	mov	r4,r18
  807c74:	d9c00015 	stw	r7,0(sp)
  807c78:	08064040 	call	806404 <memmove>
  807c7c:	d9c00017 	ldw	r7,0(sp)
  807c80:	003fcf06 	br	807bc0 <_realloc_r+0x440>
  807c84:	84000604 	addi	r16,r16,24
  807c88:	38c00615 	stw	r3,24(r7)
  807c8c:	80ffff17 	ldw	r3,-4(r16)
  807c90:	38800804 	addi	r2,r7,32
  807c94:	38c00715 	stw	r3,28(r7)
  807c98:	80c00017 	ldw	r3,0(r16)
  807c9c:	003f0706 	br	8078bc <_realloc_r+0x13c>
  807ca0:	80800217 	ldw	r2,8(r16)
  807ca4:	31800920 	cmpeqi	r6,r6,36
  807ca8:	38800415 	stw	r2,16(r7)
  807cac:	80800317 	ldw	r2,12(r16)
  807cb0:	38800515 	stw	r2,20(r7)
  807cb4:	80c00417 	ldw	r3,16(r16)
  807cb8:	3000031e 	bne	r6,zero,807cc8 <_realloc_r+0x548>
  807cbc:	38800604 	addi	r2,r7,24
  807cc0:	84000404 	addi	r16,r16,16
  807cc4:	003fb906 	br	807bac <_realloc_r+0x42c>
  807cc8:	84000604 	addi	r16,r16,24
  807ccc:	38c00615 	stw	r3,24(r7)
  807cd0:	80ffff17 	ldw	r3,-4(r16)
  807cd4:	38800804 	addi	r2,r7,32
  807cd8:	38c00715 	stw	r3,28(r7)
  807cdc:	80c00017 	ldw	r3,0(r16)
  807ce0:	003fb206 	br	807bac <_realloc_r+0x42c>

00807ce4 <_sbrk_r>:
  807ce4:	defffe04 	addi	sp,sp,-8
  807ce8:	dc000015 	stw	r16,0(sp)
  807cec:	00802074 	movhi	r2,129
  807cf0:	2021883a 	mov	r16,r4
  807cf4:	2809883a 	mov	r4,r5
  807cf8:	dfc00115 	stw	ra,4(sp)
  807cfc:	100f6b15 	stw	zero,15788(r2)
  807d00:	080df5c0 	call	80df5c <sbrk>
  807d04:	10ffffd8 	cmpnei	r3,r2,-1
  807d08:	18000426 	beq	r3,zero,807d1c <_sbrk_r+0x38>
  807d0c:	dfc00117 	ldw	ra,4(sp)
  807d10:	dc000017 	ldw	r16,0(sp)
  807d14:	dec00204 	addi	sp,sp,8
  807d18:	f800283a 	ret
  807d1c:	00c02074 	movhi	r3,129
  807d20:	18cf6b17 	ldw	r3,15788(r3)
  807d24:	183ff926 	beq	r3,zero,807d0c <_sbrk_r+0x28>
  807d28:	80c00015 	stw	r3,0(r16)
  807d2c:	dfc00117 	ldw	ra,4(sp)
  807d30:	dc000017 	ldw	r16,0(sp)
  807d34:	dec00204 	addi	sp,sp,8
  807d38:	f800283a 	ret

00807d3c <__sread>:
  807d3c:	defffe04 	addi	sp,sp,-8
  807d40:	dc000015 	stw	r16,0(sp)
  807d44:	2821883a 	mov	r16,r5
  807d48:	2940038f 	ldh	r5,14(r5)
  807d4c:	dfc00115 	stw	ra,4(sp)
  807d50:	0809bd80 	call	809bd8 <_read_r>
  807d54:	10000716 	blt	r2,zero,807d74 <__sread+0x38>
  807d58:	80c01417 	ldw	r3,80(r16)
  807d5c:	1887883a 	add	r3,r3,r2
  807d60:	80c01415 	stw	r3,80(r16)
  807d64:	dfc00117 	ldw	ra,4(sp)
  807d68:	dc000017 	ldw	r16,0(sp)
  807d6c:	dec00204 	addi	sp,sp,8
  807d70:	f800283a 	ret
  807d74:	80c0030b 	ldhu	r3,12(r16)
  807d78:	18fbffcc 	andi	r3,r3,61439
  807d7c:	80c0030d 	sth	r3,12(r16)
  807d80:	dfc00117 	ldw	ra,4(sp)
  807d84:	dc000017 	ldw	r16,0(sp)
  807d88:	dec00204 	addi	sp,sp,8
  807d8c:	f800283a 	ret

00807d90 <__seofread>:
  807d90:	0005883a 	mov	r2,zero
  807d94:	f800283a 	ret

00807d98 <__swrite>:
  807d98:	2880030b 	ldhu	r2,12(r5)
  807d9c:	defffb04 	addi	sp,sp,-20
  807da0:	dcc00315 	stw	r19,12(sp)
  807da4:	dc800215 	stw	r18,8(sp)
  807da8:	dc400115 	stw	r17,4(sp)
  807dac:	dc000015 	stw	r16,0(sp)
  807db0:	dfc00415 	stw	ra,16(sp)
  807db4:	10c0400c 	andi	r3,r2,256
  807db8:	2821883a 	mov	r16,r5
  807dbc:	2023883a 	mov	r17,r4
  807dc0:	2940038f 	ldh	r5,14(r5)
  807dc4:	3025883a 	mov	r18,r6
  807dc8:	3827883a 	mov	r19,r7
  807dcc:	18000c1e 	bne	r3,zero,807e00 <__swrite+0x68>
  807dd0:	10bbffcc 	andi	r2,r2,61439
  807dd4:	980f883a 	mov	r7,r19
  807dd8:	900d883a 	mov	r6,r18
  807ddc:	8809883a 	mov	r4,r17
  807de0:	8080030d 	sth	r2,12(r16)
  807de4:	dfc00417 	ldw	ra,16(sp)
  807de8:	dcc00317 	ldw	r19,12(sp)
  807dec:	dc800217 	ldw	r18,8(sp)
  807df0:	dc400117 	ldw	r17,4(sp)
  807df4:	dc000017 	ldw	r16,0(sp)
  807df8:	dec00504 	addi	sp,sp,20
  807dfc:	08093981 	jmpi	809398 <_write_r>
  807e00:	01c00084 	movi	r7,2
  807e04:	000d883a 	mov	r6,zero
  807e08:	0809b240 	call	809b24 <_lseek_r>
  807e0c:	8080030b 	ldhu	r2,12(r16)
  807e10:	8140038f 	ldh	r5,14(r16)
  807e14:	003fee06 	br	807dd0 <__swrite+0x38>

00807e18 <__sseek>:
  807e18:	defffe04 	addi	sp,sp,-8
  807e1c:	dc000015 	stw	r16,0(sp)
  807e20:	2821883a 	mov	r16,r5
  807e24:	2940038f 	ldh	r5,14(r5)
  807e28:	dfc00115 	stw	ra,4(sp)
  807e2c:	0809b240 	call	809b24 <_lseek_r>
  807e30:	10ffffd8 	cmpnei	r3,r2,-1
  807e34:	18000826 	beq	r3,zero,807e58 <__sseek+0x40>
  807e38:	80c0030b 	ldhu	r3,12(r16)
  807e3c:	80801415 	stw	r2,80(r16)
  807e40:	18c40014 	ori	r3,r3,4096
  807e44:	80c0030d 	sth	r3,12(r16)
  807e48:	dfc00117 	ldw	ra,4(sp)
  807e4c:	dc000017 	ldw	r16,0(sp)
  807e50:	dec00204 	addi	sp,sp,8
  807e54:	f800283a 	ret
  807e58:	80c0030b 	ldhu	r3,12(r16)
  807e5c:	18fbffcc 	andi	r3,r3,61439
  807e60:	80c0030d 	sth	r3,12(r16)
  807e64:	dfc00117 	ldw	ra,4(sp)
  807e68:	dc000017 	ldw	r16,0(sp)
  807e6c:	dec00204 	addi	sp,sp,8
  807e70:	f800283a 	ret

00807e74 <__sclose>:
  807e74:	2940038f 	ldh	r5,14(r5)
  807e78:	08093fc1 	jmpi	8093fc <_close_r>

00807e7c <__sprint_r.part.0>:
  807e7c:	28801917 	ldw	r2,100(r5)
  807e80:	defff604 	addi	sp,sp,-40
  807e84:	dcc00315 	stw	r19,12(sp)
  807e88:	dfc00915 	stw	ra,36(sp)
  807e8c:	df000815 	stw	fp,32(sp)
  807e90:	ddc00715 	stw	r23,28(sp)
  807e94:	dd800615 	stw	r22,24(sp)
  807e98:	dd400515 	stw	r21,20(sp)
  807e9c:	dd000415 	stw	r20,16(sp)
  807ea0:	dc800215 	stw	r18,8(sp)
  807ea4:	dc400115 	stw	r17,4(sp)
  807ea8:	dc000015 	stw	r16,0(sp)
  807eac:	1088000c 	andi	r2,r2,8192
  807eb0:	3027883a 	mov	r19,r6
  807eb4:	10002c26 	beq	r2,zero,807f68 <__sprint_r.part.0+0xec>
  807eb8:	30800217 	ldw	r2,8(r6)
  807ebc:	35000017 	ldw	r20,0(r6)
  807ec0:	2821883a 	mov	r16,r5
  807ec4:	2023883a 	mov	r17,r4
  807ec8:	05bfff04 	movi	r22,-4
  807ecc:	10002426 	beq	r2,zero,807f60 <__sprint_r.part.0+0xe4>
  807ed0:	a5400117 	ldw	r21,4(r20)
  807ed4:	a5c00017 	ldw	r23,0(r20)
  807ed8:	a824d0ba 	srli	r18,r21,2
  807edc:	90001b26 	beq	r18,zero,807f4c <__sprint_r.part.0+0xd0>
  807ee0:	0039883a 	mov	fp,zero
  807ee4:	00000206 	br	807ef0 <__sprint_r.part.0+0x74>
  807ee8:	bdc00104 	addi	r23,r23,4
  807eec:	97001626 	beq	r18,fp,807f48 <__sprint_r.part.0+0xcc>
  807ef0:	b9400017 	ldw	r5,0(r23)
  807ef4:	800d883a 	mov	r6,r16
  807ef8:	8809883a 	mov	r4,r17
  807efc:	08098dc0 	call	8098dc <_fputwc_r>
  807f00:	10bfffe0 	cmpeqi	r2,r2,-1
  807f04:	e7000044 	addi	fp,fp,1
  807f08:	103ff726 	beq	r2,zero,807ee8 <__sprint_r.part.0+0x6c>
  807f0c:	00bfffc4 	movi	r2,-1
  807f10:	98000215 	stw	zero,8(r19)
  807f14:	98000115 	stw	zero,4(r19)
  807f18:	dfc00917 	ldw	ra,36(sp)
  807f1c:	df000817 	ldw	fp,32(sp)
  807f20:	ddc00717 	ldw	r23,28(sp)
  807f24:	dd800617 	ldw	r22,24(sp)
  807f28:	dd400517 	ldw	r21,20(sp)
  807f2c:	dd000417 	ldw	r20,16(sp)
  807f30:	dcc00317 	ldw	r19,12(sp)
  807f34:	dc800217 	ldw	r18,8(sp)
  807f38:	dc400117 	ldw	r17,4(sp)
  807f3c:	dc000017 	ldw	r16,0(sp)
  807f40:	dec00a04 	addi	sp,sp,40
  807f44:	f800283a 	ret
  807f48:	98800217 	ldw	r2,8(r19)
  807f4c:	adaa703a 	and	r21,r21,r22
  807f50:	1545c83a 	sub	r2,r2,r21
  807f54:	98800215 	stw	r2,8(r19)
  807f58:	a5000204 	addi	r20,r20,8
  807f5c:	103fdc1e 	bne	r2,zero,807ed0 <__sprint_r.part.0+0x54>
  807f60:	0005883a 	mov	r2,zero
  807f64:	003fea06 	br	807f10 <__sprint_r.part.0+0x94>
  807f68:	08051f40 	call	8051f4 <__sfvwrite_r>
  807f6c:	003fe806 	br	807f10 <__sprint_r.part.0+0x94>

00807f70 <__sprint_r>:
  807f70:	30c00217 	ldw	r3,8(r6)
  807f74:	18000126 	beq	r3,zero,807f7c <__sprint_r+0xc>
  807f78:	0807e7c1 	jmpi	807e7c <__sprint_r.part.0>
  807f7c:	30000115 	stw	zero,4(r6)
  807f80:	0005883a 	mov	r2,zero
  807f84:	f800283a 	ret

00807f88 <___vfiprintf_internal_r>:
  807f88:	deffcf04 	addi	sp,sp,-196
  807f8c:	dd802d15 	stw	r22,180(sp)
  807f90:	dd402c15 	stw	r21,176(sp)
  807f94:	dd002b15 	stw	r20,172(sp)
  807f98:	dfc03015 	stw	ra,192(sp)
  807f9c:	df002f15 	stw	fp,188(sp)
  807fa0:	ddc02e15 	stw	r23,184(sp)
  807fa4:	dcc02a15 	stw	r19,168(sp)
  807fa8:	dc802915 	stw	r18,164(sp)
  807fac:	dc402815 	stw	r17,160(sp)
  807fb0:	dc002715 	stw	r16,156(sp)
  807fb4:	d9c00415 	stw	r7,16(sp)
  807fb8:	202d883a 	mov	r22,r4
  807fbc:	282b883a 	mov	r21,r5
  807fc0:	3029883a 	mov	r20,r6
  807fc4:	20000226 	beq	r4,zero,807fd0 <___vfiprintf_internal_r+0x48>
  807fc8:	20800e17 	ldw	r2,56(r4)
  807fcc:	1001bb26 	beq	r2,zero,8086bc <___vfiprintf_internal_r+0x734>
  807fd0:	a880030b 	ldhu	r2,12(r21)
  807fd4:	10c8000c 	andi	r3,r2,8192
  807fd8:	1800061e 	bne	r3,zero,807ff4 <___vfiprintf_internal_r+0x6c>
  807fdc:	a8c01917 	ldw	r3,100(r21)
  807fe0:	0137ffc4 	movi	r4,-8193
  807fe4:	10880014 	ori	r2,r2,8192
  807fe8:	1906703a 	and	r3,r3,r4
  807fec:	a880030d 	sth	r2,12(r21)
  807ff0:	a8c01915 	stw	r3,100(r21)
  807ff4:	10c0020c 	andi	r3,r2,8
  807ff8:	18010626 	beq	r3,zero,808414 <___vfiprintf_internal_r+0x48c>
  807ffc:	a8c00417 	ldw	r3,16(r21)
  808000:	18010426 	beq	r3,zero,808414 <___vfiprintf_internal_r+0x48c>
  808004:	1080068c 	andi	r2,r2,26
  808008:	10800298 	cmpnei	r2,r2,10
  80800c:	10010926 	beq	r2,zero,808434 <___vfiprintf_internal_r+0x4ac>
  808010:	dc801704 	addi	r18,sp,92
  808014:	dc800a15 	stw	r18,40(sp)
  808018:	d8000c15 	stw	zero,48(sp)
  80801c:	d8000b15 	stw	zero,44(sp)
  808020:	9021883a 	mov	r16,r18
  808024:	d8000515 	stw	zero,20(sp)
  808028:	d8000115 	stw	zero,4(sp)
  80802c:	a0800007 	ldb	r2,0(r20)
  808030:	1000e626 	beq	r2,zero,8083cc <___vfiprintf_internal_r+0x444>
  808034:	a023883a 	mov	r17,r20
  808038:	00000306 	br	808048 <___vfiprintf_internal_r+0xc0>
  80803c:	88800047 	ldb	r2,1(r17)
  808040:	8c400044 	addi	r17,r17,1
  808044:	10013126 	beq	r2,zero,80850c <___vfiprintf_internal_r+0x584>
  808048:	10800958 	cmpnei	r2,r2,37
  80804c:	103ffb1e 	bne	r2,zero,80803c <___vfiprintf_internal_r+0xb4>
  808050:	8d27c83a 	sub	r19,r17,r20
  808054:	8d012f1e 	bne	r17,r20,808514 <___vfiprintf_internal_r+0x58c>
  808058:	88800003 	ldbu	r2,0(r17)
  80805c:	10803fcc 	andi	r2,r2,255
  808060:	1080201c 	xori	r2,r2,128
  808064:	10bfe004 	addi	r2,r2,-128
  808068:	1000d826 	beq	r2,zero,8083cc <___vfiprintf_internal_r+0x444>
  80806c:	88800047 	ldb	r2,1(r17)
  808070:	8d000044 	addi	r20,r17,1
  808074:	d8000945 	stb	zero,37(sp)
  808078:	000b883a 	mov	r5,zero
  80807c:	000d883a 	mov	r6,zero
  808080:	023fffc4 	movi	r8,-1
  808084:	0023883a 	mov	r17,zero
  808088:	001b883a 	mov	r13,zero
  80808c:	a5000044 	addi	r20,r20,1
  808090:	10fff804 	addi	r3,r2,-32
  808094:	19001668 	cmpgeui	r4,r3,89
  808098:	20006a1e 	bne	r4,zero,808244 <___vfiprintf_internal_r+0x2bc>
  80809c:	180690ba 	slli	r3,r3,2
  8080a0:	01002074 	movhi	r4,129
  8080a4:	1909883a 	add	r4,r3,r4
  8080a8:	20e02c17 	ldw	r3,-32592(r4)
  8080ac:	1800683a 	jmp	r3
  8080b0:	008089dc 	xori	r2,zero,551
  8080b4:	00808244 	movi	r2,521
  8080b8:	00808244 	movi	r2,521
  8080bc:	008089d0 	cmplti	r2,zero,551
  8080c0:	00808244 	movi	r2,521
  8080c4:	00808244 	movi	r2,521
  8080c8:	00808244 	movi	r2,521
  8080cc:	00808244 	movi	r2,521
  8080d0:	00808244 	movi	r2,521
  8080d4:	00808244 	movi	r2,521
  8080d8:	008089a8 	cmpgeui	r2,zero,550
  8080dc:	00808998 	cmpnei	r2,zero,550
  8080e0:	00808244 	movi	r2,521
  8080e4:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8080e8:	0080893c 	xorhi	r2,zero,548
  8080ec:	00808244 	movi	r2,521
  8080f0:	00808930 	cmpltui	r2,zero,548
  8080f4:	00808214 	movui	r2,520
  8080f8:	00808214 	movui	r2,520
  8080fc:	00808214 	movui	r2,520
  808100:	00808214 	movui	r2,520
  808104:	00808214 	movui	r2,520
  808108:	00808214 	movui	r2,520
  80810c:	00808214 	movui	r2,520
  808110:	00808214 	movui	r2,520
  808114:	00808214 	movui	r2,520
  808118:	00808244 	movi	r2,521
  80811c:	00808244 	movi	r2,521
  808120:	00808244 	movi	r2,521
  808124:	00808244 	movi	r2,521
  808128:	00808244 	movi	r2,521
  80812c:	00808244 	movi	r2,521
  808130:	00808244 	movi	r2,521
  808134:	00808244 	movi	r2,521
  808138:	00808244 	movi	r2,521
  80813c:	00808244 	movi	r2,521
  808140:	0080882c 	andhi	r2,zero,544
  808144:	00808244 	movi	r2,521
  808148:	00808244 	movi	r2,521
  80814c:	00808244 	movi	r2,521
  808150:	00808244 	movi	r2,521
  808154:	00808244 	movi	r2,521
  808158:	00808244 	movi	r2,521
  80815c:	00808244 	movi	r2,521
  808160:	00808244 	movi	r2,521
  808164:	00808244 	movi	r2,521
  808168:	00808244 	movi	r2,521
  80816c:	008084a4 	muli	r2,zero,530
  808170:	00808244 	movi	r2,521
  808174:	00808244 	movi	r2,521
  808178:	00808244 	movi	r2,521
  80817c:	00808244 	movi	r2,521
  808180:	00808244 	movi	r2,521
  808184:	0080847c 	xorhi	r2,zero,529
  808188:	00808244 	movi	r2,521
  80818c:	00808244 	movi	r2,521
  808190:	00808a30 	cmpltui	r2,zero,552
  808194:	00808244 	movi	r2,521
  808198:	00808244 	movi	r2,521
  80819c:	00808244 	movi	r2,521
  8081a0:	00808244 	movi	r2,521
  8081a4:	00808244 	movi	r2,521
  8081a8:	00808244 	movi	r2,521
  8081ac:	00808244 	movi	r2,521
  8081b0:	00808244 	movi	r2,521
  8081b4:	00808244 	movi	r2,521
  8081b8:	00808244 	movi	r2,521
  8081bc:	00808a08 	cmpgei	r2,zero,552
  8081c0:	008086c4 	movi	r2,539
  8081c4:	00808244 	movi	r2,521
  8081c8:	00808244 	movi	r2,521
  8081cc:	00808244 	movi	r2,521
  8081d0:	00808738 	rdprs	r2,zero,540
  8081d4:	008086c4 	movi	r2,539
  8081d8:	00808244 	movi	r2,521
  8081dc:	00808244 	movi	r2,521
  8081e0:	00808ab4 	movhi	r2,554
  8081e4:	00808244 	movi	r2,521
  8081e8:	00808a78 	rdprs	r2,zero,553
  8081ec:	008084a8 	cmpgeui	r2,zero,530
  8081f0:	008087f0 	cmpltui	r2,zero,543
  8081f4:	008087e4 	muli	r2,zero,543
  8081f8:	00808244 	movi	r2,521
  8081fc:	0080878c 	andi	r2,zero,542
  808200:	00808244 	movi	r2,521
  808204:	00808480 	call	80848 <__alt_mem_sdram-0x77f7b8>
  808208:	00808244 	movi	r2,521
  80820c:	00808244 	movi	r2,521
  808210:	00808744 	movi	r2,541
  808214:	0023883a 	mov	r17,zero
  808218:	10fff404 	addi	r3,r2,-48
  80821c:	a0800007 	ldb	r2,0(r20)
  808220:	8c4002a4 	muli	r17,r17,10
  808224:	a5000044 	addi	r20,r20,1
  808228:	1c63883a 	add	r17,r3,r17
  80822c:	10fff404 	addi	r3,r2,-48
  808230:	190002b0 	cmpltui	r4,r3,10
  808234:	203ff91e 	bne	r4,zero,80821c <___vfiprintf_internal_r+0x294>
  808238:	10fff804 	addi	r3,r2,-32
  80823c:	19001668 	cmpgeui	r4,r3,89
  808240:	203f9626 	beq	r4,zero,80809c <___vfiprintf_internal_r+0x114>
  808244:	29403fcc 	andi	r5,r5,255
  808248:	2803eb1e 	bne	r5,zero,8091f8 <___vfiprintf_internal_r+0x1270>
  80824c:	10005f26 	beq	r2,zero,8083cc <___vfiprintf_internal_r+0x444>
  808250:	d8800d05 	stb	r2,52(sp)
  808254:	d8000945 	stb	zero,37(sp)
  808258:	05c00044 	movi	r23,1
  80825c:	07000044 	movi	fp,1
  808260:	dcc00d04 	addi	r19,sp,52
  808264:	db400015 	stw	r13,0(sp)
  808268:	0011883a 	mov	r8,zero
  80826c:	d8800017 	ldw	r2,0(sp)
  808270:	1380008c 	andi	r14,r2,2
  808274:	70000126 	beq	r14,zero,80827c <___vfiprintf_internal_r+0x2f4>
  808278:	bdc00084 	addi	r23,r23,2
  80827c:	d8800017 	ldw	r2,0(sp)
  808280:	d9000b17 	ldw	r4,44(sp)
  808284:	1340210c 	andi	r13,r2,132
  808288:	21800044 	addi	r6,r4,1
  80828c:	d8800c17 	ldw	r2,48(sp)
  808290:	300b883a 	mov	r5,r6
  808294:	6800021e 	bne	r13,zero,8082a0 <___vfiprintf_internal_r+0x318>
  808298:	8dc7c83a 	sub	r3,r17,r23
  80829c:	00c2e016 	blt	zero,r3,808e20 <___vfiprintf_internal_r+0xe98>
  8082a0:	d8c00947 	ldb	r3,37(sp)
  8082a4:	81800204 	addi	r6,r16,8
  8082a8:	18000d26 	beq	r3,zero,8082e0 <___vfiprintf_internal_r+0x358>
  8082ac:	d8c00944 	addi	r3,sp,37
  8082b0:	10800044 	addi	r2,r2,1
  8082b4:	80c00015 	stw	r3,0(r16)
  8082b8:	00c00044 	movi	r3,1
  8082bc:	80c00115 	stw	r3,4(r16)
  8082c0:	d8800c15 	stw	r2,48(sp)
  8082c4:	d9400b15 	stw	r5,44(sp)
  8082c8:	28c00208 	cmpgei	r3,r5,8
  8082cc:	1802981e 	bne	r3,zero,808d30 <___vfiprintf_internal_r+0xda8>
  8082d0:	2809883a 	mov	r4,r5
  8082d4:	3021883a 	mov	r16,r6
  8082d8:	29400044 	addi	r5,r5,1
  8082dc:	31800204 	addi	r6,r6,8
  8082e0:	70001826 	beq	r14,zero,808344 <___vfiprintf_internal_r+0x3bc>
  8082e4:	d8c00984 	addi	r3,sp,38
  8082e8:	10800084 	addi	r2,r2,2
  8082ec:	80c00015 	stw	r3,0(r16)
  8082f0:	00c00084 	movi	r3,2
  8082f4:	80c00115 	stw	r3,4(r16)
  8082f8:	d8800c15 	stw	r2,48(sp)
  8082fc:	d9400b15 	stw	r5,44(sp)
  808300:	28c00208 	cmpgei	r3,r5,8
  808304:	1802a226 	beq	r3,zero,808d90 <___vfiprintf_internal_r+0xe08>
  808308:	10032026 	beq	r2,zero,808f8c <___vfiprintf_internal_r+0x1004>
  80830c:	d9800a04 	addi	r6,sp,40
  808310:	a80b883a 	mov	r5,r21
  808314:	b009883a 	mov	r4,r22
  808318:	da000315 	stw	r8,12(sp)
  80831c:	db400215 	stw	r13,8(sp)
  808320:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808324:	10002b1e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808328:	d9000b17 	ldw	r4,44(sp)
  80832c:	d8800c17 	ldw	r2,48(sp)
  808330:	da000317 	ldw	r8,12(sp)
  808334:	db400217 	ldw	r13,8(sp)
  808338:	d9801904 	addi	r6,sp,100
  80833c:	21400044 	addi	r5,r4,1
  808340:	9021883a 	mov	r16,r18
  808344:	6b402018 	cmpnei	r13,r13,128
  808348:	6801e326 	beq	r13,zero,808ad8 <___vfiprintf_internal_r+0xb50>
  80834c:	4711c83a 	sub	r8,r8,fp
  808350:	02022216 	blt	zero,r8,808bdc <___vfiprintf_internal_r+0xc54>
  808354:	e085883a 	add	r2,fp,r2
  808358:	d9400b15 	stw	r5,44(sp)
  80835c:	84c00015 	stw	r19,0(r16)
  808360:	87000115 	stw	fp,4(r16)
  808364:	d8800c15 	stw	r2,48(sp)
  808368:	29400210 	cmplti	r5,r5,8
  80836c:	2800081e 	bne	r5,zero,808390 <___vfiprintf_internal_r+0x408>
  808370:	10009826 	beq	r2,zero,8085d4 <___vfiprintf_internal_r+0x64c>
  808374:	d9800a04 	addi	r6,sp,40
  808378:	a80b883a 	mov	r5,r21
  80837c:	b009883a 	mov	r4,r22
  808380:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808384:	1000131e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808388:	d8800c17 	ldw	r2,48(sp)
  80838c:	900d883a 	mov	r6,r18
  808390:	d8c00017 	ldw	r3,0(sp)
  808394:	1cc0010c 	andi	r19,r3,4
  808398:	98000226 	beq	r19,zero,8083a4 <___vfiprintf_internal_r+0x41c>
  80839c:	8de1c83a 	sub	r16,r17,r23
  8083a0:	04009316 	blt	zero,r16,8085f0 <___vfiprintf_internal_r+0x668>
  8083a4:	8dc0010e 	bge	r17,r23,8083ac <___vfiprintf_internal_r+0x424>
  8083a8:	b823883a 	mov	r17,r23
  8083ac:	d8c00117 	ldw	r3,4(sp)
  8083b0:	1c47883a 	add	r3,r3,r17
  8083b4:	d8c00115 	stw	r3,4(sp)
  8083b8:	1002531e 	bne	r2,zero,808d08 <___vfiprintf_internal_r+0xd80>
  8083bc:	a0800007 	ldb	r2,0(r20)
  8083c0:	d8000b15 	stw	zero,44(sp)
  8083c4:	9021883a 	mov	r16,r18
  8083c8:	103f1a1e 	bne	r2,zero,808034 <___vfiprintf_internal_r+0xac>
  8083cc:	d8800c17 	ldw	r2,48(sp)
  8083d0:	10038b1e 	bne	r2,zero,809200 <___vfiprintf_internal_r+0x1278>
  8083d4:	a880030b 	ldhu	r2,12(r21)
  8083d8:	1080100c 	andi	r2,r2,64
  8083dc:	1003a31e 	bne	r2,zero,80926c <___vfiprintf_internal_r+0x12e4>
  8083e0:	d8800117 	ldw	r2,4(sp)
  8083e4:	dfc03017 	ldw	ra,192(sp)
  8083e8:	df002f17 	ldw	fp,188(sp)
  8083ec:	ddc02e17 	ldw	r23,184(sp)
  8083f0:	dd802d17 	ldw	r22,180(sp)
  8083f4:	dd402c17 	ldw	r21,176(sp)
  8083f8:	dd002b17 	ldw	r20,172(sp)
  8083fc:	dcc02a17 	ldw	r19,168(sp)
  808400:	dc802917 	ldw	r18,164(sp)
  808404:	dc402817 	ldw	r17,160(sp)
  808408:	dc002717 	ldw	r16,156(sp)
  80840c:	dec03104 	addi	sp,sp,196
  808410:	f800283a 	ret
  808414:	a80b883a 	mov	r5,r21
  808418:	b009883a 	mov	r4,r22
  80841c:	0802c8c0 	call	802c8c <__swsetup_r>
  808420:	1003921e 	bne	r2,zero,80926c <___vfiprintf_internal_r+0x12e4>
  808424:	a880030b 	ldhu	r2,12(r21)
  808428:	1080068c 	andi	r2,r2,26
  80842c:	10800298 	cmpnei	r2,r2,10
  808430:	103ef71e 	bne	r2,zero,808010 <___vfiprintf_internal_r+0x88>
  808434:	a880038f 	ldh	r2,14(r21)
  808438:	103ef516 	blt	r2,zero,808010 <___vfiprintf_internal_r+0x88>
  80843c:	d9c00417 	ldw	r7,16(sp)
  808440:	a00d883a 	mov	r6,r20
  808444:	a80b883a 	mov	r5,r21
  808448:	b009883a 	mov	r4,r22
  80844c:	dfc03017 	ldw	ra,192(sp)
  808450:	df002f17 	ldw	fp,188(sp)
  808454:	ddc02e17 	ldw	r23,184(sp)
  808458:	dd802d17 	ldw	r22,180(sp)
  80845c:	dd402c17 	ldw	r21,176(sp)
  808460:	dd002b17 	ldw	r20,172(sp)
  808464:	dcc02a17 	ldw	r19,168(sp)
  808468:	dc802917 	ldw	r18,164(sp)
  80846c:	dc402817 	ldw	r17,160(sp)
  808470:	dc002717 	ldw	r16,156(sp)
  808474:	dec03104 	addi	sp,sp,196
  808478:	08092d81 	jmpi	8092d8 <__sbprintf>
  80847c:	6b400414 	ori	r13,r13,16
  808480:	6880080c 	andi	r2,r13,32
  808484:	10004726 	beq	r2,zero,8085a4 <___vfiprintf_internal_r+0x61c>
  808488:	d8c00417 	ldw	r3,16(sp)
  80848c:	00800044 	movi	r2,1
  808490:	1dc00017 	ldw	r23,0(r3)
  808494:	1f000117 	ldw	fp,4(r3)
  808498:	18c00204 	addi	r3,r3,8
  80849c:	d8c00415 	stw	r3,16(sp)
  8084a0:	00000906 	br	8084c8 <___vfiprintf_internal_r+0x540>
  8084a4:	6b400414 	ori	r13,r13,16
  8084a8:	6880080c 	andi	r2,r13,32
  8084ac:	10003126 	beq	r2,zero,808574 <___vfiprintf_internal_r+0x5ec>
  8084b0:	d8c00417 	ldw	r3,16(sp)
  8084b4:	0005883a 	mov	r2,zero
  8084b8:	1dc00017 	ldw	r23,0(r3)
  8084bc:	1f000117 	ldw	fp,4(r3)
  8084c0:	18c00204 	addi	r3,r3,8
  8084c4:	d8c00415 	stw	r3,16(sp)
  8084c8:	d8000945 	stb	zero,37(sp)
  8084cc:	40ffffe0 	cmpeqi	r3,r8,-1
  8084d0:	001d883a 	mov	r14,zero
  8084d4:	1800f01e 	bne	r3,zero,808898 <___vfiprintf_internal_r+0x910>
  8084d8:	04ffdfc4 	movi	r19,-129
  8084dc:	6cc8703a 	and	r4,r13,r19
  8084e0:	bf06b03a 	or	r3,r23,fp
  8084e4:	d9000015 	stw	r4,0(sp)
  8084e8:	18022e1e 	bne	r3,zero,808da4 <___vfiprintf_internal_r+0xe1c>
  8084ec:	4001f11e 	bne	r8,zero,808cb4 <___vfiprintf_internal_r+0xd2c>
  8084f0:	10029c1e 	bne	r2,zero,808f64 <___vfiprintf_internal_r+0xfdc>
  8084f4:	6f00004c 	andi	fp,r13,1
  8084f8:	e002ba26 	beq	fp,zero,808fe4 <___vfiprintf_internal_r+0x105c>
  8084fc:	00800c04 	movi	r2,48
  808500:	d88016c5 	stb	r2,91(sp)
  808504:	dcc016c4 	addi	r19,sp,91
  808508:	00010006 	br	80890c <___vfiprintf_internal_r+0x984>
  80850c:	8d27c83a 	sub	r19,r17,r20
  808510:	8d3fae26 	beq	r17,r20,8083cc <___vfiprintf_internal_r+0x444>
  808514:	d8c00c17 	ldw	r3,48(sp)
  808518:	d8800b17 	ldw	r2,44(sp)
  80851c:	85000015 	stw	r20,0(r16)
  808520:	98c7883a 	add	r3,r19,r3
  808524:	10800044 	addi	r2,r2,1
  808528:	d8800b15 	stw	r2,44(sp)
  80852c:	84c00115 	stw	r19,4(r16)
  808530:	d8c00c15 	stw	r3,48(sp)
  808534:	10800208 	cmpgei	r2,r2,8
  808538:	1000061e 	bne	r2,zero,808554 <___vfiprintf_internal_r+0x5cc>
  80853c:	84000204 	addi	r16,r16,8
  808540:	d8c00117 	ldw	r3,4(sp)
  808544:	88800003 	ldbu	r2,0(r17)
  808548:	1cc7883a 	add	r3,r3,r19
  80854c:	d8c00115 	stw	r3,4(sp)
  808550:	003ec206 	br	80805c <___vfiprintf_internal_r+0xd4>
  808554:	18027f26 	beq	r3,zero,808f54 <___vfiprintf_internal_r+0xfcc>
  808558:	d9800a04 	addi	r6,sp,40
  80855c:	a80b883a 	mov	r5,r21
  808560:	b009883a 	mov	r4,r22
  808564:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808568:	103f9a1e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  80856c:	9021883a 	mov	r16,r18
  808570:	003ff306 	br	808540 <___vfiprintf_internal_r+0x5b8>
  808574:	d9000417 	ldw	r4,16(sp)
  808578:	6880040c 	andi	r2,r13,16
  80857c:	20c00104 	addi	r3,r4,4
  808580:	1002aa1e 	bne	r2,zero,80902c <___vfiprintf_internal_r+0x10a4>
  808584:	6880100c 	andi	r2,r13,64
  808588:	1002f926 	beq	r2,zero,809170 <___vfiprintf_internal_r+0x11e8>
  80858c:	d8800417 	ldw	r2,16(sp)
  808590:	0039883a 	mov	fp,zero
  808594:	d8c00415 	stw	r3,16(sp)
  808598:	15c0000b 	ldhu	r23,0(r2)
  80859c:	0005883a 	mov	r2,zero
  8085a0:	003fc906 	br	8084c8 <___vfiprintf_internal_r+0x540>
  8085a4:	d9000417 	ldw	r4,16(sp)
  8085a8:	6880040c 	andi	r2,r13,16
  8085ac:	20c00104 	addi	r3,r4,4
  8085b0:	1002ad1e 	bne	r2,zero,809068 <___vfiprintf_internal_r+0x10e0>
  8085b4:	6880100c 	andi	r2,r13,64
  8085b8:	1002f926 	beq	r2,zero,8091a0 <___vfiprintf_internal_r+0x1218>
  8085bc:	d8800417 	ldw	r2,16(sp)
  8085c0:	0039883a 	mov	fp,zero
  8085c4:	d8c00415 	stw	r3,16(sp)
  8085c8:	15c0000b 	ldhu	r23,0(r2)
  8085cc:	00800044 	movi	r2,1
  8085d0:	003fbd06 	br	8084c8 <___vfiprintf_internal_r+0x540>
  8085d4:	d8c00017 	ldw	r3,0(sp)
  8085d8:	d8000b15 	stw	zero,44(sp)
  8085dc:	1cc0010c 	andi	r19,r3,4
  8085e0:	98024a26 	beq	r19,zero,808f0c <___vfiprintf_internal_r+0xf84>
  8085e4:	8de1c83a 	sub	r16,r17,r23
  8085e8:	0402480e 	bge	zero,r16,808f0c <___vfiprintf_internal_r+0xf84>
  8085ec:	900d883a 	mov	r6,r18
  8085f0:	80c00450 	cmplti	r3,r16,17
  8085f4:	d9000b17 	ldw	r4,44(sp)
  8085f8:	01c02074 	movhi	r7,129
  8085fc:	1803181e 	bne	r3,zero,809260 <___vfiprintf_internal_r+0x12d8>
  808600:	39c0b804 	addi	r7,r7,736
  808604:	04c00404 	movi	r19,16
  808608:	00000606 	br	808624 <___vfiprintf_internal_r+0x69c>
  80860c:	21400084 	addi	r5,r4,2
  808610:	31800204 	addi	r6,r6,8
  808614:	1809883a 	mov	r4,r3
  808618:	843ffc04 	addi	r16,r16,-16
  80861c:	80c00448 	cmpgei	r3,r16,17
  808620:	18001726 	beq	r3,zero,808680 <___vfiprintf_internal_r+0x6f8>
  808624:	20c00044 	addi	r3,r4,1
  808628:	10800404 	addi	r2,r2,16
  80862c:	31c00015 	stw	r7,0(r6)
  808630:	34c00115 	stw	r19,4(r6)
  808634:	d8800c15 	stw	r2,48(sp)
  808638:	d8c00b15 	stw	r3,44(sp)
  80863c:	19400208 	cmpgei	r5,r3,8
  808640:	283ff226 	beq	r5,zero,80860c <___vfiprintf_internal_r+0x684>
  808644:	d9800a04 	addi	r6,sp,40
  808648:	a80b883a 	mov	r5,r21
  80864c:	b009883a 	mov	r4,r22
  808650:	10011d26 	beq	r2,zero,808ac8 <___vfiprintf_internal_r+0xb40>
  808654:	d9c00015 	stw	r7,0(sp)
  808658:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  80865c:	103f5d1e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808660:	d9000b17 	ldw	r4,44(sp)
  808664:	843ffc04 	addi	r16,r16,-16
  808668:	80c00448 	cmpgei	r3,r16,17
  80866c:	d8800c17 	ldw	r2,48(sp)
  808670:	d9c00017 	ldw	r7,0(sp)
  808674:	900d883a 	mov	r6,r18
  808678:	21400044 	addi	r5,r4,1
  80867c:	183fe91e 	bne	r3,zero,808624 <___vfiprintf_internal_r+0x69c>
  808680:	1405883a 	add	r2,r2,r16
  808684:	d9400b15 	stw	r5,44(sp)
  808688:	31c00015 	stw	r7,0(r6)
  80868c:	34000115 	stw	r16,4(r6)
  808690:	d8800c15 	stw	r2,48(sp)
  808694:	29400210 	cmplti	r5,r5,8
  808698:	283f421e 	bne	r5,zero,8083a4 <___vfiprintf_internal_r+0x41c>
  80869c:	10021b26 	beq	r2,zero,808f0c <___vfiprintf_internal_r+0xf84>
  8086a0:	d9800a04 	addi	r6,sp,40
  8086a4:	a80b883a 	mov	r5,r21
  8086a8:	b009883a 	mov	r4,r22
  8086ac:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  8086b0:	103f481e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  8086b4:	d8800c17 	ldw	r2,48(sp)
  8086b8:	003f3a06 	br	8083a4 <___vfiprintf_internal_r+0x41c>
  8086bc:	0804d940 	call	804d94 <__sinit>
  8086c0:	003e4306 	br	807fd0 <___vfiprintf_internal_r+0x48>
  8086c4:	29403fcc 	andi	r5,r5,255
  8086c8:	2802d81e 	bne	r5,zero,80922c <___vfiprintf_internal_r+0x12a4>
  8086cc:	6880080c 	andi	r2,r13,32
  8086d0:	10005b26 	beq	r2,zero,808840 <___vfiprintf_internal_r+0x8b8>
  8086d4:	d8c00417 	ldw	r3,16(sp)
  8086d8:	18800117 	ldw	r2,4(r3)
  8086dc:	1dc00017 	ldw	r23,0(r3)
  8086e0:	18c00204 	addi	r3,r3,8
  8086e4:	d8c00415 	stw	r3,16(sp)
  8086e8:	1039883a 	mov	fp,r2
  8086ec:	10006016 	blt	r2,zero,808870 <___vfiprintf_internal_r+0x8e8>
  8086f0:	40bfffd8 	cmpnei	r2,r8,-1
  8086f4:	db800943 	ldbu	r14,37(sp)
  8086f8:	10000626 	beq	r2,zero,808714 <___vfiprintf_internal_r+0x78c>
  8086fc:	04ffdfc4 	movi	r19,-129
  808700:	6cc6703a 	and	r3,r13,r19
  808704:	bf04b03a 	or	r2,r23,fp
  808708:	d8c00015 	stw	r3,0(sp)
  80870c:	10021426 	beq	r2,zero,808f60 <___vfiprintf_internal_r+0xfd8>
  808710:	db400017 	ldw	r13,0(sp)
  808714:	e001a51e 	bne	fp,zero,808dac <___vfiprintf_internal_r+0xe24>
  808718:	b88002a8 	cmpgeui	r2,r23,10
  80871c:	1001a31e 	bne	r2,zero,808dac <___vfiprintf_internal_r+0xe24>
  808720:	bdc00c04 	addi	r23,r23,48
  808724:	ddc016c5 	stb	r23,91(sp)
  808728:	db400015 	stw	r13,0(sp)
  80872c:	07000044 	movi	fp,1
  808730:	dcc016c4 	addi	r19,sp,91
  808734:	00007506 	br	80890c <___vfiprintf_internal_r+0x984>
  808738:	a0800007 	ldb	r2,0(r20)
  80873c:	6b401014 	ori	r13,r13,64
  808740:	003e5206 	br	80808c <___vfiprintf_internal_r+0x104>
  808744:	29403fcc 	andi	r5,r5,255
  808748:	2802ba1e 	bne	r5,zero,809234 <___vfiprintf_internal_r+0x12ac>
  80874c:	00c02074 	movhi	r3,129
  808750:	18c02f04 	addi	r3,r3,188
  808754:	d8c00515 	stw	r3,20(sp)
  808758:	68c0080c 	andi	r3,r13,32
  80875c:	1800bb26 	beq	r3,zero,808a4c <___vfiprintf_internal_r+0xac4>
  808760:	d8c00417 	ldw	r3,16(sp)
  808764:	1dc00017 	ldw	r23,0(r3)
  808768:	1f000117 	ldw	fp,4(r3)
  80876c:	18c00204 	addi	r3,r3,8
  808770:	d8c00415 	stw	r3,16(sp)
  808774:	68c0004c 	andi	r3,r13,1
  808778:	18000226 	beq	r3,zero,808784 <___vfiprintf_internal_r+0x7fc>
  80877c:	bf06b03a 	or	r3,r23,fp
  808780:	1802241e 	bne	r3,zero,809014 <___vfiprintf_internal_r+0x108c>
  808784:	00800084 	movi	r2,2
  808788:	003f4f06 	br	8084c8 <___vfiprintf_internal_r+0x540>
  80878c:	d8800417 	ldw	r2,16(sp)
  808790:	d8000945 	stb	zero,37(sp)
  808794:	14c00017 	ldw	r19,0(r2)
  808798:	10c00104 	addi	r3,r2,4
  80879c:	98026726 	beq	r19,zero,80913c <___vfiprintf_internal_r+0x11b4>
  8087a0:	40bfffe0 	cmpeqi	r2,r8,-1
  8087a4:	10023f1e 	bne	r2,zero,8090a4 <___vfiprintf_internal_r+0x111c>
  8087a8:	400d883a 	mov	r6,r8
  8087ac:	000b883a 	mov	r5,zero
  8087b0:	9809883a 	mov	r4,r19
  8087b4:	d8c00315 	stw	r3,12(sp)
  8087b8:	db400215 	stw	r13,8(sp)
  8087bc:	da000015 	stw	r8,0(sp)
  8087c0:	08062340 	call	806234 <memchr>
  8087c4:	da000017 	ldw	r8,0(sp)
  8087c8:	db400217 	ldw	r13,8(sp)
  8087cc:	d8c00317 	ldw	r3,12(sp)
  8087d0:	10029226 	beq	r2,zero,80921c <___vfiprintf_internal_r+0x1294>
  8087d4:	14f9c83a 	sub	fp,r2,r19
  8087d8:	e02f883a 	mov	r23,fp
  8087dc:	d8c00415 	stw	r3,16(sp)
  8087e0:	003ea006 	br	808264 <___vfiprintf_internal_r+0x2dc>
  8087e4:	a0800007 	ldb	r2,0(r20)
  8087e8:	6b400814 	ori	r13,r13,32
  8087ec:	003e2706 	br	80808c <___vfiprintf_internal_r+0x104>
  8087f0:	d8c00417 	ldw	r3,16(sp)
  8087f4:	00800c04 	movi	r2,48
  8087f8:	d8800985 	stb	r2,38(sp)
  8087fc:	00801e04 	movi	r2,120
  808800:	01002074 	movhi	r4,129
  808804:	d88009c5 	stb	r2,39(sp)
  808808:	18800104 	addi	r2,r3,4
  80880c:	d8800415 	stw	r2,16(sp)
  808810:	20802f04 	addi	r2,r4,188
  808814:	d8800515 	stw	r2,20(sp)
  808818:	1dc00017 	ldw	r23,0(r3)
  80881c:	0039883a 	mov	fp,zero
  808820:	6b400094 	ori	r13,r13,2
  808824:	00800084 	movi	r2,2
  808828:	003f2706 	br	8084c8 <___vfiprintf_internal_r+0x540>
  80882c:	29403fcc 	andi	r5,r5,255
  808830:	2802821e 	bne	r5,zero,80923c <___vfiprintf_internal_r+0x12b4>
  808834:	6b400414 	ori	r13,r13,16
  808838:	6880080c 	andi	r2,r13,32
  80883c:	103fa51e 	bne	r2,zero,8086d4 <___vfiprintf_internal_r+0x74c>
  808840:	d9000417 	ldw	r4,16(sp)
  808844:	6880040c 	andi	r2,r13,16
  808848:	20c00104 	addi	r3,r4,4
  80884c:	1001ec1e 	bne	r2,zero,809000 <___vfiprintf_internal_r+0x1078>
  808850:	6880100c 	andi	r2,r13,64
  808854:	10024c26 	beq	r2,zero,809188 <___vfiprintf_internal_r+0x1200>
  808858:	d8800417 	ldw	r2,16(sp)
  80885c:	d8c00415 	stw	r3,16(sp)
  808860:	15c0000f 	ldh	r23,0(r2)
  808864:	b839d7fa 	srai	fp,r23,31
  808868:	e005883a 	mov	r2,fp
  80886c:	103fa00e 	bge	r2,zero,8086f0 <___vfiprintf_internal_r+0x768>
  808870:	b804c03a 	cmpne	r2,r23,zero
  808874:	0739c83a 	sub	fp,zero,fp
  808878:	e0b9c83a 	sub	fp,fp,r2
  80887c:	00800b44 	movi	r2,45
  808880:	d8800945 	stb	r2,37(sp)
  808884:	40ffffe0 	cmpeqi	r3,r8,-1
  808888:	05efc83a 	sub	r23,zero,r23
  80888c:	03800b44 	movi	r14,45
  808890:	00800044 	movi	r2,1
  808894:	183f1026 	beq	r3,zero,8084d8 <___vfiprintf_internal_r+0x550>
  808898:	10c00060 	cmpeqi	r3,r2,1
  80889c:	183f9d1e 	bne	r3,zero,808714 <___vfiprintf_internal_r+0x78c>
  8088a0:	108000a0 	cmpeqi	r2,r2,2
  8088a4:	1001081e 	bne	r2,zero,808cc8 <___vfiprintf_internal_r+0xd40>
  8088a8:	9027883a 	mov	r19,r18
  8088ac:	e008977a 	slli	r4,fp,29
  8088b0:	b806d0fa 	srli	r3,r23,3
  8088b4:	e038d0fa 	srli	fp,fp,3
  8088b8:	b88001cc 	andi	r2,r23,7
  8088bc:	10800c04 	addi	r2,r2,48
  8088c0:	20eeb03a 	or	r23,r4,r3
  8088c4:	98bfffc5 	stb	r2,-1(r19)
  8088c8:	bf06b03a 	or	r3,r23,fp
  8088cc:	980b883a 	mov	r5,r19
  8088d0:	9cffffc4 	addi	r19,r19,-1
  8088d4:	183ff51e 	bne	r3,zero,8088ac <___vfiprintf_internal_r+0x924>
  8088d8:	68c0004c 	andi	r3,r13,1
  8088dc:	18010726 	beq	r3,zero,808cfc <___vfiprintf_internal_r+0xd74>
  8088e0:	10803fcc 	andi	r2,r2,255
  8088e4:	1080201c 	xori	r2,r2,128
  8088e8:	10bfe004 	addi	r2,r2,-128
  8088ec:	10800c18 	cmpnei	r2,r2,48
  8088f0:	10010226 	beq	r2,zero,808cfc <___vfiprintf_internal_r+0xd74>
  8088f4:	297fff84 	addi	r5,r5,-2
  8088f8:	00800c04 	movi	r2,48
  8088fc:	98bfffc5 	stb	r2,-1(r19)
  808900:	9179c83a 	sub	fp,r18,r5
  808904:	db400015 	stw	r13,0(sp)
  808908:	2827883a 	mov	r19,r5
  80890c:	402f883a 	mov	r23,r8
  808910:	4700010e 	bge	r8,fp,808918 <___vfiprintf_internal_r+0x990>
  808914:	e02f883a 	mov	r23,fp
  808918:	73803fcc 	andi	r14,r14,255
  80891c:	7380201c 	xori	r14,r14,128
  808920:	73bfe004 	addi	r14,r14,-128
  808924:	703e5126 	beq	r14,zero,80826c <___vfiprintf_internal_r+0x2e4>
  808928:	bdc00044 	addi	r23,r23,1
  80892c:	003e4f06 	br	80826c <___vfiprintf_internal_r+0x2e4>
  808930:	a0800007 	ldb	r2,0(r20)
  808934:	6b402014 	ori	r13,r13,128
  808938:	003dd406 	br	80808c <___vfiprintf_internal_r+0x104>
  80893c:	a0800007 	ldb	r2,0(r20)
  808940:	a1000044 	addi	r4,r20,1
  808944:	10c00aa0 	cmpeqi	r3,r2,42
  808948:	1802501e 	bne	r3,zero,80928c <___vfiprintf_internal_r+0x1304>
  80894c:	10fff404 	addi	r3,r2,-48
  808950:	19c002b0 	cmpltui	r7,r3,10
  808954:	2029883a 	mov	r20,r4
  808958:	0011883a 	mov	r8,zero
  80895c:	383dcc26 	beq	r7,zero,808090 <___vfiprintf_internal_r+0x108>
  808960:	a0800007 	ldb	r2,0(r20)
  808964:	420002a4 	muli	r8,r8,10
  808968:	a5000044 	addi	r20,r20,1
  80896c:	40d1883a 	add	r8,r8,r3
  808970:	10fff404 	addi	r3,r2,-48
  808974:	190002b0 	cmpltui	r4,r3,10
  808978:	203ff91e 	bne	r4,zero,808960 <___vfiprintf_internal_r+0x9d8>
  80897c:	003dc406 	br	808090 <___vfiprintf_internal_r+0x108>
  808980:	a0800003 	ldbu	r2,0(r20)
  808984:	10803fcc 	andi	r2,r2,255
  808988:	1080201c 	xori	r2,r2,128
  80898c:	6b400114 	ori	r13,r13,4
  808990:	10bfe004 	addi	r2,r2,-128
  808994:	003dbd06 	br	80808c <___vfiprintf_internal_r+0x104>
  808998:	a0800007 	ldb	r2,0(r20)
  80899c:	01400044 	movi	r5,1
  8089a0:	01800ac4 	movi	r6,43
  8089a4:	003db906 	br	80808c <___vfiprintf_internal_r+0x104>
  8089a8:	d8c00417 	ldw	r3,16(sp)
  8089ac:	a0800003 	ldbu	r2,0(r20)
  8089b0:	1c400017 	ldw	r17,0(r3)
  8089b4:	18c00104 	addi	r3,r3,4
  8089b8:	8801b716 	blt	r17,zero,809098 <___vfiprintf_internal_r+0x1110>
  8089bc:	d8c00415 	stw	r3,16(sp)
  8089c0:	10803fcc 	andi	r2,r2,255
  8089c4:	1080201c 	xori	r2,r2,128
  8089c8:	10bfe004 	addi	r2,r2,-128
  8089cc:	003daf06 	br	80808c <___vfiprintf_internal_r+0x104>
  8089d0:	a0800007 	ldb	r2,0(r20)
  8089d4:	6b400054 	ori	r13,r13,1
  8089d8:	003dac06 	br	80808c <___vfiprintf_internal_r+0x104>
  8089dc:	30c03fcc 	andi	r3,r6,255
  8089e0:	18c0201c 	xori	r3,r3,128
  8089e4:	18ffe004 	addi	r3,r3,-128
  8089e8:	a0800003 	ldbu	r2,0(r20)
  8089ec:	183ff41e 	bne	r3,zero,8089c0 <___vfiprintf_internal_r+0xa38>
  8089f0:	10803fcc 	andi	r2,r2,255
  8089f4:	1080201c 	xori	r2,r2,128
  8089f8:	01400044 	movi	r5,1
  8089fc:	01800804 	movi	r6,32
  808a00:	10bfe004 	addi	r2,r2,-128
  808a04:	003da106 	br	80808c <___vfiprintf_internal_r+0x104>
  808a08:	d8c00417 	ldw	r3,16(sp)
  808a0c:	d8000945 	stb	zero,37(sp)
  808a10:	05c00044 	movi	r23,1
  808a14:	18800017 	ldw	r2,0(r3)
  808a18:	18c00104 	addi	r3,r3,4
  808a1c:	d8c00415 	stw	r3,16(sp)
  808a20:	d8800d05 	stb	r2,52(sp)
  808a24:	07000044 	movi	fp,1
  808a28:	dcc00d04 	addi	r19,sp,52
  808a2c:	003e0d06 	br	808264 <___vfiprintf_internal_r+0x2dc>
  808a30:	29403fcc 	andi	r5,r5,255
  808a34:	2802061e 	bne	r5,zero,809250 <___vfiprintf_internal_r+0x12c8>
  808a38:	00c02074 	movhi	r3,129
  808a3c:	18c03404 	addi	r3,r3,208
  808a40:	d8c00515 	stw	r3,20(sp)
  808a44:	68c0080c 	andi	r3,r13,32
  808a48:	183f451e 	bne	r3,zero,808760 <___vfiprintf_internal_r+0x7d8>
  808a4c:	d9400417 	ldw	r5,16(sp)
  808a50:	68c0040c 	andi	r3,r13,16
  808a54:	29000104 	addi	r4,r5,4
  808a58:	18017f1e 	bne	r3,zero,809058 <___vfiprintf_internal_r+0x10d0>
  808a5c:	68c0100c 	andi	r3,r13,64
  808a60:	1801be26 	beq	r3,zero,80915c <___vfiprintf_internal_r+0x11d4>
  808a64:	d8c00417 	ldw	r3,16(sp)
  808a68:	0039883a 	mov	fp,zero
  808a6c:	d9000415 	stw	r4,16(sp)
  808a70:	1dc0000b 	ldhu	r23,0(r3)
  808a74:	003f3f06 	br	808774 <___vfiprintf_internal_r+0x7ec>
  808a78:	29403fcc 	andi	r5,r5,255
  808a7c:	2801f61e 	bne	r5,zero,809258 <___vfiprintf_internal_r+0x12d0>
  808a80:	d9000417 	ldw	r4,16(sp)
  808a84:	6880080c 	andi	r2,r13,32
  808a88:	20c00017 	ldw	r3,0(r4)
  808a8c:	21000104 	addi	r4,r4,4
  808a90:	10016b1e 	bne	r2,zero,809040 <___vfiprintf_internal_r+0x10b8>
  808a94:	6880040c 	andi	r2,r13,16
  808a98:	1001951e 	bne	r2,zero,8090f0 <___vfiprintf_internal_r+0x1168>
  808a9c:	6b40100c 	andi	r13,r13,64
  808aa0:	68019326 	beq	r13,zero,8090f0 <___vfiprintf_internal_r+0x1168>
  808aa4:	d8800117 	ldw	r2,4(sp)
  808aa8:	d9000415 	stw	r4,16(sp)
  808aac:	1880000d 	sth	r2,0(r3)
  808ab0:	003d5e06 	br	80802c <___vfiprintf_internal_r+0xa4>
  808ab4:	a0800007 	ldb	r2,0(r20)
  808ab8:	10c01b18 	cmpnei	r3,r2,108
  808abc:	18019826 	beq	r3,zero,809120 <___vfiprintf_internal_r+0x1198>
  808ac0:	6b400414 	ori	r13,r13,16
  808ac4:	003d7106 	br	80808c <___vfiprintf_internal_r+0x104>
  808ac8:	01400044 	movi	r5,1
  808acc:	0009883a 	mov	r4,zero
  808ad0:	900d883a 	mov	r6,r18
  808ad4:	003ed006 	br	808618 <___vfiprintf_internal_r+0x690>
  808ad8:	8dc7c83a 	sub	r3,r17,r23
  808adc:	00fe1b0e 	bge	zero,r3,80834c <___vfiprintf_internal_r+0x3c4>
  808ae0:	19c00450 	cmplti	r7,r3,17
  808ae4:	3801e41e 	bne	r7,zero,809278 <___vfiprintf_internal_r+0x12f0>
  808ae8:	01c02074 	movhi	r7,129
  808aec:	39c0b404 	addi	r7,r7,720
  808af0:	03400404 	movi	r13,16
  808af4:	00000606 	br	808b10 <___vfiprintf_internal_r+0xb88>
  808af8:	23800084 	addi	r14,r4,2
  808afc:	84000204 	addi	r16,r16,8
  808b00:	2809883a 	mov	r4,r5
  808b04:	18fffc04 	addi	r3,r3,-16
  808b08:	19400448 	cmpgei	r5,r3,17
  808b0c:	28001c26 	beq	r5,zero,808b80 <___vfiprintf_internal_r+0xbf8>
  808b10:	21400044 	addi	r5,r4,1
  808b14:	10800404 	addi	r2,r2,16
  808b18:	81c00015 	stw	r7,0(r16)
  808b1c:	83400115 	stw	r13,4(r16)
  808b20:	d8800c15 	stw	r2,48(sp)
  808b24:	d9400b15 	stw	r5,44(sp)
  808b28:	29800208 	cmpgei	r6,r5,8
  808b2c:	303ff226 	beq	r6,zero,808af8 <___vfiprintf_internal_r+0xb70>
  808b30:	d9800a04 	addi	r6,sp,40
  808b34:	a80b883a 	mov	r5,r21
  808b38:	b009883a 	mov	r4,r22
  808b3c:	10007826 	beq	r2,zero,808d20 <___vfiprintf_internal_r+0xd98>
  808b40:	d9c00615 	stw	r7,24(sp)
  808b44:	d8c00315 	stw	r3,12(sp)
  808b48:	da000215 	stw	r8,8(sp)
  808b4c:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808b50:	103e201e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808b54:	d8c00317 	ldw	r3,12(sp)
  808b58:	d9000b17 	ldw	r4,44(sp)
  808b5c:	d8800c17 	ldw	r2,48(sp)
  808b60:	18fffc04 	addi	r3,r3,-16
  808b64:	19400448 	cmpgei	r5,r3,17
  808b68:	d9c00617 	ldw	r7,24(sp)
  808b6c:	da000217 	ldw	r8,8(sp)
  808b70:	9021883a 	mov	r16,r18
  808b74:	23800044 	addi	r14,r4,1
  808b78:	03400404 	movi	r13,16
  808b7c:	283fe41e 	bne	r5,zero,808b10 <___vfiprintf_internal_r+0xb88>
  808b80:	83400204 	addi	r13,r16,8
  808b84:	10c5883a 	add	r2,r2,r3
  808b88:	80c00115 	stw	r3,4(r16)
  808b8c:	81c00015 	stw	r7,0(r16)
  808b90:	d8800c15 	stw	r2,48(sp)
  808b94:	db800b15 	stw	r14,44(sp)
  808b98:	70c00208 	cmpgei	r3,r14,8
  808b9c:	18011326 	beq	r3,zero,808fec <___vfiprintf_internal_r+0x1064>
  808ba0:	10018826 	beq	r2,zero,8091c4 <___vfiprintf_internal_r+0x123c>
  808ba4:	d9800a04 	addi	r6,sp,40
  808ba8:	a80b883a 	mov	r5,r21
  808bac:	b009883a 	mov	r4,r22
  808bb0:	da000215 	stw	r8,8(sp)
  808bb4:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808bb8:	103e061e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808bbc:	da000217 	ldw	r8,8(sp)
  808bc0:	d9000b17 	ldw	r4,44(sp)
  808bc4:	d8800c17 	ldw	r2,48(sp)
  808bc8:	4711c83a 	sub	r8,r8,fp
  808bcc:	d9801904 	addi	r6,sp,100
  808bd0:	21400044 	addi	r5,r4,1
  808bd4:	9021883a 	mov	r16,r18
  808bd8:	023dde0e 	bge	zero,r8,808354 <___vfiprintf_internal_r+0x3cc>
  808bdc:	40c00450 	cmplti	r3,r8,17
  808be0:	01c02074 	movhi	r7,129
  808be4:	1801741e 	bne	r3,zero,8091b8 <___vfiprintf_internal_r+0x1230>
  808be8:	39c0b404 	addi	r7,r7,720
  808bec:	03400404 	movi	r13,16
  808bf0:	00000606 	br	808c0c <___vfiprintf_internal_r+0xc84>
  808bf4:	21400084 	addi	r5,r4,2
  808bf8:	84000204 	addi	r16,r16,8
  808bfc:	1809883a 	mov	r4,r3
  808c00:	423ffc04 	addi	r8,r8,-16
  808c04:	40c00448 	cmpgei	r3,r8,17
  808c08:	18001a26 	beq	r3,zero,808c74 <___vfiprintf_internal_r+0xcec>
  808c0c:	20c00044 	addi	r3,r4,1
  808c10:	10800404 	addi	r2,r2,16
  808c14:	81c00015 	stw	r7,0(r16)
  808c18:	83400115 	stw	r13,4(r16)
  808c1c:	d8800c15 	stw	r2,48(sp)
  808c20:	d8c00b15 	stw	r3,44(sp)
  808c24:	19400208 	cmpgei	r5,r3,8
  808c28:	283ff226 	beq	r5,zero,808bf4 <___vfiprintf_internal_r+0xc6c>
  808c2c:	d9800a04 	addi	r6,sp,40
  808c30:	a80b883a 	mov	r5,r21
  808c34:	b009883a 	mov	r4,r22
  808c38:	10001a26 	beq	r2,zero,808ca4 <___vfiprintf_internal_r+0xd1c>
  808c3c:	d9c00315 	stw	r7,12(sp)
  808c40:	da000215 	stw	r8,8(sp)
  808c44:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808c48:	103de21e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808c4c:	da000217 	ldw	r8,8(sp)
  808c50:	d9000b17 	ldw	r4,44(sp)
  808c54:	d8800c17 	ldw	r2,48(sp)
  808c58:	423ffc04 	addi	r8,r8,-16
  808c5c:	40c00448 	cmpgei	r3,r8,17
  808c60:	d9c00317 	ldw	r7,12(sp)
  808c64:	9021883a 	mov	r16,r18
  808c68:	21400044 	addi	r5,r4,1
  808c6c:	03400404 	movi	r13,16
  808c70:	183fe61e 	bne	r3,zero,808c0c <___vfiprintf_internal_r+0xc84>
  808c74:	81000204 	addi	r4,r16,8
  808c78:	1205883a 	add	r2,r2,r8
  808c7c:	81c00015 	stw	r7,0(r16)
  808c80:	82000115 	stw	r8,4(r16)
  808c84:	d8800c15 	stw	r2,48(sp)
  808c88:	d9400b15 	stw	r5,44(sp)
  808c8c:	28c00208 	cmpgei	r3,r5,8
  808c90:	1800a41e 	bne	r3,zero,808f24 <___vfiprintf_internal_r+0xf9c>
  808c94:	29400044 	addi	r5,r5,1
  808c98:	21800204 	addi	r6,r4,8
  808c9c:	2021883a 	mov	r16,r4
  808ca0:	003dac06 	br	808354 <___vfiprintf_internal_r+0x3cc>
  808ca4:	01400044 	movi	r5,1
  808ca8:	0009883a 	mov	r4,zero
  808cac:	9021883a 	mov	r16,r18
  808cb0:	003fd306 	br	808c00 <___vfiprintf_internal_r+0xc78>
  808cb4:	10c00060 	cmpeqi	r3,r2,1
  808cb8:	1801561e 	bne	r3,zero,809214 <___vfiprintf_internal_r+0x128c>
  808cbc:	108000a0 	cmpeqi	r2,r2,2
  808cc0:	db400017 	ldw	r13,0(sp)
  808cc4:	103ef826 	beq	r2,zero,8088a8 <___vfiprintf_internal_r+0x920>
  808cc8:	9027883a 	mov	r19,r18
  808ccc:	d9000517 	ldw	r4,20(sp)
  808cd0:	b88003cc 	andi	r2,r23,15
  808cd4:	e006973a 	slli	r3,fp,28
  808cd8:	b82ed13a 	srli	r23,r23,4
  808cdc:	2085883a 	add	r2,r4,r2
  808ce0:	10800003 	ldbu	r2,0(r2)
  808ce4:	e038d13a 	srli	fp,fp,4
  808ce8:	1deeb03a 	or	r23,r3,r23
  808cec:	98bfffc5 	stb	r2,-1(r19)
  808cf0:	bf04b03a 	or	r2,r23,fp
  808cf4:	9cffffc4 	addi	r19,r19,-1
  808cf8:	103ff41e 	bne	r2,zero,808ccc <___vfiprintf_internal_r+0xd44>
  808cfc:	94f9c83a 	sub	fp,r18,r19
  808d00:	db400015 	stw	r13,0(sp)
  808d04:	003f0106 	br	80890c <___vfiprintf_internal_r+0x984>
  808d08:	d9800a04 	addi	r6,sp,40
  808d0c:	a80b883a 	mov	r5,r21
  808d10:	b009883a 	mov	r4,r22
  808d14:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808d18:	103da826 	beq	r2,zero,8083bc <___vfiprintf_internal_r+0x434>
  808d1c:	003dad06 	br	8083d4 <___vfiprintf_internal_r+0x44c>
  808d20:	03800044 	movi	r14,1
  808d24:	0009883a 	mov	r4,zero
  808d28:	9021883a 	mov	r16,r18
  808d2c:	003f7506 	br	808b04 <___vfiprintf_internal_r+0xb7c>
  808d30:	10009026 	beq	r2,zero,808f74 <___vfiprintf_internal_r+0xfec>
  808d34:	d9800a04 	addi	r6,sp,40
  808d38:	a80b883a 	mov	r5,r21
  808d3c:	b009883a 	mov	r4,r22
  808d40:	da000615 	stw	r8,24(sp)
  808d44:	db400315 	stw	r13,12(sp)
  808d48:	db800215 	stw	r14,8(sp)
  808d4c:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808d50:	103da01e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808d54:	d9000b17 	ldw	r4,44(sp)
  808d58:	d8800c17 	ldw	r2,48(sp)
  808d5c:	da000617 	ldw	r8,24(sp)
  808d60:	db400317 	ldw	r13,12(sp)
  808d64:	db800217 	ldw	r14,8(sp)
  808d68:	d9801904 	addi	r6,sp,100
  808d6c:	21400044 	addi	r5,r4,1
  808d70:	9021883a 	mov	r16,r18
  808d74:	003d5a06 	br	8082e0 <___vfiprintf_internal_r+0x358>
  808d78:	d8800984 	addi	r2,sp,38
  808d7c:	d8801715 	stw	r2,92(sp)
  808d80:	00800084 	movi	r2,2
  808d84:	d8801815 	stw	r2,96(sp)
  808d88:	d9801904 	addi	r6,sp,100
  808d8c:	01400044 	movi	r5,1
  808d90:	3021883a 	mov	r16,r6
  808d94:	2809883a 	mov	r4,r5
  808d98:	21400044 	addi	r5,r4,1
  808d9c:	81800204 	addi	r6,r16,8
  808da0:	003d6806 	br	808344 <___vfiprintf_internal_r+0x3bc>
  808da4:	db400017 	ldw	r13,0(sp)
  808da8:	003ebb06 	br	808898 <___vfiprintf_internal_r+0x910>
  808dac:	9027883a 	mov	r19,r18
  808db0:	b809883a 	mov	r4,r23
  808db4:	e00b883a 	mov	r5,fp
  808db8:	01800284 	movi	r6,10
  808dbc:	000f883a 	mov	r7,zero
  808dc0:	db800315 	stw	r14,12(sp)
  808dc4:	da000215 	stw	r8,8(sp)
  808dc8:	db400015 	stw	r13,0(sp)
  808dcc:	080aa800 	call	80aa80 <__umoddi3>
  808dd0:	10800c04 	addi	r2,r2,48
  808dd4:	b809883a 	mov	r4,r23
  808dd8:	e00b883a 	mov	r5,fp
  808ddc:	98bfffc5 	stb	r2,-1(r19)
  808de0:	01800284 	movi	r6,10
  808de4:	000f883a 	mov	r7,zero
  808de8:	080a4f00 	call	80a4f0 <__udivdi3>
  808dec:	e009883a 	mov	r4,fp
  808df0:	b80b883a 	mov	r5,r23
  808df4:	db400017 	ldw	r13,0(sp)
  808df8:	da000217 	ldw	r8,8(sp)
  808dfc:	db800317 	ldw	r14,12(sp)
  808e00:	9cffffc4 	addi	r19,r19,-1
  808e04:	102f883a 	mov	r23,r2
  808e08:	1839883a 	mov	fp,r3
  808e0c:	203fe81e 	bne	r4,zero,808db0 <___vfiprintf_internal_r+0xe28>
  808e10:	294002a8 	cmpgeui	r5,r5,10
  808e14:	283fe61e 	bne	r5,zero,808db0 <___vfiprintf_internal_r+0xe28>
  808e18:	94f9c83a 	sub	fp,r18,r19
  808e1c:	003ebb06 	br	80890c <___vfiprintf_internal_r+0x984>
  808e20:	19400450 	cmplti	r5,r3,17
  808e24:	01c02074 	movhi	r7,129
  808e28:	2801061e 	bne	r5,zero,809244 <___vfiprintf_internal_r+0x12bc>
  808e2c:	39c0b804 	addi	r7,r7,736
  808e30:	03c00404 	movi	r15,16
  808e34:	00000706 	br	808e54 <___vfiprintf_internal_r+0xecc>
  808e38:	27c00084 	addi	ra,r4,2
  808e3c:	84000204 	addi	r16,r16,8
  808e40:	3009883a 	mov	r4,r6
  808e44:	18fffc04 	addi	r3,r3,-16
  808e48:	19400448 	cmpgei	r5,r3,17
  808e4c:	28002026 	beq	r5,zero,808ed0 <___vfiprintf_internal_r+0xf48>
  808e50:	21800044 	addi	r6,r4,1
  808e54:	10800404 	addi	r2,r2,16
  808e58:	81c00015 	stw	r7,0(r16)
  808e5c:	83c00115 	stw	r15,4(r16)
  808e60:	d8800c15 	stw	r2,48(sp)
  808e64:	d9800b15 	stw	r6,44(sp)
  808e68:	31400208 	cmpgei	r5,r6,8
  808e6c:	283ff226 	beq	r5,zero,808e38 <___vfiprintf_internal_r+0xeb0>
  808e70:	d9800a04 	addi	r6,sp,40
  808e74:	a80b883a 	mov	r5,r21
  808e78:	b009883a 	mov	r4,r22
  808e7c:	10001f26 	beq	r2,zero,808efc <___vfiprintf_internal_r+0xf74>
  808e80:	d9c00815 	stw	r7,32(sp)
  808e84:	d8c00715 	stw	r3,28(sp)
  808e88:	da000615 	stw	r8,24(sp)
  808e8c:	db400315 	stw	r13,12(sp)
  808e90:	db800215 	stw	r14,8(sp)
  808e94:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808e98:	103d4e1e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808e9c:	d8c00717 	ldw	r3,28(sp)
  808ea0:	d9000b17 	ldw	r4,44(sp)
  808ea4:	d8800c17 	ldw	r2,48(sp)
  808ea8:	18fffc04 	addi	r3,r3,-16
  808eac:	19400448 	cmpgei	r5,r3,17
  808eb0:	d9c00817 	ldw	r7,32(sp)
  808eb4:	da000617 	ldw	r8,24(sp)
  808eb8:	db400317 	ldw	r13,12(sp)
  808ebc:	db800217 	ldw	r14,8(sp)
  808ec0:	9021883a 	mov	r16,r18
  808ec4:	27c00044 	addi	ra,r4,1
  808ec8:	03c00404 	movi	r15,16
  808ecc:	283fe01e 	bne	r5,zero,808e50 <___vfiprintf_internal_r+0xec8>
  808ed0:	10c5883a 	add	r2,r2,r3
  808ed4:	80c00115 	stw	r3,4(r16)
  808ed8:	81c00015 	stw	r7,0(r16)
  808edc:	d8800c15 	stw	r2,48(sp)
  808ee0:	dfc00b15 	stw	ra,44(sp)
  808ee4:	f8c00208 	cmpgei	r3,ra,8
  808ee8:	18002d1e 	bne	r3,zero,808fa0 <___vfiprintf_internal_r+0x1018>
  808eec:	84000204 	addi	r16,r16,8
  808ef0:	f9400044 	addi	r5,ra,1
  808ef4:	f809883a 	mov	r4,ra
  808ef8:	003ce906 	br	8082a0 <___vfiprintf_internal_r+0x318>
  808efc:	0009883a 	mov	r4,zero
  808f00:	07c00044 	movi	ra,1
  808f04:	9021883a 	mov	r16,r18
  808f08:	003fce06 	br	808e44 <___vfiprintf_internal_r+0xebc>
  808f0c:	8dc0010e 	bge	r17,r23,808f14 <___vfiprintf_internal_r+0xf8c>
  808f10:	b823883a 	mov	r17,r23
  808f14:	d8800117 	ldw	r2,4(sp)
  808f18:	1445883a 	add	r2,r2,r17
  808f1c:	d8800115 	stw	r2,4(sp)
  808f20:	003d2606 	br	8083bc <___vfiprintf_internal_r+0x434>
  808f24:	10007626 	beq	r2,zero,809100 <___vfiprintf_internal_r+0x1178>
  808f28:	d9800a04 	addi	r6,sp,40
  808f2c:	a80b883a 	mov	r5,r21
  808f30:	b009883a 	mov	r4,r22
  808f34:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808f38:	103d261e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808f3c:	d9400b17 	ldw	r5,44(sp)
  808f40:	d8800c17 	ldw	r2,48(sp)
  808f44:	d9801904 	addi	r6,sp,100
  808f48:	29400044 	addi	r5,r5,1
  808f4c:	9021883a 	mov	r16,r18
  808f50:	003d0006 	br	808354 <___vfiprintf_internal_r+0x3cc>
  808f54:	d8000b15 	stw	zero,44(sp)
  808f58:	9021883a 	mov	r16,r18
  808f5c:	003d7806 	br	808540 <___vfiprintf_internal_r+0x5b8>
  808f60:	4000ac1e 	bne	r8,zero,809214 <___vfiprintf_internal_r+0x128c>
  808f64:	0011883a 	mov	r8,zero
  808f68:	0039883a 	mov	fp,zero
  808f6c:	9027883a 	mov	r19,r18
  808f70:	003e6606 	br	80890c <___vfiprintf_internal_r+0x984>
  808f74:	7000411e 	bne	r14,zero,80907c <___vfiprintf_internal_r+0x10f4>
  808f78:	0009883a 	mov	r4,zero
  808f7c:	d9801904 	addi	r6,sp,100
  808f80:	01400044 	movi	r5,1
  808f84:	9021883a 	mov	r16,r18
  808f88:	003cee06 	br	808344 <___vfiprintf_internal_r+0x3bc>
  808f8c:	d9801904 	addi	r6,sp,100
  808f90:	01400044 	movi	r5,1
  808f94:	0009883a 	mov	r4,zero
  808f98:	9021883a 	mov	r16,r18
  808f9c:	003ce906 	br	808344 <___vfiprintf_internal_r+0x3bc>
  808fa0:	10004a26 	beq	r2,zero,8090cc <___vfiprintf_internal_r+0x1144>
  808fa4:	d9800a04 	addi	r6,sp,40
  808fa8:	a80b883a 	mov	r5,r21
  808fac:	b009883a 	mov	r4,r22
  808fb0:	da000615 	stw	r8,24(sp)
  808fb4:	db400315 	stw	r13,12(sp)
  808fb8:	db800215 	stw	r14,8(sp)
  808fbc:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  808fc0:	103d041e 	bne	r2,zero,8083d4 <___vfiprintf_internal_r+0x44c>
  808fc4:	d9000b17 	ldw	r4,44(sp)
  808fc8:	d8800c17 	ldw	r2,48(sp)
  808fcc:	da000617 	ldw	r8,24(sp)
  808fd0:	db400317 	ldw	r13,12(sp)
  808fd4:	db800217 	ldw	r14,8(sp)
  808fd8:	9021883a 	mov	r16,r18
  808fdc:	21400044 	addi	r5,r4,1
  808fe0:	003caf06 	br	8082a0 <___vfiprintf_internal_r+0x318>
  808fe4:	9027883a 	mov	r19,r18
  808fe8:	003e4806 	br	80890c <___vfiprintf_internal_r+0x984>
  808fec:	71400044 	addi	r5,r14,1
  808ff0:	69800204 	addi	r6,r13,8
  808ff4:	7009883a 	mov	r4,r14
  808ff8:	6821883a 	mov	r16,r13
  808ffc:	003cd306 	br	80834c <___vfiprintf_internal_r+0x3c4>
  809000:	25c00017 	ldw	r23,0(r4)
  809004:	d8c00415 	stw	r3,16(sp)
  809008:	b839d7fa 	srai	fp,r23,31
  80900c:	e005883a 	mov	r2,fp
  809010:	003db606 	br	8086ec <___vfiprintf_internal_r+0x764>
  809014:	00c00c04 	movi	r3,48
  809018:	d88009c5 	stb	r2,39(sp)
  80901c:	d8c00985 	stb	r3,38(sp)
  809020:	6b400094 	ori	r13,r13,2
  809024:	00800084 	movi	r2,2
  809028:	003d2706 	br	8084c8 <___vfiprintf_internal_r+0x540>
  80902c:	25c00017 	ldw	r23,0(r4)
  809030:	0039883a 	mov	fp,zero
  809034:	d8c00415 	stw	r3,16(sp)
  809038:	0005883a 	mov	r2,zero
  80903c:	003d2206 	br	8084c8 <___vfiprintf_internal_r+0x540>
  809040:	d9400117 	ldw	r5,4(sp)
  809044:	d9000415 	stw	r4,16(sp)
  809048:	2805d7fa 	srai	r2,r5,31
  80904c:	19400015 	stw	r5,0(r3)
  809050:	18800115 	stw	r2,4(r3)
  809054:	003bf506 	br	80802c <___vfiprintf_internal_r+0xa4>
  809058:	2dc00017 	ldw	r23,0(r5)
  80905c:	0039883a 	mov	fp,zero
  809060:	d9000415 	stw	r4,16(sp)
  809064:	003dc306 	br	808774 <___vfiprintf_internal_r+0x7ec>
  809068:	25c00017 	ldw	r23,0(r4)
  80906c:	0039883a 	mov	fp,zero
  809070:	d8c00415 	stw	r3,16(sp)
  809074:	00800044 	movi	r2,1
  809078:	003d1306 	br	8084c8 <___vfiprintf_internal_r+0x540>
  80907c:	d8800984 	addi	r2,sp,38
  809080:	d8801715 	stw	r2,92(sp)
  809084:	00800084 	movi	r2,2
  809088:	d8801815 	stw	r2,96(sp)
  80908c:	dc001904 	addi	r16,sp,100
  809090:	01000044 	movi	r4,1
  809094:	003f4006 	br	808d98 <___vfiprintf_internal_r+0xe10>
  809098:	0463c83a 	sub	r17,zero,r17
  80909c:	d8c00415 	stw	r3,16(sp)
  8090a0:	003e3806 	br	808984 <___vfiprintf_internal_r+0x9fc>
  8090a4:	9809883a 	mov	r4,r19
  8090a8:	d8c00215 	stw	r3,8(sp)
  8090ac:	db400015 	stw	r13,0(sp)
  8090b0:	0800a240 	call	800a24 <strlen>
  8090b4:	d8c00217 	ldw	r3,8(sp)
  8090b8:	db400017 	ldw	r13,0(sp)
  8090bc:	1039883a 	mov	fp,r2
  8090c0:	102f883a 	mov	r23,r2
  8090c4:	d8c00415 	stw	r3,16(sp)
  8090c8:	003c6606 	br	808264 <___vfiprintf_internal_r+0x2dc>
  8090cc:	d8c00947 	ldb	r3,37(sp)
  8090d0:	18004326 	beq	r3,zero,8091e0 <___vfiprintf_internal_r+0x1258>
  8090d4:	d8800944 	addi	r2,sp,37
  8090d8:	d8801715 	stw	r2,92(sp)
  8090dc:	00800044 	movi	r2,1
  8090e0:	d8801815 	stw	r2,96(sp)
  8090e4:	d9801904 	addi	r6,sp,100
  8090e8:	01400044 	movi	r5,1
  8090ec:	003c7806 	br	8082d0 <___vfiprintf_internal_r+0x348>
  8090f0:	d8800117 	ldw	r2,4(sp)
  8090f4:	18800015 	stw	r2,0(r3)
  8090f8:	d9000415 	stw	r4,16(sp)
  8090fc:	003bcb06 	br	80802c <___vfiprintf_internal_r+0xa4>
  809100:	00c00044 	movi	r3,1
  809104:	e005883a 	mov	r2,fp
  809108:	dcc01715 	stw	r19,92(sp)
  80910c:	df001815 	stw	fp,96(sp)
  809110:	df000c15 	stw	fp,48(sp)
  809114:	d8c00b15 	stw	r3,44(sp)
  809118:	d9801904 	addi	r6,sp,100
  80911c:	003c9c06 	br	808390 <___vfiprintf_internal_r+0x408>
  809120:	a0800043 	ldbu	r2,1(r20)
  809124:	6b400814 	ori	r13,r13,32
  809128:	a5000044 	addi	r20,r20,1
  80912c:	10803fcc 	andi	r2,r2,255
  809130:	1080201c 	xori	r2,r2,128
  809134:	10bfe004 	addi	r2,r2,-128
  809138:	003bd406 	br	80808c <___vfiprintf_internal_r+0x104>
  80913c:	408001f0 	cmpltui	r2,r8,7
  809140:	4039883a 	mov	fp,r8
  809144:	10002426 	beq	r2,zero,8091d8 <___vfiprintf_internal_r+0x1250>
  809148:	04c02074 	movhi	r19,129
  80914c:	e02f883a 	mov	r23,fp
  809150:	d8c00415 	stw	r3,16(sp)
  809154:	9cc03904 	addi	r19,r19,228
  809158:	003c4206 	br	808264 <___vfiprintf_internal_r+0x2dc>
  80915c:	d8c00417 	ldw	r3,16(sp)
  809160:	0039883a 	mov	fp,zero
  809164:	d9000415 	stw	r4,16(sp)
  809168:	1dc00017 	ldw	r23,0(r3)
  80916c:	003d8106 	br	808774 <___vfiprintf_internal_r+0x7ec>
  809170:	d8800417 	ldw	r2,16(sp)
  809174:	0039883a 	mov	fp,zero
  809178:	d8c00415 	stw	r3,16(sp)
  80917c:	15c00017 	ldw	r23,0(r2)
  809180:	0005883a 	mov	r2,zero
  809184:	003cd006 	br	8084c8 <___vfiprintf_internal_r+0x540>
  809188:	d8800417 	ldw	r2,16(sp)
  80918c:	d8c00415 	stw	r3,16(sp)
  809190:	15c00017 	ldw	r23,0(r2)
  809194:	b839d7fa 	srai	fp,r23,31
  809198:	e005883a 	mov	r2,fp
  80919c:	003d5306 	br	8086ec <___vfiprintf_internal_r+0x764>
  8091a0:	d8800417 	ldw	r2,16(sp)
  8091a4:	0039883a 	mov	fp,zero
  8091a8:	d8c00415 	stw	r3,16(sp)
  8091ac:	15c00017 	ldw	r23,0(r2)
  8091b0:	00800044 	movi	r2,1
  8091b4:	003cc406 	br	8084c8 <___vfiprintf_internal_r+0x540>
  8091b8:	3009883a 	mov	r4,r6
  8091bc:	39c0b404 	addi	r7,r7,720
  8091c0:	003ead06 	br	808c78 <___vfiprintf_internal_r+0xcf0>
  8091c4:	d9801904 	addi	r6,sp,100
  8091c8:	01400044 	movi	r5,1
  8091cc:	0009883a 	mov	r4,zero
  8091d0:	9021883a 	mov	r16,r18
  8091d4:	003c5d06 	br	80834c <___vfiprintf_internal_r+0x3c4>
  8091d8:	07000184 	movi	fp,6
  8091dc:	003fda06 	br	809148 <___vfiprintf_internal_r+0x11c0>
  8091e0:	703ee51e 	bne	r14,zero,808d78 <___vfiprintf_internal_r+0xdf0>
  8091e4:	0009883a 	mov	r4,zero
  8091e8:	d9801904 	addi	r6,sp,100
  8091ec:	01400044 	movi	r5,1
  8091f0:	9021883a 	mov	r16,r18
  8091f4:	003c5506 	br	80834c <___vfiprintf_internal_r+0x3c4>
  8091f8:	d9800945 	stb	r6,37(sp)
  8091fc:	003c1306 	br	80824c <___vfiprintf_internal_r+0x2c4>
  809200:	d9800a04 	addi	r6,sp,40
  809204:	a80b883a 	mov	r5,r21
  809208:	b009883a 	mov	r4,r22
  80920c:	0807e7c0 	call	807e7c <__sprint_r.part.0>
  809210:	003c7006 	br	8083d4 <___vfiprintf_internal_r+0x44c>
  809214:	db400017 	ldw	r13,0(sp)
  809218:	003d4106 	br	808720 <___vfiprintf_internal_r+0x798>
  80921c:	402f883a 	mov	r23,r8
  809220:	d8c00415 	stw	r3,16(sp)
  809224:	4039883a 	mov	fp,r8
  809228:	003c0e06 	br	808264 <___vfiprintf_internal_r+0x2dc>
  80922c:	d9800945 	stb	r6,37(sp)
  809230:	003d2606 	br	8086cc <___vfiprintf_internal_r+0x744>
  809234:	d9800945 	stb	r6,37(sp)
  809238:	003d4406 	br	80874c <___vfiprintf_internal_r+0x7c4>
  80923c:	d9800945 	stb	r6,37(sp)
  809240:	003d7c06 	br	808834 <___vfiprintf_internal_r+0x8ac>
  809244:	303f883a 	mov	ra,r6
  809248:	39c0b804 	addi	r7,r7,736
  80924c:	003f2006 	br	808ed0 <___vfiprintf_internal_r+0xf48>
  809250:	d9800945 	stb	r6,37(sp)
  809254:	003df806 	br	808a38 <___vfiprintf_internal_r+0xab0>
  809258:	d9800945 	stb	r6,37(sp)
  80925c:	003e0806 	br	808a80 <___vfiprintf_internal_r+0xaf8>
  809260:	21400044 	addi	r5,r4,1
  809264:	39c0b804 	addi	r7,r7,736
  809268:	003d0506 	br	808680 <___vfiprintf_internal_r+0x6f8>
  80926c:	00bfffc4 	movi	r2,-1
  809270:	d8800115 	stw	r2,4(sp)
  809274:	003c5a06 	br	8083e0 <___vfiprintf_internal_r+0x458>
  809278:	01c02074 	movhi	r7,129
  80927c:	301b883a 	mov	r13,r6
  809280:	281d883a 	mov	r14,r5
  809284:	39c0b404 	addi	r7,r7,720
  809288:	003e3e06 	br	808b84 <___vfiprintf_internal_r+0xbfc>
  80928c:	d8800417 	ldw	r2,16(sp)
  809290:	12000017 	ldw	r8,0(r2)
  809294:	10c00104 	addi	r3,r2,4
  809298:	4000010e 	bge	r8,zero,8092a0 <___vfiprintf_internal_r+0x1318>
  80929c:	023fffc4 	movi	r8,-1
  8092a0:	a0800043 	ldbu	r2,1(r20)
  8092a4:	d8c00415 	stw	r3,16(sp)
  8092a8:	2029883a 	mov	r20,r4
  8092ac:	10803fcc 	andi	r2,r2,255
  8092b0:	1080201c 	xori	r2,r2,128
  8092b4:	10bfe004 	addi	r2,r2,-128
  8092b8:	003b7406 	br	80808c <___vfiprintf_internal_r+0x104>

008092bc <__vfiprintf_internal>:
  8092bc:	00c02074 	movhi	r3,129
  8092c0:	2005883a 	mov	r2,r4
  8092c4:	19086517 	ldw	r4,8596(r3)
  8092c8:	300f883a 	mov	r7,r6
  8092cc:	280d883a 	mov	r6,r5
  8092d0:	100b883a 	mov	r5,r2
  8092d4:	0807f881 	jmpi	807f88 <___vfiprintf_internal_r>

008092d8 <__sbprintf>:
  8092d8:	2880030b 	ldhu	r2,12(r5)
  8092dc:	2b001917 	ldw	r12,100(r5)
  8092e0:	2ac0038b 	ldhu	r11,14(r5)
  8092e4:	2a800717 	ldw	r10,28(r5)
  8092e8:	2a400917 	ldw	r9,36(r5)
  8092ec:	defee204 	addi	sp,sp,-1144
  8092f0:	da001a04 	addi	r8,sp,104
  8092f4:	00c10004 	movi	r3,1024
  8092f8:	dc011a15 	stw	r16,1128(sp)
  8092fc:	10bfff4c 	andi	r2,r2,65533
  809300:	2821883a 	mov	r16,r5
  809304:	d80b883a 	mov	r5,sp
  809308:	dc811c15 	stw	r18,1136(sp)
  80930c:	dc411b15 	stw	r17,1132(sp)
  809310:	dfc11d15 	stw	ra,1140(sp)
  809314:	2025883a 	mov	r18,r4
  809318:	d880030d 	sth	r2,12(sp)
  80931c:	db001915 	stw	r12,100(sp)
  809320:	dac0038d 	sth	r11,14(sp)
  809324:	da800715 	stw	r10,28(sp)
  809328:	da400915 	stw	r9,36(sp)
  80932c:	da000015 	stw	r8,0(sp)
  809330:	da000415 	stw	r8,16(sp)
  809334:	d8c00215 	stw	r3,8(sp)
  809338:	d8c00515 	stw	r3,20(sp)
  80933c:	d8000615 	stw	zero,24(sp)
  809340:	0807f880 	call	807f88 <___vfiprintf_internal_r>
  809344:	1023883a 	mov	r17,r2
  809348:	10000d0e 	bge	r2,zero,809380 <__sbprintf+0xa8>
  80934c:	d880030b 	ldhu	r2,12(sp)
  809350:	1080100c 	andi	r2,r2,64
  809354:	10000326 	beq	r2,zero,809364 <__sbprintf+0x8c>
  809358:	8080030b 	ldhu	r2,12(r16)
  80935c:	10801014 	ori	r2,r2,64
  809360:	8080030d 	sth	r2,12(r16)
  809364:	8805883a 	mov	r2,r17
  809368:	dfc11d17 	ldw	ra,1140(sp)
  80936c:	dc811c17 	ldw	r18,1136(sp)
  809370:	dc411b17 	ldw	r17,1132(sp)
  809374:	dc011a17 	ldw	r16,1128(sp)
  809378:	dec11e04 	addi	sp,sp,1144
  80937c:	f800283a 	ret
  809380:	d80b883a 	mov	r5,sp
  809384:	9009883a 	mov	r4,r18
  809388:	080495c0 	call	80495c <_fflush_r>
  80938c:	103fef26 	beq	r2,zero,80934c <__sbprintf+0x74>
  809390:	047fffc4 	movi	r17,-1
  809394:	003fed06 	br	80934c <__sbprintf+0x74>

00809398 <_write_r>:
  809398:	2807883a 	mov	r3,r5
  80939c:	defffe04 	addi	sp,sp,-8
  8093a0:	dc000015 	stw	r16,0(sp)
  8093a4:	300b883a 	mov	r5,r6
  8093a8:	00802074 	movhi	r2,129
  8093ac:	380d883a 	mov	r6,r7
  8093b0:	2021883a 	mov	r16,r4
  8093b4:	1809883a 	mov	r4,r3
  8093b8:	dfc00115 	stw	ra,4(sp)
  8093bc:	100f6b15 	stw	zero,15788(r2)
  8093c0:	080e1040 	call	80e104 <write>
  8093c4:	10ffffd8 	cmpnei	r3,r2,-1
  8093c8:	18000426 	beq	r3,zero,8093dc <_write_r+0x44>
  8093cc:	dfc00117 	ldw	ra,4(sp)
  8093d0:	dc000017 	ldw	r16,0(sp)
  8093d4:	dec00204 	addi	sp,sp,8
  8093d8:	f800283a 	ret
  8093dc:	00c02074 	movhi	r3,129
  8093e0:	18cf6b17 	ldw	r3,15788(r3)
  8093e4:	183ff926 	beq	r3,zero,8093cc <_write_r+0x34>
  8093e8:	80c00015 	stw	r3,0(r16)
  8093ec:	dfc00117 	ldw	ra,4(sp)
  8093f0:	dc000017 	ldw	r16,0(sp)
  8093f4:	dec00204 	addi	sp,sp,8
  8093f8:	f800283a 	ret

008093fc <_close_r>:
  8093fc:	defffe04 	addi	sp,sp,-8
  809400:	dc000015 	stw	r16,0(sp)
  809404:	00802074 	movhi	r2,129
  809408:	2021883a 	mov	r16,r4
  80940c:	2809883a 	mov	r4,r5
  809410:	dfc00115 	stw	ra,4(sp)
  809414:	100f6b15 	stw	zero,15788(r2)
  809418:	080d6840 	call	80d684 <close>
  80941c:	10ffffd8 	cmpnei	r3,r2,-1
  809420:	18000426 	beq	r3,zero,809434 <_close_r+0x38>
  809424:	dfc00117 	ldw	ra,4(sp)
  809428:	dc000017 	ldw	r16,0(sp)
  80942c:	dec00204 	addi	sp,sp,8
  809430:	f800283a 	ret
  809434:	00c02074 	movhi	r3,129
  809438:	18cf6b17 	ldw	r3,15788(r3)
  80943c:	183ff926 	beq	r3,zero,809424 <_close_r+0x28>
  809440:	80c00015 	stw	r3,0(r16)
  809444:	dfc00117 	ldw	ra,4(sp)
  809448:	dc000017 	ldw	r16,0(sp)
  80944c:	dec00204 	addi	sp,sp,8
  809450:	f800283a 	ret

00809454 <__assert_func>:
  809454:	00802074 	movhi	r2,129
  809458:	12086517 	ldw	r8,8596(r2)
  80945c:	defffc04 	addi	sp,sp,-16
  809460:	3807883a 	mov	r3,r7
  809464:	3005883a 	mov	r2,r6
  809468:	dfc00315 	stw	ra,12(sp)
  80946c:	42400317 	ldw	r9,12(r8)
  809470:	200f883a 	mov	r7,r4
  809474:	2811883a 	mov	r8,r5
  809478:	180d883a 	mov	r6,r3
  80947c:	10000a26 	beq	r2,zero,8094a8 <__assert_func+0x54>
  809480:	00c02074 	movhi	r3,129
  809484:	18c0bc04 	addi	r3,r3,752
  809488:	01402074 	movhi	r5,129
  80948c:	2940c004 	addi	r5,r5,768
  809490:	4809883a 	mov	r4,r9
  809494:	d8c00115 	stw	r3,4(sp)
  809498:	da000015 	stw	r8,0(sp)
  80949c:	d8800215 	stw	r2,8(sp)
  8094a0:	08097400 	call	809740 <fiprintf>
  8094a4:	0809f880 	call	809f88 <abort>
  8094a8:	00c02074 	movhi	r3,129
  8094ac:	18c0bf04 	addi	r3,r3,764
  8094b0:	1805883a 	mov	r2,r3
  8094b4:	003ff406 	br	809488 <__assert_func+0x34>

008094b8 <__assert>:
  8094b8:	deffff04 	addi	sp,sp,-4
  8094bc:	300f883a 	mov	r7,r6
  8094c0:	000d883a 	mov	r6,zero
  8094c4:	dfc00015 	stw	ra,0(sp)
  8094c8:	08094540 	call	809454 <__assert_func>

008094cc <_calloc_r>:
  8094cc:	298b383a 	mul	r5,r5,r6
  8094d0:	deffff04 	addi	sp,sp,-4
  8094d4:	dfc00015 	stw	ra,0(sp)
  8094d8:	0805a540 	call	805a54 <_malloc_r>
  8094dc:	1009883a 	mov	r4,r2
  8094e0:	10000c26 	beq	r2,zero,809514 <_calloc_r+0x48>
  8094e4:	11bfff17 	ldw	r6,-4(r2)
  8094e8:	00bfff04 	movi	r2,-4
  8094ec:	308c703a 	and	r6,r6,r2
  8094f0:	31bfff04 	addi	r6,r6,-4
  8094f4:	30800968 	cmpgeui	r2,r6,37
  8094f8:	1000141e 	bne	r2,zero,80954c <_calloc_r+0x80>
  8094fc:	30800530 	cmpltui	r2,r6,20
  809500:	10000826 	beq	r2,zero,809524 <_calloc_r+0x58>
  809504:	2005883a 	mov	r2,r4
  809508:	10000015 	stw	zero,0(r2)
  80950c:	10000115 	stw	zero,4(r2)
  809510:	10000215 	stw	zero,8(r2)
  809514:	2005883a 	mov	r2,r4
  809518:	dfc00017 	ldw	ra,0(sp)
  80951c:	dec00104 	addi	sp,sp,4
  809520:	f800283a 	ret
  809524:	20000015 	stw	zero,0(r4)
  809528:	20000115 	stw	zero,4(r4)
  80952c:	30800728 	cmpgeui	r2,r6,28
  809530:	10000d26 	beq	r2,zero,809568 <_calloc_r+0x9c>
  809534:	20000215 	stw	zero,8(r4)
  809538:	20000315 	stw	zero,12(r4)
  80953c:	31800920 	cmpeqi	r6,r6,36
  809540:	30000b1e 	bne	r6,zero,809570 <_calloc_r+0xa4>
  809544:	20800404 	addi	r2,r4,16
  809548:	003fef06 	br	809508 <_calloc_r+0x3c>
  80954c:	000b883a 	mov	r5,zero
  809550:	08065300 	call	806530 <memset>
  809554:	1009883a 	mov	r4,r2
  809558:	2005883a 	mov	r2,r4
  80955c:	dfc00017 	ldw	ra,0(sp)
  809560:	dec00104 	addi	sp,sp,4
  809564:	f800283a 	ret
  809568:	20800204 	addi	r2,r4,8
  80956c:	003fe606 	br	809508 <_calloc_r+0x3c>
  809570:	20000415 	stw	zero,16(r4)
  809574:	20800604 	addi	r2,r4,24
  809578:	20000515 	stw	zero,20(r4)
  80957c:	003fe206 	br	809508 <_calloc_r+0x3c>

00809580 <_fclose_r.part.0>:
  809580:	defffc04 	addi	sp,sp,-16
  809584:	dc800215 	stw	r18,8(sp)
  809588:	dc400115 	stw	r17,4(sp)
  80958c:	dc000015 	stw	r16,0(sp)
  809590:	dfc00315 	stw	ra,12(sp)
  809594:	2821883a 	mov	r16,r5
  809598:	2023883a 	mov	r17,r4
  80959c:	08047340 	call	804734 <__sflush_r>
  8095a0:	80c00b17 	ldw	r3,44(r16)
  8095a4:	1025883a 	mov	r18,r2
  8095a8:	18000426 	beq	r3,zero,8095bc <_fclose_r.part.0+0x3c>
  8095ac:	81400717 	ldw	r5,28(r16)
  8095b0:	8809883a 	mov	r4,r17
  8095b4:	183ee83a 	callr	r3
  8095b8:	10001916 	blt	r2,zero,809620 <_fclose_r.part.0+0xa0>
  8095bc:	8080030b 	ldhu	r2,12(r16)
  8095c0:	1080200c 	andi	r2,r2,128
  8095c4:	10001a1e 	bne	r2,zero,809630 <_fclose_r.part.0+0xb0>
  8095c8:	81400c17 	ldw	r5,48(r16)
  8095cc:	28000526 	beq	r5,zero,8095e4 <_fclose_r.part.0+0x64>
  8095d0:	80801004 	addi	r2,r16,64
  8095d4:	28800226 	beq	r5,r2,8095e0 <_fclose_r.part.0+0x60>
  8095d8:	8809883a 	mov	r4,r17
  8095dc:	0804ef80 	call	804ef8 <_free_r>
  8095e0:	80000c15 	stw	zero,48(r16)
  8095e4:	81401117 	ldw	r5,68(r16)
  8095e8:	28000326 	beq	r5,zero,8095f8 <_fclose_r.part.0+0x78>
  8095ec:	8809883a 	mov	r4,r17
  8095f0:	0804ef80 	call	804ef8 <_free_r>
  8095f4:	80001115 	stw	zero,68(r16)
  8095f8:	0804da40 	call	804da4 <__sfp_lock_acquire>
  8095fc:	8000030d 	sth	zero,12(r16)
  809600:	0804da80 	call	804da8 <__sfp_lock_release>
  809604:	9005883a 	mov	r2,r18
  809608:	dfc00317 	ldw	ra,12(sp)
  80960c:	dc800217 	ldw	r18,8(sp)
  809610:	dc400117 	ldw	r17,4(sp)
  809614:	dc000017 	ldw	r16,0(sp)
  809618:	dec00404 	addi	sp,sp,16
  80961c:	f800283a 	ret
  809620:	8080030b 	ldhu	r2,12(r16)
  809624:	04bfffc4 	movi	r18,-1
  809628:	1080200c 	andi	r2,r2,128
  80962c:	103fe626 	beq	r2,zero,8095c8 <_fclose_r.part.0+0x48>
  809630:	81400417 	ldw	r5,16(r16)
  809634:	8809883a 	mov	r4,r17
  809638:	0804ef80 	call	804ef8 <_free_r>
  80963c:	003fe206 	br	8095c8 <_fclose_r.part.0+0x48>

00809640 <_fclose_r>:
  809640:	28001926 	beq	r5,zero,8096a8 <_fclose_r+0x68>
  809644:	defffd04 	addi	sp,sp,-12
  809648:	dc000115 	stw	r16,4(sp)
  80964c:	dfc00215 	stw	ra,8(sp)
  809650:	2021883a 	mov	r16,r4
  809654:	20000226 	beq	r4,zero,809660 <_fclose_r+0x20>
  809658:	20800e17 	ldw	r2,56(r4)
  80965c:	10000c26 	beq	r2,zero,809690 <_fclose_r+0x50>
  809660:	2880030f 	ldh	r2,12(r5)
  809664:	1000051e 	bne	r2,zero,80967c <_fclose_r+0x3c>
  809668:	0005883a 	mov	r2,zero
  80966c:	dfc00217 	ldw	ra,8(sp)
  809670:	dc000117 	ldw	r16,4(sp)
  809674:	dec00304 	addi	sp,sp,12
  809678:	f800283a 	ret
  80967c:	8009883a 	mov	r4,r16
  809680:	dfc00217 	ldw	ra,8(sp)
  809684:	dc000117 	ldw	r16,4(sp)
  809688:	dec00304 	addi	sp,sp,12
  80968c:	08095801 	jmpi	809580 <_fclose_r.part.0>
  809690:	d9400015 	stw	r5,0(sp)
  809694:	0804d940 	call	804d94 <__sinit>
  809698:	d9400017 	ldw	r5,0(sp)
  80969c:	2880030f 	ldh	r2,12(r5)
  8096a0:	103ff126 	beq	r2,zero,809668 <_fclose_r+0x28>
  8096a4:	003ff506 	br	80967c <_fclose_r+0x3c>
  8096a8:	0005883a 	mov	r2,zero
  8096ac:	f800283a 	ret

008096b0 <fclose>:
  8096b0:	20000826 	beq	r4,zero,8096d4 <fclose+0x24>
  8096b4:	00802074 	movhi	r2,129
  8096b8:	200b883a 	mov	r5,r4
  8096bc:	11086517 	ldw	r4,8596(r2)
  8096c0:	20000226 	beq	r4,zero,8096cc <fclose+0x1c>
  8096c4:	20800e17 	ldw	r2,56(r4)
  8096c8:	10000526 	beq	r2,zero,8096e0 <fclose+0x30>
  8096cc:	2880030f 	ldh	r2,12(r5)
  8096d0:	1000021e 	bne	r2,zero,8096dc <fclose+0x2c>
  8096d4:	0005883a 	mov	r2,zero
  8096d8:	f800283a 	ret
  8096dc:	08095801 	jmpi	809580 <_fclose_r.part.0>
  8096e0:	defffd04 	addi	sp,sp,-12
  8096e4:	d9400115 	stw	r5,4(sp)
  8096e8:	d9000015 	stw	r4,0(sp)
  8096ec:	dfc00215 	stw	ra,8(sp)
  8096f0:	0804d940 	call	804d94 <__sinit>
  8096f4:	d9400117 	ldw	r5,4(sp)
  8096f8:	d9000017 	ldw	r4,0(sp)
  8096fc:	2880030f 	ldh	r2,12(r5)
  809700:	10000326 	beq	r2,zero,809710 <fclose+0x60>
  809704:	dfc00217 	ldw	ra,8(sp)
  809708:	dec00304 	addi	sp,sp,12
  80970c:	08095801 	jmpi	809580 <_fclose_r.part.0>
  809710:	0005883a 	mov	r2,zero
  809714:	dfc00217 	ldw	ra,8(sp)
  809718:	dec00304 	addi	sp,sp,12
  80971c:	f800283a 	ret

00809720 <_fiprintf_r>:
  809720:	defffe04 	addi	sp,sp,-8
  809724:	dfc00015 	stw	ra,0(sp)
  809728:	d9c00115 	stw	r7,4(sp)
  80972c:	d9c00104 	addi	r7,sp,4
  809730:	0809cf40 	call	809cf4 <_vfiprintf_r>
  809734:	dfc00017 	ldw	ra,0(sp)
  809738:	dec00204 	addi	sp,sp,8
  80973c:	f800283a 	ret

00809740 <fiprintf>:
  809740:	defffd04 	addi	sp,sp,-12
  809744:	2005883a 	mov	r2,r4
  809748:	dfc00015 	stw	ra,0(sp)
  80974c:	d9800115 	stw	r6,4(sp)
  809750:	d9c00215 	stw	r7,8(sp)
  809754:	00c02074 	movhi	r3,129
  809758:	19086517 	ldw	r4,8596(r3)
  80975c:	280d883a 	mov	r6,r5
  809760:	d9c00104 	addi	r7,sp,4
  809764:	100b883a 	mov	r5,r2
  809768:	0809cf40 	call	809cf4 <_vfiprintf_r>
  80976c:	dfc00017 	ldw	ra,0(sp)
  809770:	dec00304 	addi	sp,sp,12
  809774:	f800283a 	ret

00809778 <__fputwc>:
  809778:	defff904 	addi	sp,sp,-28
  80977c:	dcc00415 	stw	r19,16(sp)
  809780:	dc800315 	stw	r18,12(sp)
  809784:	dc000115 	stw	r16,4(sp)
  809788:	dfc00615 	stw	ra,24(sp)
  80978c:	dd000515 	stw	r20,20(sp)
  809790:	dc400215 	stw	r17,8(sp)
  809794:	2025883a 	mov	r18,r4
  809798:	2827883a 	mov	r19,r5
  80979c:	3021883a 	mov	r16,r6
  8097a0:	0809aa40 	call	809aa4 <__locale_mb_cur_max>
  8097a4:	10800058 	cmpnei	r2,r2,1
  8097a8:	1000071e 	bne	r2,zero,8097c8 <__fputwc+0x50>
  8097ac:	98bfffc4 	addi	r2,r19,-1
  8097b0:	10803fe8 	cmpgeui	r2,r2,255
  8097b4:	1000041e 	bne	r2,zero,8097c8 <__fputwc+0x50>
  8097b8:	980b883a 	mov	r5,r19
  8097bc:	dcc000c5 	stb	r19,3(sp)
  8097c0:	05000044 	movi	r20,1
  8097c4:	00000a06 	br	8097f0 <__fputwc+0x78>
  8097c8:	81c01704 	addi	r7,r16,92
  8097cc:	980d883a 	mov	r6,r19
  8097d0:	d94000c4 	addi	r5,sp,3
  8097d4:	9009883a 	mov	r4,r18
  8097d8:	0809e580 	call	809e58 <_wcrtomb_r>
  8097dc:	1029883a 	mov	r20,r2
  8097e0:	10bfffd8 	cmpnei	r2,r2,-1
  8097e4:	10003926 	beq	r2,zero,8098cc <__fputwc+0x154>
  8097e8:	a0001f26 	beq	r20,zero,809868 <__fputwc+0xf0>
  8097ec:	d94000c3 	ldbu	r5,3(sp)
  8097f0:	0023883a 	mov	r17,zero
  8097f4:	00000a06 	br	809820 <__fputwc+0xa8>
  8097f8:	80800017 	ldw	r2,0(r16)
  8097fc:	11400005 	stb	r5,0(r2)
  809800:	80c00017 	ldw	r3,0(r16)
  809804:	18c00044 	addi	r3,r3,1
  809808:	80c00015 	stw	r3,0(r16)
  80980c:	8c400044 	addi	r17,r17,1
  809810:	d88000c4 	addi	r2,sp,3
  809814:	1447883a 	add	r3,r2,r17
  809818:	8d00132e 	bgeu	r17,r20,809868 <__fputwc+0xf0>
  80981c:	19400003 	ldbu	r5,0(r3)
  809820:	80c00217 	ldw	r3,8(r16)
  809824:	18ffffc4 	addi	r3,r3,-1
  809828:	80c00215 	stw	r3,8(r16)
  80982c:	183ff20e 	bge	r3,zero,8097f8 <__fputwc+0x80>
  809830:	80800617 	ldw	r2,24(r16)
  809834:	18801616 	blt	r3,r2,809890 <__fputwc+0x118>
  809838:	80800017 	ldw	r2,0(r16)
  80983c:	11400005 	stb	r5,0(r2)
  809840:	80800017 	ldw	r2,0(r16)
  809844:	10c00003 	ldbu	r3,0(r2)
  809848:	10800044 	addi	r2,r2,1
  80984c:	18c002a0 	cmpeqi	r3,r3,10
  809850:	1800171e 	bne	r3,zero,8098b0 <__fputwc+0x138>
  809854:	80800015 	stw	r2,0(r16)
  809858:	8c400044 	addi	r17,r17,1
  80985c:	d88000c4 	addi	r2,sp,3
  809860:	1447883a 	add	r3,r2,r17
  809864:	8d3fed36 	bltu	r17,r20,80981c <__fputwc+0xa4>
  809868:	9829883a 	mov	r20,r19
  80986c:	a005883a 	mov	r2,r20
  809870:	dfc00617 	ldw	ra,24(sp)
  809874:	dd000517 	ldw	r20,20(sp)
  809878:	dcc00417 	ldw	r19,16(sp)
  80987c:	dc800317 	ldw	r18,12(sp)
  809880:	dc400217 	ldw	r17,8(sp)
  809884:	dc000117 	ldw	r16,4(sp)
  809888:	dec00704 	addi	sp,sp,28
  80988c:	f800283a 	ret
  809890:	29403fcc 	andi	r5,r5,255
  809894:	800d883a 	mov	r6,r16
  809898:	9009883a 	mov	r4,r18
  80989c:	0809cf80 	call	809cf8 <__swbuf_r>
  8098a0:	10bfffe0 	cmpeqi	r2,r2,-1
  8098a4:	103fd926 	beq	r2,zero,80980c <__fputwc+0x94>
  8098a8:	053fffc4 	movi	r20,-1
  8098ac:	003fef06 	br	80986c <__fputwc+0xf4>
  8098b0:	800d883a 	mov	r6,r16
  8098b4:	01400284 	movi	r5,10
  8098b8:	9009883a 	mov	r4,r18
  8098bc:	0809cf80 	call	809cf8 <__swbuf_r>
  8098c0:	10bfffe0 	cmpeqi	r2,r2,-1
  8098c4:	103fd126 	beq	r2,zero,80980c <__fputwc+0x94>
  8098c8:	003ff706 	br	8098a8 <__fputwc+0x130>
  8098cc:	8080030b 	ldhu	r2,12(r16)
  8098d0:	10801014 	ori	r2,r2,64
  8098d4:	8080030d 	sth	r2,12(r16)
  8098d8:	003fe406 	br	80986c <__fputwc+0xf4>

008098dc <_fputwc_r>:
  8098dc:	3080030b 	ldhu	r2,12(r6)
  8098e0:	10c8000c 	andi	r3,r2,8192
  8098e4:	1800051e 	bne	r3,zero,8098fc <_fputwc_r+0x20>
  8098e8:	30c01917 	ldw	r3,100(r6)
  8098ec:	10880014 	ori	r2,r2,8192
  8098f0:	3080030d 	sth	r2,12(r6)
  8098f4:	18880014 	ori	r2,r3,8192
  8098f8:	30801915 	stw	r2,100(r6)
  8098fc:	08097781 	jmpi	809778 <__fputwc>

00809900 <fputwc>:
  809900:	defffc04 	addi	sp,sp,-16
  809904:	00802074 	movhi	r2,129
  809908:	dc000215 	stw	r16,8(sp)
  80990c:	14086517 	ldw	r16,8596(r2)
  809910:	dfc00315 	stw	ra,12(sp)
  809914:	280d883a 	mov	r6,r5
  809918:	200b883a 	mov	r5,r4
  80991c:	80000226 	beq	r16,zero,809928 <fputwc+0x28>
  809920:	80800e17 	ldw	r2,56(r16)
  809924:	10000d26 	beq	r2,zero,80995c <fputwc+0x5c>
  809928:	3080030b 	ldhu	r2,12(r6)
  80992c:	10c8000c 	andi	r3,r2,8192
  809930:	1800051e 	bne	r3,zero,809948 <fputwc+0x48>
  809934:	30c01917 	ldw	r3,100(r6)
  809938:	10880014 	ori	r2,r2,8192
  80993c:	3080030d 	sth	r2,12(r6)
  809940:	18880014 	ori	r2,r3,8192
  809944:	30801915 	stw	r2,100(r6)
  809948:	8009883a 	mov	r4,r16
  80994c:	dfc00317 	ldw	ra,12(sp)
  809950:	dc000217 	ldw	r16,8(sp)
  809954:	dec00404 	addi	sp,sp,16
  809958:	08097781 	jmpi	809778 <__fputwc>
  80995c:	d9000015 	stw	r4,0(sp)
  809960:	8009883a 	mov	r4,r16
  809964:	d9800115 	stw	r6,4(sp)
  809968:	0804d940 	call	804d94 <__sinit>
  80996c:	d9800117 	ldw	r6,4(sp)
  809970:	d9400017 	ldw	r5,0(sp)
  809974:	003fec06 	br	809928 <fputwc+0x28>

00809978 <_fstat_r>:
  809978:	2807883a 	mov	r3,r5
  80997c:	defffe04 	addi	sp,sp,-8
  809980:	dc000015 	stw	r16,0(sp)
  809984:	00802074 	movhi	r2,129
  809988:	300b883a 	mov	r5,r6
  80998c:	2021883a 	mov	r16,r4
  809990:	1809883a 	mov	r4,r3
  809994:	dfc00115 	stw	ra,4(sp)
  809998:	100f6b15 	stw	zero,15788(r2)
  80999c:	080d7f40 	call	80d7f4 <fstat>
  8099a0:	10ffffd8 	cmpnei	r3,r2,-1
  8099a4:	18000426 	beq	r3,zero,8099b8 <_fstat_r+0x40>
  8099a8:	dfc00117 	ldw	ra,4(sp)
  8099ac:	dc000017 	ldw	r16,0(sp)
  8099b0:	dec00204 	addi	sp,sp,8
  8099b4:	f800283a 	ret
  8099b8:	00c02074 	movhi	r3,129
  8099bc:	18cf6b17 	ldw	r3,15788(r3)
  8099c0:	183ff926 	beq	r3,zero,8099a8 <_fstat_r+0x30>
  8099c4:	80c00015 	stw	r3,0(r16)
  8099c8:	dfc00117 	ldw	ra,4(sp)
  8099cc:	dc000017 	ldw	r16,0(sp)
  8099d0:	dec00204 	addi	sp,sp,8
  8099d4:	f800283a 	ret

008099d8 <_isatty_r>:
  8099d8:	defffe04 	addi	sp,sp,-8
  8099dc:	dc000015 	stw	r16,0(sp)
  8099e0:	00802074 	movhi	r2,129
  8099e4:	2021883a 	mov	r16,r4
  8099e8:	2809883a 	mov	r4,r5
  8099ec:	dfc00115 	stw	ra,4(sp)
  8099f0:	100f6b15 	stw	zero,15788(r2)
  8099f4:	080d9000 	call	80d900 <isatty>
  8099f8:	10ffffd8 	cmpnei	r3,r2,-1
  8099fc:	18000426 	beq	r3,zero,809a10 <_isatty_r+0x38>
  809a00:	dfc00117 	ldw	ra,4(sp)
  809a04:	dc000017 	ldw	r16,0(sp)
  809a08:	dec00204 	addi	sp,sp,8
  809a0c:	f800283a 	ret
  809a10:	00c02074 	movhi	r3,129
  809a14:	18cf6b17 	ldw	r3,15788(r3)
  809a18:	183ff926 	beq	r3,zero,809a00 <_isatty_r+0x28>
  809a1c:	80c00015 	stw	r3,0(r16)
  809a20:	dfc00117 	ldw	ra,4(sp)
  809a24:	dc000017 	ldw	r16,0(sp)
  809a28:	dec00204 	addi	sp,sp,8
  809a2c:	f800283a 	ret

00809a30 <_setlocale_r>:
  809a30:	30001626 	beq	r6,zero,809a8c <_setlocale_r+0x5c>
  809a34:	01402074 	movhi	r5,129
  809a38:	defffe04 	addi	sp,sp,-8
  809a3c:	2940cd04 	addi	r5,r5,820
  809a40:	3009883a 	mov	r4,r6
  809a44:	dc000015 	stw	r16,0(sp)
  809a48:	dfc00115 	stw	ra,4(sp)
  809a4c:	3021883a 	mov	r16,r6
  809a50:	0809c3c0 	call	809c3c <strcmp>
  809a54:	1000061e 	bne	r2,zero,809a70 <_setlocale_r+0x40>
  809a58:	00802074 	movhi	r2,129
  809a5c:	1080cc04 	addi	r2,r2,816
  809a60:	dfc00117 	ldw	ra,4(sp)
  809a64:	dc000017 	ldw	r16,0(sp)
  809a68:	dec00204 	addi	sp,sp,8
  809a6c:	f800283a 	ret
  809a70:	80800003 	ldbu	r2,0(r16)
  809a74:	10bfef44 	addi	r2,r2,-67
  809a78:	10000726 	beq	r2,zero,809a98 <_setlocale_r+0x68>
  809a7c:	80800003 	ldbu	r2,0(r16)
  809a80:	103ff526 	beq	r2,zero,809a58 <_setlocale_r+0x28>
  809a84:	0005883a 	mov	r2,zero
  809a88:	003ff506 	br	809a60 <_setlocale_r+0x30>
  809a8c:	00802074 	movhi	r2,129
  809a90:	1080cc04 	addi	r2,r2,816
  809a94:	f800283a 	ret
  809a98:	80800043 	ldbu	r2,1(r16)
  809a9c:	103fee26 	beq	r2,zero,809a58 <_setlocale_r+0x28>
  809aa0:	003ff606 	br	809a7c <_setlocale_r+0x4c>

00809aa4 <__locale_mb_cur_max>:
  809aa4:	00802074 	movhi	r2,129
  809aa8:	1083d107 	ldb	r2,3908(r2)
  809aac:	f800283a 	ret

00809ab0 <setlocale>:
  809ab0:	28001626 	beq	r5,zero,809b0c <setlocale+0x5c>
  809ab4:	defffe04 	addi	sp,sp,-8
  809ab8:	dc000015 	stw	r16,0(sp)
  809abc:	2821883a 	mov	r16,r5
  809ac0:	01402074 	movhi	r5,129
  809ac4:	2940cd04 	addi	r5,r5,820
  809ac8:	8009883a 	mov	r4,r16
  809acc:	dfc00115 	stw	ra,4(sp)
  809ad0:	0809c3c0 	call	809c3c <strcmp>
  809ad4:	1000061e 	bne	r2,zero,809af0 <setlocale+0x40>
  809ad8:	00802074 	movhi	r2,129
  809adc:	1080cc04 	addi	r2,r2,816
  809ae0:	dfc00117 	ldw	ra,4(sp)
  809ae4:	dc000017 	ldw	r16,0(sp)
  809ae8:	dec00204 	addi	sp,sp,8
  809aec:	f800283a 	ret
  809af0:	80800003 	ldbu	r2,0(r16)
  809af4:	10bfef44 	addi	r2,r2,-67
  809af8:	10000726 	beq	r2,zero,809b18 <setlocale+0x68>
  809afc:	80800003 	ldbu	r2,0(r16)
  809b00:	103ff526 	beq	r2,zero,809ad8 <setlocale+0x28>
  809b04:	0005883a 	mov	r2,zero
  809b08:	003ff506 	br	809ae0 <setlocale+0x30>
  809b0c:	00802074 	movhi	r2,129
  809b10:	1080cc04 	addi	r2,r2,816
  809b14:	f800283a 	ret
  809b18:	80800043 	ldbu	r2,1(r16)
  809b1c:	103fee26 	beq	r2,zero,809ad8 <setlocale+0x28>
  809b20:	003ff606 	br	809afc <setlocale+0x4c>

00809b24 <_lseek_r>:
  809b24:	2807883a 	mov	r3,r5
  809b28:	defffe04 	addi	sp,sp,-8
  809b2c:	dc000015 	stw	r16,0(sp)
  809b30:	300b883a 	mov	r5,r6
  809b34:	00802074 	movhi	r2,129
  809b38:	380d883a 	mov	r6,r7
  809b3c:	2021883a 	mov	r16,r4
  809b40:	1809883a 	mov	r4,r3
  809b44:	dfc00115 	stw	ra,4(sp)
  809b48:	100f6b15 	stw	zero,15788(r2)
  809b4c:	080dc340 	call	80dc34 <lseek>
  809b50:	10ffffd8 	cmpnei	r3,r2,-1
  809b54:	18000426 	beq	r3,zero,809b68 <_lseek_r+0x44>
  809b58:	dfc00117 	ldw	ra,4(sp)
  809b5c:	dc000017 	ldw	r16,0(sp)
  809b60:	dec00204 	addi	sp,sp,8
  809b64:	f800283a 	ret
  809b68:	00c02074 	movhi	r3,129
  809b6c:	18cf6b17 	ldw	r3,15788(r3)
  809b70:	183ff926 	beq	r3,zero,809b58 <_lseek_r+0x34>
  809b74:	80c00015 	stw	r3,0(r16)
  809b78:	dfc00117 	ldw	ra,4(sp)
  809b7c:	dc000017 	ldw	r16,0(sp)
  809b80:	dec00204 	addi	sp,sp,8
  809b84:	f800283a 	ret

00809b88 <_mbtowc_r>:
  809b88:	00802074 	movhi	r2,129
  809b8c:	1083c017 	ldw	r2,3840(r2)
  809b90:	1000683a 	jmp	r2

00809b94 <__ascii_mbtowc>:
  809b94:	deffff04 	addi	sp,sp,-4
  809b98:	28000826 	beq	r5,zero,809bbc <__ascii_mbtowc+0x28>
  809b9c:	30000926 	beq	r6,zero,809bc4 <__ascii_mbtowc+0x30>
  809ba0:	38000b26 	beq	r7,zero,809bd0 <__ascii_mbtowc+0x3c>
  809ba4:	30800003 	ldbu	r2,0(r6)
  809ba8:	28800015 	stw	r2,0(r5)
  809bac:	30800003 	ldbu	r2,0(r6)
  809bb0:	1004c03a 	cmpne	r2,r2,zero
  809bb4:	dec00104 	addi	sp,sp,4
  809bb8:	f800283a 	ret
  809bbc:	d80b883a 	mov	r5,sp
  809bc0:	303ff71e 	bne	r6,zero,809ba0 <__ascii_mbtowc+0xc>
  809bc4:	0005883a 	mov	r2,zero
  809bc8:	dec00104 	addi	sp,sp,4
  809bcc:	f800283a 	ret
  809bd0:	00bfff84 	movi	r2,-2
  809bd4:	003ff706 	br	809bb4 <__ascii_mbtowc+0x20>

00809bd8 <_read_r>:
  809bd8:	2807883a 	mov	r3,r5
  809bdc:	defffe04 	addi	sp,sp,-8
  809be0:	dc000015 	stw	r16,0(sp)
  809be4:	300b883a 	mov	r5,r6
  809be8:	00802074 	movhi	r2,129
  809bec:	380d883a 	mov	r6,r7
  809bf0:	2021883a 	mov	r16,r4
  809bf4:	1809883a 	mov	r4,r3
  809bf8:	dfc00115 	stw	ra,4(sp)
  809bfc:	100f6b15 	stw	zero,15788(r2)
  809c00:	080de080 	call	80de08 <read>
  809c04:	10ffffd8 	cmpnei	r3,r2,-1
  809c08:	18000426 	beq	r3,zero,809c1c <_read_r+0x44>
  809c0c:	dfc00117 	ldw	ra,4(sp)
  809c10:	dc000017 	ldw	r16,0(sp)
  809c14:	dec00204 	addi	sp,sp,8
  809c18:	f800283a 	ret
  809c1c:	00c02074 	movhi	r3,129
  809c20:	18cf6b17 	ldw	r3,15788(r3)
  809c24:	183ff926 	beq	r3,zero,809c0c <_read_r+0x34>
  809c28:	80c00015 	stw	r3,0(r16)
  809c2c:	dfc00117 	ldw	ra,4(sp)
  809c30:	dc000017 	ldw	r16,0(sp)
  809c34:	dec00204 	addi	sp,sp,8
  809c38:	f800283a 	ret

00809c3c <strcmp>:
  809c3c:	2144b03a 	or	r2,r4,r5
  809c40:	108000cc 	andi	r2,r2,3
  809c44:	1000141e 	bne	r2,zero,809c98 <strcmp+0x5c>
  809c48:	20800017 	ldw	r2,0(r4)
  809c4c:	28c00017 	ldw	r3,0(r5)
  809c50:	10c0111e 	bne	r2,r3,809c98 <strcmp+0x5c>
  809c54:	01ffbff4 	movhi	r7,65279
  809c58:	01a02074 	movhi	r6,32897
  809c5c:	39ffbfc4 	addi	r7,r7,-257
  809c60:	31a02004 	addi	r6,r6,-32640
  809c64:	00000306 	br	809c74 <strcmp+0x38>
  809c68:	20800017 	ldw	r2,0(r4)
  809c6c:	28c00017 	ldw	r3,0(r5)
  809c70:	10c0091e 	bne	r2,r3,809c98 <strcmp+0x5c>
  809c74:	11c7883a 	add	r3,r2,r7
  809c78:	0084303a 	nor	r2,zero,r2
  809c7c:	1884703a 	and	r2,r3,r2
  809c80:	1184703a 	and	r2,r2,r6
  809c84:	21000104 	addi	r4,r4,4
  809c88:	29400104 	addi	r5,r5,4
  809c8c:	103ff626 	beq	r2,zero,809c68 <strcmp+0x2c>
  809c90:	0005883a 	mov	r2,zero
  809c94:	f800283a 	ret
  809c98:	20c00003 	ldbu	r3,0(r4)
  809c9c:	18803fcc 	andi	r2,r3,255
  809ca0:	1080201c 	xori	r2,r2,128
  809ca4:	10bfe004 	addi	r2,r2,-128
  809ca8:	1000071e 	bne	r2,zero,809cc8 <strcmp+0x8c>
  809cac:	00000a06 	br	809cd8 <strcmp+0x9c>
  809cb0:	20c00003 	ldbu	r3,0(r4)
  809cb4:	29400044 	addi	r5,r5,1
  809cb8:	18803fcc 	andi	r2,r3,255
  809cbc:	1080201c 	xori	r2,r2,128
  809cc0:	10bfe004 	addi	r2,r2,-128
  809cc4:	10000726 	beq	r2,zero,809ce4 <strcmp+0xa8>
  809cc8:	29800007 	ldb	r6,0(r5)
  809ccc:	21000044 	addi	r4,r4,1
  809cd0:	30bff726 	beq	r6,r2,809cb0 <strcmp+0x74>
  809cd4:	18803fcc 	andi	r2,r3,255
  809cd8:	28c00003 	ldbu	r3,0(r5)
  809cdc:	10c5c83a 	sub	r2,r2,r3
  809ce0:	f800283a 	ret
  809ce4:	28c00003 	ldbu	r3,0(r5)
  809ce8:	0005883a 	mov	r2,zero
  809cec:	10c5c83a 	sub	r2,r2,r3
  809cf0:	f800283a 	ret

00809cf4 <_vfiprintf_r>:
  809cf4:	0807f881 	jmpi	807f88 <___vfiprintf_internal_r>

00809cf8 <__swbuf_r>:
  809cf8:	defffb04 	addi	sp,sp,-20
  809cfc:	dcc00315 	stw	r19,12(sp)
  809d00:	dc400115 	stw	r17,4(sp)
  809d04:	dc000015 	stw	r16,0(sp)
  809d08:	dfc00415 	stw	ra,16(sp)
  809d0c:	dc800215 	stw	r18,8(sp)
  809d10:	2027883a 	mov	r19,r4
  809d14:	2823883a 	mov	r17,r5
  809d18:	3021883a 	mov	r16,r6
  809d1c:	20000226 	beq	r4,zero,809d28 <__swbuf_r+0x30>
  809d20:	20800e17 	ldw	r2,56(r4)
  809d24:	10003e26 	beq	r2,zero,809e20 <__swbuf_r+0x128>
  809d28:	80800617 	ldw	r2,24(r16)
  809d2c:	80c0030b 	ldhu	r3,12(r16)
  809d30:	80800215 	stw	r2,8(r16)
  809d34:	1880020c 	andi	r2,r3,8
  809d38:	10001f26 	beq	r2,zero,809db8 <__swbuf_r+0xc0>
  809d3c:	80800417 	ldw	r2,16(r16)
  809d40:	10001d26 	beq	r2,zero,809db8 <__swbuf_r+0xc0>
  809d44:	1948000c 	andi	r5,r3,8192
  809d48:	8c803fcc 	andi	r18,r17,255
  809d4c:	28002326 	beq	r5,zero,809ddc <__swbuf_r+0xe4>
  809d50:	80c00017 	ldw	r3,0(r16)
  809d54:	81000517 	ldw	r4,20(r16)
  809d58:	1885c83a 	sub	r2,r3,r2
  809d5c:	1100290e 	bge	r2,r4,809e04 <__swbuf_r+0x10c>
  809d60:	10800044 	addi	r2,r2,1
  809d64:	81400217 	ldw	r5,8(r16)
  809d68:	19000044 	addi	r4,r3,1
  809d6c:	81000015 	stw	r4,0(r16)
  809d70:	297fffc4 	addi	r5,r5,-1
  809d74:	81400215 	stw	r5,8(r16)
  809d78:	1c400005 	stb	r17,0(r3)
  809d7c:	80c00517 	ldw	r3,20(r16)
  809d80:	18802926 	beq	r3,r2,809e28 <__swbuf_r+0x130>
  809d84:	8080030b 	ldhu	r2,12(r16)
  809d88:	1080004c 	andi	r2,r2,1
  809d8c:	10000226 	beq	r2,zero,809d98 <__swbuf_r+0xa0>
  809d90:	90800298 	cmpnei	r2,r18,10
  809d94:	10002426 	beq	r2,zero,809e28 <__swbuf_r+0x130>
  809d98:	9005883a 	mov	r2,r18
  809d9c:	dfc00417 	ldw	ra,16(sp)
  809da0:	dcc00317 	ldw	r19,12(sp)
  809da4:	dc800217 	ldw	r18,8(sp)
  809da8:	dc400117 	ldw	r17,4(sp)
  809dac:	dc000017 	ldw	r16,0(sp)
  809db0:	dec00504 	addi	sp,sp,20
  809db4:	f800283a 	ret
  809db8:	800b883a 	mov	r5,r16
  809dbc:	9809883a 	mov	r4,r19
  809dc0:	0802c8c0 	call	802c8c <__swsetup_r>
  809dc4:	10001c1e 	bne	r2,zero,809e38 <__swbuf_r+0x140>
  809dc8:	80c0030b 	ldhu	r3,12(r16)
  809dcc:	80800417 	ldw	r2,16(r16)
  809dd0:	8c803fcc 	andi	r18,r17,255
  809dd4:	1948000c 	andi	r5,r3,8192
  809dd8:	283fdd1e 	bne	r5,zero,809d50 <__swbuf_r+0x58>
  809ddc:	81001917 	ldw	r4,100(r16)
  809de0:	18c80014 	ori	r3,r3,8192
  809de4:	0177ffc4 	movi	r5,-8193
  809de8:	2148703a 	and	r4,r4,r5
  809dec:	80c0030d 	sth	r3,12(r16)
  809df0:	80c00017 	ldw	r3,0(r16)
  809df4:	81001915 	stw	r4,100(r16)
  809df8:	81000517 	ldw	r4,20(r16)
  809dfc:	1885c83a 	sub	r2,r3,r2
  809e00:	113fd716 	blt	r2,r4,809d60 <__swbuf_r+0x68>
  809e04:	800b883a 	mov	r5,r16
  809e08:	9809883a 	mov	r4,r19
  809e0c:	080495c0 	call	80495c <_fflush_r>
  809e10:	1000091e 	bne	r2,zero,809e38 <__swbuf_r+0x140>
  809e14:	80c00017 	ldw	r3,0(r16)
  809e18:	00800044 	movi	r2,1
  809e1c:	003fd106 	br	809d64 <__swbuf_r+0x6c>
  809e20:	0804d940 	call	804d94 <__sinit>
  809e24:	003fc006 	br	809d28 <__swbuf_r+0x30>
  809e28:	800b883a 	mov	r5,r16
  809e2c:	9809883a 	mov	r4,r19
  809e30:	080495c0 	call	80495c <_fflush_r>
  809e34:	103fd826 	beq	r2,zero,809d98 <__swbuf_r+0xa0>
  809e38:	04bfffc4 	movi	r18,-1
  809e3c:	003fd606 	br	809d98 <__swbuf_r+0xa0>

00809e40 <__swbuf>:
  809e40:	00c02074 	movhi	r3,129
  809e44:	2005883a 	mov	r2,r4
  809e48:	19086517 	ldw	r4,8596(r3)
  809e4c:	280d883a 	mov	r6,r5
  809e50:	100b883a 	mov	r5,r2
  809e54:	0809cf81 	jmpi	809cf8 <__swbuf_r>

00809e58 <_wcrtomb_r>:
  809e58:	defffa04 	addi	sp,sp,-24
  809e5c:	dc400415 	stw	r17,16(sp)
  809e60:	dc000315 	stw	r16,12(sp)
  809e64:	00802074 	movhi	r2,129
  809e68:	dfc00515 	stw	ra,20(sp)
  809e6c:	1083bf17 	ldw	r2,3836(r2)
  809e70:	2023883a 	mov	r17,r4
  809e74:	3821883a 	mov	r16,r7
  809e78:	28000826 	beq	r5,zero,809e9c <_wcrtomb_r+0x44>
  809e7c:	103ee83a 	callr	r2
  809e80:	10ffffd8 	cmpnei	r3,r2,-1
  809e84:	18000a26 	beq	r3,zero,809eb0 <_wcrtomb_r+0x58>
  809e88:	dfc00517 	ldw	ra,20(sp)
  809e8c:	dc400417 	ldw	r17,16(sp)
  809e90:	dc000317 	ldw	r16,12(sp)
  809e94:	dec00604 	addi	sp,sp,24
  809e98:	f800283a 	ret
  809e9c:	000d883a 	mov	r6,zero
  809ea0:	d9400084 	addi	r5,sp,2
  809ea4:	103ee83a 	callr	r2
  809ea8:	10ffffd8 	cmpnei	r3,r2,-1
  809eac:	183ff61e 	bne	r3,zero,809e88 <_wcrtomb_r+0x30>
  809eb0:	00802284 	movi	r2,138
  809eb4:	80000015 	stw	zero,0(r16)
  809eb8:	88800015 	stw	r2,0(r17)
  809ebc:	00bfffc4 	movi	r2,-1
  809ec0:	003ff106 	br	809e88 <_wcrtomb_r+0x30>

00809ec4 <wcrtomb>:
  809ec4:	defffa04 	addi	sp,sp,-24
  809ec8:	00c02074 	movhi	r3,129
  809ecc:	dc400415 	stw	r17,16(sp)
  809ed0:	dc000315 	stw	r16,12(sp)
  809ed4:	1c486517 	ldw	r17,8596(r3)
  809ed8:	dfc00515 	stw	ra,20(sp)
  809edc:	00c02074 	movhi	r3,129
  809ee0:	18c3bf17 	ldw	r3,3836(r3)
  809ee4:	3021883a 	mov	r16,r6
  809ee8:	20000c26 	beq	r4,zero,809f1c <wcrtomb+0x58>
  809eec:	280d883a 	mov	r6,r5
  809ef0:	800f883a 	mov	r7,r16
  809ef4:	200b883a 	mov	r5,r4
  809ef8:	8809883a 	mov	r4,r17
  809efc:	183ee83a 	callr	r3
  809f00:	10ffffd8 	cmpnei	r3,r2,-1
  809f04:	18000c26 	beq	r3,zero,809f38 <wcrtomb+0x74>
  809f08:	dfc00517 	ldw	ra,20(sp)
  809f0c:	dc400417 	ldw	r17,16(sp)
  809f10:	dc000317 	ldw	r16,12(sp)
  809f14:	dec00604 	addi	sp,sp,24
  809f18:	f800283a 	ret
  809f1c:	300f883a 	mov	r7,r6
  809f20:	d9400084 	addi	r5,sp,2
  809f24:	000d883a 	mov	r6,zero
  809f28:	8809883a 	mov	r4,r17
  809f2c:	183ee83a 	callr	r3
  809f30:	10ffffd8 	cmpnei	r3,r2,-1
  809f34:	183ff41e 	bne	r3,zero,809f08 <wcrtomb+0x44>
  809f38:	00802284 	movi	r2,138
  809f3c:	80000015 	stw	zero,0(r16)
  809f40:	88800015 	stw	r2,0(r17)
  809f44:	00bfffc4 	movi	r2,-1
  809f48:	003fef06 	br	809f08 <wcrtomb+0x44>

00809f4c <_wctomb_r>:
  809f4c:	00802074 	movhi	r2,129
  809f50:	1083bf17 	ldw	r2,3836(r2)
  809f54:	1000683a 	jmp	r2

00809f58 <__ascii_wctomb>:
  809f58:	28000926 	beq	r5,zero,809f80 <__ascii_wctomb+0x28>
  809f5c:	30804030 	cmpltui	r2,r6,256
  809f60:	10000326 	beq	r2,zero,809f70 <__ascii_wctomb+0x18>
  809f64:	29800005 	stb	r6,0(r5)
  809f68:	00800044 	movi	r2,1
  809f6c:	f800283a 	ret
  809f70:	00802284 	movi	r2,138
  809f74:	20800015 	stw	r2,0(r4)
  809f78:	00bfffc4 	movi	r2,-1
  809f7c:	f800283a 	ret
  809f80:	0005883a 	mov	r2,zero
  809f84:	f800283a 	ret

00809f88 <abort>:
  809f88:	deffff04 	addi	sp,sp,-4
  809f8c:	01000184 	movi	r4,6
  809f90:	dfc00015 	stw	ra,0(sp)
  809f94:	080a2140 	call	80a214 <raise>
  809f98:	01000044 	movi	r4,1
  809f9c:	080d7800 	call	80d780 <_exit>

00809fa0 <_init_signal_r>:
  809fa0:	2080b717 	ldw	r2,732(r4)
  809fa4:	10000226 	beq	r2,zero,809fb0 <_init_signal_r+0x10>
  809fa8:	0005883a 	mov	r2,zero
  809fac:	f800283a 	ret
  809fb0:	defffe04 	addi	sp,sp,-8
  809fb4:	01402004 	movi	r5,128
  809fb8:	dc000015 	stw	r16,0(sp)
  809fbc:	dfc00115 	stw	ra,4(sp)
  809fc0:	2021883a 	mov	r16,r4
  809fc4:	0805a540 	call	805a54 <_malloc_r>
  809fc8:	8080b715 	stw	r2,732(r16)
  809fcc:	1009883a 	mov	r4,r2
  809fd0:	10000826 	beq	r2,zero,809ff4 <_init_signal_r+0x54>
  809fd4:	01802004 	movi	r6,128
  809fd8:	000b883a 	mov	r5,zero
  809fdc:	08065300 	call	806530 <memset>
  809fe0:	0005883a 	mov	r2,zero
  809fe4:	dfc00117 	ldw	ra,4(sp)
  809fe8:	dc000017 	ldw	r16,0(sp)
  809fec:	dec00204 	addi	sp,sp,8
  809ff0:	f800283a 	ret
  809ff4:	00bfffc4 	movi	r2,-1
  809ff8:	003ffa06 	br	809fe4 <_init_signal_r+0x44>

00809ffc <_signal_r>:
  809ffc:	defffc04 	addi	sp,sp,-16
  80a000:	dc400115 	stw	r17,4(sp)
  80a004:	dfc00315 	stw	ra,12(sp)
  80a008:	dc800215 	stw	r18,8(sp)
  80a00c:	dc000015 	stw	r16,0(sp)
  80a010:	28800830 	cmpltui	r2,r5,32
  80a014:	2023883a 	mov	r17,r4
  80a018:	10000e26 	beq	r2,zero,80a054 <_signal_r+0x58>
  80a01c:	20c0b717 	ldw	r3,732(r4)
  80a020:	2821883a 	mov	r16,r5
  80a024:	3025883a 	mov	r18,r6
  80a028:	18000e26 	beq	r3,zero,80a064 <_signal_r+0x68>
  80a02c:	802090ba 	slli	r16,r16,2
  80a030:	1c21883a 	add	r16,r3,r16
  80a034:	80800017 	ldw	r2,0(r16)
  80a038:	84800015 	stw	r18,0(r16)
  80a03c:	dfc00317 	ldw	ra,12(sp)
  80a040:	dc800217 	ldw	r18,8(sp)
  80a044:	dc400117 	ldw	r17,4(sp)
  80a048:	dc000017 	ldw	r16,0(sp)
  80a04c:	dec00404 	addi	sp,sp,16
  80a050:	f800283a 	ret
  80a054:	00800584 	movi	r2,22
  80a058:	20800015 	stw	r2,0(r4)
  80a05c:	00bfffc4 	movi	r2,-1
  80a060:	003ff606 	br	80a03c <_signal_r+0x40>
  80a064:	01402004 	movi	r5,128
  80a068:	0805a540 	call	805a54 <_malloc_r>
  80a06c:	8880b715 	stw	r2,732(r17)
  80a070:	10000626 	beq	r2,zero,80a08c <_signal_r+0x90>
  80a074:	01802004 	movi	r6,128
  80a078:	000b883a 	mov	r5,zero
  80a07c:	1009883a 	mov	r4,r2
  80a080:	08065300 	call	806530 <memset>
  80a084:	1007883a 	mov	r3,r2
  80a088:	003fe806 	br	80a02c <_signal_r+0x30>
  80a08c:	00bfffc4 	movi	r2,-1
  80a090:	003fea06 	br	80a03c <_signal_r+0x40>

0080a094 <_raise_r>:
  80a094:	28800830 	cmpltui	r2,r5,32
  80a098:	10002b26 	beq	r2,zero,80a148 <_raise_r+0xb4>
  80a09c:	2080b717 	ldw	r2,732(r4)
  80a0a0:	defffd04 	addi	sp,sp,-12
  80a0a4:	dc000115 	stw	r16,4(sp)
  80a0a8:	dfc00215 	stw	ra,8(sp)
  80a0ac:	2821883a 	mov	r16,r5
  80a0b0:	10001026 	beq	r2,zero,80a0f4 <_raise_r+0x60>
  80a0b4:	280690ba 	slli	r3,r5,2
  80a0b8:	10c5883a 	add	r2,r2,r3
  80a0bc:	10c00017 	ldw	r3,0(r2)
  80a0c0:	18000c26 	beq	r3,zero,80a0f4 <_raise_r+0x60>
  80a0c4:	19400060 	cmpeqi	r5,r3,1
  80a0c8:	28001a1e 	bne	r5,zero,80a134 <_raise_r+0xa0>
  80a0cc:	197fffd8 	cmpnei	r5,r3,-1
  80a0d0:	28001126 	beq	r5,zero,80a118 <_raise_r+0x84>
  80a0d4:	10000015 	stw	zero,0(r2)
  80a0d8:	8009883a 	mov	r4,r16
  80a0dc:	183ee83a 	callr	r3
  80a0e0:	0005883a 	mov	r2,zero
  80a0e4:	dfc00217 	ldw	ra,8(sp)
  80a0e8:	dc000117 	ldw	r16,4(sp)
  80a0ec:	dec00304 	addi	sp,sp,12
  80a0f0:	f800283a 	ret
  80a0f4:	d9000015 	stw	r4,0(sp)
  80a0f8:	080a4ec0 	call	80a4ec <_getpid_r>
  80a0fc:	d9000017 	ldw	r4,0(sp)
  80a100:	800d883a 	mov	r6,r16
  80a104:	100b883a 	mov	r5,r2
  80a108:	dfc00217 	ldw	ra,8(sp)
  80a10c:	dc000117 	ldw	r16,4(sp)
  80a110:	dec00304 	addi	sp,sp,12
  80a114:	080a48c1 	jmpi	80a48c <_kill_r>
  80a118:	00800584 	movi	r2,22
  80a11c:	20800015 	stw	r2,0(r4)
  80a120:	00800044 	movi	r2,1
  80a124:	dfc00217 	ldw	ra,8(sp)
  80a128:	dc000117 	ldw	r16,4(sp)
  80a12c:	dec00304 	addi	sp,sp,12
  80a130:	f800283a 	ret
  80a134:	0005883a 	mov	r2,zero
  80a138:	dfc00217 	ldw	ra,8(sp)
  80a13c:	dc000117 	ldw	r16,4(sp)
  80a140:	dec00304 	addi	sp,sp,12
  80a144:	f800283a 	ret
  80a148:	00800584 	movi	r2,22
  80a14c:	20800015 	stw	r2,0(r4)
  80a150:	00bfffc4 	movi	r2,-1
  80a154:	f800283a 	ret

0080a158 <__sigtramp_r>:
  80a158:	28800830 	cmpltui	r2,r5,32
  80a15c:	10002b26 	beq	r2,zero,80a20c <__sigtramp_r+0xb4>
  80a160:	20c0b717 	ldw	r3,732(r4)
  80a164:	defffd04 	addi	sp,sp,-12
  80a168:	dc400115 	stw	r17,4(sp)
  80a16c:	dc000015 	stw	r16,0(sp)
  80a170:	dfc00215 	stw	ra,8(sp)
  80a174:	2821883a 	mov	r16,r5
  80a178:	2023883a 	mov	r17,r4
  80a17c:	18001326 	beq	r3,zero,80a1cc <__sigtramp_r+0x74>
  80a180:	800490ba 	slli	r2,r16,2
  80a184:	1887883a 	add	r3,r3,r2
  80a188:	18800017 	ldw	r2,0(r3)
  80a18c:	10000d26 	beq	r2,zero,80a1c4 <__sigtramp_r+0x6c>
  80a190:	113fffe0 	cmpeqi	r4,r2,-1
  80a194:	2000191e 	bne	r4,zero,80a1fc <__sigtramp_r+0xa4>
  80a198:	11000060 	cmpeqi	r4,r2,1
  80a19c:	2000151e 	bne	r4,zero,80a1f4 <__sigtramp_r+0x9c>
  80a1a0:	18000015 	stw	zero,0(r3)
  80a1a4:	8009883a 	mov	r4,r16
  80a1a8:	103ee83a 	callr	r2
  80a1ac:	0005883a 	mov	r2,zero
  80a1b0:	dfc00217 	ldw	ra,8(sp)
  80a1b4:	dc400117 	ldw	r17,4(sp)
  80a1b8:	dc000017 	ldw	r16,0(sp)
  80a1bc:	dec00304 	addi	sp,sp,12
  80a1c0:	f800283a 	ret
  80a1c4:	00800044 	movi	r2,1
  80a1c8:	003ff906 	br	80a1b0 <__sigtramp_r+0x58>
  80a1cc:	01402004 	movi	r5,128
  80a1d0:	0805a540 	call	805a54 <_malloc_r>
  80a1d4:	8880b715 	stw	r2,732(r17)
  80a1d8:	10000a26 	beq	r2,zero,80a204 <__sigtramp_r+0xac>
  80a1dc:	01802004 	movi	r6,128
  80a1e0:	000b883a 	mov	r5,zero
  80a1e4:	1009883a 	mov	r4,r2
  80a1e8:	08065300 	call	806530 <memset>
  80a1ec:	1007883a 	mov	r3,r2
  80a1f0:	003fe306 	br	80a180 <__sigtramp_r+0x28>
  80a1f4:	008000c4 	movi	r2,3
  80a1f8:	003fed06 	br	80a1b0 <__sigtramp_r+0x58>
  80a1fc:	00800084 	movi	r2,2
  80a200:	003feb06 	br	80a1b0 <__sigtramp_r+0x58>
  80a204:	00bfffc4 	movi	r2,-1
  80a208:	003fe906 	br	80a1b0 <__sigtramp_r+0x58>
  80a20c:	00bfffc4 	movi	r2,-1
  80a210:	f800283a 	ret

0080a214 <raise>:
  80a214:	defffd04 	addi	sp,sp,-12
  80a218:	dc400115 	stw	r17,4(sp)
  80a21c:	00c02074 	movhi	r3,129
  80a220:	dfc00215 	stw	ra,8(sp)
  80a224:	dc000015 	stw	r16,0(sp)
  80a228:	20800830 	cmpltui	r2,r4,32
  80a22c:	1c486517 	ldw	r17,8596(r3)
  80a230:	10002326 	beq	r2,zero,80a2c0 <raise+0xac>
  80a234:	8880b717 	ldw	r2,732(r17)
  80a238:	2021883a 	mov	r16,r4
  80a23c:	10001026 	beq	r2,zero,80a280 <raise+0x6c>
  80a240:	200690ba 	slli	r3,r4,2
  80a244:	10c5883a 	add	r2,r2,r3
  80a248:	10c00017 	ldw	r3,0(r2)
  80a24c:	18000c26 	beq	r3,zero,80a280 <raise+0x6c>
  80a250:	19400060 	cmpeqi	r5,r3,1
  80a254:	2800181e 	bne	r5,zero,80a2b8 <raise+0xa4>
  80a258:	197fffd8 	cmpnei	r5,r3,-1
  80a25c:	28001226 	beq	r5,zero,80a2a8 <raise+0x94>
  80a260:	10000015 	stw	zero,0(r2)
  80a264:	183ee83a 	callr	r3
  80a268:	0005883a 	mov	r2,zero
  80a26c:	dfc00217 	ldw	ra,8(sp)
  80a270:	dc400117 	ldw	r17,4(sp)
  80a274:	dc000017 	ldw	r16,0(sp)
  80a278:	dec00304 	addi	sp,sp,12
  80a27c:	f800283a 	ret
  80a280:	8809883a 	mov	r4,r17
  80a284:	080a4ec0 	call	80a4ec <_getpid_r>
  80a288:	800d883a 	mov	r6,r16
  80a28c:	100b883a 	mov	r5,r2
  80a290:	8809883a 	mov	r4,r17
  80a294:	dfc00217 	ldw	ra,8(sp)
  80a298:	dc400117 	ldw	r17,4(sp)
  80a29c:	dc000017 	ldw	r16,0(sp)
  80a2a0:	dec00304 	addi	sp,sp,12
  80a2a4:	080a48c1 	jmpi	80a48c <_kill_r>
  80a2a8:	00800584 	movi	r2,22
  80a2ac:	88800015 	stw	r2,0(r17)
  80a2b0:	00800044 	movi	r2,1
  80a2b4:	003fed06 	br	80a26c <raise+0x58>
  80a2b8:	0005883a 	mov	r2,zero
  80a2bc:	003feb06 	br	80a26c <raise+0x58>
  80a2c0:	00800584 	movi	r2,22
  80a2c4:	88800015 	stw	r2,0(r17)
  80a2c8:	00bfffc4 	movi	r2,-1
  80a2cc:	003fe706 	br	80a26c <raise+0x58>

0080a2d0 <signal>:
  80a2d0:	defffc04 	addi	sp,sp,-16
  80a2d4:	dc800215 	stw	r18,8(sp)
  80a2d8:	00c02074 	movhi	r3,129
  80a2dc:	dfc00315 	stw	ra,12(sp)
  80a2e0:	dc400115 	stw	r17,4(sp)
  80a2e4:	dc000015 	stw	r16,0(sp)
  80a2e8:	20800830 	cmpltui	r2,r4,32
  80a2ec:	1c886517 	ldw	r18,8596(r3)
  80a2f0:	10000e26 	beq	r2,zero,80a32c <signal+0x5c>
  80a2f4:	2021883a 	mov	r16,r4
  80a2f8:	9100b717 	ldw	r4,732(r18)
  80a2fc:	2823883a 	mov	r17,r5
  80a300:	20000e26 	beq	r4,zero,80a33c <signal+0x6c>
  80a304:	802090ba 	slli	r16,r16,2
  80a308:	2421883a 	add	r16,r4,r16
  80a30c:	80800017 	ldw	r2,0(r16)
  80a310:	84400015 	stw	r17,0(r16)
  80a314:	dfc00317 	ldw	ra,12(sp)
  80a318:	dc800217 	ldw	r18,8(sp)
  80a31c:	dc400117 	ldw	r17,4(sp)
  80a320:	dc000017 	ldw	r16,0(sp)
  80a324:	dec00404 	addi	sp,sp,16
  80a328:	f800283a 	ret
  80a32c:	00800584 	movi	r2,22
  80a330:	90800015 	stw	r2,0(r18)
  80a334:	00bfffc4 	movi	r2,-1
  80a338:	003ff606 	br	80a314 <signal+0x44>
  80a33c:	9009883a 	mov	r4,r18
  80a340:	01402004 	movi	r5,128
  80a344:	0805a540 	call	805a54 <_malloc_r>
  80a348:	9080b715 	stw	r2,732(r18)
  80a34c:	1009883a 	mov	r4,r2
  80a350:	10000526 	beq	r2,zero,80a368 <signal+0x98>
  80a354:	01802004 	movi	r6,128
  80a358:	000b883a 	mov	r5,zero
  80a35c:	08065300 	call	806530 <memset>
  80a360:	1009883a 	mov	r4,r2
  80a364:	003fe706 	br	80a304 <signal+0x34>
  80a368:	00bfffc4 	movi	r2,-1
  80a36c:	003fe906 	br	80a314 <signal+0x44>

0080a370 <_init_signal>:
  80a370:	defffe04 	addi	sp,sp,-8
  80a374:	00802074 	movhi	r2,129
  80a378:	dc000015 	stw	r16,0(sp)
  80a37c:	14086517 	ldw	r16,8596(r2)
  80a380:	dfc00115 	stw	ra,4(sp)
  80a384:	8080b717 	ldw	r2,732(r16)
  80a388:	10000526 	beq	r2,zero,80a3a0 <_init_signal+0x30>
  80a38c:	0005883a 	mov	r2,zero
  80a390:	dfc00117 	ldw	ra,4(sp)
  80a394:	dc000017 	ldw	r16,0(sp)
  80a398:	dec00204 	addi	sp,sp,8
  80a39c:	f800283a 	ret
  80a3a0:	8009883a 	mov	r4,r16
  80a3a4:	01402004 	movi	r5,128
  80a3a8:	0805a540 	call	805a54 <_malloc_r>
  80a3ac:	8080b715 	stw	r2,732(r16)
  80a3b0:	1009883a 	mov	r4,r2
  80a3b4:	10000426 	beq	r2,zero,80a3c8 <_init_signal+0x58>
  80a3b8:	01802004 	movi	r6,128
  80a3bc:	000b883a 	mov	r5,zero
  80a3c0:	08065300 	call	806530 <memset>
  80a3c4:	003ff106 	br	80a38c <_init_signal+0x1c>
  80a3c8:	00bfffc4 	movi	r2,-1
  80a3cc:	003ff006 	br	80a390 <_init_signal+0x20>

0080a3d0 <__sigtramp>:
  80a3d0:	defffd04 	addi	sp,sp,-12
  80a3d4:	dc400115 	stw	r17,4(sp)
  80a3d8:	00c02074 	movhi	r3,129
  80a3dc:	dfc00215 	stw	ra,8(sp)
  80a3e0:	dc000015 	stw	r16,0(sp)
  80a3e4:	20800830 	cmpltui	r2,r4,32
  80a3e8:	1c486517 	ldw	r17,8596(r3)
  80a3ec:	10002526 	beq	r2,zero,80a484 <__sigtramp+0xb4>
  80a3f0:	88c0b717 	ldw	r3,732(r17)
  80a3f4:	2021883a 	mov	r16,r4
  80a3f8:	18001326 	beq	r3,zero,80a448 <__sigtramp+0x78>
  80a3fc:	800890ba 	slli	r4,r16,2
  80a400:	1907883a 	add	r3,r3,r4
  80a404:	18800017 	ldw	r2,0(r3)
  80a408:	10000d26 	beq	r2,zero,80a440 <__sigtramp+0x70>
  80a40c:	113fffe0 	cmpeqi	r4,r2,-1
  80a410:	20001a1e 	bne	r4,zero,80a47c <__sigtramp+0xac>
  80a414:	11000060 	cmpeqi	r4,r2,1
  80a418:	2000161e 	bne	r4,zero,80a474 <__sigtramp+0xa4>
  80a41c:	18000015 	stw	zero,0(r3)
  80a420:	8009883a 	mov	r4,r16
  80a424:	103ee83a 	callr	r2
  80a428:	0005883a 	mov	r2,zero
  80a42c:	dfc00217 	ldw	ra,8(sp)
  80a430:	dc400117 	ldw	r17,4(sp)
  80a434:	dc000017 	ldw	r16,0(sp)
  80a438:	dec00304 	addi	sp,sp,12
  80a43c:	f800283a 	ret
  80a440:	00800044 	movi	r2,1
  80a444:	003ff906 	br	80a42c <__sigtramp+0x5c>
  80a448:	01402004 	movi	r5,128
  80a44c:	8809883a 	mov	r4,r17
  80a450:	0805a540 	call	805a54 <_malloc_r>
  80a454:	8880b715 	stw	r2,732(r17)
  80a458:	10000a26 	beq	r2,zero,80a484 <__sigtramp+0xb4>
  80a45c:	01802004 	movi	r6,128
  80a460:	000b883a 	mov	r5,zero
  80a464:	1009883a 	mov	r4,r2
  80a468:	08065300 	call	806530 <memset>
  80a46c:	1007883a 	mov	r3,r2
  80a470:	003fe206 	br	80a3fc <__sigtramp+0x2c>
  80a474:	008000c4 	movi	r2,3
  80a478:	003fec06 	br	80a42c <__sigtramp+0x5c>
  80a47c:	00800084 	movi	r2,2
  80a480:	003fea06 	br	80a42c <__sigtramp+0x5c>
  80a484:	00bfffc4 	movi	r2,-1
  80a488:	003fe806 	br	80a42c <__sigtramp+0x5c>

0080a48c <_kill_r>:
  80a48c:	2807883a 	mov	r3,r5
  80a490:	defffe04 	addi	sp,sp,-8
  80a494:	dc000015 	stw	r16,0(sp)
  80a498:	00802074 	movhi	r2,129
  80a49c:	300b883a 	mov	r5,r6
  80a4a0:	2021883a 	mov	r16,r4
  80a4a4:	1809883a 	mov	r4,r3
  80a4a8:	dfc00115 	stw	ra,4(sp)
  80a4ac:	100f6b15 	stw	zero,15788(r2)
  80a4b0:	080d9e00 	call	80d9e0 <kill>
  80a4b4:	10ffffd8 	cmpnei	r3,r2,-1
  80a4b8:	18000426 	beq	r3,zero,80a4cc <_kill_r+0x40>
  80a4bc:	dfc00117 	ldw	ra,4(sp)
  80a4c0:	dc000017 	ldw	r16,0(sp)
  80a4c4:	dec00204 	addi	sp,sp,8
  80a4c8:	f800283a 	ret
  80a4cc:	00c02074 	movhi	r3,129
  80a4d0:	18cf6b17 	ldw	r3,15788(r3)
  80a4d4:	183ff926 	beq	r3,zero,80a4bc <_kill_r+0x30>
  80a4d8:	80c00015 	stw	r3,0(r16)
  80a4dc:	dfc00117 	ldw	ra,4(sp)
  80a4e0:	dc000017 	ldw	r16,0(sp)
  80a4e4:	dec00204 	addi	sp,sp,8
  80a4e8:	f800283a 	ret

0080a4ec <_getpid_r>:
  80a4ec:	080d8a41 	jmpi	80d8a4 <getpid>

0080a4f0 <__udivdi3>:
  80a4f0:	defff504 	addi	sp,sp,-44
  80a4f4:	dcc00415 	stw	r19,16(sp)
  80a4f8:	dc000115 	stw	r16,4(sp)
  80a4fc:	dfc00a15 	stw	ra,40(sp)
  80a500:	df000915 	stw	fp,36(sp)
  80a504:	ddc00815 	stw	r23,32(sp)
  80a508:	dd800715 	stw	r22,28(sp)
  80a50c:	dd400615 	stw	r21,24(sp)
  80a510:	dd000515 	stw	r20,20(sp)
  80a514:	dc800315 	stw	r18,12(sp)
  80a518:	dc400215 	stw	r17,8(sp)
  80a51c:	2027883a 	mov	r19,r4
  80a520:	2821883a 	mov	r16,r5
  80a524:	3800411e 	bne	r7,zero,80a62c <__udivdi3+0x13c>
  80a528:	3829883a 	mov	r20,r7
  80a52c:	3023883a 	mov	r17,r6
  80a530:	2025883a 	mov	r18,r4
  80a534:	29805d2e 	bgeu	r5,r6,80a6ac <__udivdi3+0x1bc>
  80a538:	00bfffd4 	movui	r2,65535
  80a53c:	282b883a 	mov	r21,r5
  80a540:	1180a02e 	bgeu	r2,r6,80a7c4 <__udivdi3+0x2d4>
  80a544:	00804034 	movhi	r2,256
  80a548:	30813636 	bltu	r6,r2,80aa24 <__udivdi3+0x534>
  80a54c:	3006d63a 	srli	r3,r6,24
  80a550:	05000604 	movi	r20,24
  80a554:	00802074 	movhi	r2,129
  80a558:	1885883a 	add	r2,r3,r2
  80a55c:	10bfea03 	ldbu	r2,-88(r2)
  80a560:	00c00804 	movi	r3,32
  80a564:	1505883a 	add	r2,r2,r20
  80a568:	1889c83a 	sub	r4,r3,r2
  80a56c:	18800526 	beq	r3,r2,80a584 <__udivdi3+0x94>
  80a570:	8120983a 	sll	r16,r16,r4
  80a574:	9884d83a 	srl	r2,r19,r2
  80a578:	3122983a 	sll	r17,r6,r4
  80a57c:	9924983a 	sll	r18,r19,r4
  80a580:	142ab03a 	or	r21,r2,r16
  80a584:	882cd43a 	srli	r22,r17,16
  80a588:	a809883a 	mov	r4,r21
  80a58c:	8d3fffcc 	andi	r20,r17,65535
  80a590:	b00b883a 	mov	r5,r22
  80a594:	080b10c0 	call	80b10c <__umodsi3>
  80a598:	a809883a 	mov	r4,r21
  80a59c:	b00b883a 	mov	r5,r22
  80a5a0:	1027883a 	mov	r19,r2
  80a5a4:	080b0a80 	call	80b0a8 <__udivsi3>
  80a5a8:	9826943a 	slli	r19,r19,16
  80a5ac:	9008d43a 	srli	r4,r18,16
  80a5b0:	1021883a 	mov	r16,r2
  80a5b4:	a085383a 	mul	r2,r20,r2
  80a5b8:	9908b03a 	or	r4,r19,r4
  80a5bc:	2080052e 	bgeu	r4,r2,80a5d4 <__udivdi3+0xe4>
  80a5c0:	2449883a 	add	r4,r4,r17
  80a5c4:	80ffffc4 	addi	r3,r16,-1
  80a5c8:	24400136 	bltu	r4,r17,80a5d0 <__udivdi3+0xe0>
  80a5cc:	20812636 	bltu	r4,r2,80aa68 <__udivdi3+0x578>
  80a5d0:	1821883a 	mov	r16,r3
  80a5d4:	20a7c83a 	sub	r19,r4,r2
  80a5d8:	9809883a 	mov	r4,r19
  80a5dc:	b00b883a 	mov	r5,r22
  80a5e0:	080b10c0 	call	80b10c <__umodsi3>
  80a5e4:	9809883a 	mov	r4,r19
  80a5e8:	b00b883a 	mov	r5,r22
  80a5ec:	1027883a 	mov	r19,r2
  80a5f0:	9826943a 	slli	r19,r19,16
  80a5f4:	080b0a80 	call	80b0a8 <__udivsi3>
  80a5f8:	a0a9383a 	mul	r20,r20,r2
  80a5fc:	94bfffcc 	andi	r18,r18,65535
  80a600:	9ca4b03a 	or	r18,r19,r18
  80a604:	9500052e 	bgeu	r18,r20,80a61c <__udivdi3+0x12c>
  80a608:	8ca5883a 	add	r18,r17,r18
  80a60c:	10ffffc4 	addi	r3,r2,-1
  80a610:	94400136 	bltu	r18,r17,80a618 <__udivdi3+0x128>
  80a614:	95011236 	bltu	r18,r20,80aa60 <__udivdi3+0x570>
  80a618:	1805883a 	mov	r2,r3
  80a61c:	8020943a 	slli	r16,r16,16
  80a620:	0007883a 	mov	r3,zero
  80a624:	8084b03a 	or	r2,r16,r2
  80a628:	00000306 	br	80a638 <__udivdi3+0x148>
  80a62c:	29c00e2e 	bgeu	r5,r7,80a668 <__udivdi3+0x178>
  80a630:	0007883a 	mov	r3,zero
  80a634:	0005883a 	mov	r2,zero
  80a638:	dfc00a17 	ldw	ra,40(sp)
  80a63c:	df000917 	ldw	fp,36(sp)
  80a640:	ddc00817 	ldw	r23,32(sp)
  80a644:	dd800717 	ldw	r22,28(sp)
  80a648:	dd400617 	ldw	r21,24(sp)
  80a64c:	dd000517 	ldw	r20,20(sp)
  80a650:	dcc00417 	ldw	r19,16(sp)
  80a654:	dc800317 	ldw	r18,12(sp)
  80a658:	dc400217 	ldw	r17,8(sp)
  80a65c:	dc000117 	ldw	r16,4(sp)
  80a660:	dec00b04 	addi	sp,sp,44
  80a664:	f800283a 	ret
  80a668:	00bfffd4 	movui	r2,65535
  80a66c:	11c05a2e 	bgeu	r2,r7,80a7d8 <__udivdi3+0x2e8>
  80a670:	00804034 	movhi	r2,256
  80a674:	3880dd36 	bltu	r7,r2,80a9ec <__udivdi3+0x4fc>
  80a678:	3804d63a 	srli	r2,r7,24
  80a67c:	01000604 	movi	r4,24
  80a680:	00c02074 	movhi	r3,129
  80a684:	10c7883a 	add	r3,r2,r3
  80a688:	18bfea03 	ldbu	r2,-88(r3)
  80a68c:	00c00804 	movi	r3,32
  80a690:	1105883a 	add	r2,r2,r4
  80a694:	18abc83a 	sub	r21,r3,r2
  80a698:	1880861e 	bne	r3,r2,80a8b4 <__udivdi3+0x3c4>
  80a69c:	3c00d836 	bltu	r7,r16,80aa00 <__udivdi3+0x510>
  80a6a0:	9985403a 	cmpgeu	r2,r19,r6
  80a6a4:	0007883a 	mov	r3,zero
  80a6a8:	003fe306 	br	80a638 <__udivdi3+0x148>
  80a6ac:	3000041e 	bne	r6,zero,80a6c0 <__udivdi3+0x1d0>
  80a6b0:	000b883a 	mov	r5,zero
  80a6b4:	01000044 	movi	r4,1
  80a6b8:	080b0a80 	call	80b0a8 <__udivsi3>
  80a6bc:	1023883a 	mov	r17,r2
  80a6c0:	00bfffd4 	movui	r2,65535
  80a6c4:	14403a2e 	bgeu	r2,r17,80a7b0 <__udivdi3+0x2c0>
  80a6c8:	00804034 	movhi	r2,256
  80a6cc:	8880d236 	bltu	r17,r2,80aa18 <__udivdi3+0x528>
  80a6d0:	8806d63a 	srli	r3,r17,24
  80a6d4:	05000604 	movi	r20,24
  80a6d8:	00802074 	movhi	r2,129
  80a6dc:	1885883a 	add	r2,r3,r2
  80a6e0:	10bfea03 	ldbu	r2,-88(r2)
  80a6e4:	00c00804 	movi	r3,32
  80a6e8:	1505883a 	add	r2,r2,r20
  80a6ec:	188dc83a 	sub	r6,r3,r2
  80a6f0:	18803e1e 	bne	r3,r2,80a7ec <__udivdi3+0x2fc>
  80a6f4:	882ad43a 	srli	r21,r17,16
  80a6f8:	8461c83a 	sub	r16,r16,r17
  80a6fc:	8cffffcc 	andi	r19,r17,65535
  80a700:	00c00044 	movi	r3,1
  80a704:	8009883a 	mov	r4,r16
  80a708:	a80b883a 	mov	r5,r21
  80a70c:	d8c00015 	stw	r3,0(sp)
  80a710:	080b10c0 	call	80b10c <__umodsi3>
  80a714:	8009883a 	mov	r4,r16
  80a718:	a80b883a 	mov	r5,r21
  80a71c:	1021883a 	mov	r16,r2
  80a720:	080b0a80 	call	80b0a8 <__udivsi3>
  80a724:	8020943a 	slli	r16,r16,16
  80a728:	9008d43a 	srli	r4,r18,16
  80a72c:	1029883a 	mov	r20,r2
  80a730:	14c5383a 	mul	r2,r2,r19
  80a734:	8108b03a 	or	r4,r16,r4
  80a738:	d8c00017 	ldw	r3,0(sp)
  80a73c:	2080052e 	bgeu	r4,r2,80a754 <__udivdi3+0x264>
  80a740:	2449883a 	add	r4,r4,r17
  80a744:	a17fffc4 	addi	r5,r20,-1
  80a748:	24400136 	bltu	r4,r17,80a750 <__udivdi3+0x260>
  80a74c:	2080c936 	bltu	r4,r2,80aa74 <__udivdi3+0x584>
  80a750:	2829883a 	mov	r20,r5
  80a754:	20a1c83a 	sub	r16,r4,r2
  80a758:	8009883a 	mov	r4,r16
  80a75c:	a80b883a 	mov	r5,r21
  80a760:	d8c00015 	stw	r3,0(sp)
  80a764:	080b10c0 	call	80b10c <__umodsi3>
  80a768:	8009883a 	mov	r4,r16
  80a76c:	a80b883a 	mov	r5,r21
  80a770:	1021883a 	mov	r16,r2
  80a774:	8020943a 	slli	r16,r16,16
  80a778:	080b0a80 	call	80b0a8 <__udivsi3>
  80a77c:	14e7383a 	mul	r19,r2,r19
  80a780:	94bfffcc 	andi	r18,r18,65535
  80a784:	84a4b03a 	or	r18,r16,r18
  80a788:	d8c00017 	ldw	r3,0(sp)
  80a78c:	94c0052e 	bgeu	r18,r19,80a7a4 <__udivdi3+0x2b4>
  80a790:	8ca5883a 	add	r18,r17,r18
  80a794:	113fffc4 	addi	r4,r2,-1
  80a798:	94400136 	bltu	r18,r17,80a7a0 <__udivdi3+0x2b0>
  80a79c:	94c0ae36 	bltu	r18,r19,80aa58 <__udivdi3+0x568>
  80a7a0:	2005883a 	mov	r2,r4
  80a7a4:	a00c943a 	slli	r6,r20,16
  80a7a8:	3084b03a 	or	r2,r6,r2
  80a7ac:	003fa206 	br	80a638 <__udivdi3+0x148>
  80a7b0:	88804030 	cmpltui	r2,r17,256
  80a7b4:	10009e1e 	bne	r2,zero,80aa30 <__udivdi3+0x540>
  80a7b8:	8806d23a 	srli	r3,r17,8
  80a7bc:	05000204 	movi	r20,8
  80a7c0:	003fc506 	br	80a6d8 <__udivdi3+0x1e8>
  80a7c4:	30804030 	cmpltui	r2,r6,256
  80a7c8:	10008b1e 	bne	r2,zero,80a9f8 <__udivdi3+0x508>
  80a7cc:	3006d23a 	srli	r3,r6,8
  80a7d0:	05000204 	movi	r20,8
  80a7d4:	003f5f06 	br	80a554 <__udivdi3+0x64>
  80a7d8:	38804030 	cmpltui	r2,r7,256
  80a7dc:	10008b1e 	bne	r2,zero,80aa0c <__udivdi3+0x51c>
  80a7e0:	3804d23a 	srli	r2,r7,8
  80a7e4:	01000204 	movi	r4,8
  80a7e8:	003fa506 	br	80a680 <__udivdi3+0x190>
  80a7ec:	89a2983a 	sll	r17,r17,r6
  80a7f0:	80acd83a 	srl	r22,r16,r2
  80a7f4:	81a0983a 	sll	r16,r16,r6
  80a7f8:	882ad43a 	srli	r21,r17,16
  80a7fc:	9884d83a 	srl	r2,r19,r2
  80a800:	b009883a 	mov	r4,r22
  80a804:	a80b883a 	mov	r5,r21
  80a808:	99a4983a 	sll	r18,r19,r6
  80a80c:	1428b03a 	or	r20,r2,r16
  80a810:	080b10c0 	call	80b10c <__umodsi3>
  80a814:	b009883a 	mov	r4,r22
  80a818:	a80b883a 	mov	r5,r21
  80a81c:	1021883a 	mov	r16,r2
  80a820:	080b0a80 	call	80b0a8 <__udivsi3>
  80a824:	8008943a 	slli	r4,r16,16
  80a828:	a00ad43a 	srli	r5,r20,16
  80a82c:	8cffffcc 	andi	r19,r17,65535
  80a830:	98a1383a 	mul	r16,r19,r2
  80a834:	2148b03a 	or	r4,r4,r5
  80a838:	102d883a 	mov	r22,r2
  80a83c:	2400062e 	bgeu	r4,r16,80a858 <__udivdi3+0x368>
  80a840:	2449883a 	add	r4,r4,r17
  80a844:	10bfffc4 	addi	r2,r2,-1
  80a848:	24408136 	bltu	r4,r17,80aa50 <__udivdi3+0x560>
  80a84c:	2400802e 	bgeu	r4,r16,80aa50 <__udivdi3+0x560>
  80a850:	b5bfff84 	addi	r22,r22,-2
  80a854:	2449883a 	add	r4,r4,r17
  80a858:	2421c83a 	sub	r16,r4,r16
  80a85c:	8009883a 	mov	r4,r16
  80a860:	a80b883a 	mov	r5,r21
  80a864:	080b10c0 	call	80b10c <__umodsi3>
  80a868:	8009883a 	mov	r4,r16
  80a86c:	a80b883a 	mov	r5,r21
  80a870:	1021883a 	mov	r16,r2
  80a874:	8020943a 	slli	r16,r16,16
  80a878:	080b0a80 	call	80b0a8 <__udivsi3>
  80a87c:	9889383a 	mul	r4,r19,r2
  80a880:	a53fffcc 	andi	r20,r20,65535
  80a884:	8520b03a 	or	r16,r16,r20
  80a888:	8100062e 	bgeu	r16,r4,80a8a4 <__udivdi3+0x3b4>
  80a88c:	8461883a 	add	r16,r16,r17
  80a890:	10ffffc4 	addi	r3,r2,-1
  80a894:	84406a36 	bltu	r16,r17,80aa40 <__udivdi3+0x550>
  80a898:	8100692e 	bgeu	r16,r4,80aa40 <__udivdi3+0x550>
  80a89c:	10bfff84 	addi	r2,r2,-2
  80a8a0:	8461883a 	add	r16,r16,r17
  80a8a4:	b006943a 	slli	r3,r22,16
  80a8a8:	8121c83a 	sub	r16,r16,r4
  80a8ac:	1886b03a 	or	r3,r3,r2
  80a8b0:	003f9406 	br	80a704 <__udivdi3+0x214>
  80a8b4:	30acd83a 	srl	r22,r6,r2
  80a8b8:	3d4e983a 	sll	r7,r7,r21
  80a8bc:	80a4d83a 	srl	r18,r16,r2
  80a8c0:	8546983a 	sll	r3,r16,r21
  80a8c4:	b1ecb03a 	or	r22,r22,r7
  80a8c8:	b038d43a 	srli	fp,r22,16
  80a8cc:	9884d83a 	srl	r2,r19,r2
  80a8d0:	9009883a 	mov	r4,r18
  80a8d4:	e00b883a 	mov	r5,fp
  80a8d8:	10e2b03a 	or	r17,r2,r3
  80a8dc:	3568983a 	sll	r20,r6,r21
  80a8e0:	080b10c0 	call	80b10c <__umodsi3>
  80a8e4:	9009883a 	mov	r4,r18
  80a8e8:	e00b883a 	mov	r5,fp
  80a8ec:	1025883a 	mov	r18,r2
  80a8f0:	080b0a80 	call	80b0a8 <__udivsi3>
  80a8f4:	9008943a 	slli	r4,r18,16
  80a8f8:	8806d43a 	srli	r3,r17,16
  80a8fc:	b5ffffcc 	andi	r23,r22,65535
  80a900:	b8a5383a 	mul	r18,r23,r2
  80a904:	20c8b03a 	or	r4,r4,r3
  80a908:	1021883a 	mov	r16,r2
  80a90c:	2480062e 	bgeu	r4,r18,80a928 <__udivdi3+0x438>
  80a910:	2589883a 	add	r4,r4,r22
  80a914:	10bfffc4 	addi	r2,r2,-1
  80a918:	25804b36 	bltu	r4,r22,80aa48 <__udivdi3+0x558>
  80a91c:	24804a2e 	bgeu	r4,r18,80aa48 <__udivdi3+0x558>
  80a920:	843fff84 	addi	r16,r16,-2
  80a924:	2589883a 	add	r4,r4,r22
  80a928:	24a5c83a 	sub	r18,r4,r18
  80a92c:	9009883a 	mov	r4,r18
  80a930:	e00b883a 	mov	r5,fp
  80a934:	080b10c0 	call	80b10c <__umodsi3>
  80a938:	9009883a 	mov	r4,r18
  80a93c:	e00b883a 	mov	r5,fp
  80a940:	1025883a 	mov	r18,r2
  80a944:	9024943a 	slli	r18,r18,16
  80a948:	080b0a80 	call	80b0a8 <__udivsi3>
  80a94c:	b8af383a 	mul	r23,r23,r2
  80a950:	8c7fffcc 	andi	r17,r17,65535
  80a954:	9462b03a 	or	r17,r18,r17
  80a958:	8dc0062e 	bgeu	r17,r23,80a974 <__udivdi3+0x484>
  80a95c:	8da3883a 	add	r17,r17,r22
  80a960:	10ffffc4 	addi	r3,r2,-1
  80a964:	8d803436 	bltu	r17,r22,80aa38 <__udivdi3+0x548>
  80a968:	8dc0332e 	bgeu	r17,r23,80aa38 <__udivdi3+0x548>
  80a96c:	10bfff84 	addi	r2,r2,-2
  80a970:	8da3883a 	add	r17,r17,r22
  80a974:	8020943a 	slli	r16,r16,16
  80a978:	10ffffcc 	andi	r3,r2,65535
  80a97c:	a00ed43a 	srli	r7,r20,16
  80a980:	8084b03a 	or	r2,r16,r2
  80a984:	1008d43a 	srli	r4,r2,16
  80a988:	a1bfffcc 	andi	r6,r20,65535
  80a98c:	1991383a 	mul	r8,r3,r6
  80a990:	218d383a 	mul	r6,r4,r6
  80a994:	19c7383a 	mul	r3,r3,r7
  80a998:	400ad43a 	srli	r5,r8,16
  80a99c:	21c9383a 	mul	r4,r4,r7
  80a9a0:	1987883a 	add	r3,r3,r6
  80a9a4:	28c7883a 	add	r3,r5,r3
  80a9a8:	8de3c83a 	sub	r17,r17,r23
  80a9ac:	1980022e 	bgeu	r3,r6,80a9b8 <__udivdi3+0x4c8>
  80a9b0:	01400074 	movhi	r5,1
  80a9b4:	2149883a 	add	r4,r4,r5
  80a9b8:	180ad43a 	srli	r5,r3,16
  80a9bc:	2909883a 	add	r4,r5,r4
  80a9c0:	89000836 	bltu	r17,r4,80a9e4 <__udivdi3+0x4f4>
  80a9c4:	89000226 	beq	r17,r4,80a9d0 <__udivdi3+0x4e0>
  80a9c8:	0007883a 	mov	r3,zero
  80a9cc:	003f1a06 	br	80a638 <__udivdi3+0x148>
  80a9d0:	1806943a 	slli	r3,r3,16
  80a9d4:	9d4c983a 	sll	r6,r19,r21
  80a9d8:	423fffcc 	andi	r8,r8,65535
  80a9dc:	1a07883a 	add	r3,r3,r8
  80a9e0:	30fff92e 	bgeu	r6,r3,80a9c8 <__udivdi3+0x4d8>
  80a9e4:	10bfffc4 	addi	r2,r2,-1
  80a9e8:	003ff706 	br	80a9c8 <__udivdi3+0x4d8>
  80a9ec:	3804d43a 	srli	r2,r7,16
  80a9f0:	01000404 	movi	r4,16
  80a9f4:	003f2206 	br	80a680 <__udivdi3+0x190>
  80a9f8:	3007883a 	mov	r3,r6
  80a9fc:	003ed506 	br	80a554 <__udivdi3+0x64>
  80aa00:	0007883a 	mov	r3,zero
  80aa04:	00800044 	movi	r2,1
  80aa08:	003f0b06 	br	80a638 <__udivdi3+0x148>
  80aa0c:	3805883a 	mov	r2,r7
  80aa10:	0009883a 	mov	r4,zero
  80aa14:	003f1a06 	br	80a680 <__udivdi3+0x190>
  80aa18:	8806d43a 	srli	r3,r17,16
  80aa1c:	05000404 	movi	r20,16
  80aa20:	003f2d06 	br	80a6d8 <__udivdi3+0x1e8>
  80aa24:	3006d43a 	srli	r3,r6,16
  80aa28:	05000404 	movi	r20,16
  80aa2c:	003ec906 	br	80a554 <__udivdi3+0x64>
  80aa30:	8807883a 	mov	r3,r17
  80aa34:	003f2806 	br	80a6d8 <__udivdi3+0x1e8>
  80aa38:	1805883a 	mov	r2,r3
  80aa3c:	003fcd06 	br	80a974 <__udivdi3+0x484>
  80aa40:	1805883a 	mov	r2,r3
  80aa44:	003f9706 	br	80a8a4 <__udivdi3+0x3b4>
  80aa48:	1021883a 	mov	r16,r2
  80aa4c:	003fb606 	br	80a928 <__udivdi3+0x438>
  80aa50:	102d883a 	mov	r22,r2
  80aa54:	003f8006 	br	80a858 <__udivdi3+0x368>
  80aa58:	10bfff84 	addi	r2,r2,-2
  80aa5c:	003f5106 	br	80a7a4 <__udivdi3+0x2b4>
  80aa60:	10bfff84 	addi	r2,r2,-2
  80aa64:	003eed06 	br	80a61c <__udivdi3+0x12c>
  80aa68:	843fff84 	addi	r16,r16,-2
  80aa6c:	2449883a 	add	r4,r4,r17
  80aa70:	003ed806 	br	80a5d4 <__udivdi3+0xe4>
  80aa74:	a53fff84 	addi	r20,r20,-2
  80aa78:	2449883a 	add	r4,r4,r17
  80aa7c:	003f3506 	br	80a754 <__udivdi3+0x264>

0080aa80 <__umoddi3>:
  80aa80:	defff504 	addi	sp,sp,-44
  80aa84:	dc400215 	stw	r17,8(sp)
  80aa88:	dc000115 	stw	r16,4(sp)
  80aa8c:	dfc00a15 	stw	ra,40(sp)
  80aa90:	df000915 	stw	fp,36(sp)
  80aa94:	ddc00815 	stw	r23,32(sp)
  80aa98:	dd800715 	stw	r22,28(sp)
  80aa9c:	dd400615 	stw	r21,24(sp)
  80aaa0:	dd000515 	stw	r20,20(sp)
  80aaa4:	dcc00415 	stw	r19,16(sp)
  80aaa8:	dc800315 	stw	r18,12(sp)
  80aaac:	2823883a 	mov	r17,r5
  80aab0:	2021883a 	mov	r16,r4
  80aab4:	3800371e 	bne	r7,zero,80ab94 <__umoddi3+0x114>
  80aab8:	3825883a 	mov	r18,r7
  80aabc:	3029883a 	mov	r20,r6
  80aac0:	2027883a 	mov	r19,r4
  80aac4:	2980572e 	bgeu	r5,r6,80ac24 <__umoddi3+0x1a4>
  80aac8:	00bfffd4 	movui	r2,65535
  80aacc:	282b883a 	mov	r21,r5
  80aad0:	1180922e 	bgeu	r2,r6,80ad1c <__umoddi3+0x29c>
  80aad4:	00804034 	movhi	r2,256
  80aad8:	30812036 	bltu	r6,r2,80af5c <__umoddi3+0x4dc>
  80aadc:	3006d63a 	srli	r3,r6,24
  80aae0:	04800604 	movi	r18,24
  80aae4:	00802074 	movhi	r2,129
  80aae8:	1885883a 	add	r2,r3,r2
  80aaec:	10bfea03 	ldbu	r2,-88(r2)
  80aaf0:	00c00804 	movi	r3,32
  80aaf4:	1485883a 	add	r2,r2,r18
  80aaf8:	18a5c83a 	sub	r18,r3,r2
  80aafc:	18800526 	beq	r3,r2,80ab14 <__umoddi3+0x94>
  80ab00:	8ca2983a 	sll	r17,r17,r18
  80ab04:	8084d83a 	srl	r2,r16,r2
  80ab08:	34a8983a 	sll	r20,r6,r18
  80ab0c:	84a6983a 	sll	r19,r16,r18
  80ab10:	146ab03a 	or	r21,r2,r17
  80ab14:	a02cd43a 	srli	r22,r20,16
  80ab18:	a809883a 	mov	r4,r21
  80ab1c:	a43fffcc 	andi	r16,r20,65535
  80ab20:	b00b883a 	mov	r5,r22
  80ab24:	080b10c0 	call	80b10c <__umodsi3>
  80ab28:	a809883a 	mov	r4,r21
  80ab2c:	b00b883a 	mov	r5,r22
  80ab30:	1023883a 	mov	r17,r2
  80ab34:	080b0a80 	call	80b0a8 <__udivsi3>
  80ab38:	8822943a 	slli	r17,r17,16
  80ab3c:	9808d43a 	srli	r4,r19,16
  80ab40:	80ab383a 	mul	r21,r16,r2
  80ab44:	8908b03a 	or	r4,r17,r4
  80ab48:	2540042e 	bgeu	r4,r21,80ab5c <__umoddi3+0xdc>
  80ab4c:	2509883a 	add	r4,r4,r20
  80ab50:	25000236 	bltu	r4,r20,80ab5c <__umoddi3+0xdc>
  80ab54:	2540012e 	bgeu	r4,r21,80ab5c <__umoddi3+0xdc>
  80ab58:	2509883a 	add	r4,r4,r20
  80ab5c:	256bc83a 	sub	r21,r4,r21
  80ab60:	b00b883a 	mov	r5,r22
  80ab64:	a809883a 	mov	r4,r21
  80ab68:	080b10c0 	call	80b10c <__umodsi3>
  80ab6c:	1023883a 	mov	r17,r2
  80ab70:	b00b883a 	mov	r5,r22
  80ab74:	a809883a 	mov	r4,r21
  80ab78:	080b0a80 	call	80b0a8 <__udivsi3>
  80ab7c:	8822943a 	slli	r17,r17,16
  80ab80:	8085383a 	mul	r2,r16,r2
  80ab84:	98ffffcc 	andi	r3,r19,65535
  80ab88:	88c6b03a 	or	r3,r17,r3
  80ab8c:	18805a2e 	bgeu	r3,r2,80acf8 <__umoddi3+0x278>
  80ab90:	00005506 	br	80ace8 <__umoddi3+0x268>
  80ab94:	2005883a 	mov	r2,r4
  80ab98:	29c00d2e 	bgeu	r5,r7,80abd0 <__umoddi3+0x150>
  80ab9c:	2807883a 	mov	r3,r5
  80aba0:	dfc00a17 	ldw	ra,40(sp)
  80aba4:	df000917 	ldw	fp,36(sp)
  80aba8:	ddc00817 	ldw	r23,32(sp)
  80abac:	dd800717 	ldw	r22,28(sp)
  80abb0:	dd400617 	ldw	r21,24(sp)
  80abb4:	dd000517 	ldw	r20,20(sp)
  80abb8:	dcc00417 	ldw	r19,16(sp)
  80abbc:	dc800317 	ldw	r18,12(sp)
  80abc0:	dc400217 	ldw	r17,8(sp)
  80abc4:	dc000117 	ldw	r16,4(sp)
  80abc8:	dec00b04 	addi	sp,sp,44
  80abcc:	f800283a 	ret
  80abd0:	013fffd4 	movui	r4,65535
  80abd4:	2807883a 	mov	r3,r5
  80abd8:	21c0552e 	bgeu	r4,r7,80ad30 <__umoddi3+0x2b0>
  80abdc:	01004034 	movhi	r4,256
  80abe0:	3900e336 	bltu	r7,r4,80af70 <__umoddi3+0x4f0>
  80abe4:	3808d63a 	srli	r4,r7,24
  80abe8:	02000604 	movi	r8,24
  80abec:	01402074 	movhi	r5,129
  80abf0:	214b883a 	add	r5,r4,r5
  80abf4:	2d7fea03 	ldbu	r21,-88(r5)
  80abf8:	01000804 	movi	r4,32
  80abfc:	aa2b883a 	add	r21,r21,r8
  80ac00:	2569c83a 	sub	r20,r4,r21
  80ac04:	25404f1e 	bne	r4,r21,80ad44 <__umoddi3+0x2c4>
  80ac08:	3c400136 	bltu	r7,r17,80ac10 <__umoddi3+0x190>
  80ac0c:	81bfe436 	bltu	r16,r6,80aba0 <__umoddi3+0x120>
  80ac10:	8185c83a 	sub	r2,r16,r6
  80ac14:	89cfc83a 	sub	r7,r17,r7
  80ac18:	8087803a 	cmpltu	r3,r16,r2
  80ac1c:	38c7c83a 	sub	r3,r7,r3
  80ac20:	003fdf06 	br	80aba0 <__umoddi3+0x120>
  80ac24:	3000041e 	bne	r6,zero,80ac38 <__umoddi3+0x1b8>
  80ac28:	000b883a 	mov	r5,zero
  80ac2c:	01000044 	movi	r4,1
  80ac30:	080b0a80 	call	80b0a8 <__udivsi3>
  80ac34:	1029883a 	mov	r20,r2
  80ac38:	00bfffd4 	movui	r2,65535
  80ac3c:	1500322e 	bgeu	r2,r20,80ad08 <__umoddi3+0x288>
  80ac40:	00804034 	movhi	r2,256
  80ac44:	a080cd36 	bltu	r20,r2,80af7c <__umoddi3+0x4fc>
  80ac48:	a006d63a 	srli	r3,r20,24
  80ac4c:	04800604 	movi	r18,24
  80ac50:	00802074 	movhi	r2,129
  80ac54:	1885883a 	add	r2,r3,r2
  80ac58:	15bfea03 	ldbu	r22,-88(r2)
  80ac5c:	00800804 	movi	r2,32
  80ac60:	b4ad883a 	add	r22,r22,r18
  80ac64:	15a5c83a 	sub	r18,r2,r22
  80ac68:	15808a1e 	bne	r2,r22,80ae94 <__umoddi3+0x414>
  80ac6c:	a02ed43a 	srli	r23,r20,16
  80ac70:	8d23c83a 	sub	r17,r17,r20
  80ac74:	a57fffcc 	andi	r21,r20,65535
  80ac78:	b80b883a 	mov	r5,r23
  80ac7c:	8809883a 	mov	r4,r17
  80ac80:	080b10c0 	call	80b10c <__umodsi3>
  80ac84:	8809883a 	mov	r4,r17
  80ac88:	b80b883a 	mov	r5,r23
  80ac8c:	102d883a 	mov	r22,r2
  80ac90:	080b0a80 	call	80b0a8 <__udivsi3>
  80ac94:	b02c943a 	slli	r22,r22,16
  80ac98:	9808d43a 	srli	r4,r19,16
  80ac9c:	1561383a 	mul	r16,r2,r21
  80aca0:	b108b03a 	or	r4,r22,r4
  80aca4:	2400032e 	bgeu	r4,r16,80acb4 <__umoddi3+0x234>
  80aca8:	2509883a 	add	r4,r4,r20
  80acac:	25000136 	bltu	r4,r20,80acb4 <__umoddi3+0x234>
  80acb0:	2400be36 	bltu	r4,r16,80afac <__umoddi3+0x52c>
  80acb4:	2421c83a 	sub	r16,r4,r16
  80acb8:	b80b883a 	mov	r5,r23
  80acbc:	8009883a 	mov	r4,r16
  80acc0:	080b10c0 	call	80b10c <__umodsi3>
  80acc4:	1023883a 	mov	r17,r2
  80acc8:	b80b883a 	mov	r5,r23
  80accc:	8009883a 	mov	r4,r16
  80acd0:	080b0a80 	call	80b0a8 <__udivsi3>
  80acd4:	8822943a 	slli	r17,r17,16
  80acd8:	1545383a 	mul	r2,r2,r21
  80acdc:	98ffffcc 	andi	r3,r19,65535
  80ace0:	88c6b03a 	or	r3,r17,r3
  80ace4:	1880042e 	bgeu	r3,r2,80acf8 <__umoddi3+0x278>
  80ace8:	1d07883a 	add	r3,r3,r20
  80acec:	1d000236 	bltu	r3,r20,80acf8 <__umoddi3+0x278>
  80acf0:	1880012e 	bgeu	r3,r2,80acf8 <__umoddi3+0x278>
  80acf4:	1d07883a 	add	r3,r3,r20
  80acf8:	1885c83a 	sub	r2,r3,r2
  80acfc:	1484d83a 	srl	r2,r2,r18
  80ad00:	0007883a 	mov	r3,zero
  80ad04:	003fa606 	br	80aba0 <__umoddi3+0x120>
  80ad08:	a0804030 	cmpltui	r2,r20,256
  80ad0c:	10009e1e 	bne	r2,zero,80af88 <__umoddi3+0x508>
  80ad10:	a006d23a 	srli	r3,r20,8
  80ad14:	04800204 	movi	r18,8
  80ad18:	003fcd06 	br	80ac50 <__umoddi3+0x1d0>
  80ad1c:	30804030 	cmpltui	r2,r6,256
  80ad20:	1000911e 	bne	r2,zero,80af68 <__umoddi3+0x4e8>
  80ad24:	3006d23a 	srli	r3,r6,8
  80ad28:	04800204 	movi	r18,8
  80ad2c:	003f6d06 	br	80aae4 <__umoddi3+0x64>
  80ad30:	39004030 	cmpltui	r4,r7,256
  80ad34:	2000961e 	bne	r4,zero,80af90 <__umoddi3+0x510>
  80ad38:	3808d23a 	srli	r4,r7,8
  80ad3c:	02000204 	movi	r8,8
  80ad40:	003faa06 	br	80abec <__umoddi3+0x16c>
  80ad44:	3d0e983a 	sll	r7,r7,r20
  80ad48:	3544d83a 	srl	r2,r6,r21
  80ad4c:	8d64d83a 	srl	r18,r17,r21
  80ad50:	8d22983a 	sll	r17,r17,r20
  80ad54:	11eeb03a 	or	r23,r2,r7
  80ad58:	b838d43a 	srli	fp,r23,16
  80ad5c:	8544d83a 	srl	r2,r16,r21
  80ad60:	9009883a 	mov	r4,r18
  80ad64:	e00b883a 	mov	r5,fp
  80ad68:	3526983a 	sll	r19,r6,r20
  80ad6c:	1462b03a 	or	r17,r2,r17
  80ad70:	080b10c0 	call	80b10c <__umodsi3>
  80ad74:	9009883a 	mov	r4,r18
  80ad78:	e00b883a 	mov	r5,fp
  80ad7c:	1025883a 	mov	r18,r2
  80ad80:	080b0a80 	call	80b0a8 <__udivsi3>
  80ad84:	9008943a 	slli	r4,r18,16
  80ad88:	8806d43a 	srli	r3,r17,16
  80ad8c:	b9ffffcc 	andi	r7,r23,65535
  80ad90:	38a5383a 	mul	r18,r7,r2
  80ad94:	20c8b03a 	or	r4,r4,r3
  80ad98:	8520983a 	sll	r16,r16,r20
  80ad9c:	102d883a 	mov	r22,r2
  80ada0:	2480062e 	bgeu	r4,r18,80adbc <__umoddi3+0x33c>
  80ada4:	25c9883a 	add	r4,r4,r23
  80ada8:	10bfffc4 	addi	r2,r2,-1
  80adac:	25c07d36 	bltu	r4,r23,80afa4 <__umoddi3+0x524>
  80adb0:	24807c2e 	bgeu	r4,r18,80afa4 <__umoddi3+0x524>
  80adb4:	b5bfff84 	addi	r22,r22,-2
  80adb8:	25c9883a 	add	r4,r4,r23
  80adbc:	24a5c83a 	sub	r18,r4,r18
  80adc0:	9009883a 	mov	r4,r18
  80adc4:	e00b883a 	mov	r5,fp
  80adc8:	d9c00015 	stw	r7,0(sp)
  80adcc:	080b10c0 	call	80b10c <__umodsi3>
  80add0:	9009883a 	mov	r4,r18
  80add4:	e00b883a 	mov	r5,fp
  80add8:	1025883a 	mov	r18,r2
  80addc:	080b0a80 	call	80b0a8 <__udivsi3>
  80ade0:	d9c00017 	ldw	r7,0(sp)
  80ade4:	9024943a 	slli	r18,r18,16
  80ade8:	8c7fffcc 	andi	r17,r17,65535
  80adec:	388f383a 	mul	r7,r7,r2
  80adf0:	9448b03a 	or	r4,r18,r17
  80adf4:	21c0062e 	bgeu	r4,r7,80ae10 <__umoddi3+0x390>
  80adf8:	25c9883a 	add	r4,r4,r23
  80adfc:	10ffffc4 	addi	r3,r2,-1
  80ae00:	25c06636 	bltu	r4,r23,80af9c <__umoddi3+0x51c>
  80ae04:	21c0652e 	bgeu	r4,r7,80af9c <__umoddi3+0x51c>
  80ae08:	10bfff84 	addi	r2,r2,-2
  80ae0c:	25c9883a 	add	r4,r4,r23
  80ae10:	b00a943a 	slli	r5,r22,16
  80ae14:	11bfffcc 	andi	r6,r2,65535
  80ae18:	9806d43a 	srli	r3,r19,16
  80ae1c:	2884b03a 	or	r2,r5,r2
  80ae20:	102cd43a 	srli	r22,r2,16
  80ae24:	997fffcc 	andi	r5,r19,65535
  80ae28:	3151383a 	mul	r8,r6,r5
  80ae2c:	b14b383a 	mul	r5,r22,r5
  80ae30:	30cd383a 	mul	r6,r6,r3
  80ae34:	4004d43a 	srli	r2,r8,16
  80ae38:	b0ed383a 	mul	r22,r22,r3
  80ae3c:	314d883a 	add	r6,r6,r5
  80ae40:	1185883a 	add	r2,r2,r6
  80ae44:	21c9c83a 	sub	r4,r4,r7
  80ae48:	1140022e 	bgeu	r2,r5,80ae54 <__umoddi3+0x3d4>
  80ae4c:	00c00074 	movhi	r3,1
  80ae50:	b0ed883a 	add	r22,r22,r3
  80ae54:	1006d43a 	srli	r3,r2,16
  80ae58:	1004943a 	slli	r2,r2,16
  80ae5c:	423fffcc 	andi	r8,r8,65535
  80ae60:	1dad883a 	add	r22,r3,r22
  80ae64:	1205883a 	add	r2,r2,r8
  80ae68:	25803636 	bltu	r4,r22,80af44 <__umoddi3+0x4c4>
  80ae6c:	25803426 	beq	r4,r22,80af40 <__umoddi3+0x4c0>
  80ae70:	8085c83a 	sub	r2,r16,r2
  80ae74:	8087803a 	cmpltu	r3,r16,r2
  80ae78:	2589c83a 	sub	r4,r4,r22
  80ae7c:	20c7c83a 	sub	r3,r4,r3
  80ae80:	1d60983a 	sll	r16,r3,r21
  80ae84:	1504d83a 	srl	r2,r2,r20
  80ae88:	1d06d83a 	srl	r3,r3,r20
  80ae8c:	8084b03a 	or	r2,r16,r2
  80ae90:	003f4306 	br	80aba0 <__umoddi3+0x120>
  80ae94:	a4a8983a 	sll	r20,r20,r18
  80ae98:	8daad83a 	srl	r21,r17,r22
  80ae9c:	8ca2983a 	sll	r17,r17,r18
  80aea0:	a02ed43a 	srli	r23,r20,16
  80aea4:	a809883a 	mov	r4,r21
  80aea8:	85acd83a 	srl	r22,r16,r22
  80aeac:	b80b883a 	mov	r5,r23
  80aeb0:	080b10c0 	call	80b10c <__umodsi3>
  80aeb4:	a809883a 	mov	r4,r21
  80aeb8:	b80b883a 	mov	r5,r23
  80aebc:	b46cb03a 	or	r22,r22,r17
  80aec0:	1027883a 	mov	r19,r2
  80aec4:	080b0a80 	call	80b0a8 <__udivsi3>
  80aec8:	9826943a 	slli	r19,r19,16
  80aecc:	b008d43a 	srli	r4,r22,16
  80aed0:	a57fffcc 	andi	r21,r20,65535
  80aed4:	a8a3383a 	mul	r17,r21,r2
  80aed8:	9908b03a 	or	r4,r19,r4
  80aedc:	84a6983a 	sll	r19,r16,r18
  80aee0:	2440042e 	bgeu	r4,r17,80aef4 <__umoddi3+0x474>
  80aee4:	2509883a 	add	r4,r4,r20
  80aee8:	25000236 	bltu	r4,r20,80aef4 <__umoddi3+0x474>
  80aeec:	2440012e 	bgeu	r4,r17,80aef4 <__umoddi3+0x474>
  80aef0:	2509883a 	add	r4,r4,r20
  80aef4:	2463c83a 	sub	r17,r4,r17
  80aef8:	8809883a 	mov	r4,r17
  80aefc:	b80b883a 	mov	r5,r23
  80af00:	080b10c0 	call	80b10c <__umodsi3>
  80af04:	1021883a 	mov	r16,r2
  80af08:	8809883a 	mov	r4,r17
  80af0c:	b80b883a 	mov	r5,r23
  80af10:	8020943a 	slli	r16,r16,16
  80af14:	080b0a80 	call	80b0a8 <__udivsi3>
  80af18:	a885383a 	mul	r2,r21,r2
  80af1c:	b47fffcc 	andi	r17,r22,65535
  80af20:	8462b03a 	or	r17,r16,r17
  80af24:	8880042e 	bgeu	r17,r2,80af38 <__umoddi3+0x4b8>
  80af28:	8d23883a 	add	r17,r17,r20
  80af2c:	8d000236 	bltu	r17,r20,80af38 <__umoddi3+0x4b8>
  80af30:	8880012e 	bgeu	r17,r2,80af38 <__umoddi3+0x4b8>
  80af34:	8d23883a 	add	r17,r17,r20
  80af38:	88a3c83a 	sub	r17,r17,r2
  80af3c:	003f4e06 	br	80ac78 <__umoddi3+0x1f8>
  80af40:	80bfcb2e 	bgeu	r16,r2,80ae70 <__umoddi3+0x3f0>
  80af44:	14e7c83a 	sub	r19,r2,r19
  80af48:	14c5803a 	cmpltu	r2,r2,r19
  80af4c:	15c5883a 	add	r2,r2,r23
  80af50:	b0adc83a 	sub	r22,r22,r2
  80af54:	9805883a 	mov	r2,r19
  80af58:	003fc506 	br	80ae70 <__umoddi3+0x3f0>
  80af5c:	3006d43a 	srli	r3,r6,16
  80af60:	04800404 	movi	r18,16
  80af64:	003edf06 	br	80aae4 <__umoddi3+0x64>
  80af68:	3007883a 	mov	r3,r6
  80af6c:	003edd06 	br	80aae4 <__umoddi3+0x64>
  80af70:	3808d43a 	srli	r4,r7,16
  80af74:	02000404 	movi	r8,16
  80af78:	003f1c06 	br	80abec <__umoddi3+0x16c>
  80af7c:	a006d43a 	srli	r3,r20,16
  80af80:	04800404 	movi	r18,16
  80af84:	003f3206 	br	80ac50 <__umoddi3+0x1d0>
  80af88:	a007883a 	mov	r3,r20
  80af8c:	003f3006 	br	80ac50 <__umoddi3+0x1d0>
  80af90:	3809883a 	mov	r4,r7
  80af94:	0011883a 	mov	r8,zero
  80af98:	003f1406 	br	80abec <__umoddi3+0x16c>
  80af9c:	1805883a 	mov	r2,r3
  80afa0:	003f9b06 	br	80ae10 <__umoddi3+0x390>
  80afa4:	102d883a 	mov	r22,r2
  80afa8:	003f8406 	br	80adbc <__umoddi3+0x33c>
  80afac:	2509883a 	add	r4,r4,r20
  80afb0:	003f4006 	br	80acb4 <__umoddi3+0x234>

0080afb4 <__divsi3>:
  80afb4:	20001a16 	blt	r4,zero,80b020 <__divsi3+0x6c>
  80afb8:	000f883a 	mov	r7,zero
  80afbc:	2800020e 	bge	r5,zero,80afc8 <__divsi3+0x14>
  80afc0:	014bc83a 	sub	r5,zero,r5
  80afc4:	39c0005c 	xori	r7,r7,1
  80afc8:	200d883a 	mov	r6,r4
  80afcc:	00c00044 	movi	r3,1
  80afd0:	2900092e 	bgeu	r5,r4,80aff8 <__divsi3+0x44>
  80afd4:	00800804 	movi	r2,32
  80afd8:	00c00044 	movi	r3,1
  80afdc:	00000106 	br	80afe4 <__divsi3+0x30>
  80afe0:	10001226 	beq	r2,zero,80b02c <__divsi3+0x78>
  80afe4:	294b883a 	add	r5,r5,r5
  80afe8:	10bfffc4 	addi	r2,r2,-1
  80afec:	18c7883a 	add	r3,r3,r3
  80aff0:	293ffb36 	bltu	r5,r4,80afe0 <__divsi3+0x2c>
  80aff4:	18000d26 	beq	r3,zero,80b02c <__divsi3+0x78>
  80aff8:	0005883a 	mov	r2,zero
  80affc:	31400236 	bltu	r6,r5,80b008 <__divsi3+0x54>
  80b000:	314dc83a 	sub	r6,r6,r5
  80b004:	10c4b03a 	or	r2,r2,r3
  80b008:	1806d07a 	srli	r3,r3,1
  80b00c:	280ad07a 	srli	r5,r5,1
  80b010:	183ffa1e 	bne	r3,zero,80affc <__divsi3+0x48>
  80b014:	38000126 	beq	r7,zero,80b01c <__divsi3+0x68>
  80b018:	0085c83a 	sub	r2,zero,r2
  80b01c:	f800283a 	ret
  80b020:	0109c83a 	sub	r4,zero,r4
  80b024:	01c00044 	movi	r7,1
  80b028:	003fe406 	br	80afbc <__divsi3+0x8>
  80b02c:	0005883a 	mov	r2,zero
  80b030:	003ff806 	br	80b014 <__divsi3+0x60>

0080b034 <__modsi3>:
  80b034:	20001916 	blt	r4,zero,80b09c <__modsi3+0x68>
  80b038:	000f883a 	mov	r7,zero
  80b03c:	2005883a 	mov	r2,r4
  80b040:	2800010e 	bge	r5,zero,80b048 <__modsi3+0x14>
  80b044:	014bc83a 	sub	r5,zero,r5
  80b048:	00c00044 	movi	r3,1
  80b04c:	2900092e 	bgeu	r5,r4,80b074 <__modsi3+0x40>
  80b050:	01800804 	movi	r6,32
  80b054:	00c00044 	movi	r3,1
  80b058:	00000106 	br	80b060 <__modsi3+0x2c>
  80b05c:	30000d26 	beq	r6,zero,80b094 <__modsi3+0x60>
  80b060:	294b883a 	add	r5,r5,r5
  80b064:	31bfffc4 	addi	r6,r6,-1
  80b068:	18c7883a 	add	r3,r3,r3
  80b06c:	293ffb36 	bltu	r5,r4,80b05c <__modsi3+0x28>
  80b070:	18000826 	beq	r3,zero,80b094 <__modsi3+0x60>
  80b074:	1806d07a 	srli	r3,r3,1
  80b078:	11400136 	bltu	r2,r5,80b080 <__modsi3+0x4c>
  80b07c:	1145c83a 	sub	r2,r2,r5
  80b080:	280ad07a 	srli	r5,r5,1
  80b084:	183ffb1e 	bne	r3,zero,80b074 <__modsi3+0x40>
  80b088:	38000126 	beq	r7,zero,80b090 <__modsi3+0x5c>
  80b08c:	0085c83a 	sub	r2,zero,r2
  80b090:	f800283a 	ret
  80b094:	2005883a 	mov	r2,r4
  80b098:	003ffb06 	br	80b088 <__modsi3+0x54>
  80b09c:	0109c83a 	sub	r4,zero,r4
  80b0a0:	01c00044 	movi	r7,1
  80b0a4:	003fe506 	br	80b03c <__modsi3+0x8>

0080b0a8 <__udivsi3>:
  80b0a8:	200d883a 	mov	r6,r4
  80b0ac:	2900152e 	bgeu	r5,r4,80b104 <__udivsi3+0x5c>
  80b0b0:	28001416 	blt	r5,zero,80b104 <__udivsi3+0x5c>
  80b0b4:	00800804 	movi	r2,32
  80b0b8:	00c00044 	movi	r3,1
  80b0bc:	00000206 	br	80b0c8 <__udivsi3+0x20>
  80b0c0:	10000e26 	beq	r2,zero,80b0fc <__udivsi3+0x54>
  80b0c4:	28000516 	blt	r5,zero,80b0dc <__udivsi3+0x34>
  80b0c8:	294b883a 	add	r5,r5,r5
  80b0cc:	10bfffc4 	addi	r2,r2,-1
  80b0d0:	18c7883a 	add	r3,r3,r3
  80b0d4:	293ffa36 	bltu	r5,r4,80b0c0 <__udivsi3+0x18>
  80b0d8:	18000826 	beq	r3,zero,80b0fc <__udivsi3+0x54>
  80b0dc:	0005883a 	mov	r2,zero
  80b0e0:	31400236 	bltu	r6,r5,80b0ec <__udivsi3+0x44>
  80b0e4:	314dc83a 	sub	r6,r6,r5
  80b0e8:	10c4b03a 	or	r2,r2,r3
  80b0ec:	1806d07a 	srli	r3,r3,1
  80b0f0:	280ad07a 	srli	r5,r5,1
  80b0f4:	183ffa1e 	bne	r3,zero,80b0e0 <__udivsi3+0x38>
  80b0f8:	f800283a 	ret
  80b0fc:	0005883a 	mov	r2,zero
  80b100:	f800283a 	ret
  80b104:	00c00044 	movi	r3,1
  80b108:	003ff406 	br	80b0dc <__udivsi3+0x34>

0080b10c <__umodsi3>:
  80b10c:	2005883a 	mov	r2,r4
  80b110:	2900132e 	bgeu	r5,r4,80b160 <__umodsi3+0x54>
  80b114:	28001216 	blt	r5,zero,80b160 <__umodsi3+0x54>
  80b118:	01800804 	movi	r6,32
  80b11c:	00c00044 	movi	r3,1
  80b120:	00000206 	br	80b12c <__umodsi3+0x20>
  80b124:	30000c26 	beq	r6,zero,80b158 <__umodsi3+0x4c>
  80b128:	28000516 	blt	r5,zero,80b140 <__umodsi3+0x34>
  80b12c:	294b883a 	add	r5,r5,r5
  80b130:	31bfffc4 	addi	r6,r6,-1
  80b134:	18c7883a 	add	r3,r3,r3
  80b138:	293ffa36 	bltu	r5,r4,80b124 <__umodsi3+0x18>
  80b13c:	18000626 	beq	r3,zero,80b158 <__umodsi3+0x4c>
  80b140:	1806d07a 	srli	r3,r3,1
  80b144:	11400136 	bltu	r2,r5,80b14c <__umodsi3+0x40>
  80b148:	1145c83a 	sub	r2,r2,r5
  80b14c:	280ad07a 	srli	r5,r5,1
  80b150:	183ffb1e 	bne	r3,zero,80b140 <__umodsi3+0x34>
  80b154:	f800283a 	ret
  80b158:	2005883a 	mov	r2,r4
  80b15c:	f800283a 	ret
  80b160:	00c00044 	movi	r3,1
  80b164:	003ff606 	br	80b140 <__umodsi3+0x34>

0080b168 <__adddf3>:
  80b168:	02000434 	movhi	r8,16
  80b16c:	423fffc4 	addi	r8,r8,-1
  80b170:	2806d53a 	srli	r3,r5,20
  80b174:	3804d53a 	srli	r2,r7,20
  80b178:	2a14703a 	and	r10,r5,r8
  80b17c:	3a12703a 	and	r9,r7,r8
  80b180:	280ad7fa 	srli	r5,r5,31
  80b184:	501490fa 	slli	r10,r10,3
  80b188:	2018d77a 	srli	r12,r4,29
  80b18c:	481290fa 	slli	r9,r9,3
  80b190:	3016d77a 	srli	r11,r6,29
  80b194:	380ed7fa 	srli	r7,r7,31
  80b198:	defffb04 	addi	sp,sp,-20
  80b19c:	dc800215 	stw	r18,8(sp)
  80b1a0:	dc000015 	stw	r16,0(sp)
  80b1a4:	1c81ffcc 	andi	r18,r3,2047
  80b1a8:	1081ffcc 	andi	r2,r2,2047
  80b1ac:	dfc00415 	stw	ra,16(sp)
  80b1b0:	dcc00315 	stw	r19,12(sp)
  80b1b4:	dc400115 	stw	r17,4(sp)
  80b1b8:	201c90fa 	slli	r14,r4,3
  80b1bc:	301a90fa 	slli	r13,r6,3
  80b1c0:	2821883a 	mov	r16,r5
  80b1c4:	6294b03a 	or	r10,r12,r10
  80b1c8:	5a52b03a 	or	r9,r11,r9
  80b1cc:	9087c83a 	sub	r3,r18,r2
  80b1d0:	29c06126 	beq	r5,r7,80b358 <__adddf3+0x1f0>
  80b1d4:	00c0550e 	bge	zero,r3,80b32c <__adddf3+0x1c4>
  80b1d8:	10007326 	beq	r2,zero,80b3a8 <__adddf3+0x240>
  80b1dc:	9081ffd8 	cmpnei	r2,r18,2047
  80b1e0:	1000bd26 	beq	r2,zero,80b4d8 <__adddf3+0x370>
  80b1e4:	4a402034 	orhi	r9,r9,128
  80b1e8:	18800e48 	cmpgei	r2,r3,57
  80b1ec:	1000ef1e 	bne	r2,zero,80b5ac <__adddf3+0x444>
  80b1f0:	18800808 	cmpgei	r2,r3,32
  80b1f4:	1001321e 	bne	r2,zero,80b6c0 <__adddf3+0x558>
  80b1f8:	00800804 	movi	r2,32
  80b1fc:	10c5c83a 	sub	r2,r2,r3
  80b200:	68c8d83a 	srl	r4,r13,r3
  80b204:	48a2983a 	sll	r17,r9,r2
  80b208:	689a983a 	sll	r13,r13,r2
  80b20c:	48c6d83a 	srl	r3,r9,r3
  80b210:	8922b03a 	or	r17,r17,r4
  80b214:	681ac03a 	cmpne	r13,r13,zero
  80b218:	8b62b03a 	or	r17,r17,r13
  80b21c:	50d5c83a 	sub	r10,r10,r3
  80b220:	7463c83a 	sub	r17,r14,r17
  80b224:	7451803a 	cmpltu	r8,r14,r17
  80b228:	5211c83a 	sub	r8,r10,r8
  80b22c:	4080202c 	andhi	r2,r8,128
  80b230:	10008d26 	beq	r2,zero,80b468 <__adddf3+0x300>
  80b234:	02402034 	movhi	r9,128
  80b238:	4a7fffc4 	addi	r9,r9,-1
  80b23c:	4266703a 	and	r19,r8,r9
  80b240:	9800b326 	beq	r19,zero,80b510 <__adddf3+0x3a8>
  80b244:	9809883a 	mov	r4,r19
  80b248:	080088c0 	call	80088c <__clzsi2>
  80b24c:	10fffe04 	addi	r3,r2,-8
  80b250:	02000804 	movi	r8,32
  80b254:	40d1c83a 	sub	r8,r8,r3
  80b258:	8a10d83a 	srl	r8,r17,r8
  80b25c:	98d2983a 	sll	r9,r19,r3
  80b260:	88e2983a 	sll	r17,r17,r3
  80b264:	4250b03a 	or	r8,r8,r9
  80b268:	1c80b216 	blt	r3,r18,80b534 <__adddf3+0x3cc>
  80b26c:	1c87c83a 	sub	r3,r3,r18
  80b270:	19000044 	addi	r4,r3,1
  80b274:	20800808 	cmpgei	r2,r4,32
  80b278:	10006f1e 	bne	r2,zero,80b438 <__adddf3+0x2d0>
  80b27c:	00800804 	movi	r2,32
  80b280:	1105c83a 	sub	r2,r2,r4
  80b284:	8906d83a 	srl	r3,r17,r4
  80b288:	88a2983a 	sll	r17,r17,r2
  80b28c:	4084983a 	sll	r2,r8,r2
  80b290:	4110d83a 	srl	r8,r8,r4
  80b294:	8822c03a 	cmpne	r17,r17,zero
  80b298:	10c4b03a 	or	r2,r2,r3
  80b29c:	1462b03a 	or	r17,r2,r17
  80b2a0:	0025883a 	mov	r18,zero
  80b2a4:	888001cc 	andi	r2,r17,7
  80b2a8:	10000726 	beq	r2,zero,80b2c8 <__adddf3+0x160>
  80b2ac:	888003cc 	andi	r2,r17,15
  80b2b0:	10800120 	cmpeqi	r2,r2,4
  80b2b4:	1000041e 	bne	r2,zero,80b2c8 <__adddf3+0x160>
  80b2b8:	88c00104 	addi	r3,r17,4
  80b2bc:	1c63803a 	cmpltu	r17,r3,r17
  80b2c0:	4451883a 	add	r8,r8,r17
  80b2c4:	1823883a 	mov	r17,r3
  80b2c8:	4080202c 	andhi	r2,r8,128
  80b2cc:	10006826 	beq	r2,zero,80b470 <__adddf3+0x308>
  80b2d0:	90c00044 	addi	r3,r18,1
  80b2d4:	1881ffe0 	cmpeqi	r2,r3,2047
  80b2d8:	18c1ffcc 	andi	r3,r3,2047
  80b2dc:	10007a1e 	bne	r2,zero,80b4c8 <__adddf3+0x360>
  80b2e0:	00bfe034 	movhi	r2,65408
  80b2e4:	10bfffc4 	addi	r2,r2,-1
  80b2e8:	4090703a 	and	r8,r8,r2
  80b2ec:	4004977a 	slli	r2,r8,29
  80b2f0:	4010927a 	slli	r8,r8,9
  80b2f4:	8822d0fa 	srli	r17,r17,3
  80b2f8:	4010d33a 	srli	r8,r8,12
  80b2fc:	1444b03a 	or	r2,r2,r17
  80b300:	1806953a 	slli	r3,r3,20
  80b304:	802097fa 	slli	r16,r16,31
  80b308:	1a06b03a 	or	r3,r3,r8
  80b30c:	1c06b03a 	or	r3,r3,r16
  80b310:	dfc00417 	ldw	ra,16(sp)
  80b314:	dcc00317 	ldw	r19,12(sp)
  80b318:	dc800217 	ldw	r18,8(sp)
  80b31c:	dc400117 	ldw	r17,4(sp)
  80b320:	dc000017 	ldw	r16,0(sp)
  80b324:	dec00504 	addi	sp,sp,20
  80b328:	f800283a 	ret
  80b32c:	18002626 	beq	r3,zero,80b3c8 <__adddf3+0x260>
  80b330:	1487c83a 	sub	r3,r2,r18
  80b334:	9000ba1e 	bne	r18,zero,80b620 <__adddf3+0x4b8>
  80b338:	5388b03a 	or	r4,r10,r14
  80b33c:	20011826 	beq	r4,zero,80b7a0 <__adddf3+0x638>
  80b340:	193fffc4 	addi	r4,r3,-1
  80b344:	20015726 	beq	r4,zero,80b8a4 <__adddf3+0x73c>
  80b348:	18c1ffd8 	cmpnei	r3,r3,2047
  80b34c:	18013026 	beq	r3,zero,80b810 <__adddf3+0x6a8>
  80b350:	2007883a 	mov	r3,r4
  80b354:	0000b506 	br	80b62c <__adddf3+0x4c4>
  80b358:	00c07b0e 	bge	zero,r3,80b548 <__adddf3+0x3e0>
  80b35c:	10002e26 	beq	r2,zero,80b418 <__adddf3+0x2b0>
  80b360:	9081ffd8 	cmpnei	r2,r18,2047
  80b364:	10005c26 	beq	r2,zero,80b4d8 <__adddf3+0x370>
  80b368:	4a402034 	orhi	r9,r9,128
  80b36c:	18800e48 	cmpgei	r2,r3,57
  80b370:	10004b1e 	bne	r2,zero,80b4a0 <__adddf3+0x338>
  80b374:	18800808 	cmpgei	r2,r3,32
  80b378:	1000ec26 	beq	r2,zero,80b72c <__adddf3+0x5c4>
  80b37c:	1c7ff804 	addi	r17,r3,-32
  80b380:	19000820 	cmpeqi	r4,r3,32
  80b384:	4c44d83a 	srl	r2,r9,r17
  80b388:	2000041e 	bne	r4,zero,80b39c <__adddf3+0x234>
  80b38c:	01001004 	movi	r4,64
  80b390:	20c7c83a 	sub	r3,r4,r3
  80b394:	48d2983a 	sll	r9,r9,r3
  80b398:	6a5ab03a 	or	r13,r13,r9
  80b39c:	6822c03a 	cmpne	r17,r13,zero
  80b3a0:	88a2b03a 	or	r17,r17,r2
  80b3a4:	00004006 	br	80b4a8 <__adddf3+0x340>
  80b3a8:	4b44b03a 	or	r2,r9,r13
  80b3ac:	10008226 	beq	r2,zero,80b5b8 <__adddf3+0x450>
  80b3b0:	18bfffc4 	addi	r2,r3,-1
  80b3b4:	10011026 	beq	r2,zero,80b7f8 <__adddf3+0x690>
  80b3b8:	18c1ffd8 	cmpnei	r3,r3,2047
  80b3bc:	18004626 	beq	r3,zero,80b4d8 <__adddf3+0x370>
  80b3c0:	1007883a 	mov	r3,r2
  80b3c4:	003f8806 	br	80b1e8 <__adddf3+0x80>
  80b3c8:	90800044 	addi	r2,r18,1
  80b3cc:	1081ff8c 	andi	r2,r2,2046
  80b3d0:	1000a51e 	bne	r2,zero,80b668 <__adddf3+0x500>
  80b3d4:	538ab03a 	or	r5,r10,r14
  80b3d8:	4b44b03a 	or	r2,r9,r13
  80b3dc:	9000f81e 	bne	r18,zero,80b7c0 <__adddf3+0x658>
  80b3e0:	28013726 	beq	r5,zero,80b8c0 <__adddf3+0x758>
  80b3e4:	10011226 	beq	r2,zero,80b830 <__adddf3+0x6c8>
  80b3e8:	7363c83a 	sub	r17,r14,r13
  80b3ec:	7445803a 	cmpltu	r2,r14,r17
  80b3f0:	5251c83a 	sub	r8,r10,r9
  80b3f4:	4091c83a 	sub	r8,r8,r2
  80b3f8:	4080202c 	andhi	r2,r8,128
  80b3fc:	10018f26 	beq	r2,zero,80ba3c <__adddf3+0x8d4>
  80b400:	6ba3c83a 	sub	r17,r13,r14
  80b404:	4a95c83a 	sub	r10,r9,r10
  80b408:	6c51803a 	cmpltu	r8,r13,r17
  80b40c:	5211c83a 	sub	r8,r10,r8
  80b410:	3821883a 	mov	r16,r7
  80b414:	003fa306 	br	80b2a4 <__adddf3+0x13c>
  80b418:	4b44b03a 	or	r2,r9,r13
  80b41c:	10006626 	beq	r2,zero,80b5b8 <__adddf3+0x450>
  80b420:	18bfffc4 	addi	r2,r3,-1
  80b424:	1000ec26 	beq	r2,zero,80b7d8 <__adddf3+0x670>
  80b428:	18c1ffd8 	cmpnei	r3,r3,2047
  80b42c:	18012d26 	beq	r3,zero,80b8e4 <__adddf3+0x77c>
  80b430:	1007883a 	mov	r3,r2
  80b434:	003fcd06 	br	80b36c <__adddf3+0x204>
  80b438:	18fff844 	addi	r3,r3,-31
  80b43c:	20800820 	cmpeqi	r2,r4,32
  80b440:	40c6d83a 	srl	r3,r8,r3
  80b444:	1000041e 	bne	r2,zero,80b458 <__adddf3+0x2f0>
  80b448:	00801004 	movi	r2,64
  80b44c:	1109c83a 	sub	r4,r2,r4
  80b450:	4110983a 	sll	r8,r8,r4
  80b454:	8a22b03a 	or	r17,r17,r8
  80b458:	8822c03a 	cmpne	r17,r17,zero
  80b45c:	88e2b03a 	or	r17,r17,r3
  80b460:	0011883a 	mov	r8,zero
  80b464:	0025883a 	mov	r18,zero
  80b468:	888001cc 	andi	r2,r17,7
  80b46c:	103f8f1e 	bne	r2,zero,80b2ac <__adddf3+0x144>
  80b470:	8822d0fa 	srli	r17,r17,3
  80b474:	4004977a 	slli	r2,r8,29
  80b478:	4014d0fa 	srli	r10,r8,3
  80b47c:	9007883a 	mov	r3,r18
  80b480:	8884b03a 	or	r2,r17,r2
  80b484:	1901ffe0 	cmpeqi	r4,r3,2047
  80b488:	2000191e 	bne	r4,zero,80b4f0 <__adddf3+0x388>
  80b48c:	02000434 	movhi	r8,16
  80b490:	423fffc4 	addi	r8,r8,-1
  80b494:	5210703a 	and	r8,r10,r8
  80b498:	18c1ffcc 	andi	r3,r3,2047
  80b49c:	003f9806 	br	80b300 <__adddf3+0x198>
  80b4a0:	4b62b03a 	or	r17,r9,r13
  80b4a4:	8822c03a 	cmpne	r17,r17,zero
  80b4a8:	8ba3883a 	add	r17,r17,r14
  80b4ac:	8b91803a 	cmpltu	r8,r17,r14
  80b4b0:	4291883a 	add	r8,r8,r10
  80b4b4:	4080202c 	andhi	r2,r8,128
  80b4b8:	103feb26 	beq	r2,zero,80b468 <__adddf3+0x300>
  80b4bc:	94800044 	addi	r18,r18,1
  80b4c0:	9081ffe0 	cmpeqi	r2,r18,2047
  80b4c4:	10007426 	beq	r2,zero,80b698 <__adddf3+0x530>
  80b4c8:	00c1ffc4 	movi	r3,2047
  80b4cc:	0011883a 	mov	r8,zero
  80b4d0:	0005883a 	mov	r2,zero
  80b4d4:	003f8a06 	br	80b300 <__adddf3+0x198>
  80b4d8:	500a977a 	slli	r5,r10,29
  80b4dc:	00c80034 	movhi	r3,8192
  80b4e0:	18ffffc4 	addi	r3,r3,-1
  80b4e4:	5014d0fa 	srli	r10,r10,3
  80b4e8:	20c4703a 	and	r2,r4,r3
  80b4ec:	1144b03a 	or	r2,r2,r5
  80b4f0:	1286b03a 	or	r3,r2,r10
  80b4f4:	18015426 	beq	r3,zero,80ba48 <__adddf3+0x8e0>
  80b4f8:	00c00434 	movhi	r3,16
  80b4fc:	18ffffc4 	addi	r3,r3,-1
  80b500:	52000234 	orhi	r8,r10,8
  80b504:	40d0703a 	and	r8,r8,r3
  80b508:	00c1ffc4 	movi	r3,2047
  80b50c:	003f7c06 	br	80b300 <__adddf3+0x198>
  80b510:	8809883a 	mov	r4,r17
  80b514:	080088c0 	call	80088c <__clzsi2>
  80b518:	10c00604 	addi	r3,r2,24
  80b51c:	19000808 	cmpgei	r4,r3,32
  80b520:	203f4b26 	beq	r4,zero,80b250 <__adddf3+0xe8>
  80b524:	123ffe04 	addi	r8,r2,-8
  80b528:	8a10983a 	sll	r8,r17,r8
  80b52c:	0023883a 	mov	r17,zero
  80b530:	1cbf4e0e 	bge	r3,r18,80b26c <__adddf3+0x104>
  80b534:	00bfe034 	movhi	r2,65408
  80b538:	10bfffc4 	addi	r2,r2,-1
  80b53c:	90e5c83a 	sub	r18,r18,r3
  80b540:	4090703a 	and	r8,r8,r2
  80b544:	003f5706 	br	80b2a4 <__adddf3+0x13c>
  80b548:	18002226 	beq	r3,zero,80b5d4 <__adddf3+0x46c>
  80b54c:	1487c83a 	sub	r3,r2,r18
  80b550:	90006e26 	beq	r18,zero,80b70c <__adddf3+0x5a4>
  80b554:	1101ffd8 	cmpnei	r4,r2,2047
  80b558:	2000e926 	beq	r4,zero,80b900 <__adddf3+0x798>
  80b55c:	52802034 	orhi	r10,r10,128
  80b560:	19000e48 	cmpgei	r4,r3,57
  80b564:	2000b91e 	bne	r4,zero,80b84c <__adddf3+0x6e4>
  80b568:	19000808 	cmpgei	r4,r3,32
  80b56c:	2001101e 	bne	r4,zero,80b9b0 <__adddf3+0x848>
  80b570:	01000804 	movi	r4,32
  80b574:	20c9c83a 	sub	r4,r4,r3
  80b578:	5122983a 	sll	r17,r10,r4
  80b57c:	70cad83a 	srl	r5,r14,r3
  80b580:	7108983a 	sll	r4,r14,r4
  80b584:	50d4d83a 	srl	r10,r10,r3
  80b588:	8962b03a 	or	r17,r17,r5
  80b58c:	2008c03a 	cmpne	r4,r4,zero
  80b590:	8922b03a 	or	r17,r17,r4
  80b594:	4a93883a 	add	r9,r9,r10
  80b598:	8b63883a 	add	r17,r17,r13
  80b59c:	8b51803a 	cmpltu	r8,r17,r13
  80b5a0:	4251883a 	add	r8,r8,r9
  80b5a4:	1025883a 	mov	r18,r2
  80b5a8:	003fc206 	br	80b4b4 <__adddf3+0x34c>
  80b5ac:	4b62b03a 	or	r17,r9,r13
  80b5b0:	8822c03a 	cmpne	r17,r17,zero
  80b5b4:	003f1a06 	br	80b220 <__adddf3+0xb8>
  80b5b8:	500c977a 	slli	r6,r10,29
  80b5bc:	01480034 	movhi	r5,8192
  80b5c0:	297fffc4 	addi	r5,r5,-1
  80b5c4:	2144703a 	and	r2,r4,r5
  80b5c8:	5014d0fa 	srli	r10,r10,3
  80b5cc:	1184b03a 	or	r2,r2,r6
  80b5d0:	003fac06 	br	80b484 <__adddf3+0x31c>
  80b5d4:	90800044 	addi	r2,r18,1
  80b5d8:	1141ff8c 	andi	r5,r2,2046
  80b5dc:	28005e1e 	bne	r5,zero,80b758 <__adddf3+0x5f0>
  80b5e0:	5384b03a 	or	r2,r10,r14
  80b5e4:	9000a71e 	bne	r18,zero,80b884 <__adddf3+0x71c>
  80b5e8:	1000e526 	beq	r2,zero,80b980 <__adddf3+0x818>
  80b5ec:	4b44b03a 	or	r2,r9,r13
  80b5f0:	10008f26 	beq	r2,zero,80b830 <__adddf3+0x6c8>
  80b5f4:	7363883a 	add	r17,r14,r13
  80b5f8:	5255883a 	add	r10,r10,r9
  80b5fc:	8b91803a 	cmpltu	r8,r17,r14
  80b600:	5211883a 	add	r8,r10,r8
  80b604:	4080202c 	andhi	r2,r8,128
  80b608:	103f9726 	beq	r2,zero,80b468 <__adddf3+0x300>
  80b60c:	00bfe034 	movhi	r2,65408
  80b610:	10bfffc4 	addi	r2,r2,-1
  80b614:	4090703a 	and	r8,r8,r2
  80b618:	04800044 	movi	r18,1
  80b61c:	003f9206 	br	80b468 <__adddf3+0x300>
  80b620:	1101ffd8 	cmpnei	r4,r2,2047
  80b624:	20007a26 	beq	r4,zero,80b810 <__adddf3+0x6a8>
  80b628:	52802034 	orhi	r10,r10,128
  80b62c:	19000e48 	cmpgei	r4,r3,57
  80b630:	20002e1e 	bne	r4,zero,80b6ec <__adddf3+0x584>
  80b634:	19000808 	cmpgei	r4,r3,32
  80b638:	2000871e 	bne	r4,zero,80b858 <__adddf3+0x6f0>
  80b63c:	01000804 	movi	r4,32
  80b640:	20c9c83a 	sub	r4,r4,r3
  80b644:	5122983a 	sll	r17,r10,r4
  80b648:	70cad83a 	srl	r5,r14,r3
  80b64c:	711c983a 	sll	r14,r14,r4
  80b650:	50d4d83a 	srl	r10,r10,r3
  80b654:	8962b03a 	or	r17,r17,r5
  80b658:	701cc03a 	cmpne	r14,r14,zero
  80b65c:	8ba2b03a 	or	r17,r17,r14
  80b660:	4a93c83a 	sub	r9,r9,r10
  80b664:	00002306 	br	80b6f4 <__adddf3+0x58c>
  80b668:	7363c83a 	sub	r17,r14,r13
  80b66c:	5267c83a 	sub	r19,r10,r9
  80b670:	7451803a 	cmpltu	r8,r14,r17
  80b674:	9a27c83a 	sub	r19,r19,r8
  80b678:	9880202c 	andhi	r2,r19,128
  80b67c:	1000421e 	bne	r2,zero,80b788 <__adddf3+0x620>
  80b680:	8cc4b03a 	or	r2,r17,r19
  80b684:	103eee1e 	bne	r2,zero,80b240 <__adddf3+0xd8>
  80b688:	0015883a 	mov	r10,zero
  80b68c:	0021883a 	mov	r16,zero
  80b690:	003f7e06 	br	80b48c <__adddf3+0x324>
  80b694:	04800084 	movi	r18,2
  80b698:	00bfe034 	movhi	r2,65408
  80b69c:	10bfffc4 	addi	r2,r2,-1
  80b6a0:	8806d07a 	srli	r3,r17,1
  80b6a4:	4090703a 	and	r8,r8,r2
  80b6a8:	400497fa 	slli	r2,r8,31
  80b6ac:	8c40004c 	andi	r17,r17,1
  80b6b0:	1c62b03a 	or	r17,r3,r17
  80b6b4:	4010d07a 	srli	r8,r8,1
  80b6b8:	1462b03a 	or	r17,r2,r17
  80b6bc:	003ef906 	br	80b2a4 <__adddf3+0x13c>
  80b6c0:	1c7ff804 	addi	r17,r3,-32
  80b6c4:	19000820 	cmpeqi	r4,r3,32
  80b6c8:	4c44d83a 	srl	r2,r9,r17
  80b6cc:	2000041e 	bne	r4,zero,80b6e0 <__adddf3+0x578>
  80b6d0:	01001004 	movi	r4,64
  80b6d4:	20c7c83a 	sub	r3,r4,r3
  80b6d8:	48d2983a 	sll	r9,r9,r3
  80b6dc:	6a5ab03a 	or	r13,r13,r9
  80b6e0:	6822c03a 	cmpne	r17,r13,zero
  80b6e4:	88a2b03a 	or	r17,r17,r2
  80b6e8:	003ecd06 	br	80b220 <__adddf3+0xb8>
  80b6ec:	5394b03a 	or	r10,r10,r14
  80b6f0:	5022c03a 	cmpne	r17,r10,zero
  80b6f4:	6c63c83a 	sub	r17,r13,r17
  80b6f8:	6c51803a 	cmpltu	r8,r13,r17
  80b6fc:	4a11c83a 	sub	r8,r9,r8
  80b700:	3821883a 	mov	r16,r7
  80b704:	1025883a 	mov	r18,r2
  80b708:	003ec806 	br	80b22c <__adddf3+0xc4>
  80b70c:	5388b03a 	or	r4,r10,r14
  80b710:	20008226 	beq	r4,zero,80b91c <__adddf3+0x7b4>
  80b714:	193fffc4 	addi	r4,r3,-1
  80b718:	2000b026 	beq	r4,zero,80b9dc <__adddf3+0x874>
  80b71c:	18c1ffd8 	cmpnei	r3,r3,2047
  80b720:	18007726 	beq	r3,zero,80b900 <__adddf3+0x798>
  80b724:	2007883a 	mov	r3,r4
  80b728:	003f8d06 	br	80b560 <__adddf3+0x3f8>
  80b72c:	00800804 	movi	r2,32
  80b730:	10c5c83a 	sub	r2,r2,r3
  80b734:	68c8d83a 	srl	r4,r13,r3
  80b738:	48a2983a 	sll	r17,r9,r2
  80b73c:	689a983a 	sll	r13,r13,r2
  80b740:	48c6d83a 	srl	r3,r9,r3
  80b744:	8922b03a 	or	r17,r17,r4
  80b748:	681ac03a 	cmpne	r13,r13,zero
  80b74c:	8b62b03a 	or	r17,r17,r13
  80b750:	50d5883a 	add	r10,r10,r3
  80b754:	003f5406 	br	80b4a8 <__adddf3+0x340>
  80b758:	10c1ffe0 	cmpeqi	r3,r2,2047
  80b75c:	183f5a1e 	bne	r3,zero,80b4c8 <__adddf3+0x360>
  80b760:	7351883a 	add	r8,r14,r13
  80b764:	4387803a 	cmpltu	r3,r8,r14
  80b768:	5255883a 	add	r10,r10,r9
  80b76c:	50c7883a 	add	r3,r10,r3
  80b770:	401ad07a 	srli	r13,r8,1
  80b774:	182297fa 	slli	r17,r3,31
  80b778:	1810d07a 	srli	r8,r3,1
  80b77c:	1025883a 	mov	r18,r2
  80b780:	8b62b03a 	or	r17,r17,r13
  80b784:	003f3806 	br	80b468 <__adddf3+0x300>
  80b788:	6ba3c83a 	sub	r17,r13,r14
  80b78c:	4a93c83a 	sub	r9,r9,r10
  80b790:	6c51803a 	cmpltu	r8,r13,r17
  80b794:	4a27c83a 	sub	r19,r9,r8
  80b798:	3821883a 	mov	r16,r7
  80b79c:	003ea806 	br	80b240 <__adddf3+0xd8>
  80b7a0:	480a977a 	slli	r5,r9,29
  80b7a4:	01080034 	movhi	r4,8192
  80b7a8:	213fffc4 	addi	r4,r4,-1
  80b7ac:	3104703a 	and	r2,r6,r4
  80b7b0:	4814d0fa 	srli	r10,r9,3
  80b7b4:	1144b03a 	or	r2,r2,r5
  80b7b8:	3821883a 	mov	r16,r7
  80b7bc:	003f3106 	br	80b484 <__adddf3+0x31c>
  80b7c0:	28005d1e 	bne	r5,zero,80b938 <__adddf3+0x7d0>
  80b7c4:	1000121e 	bne	r2,zero,80b810 <__adddf3+0x6a8>
  80b7c8:	0021883a 	mov	r16,zero
  80b7cc:	4015883a 	mov	r10,r8
  80b7d0:	00bfffc4 	movi	r2,-1
  80b7d4:	003f4806 	br	80b4f8 <__adddf3+0x390>
  80b7d8:	7363883a 	add	r17,r14,r13
  80b7dc:	5255883a 	add	r10,r10,r9
  80b7e0:	8b91803a 	cmpltu	r8,r17,r14
  80b7e4:	5211883a 	add	r8,r10,r8
  80b7e8:	4080202c 	andhi	r2,r8,128
  80b7ec:	103fa91e 	bne	r2,zero,80b694 <__adddf3+0x52c>
  80b7f0:	04800044 	movi	r18,1
  80b7f4:	003f1c06 	br	80b468 <__adddf3+0x300>
  80b7f8:	7363c83a 	sub	r17,r14,r13
  80b7fc:	5255c83a 	sub	r10,r10,r9
  80b800:	7451803a 	cmpltu	r8,r14,r17
  80b804:	5211c83a 	sub	r8,r10,r8
  80b808:	04800044 	movi	r18,1
  80b80c:	003e8706 	br	80b22c <__adddf3+0xc4>
  80b810:	4806977a 	slli	r3,r9,29
  80b814:	00880034 	movhi	r2,8192
  80b818:	10bfffc4 	addi	r2,r2,-1
  80b81c:	3084703a 	and	r2,r6,r2
  80b820:	4814d0fa 	srli	r10,r9,3
  80b824:	10c4b03a 	or	r2,r2,r3
  80b828:	3821883a 	mov	r16,r7
  80b82c:	003f3006 	br	80b4f0 <__adddf3+0x388>
  80b830:	500a977a 	slli	r5,r10,29
  80b834:	00880034 	movhi	r2,8192
  80b838:	10bfffc4 	addi	r2,r2,-1
  80b83c:	2084703a 	and	r2,r4,r2
  80b840:	5014d0fa 	srli	r10,r10,3
  80b844:	1144b03a 	or	r2,r2,r5
  80b848:	003f1006 	br	80b48c <__adddf3+0x324>
  80b84c:	5394b03a 	or	r10,r10,r14
  80b850:	5022c03a 	cmpne	r17,r10,zero
  80b854:	003f5006 	br	80b598 <__adddf3+0x430>
  80b858:	1c7ff804 	addi	r17,r3,-32
  80b85c:	19400820 	cmpeqi	r5,r3,32
  80b860:	5448d83a 	srl	r4,r10,r17
  80b864:	2800041e 	bne	r5,zero,80b878 <__adddf3+0x710>
  80b868:	01401004 	movi	r5,64
  80b86c:	28c7c83a 	sub	r3,r5,r3
  80b870:	50d4983a 	sll	r10,r10,r3
  80b874:	729cb03a 	or	r14,r14,r10
  80b878:	7022c03a 	cmpne	r17,r14,zero
  80b87c:	8922b03a 	or	r17,r17,r4
  80b880:	003f9c06 	br	80b6f4 <__adddf3+0x58c>
  80b884:	10005a1e 	bne	r2,zero,80b9f0 <__adddf3+0x888>
  80b888:	4804977a 	slli	r2,r9,29
  80b88c:	00c80034 	movhi	r3,8192
  80b890:	18ffffc4 	addi	r3,r3,-1
  80b894:	30cc703a 	and	r6,r6,r3
  80b898:	4814d0fa 	srli	r10,r9,3
  80b89c:	1184b03a 	or	r2,r2,r6
  80b8a0:	003f1306 	br	80b4f0 <__adddf3+0x388>
  80b8a4:	6ba3c83a 	sub	r17,r13,r14
  80b8a8:	4a95c83a 	sub	r10,r9,r10
  80b8ac:	6c51803a 	cmpltu	r8,r13,r17
  80b8b0:	5211c83a 	sub	r8,r10,r8
  80b8b4:	3821883a 	mov	r16,r7
  80b8b8:	04800044 	movi	r18,1
  80b8bc:	003e5b06 	br	80b22c <__adddf3+0xc4>
  80b8c0:	103f7126 	beq	r2,zero,80b688 <__adddf3+0x520>
  80b8c4:	4808977a 	slli	r4,r9,29
  80b8c8:	00880034 	movhi	r2,8192
  80b8cc:	10bfffc4 	addi	r2,r2,-1
  80b8d0:	3084703a 	and	r2,r6,r2
  80b8d4:	4814d0fa 	srli	r10,r9,3
  80b8d8:	1104b03a 	or	r2,r2,r4
  80b8dc:	3821883a 	mov	r16,r7
  80b8e0:	003eea06 	br	80b48c <__adddf3+0x324>
  80b8e4:	5006977a 	slli	r3,r10,29
  80b8e8:	00880034 	movhi	r2,8192
  80b8ec:	10bfffc4 	addi	r2,r2,-1
  80b8f0:	2084703a 	and	r2,r4,r2
  80b8f4:	5014d0fa 	srli	r10,r10,3
  80b8f8:	10c4b03a 	or	r2,r2,r3
  80b8fc:	003efc06 	br	80b4f0 <__adddf3+0x388>
  80b900:	4806977a 	slli	r3,r9,29
  80b904:	00880034 	movhi	r2,8192
  80b908:	10bfffc4 	addi	r2,r2,-1
  80b90c:	3084703a 	and	r2,r6,r2
  80b910:	4814d0fa 	srli	r10,r9,3
  80b914:	10c4b03a 	or	r2,r2,r3
  80b918:	003ef506 	br	80b4f0 <__adddf3+0x388>
  80b91c:	4808977a 	slli	r4,r9,29
  80b920:	00880034 	movhi	r2,8192
  80b924:	10bfffc4 	addi	r2,r2,-1
  80b928:	3084703a 	and	r2,r6,r2
  80b92c:	4814d0fa 	srli	r10,r9,3
  80b930:	1104b03a 	or	r2,r2,r4
  80b934:	003ed306 	br	80b484 <__adddf3+0x31c>
  80b938:	500a977a 	slli	r5,r10,29
  80b93c:	5014d0fa 	srli	r10,r10,3
  80b940:	10001626 	beq	r2,zero,80b99c <__adddf3+0x834>
  80b944:	00c80034 	movhi	r3,8192
  80b948:	18ffffc4 	addi	r3,r3,-1
  80b94c:	20c4703a 	and	r2,r4,r3
  80b950:	5100022c 	andhi	r4,r10,8
  80b954:	1144b03a 	or	r2,r2,r5
  80b958:	203ee526 	beq	r4,zero,80b4f0 <__adddf3+0x388>
  80b95c:	4808d0fa 	srli	r4,r9,3
  80b960:	2140022c 	andhi	r5,r4,8
  80b964:	283ee21e 	bne	r5,zero,80b4f0 <__adddf3+0x388>
  80b968:	4812977a 	slli	r9,r9,29
  80b96c:	30c4703a 	and	r2,r6,r3
  80b970:	3821883a 	mov	r16,r7
  80b974:	1244b03a 	or	r2,r2,r9
  80b978:	2015883a 	mov	r10,r4
  80b97c:	003edc06 	br	80b4f0 <__adddf3+0x388>
  80b980:	4804977a 	slli	r2,r9,29
  80b984:	01080034 	movhi	r4,8192
  80b988:	213fffc4 	addi	r4,r4,-1
  80b98c:	310c703a 	and	r6,r6,r4
  80b990:	4814d0fa 	srli	r10,r9,3
  80b994:	1184b03a 	or	r2,r2,r6
  80b998:	003ebc06 	br	80b48c <__adddf3+0x324>
  80b99c:	00880034 	movhi	r2,8192
  80b9a0:	10bfffc4 	addi	r2,r2,-1
  80b9a4:	2084703a 	and	r2,r4,r2
  80b9a8:	1144b03a 	or	r2,r2,r5
  80b9ac:	003ed006 	br	80b4f0 <__adddf3+0x388>
  80b9b0:	193ff804 	addi	r4,r3,-32
  80b9b4:	19400820 	cmpeqi	r5,r3,32
  80b9b8:	5108d83a 	srl	r4,r10,r4
  80b9bc:	2800041e 	bne	r5,zero,80b9d0 <__adddf3+0x868>
  80b9c0:	01401004 	movi	r5,64
  80b9c4:	28c7c83a 	sub	r3,r5,r3
  80b9c8:	50d4983a 	sll	r10,r10,r3
  80b9cc:	729cb03a 	or	r14,r14,r10
  80b9d0:	7022c03a 	cmpne	r17,r14,zero
  80b9d4:	8922b03a 	or	r17,r17,r4
  80b9d8:	003eef06 	br	80b598 <__adddf3+0x430>
  80b9dc:	7363883a 	add	r17,r14,r13
  80b9e0:	5255883a 	add	r10,r10,r9
  80b9e4:	8b51803a 	cmpltu	r8,r17,r13
  80b9e8:	5211883a 	add	r8,r10,r8
  80b9ec:	003f7e06 	br	80b7e8 <__adddf3+0x680>
  80b9f0:	4b50b03a 	or	r8,r9,r13
  80b9f4:	500a977a 	slli	r5,r10,29
  80b9f8:	5014d0fa 	srli	r10,r10,3
  80b9fc:	403fe726 	beq	r8,zero,80b99c <__adddf3+0x834>
  80ba00:	00c80034 	movhi	r3,8192
  80ba04:	18ffffc4 	addi	r3,r3,-1
  80ba08:	20c4703a 	and	r2,r4,r3
  80ba0c:	5100022c 	andhi	r4,r10,8
  80ba10:	1144b03a 	or	r2,r2,r5
  80ba14:	203eb626 	beq	r4,zero,80b4f0 <__adddf3+0x388>
  80ba18:	4808d0fa 	srli	r4,r9,3
  80ba1c:	2140022c 	andhi	r5,r4,8
  80ba20:	283eb31e 	bne	r5,zero,80b4f0 <__adddf3+0x388>
  80ba24:	4804977a 	slli	r2,r9,29
  80ba28:	30cc703a 	and	r6,r6,r3
  80ba2c:	3821883a 	mov	r16,r7
  80ba30:	3084b03a 	or	r2,r6,r2
  80ba34:	2015883a 	mov	r10,r4
  80ba38:	003ead06 	br	80b4f0 <__adddf3+0x388>
  80ba3c:	8a04b03a 	or	r2,r17,r8
  80ba40:	103f1126 	beq	r2,zero,80b688 <__adddf3+0x520>
  80ba44:	003e8806 	br	80b468 <__adddf3+0x300>
  80ba48:	0005883a 	mov	r2,zero
  80ba4c:	00c1ffc4 	movi	r3,2047
  80ba50:	0011883a 	mov	r8,zero
  80ba54:	003e2a06 	br	80b300 <__adddf3+0x198>

0080ba58 <__divdf3>:
  80ba58:	2804d53a 	srli	r2,r5,20
  80ba5c:	defff204 	addi	sp,sp,-56
  80ba60:	dc000415 	stw	r16,16(sp)
  80ba64:	04000434 	movhi	r16,16
  80ba68:	ddc00b15 	stw	r23,44(sp)
  80ba6c:	dd800a15 	stw	r22,40(sp)
  80ba70:	dc800615 	stw	r18,24(sp)
  80ba74:	843fffc4 	addi	r16,r16,-1
  80ba78:	dfc00d15 	stw	ra,52(sp)
  80ba7c:	df000c15 	stw	fp,48(sp)
  80ba80:	dd400915 	stw	r21,36(sp)
  80ba84:	dd000815 	stw	r20,32(sp)
  80ba88:	dcc00715 	stw	r19,28(sp)
  80ba8c:	dc400515 	stw	r17,20(sp)
  80ba90:	1081ffcc 	andi	r2,r2,2047
  80ba94:	282cd7fa 	srli	r22,r5,31
  80ba98:	302f883a 	mov	r23,r6
  80ba9c:	2025883a 	mov	r18,r4
  80baa0:	2c20703a 	and	r16,r5,r16
  80baa4:	10006a26 	beq	r2,zero,80bc50 <__divdf3+0x1f8>
  80baa8:	10c1ffe0 	cmpeqi	r3,r2,2047
  80baac:	18007d1e 	bne	r3,zero,80bca4 <__divdf3+0x24c>
  80bab0:	2028d77a 	srli	r20,r4,29
  80bab4:	800a90fa 	slli	r5,r16,3
  80bab8:	202490fa 	slli	r18,r4,3
  80babc:	14ff0044 	addi	r19,r2,-1023
  80bac0:	a14ab03a 	or	r5,r20,r5
  80bac4:	2d002034 	orhi	r20,r5,128
  80bac8:	0021883a 	mov	r16,zero
  80bacc:	0039883a 	mov	fp,zero
  80bad0:	3804d53a 	srli	r2,r7,20
  80bad4:	00c00434 	movhi	r3,16
  80bad8:	18ffffc4 	addi	r3,r3,-1
  80badc:	1081ffcc 	andi	r2,r2,2047
  80bae0:	3810d7fa 	srli	r8,r7,31
  80bae4:	38e2703a 	and	r17,r7,r3
  80bae8:	10004626 	beq	r2,zero,80bc04 <__divdf3+0x1ac>
  80baec:	10c1ffe0 	cmpeqi	r3,r2,2047
  80baf0:	1800731e 	bne	r3,zero,80bcc0 <__divdf3+0x268>
  80baf4:	880690fa 	slli	r3,r17,3
  80baf8:	b822d77a 	srli	r17,r23,29
  80bafc:	b81290fa 	slli	r9,r23,3
  80bb00:	10bf0044 	addi	r2,r2,-1023
  80bb04:	88c6b03a 	or	r3,r17,r3
  80bb08:	1c402034 	orhi	r17,r3,128
  80bb0c:	98a7c83a 	sub	r19,r19,r2
  80bb10:	0007883a 	mov	r3,zero
  80bb14:	80800428 	cmpgeui	r2,r16,16
  80bb18:	b22af03a 	xor	r21,r22,r8
  80bb1c:	1000ab1e 	bne	r2,zero,80bdcc <__divdf3+0x374>
  80bb20:	800490ba 	slli	r2,r16,2
  80bb24:	01802074 	movhi	r6,129
  80bb28:	118d883a 	add	r6,r2,r6
  80bb2c:	30aecd17 	ldw	r2,-17612(r6)
  80bb30:	1000683a 	jmp	r2
  80bb34:	0080bdcc 	andi	r2,zero,759
  80bb38:	0080bbe0 	cmpeqi	r2,zero,751
  80bb3c:	0080bb90 	cmplti	r2,zero,750
  80bb40:	0080bbf0 	cmpltui	r2,zero,751
  80bb44:	0080bb90 	cmplti	r2,zero,750
  80bb48:	0080bd70 	cmpltui	r2,zero,757
  80bb4c:	0080bb90 	cmplti	r2,zero,750
  80bb50:	0080bbf0 	cmpltui	r2,zero,751
  80bb54:	0080bbe0 	cmpeqi	r2,zero,751
  80bb58:	0080bbe0 	cmpeqi	r2,zero,751
  80bb5c:	0080bd70 	cmpltui	r2,zero,757
  80bb60:	0080bbf0 	cmpltui	r2,zero,751
  80bb64:	0080bb74 	movhi	r2,749
  80bb68:	0080bb74 	movhi	r2,749
  80bb6c:	0080bb74 	movhi	r2,749
  80bb70:	0080bd88 	cmpgei	r2,zero,758
  80bb74:	b02b883a 	mov	r21,r22
  80bb78:	e08000a0 	cmpeqi	r2,fp,2
  80bb7c:	1000181e 	bne	r2,zero,80bbe0 <__divdf3+0x188>
  80bb80:	e08000e0 	cmpeqi	r2,fp,3
  80bb84:	1001c21e 	bne	r2,zero,80c290 <__divdf3+0x838>
  80bb88:	e0800060 	cmpeqi	r2,fp,1
  80bb8c:	10006526 	beq	r2,zero,80bd24 <__divdf3+0x2cc>
  80bb90:	0007883a 	mov	r3,zero
  80bb94:	000b883a 	mov	r5,zero
  80bb98:	0025883a 	mov	r18,zero
  80bb9c:	1806953a 	slli	r3,r3,20
  80bba0:	a82a97fa 	slli	r21,r21,31
  80bba4:	9005883a 	mov	r2,r18
  80bba8:	1946b03a 	or	r3,r3,r5
  80bbac:	1d46b03a 	or	r3,r3,r21
  80bbb0:	dfc00d17 	ldw	ra,52(sp)
  80bbb4:	df000c17 	ldw	fp,48(sp)
  80bbb8:	ddc00b17 	ldw	r23,44(sp)
  80bbbc:	dd800a17 	ldw	r22,40(sp)
  80bbc0:	dd400917 	ldw	r21,36(sp)
  80bbc4:	dd000817 	ldw	r20,32(sp)
  80bbc8:	dcc00717 	ldw	r19,28(sp)
  80bbcc:	dc800617 	ldw	r18,24(sp)
  80bbd0:	dc400517 	ldw	r17,20(sp)
  80bbd4:	dc000417 	ldw	r16,16(sp)
  80bbd8:	dec00e04 	addi	sp,sp,56
  80bbdc:	f800283a 	ret
  80bbe0:	00c1ffc4 	movi	r3,2047
  80bbe4:	000b883a 	mov	r5,zero
  80bbe8:	0025883a 	mov	r18,zero
  80bbec:	003feb06 	br	80bb9c <__divdf3+0x144>
  80bbf0:	402b883a 	mov	r21,r8
  80bbf4:	8829883a 	mov	r20,r17
  80bbf8:	4825883a 	mov	r18,r9
  80bbfc:	1839883a 	mov	fp,r3
  80bc00:	003fdd06 	br	80bb78 <__divdf3+0x120>
  80bc04:	8dd2b03a 	or	r9,r17,r23
  80bc08:	48004226 	beq	r9,zero,80bd14 <__divdf3+0x2bc>
  80bc0c:	da000015 	stw	r8,0(sp)
  80bc10:	88013d26 	beq	r17,zero,80c108 <__divdf3+0x6b0>
  80bc14:	8809883a 	mov	r4,r17
  80bc18:	080088c0 	call	80088c <__clzsi2>
  80bc1c:	da000017 	ldw	r8,0(sp)
  80bc20:	117ffd44 	addi	r5,r2,-11
  80bc24:	01000744 	movi	r4,29
  80bc28:	127ffe04 	addi	r9,r2,-8
  80bc2c:	2149c83a 	sub	r4,r4,r5
  80bc30:	8a46983a 	sll	r3,r17,r9
  80bc34:	b908d83a 	srl	r4,r23,r4
  80bc38:	ba52983a 	sll	r9,r23,r9
  80bc3c:	20e2b03a 	or	r17,r4,r3
  80bc40:	14c5883a 	add	r2,r2,r19
  80bc44:	14c0fcc4 	addi	r19,r2,1011
  80bc48:	0007883a 	mov	r3,zero
  80bc4c:	003fb106 	br	80bb14 <__divdf3+0xbc>
  80bc50:	8128b03a 	or	r20,r16,r4
  80bc54:	2023883a 	mov	r17,r4
  80bc58:	a0002926 	beq	r20,zero,80bd00 <__divdf3+0x2a8>
  80bc5c:	d9c00015 	stw	r7,0(sp)
  80bc60:	80013526 	beq	r16,zero,80c138 <__divdf3+0x6e0>
  80bc64:	8009883a 	mov	r4,r16
  80bc68:	080088c0 	call	80088c <__clzsi2>
  80bc6c:	d9c00017 	ldw	r7,0(sp)
  80bc70:	10fffd44 	addi	r3,r2,-11
  80bc74:	05000744 	movi	r20,29
  80bc78:	113ffe04 	addi	r4,r2,-8
  80bc7c:	a0e9c83a 	sub	r20,r20,r3
  80bc80:	810a983a 	sll	r5,r16,r4
  80bc84:	8d28d83a 	srl	r20,r17,r20
  80bc88:	8924983a 	sll	r18,r17,r4
  80bc8c:	a168b03a 	or	r20,r20,r5
  80bc90:	04ff0344 	movi	r19,-1011
  80bc94:	98a7c83a 	sub	r19,r19,r2
  80bc98:	0021883a 	mov	r16,zero
  80bc9c:	0039883a 	mov	fp,zero
  80bca0:	003f8b06 	br	80bad0 <__divdf3+0x78>
  80bca4:	8128b03a 	or	r20,r16,r4
  80bca8:	a000101e 	bne	r20,zero,80bcec <__divdf3+0x294>
  80bcac:	0025883a 	mov	r18,zero
  80bcb0:	04000204 	movi	r16,8
  80bcb4:	04c1ffc4 	movi	r19,2047
  80bcb8:	07000084 	movi	fp,2
  80bcbc:	003f8406 	br	80bad0 <__divdf3+0x78>
  80bcc0:	8dd2b03a 	or	r9,r17,r23
  80bcc4:	9cfe0044 	addi	r19,r19,-2047
  80bcc8:	4800041e 	bne	r9,zero,80bcdc <__divdf3+0x284>
  80bccc:	84000094 	ori	r16,r16,2
  80bcd0:	0023883a 	mov	r17,zero
  80bcd4:	00c00084 	movi	r3,2
  80bcd8:	003f8e06 	br	80bb14 <__divdf3+0xbc>
  80bcdc:	840000d4 	ori	r16,r16,3
  80bce0:	b813883a 	mov	r9,r23
  80bce4:	00c000c4 	movi	r3,3
  80bce8:	003f8a06 	br	80bb14 <__divdf3+0xbc>
  80bcec:	8029883a 	mov	r20,r16
  80bcf0:	04c1ffc4 	movi	r19,2047
  80bcf4:	04000304 	movi	r16,12
  80bcf8:	070000c4 	movi	fp,3
  80bcfc:	003f7406 	br	80bad0 <__divdf3+0x78>
  80bd00:	0025883a 	mov	r18,zero
  80bd04:	04000104 	movi	r16,4
  80bd08:	0027883a 	mov	r19,zero
  80bd0c:	07000044 	movi	fp,1
  80bd10:	003f6f06 	br	80bad0 <__divdf3+0x78>
  80bd14:	84000054 	ori	r16,r16,1
  80bd18:	0023883a 	mov	r17,zero
  80bd1c:	00c00044 	movi	r3,1
  80bd20:	003f7c06 	br	80bb14 <__divdf3+0xbc>
  80bd24:	9c40ffc4 	addi	r17,r19,1023
  80bd28:	0440c70e 	bge	zero,r17,80c048 <__divdf3+0x5f0>
  80bd2c:	908001cc 	andi	r2,r18,7
  80bd30:	1001331e 	bne	r2,zero,80c200 <__divdf3+0x7a8>
  80bd34:	900cd0fa 	srli	r6,r18,3
  80bd38:	a080402c 	andhi	r2,r20,256
  80bd3c:	10000426 	beq	r2,zero,80bd50 <__divdf3+0x2f8>
  80bd40:	00bfc034 	movhi	r2,65280
  80bd44:	10bfffc4 	addi	r2,r2,-1
  80bd48:	a0a8703a 	and	r20,r20,r2
  80bd4c:	9c410004 	addi	r17,r19,1024
  80bd50:	8881ffc8 	cmpgei	r2,r17,2047
  80bd54:	103fa21e 	bne	r2,zero,80bbe0 <__divdf3+0x188>
  80bd58:	a008977a 	slli	r4,r20,29
  80bd5c:	a00a927a 	slli	r5,r20,9
  80bd60:	88c1ffcc 	andi	r3,r17,2047
  80bd64:	21a4b03a 	or	r18,r4,r6
  80bd68:	280ad33a 	srli	r5,r5,12
  80bd6c:	003f8b06 	br	80bb9c <__divdf3+0x144>
  80bd70:	01400434 	movhi	r5,16
  80bd74:	002b883a 	mov	r21,zero
  80bd78:	297fffc4 	addi	r5,r5,-1
  80bd7c:	04bfffc4 	movi	r18,-1
  80bd80:	00c1ffc4 	movi	r3,2047
  80bd84:	003f8506 	br	80bb9c <__divdf3+0x144>
  80bd88:	a080022c 	andhi	r2,r20,8
  80bd8c:	10000926 	beq	r2,zero,80bdb4 <__divdf3+0x35c>
  80bd90:	8880022c 	andhi	r2,r17,8
  80bd94:	1000071e 	bne	r2,zero,80bdb4 <__divdf3+0x35c>
  80bd98:	00800434 	movhi	r2,16
  80bd9c:	89400234 	orhi	r5,r17,8
  80bda0:	10bfffc4 	addi	r2,r2,-1
  80bda4:	288a703a 	and	r5,r5,r2
  80bda8:	402b883a 	mov	r21,r8
  80bdac:	4825883a 	mov	r18,r9
  80bdb0:	003ff306 	br	80bd80 <__divdf3+0x328>
  80bdb4:	00800434 	movhi	r2,16
  80bdb8:	a1400234 	orhi	r5,r20,8
  80bdbc:	10bfffc4 	addi	r2,r2,-1
  80bdc0:	288a703a 	and	r5,r5,r2
  80bdc4:	b02b883a 	mov	r21,r22
  80bdc8:	003fed06 	br	80bd80 <__divdf3+0x328>
  80bdcc:	8d00c836 	bltu	r17,r20,80c0f0 <__divdf3+0x698>
  80bdd0:	8d00c626 	beq	r17,r20,80c0ec <__divdf3+0x694>
  80bdd4:	9cffffc4 	addi	r19,r19,-1
  80bdd8:	0021883a 	mov	r16,zero
  80bddc:	8806923a 	slli	r3,r17,8
  80bde0:	480cd63a 	srli	r6,r9,24
  80bde4:	4804923a 	slli	r2,r9,8
  80bde8:	1838d43a 	srli	fp,r3,16
  80bdec:	a009883a 	mov	r4,r20
  80bdf0:	30ecb03a 	or	r22,r6,r3
  80bdf4:	e00b883a 	mov	r5,fp
  80bdf8:	d8800015 	stw	r2,0(sp)
  80bdfc:	080b0a80 	call	80b0a8 <__udivsi3>
  80be00:	a009883a 	mov	r4,r20
  80be04:	e00b883a 	mov	r5,fp
  80be08:	d8800115 	stw	r2,4(sp)
  80be0c:	080b10c0 	call	80b10c <__umodsi3>
  80be10:	d8c00117 	ldw	r3,4(sp)
  80be14:	1004943a 	slli	r2,r2,16
  80be18:	9008d43a 	srli	r4,r18,16
  80be1c:	b5ffffcc 	andi	r23,r22,65535
  80be20:	b8e3383a 	mul	r17,r23,r3
  80be24:	2088b03a 	or	r4,r4,r2
  80be28:	2440042e 	bgeu	r4,r17,80be3c <__divdf3+0x3e4>
  80be2c:	2589883a 	add	r4,r4,r22
  80be30:	18bfffc4 	addi	r2,r3,-1
  80be34:	2580d32e 	bgeu	r4,r22,80c184 <__divdf3+0x72c>
  80be38:	1007883a 	mov	r3,r2
  80be3c:	2463c83a 	sub	r17,r4,r17
  80be40:	e00b883a 	mov	r5,fp
  80be44:	8809883a 	mov	r4,r17
  80be48:	d8c00115 	stw	r3,4(sp)
  80be4c:	080b0a80 	call	80b0a8 <__udivsi3>
  80be50:	8809883a 	mov	r4,r17
  80be54:	e00b883a 	mov	r5,fp
  80be58:	1029883a 	mov	r20,r2
  80be5c:	080b10c0 	call	80b10c <__umodsi3>
  80be60:	1008943a 	slli	r4,r2,16
  80be64:	bd13383a 	mul	r9,r23,r20
  80be68:	94bfffcc 	andi	r18,r18,65535
  80be6c:	9108b03a 	or	r4,r18,r4
  80be70:	d8c00117 	ldw	r3,4(sp)
  80be74:	2240042e 	bgeu	r4,r9,80be88 <__divdf3+0x430>
  80be78:	2589883a 	add	r4,r4,r22
  80be7c:	a0bfffc4 	addi	r2,r20,-1
  80be80:	2580bc2e 	bgeu	r4,r22,80c174 <__divdf3+0x71c>
  80be84:	1029883a 	mov	r20,r2
  80be88:	180a943a 	slli	r5,r3,16
  80be8c:	d8800017 	ldw	r2,0(sp)
  80be90:	2249c83a 	sub	r4,r4,r9
  80be94:	2d28b03a 	or	r20,r5,r20
  80be98:	100ed43a 	srli	r7,r2,16
  80be9c:	123fffcc 	andi	r8,r2,65535
  80bea0:	a00ad43a 	srli	r5,r20,16
  80bea4:	a0bfffcc 	andi	r2,r20,65535
  80bea8:	1225383a 	mul	r18,r2,r8
  80beac:	2a15383a 	mul	r10,r5,r8
  80beb0:	3887383a 	mul	r3,r7,r2
  80beb4:	9004d43a 	srli	r2,r18,16
  80beb8:	29cb383a 	mul	r5,r5,r7
  80bebc:	1a87883a 	add	r3,r3,r10
  80bec0:	10c5883a 	add	r2,r2,r3
  80bec4:	1280022e 	bgeu	r2,r10,80bed0 <__divdf3+0x478>
  80bec8:	00c00074 	movhi	r3,1
  80becc:	28cb883a 	add	r5,r5,r3
  80bed0:	1006d43a 	srli	r3,r2,16
  80bed4:	1004943a 	slli	r2,r2,16
  80bed8:	94bfffcc 	andi	r18,r18,65535
  80bedc:	1947883a 	add	r3,r3,r5
  80bee0:	14a5883a 	add	r18,r2,r18
  80bee4:	20c07636 	bltu	r4,r3,80c0c0 <__divdf3+0x668>
  80bee8:	20c07426 	beq	r4,r3,80c0bc <__divdf3+0x664>
  80beec:	84a5c83a 	sub	r18,r16,r18
  80bef0:	20c9c83a 	sub	r4,r4,r3
  80bef4:	84a1803a 	cmpltu	r16,r16,r18
  80bef8:	2421c83a 	sub	r16,r4,r16
  80befc:	9c40ffc4 	addi	r17,r19,1023
  80bf00:	b400ba26 	beq	r22,r16,80c1ec <__divdf3+0x794>
  80bf04:	8009883a 	mov	r4,r16
  80bf08:	e00b883a 	mov	r5,fp
  80bf0c:	da000315 	stw	r8,12(sp)
  80bf10:	d9c00215 	stw	r7,8(sp)
  80bf14:	080b0a80 	call	80b0a8 <__udivsi3>
  80bf18:	8009883a 	mov	r4,r16
  80bf1c:	e00b883a 	mov	r5,fp
  80bf20:	d8800115 	stw	r2,4(sp)
  80bf24:	080b10c0 	call	80b10c <__umodsi3>
  80bf28:	da400117 	ldw	r9,4(sp)
  80bf2c:	1004943a 	slli	r2,r2,16
  80bf30:	9008d43a 	srli	r4,r18,16
  80bf34:	ba61383a 	mul	r16,r23,r9
  80bf38:	d9c00217 	ldw	r7,8(sp)
  80bf3c:	2088b03a 	or	r4,r4,r2
  80bf40:	da000317 	ldw	r8,12(sp)
  80bf44:	2400062e 	bgeu	r4,r16,80bf60 <__divdf3+0x508>
  80bf48:	2589883a 	add	r4,r4,r22
  80bf4c:	48bfffc4 	addi	r2,r9,-1
  80bf50:	2580b536 	bltu	r4,r22,80c228 <__divdf3+0x7d0>
  80bf54:	2400b42e 	bgeu	r4,r16,80c228 <__divdf3+0x7d0>
  80bf58:	4a7fff84 	addi	r9,r9,-2
  80bf5c:	2589883a 	add	r4,r4,r22
  80bf60:	2421c83a 	sub	r16,r4,r16
  80bf64:	8009883a 	mov	r4,r16
  80bf68:	e00b883a 	mov	r5,fp
  80bf6c:	da000315 	stw	r8,12(sp)
  80bf70:	da400215 	stw	r9,8(sp)
  80bf74:	d9c00115 	stw	r7,4(sp)
  80bf78:	080b0a80 	call	80b0a8 <__udivsi3>
  80bf7c:	8009883a 	mov	r4,r16
  80bf80:	e00b883a 	mov	r5,fp
  80bf84:	1021883a 	mov	r16,r2
  80bf88:	080b10c0 	call	80b10c <__umodsi3>
  80bf8c:	1004943a 	slli	r2,r2,16
  80bf90:	bc2f383a 	mul	r23,r23,r16
  80bf94:	90ffffcc 	andi	r3,r18,65535
  80bf98:	1886b03a 	or	r3,r3,r2
  80bf9c:	d9c00117 	ldw	r7,4(sp)
  80bfa0:	da400217 	ldw	r9,8(sp)
  80bfa4:	da000317 	ldw	r8,12(sp)
  80bfa8:	1dc0062e 	bgeu	r3,r23,80bfc4 <__divdf3+0x56c>
  80bfac:	1d87883a 	add	r3,r3,r22
  80bfb0:	80bfffc4 	addi	r2,r16,-1
  80bfb4:	1d809a36 	bltu	r3,r22,80c220 <__divdf3+0x7c8>
  80bfb8:	1dc0992e 	bgeu	r3,r23,80c220 <__divdf3+0x7c8>
  80bfbc:	843fff84 	addi	r16,r16,-2
  80bfc0:	1d87883a 	add	r3,r3,r22
  80bfc4:	4808943a 	slli	r4,r9,16
  80bfc8:	1defc83a 	sub	r23,r3,r23
  80bfcc:	2424b03a 	or	r18,r4,r16
  80bfd0:	900ad43a 	srli	r5,r18,16
  80bfd4:	90bfffcc 	andi	r2,r18,65535
  80bfd8:	4087383a 	mul	r3,r8,r2
  80bfdc:	3885383a 	mul	r2,r7,r2
  80bfe0:	2a11383a 	mul	r8,r5,r8
  80bfe4:	1808d43a 	srli	r4,r3,16
  80bfe8:	394f383a 	mul	r7,r7,r5
  80bfec:	1205883a 	add	r2,r2,r8
  80bff0:	2089883a 	add	r4,r4,r2
  80bff4:	2200022e 	bgeu	r4,r8,80c000 <__divdf3+0x5a8>
  80bff8:	00800074 	movhi	r2,1
  80bffc:	388f883a 	add	r7,r7,r2
  80c000:	2004d43a 	srli	r2,r4,16
  80c004:	2008943a 	slli	r4,r4,16
  80c008:	18ffffcc 	andi	r3,r3,65535
  80c00c:	11cf883a 	add	r7,r2,r7
  80c010:	20c9883a 	add	r4,r4,r3
  80c014:	b9c00436 	bltu	r23,r7,80c028 <__divdf3+0x5d0>
  80c018:	b9c00226 	beq	r23,r7,80c024 <__divdf3+0x5cc>
  80c01c:	94800054 	ori	r18,r18,1
  80c020:	003f4106 	br	80bd28 <__divdf3+0x2d0>
  80c024:	203f4026 	beq	r4,zero,80bd28 <__divdf3+0x2d0>
  80c028:	b5ef883a 	add	r23,r22,r23
  80c02c:	90bfffc4 	addi	r2,r18,-1
  80c030:	bd806936 	bltu	r23,r22,80c1d8 <__divdf3+0x780>
  80c034:	b9c08636 	bltu	r23,r7,80c250 <__divdf3+0x7f8>
  80c038:	b9c09a26 	beq	r23,r7,80c2a4 <__divdf3+0x84c>
  80c03c:	1025883a 	mov	r18,r2
  80c040:	003ff606 	br	80c01c <__divdf3+0x5c4>
  80c044:	04bfffc4 	movi	r18,-1
  80c048:	01400044 	movi	r5,1
  80c04c:	2c4bc83a 	sub	r5,r5,r17
  80c050:	28800e48 	cmpgei	r2,r5,57
  80c054:	103ece1e 	bne	r2,zero,80bb90 <__divdf3+0x138>
  80c058:	28800808 	cmpgei	r2,r5,32
  80c05c:	10004d1e 	bne	r2,zero,80c194 <__divdf3+0x73c>
  80c060:	98810784 	addi	r2,r19,1054
  80c064:	a086983a 	sll	r3,r20,r2
  80c068:	9148d83a 	srl	r4,r18,r5
  80c06c:	9084983a 	sll	r2,r18,r2
  80c070:	a14ad83a 	srl	r5,r20,r5
  80c074:	1924b03a 	or	r18,r3,r4
  80c078:	1004c03a 	cmpne	r2,r2,zero
  80c07c:	90a4b03a 	or	r18,r18,r2
  80c080:	908001cc 	andi	r2,r18,7
  80c084:	10000726 	beq	r2,zero,80c0a4 <__divdf3+0x64c>
  80c088:	908003cc 	andi	r2,r18,15
  80c08c:	10800120 	cmpeqi	r2,r2,4
  80c090:	1000041e 	bne	r2,zero,80c0a4 <__divdf3+0x64c>
  80c094:	90800104 	addi	r2,r18,4
  80c098:	14a5803a 	cmpltu	r18,r2,r18
  80c09c:	2c8b883a 	add	r5,r5,r18
  80c0a0:	1025883a 	mov	r18,r2
  80c0a4:	2880202c 	andhi	r2,r5,128
  80c0a8:	10007526 	beq	r2,zero,80c280 <__divdf3+0x828>
  80c0ac:	00c00044 	movi	r3,1
  80c0b0:	000b883a 	mov	r5,zero
  80c0b4:	0025883a 	mov	r18,zero
  80c0b8:	003eb806 	br	80bb9c <__divdf3+0x144>
  80c0bc:	84bf8b2e 	bgeu	r16,r18,80beec <__divdf3+0x494>
  80c0c0:	d8800017 	ldw	r2,0(sp)
  80c0c4:	80a1883a 	add	r16,r16,r2
  80c0c8:	8085803a 	cmpltu	r2,r16,r2
  80c0cc:	1585883a 	add	r2,r2,r22
  80c0d0:	2089883a 	add	r4,r4,r2
  80c0d4:	a0bfffc4 	addi	r2,r20,-1
  80c0d8:	b100222e 	bgeu	r22,r4,80c164 <__divdf3+0x70c>
  80c0dc:	20c05536 	bltu	r4,r3,80c234 <__divdf3+0x7dc>
  80c0e0:	19005326 	beq	r3,r4,80c230 <__divdf3+0x7d8>
  80c0e4:	1029883a 	mov	r20,r2
  80c0e8:	003f8006 	br	80beec <__divdf3+0x494>
  80c0ec:	927f3936 	bltu	r18,r9,80bdd4 <__divdf3+0x37c>
  80c0f0:	a00897fa 	slli	r4,r20,31
  80c0f4:	9004d07a 	srli	r2,r18,1
  80c0f8:	902097fa 	slli	r16,r18,31
  80c0fc:	a028d07a 	srli	r20,r20,1
  80c100:	20a4b03a 	or	r18,r4,r2
  80c104:	003f3506 	br	80bddc <__divdf3+0x384>
  80c108:	b809883a 	mov	r4,r23
  80c10c:	080088c0 	call	80088c <__clzsi2>
  80c110:	11400544 	addi	r5,r2,21
  80c114:	29000748 	cmpgei	r4,r5,29
  80c118:	1007883a 	mov	r3,r2
  80c11c:	da000017 	ldw	r8,0(sp)
  80c120:	10800804 	addi	r2,r2,32
  80c124:	203ebf26 	beq	r4,zero,80bc24 <__divdf3+0x1cc>
  80c128:	18fffe04 	addi	r3,r3,-8
  80c12c:	b8e2983a 	sll	r17,r23,r3
  80c130:	0013883a 	mov	r9,zero
  80c134:	003ec206 	br	80bc40 <__divdf3+0x1e8>
  80c138:	080088c0 	call	80088c <__clzsi2>
  80c13c:	10c00544 	addi	r3,r2,21
  80c140:	19000748 	cmpgei	r4,r3,29
  80c144:	100b883a 	mov	r5,r2
  80c148:	d9c00017 	ldw	r7,0(sp)
  80c14c:	10800804 	addi	r2,r2,32
  80c150:	203ec826 	beq	r4,zero,80bc74 <__divdf3+0x21c>
  80c154:	297ffe04 	addi	r5,r5,-8
  80c158:	9168983a 	sll	r20,r18,r5
  80c15c:	0025883a 	mov	r18,zero
  80c160:	003ecb06 	br	80bc90 <__divdf3+0x238>
  80c164:	b13fdf1e 	bne	r22,r4,80c0e4 <__divdf3+0x68c>
  80c168:	d9400017 	ldw	r5,0(sp)
  80c16c:	817fdd36 	bltu	r16,r5,80c0e4 <__divdf3+0x68c>
  80c170:	003fda06 	br	80c0dc <__divdf3+0x684>
  80c174:	227f432e 	bgeu	r4,r9,80be84 <__divdf3+0x42c>
  80c178:	a53fff84 	addi	r20,r20,-2
  80c17c:	2589883a 	add	r4,r4,r22
  80c180:	003f4106 	br	80be88 <__divdf3+0x430>
  80c184:	247f2c2e 	bgeu	r4,r17,80be38 <__divdf3+0x3e0>
  80c188:	18ffff84 	addi	r3,r3,-2
  80c18c:	2589883a 	add	r4,r4,r22
  80c190:	003f2a06 	br	80be3c <__divdf3+0x3e4>
  80c194:	00fff844 	movi	r3,-31
  80c198:	1c47c83a 	sub	r3,r3,r17
  80c19c:	29400820 	cmpeqi	r5,r5,32
  80c1a0:	a0c6d83a 	srl	r3,r20,r3
  80c1a4:	2800031e 	bne	r5,zero,80c1b4 <__divdf3+0x75c>
  80c1a8:	99410f84 	addi	r5,r19,1086
  80c1ac:	a14a983a 	sll	r5,r20,r5
  80c1b0:	9164b03a 	or	r18,r18,r5
  80c1b4:	9024c03a 	cmpne	r18,r18,zero
  80c1b8:	90e4b03a 	or	r18,r18,r3
  80c1bc:	910001cc 	andi	r4,r18,7
  80c1c0:	20002b1e 	bne	r4,zero,80c270 <__divdf3+0x818>
  80c1c4:	000b883a 	mov	r5,zero
  80c1c8:	9024d0fa 	srli	r18,r18,3
  80c1cc:	0007883a 	mov	r3,zero
  80c1d0:	9124b03a 	or	r18,r18,r4
  80c1d4:	003e7106 	br	80bb9c <__divdf3+0x144>
  80c1d8:	1025883a 	mov	r18,r2
  80c1dc:	b9ff8f1e 	bne	r23,r7,80c01c <__divdf3+0x5c4>
  80c1e0:	d8800017 	ldw	r2,0(sp)
  80c1e4:	20bf8d1e 	bne	r4,r2,80c01c <__divdf3+0x5c4>
  80c1e8:	003ecf06 	br	80bd28 <__divdf3+0x2d0>
  80c1ec:	047f950e 	bge	zero,r17,80c044 <__divdf3+0x5ec>
  80c1f0:	000d883a 	mov	r6,zero
  80c1f4:	01000044 	movi	r4,1
  80c1f8:	a129883a 	add	r20,r20,r4
  80c1fc:	003ece06 	br	80bd38 <__divdf3+0x2e0>
  80c200:	908003cc 	andi	r2,r18,15
  80c204:	10800118 	cmpnei	r2,r2,4
  80c208:	103eca26 	beq	r2,zero,80bd34 <__divdf3+0x2dc>
  80c20c:	91800104 	addi	r6,r18,4
  80c210:	013ffec4 	movi	r4,-5
  80c214:	300cd0fa 	srli	r6,r6,3
  80c218:	2489803a 	cmpltu	r4,r4,r18
  80c21c:	003ff606 	br	80c1f8 <__divdf3+0x7a0>
  80c220:	1021883a 	mov	r16,r2
  80c224:	003f6706 	br	80bfc4 <__divdf3+0x56c>
  80c228:	1013883a 	mov	r9,r2
  80c22c:	003f4c06 	br	80bf60 <__divdf3+0x508>
  80c230:	84bfac2e 	bgeu	r16,r18,80c0e4 <__divdf3+0x68c>
  80c234:	d8800017 	ldw	r2,0(sp)
  80c238:	a53fff84 	addi	r20,r20,-2
  80c23c:	80a1883a 	add	r16,r16,r2
  80c240:	8085803a 	cmpltu	r2,r16,r2
  80c244:	1585883a 	add	r2,r2,r22
  80c248:	2089883a 	add	r4,r4,r2
  80c24c:	003f2706 	br	80beec <__divdf3+0x494>
  80c250:	d8c00017 	ldw	r3,0(sp)
  80c254:	94bfff84 	addi	r18,r18,-2
  80c258:	18c5883a 	add	r2,r3,r3
  80c25c:	10c7803a 	cmpltu	r3,r2,r3
  80c260:	1d8d883a 	add	r6,r3,r22
  80c264:	b9af883a 	add	r23,r23,r6
  80c268:	d8800015 	stw	r2,0(sp)
  80c26c:	003fdb06 	br	80c1dc <__divdf3+0x784>
  80c270:	908003cc 	andi	r2,r18,15
  80c274:	10800118 	cmpnei	r2,r2,4
  80c278:	000b883a 	mov	r5,zero
  80c27c:	103f851e 	bne	r2,zero,80c094 <__divdf3+0x63c>
  80c280:	2804927a 	slli	r2,r5,9
  80c284:	2808977a 	slli	r4,r5,29
  80c288:	100ad33a 	srli	r5,r2,12
  80c28c:	003fce06 	br	80c1c8 <__divdf3+0x770>
  80c290:	00800434 	movhi	r2,16
  80c294:	a1400234 	orhi	r5,r20,8
  80c298:	10bfffc4 	addi	r2,r2,-1
  80c29c:	288a703a 	and	r5,r5,r2
  80c2a0:	003eb706 	br	80bd80 <__divdf3+0x328>
  80c2a4:	d8c00017 	ldw	r3,0(sp)
  80c2a8:	193fe936 	bltu	r3,r4,80c250 <__divdf3+0x7f8>
  80c2ac:	1025883a 	mov	r18,r2
  80c2b0:	003fcb06 	br	80c1e0 <__divdf3+0x788>

0080c2b4 <__eqdf2>:
  80c2b4:	2810d53a 	srli	r8,r5,20
  80c2b8:	3806d53a 	srli	r3,r7,20
  80c2bc:	00800434 	movhi	r2,16
  80c2c0:	4201ffcc 	andi	r8,r8,2047
  80c2c4:	10bfffc4 	addi	r2,r2,-1
  80c2c8:	4241ffd8 	cmpnei	r9,r8,2047
  80c2cc:	2814d7fa 	srli	r10,r5,31
  80c2d0:	3816d7fa 	srli	r11,r7,31
  80c2d4:	288a703a 	and	r5,r5,r2
  80c2d8:	388e703a 	and	r7,r7,r2
  80c2dc:	1881ffcc 	andi	r2,r3,2047
  80c2e0:	48000626 	beq	r9,zero,80c2fc <__eqdf2+0x48>
  80c2e4:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c2e8:	1800021e 	bne	r3,zero,80c2f4 <__eqdf2+0x40>
  80c2ec:	4080011e 	bne	r8,r2,80c2f4 <__eqdf2+0x40>
  80c2f0:	29c00826 	beq	r5,r7,80c314 <__eqdf2+0x60>
  80c2f4:	00800044 	movi	r2,1
  80c2f8:	f800283a 	ret
  80c2fc:	2906b03a 	or	r3,r5,r4
  80c300:	183ffc1e 	bne	r3,zero,80c2f4 <__eqdf2+0x40>
  80c304:	1081ffd8 	cmpnei	r2,r2,2047
  80c308:	103ffa1e 	bne	r2,zero,80c2f4 <__eqdf2+0x40>
  80c30c:	398eb03a 	or	r7,r7,r6
  80c310:	383ff81e 	bne	r7,zero,80c2f4 <__eqdf2+0x40>
  80c314:	21bff71e 	bne	r4,r6,80c2f4 <__eqdf2+0x40>
  80c318:	52c00426 	beq	r10,r11,80c32c <__eqdf2+0x78>
  80c31c:	403ff51e 	bne	r8,zero,80c2f4 <__eqdf2+0x40>
  80c320:	290ab03a 	or	r5,r5,r4
  80c324:	2804c03a 	cmpne	r2,r5,zero
  80c328:	f800283a 	ret
  80c32c:	0005883a 	mov	r2,zero
  80c330:	f800283a 	ret

0080c334 <__gedf2>:
  80c334:	2810d53a 	srli	r8,r5,20
  80c338:	3812d53a 	srli	r9,r7,20
  80c33c:	00c00434 	movhi	r3,16
  80c340:	4201ffcc 	andi	r8,r8,2047
  80c344:	18ffffc4 	addi	r3,r3,-1
  80c348:	4281ffd8 	cmpnei	r10,r8,2047
  80c34c:	2816d7fa 	srli	r11,r5,31
  80c350:	3804d7fa 	srli	r2,r7,31
  80c354:	28ca703a 	and	r5,r5,r3
  80c358:	38ce703a 	and	r7,r7,r3
  80c35c:	48c1ffcc 	andi	r3,r9,2047
  80c360:	50000a26 	beq	r10,zero,80c38c <__gedf2+0x58>
  80c364:	1a41ffd8 	cmpnei	r9,r3,2047
  80c368:	48000c26 	beq	r9,zero,80c39c <__gedf2+0x68>
  80c36c:	4000171e 	bne	r8,zero,80c3cc <__gedf2+0x98>
  80c370:	2912b03a 	or	r9,r5,r4
  80c374:	1800121e 	bne	r3,zero,80c3c0 <__gedf2+0x8c>
  80c378:	3994b03a 	or	r10,r7,r6
  80c37c:	5000101e 	bne	r10,zero,80c3c0 <__gedf2+0x8c>
  80c380:	48000a1e 	bne	r9,zero,80c3ac <__gedf2+0x78>
  80c384:	0005883a 	mov	r2,zero
  80c388:	f800283a 	ret
  80c38c:	2912b03a 	or	r9,r5,r4
  80c390:	48001d1e 	bne	r9,zero,80c408 <__gedf2+0xd4>
  80c394:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c398:	48000c26 	beq	r9,zero,80c3cc <__gedf2+0x98>
  80c39c:	3992b03a 	or	r9,r7,r6
  80c3a0:	4800191e 	bne	r9,zero,80c408 <__gedf2+0xd4>
  80c3a4:	40000526 	beq	r8,zero,80c3bc <__gedf2+0x88>
  80c3a8:	58800c26 	beq	r11,r2,80c3dc <__gedf2+0xa8>
  80c3ac:	00800044 	movi	r2,1
  80c3b0:	58000526 	beq	r11,zero,80c3c8 <__gedf2+0x94>
  80c3b4:	00bfffc4 	movi	r2,-1
  80c3b8:	f800283a 	ret
  80c3bc:	2912b03a 	or	r9,r5,r4
  80c3c0:	483ff91e 	bne	r9,zero,80c3a8 <__gedf2+0x74>
  80c3c4:	103ffb26 	beq	r2,zero,80c3b4 <__gedf2+0x80>
  80c3c8:	f800283a 	ret
  80c3cc:	183ff61e 	bne	r3,zero,80c3a8 <__gedf2+0x74>
  80c3d0:	3992b03a 	or	r9,r7,r6
  80c3d4:	483ff41e 	bne	r9,zero,80c3a8 <__gedf2+0x74>
  80c3d8:	003ff406 	br	80c3ac <__gedf2+0x78>
  80c3dc:	1a000716 	blt	r3,r8,80c3fc <__gedf2+0xc8>
  80c3e0:	40fff816 	blt	r8,r3,80c3c4 <__gedf2+0x90>
  80c3e4:	397ff136 	bltu	r7,r5,80c3ac <__gedf2+0x78>
  80c3e8:	29c00926 	beq	r5,r7,80c410 <__gedf2+0xdc>
  80c3ec:	29ffe52e 	bgeu	r5,r7,80c384 <__gedf2+0x50>
  80c3f0:	583ff026 	beq	r11,zero,80c3b4 <__gedf2+0x80>
  80c3f4:	5805883a 	mov	r2,r11
  80c3f8:	f800283a 	ret
  80c3fc:	103fed1e 	bne	r2,zero,80c3b4 <__gedf2+0x80>
  80c400:	00800044 	movi	r2,1
  80c404:	f800283a 	ret
  80c408:	00bfff84 	movi	r2,-2
  80c40c:	f800283a 	ret
  80c410:	313fe636 	bltu	r6,r4,80c3ac <__gedf2+0x78>
  80c414:	21bfdb2e 	bgeu	r4,r6,80c384 <__gedf2+0x50>
  80c418:	003ff506 	br	80c3f0 <__gedf2+0xbc>

0080c41c <__ledf2>:
  80c41c:	2810d53a 	srli	r8,r5,20
  80c420:	3812d53a 	srli	r9,r7,20
  80c424:	00c00434 	movhi	r3,16
  80c428:	4201ffcc 	andi	r8,r8,2047
  80c42c:	18ffffc4 	addi	r3,r3,-1
  80c430:	4281ffd8 	cmpnei	r10,r8,2047
  80c434:	2816d7fa 	srli	r11,r5,31
  80c438:	3804d7fa 	srli	r2,r7,31
  80c43c:	28ca703a 	and	r5,r5,r3
  80c440:	38ce703a 	and	r7,r7,r3
  80c444:	48c1ffcc 	andi	r3,r9,2047
  80c448:	50000a26 	beq	r10,zero,80c474 <__ledf2+0x58>
  80c44c:	1a41ffd8 	cmpnei	r9,r3,2047
  80c450:	48000c26 	beq	r9,zero,80c484 <__ledf2+0x68>
  80c454:	4000191e 	bne	r8,zero,80c4bc <__ledf2+0xa0>
  80c458:	2912b03a 	or	r9,r5,r4
  80c45c:	18000d1e 	bne	r3,zero,80c494 <__ledf2+0x78>
  80c460:	3994b03a 	or	r10,r7,r6
  80c464:	50000b1e 	bne	r10,zero,80c494 <__ledf2+0x78>
  80c468:	48000c1e 	bne	r9,zero,80c49c <__ledf2+0x80>
  80c46c:	0005883a 	mov	r2,zero
  80c470:	f800283a 	ret
  80c474:	2912b03a 	or	r9,r5,r4
  80c478:	48000c1e 	bne	r9,zero,80c4ac <__ledf2+0x90>
  80c47c:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c480:	48000e26 	beq	r9,zero,80c4bc <__ledf2+0xa0>
  80c484:	3992b03a 	or	r9,r7,r6
  80c488:	4800081e 	bne	r9,zero,80c4ac <__ledf2+0x90>
  80c48c:	4000021e 	bne	r8,zero,80c498 <__ledf2+0x7c>
  80c490:	2912b03a 	or	r9,r5,r4
  80c494:	48000726 	beq	r9,zero,80c4b4 <__ledf2+0x98>
  80c498:	58800c26 	beq	r11,r2,80c4cc <__ledf2+0xb0>
  80c49c:	00800044 	movi	r2,1
  80c4a0:	58000526 	beq	r11,zero,80c4b8 <__ledf2+0x9c>
  80c4a4:	00bfffc4 	movi	r2,-1
  80c4a8:	f800283a 	ret
  80c4ac:	00800084 	movi	r2,2
  80c4b0:	f800283a 	ret
  80c4b4:	103ffb26 	beq	r2,zero,80c4a4 <__ledf2+0x88>
  80c4b8:	f800283a 	ret
  80c4bc:	183ff61e 	bne	r3,zero,80c498 <__ledf2+0x7c>
  80c4c0:	3992b03a 	or	r9,r7,r6
  80c4c4:	483ff41e 	bne	r9,zero,80c498 <__ledf2+0x7c>
  80c4c8:	003ff406 	br	80c49c <__ledf2+0x80>
  80c4cc:	1a00030e 	bge	r3,r8,80c4dc <__ledf2+0xc0>
  80c4d0:	103ff41e 	bne	r2,zero,80c4a4 <__ledf2+0x88>
  80c4d4:	00800044 	movi	r2,1
  80c4d8:	f800283a 	ret
  80c4dc:	40fff516 	blt	r8,r3,80c4b4 <__ledf2+0x98>
  80c4e0:	397fee36 	bltu	r7,r5,80c49c <__ledf2+0x80>
  80c4e4:	29c00426 	beq	r5,r7,80c4f8 <__ledf2+0xdc>
  80c4e8:	29ffe02e 	bgeu	r5,r7,80c46c <__ledf2+0x50>
  80c4ec:	583fed26 	beq	r11,zero,80c4a4 <__ledf2+0x88>
  80c4f0:	5805883a 	mov	r2,r11
  80c4f4:	f800283a 	ret
  80c4f8:	313fe836 	bltu	r6,r4,80c49c <__ledf2+0x80>
  80c4fc:	21bfdb2e 	bgeu	r4,r6,80c46c <__ledf2+0x50>
  80c500:	003ffa06 	br	80c4ec <__ledf2+0xd0>

0080c504 <__muldf3>:
  80c504:	2804d53a 	srli	r2,r5,20
  80c508:	defff504 	addi	sp,sp,-44
  80c50c:	02000434 	movhi	r8,16
  80c510:	df000915 	stw	fp,36(sp)
  80c514:	dd000515 	stw	r20,20(sp)
  80c518:	dcc00415 	stw	r19,16(sp)
  80c51c:	dc000115 	stw	r16,4(sp)
  80c520:	423fffc4 	addi	r8,r8,-1
  80c524:	dfc00a15 	stw	ra,40(sp)
  80c528:	ddc00815 	stw	r23,32(sp)
  80c52c:	dd800715 	stw	r22,28(sp)
  80c530:	dd400615 	stw	r21,24(sp)
  80c534:	dc800315 	stw	r18,12(sp)
  80c538:	dc400215 	stw	r17,8(sp)
  80c53c:	1081ffcc 	andi	r2,r2,2047
  80c540:	2828d7fa 	srli	r20,r5,31
  80c544:	2027883a 	mov	r19,r4
  80c548:	3039883a 	mov	fp,r6
  80c54c:	2a20703a 	and	r16,r5,r8
  80c550:	1000e726 	beq	r2,zero,80c8f0 <__muldf3+0x3ec>
  80c554:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c558:	1800f91e 	bne	r3,zero,80c940 <__muldf3+0x43c>
  80c55c:	800a90fa 	slli	r5,r16,3
  80c560:	2020d77a 	srli	r16,r4,29
  80c564:	202490fa 	slli	r18,r4,3
  80c568:	14ff0044 	addi	r19,r2,-1023
  80c56c:	8160b03a 	or	r16,r16,r5
  80c570:	84002034 	orhi	r16,r16,128
  80c574:	002b883a 	mov	r21,zero
  80c578:	002d883a 	mov	r22,zero
  80c57c:	3804d53a 	srli	r2,r7,20
  80c580:	00c00434 	movhi	r3,16
  80c584:	18ffffc4 	addi	r3,r3,-1
  80c588:	1081ffcc 	andi	r2,r2,2047
  80c58c:	382ed7fa 	srli	r23,r7,31
  80c590:	38e2703a 	and	r17,r7,r3
  80c594:	1000c526 	beq	r2,zero,80c8ac <__muldf3+0x3a8>
  80c598:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c59c:	1800ef1e 	bne	r3,zero,80c95c <__muldf3+0x458>
  80c5a0:	880690fa 	slli	r3,r17,3
  80c5a4:	e022d77a 	srli	r17,fp,29
  80c5a8:	e00a90fa 	slli	r5,fp,3
  80c5ac:	10bf0044 	addi	r2,r2,-1023
  80c5b0:	88e2b03a 	or	r17,r17,r3
  80c5b4:	8c402034 	orhi	r17,r17,128
  80c5b8:	98a7883a 	add	r19,r19,r2
  80c5bc:	0007883a 	mov	r3,zero
  80c5c0:	a8800428 	cmpgeui	r2,r21,16
  80c5c4:	a5ccf03a 	xor	r6,r20,r23
  80c5c8:	9a000044 	addi	r8,r19,1
  80c5cc:	1000371e 	bne	r2,zero,80c6ac <__muldf3+0x1a8>
  80c5d0:	a80490ba 	slli	r2,r21,2
  80c5d4:	01002074 	movhi	r4,129
  80c5d8:	1109883a 	add	r4,r2,r4
  80c5dc:	20b17917 	ldw	r2,-14876(r4)
  80c5e0:	1000683a 	jmp	r2
  80c5e4:	0080c6ac 	andhi	r2,zero,794
  80c5e8:	0080c628 	cmpgeui	r2,zero,792
  80c5ec:	0080c628 	cmpgeui	r2,zero,792
  80c5f0:	0080c624 	muli	r2,zero,792
  80c5f4:	0080c634 	movhi	r2,792
  80c5f8:	0080c634 	movhi	r2,792
  80c5fc:	0080c9d0 	cmplti	r2,zero,807
  80c600:	0080c624 	muli	r2,zero,792
  80c604:	0080c634 	movhi	r2,792
  80c608:	0080c9d0 	cmplti	r2,zero,807
  80c60c:	0080c634 	movhi	r2,792
  80c610:	0080c624 	muli	r2,zero,792
  80c614:	0080c978 	rdprs	r2,zero,805
  80c618:	0080c978 	rdprs	r2,zero,805
  80c61c:	0080c978 	rdprs	r2,zero,805
  80c620:	0080ca5c 	xori	r2,zero,809
  80c624:	b80d883a 	mov	r6,r23
  80c628:	8821883a 	mov	r16,r17
  80c62c:	2825883a 	mov	r18,r5
  80c630:	182d883a 	mov	r22,r3
  80c634:	b08000a0 	cmpeqi	r2,r22,2
  80c638:	1000181e 	bne	r2,zero,80c69c <__muldf3+0x198>
  80c63c:	b08000e0 	cmpeqi	r2,r22,3
  80c640:	1001481e 	bne	r2,zero,80cb64 <__muldf3+0x660>
  80c644:	b0800060 	cmpeqi	r2,r22,1
  80c648:	10007e26 	beq	r2,zero,80c844 <__muldf3+0x340>
  80c64c:	0007883a 	mov	r3,zero
  80c650:	0021883a 	mov	r16,zero
  80c654:	0025883a 	mov	r18,zero
  80c658:	1806953a 	slli	r3,r3,20
  80c65c:	300c97fa 	slli	r6,r6,31
  80c660:	9005883a 	mov	r2,r18
  80c664:	1c06b03a 	or	r3,r3,r16
  80c668:	1986b03a 	or	r3,r3,r6
  80c66c:	dfc00a17 	ldw	ra,40(sp)
  80c670:	df000917 	ldw	fp,36(sp)
  80c674:	ddc00817 	ldw	r23,32(sp)
  80c678:	dd800717 	ldw	r22,28(sp)
  80c67c:	dd400617 	ldw	r21,24(sp)
  80c680:	dd000517 	ldw	r20,20(sp)
  80c684:	dcc00417 	ldw	r19,16(sp)
  80c688:	dc800317 	ldw	r18,12(sp)
  80c68c:	dc400217 	ldw	r17,8(sp)
  80c690:	dc000117 	ldw	r16,4(sp)
  80c694:	dec00b04 	addi	sp,sp,44
  80c698:	f800283a 	ret
  80c69c:	00c1ffc4 	movi	r3,2047
  80c6a0:	0021883a 	mov	r16,zero
  80c6a4:	0025883a 	mov	r18,zero
  80c6a8:	003feb06 	br	80c658 <__muldf3+0x154>
  80c6ac:	9004d43a 	srli	r2,r18,16
  80c6b0:	281ed43a 	srli	r15,r5,16
  80c6b4:	94bfffcc 	andi	r18,r18,65535
  80c6b8:	297fffcc 	andi	r5,r5,65535
  80c6bc:	2c89383a 	mul	r4,r5,r18
  80c6c0:	114f383a 	mul	r7,r2,r5
  80c6c4:	7c87383a 	mul	r3,r15,r18
  80c6c8:	2012d43a 	srli	r9,r4,16
  80c6cc:	13dd383a 	mul	r14,r2,r15
  80c6d0:	19c7883a 	add	r3,r3,r7
  80c6d4:	48d3883a 	add	r9,r9,r3
  80c6d8:	49c0022e 	bgeu	r9,r7,80c6e4 <__muldf3+0x1e0>
  80c6dc:	00c00074 	movhi	r3,1
  80c6e0:	70dd883a 	add	r14,r14,r3
  80c6e4:	881ad43a 	srli	r13,r17,16
  80c6e8:	8c7fffcc 	andi	r17,r17,65535
  80c6ec:	8c87383a 	mul	r3,r17,r18
  80c6f0:	144f383a 	mul	r7,r2,r17
  80c6f4:	6ca5383a 	mul	r18,r13,r18
  80c6f8:	1816d43a 	srli	r11,r3,16
  80c6fc:	4814943a 	slli	r10,r9,16
  80c700:	91e5883a 	add	r18,r18,r7
  80c704:	213fffcc 	andi	r4,r4,65535
  80c708:	5c97883a 	add	r11,r11,r18
  80c70c:	4818d43a 	srli	r12,r9,16
  80c710:	1345383a 	mul	r2,r2,r13
  80c714:	5115883a 	add	r10,r10,r4
  80c718:	59c0022e 	bgeu	r11,r7,80c724 <__muldf3+0x220>
  80c71c:	01000074 	movhi	r4,1
  80c720:	1105883a 	add	r2,r2,r4
  80c724:	8028d43a 	srli	r20,r16,16
  80c728:	827fffcc 	andi	r9,r16,65535
  80c72c:	2a6b383a 	mul	r21,r5,r9
  80c730:	7a49383a 	mul	r4,r15,r9
  80c734:	a14b383a 	mul	r5,r20,r5
  80c738:	580e943a 	slli	r7,r11,16
  80c73c:	a82cd43a 	srli	r22,r21,16
  80c740:	5824d43a 	srli	r18,r11,16
  80c744:	18ffffcc 	andi	r3,r3,65535
  80c748:	2149883a 	add	r4,r4,r5
  80c74c:	38cf883a 	add	r7,r7,r3
  80c750:	b109883a 	add	r4,r22,r4
  80c754:	7d1f383a 	mul	r15,r15,r20
  80c758:	9097883a 	add	r11,r18,r2
  80c75c:	61c7883a 	add	r3,r12,r7
  80c760:	2140022e 	bgeu	r4,r5,80c76c <__muldf3+0x268>
  80c764:	00800074 	movhi	r2,1
  80c768:	789f883a 	add	r15,r15,r2
  80c76c:	8a65383a 	mul	r18,r17,r9
  80c770:	6a53383a 	mul	r9,r13,r9
  80c774:	a463383a 	mul	r17,r20,r17
  80c778:	9020d43a 	srli	r16,r18,16
  80c77c:	200ad43a 	srli	r5,r4,16
  80c780:	2008943a 	slli	r4,r4,16
  80c784:	4c53883a 	add	r9,r9,r17
  80c788:	ab3fffcc 	andi	r12,r21,65535
  80c78c:	8253883a 	add	r9,r16,r9
  80c790:	6d1b383a 	mul	r13,r13,r20
  80c794:	2bdf883a 	add	r15,r5,r15
  80c798:	2309883a 	add	r4,r4,r12
  80c79c:	4c40022e 	bgeu	r9,r17,80c7a8 <__muldf3+0x2a4>
  80c7a0:	00800074 	movhi	r2,1
  80c7a4:	689b883a 	add	r13,r13,r2
  80c7a8:	4804943a 	slli	r2,r9,16
  80c7ac:	917fffcc 	andi	r5,r18,65535
  80c7b0:	1b87883a 	add	r3,r3,r14
  80c7b4:	1145883a 	add	r2,r2,r5
  80c7b8:	19cf803a 	cmpltu	r7,r3,r7
  80c7bc:	12c5883a 	add	r2,r2,r11
  80c7c0:	1907883a 	add	r3,r3,r4
  80c7c4:	11dd883a 	add	r14,r2,r7
  80c7c8:	1909803a 	cmpltu	r4,r3,r4
  80c7cc:	73cb883a 	add	r5,r14,r15
  80c7d0:	4812d43a 	srli	r9,r9,16
  80c7d4:	2919883a 	add	r12,r5,r4
  80c7d8:	12c5803a 	cmpltu	r2,r2,r11
  80c7dc:	71e1803a 	cmpltu	r16,r14,r7
  80c7e0:	1420b03a 	or	r16,r2,r16
  80c7e4:	2bcb803a 	cmpltu	r5,r5,r15
  80c7e8:	6109803a 	cmpltu	r4,r12,r4
  80c7ec:	2908b03a 	or	r4,r5,r4
  80c7f0:	8261883a 	add	r16,r16,r9
  80c7f4:	1824927a 	slli	r18,r3,9
  80c7f8:	8121883a 	add	r16,r16,r4
  80c7fc:	8361883a 	add	r16,r16,r13
  80c800:	8020927a 	slli	r16,r16,9
  80c804:	1806d5fa 	srli	r3,r3,23
  80c808:	600ad5fa 	srli	r5,r12,23
  80c80c:	6004927a 	slli	r2,r12,9
  80c810:	92a4b03a 	or	r18,r18,r10
  80c814:	9024c03a 	cmpne	r18,r18,zero
  80c818:	90e4b03a 	or	r18,r18,r3
  80c81c:	80c0402c 	andhi	r3,r16,256
  80c820:	90a4b03a 	or	r18,r18,r2
  80c824:	8160b03a 	or	r16,r16,r5
  80c828:	1800b326 	beq	r3,zero,80caf8 <__muldf3+0x5f4>
  80c82c:	9006d07a 	srli	r3,r18,1
  80c830:	800497fa 	slli	r2,r16,31
  80c834:	9480004c 	andi	r18,r18,1
  80c838:	8020d07a 	srli	r16,r16,1
  80c83c:	1c86b03a 	or	r3,r3,r18
  80c840:	18a4b03a 	or	r18,r3,r2
  80c844:	4100ffc4 	addi	r4,r8,1023
  80c848:	0100670e 	bge	zero,r4,80c9e8 <__muldf3+0x4e4>
  80c84c:	908001cc 	andi	r2,r18,7
  80c850:	10000726 	beq	r2,zero,80c870 <__muldf3+0x36c>
  80c854:	908003cc 	andi	r2,r18,15
  80c858:	10800120 	cmpeqi	r2,r2,4
  80c85c:	1000041e 	bne	r2,zero,80c870 <__muldf3+0x36c>
  80c860:	90800104 	addi	r2,r18,4
  80c864:	14a5803a 	cmpltu	r18,r2,r18
  80c868:	84a1883a 	add	r16,r16,r18
  80c86c:	1025883a 	mov	r18,r2
  80c870:	8080402c 	andhi	r2,r16,256
  80c874:	10000426 	beq	r2,zero,80c888 <__muldf3+0x384>
  80c878:	00bfc034 	movhi	r2,65280
  80c87c:	10bfffc4 	addi	r2,r2,-1
  80c880:	80a0703a 	and	r16,r16,r2
  80c884:	41010004 	addi	r4,r8,1024
  80c888:	2081ffc8 	cmpgei	r2,r4,2047
  80c88c:	103f831e 	bne	r2,zero,80c69c <__muldf3+0x198>
  80c890:	8004977a 	slli	r2,r16,29
  80c894:	9024d0fa 	srli	r18,r18,3
  80c898:	8020927a 	slli	r16,r16,9
  80c89c:	20c1ffcc 	andi	r3,r4,2047
  80c8a0:	14a4b03a 	or	r18,r2,r18
  80c8a4:	8020d33a 	srli	r16,r16,12
  80c8a8:	003f6b06 	br	80c658 <__muldf3+0x154>
  80c8ac:	8f0ab03a 	or	r5,r17,fp
  80c8b0:	28004326 	beq	r5,zero,80c9c0 <__muldf3+0x4bc>
  80c8b4:	88008526 	beq	r17,zero,80cacc <__muldf3+0x5c8>
  80c8b8:	8809883a 	mov	r4,r17
  80c8bc:	080088c0 	call	80088c <__clzsi2>
  80c8c0:	11bffd44 	addi	r6,r2,-11
  80c8c4:	01000744 	movi	r4,29
  80c8c8:	117ffe04 	addi	r5,r2,-8
  80c8cc:	2189c83a 	sub	r4,r4,r6
  80c8d0:	8962983a 	sll	r17,r17,r5
  80c8d4:	e108d83a 	srl	r4,fp,r4
  80c8d8:	e14a983a 	sll	r5,fp,r5
  80c8dc:	2462b03a 	or	r17,r4,r17
  80c8e0:	9885c83a 	sub	r2,r19,r2
  80c8e4:	14ff0344 	addi	r19,r2,-1011
  80c8e8:	0007883a 	mov	r3,zero
  80c8ec:	003f3406 	br	80c5c0 <__muldf3+0xbc>
  80c8f0:	8124b03a 	or	r18,r16,r4
  80c8f4:	90002d26 	beq	r18,zero,80c9ac <__muldf3+0x4a8>
  80c8f8:	d9c00015 	stw	r7,0(sp)
  80c8fc:	80006826 	beq	r16,zero,80caa0 <__muldf3+0x59c>
  80c900:	8009883a 	mov	r4,r16
  80c904:	080088c0 	call	80088c <__clzsi2>
  80c908:	d9c00017 	ldw	r7,0(sp)
  80c90c:	113ffd44 	addi	r4,r2,-11
  80c910:	00c00744 	movi	r3,29
  80c914:	14bffe04 	addi	r18,r2,-8
  80c918:	1907c83a 	sub	r3,r3,r4
  80c91c:	84a0983a 	sll	r16,r16,r18
  80c920:	98c6d83a 	srl	r3,r19,r3
  80c924:	9ca4983a 	sll	r18,r19,r18
  80c928:	1c20b03a 	or	r16,r3,r16
  80c92c:	04ff0344 	movi	r19,-1011
  80c930:	98a7c83a 	sub	r19,r19,r2
  80c934:	002b883a 	mov	r21,zero
  80c938:	002d883a 	mov	r22,zero
  80c93c:	003f0f06 	br	80c57c <__muldf3+0x78>
  80c940:	8124b03a 	or	r18,r16,r4
  80c944:	9000141e 	bne	r18,zero,80c998 <__muldf3+0x494>
  80c948:	0021883a 	mov	r16,zero
  80c94c:	05400204 	movi	r21,8
  80c950:	04c1ffc4 	movi	r19,2047
  80c954:	05800084 	movi	r22,2
  80c958:	003f0806 	br	80c57c <__muldf3+0x78>
  80c95c:	8f0ab03a 	or	r5,r17,fp
  80c960:	9cc1ffc4 	addi	r19,r19,2047
  80c964:	2800081e 	bne	r5,zero,80c988 <__muldf3+0x484>
  80c968:	ad400094 	ori	r21,r21,2
  80c96c:	0023883a 	mov	r17,zero
  80c970:	00c00084 	movi	r3,2
  80c974:	003f1206 	br	80c5c0 <__muldf3+0xbc>
  80c978:	b08000a0 	cmpeqi	r2,r22,2
  80c97c:	a00d883a 	mov	r6,r20
  80c980:	103f2e26 	beq	r2,zero,80c63c <__muldf3+0x138>
  80c984:	003f4506 	br	80c69c <__muldf3+0x198>
  80c988:	ad4000d4 	ori	r21,r21,3
  80c98c:	e00b883a 	mov	r5,fp
  80c990:	00c000c4 	movi	r3,3
  80c994:	003f0a06 	br	80c5c0 <__muldf3+0xbc>
  80c998:	2025883a 	mov	r18,r4
  80c99c:	05400304 	movi	r21,12
  80c9a0:	04c1ffc4 	movi	r19,2047
  80c9a4:	058000c4 	movi	r22,3
  80c9a8:	003ef406 	br	80c57c <__muldf3+0x78>
  80c9ac:	0021883a 	mov	r16,zero
  80c9b0:	05400104 	movi	r21,4
  80c9b4:	0027883a 	mov	r19,zero
  80c9b8:	05800044 	movi	r22,1
  80c9bc:	003eef06 	br	80c57c <__muldf3+0x78>
  80c9c0:	ad400054 	ori	r21,r21,1
  80c9c4:	0023883a 	mov	r17,zero
  80c9c8:	00c00044 	movi	r3,1
  80c9cc:	003efc06 	br	80c5c0 <__muldf3+0xbc>
  80c9d0:	04000434 	movhi	r16,16
  80c9d4:	000d883a 	mov	r6,zero
  80c9d8:	843fffc4 	addi	r16,r16,-1
  80c9dc:	04bfffc4 	movi	r18,-1
  80c9e0:	00c1ffc4 	movi	r3,2047
  80c9e4:	003f1c06 	br	80c658 <__muldf3+0x154>
  80c9e8:	00800044 	movi	r2,1
  80c9ec:	1105c83a 	sub	r2,r2,r4
  80c9f0:	10c00e48 	cmpgei	r3,r2,57
  80c9f4:	183f151e 	bne	r3,zero,80c64c <__muldf3+0x148>
  80c9f8:	10c00808 	cmpgei	r3,r2,32
  80c9fc:	1800401e 	bne	r3,zero,80cb00 <__muldf3+0x5fc>
  80ca00:	42010784 	addi	r8,r8,1054
  80ca04:	8206983a 	sll	r3,r16,r8
  80ca08:	9088d83a 	srl	r4,r18,r2
  80ca0c:	9210983a 	sll	r8,r18,r8
  80ca10:	80a0d83a 	srl	r16,r16,r2
  80ca14:	1904b03a 	or	r2,r3,r4
  80ca18:	4024c03a 	cmpne	r18,r8,zero
  80ca1c:	1484b03a 	or	r2,r2,r18
  80ca20:	10c001cc 	andi	r3,r2,7
  80ca24:	18000726 	beq	r3,zero,80ca44 <__muldf3+0x540>
  80ca28:	10c003cc 	andi	r3,r2,15
  80ca2c:	18c00120 	cmpeqi	r3,r3,4
  80ca30:	1800041e 	bne	r3,zero,80ca44 <__muldf3+0x540>
  80ca34:	10c00104 	addi	r3,r2,4
  80ca38:	1885803a 	cmpltu	r2,r3,r2
  80ca3c:	80a1883a 	add	r16,r16,r2
  80ca40:	1805883a 	mov	r2,r3
  80ca44:	80c0202c 	andhi	r3,r16,128
  80ca48:	18004226 	beq	r3,zero,80cb54 <__muldf3+0x650>
  80ca4c:	00c00044 	movi	r3,1
  80ca50:	0021883a 	mov	r16,zero
  80ca54:	0025883a 	mov	r18,zero
  80ca58:	003eff06 	br	80c658 <__muldf3+0x154>
  80ca5c:	8080022c 	andhi	r2,r16,8
  80ca60:	10000926 	beq	r2,zero,80ca88 <__muldf3+0x584>
  80ca64:	8880022c 	andhi	r2,r17,8
  80ca68:	1000071e 	bne	r2,zero,80ca88 <__muldf3+0x584>
  80ca6c:	00800434 	movhi	r2,16
  80ca70:	8c000234 	orhi	r16,r17,8
  80ca74:	10bfffc4 	addi	r2,r2,-1
  80ca78:	80a0703a 	and	r16,r16,r2
  80ca7c:	b80d883a 	mov	r6,r23
  80ca80:	2825883a 	mov	r18,r5
  80ca84:	003fd606 	br	80c9e0 <__muldf3+0x4dc>
  80ca88:	00800434 	movhi	r2,16
  80ca8c:	84000234 	orhi	r16,r16,8
  80ca90:	10bfffc4 	addi	r2,r2,-1
  80ca94:	80a0703a 	and	r16,r16,r2
  80ca98:	a00d883a 	mov	r6,r20
  80ca9c:	003fd006 	br	80c9e0 <__muldf3+0x4dc>
  80caa0:	080088c0 	call	80088c <__clzsi2>
  80caa4:	11000544 	addi	r4,r2,21
  80caa8:	21400748 	cmpgei	r5,r4,29
  80caac:	1007883a 	mov	r3,r2
  80cab0:	d9c00017 	ldw	r7,0(sp)
  80cab4:	10800804 	addi	r2,r2,32
  80cab8:	283f9526 	beq	r5,zero,80c910 <__muldf3+0x40c>
  80cabc:	18fffe04 	addi	r3,r3,-8
  80cac0:	98e0983a 	sll	r16,r19,r3
  80cac4:	0025883a 	mov	r18,zero
  80cac8:	003f9806 	br	80c92c <__muldf3+0x428>
  80cacc:	e009883a 	mov	r4,fp
  80cad0:	080088c0 	call	80088c <__clzsi2>
  80cad4:	11800544 	addi	r6,r2,21
  80cad8:	31000748 	cmpgei	r4,r6,29
  80cadc:	1007883a 	mov	r3,r2
  80cae0:	10800804 	addi	r2,r2,32
  80cae4:	203f7726 	beq	r4,zero,80c8c4 <__muldf3+0x3c0>
  80cae8:	1c7ffe04 	addi	r17,r3,-8
  80caec:	e462983a 	sll	r17,fp,r17
  80caf0:	000b883a 	mov	r5,zero
  80caf4:	003f7a06 	br	80c8e0 <__muldf3+0x3dc>
  80caf8:	9811883a 	mov	r8,r19
  80cafc:	003f5106 	br	80c844 <__muldf3+0x340>
  80cb00:	00fff844 	movi	r3,-31
  80cb04:	1907c83a 	sub	r3,r3,r4
  80cb08:	10800820 	cmpeqi	r2,r2,32
  80cb0c:	80c6d83a 	srl	r3,r16,r3
  80cb10:	1000031e 	bne	r2,zero,80cb20 <__muldf3+0x61c>
  80cb14:	42010f84 	addi	r8,r8,1086
  80cb18:	8220983a 	sll	r16,r16,r8
  80cb1c:	9424b03a 	or	r18,r18,r16
  80cb20:	9024c03a 	cmpne	r18,r18,zero
  80cb24:	90c4b03a 	or	r2,r18,r3
  80cb28:	148001cc 	andi	r18,r2,7
  80cb2c:	9000051e 	bne	r18,zero,80cb44 <__muldf3+0x640>
  80cb30:	0021883a 	mov	r16,zero
  80cb34:	1004d0fa 	srli	r2,r2,3
  80cb38:	0007883a 	mov	r3,zero
  80cb3c:	14a4b03a 	or	r18,r2,r18
  80cb40:	003ec506 	br	80c658 <__muldf3+0x154>
  80cb44:	10c003cc 	andi	r3,r2,15
  80cb48:	18c00118 	cmpnei	r3,r3,4
  80cb4c:	0021883a 	mov	r16,zero
  80cb50:	183fb81e 	bne	r3,zero,80ca34 <__muldf3+0x530>
  80cb54:	8006927a 	slli	r3,r16,9
  80cb58:	8024977a 	slli	r18,r16,29
  80cb5c:	1820d33a 	srli	r16,r3,12
  80cb60:	003ff406 	br	80cb34 <__muldf3+0x630>
  80cb64:	00800434 	movhi	r2,16
  80cb68:	84000234 	orhi	r16,r16,8
  80cb6c:	10bfffc4 	addi	r2,r2,-1
  80cb70:	80a0703a 	and	r16,r16,r2
  80cb74:	003f9a06 	br	80c9e0 <__muldf3+0x4dc>

0080cb78 <__subdf3>:
  80cb78:	00800434 	movhi	r2,16
  80cb7c:	3810d53a 	srli	r8,r7,20
  80cb80:	10bfffc4 	addi	r2,r2,-1
  80cb84:	2806d53a 	srli	r3,r5,20
  80cb88:	2892703a 	and	r9,r5,r2
  80cb8c:	3884703a 	and	r2,r7,r2
  80cb90:	280ad7fa 	srli	r5,r5,31
  80cb94:	481290fa 	slli	r9,r9,3
  80cb98:	2018d77a 	srli	r12,r4,29
  80cb9c:	100490fa 	slli	r2,r2,3
  80cba0:	3016d77a 	srli	r11,r6,29
  80cba4:	defffb04 	addi	sp,sp,-20
  80cba8:	4201ffcc 	andi	r8,r8,2047
  80cbac:	dc800215 	stw	r18,8(sp)
  80cbb0:	dc400115 	stw	r17,4(sp)
  80cbb4:	1c81ffcc 	andi	r18,r3,2047
  80cbb8:	dfc00415 	stw	ra,16(sp)
  80cbbc:	dcc00315 	stw	r19,12(sp)
  80cbc0:	dc000015 	stw	r16,0(sp)
  80cbc4:	4281ffd8 	cmpnei	r10,r8,2047
  80cbc8:	2823883a 	mov	r17,r5
  80cbcc:	201c90fa 	slli	r14,r4,3
  80cbd0:	380ed7fa 	srli	r7,r7,31
  80cbd4:	301a90fa 	slli	r13,r6,3
  80cbd8:	29403fcc 	andi	r5,r5,255
  80cbdc:	6252b03a 	or	r9,r12,r9
  80cbe0:	589eb03a 	or	r15,r11,r2
  80cbe4:	9207c83a 	sub	r3,r18,r8
  80cbe8:	50006826 	beq	r10,zero,80cd8c <__subdf3+0x214>
  80cbec:	3ac0005c 	xori	r11,r7,1
  80cbf0:	2ac07326 	beq	r5,r11,80cdc0 <__subdf3+0x248>
  80cbf4:	00c0590e 	bge	zero,r3,80cd5c <__subdf3+0x1e4>
  80cbf8:	4000691e 	bne	r8,zero,80cda0 <__subdf3+0x228>
  80cbfc:	7b44b03a 	or	r2,r15,r13
  80cc00:	1000fb26 	beq	r2,zero,80cff0 <__subdf3+0x478>
  80cc04:	18bfffc4 	addi	r2,r3,-1
  80cc08:	10019126 	beq	r2,zero,80d250 <__subdf3+0x6d8>
  80cc0c:	18c1ffd8 	cmpnei	r3,r3,2047
  80cc10:	1800c326 	beq	r3,zero,80cf20 <__subdf3+0x3a8>
  80cc14:	1007883a 	mov	r3,r2
  80cc18:	18800e48 	cmpgei	r2,r3,57
  80cc1c:	1000651e 	bne	r2,zero,80cdb4 <__subdf3+0x23c>
  80cc20:	18800808 	cmpgei	r2,r3,32
  80cc24:	1001331e 	bne	r2,zero,80d0f4 <__subdf3+0x57c>
  80cc28:	00800804 	movi	r2,32
  80cc2c:	10c5c83a 	sub	r2,r2,r3
  80cc30:	78a0983a 	sll	r16,r15,r2
  80cc34:	68c8d83a 	srl	r4,r13,r3
  80cc38:	689a983a 	sll	r13,r13,r2
  80cc3c:	78c4d83a 	srl	r2,r15,r3
  80cc40:	8120b03a 	or	r16,r16,r4
  80cc44:	681ac03a 	cmpne	r13,r13,zero
  80cc48:	8360b03a 	or	r16,r16,r13
  80cc4c:	4893c83a 	sub	r9,r9,r2
  80cc50:	7421c83a 	sub	r16,r14,r16
  80cc54:	7409803a 	cmpltu	r4,r14,r16
  80cc58:	4909c83a 	sub	r4,r9,r4
  80cc5c:	2080202c 	andhi	r2,r4,128
  80cc60:	10009326 	beq	r2,zero,80ceb0 <__subdf3+0x338>
  80cc64:	04c02034 	movhi	r19,128
  80cc68:	9cffffc4 	addi	r19,r19,-1
  80cc6c:	24e6703a 	and	r19,r4,r19
  80cc70:	9800b926 	beq	r19,zero,80cf58 <__subdf3+0x3e0>
  80cc74:	9809883a 	mov	r4,r19
  80cc78:	080088c0 	call	80088c <__clzsi2>
  80cc7c:	10fffe04 	addi	r3,r2,-8
  80cc80:	01000804 	movi	r4,32
  80cc84:	20c9c83a 	sub	r4,r4,r3
  80cc88:	8108d83a 	srl	r4,r16,r4
  80cc8c:	98e6983a 	sll	r19,r19,r3
  80cc90:	80e0983a 	sll	r16,r16,r3
  80cc94:	24c8b03a 	or	r4,r4,r19
  80cc98:	1c80b816 	blt	r3,r18,80cf7c <__subdf3+0x404>
  80cc9c:	1c87c83a 	sub	r3,r3,r18
  80cca0:	19400044 	addi	r5,r3,1
  80cca4:	28800808 	cmpgei	r2,r5,32
  80cca8:	1000751e 	bne	r2,zero,80ce80 <__subdf3+0x308>
  80ccac:	00800804 	movi	r2,32
  80ccb0:	1145c83a 	sub	r2,r2,r5
  80ccb4:	8146d83a 	srl	r3,r16,r5
  80ccb8:	80a0983a 	sll	r16,r16,r2
  80ccbc:	2084983a 	sll	r2,r4,r2
  80ccc0:	2148d83a 	srl	r4,r4,r5
  80ccc4:	8020c03a 	cmpne	r16,r16,zero
  80ccc8:	10c4b03a 	or	r2,r2,r3
  80cccc:	1420b03a 	or	r16,r2,r16
  80ccd0:	0025883a 	mov	r18,zero
  80ccd4:	808001cc 	andi	r2,r16,7
  80ccd8:	10000726 	beq	r2,zero,80ccf8 <__subdf3+0x180>
  80ccdc:	808003cc 	andi	r2,r16,15
  80cce0:	10800120 	cmpeqi	r2,r2,4
  80cce4:	1000041e 	bne	r2,zero,80ccf8 <__subdf3+0x180>
  80cce8:	80800104 	addi	r2,r16,4
  80ccec:	1421803a 	cmpltu	r16,r2,r16
  80ccf0:	2409883a 	add	r4,r4,r16
  80ccf4:	1021883a 	mov	r16,r2
  80ccf8:	2080202c 	andhi	r2,r4,128
  80ccfc:	10006e26 	beq	r2,zero,80ceb8 <__subdf3+0x340>
  80cd00:	90c00044 	addi	r3,r18,1
  80cd04:	1881ffe0 	cmpeqi	r2,r3,2047
  80cd08:	18c1ffcc 	andi	r3,r3,2047
  80cd0c:	1000801e 	bne	r2,zero,80cf10 <__subdf3+0x398>
  80cd10:	00bfe034 	movhi	r2,65408
  80cd14:	10bfffc4 	addi	r2,r2,-1
  80cd18:	2088703a 	and	r4,r4,r2
  80cd1c:	2004977a 	slli	r2,r4,29
  80cd20:	2008927a 	slli	r4,r4,9
  80cd24:	8020d0fa 	srli	r16,r16,3
  80cd28:	2008d33a 	srli	r4,r4,12
  80cd2c:	1404b03a 	or	r2,r2,r16
  80cd30:	1806953a 	slli	r3,r3,20
  80cd34:	882297fa 	slli	r17,r17,31
  80cd38:	1906b03a 	or	r3,r3,r4
  80cd3c:	1c46b03a 	or	r3,r3,r17
  80cd40:	dfc00417 	ldw	ra,16(sp)
  80cd44:	dcc00317 	ldw	r19,12(sp)
  80cd48:	dc800217 	ldw	r18,8(sp)
  80cd4c:	dc400117 	ldw	r17,4(sp)
  80cd50:	dc000017 	ldw	r16,0(sp)
  80cd54:	dec00504 	addi	sp,sp,20
  80cd58:	f800283a 	ret
  80cd5c:	18002c26 	beq	r3,zero,80ce10 <__subdf3+0x298>
  80cd60:	4487c83a 	sub	r3,r8,r18
  80cd64:	5823883a 	mov	r17,r11
  80cd68:	9000bb1e 	bne	r18,zero,80d058 <__subdf3+0x4e0>
  80cd6c:	4b84b03a 	or	r2,r9,r14
  80cd70:	10011726 	beq	r2,zero,80d1d0 <__subdf3+0x658>
  80cd74:	18bfffc4 	addi	r2,r3,-1
  80cd78:	10016326 	beq	r2,zero,80d308 <__subdf3+0x790>
  80cd7c:	18c1ffd8 	cmpnei	r3,r3,2047
  80cd80:	18012c26 	beq	r3,zero,80d234 <__subdf3+0x6bc>
  80cd84:	1007883a 	mov	r3,r2
  80cd88:	0000b506 	br	80d060 <__subdf3+0x4e8>
  80cd8c:	7b44b03a 	or	r2,r15,r13
  80cd90:	103f9626 	beq	r2,zero,80cbec <__subdf3+0x74>
  80cd94:	3ac03fcc 	andi	r11,r7,255
  80cd98:	29c07d26 	beq	r5,r7,80cf90 <__subdf3+0x418>
  80cd9c:	00ffef0e 	bge	zero,r3,80cd5c <__subdf3+0x1e4>
  80cda0:	9081ffd8 	cmpnei	r2,r18,2047
  80cda4:	10005e26 	beq	r2,zero,80cf20 <__subdf3+0x3a8>
  80cda8:	18800e48 	cmpgei	r2,r3,57
  80cdac:	7bc02034 	orhi	r15,r15,128
  80cdb0:	103f9b26 	beq	r2,zero,80cc20 <__subdf3+0xa8>
  80cdb4:	7b60b03a 	or	r16,r15,r13
  80cdb8:	8020c03a 	cmpne	r16,r16,zero
  80cdbc:	003fa406 	br	80cc50 <__subdf3+0xd8>
  80cdc0:	00c0730e 	bge	zero,r3,80cf90 <__subdf3+0x418>
  80cdc4:	40002626 	beq	r8,zero,80ce60 <__subdf3+0x2e8>
  80cdc8:	9081ffd8 	cmpnei	r2,r18,2047
  80cdcc:	10005426 	beq	r2,zero,80cf20 <__subdf3+0x3a8>
  80cdd0:	7bc02034 	orhi	r15,r15,128
  80cdd4:	18800e48 	cmpgei	r2,r3,57
  80cdd8:	1000431e 	bne	r2,zero,80cee8 <__subdf3+0x370>
  80cddc:	18800808 	cmpgei	r2,r3,32
  80cde0:	1000de26 	beq	r2,zero,80d15c <__subdf3+0x5e4>
  80cde4:	1c3ff804 	addi	r16,r3,-32
  80cde8:	18800820 	cmpeqi	r2,r3,32
  80cdec:	7c0ad83a 	srl	r5,r15,r16
  80cdf0:	1000041e 	bne	r2,zero,80ce04 <__subdf3+0x28c>
  80cdf4:	00801004 	movi	r2,64
  80cdf8:	10c5c83a 	sub	r2,r2,r3
  80cdfc:	7884983a 	sll	r2,r15,r2
  80ce00:	689ab03a 	or	r13,r13,r2
  80ce04:	6820c03a 	cmpne	r16,r13,zero
  80ce08:	8160b03a 	or	r16,r16,r5
  80ce0c:	00003806 	br	80cef0 <__subdf3+0x378>
  80ce10:	90800044 	addi	r2,r18,1
  80ce14:	1081ff8c 	andi	r2,r2,2046
  80ce18:	1000a01e 	bne	r2,zero,80d09c <__subdf3+0x524>
  80ce1c:	4b8ab03a 	or	r5,r9,r14
  80ce20:	7b44b03a 	or	r2,r15,r13
  80ce24:	9000f11e 	bne	r18,zero,80d1ec <__subdf3+0x674>
  80ce28:	28012e26 	beq	r5,zero,80d2e4 <__subdf3+0x76c>
  80ce2c:	10010e26 	beq	r2,zero,80d268 <__subdf3+0x6f0>
  80ce30:	7361c83a 	sub	r16,r14,r13
  80ce34:	7405803a 	cmpltu	r2,r14,r16
  80ce38:	4bc9c83a 	sub	r4,r9,r15
  80ce3c:	2089c83a 	sub	r4,r4,r2
  80ce40:	2080202c 	andhi	r2,r4,128
  80ce44:	10016d26 	beq	r2,zero,80d3fc <__subdf3+0x884>
  80ce48:	6ba1c83a 	sub	r16,r13,r14
  80ce4c:	7a49c83a 	sub	r4,r15,r9
  80ce50:	6c1b803a 	cmpltu	r13,r13,r16
  80ce54:	2349c83a 	sub	r4,r4,r13
  80ce58:	5823883a 	mov	r17,r11
  80ce5c:	003f9d06 	br	80ccd4 <__subdf3+0x15c>
  80ce60:	7b44b03a 	or	r2,r15,r13
  80ce64:	10006226 	beq	r2,zero,80cff0 <__subdf3+0x478>
  80ce68:	18bfffc4 	addi	r2,r3,-1
  80ce6c:	1000e926 	beq	r2,zero,80d214 <__subdf3+0x69c>
  80ce70:	18c1ffd8 	cmpnei	r3,r3,2047
  80ce74:	18012a26 	beq	r3,zero,80d320 <__subdf3+0x7a8>
  80ce78:	1007883a 	mov	r3,r2
  80ce7c:	003fd506 	br	80cdd4 <__subdf3+0x25c>
  80ce80:	18fff844 	addi	r3,r3,-31
  80ce84:	28800820 	cmpeqi	r2,r5,32
  80ce88:	20c6d83a 	srl	r3,r4,r3
  80ce8c:	1000041e 	bne	r2,zero,80cea0 <__subdf3+0x328>
  80ce90:	00801004 	movi	r2,64
  80ce94:	114bc83a 	sub	r5,r2,r5
  80ce98:	2148983a 	sll	r4,r4,r5
  80ce9c:	8120b03a 	or	r16,r16,r4
  80cea0:	8020c03a 	cmpne	r16,r16,zero
  80cea4:	80e0b03a 	or	r16,r16,r3
  80cea8:	0009883a 	mov	r4,zero
  80ceac:	0025883a 	mov	r18,zero
  80ceb0:	808001cc 	andi	r2,r16,7
  80ceb4:	103f891e 	bne	r2,zero,80ccdc <__subdf3+0x164>
  80ceb8:	8020d0fa 	srli	r16,r16,3
  80cebc:	2004977a 	slli	r2,r4,29
  80cec0:	2012d0fa 	srli	r9,r4,3
  80cec4:	9007883a 	mov	r3,r18
  80cec8:	8084b03a 	or	r2,r16,r2
  80cecc:	1901ffe0 	cmpeqi	r4,r3,2047
  80ced0:	2000191e 	bne	r4,zero,80cf38 <__subdf3+0x3c0>
  80ced4:	01000434 	movhi	r4,16
  80ced8:	213fffc4 	addi	r4,r4,-1
  80cedc:	4908703a 	and	r4,r9,r4
  80cee0:	18c1ffcc 	andi	r3,r3,2047
  80cee4:	003f9206 	br	80cd30 <__subdf3+0x1b8>
  80cee8:	7b60b03a 	or	r16,r15,r13
  80ceec:	8020c03a 	cmpne	r16,r16,zero
  80cef0:	83a1883a 	add	r16,r16,r14
  80cef4:	8389803a 	cmpltu	r4,r16,r14
  80cef8:	2249883a 	add	r4,r4,r9
  80cefc:	2080202c 	andhi	r2,r4,128
  80cf00:	103feb26 	beq	r2,zero,80ceb0 <__subdf3+0x338>
  80cf04:	94800044 	addi	r18,r18,1
  80cf08:	9081ffe0 	cmpeqi	r2,r18,2047
  80cf0c:	10006f26 	beq	r2,zero,80d0cc <__subdf3+0x554>
  80cf10:	00c1ffc4 	movi	r3,2047
  80cf14:	0009883a 	mov	r4,zero
  80cf18:	0005883a 	mov	r2,zero
  80cf1c:	003f8406 	br	80cd30 <__subdf3+0x1b8>
  80cf20:	4806977a 	slli	r3,r9,29
  80cf24:	00880034 	movhi	r2,8192
  80cf28:	10bfffc4 	addi	r2,r2,-1
  80cf2c:	4812d0fa 	srli	r9,r9,3
  80cf30:	2088703a 	and	r4,r4,r2
  80cf34:	20c4b03a 	or	r2,r4,r3
  80cf38:	4886b03a 	or	r3,r9,r2
  80cf3c:	18013726 	beq	r3,zero,80d41c <__subdf3+0x8a4>
  80cf40:	00c00434 	movhi	r3,16
  80cf44:	18ffffc4 	addi	r3,r3,-1
  80cf48:	49000234 	orhi	r4,r9,8
  80cf4c:	20c8703a 	and	r4,r4,r3
  80cf50:	00c1ffc4 	movi	r3,2047
  80cf54:	003f7606 	br	80cd30 <__subdf3+0x1b8>
  80cf58:	8009883a 	mov	r4,r16
  80cf5c:	080088c0 	call	80088c <__clzsi2>
  80cf60:	10c00604 	addi	r3,r2,24
  80cf64:	19000808 	cmpgei	r4,r3,32
  80cf68:	203f4526 	beq	r4,zero,80cc80 <__subdf3+0x108>
  80cf6c:	113ffe04 	addi	r4,r2,-8
  80cf70:	8108983a 	sll	r4,r16,r4
  80cf74:	0021883a 	mov	r16,zero
  80cf78:	1cbf480e 	bge	r3,r18,80cc9c <__subdf3+0x124>
  80cf7c:	00bfe034 	movhi	r2,65408
  80cf80:	10bfffc4 	addi	r2,r2,-1
  80cf84:	90e5c83a 	sub	r18,r18,r3
  80cf88:	2088703a 	and	r4,r4,r2
  80cf8c:	003f5106 	br	80ccd4 <__subdf3+0x15c>
  80cf90:	18001e26 	beq	r3,zero,80d00c <__subdf3+0x494>
  80cf94:	4487c83a 	sub	r3,r8,r18
  80cf98:	90006826 	beq	r18,zero,80d13c <__subdf3+0x5c4>
  80cf9c:	5000a526 	beq	r10,zero,80d234 <__subdf3+0x6bc>
  80cfa0:	4a402034 	orhi	r9,r9,128
  80cfa4:	18800e48 	cmpgei	r2,r3,57
  80cfa8:	1000b61e 	bne	r2,zero,80d284 <__subdf3+0x70c>
  80cfac:	18800808 	cmpgei	r2,r3,32
  80cfb0:	1001021e 	bne	r2,zero,80d3bc <__subdf3+0x844>
  80cfb4:	00800804 	movi	r2,32
  80cfb8:	10c5c83a 	sub	r2,r2,r3
  80cfbc:	48a0983a 	sll	r16,r9,r2
  80cfc0:	70c8d83a 	srl	r4,r14,r3
  80cfc4:	7084983a 	sll	r2,r14,r2
  80cfc8:	48d2d83a 	srl	r9,r9,r3
  80cfcc:	8120b03a 	or	r16,r16,r4
  80cfd0:	1004c03a 	cmpne	r2,r2,zero
  80cfd4:	80a0b03a 	or	r16,r16,r2
  80cfd8:	7a5f883a 	add	r15,r15,r9
  80cfdc:	8361883a 	add	r16,r16,r13
  80cfe0:	8349803a 	cmpltu	r4,r16,r13
  80cfe4:	23c9883a 	add	r4,r4,r15
  80cfe8:	4025883a 	mov	r18,r8
  80cfec:	003fc306 	br	80cefc <__subdf3+0x384>
  80cff0:	480a977a 	slli	r5,r9,29
  80cff4:	00880034 	movhi	r2,8192
  80cff8:	10bfffc4 	addi	r2,r2,-1
  80cffc:	2088703a 	and	r4,r4,r2
  80d000:	4812d0fa 	srli	r9,r9,3
  80d004:	2144b03a 	or	r2,r4,r5
  80d008:	003fb006 	br	80cecc <__subdf3+0x354>
  80d00c:	90800044 	addi	r2,r18,1
  80d010:	1141ff8c 	andi	r5,r2,2046
  80d014:	28005c1e 	bne	r5,zero,80d188 <__subdf3+0x610>
  80d018:	4b84b03a 	or	r2,r9,r14
  80d01c:	9000a71e 	bne	r18,zero,80d2bc <__subdf3+0x744>
  80d020:	1000df26 	beq	r2,zero,80d3a0 <__subdf3+0x828>
  80d024:	7b44b03a 	or	r2,r15,r13
  80d028:	10008f26 	beq	r2,zero,80d268 <__subdf3+0x6f0>
  80d02c:	7361883a 	add	r16,r14,r13
  80d030:	4bc9883a 	add	r4,r9,r15
  80d034:	839d803a 	cmpltu	r14,r16,r14
  80d038:	2389883a 	add	r4,r4,r14
  80d03c:	2080202c 	andhi	r2,r4,128
  80d040:	103f9b26 	beq	r2,zero,80ceb0 <__subdf3+0x338>
  80d044:	00bfe034 	movhi	r2,65408
  80d048:	10bfffc4 	addi	r2,r2,-1
  80d04c:	2088703a 	and	r4,r4,r2
  80d050:	04800044 	movi	r18,1
  80d054:	003f9606 	br	80ceb0 <__subdf3+0x338>
  80d058:	50007626 	beq	r10,zero,80d234 <__subdf3+0x6bc>
  80d05c:	4a402034 	orhi	r9,r9,128
  80d060:	18800e48 	cmpgei	r2,r3,57
  80d064:	10002e1e 	bne	r2,zero,80d120 <__subdf3+0x5a8>
  80d068:	18800808 	cmpgei	r2,r3,32
  80d06c:	1000881e 	bne	r2,zero,80d290 <__subdf3+0x718>
  80d070:	00800804 	movi	r2,32
  80d074:	10c5c83a 	sub	r2,r2,r3
  80d078:	48a0983a 	sll	r16,r9,r2
  80d07c:	70c8d83a 	srl	r4,r14,r3
  80d080:	709c983a 	sll	r14,r14,r2
  80d084:	48d2d83a 	srl	r9,r9,r3
  80d088:	8120b03a 	or	r16,r16,r4
  80d08c:	701cc03a 	cmpne	r14,r14,zero
  80d090:	83a0b03a 	or	r16,r16,r14
  80d094:	7a5fc83a 	sub	r15,r15,r9
  80d098:	00002306 	br	80d128 <__subdf3+0x5b0>
  80d09c:	7361c83a 	sub	r16,r14,r13
  80d0a0:	4be7c83a 	sub	r19,r9,r15
  80d0a4:	7409803a 	cmpltu	r4,r14,r16
  80d0a8:	9927c83a 	sub	r19,r19,r4
  80d0ac:	9880202c 	andhi	r2,r19,128
  80d0b0:	1000411e 	bne	r2,zero,80d1b8 <__subdf3+0x640>
  80d0b4:	84c4b03a 	or	r2,r16,r19
  80d0b8:	103eed1e 	bne	r2,zero,80cc70 <__subdf3+0xf8>
  80d0bc:	0013883a 	mov	r9,zero
  80d0c0:	0023883a 	mov	r17,zero
  80d0c4:	003f8306 	br	80ced4 <__subdf3+0x35c>
  80d0c8:	04800084 	movi	r18,2
  80d0cc:	00bfe034 	movhi	r2,65408
  80d0d0:	10bfffc4 	addi	r2,r2,-1
  80d0d4:	8006d07a 	srli	r3,r16,1
  80d0d8:	2088703a 	and	r4,r4,r2
  80d0dc:	200497fa 	slli	r2,r4,31
  80d0e0:	8400004c 	andi	r16,r16,1
  80d0e4:	1c20b03a 	or	r16,r3,r16
  80d0e8:	2008d07a 	srli	r4,r4,1
  80d0ec:	1420b03a 	or	r16,r2,r16
  80d0f0:	003ef806 	br	80ccd4 <__subdf3+0x15c>
  80d0f4:	1c3ff804 	addi	r16,r3,-32
  80d0f8:	18800820 	cmpeqi	r2,r3,32
  80d0fc:	7c0ad83a 	srl	r5,r15,r16
  80d100:	1000041e 	bne	r2,zero,80d114 <__subdf3+0x59c>
  80d104:	00801004 	movi	r2,64
  80d108:	10c5c83a 	sub	r2,r2,r3
  80d10c:	7884983a 	sll	r2,r15,r2
  80d110:	689ab03a 	or	r13,r13,r2
  80d114:	6820c03a 	cmpne	r16,r13,zero
  80d118:	8160b03a 	or	r16,r16,r5
  80d11c:	003ecc06 	br	80cc50 <__subdf3+0xd8>
  80d120:	4b92b03a 	or	r9,r9,r14
  80d124:	4820c03a 	cmpne	r16,r9,zero
  80d128:	6c21c83a 	sub	r16,r13,r16
  80d12c:	6c09803a 	cmpltu	r4,r13,r16
  80d130:	7909c83a 	sub	r4,r15,r4
  80d134:	4025883a 	mov	r18,r8
  80d138:	003ec806 	br	80cc5c <__subdf3+0xe4>
  80d13c:	4b84b03a 	or	r2,r9,r14
  80d140:	10007e26 	beq	r2,zero,80d33c <__subdf3+0x7c4>
  80d144:	18bfffc4 	addi	r2,r3,-1
  80d148:	1000a726 	beq	r2,zero,80d3e8 <__subdf3+0x870>
  80d14c:	18c1ffd8 	cmpnei	r3,r3,2047
  80d150:	18003826 	beq	r3,zero,80d234 <__subdf3+0x6bc>
  80d154:	1007883a 	mov	r3,r2
  80d158:	003f9206 	br	80cfa4 <__subdf3+0x42c>
  80d15c:	00800804 	movi	r2,32
  80d160:	10c5c83a 	sub	r2,r2,r3
  80d164:	78a0983a 	sll	r16,r15,r2
  80d168:	68c8d83a 	srl	r4,r13,r3
  80d16c:	689a983a 	sll	r13,r13,r2
  80d170:	78c4d83a 	srl	r2,r15,r3
  80d174:	8120b03a 	or	r16,r16,r4
  80d178:	681ac03a 	cmpne	r13,r13,zero
  80d17c:	8360b03a 	or	r16,r16,r13
  80d180:	4893883a 	add	r9,r9,r2
  80d184:	003f5a06 	br	80cef0 <__subdf3+0x378>
  80d188:	10c1ffe0 	cmpeqi	r3,r2,2047
  80d18c:	183f601e 	bne	r3,zero,80cf10 <__subdf3+0x398>
  80d190:	735b883a 	add	r13,r14,r13
  80d194:	6b9d803a 	cmpltu	r14,r13,r14
  80d198:	4bc9883a 	add	r4,r9,r15
  80d19c:	2389883a 	add	r4,r4,r14
  80d1a0:	202097fa 	slli	r16,r4,31
  80d1a4:	681ad07a 	srli	r13,r13,1
  80d1a8:	2008d07a 	srli	r4,r4,1
  80d1ac:	1025883a 	mov	r18,r2
  80d1b0:	8360b03a 	or	r16,r16,r13
  80d1b4:	003f3e06 	br	80ceb0 <__subdf3+0x338>
  80d1b8:	6ba1c83a 	sub	r16,r13,r14
  80d1bc:	7a49c83a 	sub	r4,r15,r9
  80d1c0:	6c1b803a 	cmpltu	r13,r13,r16
  80d1c4:	2367c83a 	sub	r19,r4,r13
  80d1c8:	5823883a 	mov	r17,r11
  80d1cc:	003ea806 	br	80cc70 <__subdf3+0xf8>
  80d1d0:	7808977a 	slli	r4,r15,29
  80d1d4:	00880034 	movhi	r2,8192
  80d1d8:	10bfffc4 	addi	r2,r2,-1
  80d1dc:	308c703a 	and	r6,r6,r2
  80d1e0:	7812d0fa 	srli	r9,r15,3
  80d1e4:	3104b03a 	or	r2,r6,r4
  80d1e8:	003f3806 	br	80cecc <__subdf3+0x354>
  80d1ec:	28005a1e 	bne	r5,zero,80d358 <__subdf3+0x7e0>
  80d1f0:	10008526 	beq	r2,zero,80d408 <__subdf3+0x890>
  80d1f4:	7806977a 	slli	r3,r15,29
  80d1f8:	00880034 	movhi	r2,8192
  80d1fc:	10bfffc4 	addi	r2,r2,-1
  80d200:	3084703a 	and	r2,r6,r2
  80d204:	7812d0fa 	srli	r9,r15,3
  80d208:	10c4b03a 	or	r2,r2,r3
  80d20c:	5823883a 	mov	r17,r11
  80d210:	003f4906 	br	80cf38 <__subdf3+0x3c0>
  80d214:	7361883a 	add	r16,r14,r13
  80d218:	4bc9883a 	add	r4,r9,r15
  80d21c:	839d803a 	cmpltu	r14,r16,r14
  80d220:	2389883a 	add	r4,r4,r14
  80d224:	2080202c 	andhi	r2,r4,128
  80d228:	103fa71e 	bne	r2,zero,80d0c8 <__subdf3+0x550>
  80d22c:	04800044 	movi	r18,1
  80d230:	003f1f06 	br	80ceb0 <__subdf3+0x338>
  80d234:	7806977a 	slli	r3,r15,29
  80d238:	00880034 	movhi	r2,8192
  80d23c:	10bfffc4 	addi	r2,r2,-1
  80d240:	3084703a 	and	r2,r6,r2
  80d244:	7812d0fa 	srli	r9,r15,3
  80d248:	10c4b03a 	or	r2,r2,r3
  80d24c:	003f3a06 	br	80cf38 <__subdf3+0x3c0>
  80d250:	7361c83a 	sub	r16,r14,r13
  80d254:	4bc9c83a 	sub	r4,r9,r15
  80d258:	741d803a 	cmpltu	r14,r14,r16
  80d25c:	2389c83a 	sub	r4,r4,r14
  80d260:	04800044 	movi	r18,1
  80d264:	003e7d06 	br	80cc5c <__subdf3+0xe4>
  80d268:	480a977a 	slli	r5,r9,29
  80d26c:	00880034 	movhi	r2,8192
  80d270:	10bfffc4 	addi	r2,r2,-1
  80d274:	2084703a 	and	r2,r4,r2
  80d278:	4812d0fa 	srli	r9,r9,3
  80d27c:	1144b03a 	or	r2,r2,r5
  80d280:	003f1406 	br	80ced4 <__subdf3+0x35c>
  80d284:	4b92b03a 	or	r9,r9,r14
  80d288:	4820c03a 	cmpne	r16,r9,zero
  80d28c:	003f5306 	br	80cfdc <__subdf3+0x464>
  80d290:	1c3ff804 	addi	r16,r3,-32
  80d294:	19000820 	cmpeqi	r4,r3,32
  80d298:	4c04d83a 	srl	r2,r9,r16
  80d29c:	2000041e 	bne	r4,zero,80d2b0 <__subdf3+0x738>
  80d2a0:	01001004 	movi	r4,64
  80d2a4:	20c7c83a 	sub	r3,r4,r3
  80d2a8:	48d2983a 	sll	r9,r9,r3
  80d2ac:	725cb03a 	or	r14,r14,r9
  80d2b0:	7020c03a 	cmpne	r16,r14,zero
  80d2b4:	80a0b03a 	or	r16,r16,r2
  80d2b8:	003f9b06 	br	80d128 <__subdf3+0x5b0>
  80d2bc:	103fdd26 	beq	r2,zero,80d234 <__subdf3+0x6bc>
  80d2c0:	7b5ab03a 	or	r13,r15,r13
  80d2c4:	480a977a 	slli	r5,r9,29
  80d2c8:	4812d0fa 	srli	r9,r9,3
  80d2cc:	6800251e 	bne	r13,zero,80d364 <__subdf3+0x7ec>
  80d2d0:	00880034 	movhi	r2,8192
  80d2d4:	10bfffc4 	addi	r2,r2,-1
  80d2d8:	2084703a 	and	r2,r4,r2
  80d2dc:	1144b03a 	or	r2,r2,r5
  80d2e0:	003f1506 	br	80cf38 <__subdf3+0x3c0>
  80d2e4:	103f7526 	beq	r2,zero,80d0bc <__subdf3+0x544>
  80d2e8:	7808977a 	slli	r4,r15,29
  80d2ec:	00880034 	movhi	r2,8192
  80d2f0:	10bfffc4 	addi	r2,r2,-1
  80d2f4:	3084703a 	and	r2,r6,r2
  80d2f8:	7812d0fa 	srli	r9,r15,3
  80d2fc:	1104b03a 	or	r2,r2,r4
  80d300:	5823883a 	mov	r17,r11
  80d304:	003ef306 	br	80ced4 <__subdf3+0x35c>
  80d308:	6ba1c83a 	sub	r16,r13,r14
  80d30c:	7a49c83a 	sub	r4,r15,r9
  80d310:	6c1b803a 	cmpltu	r13,r13,r16
  80d314:	2349c83a 	sub	r4,r4,r13
  80d318:	04800044 	movi	r18,1
  80d31c:	003e4f06 	br	80cc5c <__subdf3+0xe4>
  80d320:	4806977a 	slli	r3,r9,29
  80d324:	00880034 	movhi	r2,8192
  80d328:	10bfffc4 	addi	r2,r2,-1
  80d32c:	2084703a 	and	r2,r4,r2
  80d330:	4812d0fa 	srli	r9,r9,3
  80d334:	10c4b03a 	or	r2,r2,r3
  80d338:	003eff06 	br	80cf38 <__subdf3+0x3c0>
  80d33c:	7808977a 	slli	r4,r15,29
  80d340:	00880034 	movhi	r2,8192
  80d344:	10bfffc4 	addi	r2,r2,-1
  80d348:	3084703a 	and	r2,r6,r2
  80d34c:	7812d0fa 	srli	r9,r15,3
  80d350:	1104b03a 	or	r2,r2,r4
  80d354:	003edd06 	br	80cecc <__subdf3+0x354>
  80d358:	480a977a 	slli	r5,r9,29
  80d35c:	4812d0fa 	srli	r9,r9,3
  80d360:	103fdb26 	beq	r2,zero,80d2d0 <__subdf3+0x758>
  80d364:	00c80034 	movhi	r3,8192
  80d368:	18ffffc4 	addi	r3,r3,-1
  80d36c:	20c4703a 	and	r2,r4,r3
  80d370:	4900022c 	andhi	r4,r9,8
  80d374:	1144b03a 	or	r2,r2,r5
  80d378:	203eef26 	beq	r4,zero,80cf38 <__subdf3+0x3c0>
  80d37c:	7808d0fa 	srli	r4,r15,3
  80d380:	2140022c 	andhi	r5,r4,8
  80d384:	283eec1e 	bne	r5,zero,80cf38 <__subdf3+0x3c0>
  80d388:	7804977a 	slli	r2,r15,29
  80d38c:	30cc703a 	and	r6,r6,r3
  80d390:	5823883a 	mov	r17,r11
  80d394:	3084b03a 	or	r2,r6,r2
  80d398:	2013883a 	mov	r9,r4
  80d39c:	003ee606 	br	80cf38 <__subdf3+0x3c0>
  80d3a0:	7808977a 	slli	r4,r15,29
  80d3a4:	00880034 	movhi	r2,8192
  80d3a8:	10bfffc4 	addi	r2,r2,-1
  80d3ac:	3084703a 	and	r2,r6,r2
  80d3b0:	7812d0fa 	srli	r9,r15,3
  80d3b4:	1104b03a 	or	r2,r2,r4
  80d3b8:	003ec606 	br	80ced4 <__subdf3+0x35c>
  80d3bc:	18bff804 	addi	r2,r3,-32
  80d3c0:	19000820 	cmpeqi	r4,r3,32
  80d3c4:	4884d83a 	srl	r2,r9,r2
  80d3c8:	2000041e 	bne	r4,zero,80d3dc <__subdf3+0x864>
  80d3cc:	01001004 	movi	r4,64
  80d3d0:	20c7c83a 	sub	r3,r4,r3
  80d3d4:	48d2983a 	sll	r9,r9,r3
  80d3d8:	725cb03a 	or	r14,r14,r9
  80d3dc:	7020c03a 	cmpne	r16,r14,zero
  80d3e0:	80a0b03a 	or	r16,r16,r2
  80d3e4:	003efd06 	br	80cfdc <__subdf3+0x464>
  80d3e8:	7361883a 	add	r16,r14,r13
  80d3ec:	4bc9883a 	add	r4,r9,r15
  80d3f0:	835b803a 	cmpltu	r13,r16,r13
  80d3f4:	2349883a 	add	r4,r4,r13
  80d3f8:	003f8a06 	br	80d224 <__subdf3+0x6ac>
  80d3fc:	8104b03a 	or	r2,r16,r4
  80d400:	103f2e26 	beq	r2,zero,80d0bc <__subdf3+0x544>
  80d404:	003eaa06 	br	80ceb0 <__subdf3+0x338>
  80d408:	02400434 	movhi	r9,16
  80d40c:	0023883a 	mov	r17,zero
  80d410:	00bfffc4 	movi	r2,-1
  80d414:	4a7fffc4 	addi	r9,r9,-1
  80d418:	003ec906 	br	80cf40 <__subdf3+0x3c8>
  80d41c:	0005883a 	mov	r2,zero
  80d420:	00c1ffc4 	movi	r3,2047
  80d424:	0009883a 	mov	r4,zero
  80d428:	003e4106 	br	80cd30 <__subdf3+0x1b8>

0080d42c <__unorddf2>:
  80d42c:	2806d53a 	srli	r3,r5,20
  80d430:	3810d53a 	srli	r8,r7,20
  80d434:	02400434 	movhi	r9,16
  80d438:	18c1ffcc 	andi	r3,r3,2047
  80d43c:	4a7fffc4 	addi	r9,r9,-1
  80d440:	18c1ffd8 	cmpnei	r3,r3,2047
  80d444:	2a4a703a 	and	r5,r5,r9
  80d448:	3a4e703a 	and	r7,r7,r9
  80d44c:	4201ffcc 	andi	r8,r8,2047
  80d450:	18000426 	beq	r3,zero,80d464 <__unorddf2+0x38>
  80d454:	4201ffd8 	cmpnei	r8,r8,2047
  80d458:	40000626 	beq	r8,zero,80d474 <__unorddf2+0x48>
  80d45c:	0005883a 	mov	r2,zero
  80d460:	f800283a 	ret
  80d464:	290ab03a 	or	r5,r5,r4
  80d468:	283ffa26 	beq	r5,zero,80d454 <__unorddf2+0x28>
  80d46c:	00800044 	movi	r2,1
  80d470:	f800283a 	ret
  80d474:	398eb03a 	or	r7,r7,r6
  80d478:	3804c03a 	cmpne	r2,r7,zero
  80d47c:	f800283a 	ret

0080d480 <__fixdfsi>:
  80d480:	2806d53a 	srli	r3,r5,20
  80d484:	01800434 	movhi	r6,16
  80d488:	31bfffc4 	addi	r6,r6,-1
  80d48c:	18c1ffcc 	andi	r3,r3,2047
  80d490:	19c0ffd0 	cmplti	r7,r3,1023
  80d494:	2810d7fa 	srli	r8,r5,31
  80d498:	298a703a 	and	r5,r5,r6
  80d49c:	3800061e 	bne	r7,zero,80d4b8 <__fixdfsi+0x38>
  80d4a0:	18810790 	cmplti	r2,r3,1054
  80d4a4:	1000061e 	bne	r2,zero,80d4c0 <__fixdfsi+0x40>
  80d4a8:	00a00034 	movhi	r2,32768
  80d4ac:	10bfffc4 	addi	r2,r2,-1
  80d4b0:	4085883a 	add	r2,r8,r2
  80d4b4:	f800283a 	ret
  80d4b8:	0005883a 	mov	r2,zero
  80d4bc:	f800283a 	ret
  80d4c0:	01810cc4 	movi	r6,1075
  80d4c4:	30cdc83a 	sub	r6,r6,r3
  80d4c8:	30800808 	cmpgei	r2,r6,32
  80d4cc:	29400434 	orhi	r5,r5,16
  80d4d0:	1000071e 	bne	r2,zero,80d4f0 <__fixdfsi+0x70>
  80d4d4:	18befb44 	addi	r2,r3,-1043
  80d4d8:	2884983a 	sll	r2,r5,r2
  80d4dc:	2188d83a 	srl	r4,r4,r6
  80d4e0:	1104b03a 	or	r2,r2,r4
  80d4e4:	403ff526 	beq	r8,zero,80d4bc <__fixdfsi+0x3c>
  80d4e8:	0085c83a 	sub	r2,zero,r2
  80d4ec:	f800283a 	ret
  80d4f0:	008104c4 	movi	r2,1043
  80d4f4:	10c5c83a 	sub	r2,r2,r3
  80d4f8:	2884d83a 	srl	r2,r5,r2
  80d4fc:	003ff906 	br	80d4e4 <__fixdfsi+0x64>

0080d500 <__floatsidf>:
  80d500:	defffd04 	addi	sp,sp,-12
  80d504:	dfc00215 	stw	ra,8(sp)
  80d508:	dc400115 	stw	r17,4(sp)
  80d50c:	dc000015 	stw	r16,0(sp)
  80d510:	20001326 	beq	r4,zero,80d560 <__floatsidf+0x60>
  80d514:	2022d7fa 	srli	r17,r4,31
  80d518:	2021883a 	mov	r16,r4
  80d51c:	20002416 	blt	r4,zero,80d5b0 <__floatsidf+0xb0>
  80d520:	8009883a 	mov	r4,r16
  80d524:	080088c0 	call	80088c <__clzsi2>
  80d528:	01010784 	movi	r4,1054
  80d52c:	2089c83a 	sub	r4,r4,r2
  80d530:	114002c8 	cmpgei	r5,r2,11
  80d534:	20c1ffcc 	andi	r3,r4,2047
  80d538:	2800161e 	bne	r5,zero,80d594 <__floatsidf+0x94>
  80d53c:	010002c4 	movi	r4,11
  80d540:	2089c83a 	sub	r4,r4,r2
  80d544:	810ad83a 	srl	r5,r16,r4
  80d548:	01000434 	movhi	r4,16
  80d54c:	10800544 	addi	r2,r2,21
  80d550:	213fffc4 	addi	r4,r4,-1
  80d554:	8084983a 	sll	r2,r16,r2
  80d558:	290a703a 	and	r5,r5,r4
  80d55c:	00000406 	br	80d570 <__floatsidf+0x70>
  80d560:	0023883a 	mov	r17,zero
  80d564:	0007883a 	mov	r3,zero
  80d568:	000b883a 	mov	r5,zero
  80d56c:	0005883a 	mov	r2,zero
  80d570:	1808953a 	slli	r4,r3,20
  80d574:	880697fa 	slli	r3,r17,31
  80d578:	2148b03a 	or	r4,r4,r5
  80d57c:	20c6b03a 	or	r3,r4,r3
  80d580:	dfc00217 	ldw	ra,8(sp)
  80d584:	dc400117 	ldw	r17,4(sp)
  80d588:	dc000017 	ldw	r16,0(sp)
  80d58c:	dec00304 	addi	sp,sp,12
  80d590:	f800283a 	ret
  80d594:	10bffd44 	addi	r2,r2,-11
  80d598:	808a983a 	sll	r5,r16,r2
  80d59c:	00800434 	movhi	r2,16
  80d5a0:	10bfffc4 	addi	r2,r2,-1
  80d5a4:	288a703a 	and	r5,r5,r2
  80d5a8:	0005883a 	mov	r2,zero
  80d5ac:	003ff006 	br	80d570 <__floatsidf+0x70>
  80d5b0:	0121c83a 	sub	r16,zero,r4
  80d5b4:	003fda06 	br	80d520 <__floatsidf+0x20>

0080d5b8 <__floatunsidf>:
  80d5b8:	defffe04 	addi	sp,sp,-8
  80d5bc:	dc000015 	stw	r16,0(sp)
  80d5c0:	dfc00115 	stw	ra,4(sp)
  80d5c4:	2021883a 	mov	r16,r4
  80d5c8:	20000f26 	beq	r4,zero,80d608 <__floatunsidf+0x50>
  80d5cc:	080088c0 	call	80088c <__clzsi2>
  80d5d0:	00c10784 	movi	r3,1054
  80d5d4:	1887c83a 	sub	r3,r3,r2
  80d5d8:	110002c8 	cmpgei	r4,r2,11
  80d5dc:	18c1ffcc 	andi	r3,r3,2047
  80d5e0:	2000121e 	bne	r4,zero,80d62c <__floatunsidf+0x74>
  80d5e4:	014002c4 	movi	r5,11
  80d5e8:	288bc83a 	sub	r5,r5,r2
  80d5ec:	814ad83a 	srl	r5,r16,r5
  80d5f0:	01000434 	movhi	r4,16
  80d5f4:	10800544 	addi	r2,r2,21
  80d5f8:	213fffc4 	addi	r4,r4,-1
  80d5fc:	80a0983a 	sll	r16,r16,r2
  80d600:	290a703a 	and	r5,r5,r4
  80d604:	00000206 	br	80d610 <__floatunsidf+0x58>
  80d608:	0007883a 	mov	r3,zero
  80d60c:	000b883a 	mov	r5,zero
  80d610:	1806953a 	slli	r3,r3,20
  80d614:	8005883a 	mov	r2,r16
  80d618:	1946b03a 	or	r3,r3,r5
  80d61c:	dfc00117 	ldw	ra,4(sp)
  80d620:	dc000017 	ldw	r16,0(sp)
  80d624:	dec00204 	addi	sp,sp,8
  80d628:	f800283a 	ret
  80d62c:	117ffd44 	addi	r5,r2,-11
  80d630:	814a983a 	sll	r5,r16,r5
  80d634:	00800434 	movhi	r2,16
  80d638:	10bfffc4 	addi	r2,r2,-1
  80d63c:	288a703a 	and	r5,r5,r2
  80d640:	0021883a 	mov	r16,zero
  80d644:	003ff206 	br	80d610 <__floatunsidf+0x58>

0080d648 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d648:	defffe04 	addi	sp,sp,-8
  80d64c:	dfc00115 	stw	ra,4(sp)
  80d650:	df000015 	stw	fp,0(sp)
  80d654:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d658:	d0a00917 	ldw	r2,-32732(gp)
  80d65c:	10000326 	beq	r2,zero,80d66c <alt_get_errno+0x24>
  80d660:	d0a00917 	ldw	r2,-32732(gp)
  80d664:	103ee83a 	callr	r2
  80d668:	00000106 	br	80d670 <alt_get_errno+0x28>
  80d66c:	d0a70704 	addi	r2,gp,-25572
}
  80d670:	e037883a 	mov	sp,fp
  80d674:	dfc00117 	ldw	ra,4(sp)
  80d678:	df000017 	ldw	fp,0(sp)
  80d67c:	dec00204 	addi	sp,sp,8
  80d680:	f800283a 	ret

0080d684 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d684:	defffb04 	addi	sp,sp,-20
  80d688:	dfc00415 	stw	ra,16(sp)
  80d68c:	df000315 	stw	fp,12(sp)
  80d690:	df000304 	addi	fp,sp,12
  80d694:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d698:	e0bffd17 	ldw	r2,-12(fp)
  80d69c:	10000616 	blt	r2,zero,80d6b8 <close+0x34>
  80d6a0:	e0bffd17 	ldw	r2,-12(fp)
  80d6a4:	10c00324 	muli	r3,r2,12
  80d6a8:	00802074 	movhi	r2,129
  80d6ac:	1083ec04 	addi	r2,r2,4016
  80d6b0:	1885883a 	add	r2,r3,r2
  80d6b4:	00000106 	br	80d6bc <close+0x38>
  80d6b8:	0005883a 	mov	r2,zero
  80d6bc:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  80d6c0:	e0bfff17 	ldw	r2,-4(fp)
  80d6c4:	10001926 	beq	r2,zero,80d72c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d6c8:	e0bfff17 	ldw	r2,-4(fp)
  80d6cc:	10800017 	ldw	r2,0(r2)
  80d6d0:	10800417 	ldw	r2,16(r2)
  80d6d4:	10000626 	beq	r2,zero,80d6f0 <close+0x6c>
  80d6d8:	e0bfff17 	ldw	r2,-4(fp)
  80d6dc:	10800017 	ldw	r2,0(r2)
  80d6e0:	10800417 	ldw	r2,16(r2)
  80d6e4:	e13fff17 	ldw	r4,-4(fp)
  80d6e8:	103ee83a 	callr	r2
  80d6ec:	00000106 	br	80d6f4 <close+0x70>
  80d6f0:	0005883a 	mov	r2,zero
  80d6f4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d6f8:	e13ffd17 	ldw	r4,-12(fp)
  80d6fc:	080df040 	call	80df04 <alt_release_fd>
    if (rval < 0)
  80d700:	e0bffe17 	ldw	r2,-8(fp)
  80d704:	1000070e 	bge	r2,zero,80d724 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80d708:	080d6480 	call	80d648 <alt_get_errno>
  80d70c:	1007883a 	mov	r3,r2
  80d710:	e0bffe17 	ldw	r2,-8(fp)
  80d714:	0085c83a 	sub	r2,zero,r2
  80d718:	18800015 	stw	r2,0(r3)
      return -1;
  80d71c:	00bfffc4 	movi	r2,-1
  80d720:	00000706 	br	80d740 <close+0xbc>
    }
    return 0;
  80d724:	0005883a 	mov	r2,zero
  80d728:	00000506 	br	80d740 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d72c:	080d6480 	call	80d648 <alt_get_errno>
  80d730:	1007883a 	mov	r3,r2
  80d734:	00801444 	movi	r2,81
  80d738:	18800015 	stw	r2,0(r3)
    return -1;
  80d73c:	00bfffc4 	movi	r2,-1
  }
}
  80d740:	e037883a 	mov	sp,fp
  80d744:	dfc00117 	ldw	ra,4(sp)
  80d748:	df000017 	ldw	fp,0(sp)
  80d74c:	dec00204 	addi	sp,sp,8
  80d750:	f800283a 	ret

0080d754 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d754:	defffc04 	addi	sp,sp,-16
  80d758:	df000315 	stw	fp,12(sp)
  80d75c:	df000304 	addi	fp,sp,12
  80d760:	e13fff15 	stw	r4,-4(fp)
  80d764:	e17ffe15 	stw	r5,-8(fp)
  80d768:	e1bffd15 	stw	r6,-12(fp)
  return len;
  80d76c:	e0bffd17 	ldw	r2,-12(fp)
}
  80d770:	e037883a 	mov	sp,fp
  80d774:	df000017 	ldw	fp,0(sp)
  80d778:	dec00104 	addi	sp,sp,4
  80d77c:	f800283a 	ret

0080d780 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80d780:	defffd04 	addi	sp,sp,-12
  80d784:	df000215 	stw	fp,8(sp)
  80d788:	df000204 	addi	fp,sp,8
  80d78c:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80d790:	0001883a 	nop
  80d794:	e0bffe17 	ldw	r2,-8(fp)
  80d798:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80d79c:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80d7a0:	10000226 	beq	r2,zero,80d7ac <_exit+0x2c>
    ALT_SIM_FAIL();
  80d7a4:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  80d7a8:	00000106 	br	80d7b0 <_exit+0x30>
    ALT_SIM_PASS();
  80d7ac:	002af0b0 	cmpltui	zero,zero,43970
}
  80d7b0:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80d7b4:	003fff06 	br	80d7b4 <_exit+0x34>

0080d7b8 <alt_get_errno>:
{
  80d7b8:	defffe04 	addi	sp,sp,-8
  80d7bc:	dfc00115 	stw	ra,4(sp)
  80d7c0:	df000015 	stw	fp,0(sp)
  80d7c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d7c8:	d0a00917 	ldw	r2,-32732(gp)
  80d7cc:	10000326 	beq	r2,zero,80d7dc <alt_get_errno+0x24>
  80d7d0:	d0a00917 	ldw	r2,-32732(gp)
  80d7d4:	103ee83a 	callr	r2
  80d7d8:	00000106 	br	80d7e0 <alt_get_errno+0x28>
  80d7dc:	d0a70704 	addi	r2,gp,-25572
}
  80d7e0:	e037883a 	mov	sp,fp
  80d7e4:	dfc00117 	ldw	ra,4(sp)
  80d7e8:	df000017 	ldw	fp,0(sp)
  80d7ec:	dec00204 	addi	sp,sp,8
  80d7f0:	f800283a 	ret

0080d7f4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d7f4:	defffb04 	addi	sp,sp,-20
  80d7f8:	dfc00415 	stw	ra,16(sp)
  80d7fc:	df000315 	stw	fp,12(sp)
  80d800:	df000304 	addi	fp,sp,12
  80d804:	e13ffe15 	stw	r4,-8(fp)
  80d808:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d80c:	e0bffe17 	ldw	r2,-8(fp)
  80d810:	10000616 	blt	r2,zero,80d82c <fstat+0x38>
  80d814:	e0bffe17 	ldw	r2,-8(fp)
  80d818:	10c00324 	muli	r3,r2,12
  80d81c:	00802074 	movhi	r2,129
  80d820:	1083ec04 	addi	r2,r2,4016
  80d824:	1885883a 	add	r2,r3,r2
  80d828:	00000106 	br	80d830 <fstat+0x3c>
  80d82c:	0005883a 	mov	r2,zero
  80d830:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80d834:	e0bfff17 	ldw	r2,-4(fp)
  80d838:	10001026 	beq	r2,zero,80d87c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d83c:	e0bfff17 	ldw	r2,-4(fp)
  80d840:	10800017 	ldw	r2,0(r2)
  80d844:	10800817 	ldw	r2,32(r2)
  80d848:	10000726 	beq	r2,zero,80d868 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80d84c:	e0bfff17 	ldw	r2,-4(fp)
  80d850:	10800017 	ldw	r2,0(r2)
  80d854:	10800817 	ldw	r2,32(r2)
  80d858:	e17ffd17 	ldw	r5,-12(fp)
  80d85c:	e13fff17 	ldw	r4,-4(fp)
  80d860:	103ee83a 	callr	r2
  80d864:	00000a06 	br	80d890 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d868:	e0bffd17 	ldw	r2,-12(fp)
  80d86c:	00c80004 	movi	r3,8192
  80d870:	10c00115 	stw	r3,4(r2)
      return 0;
  80d874:	0005883a 	mov	r2,zero
  80d878:	00000506 	br	80d890 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d87c:	080d7b80 	call	80d7b8 <alt_get_errno>
  80d880:	1007883a 	mov	r3,r2
  80d884:	00801444 	movi	r2,81
  80d888:	18800015 	stw	r2,0(r3)
    return -1;
  80d88c:	00bfffc4 	movi	r2,-1
  }
}
  80d890:	e037883a 	mov	sp,fp
  80d894:	dfc00117 	ldw	ra,4(sp)
  80d898:	df000017 	ldw	fp,0(sp)
  80d89c:	dec00204 	addi	sp,sp,8
  80d8a0:	f800283a 	ret

0080d8a4 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  80d8a4:	deffff04 	addi	sp,sp,-4
  80d8a8:	df000015 	stw	fp,0(sp)
  80d8ac:	d839883a 	mov	fp,sp
  return 0;
  80d8b0:	0005883a 	mov	r2,zero
}
  80d8b4:	e037883a 	mov	sp,fp
  80d8b8:	df000017 	ldw	fp,0(sp)
  80d8bc:	dec00104 	addi	sp,sp,4
  80d8c0:	f800283a 	ret

0080d8c4 <alt_get_errno>:
{
  80d8c4:	defffe04 	addi	sp,sp,-8
  80d8c8:	dfc00115 	stw	ra,4(sp)
  80d8cc:	df000015 	stw	fp,0(sp)
  80d8d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d8d4:	d0a00917 	ldw	r2,-32732(gp)
  80d8d8:	10000326 	beq	r2,zero,80d8e8 <alt_get_errno+0x24>
  80d8dc:	d0a00917 	ldw	r2,-32732(gp)
  80d8e0:	103ee83a 	callr	r2
  80d8e4:	00000106 	br	80d8ec <alt_get_errno+0x28>
  80d8e8:	d0a70704 	addi	r2,gp,-25572
}
  80d8ec:	e037883a 	mov	sp,fp
  80d8f0:	dfc00117 	ldw	ra,4(sp)
  80d8f4:	df000017 	ldw	fp,0(sp)
  80d8f8:	dec00204 	addi	sp,sp,8
  80d8fc:	f800283a 	ret

0080d900 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d900:	deffea04 	addi	sp,sp,-88
  80d904:	dfc01515 	stw	ra,84(sp)
  80d908:	df001415 	stw	fp,80(sp)
  80d90c:	df001404 	addi	fp,sp,80
  80d910:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d914:	e0bfec17 	ldw	r2,-80(fp)
  80d918:	10000616 	blt	r2,zero,80d934 <isatty+0x34>
  80d91c:	e0bfec17 	ldw	r2,-80(fp)
  80d920:	10c00324 	muli	r3,r2,12
  80d924:	00802074 	movhi	r2,129
  80d928:	1083ec04 	addi	r2,r2,4016
  80d92c:	1885883a 	add	r2,r3,r2
  80d930:	00000106 	br	80d938 <isatty+0x38>
  80d934:	0005883a 	mov	r2,zero
  80d938:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80d93c:	e0bfff17 	ldw	r2,-4(fp)
  80d940:	10000e26 	beq	r2,zero,80d97c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d944:	e0bfff17 	ldw	r2,-4(fp)
  80d948:	10800017 	ldw	r2,0(r2)
  80d94c:	10800817 	ldw	r2,32(r2)
  80d950:	1000021e 	bne	r2,zero,80d95c <isatty+0x5c>
    {
      return 1;
  80d954:	00800044 	movi	r2,1
  80d958:	00000d06 	br	80d990 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d95c:	e0bfed04 	addi	r2,fp,-76
  80d960:	100b883a 	mov	r5,r2
  80d964:	e13fec17 	ldw	r4,-80(fp)
  80d968:	080d7f40 	call	80d7f4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d96c:	e0bfee17 	ldw	r2,-72(fp)
  80d970:	10880020 	cmpeqi	r2,r2,8192
  80d974:	10803fcc 	andi	r2,r2,255
  80d978:	00000506 	br	80d990 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d97c:	080d8c40 	call	80d8c4 <alt_get_errno>
  80d980:	1007883a 	mov	r3,r2
  80d984:	00801444 	movi	r2,81
  80d988:	18800015 	stw	r2,0(r3)
    return 0;
  80d98c:	0005883a 	mov	r2,zero
  }
}
  80d990:	e037883a 	mov	sp,fp
  80d994:	dfc00117 	ldw	ra,4(sp)
  80d998:	df000017 	ldw	fp,0(sp)
  80d99c:	dec00204 	addi	sp,sp,8
  80d9a0:	f800283a 	ret

0080d9a4 <alt_get_errno>:
{
  80d9a4:	defffe04 	addi	sp,sp,-8
  80d9a8:	dfc00115 	stw	ra,4(sp)
  80d9ac:	df000015 	stw	fp,0(sp)
  80d9b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d9b4:	d0a00917 	ldw	r2,-32732(gp)
  80d9b8:	10000326 	beq	r2,zero,80d9c8 <alt_get_errno+0x24>
  80d9bc:	d0a00917 	ldw	r2,-32732(gp)
  80d9c0:	103ee83a 	callr	r2
  80d9c4:	00000106 	br	80d9cc <alt_get_errno+0x28>
  80d9c8:	d0a70704 	addi	r2,gp,-25572
}
  80d9cc:	e037883a 	mov	sp,fp
  80d9d0:	dfc00117 	ldw	ra,4(sp)
  80d9d4:	df000017 	ldw	fp,0(sp)
  80d9d8:	dec00204 	addi	sp,sp,8
  80d9dc:	f800283a 	ret

0080d9e0 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  80d9e0:	defffb04 	addi	sp,sp,-20
  80d9e4:	dfc00415 	stw	ra,16(sp)
  80d9e8:	df000315 	stw	fp,12(sp)
  80d9ec:	df000304 	addi	fp,sp,12
  80d9f0:	e13ffe15 	stw	r4,-8(fp)
  80d9f4:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  80d9f8:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  80d9fc:	e0bffe17 	ldw	r2,-8(fp)
  80da00:	00802e16 	blt	zero,r2,80dabc <kill+0xdc>
  80da04:	e0bffd17 	ldw	r2,-12(fp)
  80da08:	10800828 	cmpgeui	r2,r2,32
  80da0c:	1000281e 	bne	r2,zero,80dab0 <kill+0xd0>
  80da10:	e0bffd17 	ldw	r2,-12(fp)
  80da14:	100690ba 	slli	r3,r2,2
  80da18:	00802074 	movhi	r2,129
  80da1c:	1885883a 	add	r2,r3,r2
  80da20:	10b68a17 	ldw	r2,-9688(r2)
  80da24:	1000683a 	jmp	r2
  80da28:	0080dad0 	cmplti	r2,zero,875
  80da2c:	0080dab0 	cmpltui	r2,zero,874
  80da30:	0080dab0 	cmpltui	r2,zero,874
  80da34:	0080daa8 	cmpgeui	r2,zero,874
  80da38:	0080daa8 	cmpgeui	r2,zero,874
  80da3c:	0080daa8 	cmpgeui	r2,zero,874
  80da40:	0080daa8 	cmpgeui	r2,zero,874
  80da44:	0080dab0 	cmpltui	r2,zero,874
  80da48:	0080daa8 	cmpgeui	r2,zero,874
  80da4c:	0080daa8 	cmpgeui	r2,zero,874
  80da50:	0080daa8 	cmpgeui	r2,zero,874
  80da54:	0080daa8 	cmpgeui	r2,zero,874
  80da58:	0080daa8 	cmpgeui	r2,zero,874
  80da5c:	0080daa8 	cmpgeui	r2,zero,874
  80da60:	0080daa8 	cmpgeui	r2,zero,874
  80da64:	0080daa8 	cmpgeui	r2,zero,874
  80da68:	0080dad0 	cmplti	r2,zero,875
  80da6c:	0080dab0 	cmpltui	r2,zero,874
  80da70:	0080dab0 	cmpltui	r2,zero,874
  80da74:	0080dab0 	cmpltui	r2,zero,874
  80da78:	0080dad0 	cmplti	r2,zero,875
  80da7c:	0080dab0 	cmpltui	r2,zero,874
  80da80:	0080dab0 	cmpltui	r2,zero,874
  80da84:	0080daa8 	cmpgeui	r2,zero,874
  80da88:	0080daa8 	cmpgeui	r2,zero,874
  80da8c:	0080daa8 	cmpgeui	r2,zero,874
  80da90:	0080daa8 	cmpgeui	r2,zero,874
  80da94:	0080daa8 	cmpgeui	r2,zero,874
  80da98:	0080dab0 	cmpltui	r2,zero,874
  80da9c:	0080dab0 	cmpltui	r2,zero,874
  80daa0:	0080daa8 	cmpgeui	r2,zero,874
  80daa4:	0080daa8 	cmpgeui	r2,zero,874
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  80daa8:	0009883a 	mov	r4,zero
  80daac:	080d7800 	call	80d780 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  80dab0:	00800584 	movi	r2,22
  80dab4:	e0bfff15 	stw	r2,-4(fp)
  80dab8:	00000606 	br	80dad4 <kill+0xf4>
    }
  }

  else if (pid > 0)
  80dabc:	e0bffe17 	ldw	r2,-8(fp)
  80dac0:	0080040e 	bge	zero,r2,80dad4 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  80dac4:	008000c4 	movi	r2,3
  80dac8:	e0bfff15 	stw	r2,-4(fp)
  80dacc:	00000106 	br	80dad4 <kill+0xf4>
      break;
  80dad0:	0001883a 	nop
  }

  if (status)
  80dad4:	e0bfff17 	ldw	r2,-4(fp)
  80dad8:	10000626 	beq	r2,zero,80daf4 <kill+0x114>
  {
    ALT_ERRNO = status;
  80dadc:	080d9a40 	call	80d9a4 <alt_get_errno>
  80dae0:	1007883a 	mov	r3,r2
  80dae4:	e0bfff17 	ldw	r2,-4(fp)
  80dae8:	18800015 	stw	r2,0(r3)
    return -1;
  80daec:	00bfffc4 	movi	r2,-1
  80daf0:	00000106 	br	80daf8 <kill+0x118>
  }

  return 0;
  80daf4:	0005883a 	mov	r2,zero
}
  80daf8:	e037883a 	mov	sp,fp
  80dafc:	dfc00117 	ldw	ra,4(sp)
  80db00:	df000017 	ldw	fp,0(sp)
  80db04:	dec00204 	addi	sp,sp,8
  80db08:	f800283a 	ret

0080db0c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80db0c:	defffc04 	addi	sp,sp,-16
  80db10:	df000315 	stw	fp,12(sp)
  80db14:	df000304 	addi	fp,sp,12
  80db18:	e13fff15 	stw	r4,-4(fp)
  80db1c:	e17ffe15 	stw	r5,-8(fp)
  80db20:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  80db24:	e0fffe17 	ldw	r3,-8(fp)
  80db28:	e0bfff17 	ldw	r2,-4(fp)
  80db2c:	18800c26 	beq	r3,r2,80db60 <alt_load_section+0x54>
  {
    while( to != end )
  80db30:	00000806 	br	80db54 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80db34:	e0ffff17 	ldw	r3,-4(fp)
  80db38:	18800104 	addi	r2,r3,4
  80db3c:	e0bfff15 	stw	r2,-4(fp)
  80db40:	e0bffe17 	ldw	r2,-8(fp)
  80db44:	11000104 	addi	r4,r2,4
  80db48:	e13ffe15 	stw	r4,-8(fp)
  80db4c:	18c00017 	ldw	r3,0(r3)
  80db50:	10c00015 	stw	r3,0(r2)
    while( to != end )
  80db54:	e0fffe17 	ldw	r3,-8(fp)
  80db58:	e0bffd17 	ldw	r2,-12(fp)
  80db5c:	18bff51e 	bne	r3,r2,80db34 <alt_load_section+0x28>
    }
  }
}
  80db60:	0001883a 	nop
  80db64:	e037883a 	mov	sp,fp
  80db68:	df000017 	ldw	fp,0(sp)
  80db6c:	dec00104 	addi	sp,sp,4
  80db70:	f800283a 	ret

0080db74 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80db74:	defffe04 	addi	sp,sp,-8
  80db78:	dfc00115 	stw	ra,4(sp)
  80db7c:	df000015 	stw	fp,0(sp)
  80db80:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80db84:	01802074 	movhi	r6,129
  80db88:	31887204 	addi	r6,r6,8648
  80db8c:	01402074 	movhi	r5,129
  80db90:	29417c04 	addi	r5,r5,1520
  80db94:	01002074 	movhi	r4,129
  80db98:	21087204 	addi	r4,r4,8648
  80db9c:	080db0c0 	call	80db0c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80dba0:	01802034 	movhi	r6,128
  80dba4:	31808e04 	addi	r6,r6,568
  80dba8:	01402034 	movhi	r5,128
  80dbac:	29400804 	addi	r5,r5,32
  80dbb0:	01002034 	movhi	r4,128
  80dbb4:	21000804 	addi	r4,r4,32
  80dbb8:	080db0c0 	call	80db0c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80dbbc:	01802074 	movhi	r6,129
  80dbc0:	31817c04 	addi	r6,r6,1520
  80dbc4:	01402074 	movhi	r5,129
  80dbc8:	297fd404 	addi	r5,r5,-176
  80dbcc:	01002074 	movhi	r4,129
  80dbd0:	213fd404 	addi	r4,r4,-176
  80dbd4:	080db0c0 	call	80db0c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80dbd8:	080ef780 	call	80ef78 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80dbdc:	080f1700 	call	80f170 <alt_icache_flush_all>
}
  80dbe0:	0001883a 	nop
  80dbe4:	e037883a 	mov	sp,fp
  80dbe8:	dfc00117 	ldw	ra,4(sp)
  80dbec:	df000017 	ldw	fp,0(sp)
  80dbf0:	dec00204 	addi	sp,sp,8
  80dbf4:	f800283a 	ret

0080dbf8 <alt_get_errno>:
{
  80dbf8:	defffe04 	addi	sp,sp,-8
  80dbfc:	dfc00115 	stw	ra,4(sp)
  80dc00:	df000015 	stw	fp,0(sp)
  80dc04:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dc08:	d0a00917 	ldw	r2,-32732(gp)
  80dc0c:	10000326 	beq	r2,zero,80dc1c <alt_get_errno+0x24>
  80dc10:	d0a00917 	ldw	r2,-32732(gp)
  80dc14:	103ee83a 	callr	r2
  80dc18:	00000106 	br	80dc20 <alt_get_errno+0x28>
  80dc1c:	d0a70704 	addi	r2,gp,-25572
}
  80dc20:	e037883a 	mov	sp,fp
  80dc24:	dfc00117 	ldw	ra,4(sp)
  80dc28:	df000017 	ldw	fp,0(sp)
  80dc2c:	dec00204 	addi	sp,sp,8
  80dc30:	f800283a 	ret

0080dc34 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80dc34:	defff904 	addi	sp,sp,-28
  80dc38:	dfc00615 	stw	ra,24(sp)
  80dc3c:	df000515 	stw	fp,20(sp)
  80dc40:	df000504 	addi	fp,sp,20
  80dc44:	e13ffd15 	stw	r4,-12(fp)
  80dc48:	e17ffc15 	stw	r5,-16(fp)
  80dc4c:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80dc50:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dc54:	e0bffd17 	ldw	r2,-12(fp)
  80dc58:	10000616 	blt	r2,zero,80dc74 <lseek+0x40>
  80dc5c:	e0bffd17 	ldw	r2,-12(fp)
  80dc60:	10c00324 	muli	r3,r2,12
  80dc64:	00802074 	movhi	r2,129
  80dc68:	1083ec04 	addi	r2,r2,4016
  80dc6c:	1885883a 	add	r2,r3,r2
  80dc70:	00000106 	br	80dc78 <lseek+0x44>
  80dc74:	0005883a 	mov	r2,zero
  80dc78:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  80dc7c:	e0bffe17 	ldw	r2,-8(fp)
  80dc80:	10001026 	beq	r2,zero,80dcc4 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80dc84:	e0bffe17 	ldw	r2,-8(fp)
  80dc88:	10800017 	ldw	r2,0(r2)
  80dc8c:	10800717 	ldw	r2,28(r2)
  80dc90:	10000926 	beq	r2,zero,80dcb8 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80dc94:	e0bffe17 	ldw	r2,-8(fp)
  80dc98:	10800017 	ldw	r2,0(r2)
  80dc9c:	10800717 	ldw	r2,28(r2)
  80dca0:	e1bffb17 	ldw	r6,-20(fp)
  80dca4:	e17ffc17 	ldw	r5,-16(fp)
  80dca8:	e13ffe17 	ldw	r4,-8(fp)
  80dcac:	103ee83a 	callr	r2
  80dcb0:	e0bfff15 	stw	r2,-4(fp)
  80dcb4:	00000506 	br	80dccc <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80dcb8:	00bfde84 	movi	r2,-134
  80dcbc:	e0bfff15 	stw	r2,-4(fp)
  80dcc0:	00000206 	br	80dccc <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80dcc4:	00bfebc4 	movi	r2,-81
  80dcc8:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  80dccc:	e0bfff17 	ldw	r2,-4(fp)
  80dcd0:	1000070e 	bge	r2,zero,80dcf0 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80dcd4:	080dbf80 	call	80dbf8 <alt_get_errno>
  80dcd8:	1007883a 	mov	r3,r2
  80dcdc:	e0bfff17 	ldw	r2,-4(fp)
  80dce0:	0085c83a 	sub	r2,zero,r2
  80dce4:	18800015 	stw	r2,0(r3)
    rc = -1;
  80dce8:	00bfffc4 	movi	r2,-1
  80dcec:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  80dcf0:	e0bfff17 	ldw	r2,-4(fp)
}
  80dcf4:	e037883a 	mov	sp,fp
  80dcf8:	dfc00117 	ldw	ra,4(sp)
  80dcfc:	df000017 	ldw	fp,0(sp)
  80dd00:	dec00204 	addi	sp,sp,8
  80dd04:	f800283a 	ret

0080dd08 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80dd08:	defffd04 	addi	sp,sp,-12
  80dd0c:	dfc00215 	stw	ra,8(sp)
  80dd10:	df000115 	stw	fp,4(sp)
  80dd14:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80dd18:	0009883a 	mov	r4,zero
  80dd1c:	080e2300 	call	80e230 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80dd20:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80dd24:	080e26c0 	call	80e26c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80dd28:	01802074 	movhi	r6,129
  80dd2c:	31817404 	addi	r6,r6,1488
  80dd30:	01402074 	movhi	r5,129
  80dd34:	29417404 	addi	r5,r5,1488
  80dd38:	01002074 	movhi	r4,129
  80dd3c:	21017404 	addi	r4,r4,1488
  80dd40:	080f4ec0 	call	80f4ec <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80dd44:	080f0a80 	call	80f0a8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80dd48:	01002074 	movhi	r4,129
  80dd4c:	213c4304 	addi	r4,r4,-3828
  80dd50:	080fce00 	call	80fce0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80dd54:	d0a70917 	ldw	r2,-25564(gp)
  80dd58:	d0e70a17 	ldw	r3,-25560(gp)
  80dd5c:	d1270b17 	ldw	r4,-25556(gp)
  80dd60:	200d883a 	mov	r6,r4
  80dd64:	180b883a 	mov	r5,r3
  80dd68:	1009883a 	mov	r4,r2
  80dd6c:	08002840 	call	800284 <main>
  80dd70:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80dd74:	01000044 	movi	r4,1
  80dd78:	080d6840 	call	80d684 <close>
  exit (result);
  80dd7c:	e13fff17 	ldw	r4,-4(fp)
  80dd80:	080fcf40 	call	80fcf4 <exit>

0080dd84 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80dd84:	defffe04 	addi	sp,sp,-8
  80dd88:	df000115 	stw	fp,4(sp)
  80dd8c:	df000104 	addi	fp,sp,4
  80dd90:	e13fff15 	stw	r4,-4(fp)
}
  80dd94:	0001883a 	nop
  80dd98:	e037883a 	mov	sp,fp
  80dd9c:	df000017 	ldw	fp,0(sp)
  80dda0:	dec00104 	addi	sp,sp,4
  80dda4:	f800283a 	ret

0080dda8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80dda8:	defffe04 	addi	sp,sp,-8
  80ddac:	df000115 	stw	fp,4(sp)
  80ddb0:	df000104 	addi	fp,sp,4
  80ddb4:	e13fff15 	stw	r4,-4(fp)
}
  80ddb8:	0001883a 	nop
  80ddbc:	e037883a 	mov	sp,fp
  80ddc0:	df000017 	ldw	fp,0(sp)
  80ddc4:	dec00104 	addi	sp,sp,4
  80ddc8:	f800283a 	ret

0080ddcc <alt_get_errno>:
{
  80ddcc:	defffe04 	addi	sp,sp,-8
  80ddd0:	dfc00115 	stw	ra,4(sp)
  80ddd4:	df000015 	stw	fp,0(sp)
  80ddd8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dddc:	d0a00917 	ldw	r2,-32732(gp)
  80dde0:	10000326 	beq	r2,zero,80ddf0 <alt_get_errno+0x24>
  80dde4:	d0a00917 	ldw	r2,-32732(gp)
  80dde8:	103ee83a 	callr	r2
  80ddec:	00000106 	br	80ddf4 <alt_get_errno+0x28>
  80ddf0:	d0a70704 	addi	r2,gp,-25572
}
  80ddf4:	e037883a 	mov	sp,fp
  80ddf8:	dfc00117 	ldw	ra,4(sp)
  80ddfc:	df000017 	ldw	fp,0(sp)
  80de00:	dec00204 	addi	sp,sp,8
  80de04:	f800283a 	ret

0080de08 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80de08:	defff904 	addi	sp,sp,-28
  80de0c:	dfc00615 	stw	ra,24(sp)
  80de10:	df000515 	stw	fp,20(sp)
  80de14:	df000504 	addi	fp,sp,20
  80de18:	e13ffd15 	stw	r4,-12(fp)
  80de1c:	e17ffc15 	stw	r5,-16(fp)
  80de20:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80de24:	e0bffd17 	ldw	r2,-12(fp)
  80de28:	10000616 	blt	r2,zero,80de44 <read+0x3c>
  80de2c:	e0bffd17 	ldw	r2,-12(fp)
  80de30:	10c00324 	muli	r3,r2,12
  80de34:	00802074 	movhi	r2,129
  80de38:	1083ec04 	addi	r2,r2,4016
  80de3c:	1885883a 	add	r2,r3,r2
  80de40:	00000106 	br	80de48 <read+0x40>
  80de44:	0005883a 	mov	r2,zero
  80de48:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80de4c:	e0bfff17 	ldw	r2,-4(fp)
  80de50:	10002226 	beq	r2,zero,80dedc <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80de54:	e0bfff17 	ldw	r2,-4(fp)
  80de58:	10800217 	ldw	r2,8(r2)
  80de5c:	108000cc 	andi	r2,r2,3
  80de60:	10800060 	cmpeqi	r2,r2,1
  80de64:	1000181e 	bne	r2,zero,80dec8 <read+0xc0>
        (fd->dev->read))
  80de68:	e0bfff17 	ldw	r2,-4(fp)
  80de6c:	10800017 	ldw	r2,0(r2)
  80de70:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80de74:	10001426 	beq	r2,zero,80dec8 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80de78:	e0bfff17 	ldw	r2,-4(fp)
  80de7c:	10800017 	ldw	r2,0(r2)
  80de80:	10800517 	ldw	r2,20(r2)
  80de84:	e0fffb17 	ldw	r3,-20(fp)
  80de88:	180d883a 	mov	r6,r3
  80de8c:	e17ffc17 	ldw	r5,-16(fp)
  80de90:	e13fff17 	ldw	r4,-4(fp)
  80de94:	103ee83a 	callr	r2
  80de98:	e0bffe15 	stw	r2,-8(fp)
  80de9c:	e0bffe17 	ldw	r2,-8(fp)
  80dea0:	1000070e 	bge	r2,zero,80dec0 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80dea4:	080ddcc0 	call	80ddcc <alt_get_errno>
  80dea8:	1007883a 	mov	r3,r2
  80deac:	e0bffe17 	ldw	r2,-8(fp)
  80deb0:	0085c83a 	sub	r2,zero,r2
  80deb4:	18800015 	stw	r2,0(r3)
          return -1;
  80deb8:	00bfffc4 	movi	r2,-1
  80debc:	00000c06 	br	80def0 <read+0xe8>
        }
        return rval;
  80dec0:	e0bffe17 	ldw	r2,-8(fp)
  80dec4:	00000a06 	br	80def0 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80dec8:	080ddcc0 	call	80ddcc <alt_get_errno>
  80decc:	1007883a 	mov	r3,r2
  80ded0:	00800344 	movi	r2,13
  80ded4:	18800015 	stw	r2,0(r3)
  80ded8:	00000406 	br	80deec <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80dedc:	080ddcc0 	call	80ddcc <alt_get_errno>
  80dee0:	1007883a 	mov	r3,r2
  80dee4:	00801444 	movi	r2,81
  80dee8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80deec:	00bfffc4 	movi	r2,-1
}
  80def0:	e037883a 	mov	sp,fp
  80def4:	dfc00117 	ldw	ra,4(sp)
  80def8:	df000017 	ldw	fp,0(sp)
  80defc:	dec00204 	addi	sp,sp,8
  80df00:	f800283a 	ret

0080df04 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80df04:	defffe04 	addi	sp,sp,-8
  80df08:	df000115 	stw	fp,4(sp)
  80df0c:	df000104 	addi	fp,sp,4
  80df10:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80df14:	e0bfff17 	ldw	r2,-4(fp)
  80df18:	108000d0 	cmplti	r2,r2,3
  80df1c:	10000a1e 	bne	r2,zero,80df48 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
  80df20:	e0bfff17 	ldw	r2,-4(fp)
  80df24:	10c00324 	muli	r3,r2,12
  80df28:	00802074 	movhi	r2,129
  80df2c:	1885883a 	add	r2,r3,r2
  80df30:	1003ee15 	stw	zero,4024(r2)
    alt_fd_list[fd].dev      = 0;
  80df34:	e0bfff17 	ldw	r2,-4(fp)
  80df38:	10c00324 	muli	r3,r2,12
  80df3c:	00802074 	movhi	r2,129
  80df40:	1885883a 	add	r2,r3,r2
  80df44:	1003ec15 	stw	zero,4016(r2)
  }
}
  80df48:	0001883a 	nop
  80df4c:	e037883a 	mov	sp,fp
  80df50:	df000017 	ldw	fp,0(sp)
  80df54:	dec00104 	addi	sp,sp,4
  80df58:	f800283a 	ret

0080df5c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80df5c:	defff904 	addi	sp,sp,-28
  80df60:	df000615 	stw	fp,24(sp)
  80df64:	df000604 	addi	fp,sp,24
  80df68:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  80df6c:	0005303a 	rdctl	r2,status
  80df70:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80df74:	e0fffd17 	ldw	r3,-12(fp)
  80df78:	00bfff84 	movi	r2,-2
  80df7c:	1884703a 	and	r2,r3,r2
  80df80:	1001703a 	wrctl	status,r2
  return context;
  80df84:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80df88:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80df8c:	d0a00a17 	ldw	r2,-32728(gp)
  80df90:	10c000c4 	addi	r3,r2,3
  80df94:	00bfff04 	movi	r2,-4
  80df98:	1884703a 	and	r2,r3,r2
  80df9c:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80dfa0:	d0e00a17 	ldw	r3,-32728(gp)
  80dfa4:	e0bffa17 	ldw	r2,-24(fp)
  80dfa8:	1887883a 	add	r3,r3,r2
  80dfac:	00804034 	movhi	r2,256
  80dfb0:	10800004 	addi	r2,r2,0
  80dfb4:	10c0072e 	bgeu	r2,r3,80dfd4 <sbrk+0x78>
  80dfb8:	e0bfff17 	ldw	r2,-4(fp)
  80dfbc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80dfc0:	e0bffc17 	ldw	r2,-16(fp)
  80dfc4:	1001703a 	wrctl	status,r2
}
  80dfc8:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80dfcc:	00bfffc4 	movi	r2,-1
  80dfd0:	00000c06 	br	80e004 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80dfd4:	d0a00a17 	ldw	r2,-32728(gp)
  80dfd8:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  80dfdc:	d0e00a17 	ldw	r3,-32728(gp)
  80dfe0:	e0bffa17 	ldw	r2,-24(fp)
  80dfe4:	1885883a 	add	r2,r3,r2
  80dfe8:	d0a00a15 	stw	r2,-32728(gp)
  80dfec:	e0bfff17 	ldw	r2,-4(fp)
  80dff0:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80dff4:	e0bffb17 	ldw	r2,-20(fp)
  80dff8:	1001703a 	wrctl	status,r2
}
  80dffc:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80e000:	e0bffe17 	ldw	r2,-8(fp)
} 
  80e004:	e037883a 	mov	sp,fp
  80e008:	df000017 	ldw	fp,0(sp)
  80e00c:	dec00104 	addi	sp,sp,4
  80e010:	f800283a 	ret

0080e014 <alt_get_errno>:
{
  80e014:	defffe04 	addi	sp,sp,-8
  80e018:	dfc00115 	stw	ra,4(sp)
  80e01c:	df000015 	stw	fp,0(sp)
  80e020:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e024:	d0a00917 	ldw	r2,-32732(gp)
  80e028:	10000326 	beq	r2,zero,80e038 <alt_get_errno+0x24>
  80e02c:	d0a00917 	ldw	r2,-32732(gp)
  80e030:	103ee83a 	callr	r2
  80e034:	00000106 	br	80e03c <alt_get_errno+0x28>
  80e038:	d0a70704 	addi	r2,gp,-25572
}
  80e03c:	e037883a 	mov	sp,fp
  80e040:	dfc00117 	ldw	ra,4(sp)
  80e044:	df000017 	ldw	fp,0(sp)
  80e048:	dec00204 	addi	sp,sp,8
  80e04c:	f800283a 	ret

0080e050 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80e050:	defffc04 	addi	sp,sp,-16
  80e054:	dfc00315 	stw	ra,12(sp)
  80e058:	df000215 	stw	fp,8(sp)
  80e05c:	df000204 	addi	fp,sp,8
  80e060:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80e064:	d0a70e17 	ldw	r2,-25544(gp)
  clock_t ticks = alt_nticks(); 
  80e068:	e0bfff15 	stw	r2,-4(fp)
  return _alt_tick_rate;
  80e06c:	d0a70d17 	ldw	r2,-25548(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80e070:	1000061e 	bne	r2,zero,80e08c <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80e074:	080e0140 	call	80e014 <alt_get_errno>
  80e078:	1007883a 	mov	r3,r2
  80e07c:	00801604 	movi	r2,88
  80e080:	18800015 	stw	r2,0(r3)
    return 0;
  80e084:	0005883a 	mov	r2,zero
  80e088:	00000a06 	br	80e0b4 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80e08c:	e0bffe17 	ldw	r2,-8(fp)
  80e090:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80e094:	e0bffe17 	ldw	r2,-8(fp)
  80e098:	e0ffff17 	ldw	r3,-4(fp)
  80e09c:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  80e0a0:	e0bffe17 	ldw	r2,-8(fp)
  80e0a4:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80e0a8:	e0bffe17 	ldw	r2,-8(fp)
  80e0ac:	10000315 	stw	zero,12(r2)

  return ticks;
  80e0b0:	e0bfff17 	ldw	r2,-4(fp)
}
  80e0b4:	e037883a 	mov	sp,fp
  80e0b8:	dfc00117 	ldw	ra,4(sp)
  80e0bc:	df000017 	ldw	fp,0(sp)
  80e0c0:	dec00204 	addi	sp,sp,8
  80e0c4:	f800283a 	ret

0080e0c8 <alt_get_errno>:
{
  80e0c8:	defffe04 	addi	sp,sp,-8
  80e0cc:	dfc00115 	stw	ra,4(sp)
  80e0d0:	df000015 	stw	fp,0(sp)
  80e0d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e0d8:	d0a00917 	ldw	r2,-32732(gp)
  80e0dc:	10000326 	beq	r2,zero,80e0ec <alt_get_errno+0x24>
  80e0e0:	d0a00917 	ldw	r2,-32732(gp)
  80e0e4:	103ee83a 	callr	r2
  80e0e8:	00000106 	br	80e0f0 <alt_get_errno+0x28>
  80e0ec:	d0a70704 	addi	r2,gp,-25572
}
  80e0f0:	e037883a 	mov	sp,fp
  80e0f4:	dfc00117 	ldw	ra,4(sp)
  80e0f8:	df000017 	ldw	fp,0(sp)
  80e0fc:	dec00204 	addi	sp,sp,8
  80e100:	f800283a 	ret

0080e104 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80e104:	defff904 	addi	sp,sp,-28
  80e108:	dfc00615 	stw	ra,24(sp)
  80e10c:	df000515 	stw	fp,20(sp)
  80e110:	df000504 	addi	fp,sp,20
  80e114:	e13ffd15 	stw	r4,-12(fp)
  80e118:	e17ffc15 	stw	r5,-16(fp)
  80e11c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e120:	e0bffd17 	ldw	r2,-12(fp)
  80e124:	10000616 	blt	r2,zero,80e140 <write+0x3c>
  80e128:	e0bffd17 	ldw	r2,-12(fp)
  80e12c:	10c00324 	muli	r3,r2,12
  80e130:	00802074 	movhi	r2,129
  80e134:	1083ec04 	addi	r2,r2,4016
  80e138:	1885883a 	add	r2,r3,r2
  80e13c:	00000106 	br	80e144 <write+0x40>
  80e140:	0005883a 	mov	r2,zero
  80e144:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e148:	e0bfff17 	ldw	r2,-4(fp)
  80e14c:	10002126 	beq	r2,zero,80e1d4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80e150:	e0bfff17 	ldw	r2,-4(fp)
  80e154:	10800217 	ldw	r2,8(r2)
  80e158:	108000cc 	andi	r2,r2,3
  80e15c:	10001826 	beq	r2,zero,80e1c0 <write+0xbc>
  80e160:	e0bfff17 	ldw	r2,-4(fp)
  80e164:	10800017 	ldw	r2,0(r2)
  80e168:	10800617 	ldw	r2,24(r2)
  80e16c:	10001426 	beq	r2,zero,80e1c0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80e170:	e0bfff17 	ldw	r2,-4(fp)
  80e174:	10800017 	ldw	r2,0(r2)
  80e178:	10800617 	ldw	r2,24(r2)
  80e17c:	e0fffb17 	ldw	r3,-20(fp)
  80e180:	180d883a 	mov	r6,r3
  80e184:	e17ffc17 	ldw	r5,-16(fp)
  80e188:	e13fff17 	ldw	r4,-4(fp)
  80e18c:	103ee83a 	callr	r2
  80e190:	e0bffe15 	stw	r2,-8(fp)
  80e194:	e0bffe17 	ldw	r2,-8(fp)
  80e198:	1000070e 	bge	r2,zero,80e1b8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80e19c:	080e0c80 	call	80e0c8 <alt_get_errno>
  80e1a0:	1007883a 	mov	r3,r2
  80e1a4:	e0bffe17 	ldw	r2,-8(fp)
  80e1a8:	0085c83a 	sub	r2,zero,r2
  80e1ac:	18800015 	stw	r2,0(r3)
        return -1;
  80e1b0:	00bfffc4 	movi	r2,-1
  80e1b4:	00000c06 	br	80e1e8 <write+0xe4>
      }
      return rval;
  80e1b8:	e0bffe17 	ldw	r2,-8(fp)
  80e1bc:	00000a06 	br	80e1e8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80e1c0:	080e0c80 	call	80e0c8 <alt_get_errno>
  80e1c4:	1007883a 	mov	r3,r2
  80e1c8:	00800344 	movi	r2,13
  80e1cc:	18800015 	stw	r2,0(r3)
  80e1d0:	00000406 	br	80e1e4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80e1d4:	080e0c80 	call	80e0c8 <alt_get_errno>
  80e1d8:	1007883a 	mov	r3,r2
  80e1dc:	00801444 	movi	r2,81
  80e1e0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e1e4:	00bfffc4 	movi	r2,-1
}
  80e1e8:	e037883a 	mov	sp,fp
  80e1ec:	dfc00117 	ldw	ra,4(sp)
  80e1f0:	df000017 	ldw	fp,0(sp)
  80e1f4:	dec00204 	addi	sp,sp,8
  80e1f8:	f800283a 	ret

0080e1fc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80e1fc:	defffd04 	addi	sp,sp,-12
  80e200:	dfc00215 	stw	ra,8(sp)
  80e204:	df000115 	stw	fp,4(sp)
  80e208:	df000104 	addi	fp,sp,4
  80e20c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80e210:	d1600604 	addi	r5,gp,-32744
  80e214:	e13fff17 	ldw	r4,-4(fp)
  80e218:	080f0000 	call	80f000 <alt_dev_llist_insert>
}
  80e21c:	e037883a 	mov	sp,fp
  80e220:	dfc00117 	ldw	ra,4(sp)
  80e224:	df000017 	ldw	fp,0(sp)
  80e228:	dec00204 	addi	sp,sp,8
  80e22c:	f800283a 	ret

0080e230 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80e230:	defffd04 	addi	sp,sp,-12
  80e234:	dfc00215 	stw	ra,8(sp)
  80e238:	df000115 	stw	fp,4(sp)
  80e23c:	df000104 	addi	fp,sp,4
  80e240:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80e244:	080f95c0 	call	80f95c <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80e248:	00800044 	movi	r2,1
  80e24c:	1001703a 	wrctl	status,r2
}
  80e250:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  80e254:	0001883a 	nop
  80e258:	e037883a 	mov	sp,fp
  80e25c:	dfc00117 	ldw	ra,4(sp)
  80e260:	df000017 	ldw	fp,0(sp)
  80e264:	dec00204 	addi	sp,sp,8
  80e268:	f800283a 	ret

0080e26c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80e26c:	defffe04 	addi	sp,sp,-8
  80e270:	dfc00115 	stw	ra,4(sp)
  80e274:	df000015 	stw	fp,0(sp)
  80e278:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80e27c:	01c0fa04 	movi	r7,1000
  80e280:	01800044 	movi	r6,1
  80e284:	000b883a 	mov	r5,zero
  80e288:	01004034 	movhi	r4,256
  80e28c:	21040004 	addi	r4,r4,4096
  80e290:	080edc00 	call	80edc0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80e294:	01800404 	movi	r6,16
  80e298:	000b883a 	mov	r5,zero
  80e29c:	01002074 	movhi	r4,129
  80e2a0:	21045604 	addi	r4,r4,4440
  80e2a4:	080e4340 	call	80e434 <altera_avalon_jtag_uart_init>
  80e2a8:	01002074 	movhi	r4,129
  80e2ac:	21044c04 	addi	r4,r4,4400
  80e2b0:	080e1fc0 	call	80e1fc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80e2b4:	0001883a 	nop
}
  80e2b8:	0001883a 	nop
  80e2bc:	e037883a 	mov	sp,fp
  80e2c0:	dfc00117 	ldw	ra,4(sp)
  80e2c4:	df000017 	ldw	fp,0(sp)
  80e2c8:	dec00204 	addi	sp,sp,8
  80e2cc:	f800283a 	ret

0080e2d0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80e2d0:	defffa04 	addi	sp,sp,-24
  80e2d4:	dfc00515 	stw	ra,20(sp)
  80e2d8:	df000415 	stw	fp,16(sp)
  80e2dc:	df000404 	addi	fp,sp,16
  80e2e0:	e13ffe15 	stw	r4,-8(fp)
  80e2e4:	e17ffd15 	stw	r5,-12(fp)
  80e2e8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e2ec:	e0bffe17 	ldw	r2,-8(fp)
  80e2f0:	10800017 	ldw	r2,0(r2)
  80e2f4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80e2f8:	e0bfff17 	ldw	r2,-4(fp)
  80e2fc:	10c00a04 	addi	r3,r2,40
  80e300:	e0bffe17 	ldw	r2,-8(fp)
  80e304:	10800217 	ldw	r2,8(r2)
  80e308:	100f883a 	mov	r7,r2
  80e30c:	e1bffc17 	ldw	r6,-16(fp)
  80e310:	e17ffd17 	ldw	r5,-12(fp)
  80e314:	1809883a 	mov	r4,r3
  80e318:	080e8fc0 	call	80e8fc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80e31c:	e037883a 	mov	sp,fp
  80e320:	dfc00117 	ldw	ra,4(sp)
  80e324:	df000017 	ldw	fp,0(sp)
  80e328:	dec00204 	addi	sp,sp,8
  80e32c:	f800283a 	ret

0080e330 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80e330:	defffa04 	addi	sp,sp,-24
  80e334:	dfc00515 	stw	ra,20(sp)
  80e338:	df000415 	stw	fp,16(sp)
  80e33c:	df000404 	addi	fp,sp,16
  80e340:	e13ffe15 	stw	r4,-8(fp)
  80e344:	e17ffd15 	stw	r5,-12(fp)
  80e348:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e34c:	e0bffe17 	ldw	r2,-8(fp)
  80e350:	10800017 	ldw	r2,0(r2)
  80e354:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80e358:	e0bfff17 	ldw	r2,-4(fp)
  80e35c:	10c00a04 	addi	r3,r2,40
  80e360:	e0bffe17 	ldw	r2,-8(fp)
  80e364:	10800217 	ldw	r2,8(r2)
  80e368:	100f883a 	mov	r7,r2
  80e36c:	e1bffc17 	ldw	r6,-16(fp)
  80e370:	e17ffd17 	ldw	r5,-12(fp)
  80e374:	1809883a 	mov	r4,r3
  80e378:	080eb1c0 	call	80eb1c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80e37c:	e037883a 	mov	sp,fp
  80e380:	dfc00117 	ldw	ra,4(sp)
  80e384:	df000017 	ldw	fp,0(sp)
  80e388:	dec00204 	addi	sp,sp,8
  80e38c:	f800283a 	ret

0080e390 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80e390:	defffc04 	addi	sp,sp,-16
  80e394:	dfc00315 	stw	ra,12(sp)
  80e398:	df000215 	stw	fp,8(sp)
  80e39c:	df000204 	addi	fp,sp,8
  80e3a0:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e3a4:	e0bffe17 	ldw	r2,-8(fp)
  80e3a8:	10800017 	ldw	r2,0(r2)
  80e3ac:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80e3b0:	e0bfff17 	ldw	r2,-4(fp)
  80e3b4:	10c00a04 	addi	r3,r2,40
  80e3b8:	e0bffe17 	ldw	r2,-8(fp)
  80e3bc:	10800217 	ldw	r2,8(r2)
  80e3c0:	100b883a 	mov	r5,r2
  80e3c4:	1809883a 	mov	r4,r3
  80e3c8:	080e7a00 	call	80e7a0 <altera_avalon_jtag_uart_close>
}
  80e3cc:	e037883a 	mov	sp,fp
  80e3d0:	dfc00117 	ldw	ra,4(sp)
  80e3d4:	df000017 	ldw	fp,0(sp)
  80e3d8:	dec00204 	addi	sp,sp,8
  80e3dc:	f800283a 	ret

0080e3e0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80e3e0:	defffa04 	addi	sp,sp,-24
  80e3e4:	dfc00515 	stw	ra,20(sp)
  80e3e8:	df000415 	stw	fp,16(sp)
  80e3ec:	df000404 	addi	fp,sp,16
  80e3f0:	e13ffe15 	stw	r4,-8(fp)
  80e3f4:	e17ffd15 	stw	r5,-12(fp)
  80e3f8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80e3fc:	e0bffe17 	ldw	r2,-8(fp)
  80e400:	10800017 	ldw	r2,0(r2)
  80e404:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80e408:	e0bfff17 	ldw	r2,-4(fp)
  80e40c:	10800a04 	addi	r2,r2,40
  80e410:	e1bffc17 	ldw	r6,-16(fp)
  80e414:	e17ffd17 	ldw	r5,-12(fp)
  80e418:	1009883a 	mov	r4,r2
  80e41c:	080e8080 	call	80e808 <altera_avalon_jtag_uart_ioctl>
}
  80e420:	e037883a 	mov	sp,fp
  80e424:	dfc00117 	ldw	ra,4(sp)
  80e428:	df000017 	ldw	fp,0(sp)
  80e42c:	dec00204 	addi	sp,sp,8
  80e430:	f800283a 	ret

0080e434 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80e434:	defffa04 	addi	sp,sp,-24
  80e438:	dfc00515 	stw	ra,20(sp)
  80e43c:	df000415 	stw	fp,16(sp)
  80e440:	df000404 	addi	fp,sp,16
  80e444:	e13fff15 	stw	r4,-4(fp)
  80e448:	e17ffe15 	stw	r5,-8(fp)
  80e44c:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e450:	e0bfff17 	ldw	r2,-4(fp)
  80e454:	00c00044 	movi	r3,1
  80e458:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e45c:	e0bfff17 	ldw	r2,-4(fp)
  80e460:	10800017 	ldw	r2,0(r2)
  80e464:	10800104 	addi	r2,r2,4
  80e468:	1007883a 	mov	r3,r2
  80e46c:	e0bfff17 	ldw	r2,-4(fp)
  80e470:	10800817 	ldw	r2,32(r2)
  80e474:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80e478:	e0bffe17 	ldw	r2,-8(fp)
  80e47c:	e0fffd17 	ldw	r3,-12(fp)
  80e480:	d8000015 	stw	zero,0(sp)
  80e484:	e1ffff17 	ldw	r7,-4(fp)
  80e488:	01802074 	movhi	r6,129
  80e48c:	31b93d04 	addi	r6,r6,-6924
  80e490:	180b883a 	mov	r5,r3
  80e494:	1009883a 	mov	r4,r2
  80e498:	080f1a40 	call	80f1a4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e49c:	e0bfff17 	ldw	r2,-4(fp)
  80e4a0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e4a4:	e0bfff17 	ldw	r2,-4(fp)
  80e4a8:	10800204 	addi	r2,r2,8
  80e4ac:	d0e70d17 	ldw	r3,-25548(gp)
  80e4b0:	e1ffff17 	ldw	r7,-4(fp)
  80e4b4:	01802074 	movhi	r6,129
  80e4b8:	31b9c004 	addi	r6,r6,-6400
  80e4bc:	180b883a 	mov	r5,r3
  80e4c0:	1009883a 	mov	r4,r2
  80e4c4:	080ee440 	call	80ee44 <alt_alarm_start>
  80e4c8:	1000040e 	bge	r2,zero,80e4dc <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e4cc:	e0ffff17 	ldw	r3,-4(fp)
  80e4d0:	00a00034 	movhi	r2,32768
  80e4d4:	10bfffc4 	addi	r2,r2,-1
  80e4d8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e4dc:	0001883a 	nop
  80e4e0:	e037883a 	mov	sp,fp
  80e4e4:	dfc00117 	ldw	ra,4(sp)
  80e4e8:	df000017 	ldw	fp,0(sp)
  80e4ec:	dec00204 	addi	sp,sp,8
  80e4f0:	f800283a 	ret

0080e4f4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e4f4:	defff804 	addi	sp,sp,-32
  80e4f8:	df000715 	stw	fp,28(sp)
  80e4fc:	df000704 	addi	fp,sp,28
  80e500:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e504:	e0bff917 	ldw	r2,-28(fp)
  80e508:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  80e50c:	e0bffd17 	ldw	r2,-12(fp)
  80e510:	10800017 	ldw	r2,0(r2)
  80e514:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e518:	e0bffc17 	ldw	r2,-16(fp)
  80e51c:	10800104 	addi	r2,r2,4
  80e520:	10800037 	ldwio	r2,0(r2)
  80e524:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e528:	e0bffb17 	ldw	r2,-20(fp)
  80e52c:	1080c00c 	andi	r2,r2,768
  80e530:	10006d26 	beq	r2,zero,80e6e8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e534:	e0bffb17 	ldw	r2,-20(fp)
  80e538:	1080400c 	andi	r2,r2,256
  80e53c:	10003526 	beq	r2,zero,80e614 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80e540:	00800074 	movhi	r2,1
  80e544:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e548:	e0bffd17 	ldw	r2,-12(fp)
  80e54c:	10800a17 	ldw	r2,40(r2)
  80e550:	10800044 	addi	r2,r2,1
  80e554:	1081ffcc 	andi	r2,r2,2047
  80e558:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80e55c:	e0bffd17 	ldw	r2,-12(fp)
  80e560:	10800b17 	ldw	r2,44(r2)
  80e564:	e0fffa17 	ldw	r3,-24(fp)
  80e568:	18801526 	beq	r3,r2,80e5c0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80e56c:	e0bffc17 	ldw	r2,-16(fp)
  80e570:	10800037 	ldwio	r2,0(r2)
  80e574:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80e578:	e0bfff17 	ldw	r2,-4(fp)
  80e57c:	10a0000c 	andi	r2,r2,32768
  80e580:	10001126 	beq	r2,zero,80e5c8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80e584:	e0bffd17 	ldw	r2,-12(fp)
  80e588:	10800a17 	ldw	r2,40(r2)
  80e58c:	e0ffff17 	ldw	r3,-4(fp)
  80e590:	1809883a 	mov	r4,r3
  80e594:	e0fffd17 	ldw	r3,-12(fp)
  80e598:	1885883a 	add	r2,r3,r2
  80e59c:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e5a0:	e0bffd17 	ldw	r2,-12(fp)
  80e5a4:	10800a17 	ldw	r2,40(r2)
  80e5a8:	10800044 	addi	r2,r2,1
  80e5ac:	10c1ffcc 	andi	r3,r2,2047
  80e5b0:	e0bffd17 	ldw	r2,-12(fp)
  80e5b4:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80e5b8:	0001883a 	nop
      {
  80e5bc:	003fe206 	br	80e548 <altera_avalon_jtag_uart_irq+0x54>
          break;
  80e5c0:	0001883a 	nop
  80e5c4:	00000106 	br	80e5cc <altera_avalon_jtag_uart_irq+0xd8>
          break;
  80e5c8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80e5cc:	e0bfff17 	ldw	r2,-4(fp)
  80e5d0:	10bfffec 	andhi	r2,r2,65535
  80e5d4:	10000f26 	beq	r2,zero,80e614 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e5d8:	e0bffd17 	ldw	r2,-12(fp)
  80e5dc:	10c00817 	ldw	r3,32(r2)
  80e5e0:	00bfff84 	movi	r2,-2
  80e5e4:	1886703a 	and	r3,r3,r2
  80e5e8:	e0bffd17 	ldw	r2,-12(fp)
  80e5ec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80e5f0:	e0bffc17 	ldw	r2,-16(fp)
  80e5f4:	10800104 	addi	r2,r2,4
  80e5f8:	1007883a 	mov	r3,r2
  80e5fc:	e0bffd17 	ldw	r2,-12(fp)
  80e600:	10800817 	ldw	r2,32(r2)
  80e604:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e608:	e0bffc17 	ldw	r2,-16(fp)
  80e60c:	10800104 	addi	r2,r2,4
  80e610:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80e614:	e0bffb17 	ldw	r2,-20(fp)
  80e618:	1080800c 	andi	r2,r2,512
  80e61c:	103fbe26 	beq	r2,zero,80e518 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80e620:	e0bffb17 	ldw	r2,-20(fp)
  80e624:	1004d43a 	srli	r2,r2,16
  80e628:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e62c:	00001406 	br	80e680 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80e630:	e0bffc17 	ldw	r2,-16(fp)
  80e634:	e0fffd17 	ldw	r3,-12(fp)
  80e638:	18c00d17 	ldw	r3,52(r3)
  80e63c:	e13ffd17 	ldw	r4,-12(fp)
  80e640:	20c7883a 	add	r3,r4,r3
  80e644:	18c20e03 	ldbu	r3,2104(r3)
  80e648:	18c03fcc 	andi	r3,r3,255
  80e64c:	18c0201c 	xori	r3,r3,128
  80e650:	18ffe004 	addi	r3,r3,-128
  80e654:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e658:	e0bffd17 	ldw	r2,-12(fp)
  80e65c:	10800d17 	ldw	r2,52(r2)
  80e660:	10800044 	addi	r2,r2,1
  80e664:	10c1ffcc 	andi	r3,r2,2047
  80e668:	e0bffd17 	ldw	r2,-12(fp)
  80e66c:	10c00d15 	stw	r3,52(r2)
  80e670:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80e674:	e0bffe17 	ldw	r2,-8(fp)
  80e678:	10bfffc4 	addi	r2,r2,-1
  80e67c:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  80e680:	e0bffe17 	ldw	r2,-8(fp)
  80e684:	10000526 	beq	r2,zero,80e69c <altera_avalon_jtag_uart_irq+0x1a8>
  80e688:	e0bffd17 	ldw	r2,-12(fp)
  80e68c:	10c00d17 	ldw	r3,52(r2)
  80e690:	e0bffd17 	ldw	r2,-12(fp)
  80e694:	10800c17 	ldw	r2,48(r2)
  80e698:	18bfe51e 	bne	r3,r2,80e630 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
  80e69c:	e0bffe17 	ldw	r2,-8(fp)
  80e6a0:	103f9d26 	beq	r2,zero,80e518 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e6a4:	e0bffd17 	ldw	r2,-12(fp)
  80e6a8:	10c00817 	ldw	r3,32(r2)
  80e6ac:	00bfff44 	movi	r2,-3
  80e6b0:	1886703a 	and	r3,r3,r2
  80e6b4:	e0bffd17 	ldw	r2,-12(fp)
  80e6b8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e6bc:	e0bffd17 	ldw	r2,-12(fp)
  80e6c0:	10800017 	ldw	r2,0(r2)
  80e6c4:	10800104 	addi	r2,r2,4
  80e6c8:	1007883a 	mov	r3,r2
  80e6cc:	e0bffd17 	ldw	r2,-12(fp)
  80e6d0:	10800817 	ldw	r2,32(r2)
  80e6d4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e6d8:	e0bffc17 	ldw	r2,-16(fp)
  80e6dc:	10800104 	addi	r2,r2,4
  80e6e0:	10800037 	ldwio	r2,0(r2)
  {
  80e6e4:	003f8c06 	br	80e518 <altera_avalon_jtag_uart_irq+0x24>
      break;
  80e6e8:	0001883a 	nop
      }
    }
  }
}
  80e6ec:	0001883a 	nop
  80e6f0:	e037883a 	mov	sp,fp
  80e6f4:	df000017 	ldw	fp,0(sp)
  80e6f8:	dec00104 	addi	sp,sp,4
  80e6fc:	f800283a 	ret

0080e700 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80e700:	defffc04 	addi	sp,sp,-16
  80e704:	df000315 	stw	fp,12(sp)
  80e708:	df000304 	addi	fp,sp,12
  80e70c:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80e710:	e0bffd17 	ldw	r2,-12(fp)
  80e714:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80e718:	e0bfff17 	ldw	r2,-4(fp)
  80e71c:	10800017 	ldw	r2,0(r2)
  80e720:	10800104 	addi	r2,r2,4
  80e724:	10800037 	ldwio	r2,0(r2)
  80e728:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80e72c:	e0bffe17 	ldw	r2,-8(fp)
  80e730:	1081000c 	andi	r2,r2,1024
  80e734:	10000b26 	beq	r2,zero,80e764 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80e738:	e0bfff17 	ldw	r2,-4(fp)
  80e73c:	10800017 	ldw	r2,0(r2)
  80e740:	10800104 	addi	r2,r2,4
  80e744:	1007883a 	mov	r3,r2
  80e748:	e0bfff17 	ldw	r2,-4(fp)
  80e74c:	10800817 	ldw	r2,32(r2)
  80e750:	10810014 	ori	r2,r2,1024
  80e754:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80e758:	e0bfff17 	ldw	r2,-4(fp)
  80e75c:	10000915 	stw	zero,36(r2)
  80e760:	00000a06 	br	80e78c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80e764:	e0bfff17 	ldw	r2,-4(fp)
  80e768:	10c00917 	ldw	r3,36(r2)
  80e76c:	00a00034 	movhi	r2,32768
  80e770:	10bfff04 	addi	r2,r2,-4
  80e774:	10c00536 	bltu	r2,r3,80e78c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80e778:	e0bfff17 	ldw	r2,-4(fp)
  80e77c:	10800917 	ldw	r2,36(r2)
  80e780:	10c00044 	addi	r3,r2,1
  80e784:	e0bfff17 	ldw	r2,-4(fp)
  80e788:	10c00915 	stw	r3,36(r2)
  80e78c:	d0a70d17 	ldw	r2,-25548(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80e790:	e037883a 	mov	sp,fp
  80e794:	df000017 	ldw	fp,0(sp)
  80e798:	dec00104 	addi	sp,sp,4
  80e79c:	f800283a 	ret

0080e7a0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80e7a0:	defffd04 	addi	sp,sp,-12
  80e7a4:	df000215 	stw	fp,8(sp)
  80e7a8:	df000204 	addi	fp,sp,8
  80e7ac:	e13fff15 	stw	r4,-4(fp)
  80e7b0:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e7b4:	00000506 	br	80e7cc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80e7b8:	e0bffe17 	ldw	r2,-8(fp)
  80e7bc:	1090000c 	andi	r2,r2,16384
  80e7c0:	10000226 	beq	r2,zero,80e7cc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80e7c4:	00bffd44 	movi	r2,-11
  80e7c8:	00000b06 	br	80e7f8 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e7cc:	e0bfff17 	ldw	r2,-4(fp)
  80e7d0:	10c00d17 	ldw	r3,52(r2)
  80e7d4:	e0bfff17 	ldw	r2,-4(fp)
  80e7d8:	10800c17 	ldw	r2,48(r2)
  80e7dc:	18800526 	beq	r3,r2,80e7f4 <altera_avalon_jtag_uart_close+0x54>
  80e7e0:	e0bfff17 	ldw	r2,-4(fp)
  80e7e4:	10c00917 	ldw	r3,36(r2)
  80e7e8:	e0bfff17 	ldw	r2,-4(fp)
  80e7ec:	10800117 	ldw	r2,4(r2)
  80e7f0:	18bff136 	bltu	r3,r2,80e7b8 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  80e7f4:	0005883a 	mov	r2,zero
}
  80e7f8:	e037883a 	mov	sp,fp
  80e7fc:	df000017 	ldw	fp,0(sp)
  80e800:	dec00104 	addi	sp,sp,4
  80e804:	f800283a 	ret

0080e808 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e808:	defffa04 	addi	sp,sp,-24
  80e80c:	df000515 	stw	fp,20(sp)
  80e810:	df000504 	addi	fp,sp,20
  80e814:	e13ffd15 	stw	r4,-12(fp)
  80e818:	e17ffc15 	stw	r5,-16(fp)
  80e81c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  80e820:	00bff9c4 	movi	r2,-25
  80e824:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  80e828:	e0bffc17 	ldw	r2,-16(fp)
  80e82c:	109a8060 	cmpeqi	r2,r2,27137
  80e830:	1000041e 	bne	r2,zero,80e844 <altera_avalon_jtag_uart_ioctl+0x3c>
  80e834:	e0bffc17 	ldw	r2,-16(fp)
  80e838:	109a80a0 	cmpeqi	r2,r2,27138
  80e83c:	1000181e 	bne	r2,zero,80e8a0 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  80e840:	00002906 	br	80e8e8 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  80e844:	e0bffd17 	ldw	r2,-12(fp)
  80e848:	10c00117 	ldw	r3,4(r2)
  80e84c:	00a00034 	movhi	r2,32768
  80e850:	10bfffc4 	addi	r2,r2,-1
  80e854:	18802126 	beq	r3,r2,80e8dc <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  80e858:	e0bffb17 	ldw	r2,-20(fp)
  80e85c:	10800017 	ldw	r2,0(r2)
  80e860:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e864:	e0bffe17 	ldw	r2,-8(fp)
  80e868:	10800090 	cmplti	r2,r2,2
  80e86c:	1000061e 	bne	r2,zero,80e888 <altera_avalon_jtag_uart_ioctl+0x80>
  80e870:	e0fffe17 	ldw	r3,-8(fp)
  80e874:	00a00034 	movhi	r2,32768
  80e878:	10bfffc4 	addi	r2,r2,-1
  80e87c:	18800226 	beq	r3,r2,80e888 <altera_avalon_jtag_uart_ioctl+0x80>
  80e880:	e0bffe17 	ldw	r2,-8(fp)
  80e884:	00000206 	br	80e890 <altera_avalon_jtag_uart_ioctl+0x88>
  80e888:	00a00034 	movhi	r2,32768
  80e88c:	10bfff84 	addi	r2,r2,-2
  80e890:	e0fffd17 	ldw	r3,-12(fp)
  80e894:	18800115 	stw	r2,4(r3)
      rc = 0;
  80e898:	e03fff15 	stw	zero,-4(fp)
    break;
  80e89c:	00000f06 	br	80e8dc <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  80e8a0:	e0bffd17 	ldw	r2,-12(fp)
  80e8a4:	10c00117 	ldw	r3,4(r2)
  80e8a8:	00a00034 	movhi	r2,32768
  80e8ac:	10bfffc4 	addi	r2,r2,-1
  80e8b0:	18800c26 	beq	r3,r2,80e8e4 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e8b4:	e0bffd17 	ldw	r2,-12(fp)
  80e8b8:	10c00917 	ldw	r3,36(r2)
  80e8bc:	e0bffd17 	ldw	r2,-12(fp)
  80e8c0:	10800117 	ldw	r2,4(r2)
  80e8c4:	1885803a 	cmpltu	r2,r3,r2
  80e8c8:	10c03fcc 	andi	r3,r2,255
  80e8cc:	e0bffb17 	ldw	r2,-20(fp)
  80e8d0:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80e8d4:	e03fff15 	stw	zero,-4(fp)
    break;
  80e8d8:	00000206 	br	80e8e4 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  80e8dc:	0001883a 	nop
  80e8e0:	00000106 	br	80e8e8 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  80e8e4:	0001883a 	nop
  }

  return rc;
  80e8e8:	e0bfff17 	ldw	r2,-4(fp)
}
  80e8ec:	e037883a 	mov	sp,fp
  80e8f0:	df000017 	ldw	fp,0(sp)
  80e8f4:	dec00104 	addi	sp,sp,4
  80e8f8:	f800283a 	ret

0080e8fc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e8fc:	defff304 	addi	sp,sp,-52
  80e900:	dfc00c15 	stw	ra,48(sp)
  80e904:	df000b15 	stw	fp,44(sp)
  80e908:	df000b04 	addi	fp,sp,44
  80e90c:	e13ff815 	stw	r4,-32(fp)
  80e910:	e17ff715 	stw	r5,-36(fp)
  80e914:	e1bff615 	stw	r6,-40(fp)
  80e918:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  80e91c:	e0bff717 	ldw	r2,-36(fp)
  80e920:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e924:	00004706 	br	80ea44 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e928:	e0bff817 	ldw	r2,-32(fp)
  80e92c:	10800a17 	ldw	r2,40(r2)
  80e930:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  80e934:	e0bff817 	ldw	r2,-32(fp)
  80e938:	10800b17 	ldw	r2,44(r2)
  80e93c:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  80e940:	e0fffd17 	ldw	r3,-12(fp)
  80e944:	e0bffc17 	ldw	r2,-16(fp)
  80e948:	18800536 	bltu	r3,r2,80e960 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e94c:	e0fffd17 	ldw	r3,-12(fp)
  80e950:	e0bffc17 	ldw	r2,-16(fp)
  80e954:	1885c83a 	sub	r2,r3,r2
  80e958:	e0bffe15 	stw	r2,-8(fp)
  80e95c:	00000406 	br	80e970 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e960:	00c20004 	movi	r3,2048
  80e964:	e0bffc17 	ldw	r2,-16(fp)
  80e968:	1885c83a 	sub	r2,r3,r2
  80e96c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80e970:	e0bffe17 	ldw	r2,-8(fp)
  80e974:	10001e26 	beq	r2,zero,80e9f0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80e978:	e0fff617 	ldw	r3,-40(fp)
  80e97c:	e0bffe17 	ldw	r2,-8(fp)
  80e980:	1880022e 	bgeu	r3,r2,80e98c <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80e984:	e0bff617 	ldw	r2,-40(fp)
  80e988:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e98c:	e0bff817 	ldw	r2,-32(fp)
  80e990:	10c00e04 	addi	r3,r2,56
  80e994:	e0bffc17 	ldw	r2,-16(fp)
  80e998:	1885883a 	add	r2,r3,r2
  80e99c:	e1bffe17 	ldw	r6,-8(fp)
  80e9a0:	100b883a 	mov	r5,r2
  80e9a4:	e13fff17 	ldw	r4,-4(fp)
  80e9a8:	08063040 	call	806304 <memcpy>
      ptr   += n;
  80e9ac:	e0ffff17 	ldw	r3,-4(fp)
  80e9b0:	e0bffe17 	ldw	r2,-8(fp)
  80e9b4:	1885883a 	add	r2,r3,r2
  80e9b8:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  80e9bc:	e0fff617 	ldw	r3,-40(fp)
  80e9c0:	e0bffe17 	ldw	r2,-8(fp)
  80e9c4:	1885c83a 	sub	r2,r3,r2
  80e9c8:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e9cc:	e0fffc17 	ldw	r3,-16(fp)
  80e9d0:	e0bffe17 	ldw	r2,-8(fp)
  80e9d4:	1885883a 	add	r2,r3,r2
  80e9d8:	10c1ffcc 	andi	r3,r2,2047
  80e9dc:	e0bff817 	ldw	r2,-32(fp)
  80e9e0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e9e4:	e0bff617 	ldw	r2,-40(fp)
  80e9e8:	00bfcf16 	blt	zero,r2,80e928 <altera_avalon_jtag_uart_read+0x2c>
  80e9ec:	00000106 	br	80e9f4 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  80e9f0:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  80e9f4:	e0ffff17 	ldw	r3,-4(fp)
  80e9f8:	e0bff717 	ldw	r2,-36(fp)
  80e9fc:	1880141e 	bne	r3,r2,80ea50 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80ea00:	e0bff517 	ldw	r2,-44(fp)
  80ea04:	1090000c 	andi	r2,r2,16384
  80ea08:	1000131e 	bne	r2,zero,80ea58 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80ea0c:	0001883a 	nop
  80ea10:	e0bff817 	ldw	r2,-32(fp)
  80ea14:	10800a17 	ldw	r2,40(r2)
  80ea18:	e0fffd17 	ldw	r3,-12(fp)
  80ea1c:	1880051e 	bne	r3,r2,80ea34 <altera_avalon_jtag_uart_read+0x138>
  80ea20:	e0bff817 	ldw	r2,-32(fp)
  80ea24:	10c00917 	ldw	r3,36(r2)
  80ea28:	e0bff817 	ldw	r2,-32(fp)
  80ea2c:	10800117 	ldw	r2,4(r2)
  80ea30:	18bff736 	bltu	r3,r2,80ea10 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80ea34:	e0bff817 	ldw	r2,-32(fp)
  80ea38:	10800a17 	ldw	r2,40(r2)
  80ea3c:	e0fffd17 	ldw	r3,-12(fp)
  80ea40:	18800726 	beq	r3,r2,80ea60 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  80ea44:	e0bff617 	ldw	r2,-40(fp)
  80ea48:	00bfb716 	blt	zero,r2,80e928 <altera_avalon_jtag_uart_read+0x2c>
  80ea4c:	00000506 	br	80ea64 <altera_avalon_jtag_uart_read+0x168>
      break;
  80ea50:	0001883a 	nop
  80ea54:	00000306 	br	80ea64 <altera_avalon_jtag_uart_read+0x168>
      break;
  80ea58:	0001883a 	nop
  80ea5c:	00000106 	br	80ea64 <altera_avalon_jtag_uart_read+0x168>
      break;
  80ea60:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80ea64:	e0ffff17 	ldw	r3,-4(fp)
  80ea68:	e0bff717 	ldw	r2,-36(fp)
  80ea6c:	18801926 	beq	r3,r2,80ead4 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  80ea70:	0005303a 	rdctl	r2,status
  80ea74:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ea78:	e0fff917 	ldw	r3,-28(fp)
  80ea7c:	00bfff84 	movi	r2,-2
  80ea80:	1884703a 	and	r2,r3,r2
  80ea84:	1001703a 	wrctl	status,r2
  return context;
  80ea88:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80ea8c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80ea90:	e0bff817 	ldw	r2,-32(fp)
  80ea94:	10800817 	ldw	r2,32(r2)
  80ea98:	10c00054 	ori	r3,r2,1
  80ea9c:	e0bff817 	ldw	r2,-32(fp)
  80eaa0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80eaa4:	e0bff817 	ldw	r2,-32(fp)
  80eaa8:	10800017 	ldw	r2,0(r2)
  80eaac:	10800104 	addi	r2,r2,4
  80eab0:	1007883a 	mov	r3,r2
  80eab4:	e0bff817 	ldw	r2,-32(fp)
  80eab8:	10800817 	ldw	r2,32(r2)
  80eabc:	18800035 	stwio	r2,0(r3)
  80eac0:	e0bffb17 	ldw	r2,-20(fp)
  80eac4:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80eac8:	e0bffa17 	ldw	r2,-24(fp)
  80eacc:	1001703a 	wrctl	status,r2
}
  80ead0:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80ead4:	e0ffff17 	ldw	r3,-4(fp)
  80ead8:	e0bff717 	ldw	r2,-36(fp)
  80eadc:	18800426 	beq	r3,r2,80eaf0 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  80eae0:	e0ffff17 	ldw	r3,-4(fp)
  80eae4:	e0bff717 	ldw	r2,-36(fp)
  80eae8:	1885c83a 	sub	r2,r3,r2
  80eaec:	00000606 	br	80eb08 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80eaf0:	e0bff517 	ldw	r2,-44(fp)
  80eaf4:	1090000c 	andi	r2,r2,16384
  80eaf8:	10000226 	beq	r2,zero,80eb04 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  80eafc:	00bffd44 	movi	r2,-11
  80eb00:	00000106 	br	80eb08 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80eb04:	00bffec4 	movi	r2,-5
}
  80eb08:	e037883a 	mov	sp,fp
  80eb0c:	dfc00117 	ldw	ra,4(sp)
  80eb10:	df000017 	ldw	fp,0(sp)
  80eb14:	dec00204 	addi	sp,sp,8
  80eb18:	f800283a 	ret

0080eb1c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80eb1c:	defff304 	addi	sp,sp,-52
  80eb20:	dfc00c15 	stw	ra,48(sp)
  80eb24:	df000b15 	stw	fp,44(sp)
  80eb28:	df000b04 	addi	fp,sp,44
  80eb2c:	e13ff815 	stw	r4,-32(fp)
  80eb30:	e17ff715 	stw	r5,-36(fp)
  80eb34:	e1bff615 	stw	r6,-40(fp)
  80eb38:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80eb3c:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80eb40:	e0bff717 	ldw	r2,-36(fp)
  80eb44:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80eb48:	00003706 	br	80ec28 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80eb4c:	e0bff817 	ldw	r2,-32(fp)
  80eb50:	10800c17 	ldw	r2,48(r2)
  80eb54:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  80eb58:	e0bff817 	ldw	r2,-32(fp)
  80eb5c:	10800d17 	ldw	r2,52(r2)
  80eb60:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  80eb64:	e0fffc17 	ldw	r3,-16(fp)
  80eb68:	e0bfff17 	ldw	r2,-4(fp)
  80eb6c:	1880062e 	bgeu	r3,r2,80eb88 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80eb70:	e0ffff17 	ldw	r3,-4(fp)
  80eb74:	e0bffc17 	ldw	r2,-16(fp)
  80eb78:	1885c83a 	sub	r2,r3,r2
  80eb7c:	10bfffc4 	addi	r2,r2,-1
  80eb80:	e0bffe15 	stw	r2,-8(fp)
  80eb84:	00000b06 	br	80ebb4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80eb88:	e0bfff17 	ldw	r2,-4(fp)
  80eb8c:	10000526 	beq	r2,zero,80eba4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80eb90:	00c20004 	movi	r3,2048
  80eb94:	e0bffc17 	ldw	r2,-16(fp)
  80eb98:	1885c83a 	sub	r2,r3,r2
  80eb9c:	e0bffe15 	stw	r2,-8(fp)
  80eba0:	00000406 	br	80ebb4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80eba4:	00c1ffc4 	movi	r3,2047
  80eba8:	e0bffc17 	ldw	r2,-16(fp)
  80ebac:	1885c83a 	sub	r2,r3,r2
  80ebb0:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80ebb4:	e0bffe17 	ldw	r2,-8(fp)
  80ebb8:	10001e26 	beq	r2,zero,80ec34 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80ebbc:	e0fff617 	ldw	r3,-40(fp)
  80ebc0:	e0bffe17 	ldw	r2,-8(fp)
  80ebc4:	1880022e 	bgeu	r3,r2,80ebd0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80ebc8:	e0bff617 	ldw	r2,-40(fp)
  80ebcc:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80ebd0:	e0bff817 	ldw	r2,-32(fp)
  80ebd4:	10c20e04 	addi	r3,r2,2104
  80ebd8:	e0bffc17 	ldw	r2,-16(fp)
  80ebdc:	1885883a 	add	r2,r3,r2
  80ebe0:	e1bffe17 	ldw	r6,-8(fp)
  80ebe4:	e17ff717 	ldw	r5,-36(fp)
  80ebe8:	1009883a 	mov	r4,r2
  80ebec:	08063040 	call	806304 <memcpy>
      ptr   += n;
  80ebf0:	e0fff717 	ldw	r3,-36(fp)
  80ebf4:	e0bffe17 	ldw	r2,-8(fp)
  80ebf8:	1885883a 	add	r2,r3,r2
  80ebfc:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  80ec00:	e0fff617 	ldw	r3,-40(fp)
  80ec04:	e0bffe17 	ldw	r2,-8(fp)
  80ec08:	1885c83a 	sub	r2,r3,r2
  80ec0c:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80ec10:	e0fffc17 	ldw	r3,-16(fp)
  80ec14:	e0bffe17 	ldw	r2,-8(fp)
  80ec18:	1885883a 	add	r2,r3,r2
  80ec1c:	10c1ffcc 	andi	r3,r2,2047
  80ec20:	e0bff817 	ldw	r2,-32(fp)
  80ec24:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  80ec28:	e0bff617 	ldw	r2,-40(fp)
  80ec2c:	00bfc716 	blt	zero,r2,80eb4c <altera_avalon_jtag_uart_write+0x30>
  80ec30:	00000106 	br	80ec38 <altera_avalon_jtag_uart_write+0x11c>
        break;
  80ec34:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  80ec38:	0005303a 	rdctl	r2,status
  80ec3c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ec40:	e0fff917 	ldw	r3,-28(fp)
  80ec44:	00bfff84 	movi	r2,-2
  80ec48:	1884703a 	and	r2,r3,r2
  80ec4c:	1001703a 	wrctl	status,r2
  return context;
  80ec50:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80ec54:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80ec58:	e0bff817 	ldw	r2,-32(fp)
  80ec5c:	10800817 	ldw	r2,32(r2)
  80ec60:	10c00094 	ori	r3,r2,2
  80ec64:	e0bff817 	ldw	r2,-32(fp)
  80ec68:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80ec6c:	e0bff817 	ldw	r2,-32(fp)
  80ec70:	10800017 	ldw	r2,0(r2)
  80ec74:	10800104 	addi	r2,r2,4
  80ec78:	1007883a 	mov	r3,r2
  80ec7c:	e0bff817 	ldw	r2,-32(fp)
  80ec80:	10800817 	ldw	r2,32(r2)
  80ec84:	18800035 	stwio	r2,0(r3)
  80ec88:	e0bffb17 	ldw	r2,-20(fp)
  80ec8c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80ec90:	e0bffa17 	ldw	r2,-24(fp)
  80ec94:	1001703a 	wrctl	status,r2
}
  80ec98:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80ec9c:	e0bff617 	ldw	r2,-40(fp)
  80eca0:	0080100e 	bge	zero,r2,80ece4 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  80eca4:	e0bff517 	ldw	r2,-44(fp)
  80eca8:	1090000c 	andi	r2,r2,16384
  80ecac:	1000101e 	bne	r2,zero,80ecf0 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80ecb0:	0001883a 	nop
  80ecb4:	e0bff817 	ldw	r2,-32(fp)
  80ecb8:	10800d17 	ldw	r2,52(r2)
  80ecbc:	e0ffff17 	ldw	r3,-4(fp)
  80ecc0:	1880051e 	bne	r3,r2,80ecd8 <altera_avalon_jtag_uart_write+0x1bc>
  80ecc4:	e0bff817 	ldw	r2,-32(fp)
  80ecc8:	10c00917 	ldw	r3,36(r2)
  80eccc:	e0bff817 	ldw	r2,-32(fp)
  80ecd0:	10800117 	ldw	r2,4(r2)
  80ecd4:	18bff736 	bltu	r3,r2,80ecb4 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80ecd8:	e0bff817 	ldw	r2,-32(fp)
  80ecdc:	10800917 	ldw	r2,36(r2)
  80ece0:	1000051e 	bne	r2,zero,80ecf8 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  80ece4:	e0bff617 	ldw	r2,-40(fp)
  80ece8:	00bfcf16 	blt	zero,r2,80ec28 <altera_avalon_jtag_uart_write+0x10c>
  80ecec:	00000306 	br	80ecfc <altera_avalon_jtag_uart_write+0x1e0>
        break;
  80ecf0:	0001883a 	nop
  80ecf4:	00000106 	br	80ecfc <altera_avalon_jtag_uart_write+0x1e0>
         break;
  80ecf8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80ecfc:	e0fff717 	ldw	r3,-36(fp)
  80ed00:	e0bffd17 	ldw	r2,-12(fp)
  80ed04:	18800426 	beq	r3,r2,80ed18 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  80ed08:	e0fff717 	ldw	r3,-36(fp)
  80ed0c:	e0bffd17 	ldw	r2,-12(fp)
  80ed10:	1885c83a 	sub	r2,r3,r2
  80ed14:	00000606 	br	80ed30 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  80ed18:	e0bff517 	ldw	r2,-44(fp)
  80ed1c:	1090000c 	andi	r2,r2,16384
  80ed20:	10000226 	beq	r2,zero,80ed2c <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  80ed24:	00bffd44 	movi	r2,-11
  80ed28:	00000106 	br	80ed30 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80ed2c:	00bffec4 	movi	r2,-5
}
  80ed30:	e037883a 	mov	sp,fp
  80ed34:	dfc00117 	ldw	ra,4(sp)
  80ed38:	df000017 	ldw	fp,0(sp)
  80ed3c:	dec00204 	addi	sp,sp,8
  80ed40:	f800283a 	ret

0080ed44 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80ed44:	defffa04 	addi	sp,sp,-24
  80ed48:	dfc00515 	stw	ra,20(sp)
  80ed4c:	df000415 	stw	fp,16(sp)
  80ed50:	df000404 	addi	fp,sp,16
  80ed54:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80ed58:	0007883a 	mov	r3,zero
  80ed5c:	e0bffc17 	ldw	r2,-16(fp)
  80ed60:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80ed64:	e0bffc17 	ldw	r2,-16(fp)
  80ed68:	10800104 	addi	r2,r2,4
  80ed6c:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
  80ed70:	0005303a 	rdctl	r2,status
  80ed74:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ed78:	e0fffd17 	ldw	r3,-12(fp)
  80ed7c:	00bfff84 	movi	r2,-2
  80ed80:	1884703a 	and	r2,r3,r2
  80ed84:	1001703a 	wrctl	status,r2
  return context;
  80ed88:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80ed8c:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
  80ed90:	080f8540 	call	80f854 <alt_tick>
  80ed94:	e0bfff17 	ldw	r2,-4(fp)
  80ed98:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80ed9c:	e0bffe17 	ldw	r2,-8(fp)
  80eda0:	1001703a 	wrctl	status,r2
}
  80eda4:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
  80eda8:	0001883a 	nop
  80edac:	e037883a 	mov	sp,fp
  80edb0:	dfc00117 	ldw	ra,4(sp)
  80edb4:	df000017 	ldw	fp,0(sp)
  80edb8:	dec00204 	addi	sp,sp,8
  80edbc:	f800283a 	ret

0080edc0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80edc0:	defff804 	addi	sp,sp,-32
  80edc4:	dfc00715 	stw	ra,28(sp)
  80edc8:	df000615 	stw	fp,24(sp)
  80edcc:	df000604 	addi	fp,sp,24
  80edd0:	e13ffe15 	stw	r4,-8(fp)
  80edd4:	e17ffd15 	stw	r5,-12(fp)
  80edd8:	e1bffc15 	stw	r6,-16(fp)
  80eddc:	e1fffb15 	stw	r7,-20(fp)
  80ede0:	e0bffb17 	ldw	r2,-20(fp)
  80ede4:	e0bfff15 	stw	r2,-4(fp)
  if (! _alt_tick_rate)
  80ede8:	d0a70d17 	ldw	r2,-25548(gp)
  80edec:	1000031e 	bne	r2,zero,80edfc <alt_avalon_timer_sc_init+0x3c>
    _alt_tick_rate = nticks;
  80edf0:	e0bfff17 	ldw	r2,-4(fp)
  80edf4:	d0a70d15 	stw	r2,-25548(gp)
    return 0;
  80edf8:	00000106 	br	80ee00 <alt_avalon_timer_sc_init+0x40>
    return -1;
  80edfc:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80ee00:	e0bffe17 	ldw	r2,-8(fp)
  80ee04:	10800104 	addi	r2,r2,4
  80ee08:	00c001c4 	movi	r3,7
  80ee0c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80ee10:	d8000015 	stw	zero,0(sp)
  80ee14:	e1fffe17 	ldw	r7,-8(fp)
  80ee18:	01802074 	movhi	r6,129
  80ee1c:	31bb5104 	addi	r6,r6,-4796
  80ee20:	e17ffc17 	ldw	r5,-16(fp)
  80ee24:	e13ffd17 	ldw	r4,-12(fp)
  80ee28:	080f1a40 	call	80f1a4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80ee2c:	0001883a 	nop
  80ee30:	e037883a 	mov	sp,fp
  80ee34:	dfc00117 	ldw	ra,4(sp)
  80ee38:	df000017 	ldw	fp,0(sp)
  80ee3c:	dec00204 	addi	sp,sp,8
  80ee40:	f800283a 	ret

0080ee44 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80ee44:	defff504 	addi	sp,sp,-44
  80ee48:	df000a15 	stw	fp,40(sp)
  80ee4c:	df000a04 	addi	fp,sp,40
  80ee50:	e13ff915 	stw	r4,-28(fp)
  80ee54:	e17ff815 	stw	r5,-32(fp)
  80ee58:	e1bff715 	stw	r6,-36(fp)
  80ee5c:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80ee60:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
  80ee64:	d0a70d17 	ldw	r2,-25548(gp)
  
  if (alt_ticks_per_second ())
  80ee68:	10003e26 	beq	r2,zero,80ef64 <alt_alarm_start+0x120>
  {
    if (alarm)
  80ee6c:	e0bff917 	ldw	r2,-28(fp)
  80ee70:	10003a26 	beq	r2,zero,80ef5c <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
  80ee74:	e0bff917 	ldw	r2,-28(fp)
  80ee78:	e0fff717 	ldw	r3,-36(fp)
  80ee7c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80ee80:	e0bff917 	ldw	r2,-28(fp)
  80ee84:	e0fff617 	ldw	r3,-40(fp)
  80ee88:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  80ee8c:	0005303a 	rdctl	r2,status
  80ee90:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ee94:	e0fffd17 	ldw	r3,-12(fp)
  80ee98:	00bfff84 	movi	r2,-2
  80ee9c:	1884703a 	and	r2,r3,r2
  80eea0:	1001703a 	wrctl	status,r2
  return context;
  80eea4:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
  80eea8:	e0bffe15 	stw	r2,-8(fp)
  return _alt_nticks;
  80eeac:	d0a70e17 	ldw	r2,-25544(gp)
      
      current_nticks = alt_nticks();
  80eeb0:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80eeb4:	e0fff817 	ldw	r3,-32(fp)
  80eeb8:	e0bfff17 	ldw	r2,-4(fp)
  80eebc:	1885883a 	add	r2,r3,r2
  80eec0:	10c00044 	addi	r3,r2,1
  80eec4:	e0bff917 	ldw	r2,-28(fp)
  80eec8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80eecc:	e0bff917 	ldw	r2,-28(fp)
  80eed0:	10c00217 	ldw	r3,8(r2)
  80eed4:	e0bfff17 	ldw	r2,-4(fp)
  80eed8:	1880042e 	bgeu	r3,r2,80eeec <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80eedc:	e0bff917 	ldw	r2,-28(fp)
  80eee0:	00c00044 	movi	r3,1
  80eee4:	10c00405 	stb	r3,16(r2)
  80eee8:	00000206 	br	80eef4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80eeec:	e0bff917 	ldw	r2,-28(fp)
  80eef0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80eef4:	e0bff917 	ldw	r2,-28(fp)
  80eef8:	d0e00c04 	addi	r3,gp,-32720
  80eefc:	e0fffb15 	stw	r3,-20(fp)
  80ef00:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80ef04:	e0bffa17 	ldw	r2,-24(fp)
  80ef08:	e0fffb17 	ldw	r3,-20(fp)
  80ef0c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80ef10:	e0bffb17 	ldw	r2,-20(fp)
  80ef14:	10c00017 	ldw	r3,0(r2)
  80ef18:	e0bffa17 	ldw	r2,-24(fp)
  80ef1c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80ef20:	e0bffb17 	ldw	r2,-20(fp)
  80ef24:	10800017 	ldw	r2,0(r2)
  80ef28:	e0fffa17 	ldw	r3,-24(fp)
  80ef2c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80ef30:	e0bffb17 	ldw	r2,-20(fp)
  80ef34:	e0fffa17 	ldw	r3,-24(fp)
  80ef38:	10c00015 	stw	r3,0(r2)
}
  80ef3c:	0001883a 	nop
  80ef40:	e0bffe17 	ldw	r2,-8(fp)
  80ef44:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80ef48:	e0bffc17 	ldw	r2,-16(fp)
  80ef4c:	1001703a 	wrctl	status,r2
}
  80ef50:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  80ef54:	0005883a 	mov	r2,zero
  80ef58:	00000306 	br	80ef68 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
  80ef5c:	00bffa84 	movi	r2,-22
  80ef60:	00000106 	br	80ef68 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
  80ef64:	00bfde84 	movi	r2,-134
  }
}
  80ef68:	e037883a 	mov	sp,fp
  80ef6c:	df000017 	ldw	fp,0(sp)
  80ef70:	dec00104 	addi	sp,sp,4
  80ef74:	f800283a 	ret

0080ef78 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80ef78:	defffe04 	addi	sp,sp,-8
  80ef7c:	df000115 	stw	fp,4(sp)
  80ef80:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80ef84:	e03fff15 	stw	zero,-4(fp)
  80ef88:	00000506 	br	80efa0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80ef8c:	e0bfff17 	ldw	r2,-4(fp)
  80ef90:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80ef94:	e0bfff17 	ldw	r2,-4(fp)
  80ef98:	10800804 	addi	r2,r2,32
  80ef9c:	e0bfff15 	stw	r2,-4(fp)
  80efa0:	e0bfff17 	ldw	r2,-4(fp)
  80efa4:	10820030 	cmpltui	r2,r2,2048
  80efa8:	103ff81e 	bne	r2,zero,80ef8c <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80efac:	0001883a 	nop
  80efb0:	0001883a 	nop
  80efb4:	e037883a 	mov	sp,fp
  80efb8:	df000017 	ldw	fp,0(sp)
  80efbc:	dec00104 	addi	sp,sp,4
  80efc0:	f800283a 	ret

0080efc4 <alt_get_errno>:
{
  80efc4:	defffe04 	addi	sp,sp,-8
  80efc8:	dfc00115 	stw	ra,4(sp)
  80efcc:	df000015 	stw	fp,0(sp)
  80efd0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80efd4:	d0a00917 	ldw	r2,-32732(gp)
  80efd8:	10000326 	beq	r2,zero,80efe8 <alt_get_errno+0x24>
  80efdc:	d0a00917 	ldw	r2,-32732(gp)
  80efe0:	103ee83a 	callr	r2
  80efe4:	00000106 	br	80efec <alt_get_errno+0x28>
  80efe8:	d0a70704 	addi	r2,gp,-25572
}
  80efec:	e037883a 	mov	sp,fp
  80eff0:	dfc00117 	ldw	ra,4(sp)
  80eff4:	df000017 	ldw	fp,0(sp)
  80eff8:	dec00204 	addi	sp,sp,8
  80effc:	f800283a 	ret

0080f000 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80f000:	defffa04 	addi	sp,sp,-24
  80f004:	dfc00515 	stw	ra,20(sp)
  80f008:	df000415 	stw	fp,16(sp)
  80f00c:	df000404 	addi	fp,sp,16
  80f010:	e13ffd15 	stw	r4,-12(fp)
  80f014:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80f018:	e0bffd17 	ldw	r2,-12(fp)
  80f01c:	10000326 	beq	r2,zero,80f02c <alt_dev_llist_insert+0x2c>
  80f020:	e0bffd17 	ldw	r2,-12(fp)
  80f024:	10800217 	ldw	r2,8(r2)
  80f028:	1000061e 	bne	r2,zero,80f044 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80f02c:	080efc40 	call	80efc4 <alt_get_errno>
  80f030:	1007883a 	mov	r3,r2
  80f034:	00800584 	movi	r2,22
  80f038:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80f03c:	00bffa84 	movi	r2,-22
  80f040:	00001406 	br	80f094 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80f044:	e0bffd17 	ldw	r2,-12(fp)
  80f048:	e0fffc17 	ldw	r3,-16(fp)
  80f04c:	e0ffff15 	stw	r3,-4(fp)
  80f050:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  80f054:	e0bffe17 	ldw	r2,-8(fp)
  80f058:	e0ffff17 	ldw	r3,-4(fp)
  80f05c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80f060:	e0bfff17 	ldw	r2,-4(fp)
  80f064:	10c00017 	ldw	r3,0(r2)
  80f068:	e0bffe17 	ldw	r2,-8(fp)
  80f06c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80f070:	e0bfff17 	ldw	r2,-4(fp)
  80f074:	10800017 	ldw	r2,0(r2)
  80f078:	e0fffe17 	ldw	r3,-8(fp)
  80f07c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80f080:	e0bfff17 	ldw	r2,-4(fp)
  80f084:	e0fffe17 	ldw	r3,-8(fp)
  80f088:	10c00015 	stw	r3,0(r2)
}
  80f08c:	0001883a 	nop

  return 0;  
  80f090:	0005883a 	mov	r2,zero
}
  80f094:	e037883a 	mov	sp,fp
  80f098:	dfc00117 	ldw	ra,4(sp)
  80f09c:	df000017 	ldw	fp,0(sp)
  80f0a0:	dec00204 	addi	sp,sp,8
  80f0a4:	f800283a 	ret

0080f0a8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80f0a8:	defffd04 	addi	sp,sp,-12
  80f0ac:	dfc00215 	stw	ra,8(sp)
  80f0b0:	df000115 	stw	fp,4(sp)
  80f0b4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80f0b8:	00802074 	movhi	r2,129
  80f0bc:	10bfd304 	addi	r2,r2,-180
  80f0c0:	e0bfff15 	stw	r2,-4(fp)
  80f0c4:	00000606 	br	80f0e0 <_do_ctors+0x38>
        (*ctor) (); 
  80f0c8:	e0bfff17 	ldw	r2,-4(fp)
  80f0cc:	10800017 	ldw	r2,0(r2)
  80f0d0:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80f0d4:	e0bfff17 	ldw	r2,-4(fp)
  80f0d8:	10bfff04 	addi	r2,r2,-4
  80f0dc:	e0bfff15 	stw	r2,-4(fp)
  80f0e0:	e0ffff17 	ldw	r3,-4(fp)
  80f0e4:	00802074 	movhi	r2,129
  80f0e8:	10bfd404 	addi	r2,r2,-176
  80f0ec:	18bff62e 	bgeu	r3,r2,80f0c8 <_do_ctors+0x20>
}
  80f0f0:	0001883a 	nop
  80f0f4:	0001883a 	nop
  80f0f8:	e037883a 	mov	sp,fp
  80f0fc:	dfc00117 	ldw	ra,4(sp)
  80f100:	df000017 	ldw	fp,0(sp)
  80f104:	dec00204 	addi	sp,sp,8
  80f108:	f800283a 	ret

0080f10c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80f10c:	defffd04 	addi	sp,sp,-12
  80f110:	dfc00215 	stw	ra,8(sp)
  80f114:	df000115 	stw	fp,4(sp)
  80f118:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f11c:	00802074 	movhi	r2,129
  80f120:	10bfd304 	addi	r2,r2,-180
  80f124:	e0bfff15 	stw	r2,-4(fp)
  80f128:	00000606 	br	80f144 <_do_dtors+0x38>
        (*dtor) (); 
  80f12c:	e0bfff17 	ldw	r2,-4(fp)
  80f130:	10800017 	ldw	r2,0(r2)
  80f134:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f138:	e0bfff17 	ldw	r2,-4(fp)
  80f13c:	10bfff04 	addi	r2,r2,-4
  80f140:	e0bfff15 	stw	r2,-4(fp)
  80f144:	e0ffff17 	ldw	r3,-4(fp)
  80f148:	00802074 	movhi	r2,129
  80f14c:	10bfd404 	addi	r2,r2,-176
  80f150:	18bff62e 	bgeu	r3,r2,80f12c <_do_dtors+0x20>
}
  80f154:	0001883a 	nop
  80f158:	0001883a 	nop
  80f15c:	e037883a 	mov	sp,fp
  80f160:	dfc00117 	ldw	ra,4(sp)
  80f164:	df000017 	ldw	fp,0(sp)
  80f168:	dec00204 	addi	sp,sp,8
  80f16c:	f800283a 	ret

0080f170 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80f170:	defffe04 	addi	sp,sp,-8
  80f174:	dfc00115 	stw	ra,4(sp)
  80f178:	df000015 	stw	fp,0(sp)
  80f17c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80f180:	01420004 	movi	r5,2048
  80f184:	0009883a 	mov	r4,zero
  80f188:	080fbb80 	call	80fbb8 <alt_icache_flush>
#endif
}
  80f18c:	0001883a 	nop
  80f190:	e037883a 	mov	sp,fp
  80f194:	dfc00117 	ldw	ra,4(sp)
  80f198:	df000017 	ldw	fp,0(sp)
  80f19c:	dec00204 	addi	sp,sp,8
  80f1a0:	f800283a 	ret

0080f1a4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f1a4:	defff904 	addi	sp,sp,-28
  80f1a8:	dfc00615 	stw	ra,24(sp)
  80f1ac:	df000515 	stw	fp,20(sp)
  80f1b0:	df000504 	addi	fp,sp,20
  80f1b4:	e13fff15 	stw	r4,-4(fp)
  80f1b8:	e17ffe15 	stw	r5,-8(fp)
  80f1bc:	e1bffd15 	stw	r6,-12(fp)
  80f1c0:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80f1c4:	e0800217 	ldw	r2,8(fp)
  80f1c8:	d8800015 	stw	r2,0(sp)
  80f1cc:	e1fffc17 	ldw	r7,-16(fp)
  80f1d0:	e1bffd17 	ldw	r6,-12(fp)
  80f1d4:	e17ffe17 	ldw	r5,-8(fp)
  80f1d8:	e13fff17 	ldw	r4,-4(fp)
  80f1dc:	080f3540 	call	80f354 <alt_iic_isr_register>
}  
  80f1e0:	e037883a 	mov	sp,fp
  80f1e4:	dfc00117 	ldw	ra,4(sp)
  80f1e8:	df000017 	ldw	fp,0(sp)
  80f1ec:	dec00204 	addi	sp,sp,8
  80f1f0:	f800283a 	ret

0080f1f4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80f1f4:	defff904 	addi	sp,sp,-28
  80f1f8:	df000615 	stw	fp,24(sp)
  80f1fc:	df000604 	addi	fp,sp,24
  80f200:	e13ffb15 	stw	r4,-20(fp)
  80f204:	e17ffa15 	stw	r5,-24(fp)
  80f208:	e0bffa17 	ldw	r2,-24(fp)
  80f20c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  80f210:	0005303a 	rdctl	r2,status
  80f214:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f218:	e0fffe17 	ldw	r3,-8(fp)
  80f21c:	00bfff84 	movi	r2,-2
  80f220:	1884703a 	and	r2,r3,r2
  80f224:	1001703a 	wrctl	status,r2
  return context;
  80f228:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80f22c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  80f230:	00c00044 	movi	r3,1
  80f234:	e0bfff17 	ldw	r2,-4(fp)
  80f238:	1884983a 	sll	r2,r3,r2
  80f23c:	1007883a 	mov	r3,r2
  80f240:	d0a70c17 	ldw	r2,-25552(gp)
  80f244:	1884b03a 	or	r2,r3,r2
  80f248:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f24c:	d0a70c17 	ldw	r2,-25552(gp)
  80f250:	100170fa 	wrctl	ienable,r2
  80f254:	e0bffd17 	ldw	r2,-12(fp)
  80f258:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80f25c:	e0bffc17 	ldw	r2,-16(fp)
  80f260:	1001703a 	wrctl	status,r2
}
  80f264:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  80f268:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  80f26c:	e037883a 	mov	sp,fp
  80f270:	df000017 	ldw	fp,0(sp)
  80f274:	dec00104 	addi	sp,sp,4
  80f278:	f800283a 	ret

0080f27c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80f27c:	defff904 	addi	sp,sp,-28
  80f280:	df000615 	stw	fp,24(sp)
  80f284:	df000604 	addi	fp,sp,24
  80f288:	e13ffb15 	stw	r4,-20(fp)
  80f28c:	e17ffa15 	stw	r5,-24(fp)
  80f290:	e0bffa17 	ldw	r2,-24(fp)
  80f294:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  80f298:	0005303a 	rdctl	r2,status
  80f29c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f2a0:	e0fffe17 	ldw	r3,-8(fp)
  80f2a4:	00bfff84 	movi	r2,-2
  80f2a8:	1884703a 	and	r2,r3,r2
  80f2ac:	1001703a 	wrctl	status,r2
  return context;
  80f2b0:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
  80f2b4:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
  80f2b8:	00c00044 	movi	r3,1
  80f2bc:	e0bfff17 	ldw	r2,-4(fp)
  80f2c0:	1884983a 	sll	r2,r3,r2
  80f2c4:	0084303a 	nor	r2,zero,r2
  80f2c8:	1007883a 	mov	r3,r2
  80f2cc:	d0a70c17 	ldw	r2,-25552(gp)
  80f2d0:	1884703a 	and	r2,r3,r2
  80f2d4:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f2d8:	d0a70c17 	ldw	r2,-25552(gp)
  80f2dc:	100170fa 	wrctl	ienable,r2
  80f2e0:	e0bffd17 	ldw	r2,-12(fp)
  80f2e4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80f2e8:	e0bffc17 	ldw	r2,-16(fp)
  80f2ec:	1001703a 	wrctl	status,r2
}
  80f2f0:	0001883a 	nop
  return 0;
  80f2f4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  80f2f8:	e037883a 	mov	sp,fp
  80f2fc:	df000017 	ldw	fp,0(sp)
  80f300:	dec00104 	addi	sp,sp,4
  80f304:	f800283a 	ret

0080f308 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80f308:	defffc04 	addi	sp,sp,-16
  80f30c:	df000315 	stw	fp,12(sp)
  80f310:	df000304 	addi	fp,sp,12
  80f314:	e13ffe15 	stw	r4,-8(fp)
  80f318:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80f31c:	000530fa 	rdctl	r2,ienable
  80f320:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80f324:	00c00044 	movi	r3,1
  80f328:	e0bffd17 	ldw	r2,-12(fp)
  80f32c:	1884983a 	sll	r2,r3,r2
  80f330:	1007883a 	mov	r3,r2
  80f334:	e0bfff17 	ldw	r2,-4(fp)
  80f338:	1884703a 	and	r2,r3,r2
  80f33c:	1004c03a 	cmpne	r2,r2,zero
  80f340:	10803fcc 	andi	r2,r2,255
}
  80f344:	e037883a 	mov	sp,fp
  80f348:	df000017 	ldw	fp,0(sp)
  80f34c:	dec00104 	addi	sp,sp,4
  80f350:	f800283a 	ret

0080f354 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f354:	defff504 	addi	sp,sp,-44
  80f358:	dfc00a15 	stw	ra,40(sp)
  80f35c:	df000915 	stw	fp,36(sp)
  80f360:	df000904 	addi	fp,sp,36
  80f364:	e13ffa15 	stw	r4,-24(fp)
  80f368:	e17ff915 	stw	r5,-28(fp)
  80f36c:	e1bff815 	stw	r6,-32(fp)
  80f370:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
  80f374:	00bffa84 	movi	r2,-22
  80f378:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80f37c:	e0bff917 	ldw	r2,-28(fp)
  80f380:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80f384:	e0bffe17 	ldw	r2,-8(fp)
  80f388:	10800808 	cmpgei	r2,r2,32
  80f38c:	1000251e 	bne	r2,zero,80f424 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
  80f390:	0005303a 	rdctl	r2,status
  80f394:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f398:	e0fffc17 	ldw	r3,-16(fp)
  80f39c:	00bfff84 	movi	r2,-2
  80f3a0:	1884703a 	and	r2,r3,r2
  80f3a4:	1001703a 	wrctl	status,r2
  return context;
  80f3a8:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80f3ac:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
  80f3b0:	e0bffe17 	ldw	r2,-8(fp)
  80f3b4:	100890fa 	slli	r4,r2,3
  80f3b8:	e0fff817 	ldw	r3,-32(fp)
  80f3bc:	00802074 	movhi	r2,129
  80f3c0:	2085883a 	add	r2,r4,r2
  80f3c4:	10cf7e15 	stw	r3,15864(r2)
    alt_irq[id].context = isr_context;
  80f3c8:	e0bffe17 	ldw	r2,-8(fp)
  80f3cc:	100890fa 	slli	r4,r2,3
  80f3d0:	e0fff717 	ldw	r3,-36(fp)
  80f3d4:	00802074 	movhi	r2,129
  80f3d8:	2085883a 	add	r2,r4,r2
  80f3dc:	10cf7f15 	stw	r3,15868(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80f3e0:	e0bff817 	ldw	r2,-32(fp)
  80f3e4:	10000526 	beq	r2,zero,80f3fc <alt_iic_isr_register+0xa8>
  80f3e8:	e0bffe17 	ldw	r2,-8(fp)
  80f3ec:	100b883a 	mov	r5,r2
  80f3f0:	e13ffa17 	ldw	r4,-24(fp)
  80f3f4:	080f1f40 	call	80f1f4 <alt_ic_irq_enable>
  80f3f8:	00000406 	br	80f40c <alt_iic_isr_register+0xb8>
  80f3fc:	e0bffe17 	ldw	r2,-8(fp)
  80f400:	100b883a 	mov	r5,r2
  80f404:	e13ffa17 	ldw	r4,-24(fp)
  80f408:	080f27c0 	call	80f27c <alt_ic_irq_disable>
  80f40c:	e0bfff15 	stw	r2,-4(fp)
  80f410:	e0bffd17 	ldw	r2,-12(fp)
  80f414:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80f418:	e0bffb17 	ldw	r2,-20(fp)
  80f41c:	1001703a 	wrctl	status,r2
}
  80f420:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
  80f424:	e0bfff17 	ldw	r2,-4(fp)
}
  80f428:	e037883a 	mov	sp,fp
  80f42c:	dfc00117 	ldw	ra,4(sp)
  80f430:	df000017 	ldw	fp,0(sp)
  80f434:	dec00204 	addi	sp,sp,8
  80f438:	f800283a 	ret

0080f43c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80f43c:	defff904 	addi	sp,sp,-28
  80f440:	dfc00615 	stw	ra,24(sp)
  80f444:	df000515 	stw	fp,20(sp)
  80f448:	df000504 	addi	fp,sp,20
  80f44c:	e13ffe15 	stw	r4,-8(fp)
  80f450:	e17ffd15 	stw	r5,-12(fp)
  80f454:	e1bffc15 	stw	r6,-16(fp)
  80f458:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  80f45c:	e1bffb17 	ldw	r6,-20(fp)
  80f460:	e17ffc17 	ldw	r5,-16(fp)
  80f464:	e13ffd17 	ldw	r4,-12(fp)
  80f468:	080f65c0 	call	80f65c <open>
  80f46c:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  80f470:	e0bfff17 	ldw	r2,-4(fp)
  80f474:	10001716 	blt	r2,zero,80f4d4 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
  80f478:	e0bfff17 	ldw	r2,-4(fp)
  80f47c:	10c00324 	muli	r3,r2,12
  80f480:	00802074 	movhi	r2,129
  80f484:	1885883a 	add	r2,r3,r2
  80f488:	10c3ec17 	ldw	r3,4016(r2)
  80f48c:	e0bffe17 	ldw	r2,-8(fp)
  80f490:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80f494:	e0bfff17 	ldw	r2,-4(fp)
  80f498:	10c00324 	muli	r3,r2,12
  80f49c:	00802074 	movhi	r2,129
  80f4a0:	1885883a 	add	r2,r3,r2
  80f4a4:	10c3ed17 	ldw	r3,4020(r2)
  80f4a8:	e0bffe17 	ldw	r2,-8(fp)
  80f4ac:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80f4b0:	e0bfff17 	ldw	r2,-4(fp)
  80f4b4:	10c00324 	muli	r3,r2,12
  80f4b8:	00802074 	movhi	r2,129
  80f4bc:	1885883a 	add	r2,r3,r2
  80f4c0:	10c3ee17 	ldw	r3,4024(r2)
  80f4c4:	e0bffe17 	ldw	r2,-8(fp)
  80f4c8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80f4cc:	e13fff17 	ldw	r4,-4(fp)
  80f4d0:	080df040 	call	80df04 <alt_release_fd>
  }
} 
  80f4d4:	0001883a 	nop
  80f4d8:	e037883a 	mov	sp,fp
  80f4dc:	dfc00117 	ldw	ra,4(sp)
  80f4e0:	df000017 	ldw	fp,0(sp)
  80f4e4:	dec00204 	addi	sp,sp,8
  80f4e8:	f800283a 	ret

0080f4ec <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80f4ec:	defffb04 	addi	sp,sp,-20
  80f4f0:	dfc00415 	stw	ra,16(sp)
  80f4f4:	df000315 	stw	fp,12(sp)
  80f4f8:	df000304 	addi	fp,sp,12
  80f4fc:	e13fff15 	stw	r4,-4(fp)
  80f500:	e17ffe15 	stw	r5,-8(fp)
  80f504:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80f508:	01c07fc4 	movi	r7,511
  80f50c:	01800044 	movi	r6,1
  80f510:	e17fff17 	ldw	r5,-4(fp)
  80f514:	01002074 	movhi	r4,129
  80f518:	2103ef04 	addi	r4,r4,4028
  80f51c:	080f43c0 	call	80f43c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80f520:	01c07fc4 	movi	r7,511
  80f524:	000d883a 	mov	r6,zero
  80f528:	e17ffe17 	ldw	r5,-8(fp)
  80f52c:	01002074 	movhi	r4,129
  80f530:	2103ec04 	addi	r4,r4,4016
  80f534:	080f43c0 	call	80f43c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80f538:	01c07fc4 	movi	r7,511
  80f53c:	01800044 	movi	r6,1
  80f540:	e17ffd17 	ldw	r5,-12(fp)
  80f544:	01002074 	movhi	r4,129
  80f548:	2103f204 	addi	r4,r4,4040
  80f54c:	080f43c0 	call	80f43c <alt_open_fd>
}  
  80f550:	0001883a 	nop
  80f554:	e037883a 	mov	sp,fp
  80f558:	dfc00117 	ldw	ra,4(sp)
  80f55c:	df000017 	ldw	fp,0(sp)
  80f560:	dec00204 	addi	sp,sp,8
  80f564:	f800283a 	ret

0080f568 <alt_get_errno>:
{
  80f568:	defffe04 	addi	sp,sp,-8
  80f56c:	dfc00115 	stw	ra,4(sp)
  80f570:	df000015 	stw	fp,0(sp)
  80f574:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f578:	d0a00917 	ldw	r2,-32732(gp)
  80f57c:	10000326 	beq	r2,zero,80f58c <alt_get_errno+0x24>
  80f580:	d0a00917 	ldw	r2,-32732(gp)
  80f584:	103ee83a 	callr	r2
  80f588:	00000106 	br	80f590 <alt_get_errno+0x28>
  80f58c:	d0a70704 	addi	r2,gp,-25572
}
  80f590:	e037883a 	mov	sp,fp
  80f594:	dfc00117 	ldw	ra,4(sp)
  80f598:	df000017 	ldw	fp,0(sp)
  80f59c:	dec00204 	addi	sp,sp,8
  80f5a0:	f800283a 	ret

0080f5a4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80f5a4:	defffd04 	addi	sp,sp,-12
  80f5a8:	df000215 	stw	fp,8(sp)
  80f5ac:	df000204 	addi	fp,sp,8
  80f5b0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80f5b4:	e0bffe17 	ldw	r2,-8(fp)
  80f5b8:	10800217 	ldw	r2,8(r2)
  80f5bc:	10d00034 	orhi	r3,r2,16384
  80f5c0:	e0bffe17 	ldw	r2,-8(fp)
  80f5c4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f5c8:	e03fff15 	stw	zero,-4(fp)
  80f5cc:	00001a06 	br	80f638 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f5d0:	e0bfff17 	ldw	r2,-4(fp)
  80f5d4:	10c00324 	muli	r3,r2,12
  80f5d8:	00802074 	movhi	r2,129
  80f5dc:	1885883a 	add	r2,r3,r2
  80f5e0:	10c3ec17 	ldw	r3,4016(r2)
  80f5e4:	e0bffe17 	ldw	r2,-8(fp)
  80f5e8:	10800017 	ldw	r2,0(r2)
  80f5ec:	18800f1e 	bne	r3,r2,80f62c <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f5f0:	e0bfff17 	ldw	r2,-4(fp)
  80f5f4:	10c00324 	muli	r3,r2,12
  80f5f8:	00802074 	movhi	r2,129
  80f5fc:	1885883a 	add	r2,r3,r2
  80f600:	1083ee17 	ldw	r2,4024(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f604:	1000090e 	bge	r2,zero,80f62c <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
  80f608:	e0bfff17 	ldw	r2,-4(fp)
  80f60c:	10c00324 	muli	r3,r2,12
  80f610:	00802074 	movhi	r2,129
  80f614:	1083ec04 	addi	r2,r2,4016
  80f618:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f61c:	e0fffe17 	ldw	r3,-8(fp)
  80f620:	18800226 	beq	r3,r2,80f62c <alt_file_locked+0x88>
    {
      return -EACCES;
  80f624:	00bffcc4 	movi	r2,-13
  80f628:	00000806 	br	80f64c <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
  80f62c:	e0bfff17 	ldw	r2,-4(fp)
  80f630:	10800044 	addi	r2,r2,1
  80f634:	e0bfff15 	stw	r2,-4(fp)
  80f638:	d0a00817 	ldw	r2,-32736(gp)
  80f63c:	1007883a 	mov	r3,r2
  80f640:	e0bfff17 	ldw	r2,-4(fp)
  80f644:	18bfe22e 	bgeu	r3,r2,80f5d0 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80f648:	0005883a 	mov	r2,zero
}
  80f64c:	e037883a 	mov	sp,fp
  80f650:	df000017 	ldw	fp,0(sp)
  80f654:	dec00104 	addi	sp,sp,4
  80f658:	f800283a 	ret

0080f65c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80f65c:	defff604 	addi	sp,sp,-40
  80f660:	dfc00915 	stw	ra,36(sp)
  80f664:	df000815 	stw	fp,32(sp)
  80f668:	df000804 	addi	fp,sp,32
  80f66c:	e13ffa15 	stw	r4,-24(fp)
  80f670:	e17ff915 	stw	r5,-28(fp)
  80f674:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80f678:	00bfffc4 	movi	r2,-1
  80f67c:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  80f680:	00bffb44 	movi	r2,-19
  80f684:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  80f688:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80f68c:	d1600604 	addi	r5,gp,-32744
  80f690:	e13ffa17 	ldw	r4,-24(fp)
  80f694:	080f9800 	call	80f980 <alt_find_dev>
  80f698:	e0bfff15 	stw	r2,-4(fp)
  80f69c:	e0bfff17 	ldw	r2,-4(fp)
  80f6a0:	1000051e 	bne	r2,zero,80f6b8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80f6a4:	e13ffa17 	ldw	r4,-24(fp)
  80f6a8:	080fa100 	call	80fa10 <alt_find_file>
  80f6ac:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  80f6b0:	00800044 	movi	r2,1
  80f6b4:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80f6b8:	e0bfff17 	ldw	r2,-4(fp)
  80f6bc:	10002926 	beq	r2,zero,80f764 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80f6c0:	e13fff17 	ldw	r4,-4(fp)
  80f6c4:	080fb180 	call	80fb18 <alt_get_fd>
  80f6c8:	e0bffe15 	stw	r2,-8(fp)
  80f6cc:	e0bffe17 	ldw	r2,-8(fp)
  80f6d0:	1000030e 	bge	r2,zero,80f6e0 <open+0x84>
    {
      status = index;
  80f6d4:	e0bffe17 	ldw	r2,-8(fp)
  80f6d8:	e0bffd15 	stw	r2,-12(fp)
  80f6dc:	00002306 	br	80f76c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  80f6e0:	e0bffe17 	ldw	r2,-8(fp)
  80f6e4:	10c00324 	muli	r3,r2,12
  80f6e8:	00802074 	movhi	r2,129
  80f6ec:	1083ec04 	addi	r2,r2,4016
  80f6f0:	1885883a 	add	r2,r3,r2
  80f6f4:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80f6f8:	e0fff917 	ldw	r3,-28(fp)
  80f6fc:	00900034 	movhi	r2,16384
  80f700:	10bfffc4 	addi	r2,r2,-1
  80f704:	1886703a 	and	r3,r3,r2
  80f708:	e0bffb17 	ldw	r2,-20(fp)
  80f70c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80f710:	e0bffc17 	ldw	r2,-16(fp)
  80f714:	1000051e 	bne	r2,zero,80f72c <open+0xd0>
  80f718:	e13ffb17 	ldw	r4,-20(fp)
  80f71c:	080f5a40 	call	80f5a4 <alt_file_locked>
  80f720:	e0bffd15 	stw	r2,-12(fp)
  80f724:	e0bffd17 	ldw	r2,-12(fp)
  80f728:	10001016 	blt	r2,zero,80f76c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80f72c:	e0bfff17 	ldw	r2,-4(fp)
  80f730:	10800317 	ldw	r2,12(r2)
  80f734:	10000826 	beq	r2,zero,80f758 <open+0xfc>
  80f738:	e0bfff17 	ldw	r2,-4(fp)
  80f73c:	10800317 	ldw	r2,12(r2)
  80f740:	e1fff817 	ldw	r7,-32(fp)
  80f744:	e1bff917 	ldw	r6,-28(fp)
  80f748:	e17ffa17 	ldw	r5,-24(fp)
  80f74c:	e13ffb17 	ldw	r4,-20(fp)
  80f750:	103ee83a 	callr	r2
  80f754:	00000106 	br	80f75c <open+0x100>
  80f758:	0005883a 	mov	r2,zero
  80f75c:	e0bffd15 	stw	r2,-12(fp)
  80f760:	00000206 	br	80f76c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80f764:	00bffb44 	movi	r2,-19
  80f768:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80f76c:	e0bffd17 	ldw	r2,-12(fp)
  80f770:	1000090e 	bge	r2,zero,80f798 <open+0x13c>
  {
    alt_release_fd (index);  
  80f774:	e13ffe17 	ldw	r4,-8(fp)
  80f778:	080df040 	call	80df04 <alt_release_fd>
    ALT_ERRNO = -status;
  80f77c:	080f5680 	call	80f568 <alt_get_errno>
  80f780:	1007883a 	mov	r3,r2
  80f784:	e0bffd17 	ldw	r2,-12(fp)
  80f788:	0085c83a 	sub	r2,zero,r2
  80f78c:	18800015 	stw	r2,0(r3)
    return -1;
  80f790:	00bfffc4 	movi	r2,-1
  80f794:	00000106 	br	80f79c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  80f798:	e0bffe17 	ldw	r2,-8(fp)
}
  80f79c:	e037883a 	mov	sp,fp
  80f7a0:	dfc00117 	ldw	ra,4(sp)
  80f7a4:	df000017 	ldw	fp,0(sp)
  80f7a8:	dec00204 	addi	sp,sp,8
  80f7ac:	f800283a 	ret

0080f7b0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80f7b0:	defffa04 	addi	sp,sp,-24
  80f7b4:	df000515 	stw	fp,20(sp)
  80f7b8:	df000504 	addi	fp,sp,20
  80f7bc:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  80f7c0:	0005303a 	rdctl	r2,status
  80f7c4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f7c8:	e0fffc17 	ldw	r3,-16(fp)
  80f7cc:	00bfff84 	movi	r2,-2
  80f7d0:	1884703a 	and	r2,r3,r2
  80f7d4:	1001703a 	wrctl	status,r2
  return context;
  80f7d8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f7dc:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  80f7e0:	e0bffb17 	ldw	r2,-20(fp)
  80f7e4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f7e8:	e0bffd17 	ldw	r2,-12(fp)
  80f7ec:	10800017 	ldw	r2,0(r2)
  80f7f0:	e0fffd17 	ldw	r3,-12(fp)
  80f7f4:	18c00117 	ldw	r3,4(r3)
  80f7f8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80f7fc:	e0bffd17 	ldw	r2,-12(fp)
  80f800:	10800117 	ldw	r2,4(r2)
  80f804:	e0fffd17 	ldw	r3,-12(fp)
  80f808:	18c00017 	ldw	r3,0(r3)
  80f80c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f810:	e0bffd17 	ldw	r2,-12(fp)
  80f814:	e0fffd17 	ldw	r3,-12(fp)
  80f818:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80f81c:	e0bffd17 	ldw	r2,-12(fp)
  80f820:	e0fffd17 	ldw	r3,-12(fp)
  80f824:	10c00015 	stw	r3,0(r2)
} 
  80f828:	0001883a 	nop
  80f82c:	e0bfff17 	ldw	r2,-4(fp)
  80f830:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80f834:	e0bffe17 	ldw	r2,-8(fp)
  80f838:	1001703a 	wrctl	status,r2
}
  80f83c:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  80f840:	0001883a 	nop
  80f844:	e037883a 	mov	sp,fp
  80f848:	df000017 	ldw	fp,0(sp)
  80f84c:	dec00104 	addi	sp,sp,4
  80f850:	f800283a 	ret

0080f854 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f854:	defffb04 	addi	sp,sp,-20
  80f858:	dfc00415 	stw	ra,16(sp)
  80f85c:	df000315 	stw	fp,12(sp)
  80f860:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f864:	d0a00c17 	ldw	r2,-32720(gp)
  80f868:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f86c:	d0a70e17 	ldw	r2,-25544(gp)
  80f870:	10800044 	addi	r2,r2,1
  80f874:	d0a70e15 	stw	r2,-25544(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f878:	00002e06 	br	80f934 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f87c:	e0bfff17 	ldw	r2,-4(fp)
  80f880:	10800017 	ldw	r2,0(r2)
  80f884:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f888:	e0bfff17 	ldw	r2,-4(fp)
  80f88c:	10800403 	ldbu	r2,16(r2)
  80f890:	10803fcc 	andi	r2,r2,255
  80f894:	10000426 	beq	r2,zero,80f8a8 <alt_tick+0x54>
  80f898:	d0a70e17 	ldw	r2,-25544(gp)
  80f89c:	1000021e 	bne	r2,zero,80f8a8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80f8a0:	e0bfff17 	ldw	r2,-4(fp)
  80f8a4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f8a8:	e0bfff17 	ldw	r2,-4(fp)
  80f8ac:	10800217 	ldw	r2,8(r2)
  80f8b0:	d0e70e17 	ldw	r3,-25544(gp)
  80f8b4:	18801d36 	bltu	r3,r2,80f92c <alt_tick+0xd8>
  80f8b8:	e0bfff17 	ldw	r2,-4(fp)
  80f8bc:	10800403 	ldbu	r2,16(r2)
  80f8c0:	10803fcc 	andi	r2,r2,255
  80f8c4:	1000191e 	bne	r2,zero,80f92c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80f8c8:	e0bfff17 	ldw	r2,-4(fp)
  80f8cc:	10800317 	ldw	r2,12(r2)
  80f8d0:	e0ffff17 	ldw	r3,-4(fp)
  80f8d4:	18c00517 	ldw	r3,20(r3)
  80f8d8:	1809883a 	mov	r4,r3
  80f8dc:	103ee83a 	callr	r2
  80f8e0:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f8e4:	e0bffd17 	ldw	r2,-12(fp)
  80f8e8:	1000031e 	bne	r2,zero,80f8f8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80f8ec:	e13fff17 	ldw	r4,-4(fp)
  80f8f0:	080f7b00 	call	80f7b0 <alt_alarm_stop>
  80f8f4:	00000d06 	br	80f92c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80f8f8:	e0bfff17 	ldw	r2,-4(fp)
  80f8fc:	10c00217 	ldw	r3,8(r2)
  80f900:	e0bffd17 	ldw	r2,-12(fp)
  80f904:	1887883a 	add	r3,r3,r2
  80f908:	e0bfff17 	ldw	r2,-4(fp)
  80f90c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f910:	e0bfff17 	ldw	r2,-4(fp)
  80f914:	10c00217 	ldw	r3,8(r2)
  80f918:	d0a70e17 	ldw	r2,-25544(gp)
  80f91c:	1880032e 	bgeu	r3,r2,80f92c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80f920:	e0bfff17 	ldw	r2,-4(fp)
  80f924:	00c00044 	movi	r3,1
  80f928:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80f92c:	e0bffe17 	ldw	r2,-8(fp)
  80f930:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f934:	e0ffff17 	ldw	r3,-4(fp)
  80f938:	d0a00c04 	addi	r2,gp,-32720
  80f93c:	18bfcf1e 	bne	r3,r2,80f87c <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80f940:	0001883a 	nop
}
  80f944:	0001883a 	nop
  80f948:	e037883a 	mov	sp,fp
  80f94c:	dfc00117 	ldw	ra,4(sp)
  80f950:	df000017 	ldw	fp,0(sp)
  80f954:	dec00204 	addi	sp,sp,8
  80f958:	f800283a 	ret

0080f95c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  80f95c:	deffff04 	addi	sp,sp,-4
  80f960:	df000015 	stw	fp,0(sp)
  80f964:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f968:	000170fa 	wrctl	ienable,zero
}
  80f96c:	0001883a 	nop
  80f970:	e037883a 	mov	sp,fp
  80f974:	df000017 	ldw	fp,0(sp)
  80f978:	dec00104 	addi	sp,sp,4
  80f97c:	f800283a 	ret

0080f980 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f980:	defffa04 	addi	sp,sp,-24
  80f984:	dfc00515 	stw	ra,20(sp)
  80f988:	df000415 	stw	fp,16(sp)
  80f98c:	df000404 	addi	fp,sp,16
  80f990:	e13ffd15 	stw	r4,-12(fp)
  80f994:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f998:	e0bffc17 	ldw	r2,-16(fp)
  80f99c:	10800017 	ldw	r2,0(r2)
  80f9a0:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f9a4:	e13ffd17 	ldw	r4,-12(fp)
  80f9a8:	0800a240 	call	800a24 <strlen>
  80f9ac:	10800044 	addi	r2,r2,1
  80f9b0:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f9b4:	00000d06 	br	80f9ec <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f9b8:	e0bfff17 	ldw	r2,-4(fp)
  80f9bc:	10800217 	ldw	r2,8(r2)
  80f9c0:	e0fffe17 	ldw	r3,-8(fp)
  80f9c4:	180d883a 	mov	r6,r3
  80f9c8:	e17ffd17 	ldw	r5,-12(fp)
  80f9cc:	1009883a 	mov	r4,r2
  80f9d0:	080fd280 	call	80fd28 <memcmp>
  80f9d4:	1000021e 	bne	r2,zero,80f9e0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f9d8:	e0bfff17 	ldw	r2,-4(fp)
  80f9dc:	00000706 	br	80f9fc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f9e0:	e0bfff17 	ldw	r2,-4(fp)
  80f9e4:	10800017 	ldw	r2,0(r2)
  80f9e8:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  80f9ec:	e0ffff17 	ldw	r3,-4(fp)
  80f9f0:	e0bffc17 	ldw	r2,-16(fp)
  80f9f4:	18bff01e 	bne	r3,r2,80f9b8 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  80f9f8:	0005883a 	mov	r2,zero
}
  80f9fc:	e037883a 	mov	sp,fp
  80fa00:	dfc00117 	ldw	ra,4(sp)
  80fa04:	df000017 	ldw	fp,0(sp)
  80fa08:	dec00204 	addi	sp,sp,8
  80fa0c:	f800283a 	ret

0080fa10 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80fa10:	defffb04 	addi	sp,sp,-20
  80fa14:	dfc00415 	stw	ra,16(sp)
  80fa18:	df000315 	stw	fp,12(sp)
  80fa1c:	df000304 	addi	fp,sp,12
  80fa20:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80fa24:	d0a00417 	ldw	r2,-32752(gp)
  80fa28:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80fa2c:	00003106 	br	80faf4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80fa30:	e0bfff17 	ldw	r2,-4(fp)
  80fa34:	10800217 	ldw	r2,8(r2)
  80fa38:	1009883a 	mov	r4,r2
  80fa3c:	0800a240 	call	800a24 <strlen>
  80fa40:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80fa44:	e0bfff17 	ldw	r2,-4(fp)
  80fa48:	10c00217 	ldw	r3,8(r2)
  80fa4c:	e0bffe17 	ldw	r2,-8(fp)
  80fa50:	10bfffc4 	addi	r2,r2,-1
  80fa54:	1885883a 	add	r2,r3,r2
  80fa58:	10800003 	ldbu	r2,0(r2)
  80fa5c:	10803fcc 	andi	r2,r2,255
  80fa60:	1080201c 	xori	r2,r2,128
  80fa64:	10bfe004 	addi	r2,r2,-128
  80fa68:	10800bd8 	cmpnei	r2,r2,47
  80fa6c:	1000031e 	bne	r2,zero,80fa7c <alt_find_file+0x6c>
    {
      len -= 1;
  80fa70:	e0bffe17 	ldw	r2,-8(fp)
  80fa74:	10bfffc4 	addi	r2,r2,-1
  80fa78:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80fa7c:	e0bffe17 	ldw	r2,-8(fp)
  80fa80:	e0fffd17 	ldw	r3,-12(fp)
  80fa84:	1885883a 	add	r2,r3,r2
  80fa88:	10800003 	ldbu	r2,0(r2)
  80fa8c:	10803fcc 	andi	r2,r2,255
  80fa90:	1080201c 	xori	r2,r2,128
  80fa94:	10bfe004 	addi	r2,r2,-128
  80fa98:	10800be0 	cmpeqi	r2,r2,47
  80fa9c:	1000081e 	bne	r2,zero,80fac0 <alt_find_file+0xb0>
  80faa0:	e0bffe17 	ldw	r2,-8(fp)
  80faa4:	e0fffd17 	ldw	r3,-12(fp)
  80faa8:	1885883a 	add	r2,r3,r2
  80faac:	10800003 	ldbu	r2,0(r2)
  80fab0:	10803fcc 	andi	r2,r2,255
  80fab4:	1080201c 	xori	r2,r2,128
  80fab8:	10bfe004 	addi	r2,r2,-128
  80fabc:	10000a1e 	bne	r2,zero,80fae8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80fac0:	e0bfff17 	ldw	r2,-4(fp)
  80fac4:	10800217 	ldw	r2,8(r2)
  80fac8:	e0fffe17 	ldw	r3,-8(fp)
  80facc:	180d883a 	mov	r6,r3
  80fad0:	e17ffd17 	ldw	r5,-12(fp)
  80fad4:	1009883a 	mov	r4,r2
  80fad8:	080fd280 	call	80fd28 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  80fadc:	1000021e 	bne	r2,zero,80fae8 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  80fae0:	e0bfff17 	ldw	r2,-4(fp)
  80fae4:	00000706 	br	80fb04 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80fae8:	e0bfff17 	ldw	r2,-4(fp)
  80faec:	10800017 	ldw	r2,0(r2)
  80faf0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  80faf4:	e0ffff17 	ldw	r3,-4(fp)
  80faf8:	d0a00404 	addi	r2,gp,-32752
  80fafc:	18bfcc1e 	bne	r3,r2,80fa30 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  80fb00:	0005883a 	mov	r2,zero
}
  80fb04:	e037883a 	mov	sp,fp
  80fb08:	dfc00117 	ldw	ra,4(sp)
  80fb0c:	df000017 	ldw	fp,0(sp)
  80fb10:	dec00204 	addi	sp,sp,8
  80fb14:	f800283a 	ret

0080fb18 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80fb18:	defffc04 	addi	sp,sp,-16
  80fb1c:	df000315 	stw	fp,12(sp)
  80fb20:	df000304 	addi	fp,sp,12
  80fb24:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  80fb28:	00bffa04 	movi	r2,-24
  80fb2c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80fb30:	e03fff15 	stw	zero,-4(fp)
  80fb34:	00001706 	br	80fb94 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
  80fb38:	e0bfff17 	ldw	r2,-4(fp)
  80fb3c:	10c00324 	muli	r3,r2,12
  80fb40:	00802074 	movhi	r2,129
  80fb44:	1885883a 	add	r2,r3,r2
  80fb48:	1083ec17 	ldw	r2,4016(r2)
  80fb4c:	10000e1e 	bne	r2,zero,80fb88 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
  80fb50:	e0bfff17 	ldw	r2,-4(fp)
  80fb54:	11000324 	muli	r4,r2,12
  80fb58:	e0fffd17 	ldw	r3,-12(fp)
  80fb5c:	00802074 	movhi	r2,129
  80fb60:	2085883a 	add	r2,r4,r2
  80fb64:	10c3ec15 	stw	r3,4016(r2)
      if (i > alt_max_fd)
  80fb68:	d0e00817 	ldw	r3,-32736(gp)
  80fb6c:	e0bfff17 	ldw	r2,-4(fp)
  80fb70:	1880020e 	bge	r3,r2,80fb7c <alt_get_fd+0x64>
      {
        alt_max_fd = i;
  80fb74:	e0bfff17 	ldw	r2,-4(fp)
  80fb78:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
  80fb7c:	e0bfff17 	ldw	r2,-4(fp)
  80fb80:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80fb84:	00000706 	br	80fba4 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
  80fb88:	e0bfff17 	ldw	r2,-4(fp)
  80fb8c:	10800044 	addi	r2,r2,1
  80fb90:	e0bfff15 	stw	r2,-4(fp)
  80fb94:	e0bfff17 	ldw	r2,-4(fp)
  80fb98:	10800810 	cmplti	r2,r2,32
  80fb9c:	103fe61e 	bne	r2,zero,80fb38 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  80fba0:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80fba4:	e0bffe17 	ldw	r2,-8(fp)
}
  80fba8:	e037883a 	mov	sp,fp
  80fbac:	df000017 	ldw	fp,0(sp)
  80fbb0:	dec00104 	addi	sp,sp,4
  80fbb4:	f800283a 	ret

0080fbb8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80fbb8:	defffb04 	addi	sp,sp,-20
  80fbbc:	df000415 	stw	fp,16(sp)
  80fbc0:	df000404 	addi	fp,sp,16
  80fbc4:	e13ffd15 	stw	r4,-12(fp)
  80fbc8:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80fbcc:	e0bffc17 	ldw	r2,-16(fp)
  80fbd0:	10820070 	cmpltui	r2,r2,2049
  80fbd4:	1000021e 	bne	r2,zero,80fbe0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80fbd8:	00820004 	movi	r2,2048
  80fbdc:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
  80fbe0:	e0fffd17 	ldw	r3,-12(fp)
  80fbe4:	e0bffc17 	ldw	r2,-16(fp)
  80fbe8:	1885883a 	add	r2,r3,r2
  80fbec:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80fbf0:	e0bffd17 	ldw	r2,-12(fp)
  80fbf4:	e0bfff15 	stw	r2,-4(fp)
  80fbf8:	00000506 	br	80fc10 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80fbfc:	e0bfff17 	ldw	r2,-4(fp)
  80fc00:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80fc04:	e0bfff17 	ldw	r2,-4(fp)
  80fc08:	10800804 	addi	r2,r2,32
  80fc0c:	e0bfff15 	stw	r2,-4(fp)
  80fc10:	e0ffff17 	ldw	r3,-4(fp)
  80fc14:	e0bffe17 	ldw	r2,-8(fp)
  80fc18:	18bff836 	bltu	r3,r2,80fbfc <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80fc1c:	e0bffd17 	ldw	r2,-12(fp)
  80fc20:	108007cc 	andi	r2,r2,31
  80fc24:	10000226 	beq	r2,zero,80fc30 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80fc28:	e0bfff17 	ldw	r2,-4(fp)
  80fc2c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80fc30:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80fc34:	0001883a 	nop
  80fc38:	e037883a 	mov	sp,fp
  80fc3c:	df000017 	ldw	fp,0(sp)
  80fc40:	dec00104 	addi	sp,sp,4
  80fc44:	f800283a 	ret

0080fc48 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  80fc48:	defffe04 	addi	sp,sp,-8
  80fc4c:	df000115 	stw	fp,4(sp)
  80fc50:	df000104 	addi	fp,sp,4
  80fc54:	e13fff15 	stw	r4,-4(fp)
  80fc58:	e0bfff17 	ldw	r2,-4(fp)
  80fc5c:	10bffe84 	addi	r2,r2,-6
  80fc60:	10c00428 	cmpgeui	r3,r2,16
  80fc64:	1800191e 	bne	r3,zero,80fccc <alt_exception_cause_generated_bad_addr+0x84>
  80fc68:	100690ba 	slli	r3,r2,2
  80fc6c:	00802074 	movhi	r2,129
  80fc70:	1885883a 	add	r2,r3,r2
  80fc74:	10bf1f17 	ldw	r2,-900(r2)
  80fc78:	1000683a 	jmp	r2
  80fc7c:	0080fcbc 	xorhi	r2,zero,1010
  80fc80:	0080fcbc 	xorhi	r2,zero,1010
  80fc84:	0080fccc 	andi	r2,zero,1011
  80fc88:	0080fccc 	andi	r2,zero,1011
  80fc8c:	0080fccc 	andi	r2,zero,1011
  80fc90:	0080fcbc 	xorhi	r2,zero,1010
  80fc94:	0080fcc4 	movi	r2,1011
  80fc98:	0080fccc 	andi	r2,zero,1011
  80fc9c:	0080fcbc 	xorhi	r2,zero,1010
  80fca0:	0080fcbc 	xorhi	r2,zero,1010
  80fca4:	0080fccc 	andi	r2,zero,1011
  80fca8:	0080fcbc 	xorhi	r2,zero,1010
  80fcac:	0080fcc4 	movi	r2,1011
  80fcb0:	0080fccc 	andi	r2,zero,1011
  80fcb4:	0080fccc 	andi	r2,zero,1011
  80fcb8:	0080fcbc 	xorhi	r2,zero,1010
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  80fcbc:	00800044 	movi	r2,1
  80fcc0:	00000306 	br	80fcd0 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  80fcc4:	0005883a 	mov	r2,zero
  80fcc8:	00000106 	br	80fcd0 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  80fccc:	0005883a 	mov	r2,zero
  }
}
  80fcd0:	e037883a 	mov	sp,fp
  80fcd4:	df000017 	ldw	fp,0(sp)
  80fcd8:	dec00104 	addi	sp,sp,4
  80fcdc:	f800283a 	ret

0080fce0 <atexit>:
  80fce0:	200b883a 	mov	r5,r4
  80fce4:	000f883a 	mov	r7,zero
  80fce8:	000d883a 	mov	r6,zero
  80fcec:	0009883a 	mov	r4,zero
  80fcf0:	080fda01 	jmpi	80fda0 <__register_exitproc>

0080fcf4 <exit>:
  80fcf4:	defffe04 	addi	sp,sp,-8
  80fcf8:	000b883a 	mov	r5,zero
  80fcfc:	dc000015 	stw	r16,0(sp)
  80fd00:	dfc00115 	stw	ra,4(sp)
  80fd04:	2021883a 	mov	r16,r4
  80fd08:	080fe300 	call	80fe30 <__call_exitprocs>
  80fd0c:	00802074 	movhi	r2,129
  80fd10:	11086417 	ldw	r4,8592(r2)
  80fd14:	20800f17 	ldw	r2,60(r4)
  80fd18:	10000126 	beq	r2,zero,80fd20 <exit+0x2c>
  80fd1c:	103ee83a 	callr	r2
  80fd20:	8009883a 	mov	r4,r16
  80fd24:	080d7800 	call	80d780 <_exit>

0080fd28 <memcmp>:
  80fd28:	30800130 	cmpltui	r2,r6,4
  80fd2c:	10000b1e 	bne	r2,zero,80fd5c <memcmp+0x34>
  80fd30:	2144b03a 	or	r2,r4,r5
  80fd34:	108000cc 	andi	r2,r2,3
  80fd38:	1000171e 	bne	r2,zero,80fd98 <memcmp+0x70>
  80fd3c:	20c00017 	ldw	r3,0(r4)
  80fd40:	28800017 	ldw	r2,0(r5)
  80fd44:	1880141e 	bne	r3,r2,80fd98 <memcmp+0x70>
  80fd48:	31bfff04 	addi	r6,r6,-4
  80fd4c:	30800128 	cmpgeui	r2,r6,4
  80fd50:	21000104 	addi	r4,r4,4
  80fd54:	29400104 	addi	r5,r5,4
  80fd58:	103ff81e 	bne	r2,zero,80fd3c <memcmp+0x14>
  80fd5c:	30bfffc4 	addi	r2,r6,-1
  80fd60:	30000b26 	beq	r6,zero,80fd90 <memcmp+0x68>
  80fd64:	11800044 	addi	r6,r2,1
  80fd68:	218d883a 	add	r6,r4,r6
  80fd6c:	00000106 	br	80fd74 <memcmp+0x4c>
  80fd70:	21800726 	beq	r4,r6,80fd90 <memcmp+0x68>
  80fd74:	20800003 	ldbu	r2,0(r4)
  80fd78:	28c00003 	ldbu	r3,0(r5)
  80fd7c:	21000044 	addi	r4,r4,1
  80fd80:	29400044 	addi	r5,r5,1
  80fd84:	10fffa26 	beq	r2,r3,80fd70 <memcmp+0x48>
  80fd88:	10c5c83a 	sub	r2,r2,r3
  80fd8c:	f800283a 	ret
  80fd90:	0005883a 	mov	r2,zero
  80fd94:	f800283a 	ret
  80fd98:	30bfffc4 	addi	r2,r6,-1
  80fd9c:	003ff106 	br	80fd64 <memcmp+0x3c>

0080fda0 <__register_exitproc>:
  80fda0:	00802074 	movhi	r2,129
  80fda4:	10c86417 	ldw	r3,8592(r2)
  80fda8:	18805217 	ldw	r2,328(r3)
  80fdac:	10001726 	beq	r2,zero,80fe0c <__register_exitproc+0x6c>
  80fdb0:	10c00117 	ldw	r3,4(r2)
  80fdb4:	1a000808 	cmpgei	r8,r3,32
  80fdb8:	40001b1e 	bne	r8,zero,80fe28 <__register_exitproc+0x88>
  80fdbc:	20000b26 	beq	r4,zero,80fdec <__register_exitproc+0x4c>
  80fdc0:	181090ba 	slli	r8,r3,2
  80fdc4:	02400044 	movi	r9,1
  80fdc8:	48d2983a 	sll	r9,r9,r3
  80fdcc:	1211883a 	add	r8,r2,r8
  80fdd0:	41802215 	stw	r6,136(r8)
  80fdd4:	11806217 	ldw	r6,392(r2)
  80fdd8:	21000098 	cmpnei	r4,r4,2
  80fddc:	324cb03a 	or	r6,r6,r9
  80fde0:	11806215 	stw	r6,392(r2)
  80fde4:	41c04215 	stw	r7,264(r8)
  80fde8:	20000b26 	beq	r4,zero,80fe18 <__register_exitproc+0x78>
  80fdec:	19000084 	addi	r4,r3,2
  80fdf0:	200890ba 	slli	r4,r4,2
  80fdf4:	18c00044 	addi	r3,r3,1
  80fdf8:	10c00115 	stw	r3,4(r2)
  80fdfc:	1105883a 	add	r2,r2,r4
  80fe00:	11400015 	stw	r5,0(r2)
  80fe04:	0005883a 	mov	r2,zero
  80fe08:	f800283a 	ret
  80fe0c:	18805304 	addi	r2,r3,332
  80fe10:	18805215 	stw	r2,328(r3)
  80fe14:	003fe606 	br	80fdb0 <__register_exitproc+0x10>
  80fe18:	11006317 	ldw	r4,396(r2)
  80fe1c:	2252b03a 	or	r9,r4,r9
  80fe20:	12406315 	stw	r9,396(r2)
  80fe24:	003ff106 	br	80fdec <__register_exitproc+0x4c>
  80fe28:	00bfffc4 	movi	r2,-1
  80fe2c:	f800283a 	ret

0080fe30 <__call_exitprocs>:
  80fe30:	defff704 	addi	sp,sp,-36
  80fe34:	00802074 	movhi	r2,129
  80fe38:	dcc00315 	stw	r19,12(sp)
  80fe3c:	14c86417 	ldw	r19,8592(r2)
  80fe40:	dc800215 	stw	r18,8(sp)
  80fe44:	dfc00815 	stw	ra,32(sp)
  80fe48:	9c805217 	ldw	r18,328(r19)
  80fe4c:	ddc00715 	stw	r23,28(sp)
  80fe50:	dd800615 	stw	r22,24(sp)
  80fe54:	dd400515 	stw	r21,20(sp)
  80fe58:	dd000415 	stw	r20,16(sp)
  80fe5c:	dc400115 	stw	r17,4(sp)
  80fe60:	dc000015 	stw	r16,0(sp)
  80fe64:	90001026 	beq	r18,zero,80fea8 <__call_exitprocs+0x78>
  80fe68:	202b883a 	mov	r21,r4
  80fe6c:	282d883a 	mov	r22,r5
  80fe70:	05000044 	movi	r20,1
  80fe74:	94000117 	ldw	r16,4(r18)
  80fe78:	847fffc4 	addi	r17,r16,-1
  80fe7c:	88000a16 	blt	r17,zero,80fea8 <__call_exitprocs+0x78>
  80fe80:	84000044 	addi	r16,r16,1
  80fe84:	802090ba 	slli	r16,r16,2
  80fe88:	9421883a 	add	r16,r18,r16
  80fe8c:	b0001126 	beq	r22,zero,80fed4 <__call_exitprocs+0xa4>
  80fe90:	80804017 	ldw	r2,256(r16)
  80fe94:	15800f26 	beq	r2,r22,80fed4 <__call_exitprocs+0xa4>
  80fe98:	8c7fffc4 	addi	r17,r17,-1
  80fe9c:	88bfffd8 	cmpnei	r2,r17,-1
  80fea0:	843fff04 	addi	r16,r16,-4
  80fea4:	103ff91e 	bne	r2,zero,80fe8c <__call_exitprocs+0x5c>
  80fea8:	dfc00817 	ldw	ra,32(sp)
  80feac:	ddc00717 	ldw	r23,28(sp)
  80feb0:	dd800617 	ldw	r22,24(sp)
  80feb4:	dd400517 	ldw	r21,20(sp)
  80feb8:	dd000417 	ldw	r20,16(sp)
  80febc:	dcc00317 	ldw	r19,12(sp)
  80fec0:	dc800217 	ldw	r18,8(sp)
  80fec4:	dc400117 	ldw	r17,4(sp)
  80fec8:	dc000017 	ldw	r16,0(sp)
  80fecc:	dec00904 	addi	sp,sp,36
  80fed0:	f800283a 	ret
  80fed4:	90800117 	ldw	r2,4(r18)
  80fed8:	81800017 	ldw	r6,0(r16)
  80fedc:	10bfffc4 	addi	r2,r2,-1
  80fee0:	14401726 	beq	r2,r17,80ff40 <__call_exitprocs+0x110>
  80fee4:	80000015 	stw	zero,0(r16)
  80fee8:	303feb26 	beq	r6,zero,80fe98 <__call_exitprocs+0x68>
  80feec:	a446983a 	sll	r3,r20,r17
  80fef0:	90806217 	ldw	r2,392(r18)
  80fef4:	95c00117 	ldw	r23,4(r18)
  80fef8:	1884703a 	and	r2,r3,r2
  80fefc:	1000081e 	bne	r2,zero,80ff20 <__call_exitprocs+0xf0>
  80ff00:	303ee83a 	callr	r6
  80ff04:	90c00117 	ldw	r3,4(r18)
  80ff08:	98805217 	ldw	r2,328(r19)
  80ff0c:	1dc0011e 	bne	r3,r23,80ff14 <__call_exitprocs+0xe4>
  80ff10:	90bfe126 	beq	r18,r2,80fe98 <__call_exitprocs+0x68>
  80ff14:	103fe426 	beq	r2,zero,80fea8 <__call_exitprocs+0x78>
  80ff18:	1025883a 	mov	r18,r2
  80ff1c:	003fd506 	br	80fe74 <__call_exitprocs+0x44>
  80ff20:	90806317 	ldw	r2,396(r18)
  80ff24:	81002017 	ldw	r4,128(r16)
  80ff28:	1886703a 	and	r3,r3,r2
  80ff2c:	1800061e 	bne	r3,zero,80ff48 <__call_exitprocs+0x118>
  80ff30:	200b883a 	mov	r5,r4
  80ff34:	a809883a 	mov	r4,r21
  80ff38:	303ee83a 	callr	r6
  80ff3c:	003ff106 	br	80ff04 <__call_exitprocs+0xd4>
  80ff40:	94400115 	stw	r17,4(r18)
  80ff44:	003fe806 	br	80fee8 <__call_exitprocs+0xb8>
  80ff48:	303ee83a 	callr	r6
  80ff4c:	003fed06 	br	80ff04 <__call_exitprocs+0xd4>
